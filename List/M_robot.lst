
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Wed Feb 26 19:14:13 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01e8 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0822 	JMP  _hall_sensor_detection1
00000c 940c 0831 	JMP  _hall_sensor_detection2
00000e 940c 083e 	JMP  _hall_sensor_detection3
000010 940c 0852 	JMP  _hall_sensor_detection4
000012 940c 060f 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0622 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 061b 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 064a 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 066b 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 0000
000169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016a 0000
00016b 0000
00016c 0000
00016d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0000
000174 0000
000175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000176 0000
000177 0000
000178 0000
000179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017a 0000
00017b 0000
00017c 0000
00017d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017e 0000      	.DB  0x0,0x0
                 _0x0:
00017f 253c
000180 3e64
000181 2500
000182 332e      	.DB  0x3C,0x25,0x64,0x3E,0x0,0x25,0x2E,0x33
000183 2c66
000184 2520
000185 332e
000186 2c66      	.DB  0x66,0x2C,0x20,0x25,0x2E,0x33,0x66,0x2C
000187 2520
000188 332e
000189 2c66
00018a 2520      	.DB  0x20,0x25,0x2E,0x33,0x66,0x2C,0x20,0x25
00018b 332e
00018c 2c66
00018d 2520
00018e 332e      	.DB  0x2E,0x33,0x66,0x2C,0x20,0x25,0x2E,0x33
00018f 2c66
000190 2520
000191 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1188): warning: .cseg .db misalignment - padding zero byte
000192 0000      	.DB  0x66,0x2C,0x20,0x25,0x64,0xA,0x0
                 _0x80003:
000193 0000
000194 0000
000195 0000
000196 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000197 0000
000198 0000
000199 0000
00019a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019b 0000
00019c 0000
00019d 0000
00019e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019f 0000
0001a0 0000
0001a1 0000
0001a2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a3 0000
0001a4 0000
0001a5 0000
0001a6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a7 0000
0001a8 0000
0001a9 0000
0001aa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ab 0000
0001ac 0000
0001ad 0000
0001ae 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001af 0000
0001b0 0000
0001b1 0000
0001b2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b3 0000
0001b4 0000
0001b5 0000
0001b6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b7 0000
0001b8 0000
0001b9 0000
0001ba 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001bb 0000
0001bc 0000
0001bd 0000
0001be 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001bf 0000
0001c0 0000
0001c1 0000
0001c2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c3 0000
0001c4 0000
0001c5 0000
0001c6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c7 0000
0001c8 0000
0001c9 0000
0001ca 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001cb 0000
0001cc 0000
0001cd 0000
0001ce 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001cf 0000
0001d0 0000
0001d1 0000
0001d2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d3 0000
0001d4 0000
0001d5 0000
0001d6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d7 0000
0001d8 0000
0001d9 0000
0001da 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001db 4e2d
0001dc 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1209): warning: .cseg .db misalignment - padding zero byte
0001dd 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1211): warning: .cseg .db misalignment - padding zero byte
0001de 0001      	.DB  0x1
                 _0x2080000:
0001df 4e2d
0001e0 4e41
0001e1 4900
0001e2 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1214): warning: .cseg .db misalignment - padding zero byte
0001e3 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001e4 0001      	.DW  0x01
0001e5 0588      	.DW  __seed_G104
0001e6 03bc      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001e7 0000      	.DW  0
                 
                 __RESET:
0001e8 94f8      	CLI
0001e9 27ee      	CLR  R30
0001ea bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001eb e0f1      	LDI  R31,1
0001ec bff5      	OUT  MCUCR,R31
0001ed bfe5      	OUT  MCUCR,R30
0001ee 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001f0 e1f8      	LDI  R31,0x18
0001f1 bdf1      	OUT  WDTCR,R31
0001f2 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001f3 e08d      	LDI  R24,(14-2)+1
0001f4 e0a2      	LDI  R26,2
0001f5 27bb      	CLR  R27
                 __CLEAR_REG:
0001f6 93ed      	ST   X+,R30
0001f7 958a      	DEC  R24
0001f8 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001f9 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001fa e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001fb e0a0      	LDI  R26,LOW(__SRAM_START)
0001fc e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001fd 93ed      	ST   X+,R30
0001fe 9701      	SBIW R24,1
0001ff f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000200 ece8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000201 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000202 9185      	LPM  R24,Z+
000203 9195      	LPM  R25,Z+
000204 9700      	SBIW R24,0
000205 f061      	BREQ __GLOBAL_INI_END
000206 91a5      	LPM  R26,Z+
000207 91b5      	LPM  R27,Z+
000208 9005      	LPM  R0,Z+
000209 9015      	LPM  R1,Z+
00020a 01bf      	MOVW R22,R30
00020b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00020c 9005      	LPM  R0,Z+
00020d 920d      	ST   X+,R0
00020e 9701      	SBIW R24,1
00020f f7e1      	BRNE __GLOBAL_INI_LOOP
000210 01fb      	MOVW R30,R22
000211 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000212 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000213 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000214 bfed      	OUT  SPL,R30
000215 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000216 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000217 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000218 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000219 940c 021b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define PREDICTION 0.3
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; 0000 001B     float a_buff;
                 ; 0000 001C     float v_buff;
                 ; 0000 001D 
                 ; 0000 001E     int velocity = 0;
                 ; 0000 001F     int angularV = 0;
                 ; 0000 0020     int velocity_R = 0;
                 ; 0000 0021     int velocity_L = 0;
                 ; 0000 0022     int del_ms = 0;
                 ; 0000 0023     float del_s = 0;
                 ; 0000 0024     int diameter = 0;
                 ; 0000 0025 
                 ; 0000 0026     int currentRPM_R = 0;
                 ; 0000 0027     int currentRPM_L = 0;
                 ; 0000 0028     float currentV_R = 0;
                 ; 0000 0029     float currentV_L = 0;
                 ; 0000 002A     int goal_current_R = 0;
                 ; 0000 002B     int goal_current_L = 0;
                 ; 0000 002C     float goal_currentV_R = 0;
                 ; 0000 002D     float goal_currentV_L = 0;
                 ; 0000 002E 
                 ; 0000 002F 
                 ; 0000 0030     float d_velocity = 0;
                 ; 0000 0031     float d_angularV = 0;
                 ; 0000 0032     float control_time = 0;
                 ; 0000 0033     float g_velocity = 0;
                 ; 0000 0034     float g_angularV = 0;
                 ; 0000 0035 
                 ; 0000 0036     float d_x = 0;
                 ; 0000 0037     float d_y = 0;
                 ; 0000 0038     float d_angular = 0;
                 ; 0000 0039     int d_angular_circula = 0;
                 ; 0000 003A     float g_x = 0;
                 ; 0000 003B     float g_y = 0;
                 ; 0000 003C     float g_angular = 0;
                 ; 0000 003D     int g_angular_circula = 0;
                 ; 0000 003E 
                 ; 0000 003F     float TIMER1_TIME = 0;
                 ; 0000 0040     float TIMER0_TIME = 0;
                 ; 0000 0041     float TIMER0_TIME_print = 0;
                 ; 0000 0042 
                 ; 0000 0043     char rootine_test = 0;
                 ; 0000 0044     char STOP_FLAG = 0;
                 ; 0000 0045 
                 ; 0000 0046 
                 ; 0000 0047     float hall_x = 0;
                 ; 0000 0048     float hall_y = 0;
                 ; 0000 0049     float hall_angular = 0;
                 ; 0000 004A     int hall_angular_circula = 0;
                 ; 0000 004B     float hall_velocity = 0;
                 ; 0000 004C 
                 ; 0000 004D     float motorR_distance = 0;
                 ; 0000 004E     float motorL_distance = 0;
                 ; 0000 004F     float a = 0;
                 ; 0000 0050 
                 ; 0000 0051     unsigned char BUFF[500] = {0,};
                 ; 0000 0052 
                 ; 0000 0053     usart1_init(bps_115200);
00021b 97ef      	SBIW R28,63
00021c 97eb      	SBIW R28,59
00021d 50d2      	SUBI R29,2
                +
00021e e782     +LDI R24 , LOW ( 626 )
00021f e092     +LDI R25 , HIGH ( 626 )
                 	__GETWRN 24,25,626
000220 e0a0      	LDI  R26,LOW(0)
000221 e0b0      	LDI  R27,HIGH(0)
000222 e8ec      	LDI  R30,LOW(_0x3*2)
000223 e0f0      	LDI  R31,HIGH(_0x3*2)
000224 940e 14d8 	CALL __INITLOCW
                 ;	a_buff -> Y+630
                 ;	v_buff -> Y+626
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+624
                 ;	del_ms -> Y+622
                 ;	del_s -> Y+618
                 ;	diameter -> Y+616
                 ;	currentRPM_R -> Y+614
                 ;	currentRPM_L -> Y+612
                 ;	currentV_R -> Y+608
                 ;	currentV_L -> Y+604
                 ;	goal_current_R -> Y+602
                 ;	goal_current_L -> Y+600
                 ;	goal_currentV_R -> Y+596
                 ;	goal_currentV_L -> Y+592
                 ;	d_velocity -> Y+588
                 ;	d_angularV -> Y+584
                 ;	control_time -> Y+580
                 ;	g_velocity -> Y+576
                 ;	g_angularV -> Y+572
                 ;	d_x -> Y+568
                 ;	d_y -> Y+564
                 ;	d_angular -> Y+560
                 ;	d_angular_circula -> Y+558
                 ;	g_x -> Y+554
                 ;	g_y -> Y+550
                 ;	g_angular -> Y+546
                 ;	g_angular_circula -> Y+544
                 ;	TIMER1_TIME -> Y+540
                 ;	TIMER0_TIME -> Y+536
                 ;	TIMER0_TIME_print -> Y+532
                 ;	rootine_test -> Y+531
                 ;	STOP_FLAG -> Y+530
                 ;	hall_x -> Y+526
                 ;	hall_y -> Y+522
                 ;	hall_angular -> Y+518
                 ;	hall_angular_circula -> Y+516
                 ;	hall_velocity -> Y+512
                 ;	motorR_distance -> Y+508
                 ;	motorL_distance -> Y+504
                 ;	a -> Y+500
                 ;	BUFF -> Y+0
                +
000226 e000     +LDI R16 , LOW ( 0 )
000227 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000228 e020     +LDI R18 , LOW ( 0 )
000229 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00022a e040     +LDI R20 , LOW ( 0 )
00022b e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00022c e0e7      	LDI  R30,LOW(7)
00022d e0f0      	LDI  R31,HIGH(7)
00022e 93fa      	ST   -Y,R31
00022f 93ea      	ST   -Y,R30
000230 940e 06a2 	CALL _usart1_init
                 ; 0000 0054     usart0_init(bps_115200);
000232 e0e7      	LDI  R30,LOW(7)
000233 e0f0      	LDI  R31,HIGH(7)
000234 93fa      	ST   -Y,R31
000235 93ea      	ST   -Y,R30
000236 940e 06ba 	CALL _usart0_init
                 ; 0000 0055     timer2_init();
000238 940e 0632 	CALL _timer2_init
                 ; 0000 0056     timer0_init();
00023a 940e 0638 	CALL _timer0_init
                 ; 0000 0057     timer1_init();
00023c 940e 063c 	CALL _timer1_init
                 ; 0000 0058     EXT_INT_init();
00023e 940e 0819 	CALL _EXT_INT_init
                 ; 0000 0059     SREG |= 0x80;
000240 9478      	BSET 7
                 ; 0000 005A     DDRB.1 = 1;
000241 9ab9      	SBI  0x17,1
                 ; 0000 005B     DDRB.2 = 1;
000242 9aba      	SBI  0x17,2
                 ; 0000 005C     DDRB.3 = 1;
000243 9abb      	SBI  0x17,3
                 ; 0000 005D     delay_ms(5000);
000244 e8e8      	LDI  R30,LOW(5000)
000245 e1f3      	LDI  R31,HIGH(5000)
000246 940e 0f08 	CALL SUBOPT_0x0
                 ; 0000 005E 
                 ; 0000 005F     TIMER0_OVERFLOW = 0;
000248 940e 0f0c 	CALL SUBOPT_0x1
                 ; 0000 0060     TCNT0 = 0;
                 ; 0000 0061 
                 ; 0000 0062     while(1)
                 _0xA:
                 ; 0000 0063     {
                 ; 0000 0064         if(CHECK_GETS)
00024a 91e0 057f 	LDS  R30,_CHECK_GETS
00024c 30e0      	CPI  R30,0
00024d f411      	BRNE PC+3
00024e 940c 02f4 	JMP _0xD
                 ; 0000 0065         {
                 ; 0000 0066             UCSR1B &= ~(1<<RXEN1);
000250 91e0 009a 	LDS  R30,154
000252 7eef      	ANDI R30,0xEF
000253 93e0 009a 	STS  154,R30
                 ; 0000 0067             // sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
                 ; 0000 0068             sscanf(VELOCITY_BUFF,"<%d>", &diameter);
000255 e6ea      	LDI  R30,LOW(_VELOCITY_BUFF)
000256 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000257 93fa      	ST   -Y,R31
000258 93ea      	ST   -Y,R30
                +
000259 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00025a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00025b 93fa      	ST   -Y,R31
00025c 93ea      	ST   -Y,R30
00025d 01fe      	MOVW R30,R28
00025e 59e4      	SUBI R30,LOW(-(620))
00025f 4ffd      	SBCI R31,HIGH(-(620))
000260 2766      	CLR  R22
000261 2777      	CLR  R23
000262 940e 14a9 	CALL __PUTPARD1
000264 e084      	LDI  R24,4
000265 940e 0d20 	CALL _sscanf
000267 9628      	ADIW R28,8
                 ; 0000 0069             // if(!del_ms){
                 ; 0000 006A             //     d_x = 0;
                 ; 0000 006B             //     d_y = 0;
                 ; 0000 006C             //     d_angular = 0;
                 ; 0000 006D             // }
                 ; 0000 006E             if((float)(0.5*0.75)<diameter)
000268 940e 0f13 	CALL SUBOPT_0x2
00026a 940e 13da 	CALL __CMPF12
00026c f490      	BRSH _0xE
                 ; 0000 006F             {
                 ; 0000 0070                 del_s = (float)((diameter + (0.75*0.5))/0.5);
00026d 940e 0f13 	CALL SUBOPT_0x2
00026f 940e 0f22 	CALL SUBOPT_0x3
                +
000271 01de     +MOVW R26 , R28
000272 59a6     +SUBI R26 , LOW ( - 618 )
000273 4fbd     +SBCI R27 , HIGH ( - 618 )
000274 93ed     +ST X + , R30
000275 93fd     +ST X + , R31
000276 936d     +ST X + , R22
000277 937c     +ST X , R23
                 	__PUTD1SX 618
                 ; 0000 0071                 del_s -= 0.75;
                +
000278 e0a0     +LDI R26 , LOW ( 0x3F400000 )
000279 e0b0     +LDI R27 , HIGH ( 0x3F400000 )
00027a e480     +LDI R24 , BYTE3 ( 0x3F400000 )
00027b e39f     +LDI R25 , BYTE4 ( 0x3F400000 )
                 	__GETD2N 0x3F400000
00027c 940e 12f0 	CALL __SUBF12
00027e c004      	RJMP _0x16
                 ; 0000 0072             }
                 ; 0000 0073             else del_s = (float)(((0.75*0.5)+diameter)/0.5);
                 _0xE:
00027f 940e 0f13 	CALL SUBOPT_0x2
000281 940e 0f22 	CALL SUBOPT_0x3
                 _0x16:
                +
000283 01de     +MOVW R26 , R28
000284 59a6     +SUBI R26 , LOW ( - 618 )
000285 4fbd     +SBCI R27 , HIGH ( - 618 )
000286 93ed     +ST X + , R30
000287 93fd     +ST X + , R31
000288 936d     +ST X + , R22
000289 937c     +ST X , R23
                 	__PUTD1SX 618
                 ; 0000 0074 
                 ; 0000 0075             del_ms = (int)(del_s*1000);
                +
00028a 01de     +MOVW R26 , R28
00028b 59a6     +SUBI R26 , LOW ( - 618 )
00028c 4fbd     +SBCI R27 , HIGH ( - 618 )
00028d 900d     +LD R0 , X +
00028e 901d     +LD R1 , X +
00028f 918d     +LD R24 , X +
000290 919c     +LD R25 , X
000291 01d0     +MOVW R26 , R0
                 	__GETD2SX 618
                +
000292 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000293 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000294 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000295 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000296 940e 0f2d 	CALL SUBOPT_0x4
                +
000298 01de     +MOVW R26 , R28
000299 59a2     +SUBI R26 , LOW ( - 622 )
00029a 4fbd     +SBCI R27 , HIGH ( - 622 )
00029b 93ed     +ST X + , R30
00029c 93fc     +ST X , R31
                 	__PUTW1SX 622
                 ; 0000 0076             // v_buff = (float)velocity/1000;
                 ; 0000 0077             v_buff = 0.5;
00029d 940e 0f32 	CALL SUBOPT_0x5
                +
00029f 01de     +MOVW R26 , R28
0002a0 58ae     +SUBI R26 , LOW ( - 626 )
0002a1 4fbd     +SBCI R27 , HIGH ( - 626 )
0002a2 93ed     +ST X + , R30
0002a3 93fd     +ST X + , R31
0002a4 936d     +ST X + , R22
0002a5 937c     +ST X , R23
                 	__PUTD1SX 626
                 ; 0000 0078             a_buff = (float)angularV/1000;
0002a6 01f9      	MOVW R30,R18
0002a7 940e 0f37 	CALL SUBOPT_0x6
                +
0002a9 e0e0     +LDI R30 , LOW ( 0x447A0000 )
0002aa e0f0     +LDI R31 , HIGH ( 0x447A0000 )
0002ab e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
0002ac e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
0002ad 940e 1395 	CALL __DIVF21
                +
0002af 01de     +MOVW R26 , R28
0002b0 58aa     +SUBI R26 , LOW ( - 630 )
0002b1 4fbd     +SBCI R27 , HIGH ( - 630 )
0002b2 93ed     +ST X + , R30
0002b3 93fd     +ST X + , R31
0002b4 936d     +ST X + , R22
0002b5 937c     +ST X , R23
                 	__PUTD1SX 630
                 ; 0000 0079 
                 ; 0000 007A             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
0002b6 01fe      	MOVW R30,R28
0002b7 58ee      	SUBI R30,LOW(-(626))
0002b8 4ffd      	SBCI R31,HIGH(-(626))
0002b9 93fa      	ST   -Y,R31
0002ba 93ea      	ST   -Y,R30
0002bb 01fe      	MOVW R30,R28
0002bc 58e8      	SUBI R30,LOW(-(632))
0002bd 4ffd      	SBCI R31,HIGH(-(632))
0002be 93fa      	ST   -Y,R31
0002bf 93ea      	ST   -Y,R30
0002c0 b7ed      	IN   R30,SPL
0002c1 b7fe      	IN   R31,SPH
0002c2 9731      	SBIW R30,1
0002c3 93fa      	ST   -Y,R31
0002c4 93ea      	ST   -Y,R30
0002c5 935f      	PUSH R21
0002c6 934f      	PUSH R20
0002c7 01fe      	MOVW R30,R28
0002c8 58ea      	SUBI R30,LOW(-(630))
0002c9 4ffd      	SBCI R31,HIGH(-(630))
0002ca 93fa      	ST   -Y,R31
0002cb 93ea      	ST   -Y,R30
0002cc 940e 074d 	CALL _Make_MSPEED
0002ce 914f      	POP  R20
0002cf 915f      	POP  R21
                 ; 0000 007B 
                 ; 0000 007C             oper_Disapath(velocity_R, velocity_L);
0002d0 935a      	ST   -Y,R21
0002d1 934a      	ST   -Y,R20
                +
0002d2 01fe     +MOVW R30 , R28
0002d3 58ee     +SUBI R30 , LOW ( - 626 )
0002d4 4ffd     +SBCI R31 , HIGH ( - 626 )
0002d5 9001     +LD R0 , Z +
0002d6 81f0     +LD R31 , Z
0002d7 2de0     +MOV R30 , R0
                 	__GETW1SX 626
0002d8 93fa      	ST   -Y,R31
0002d9 93ea      	ST   -Y,R30
0002da 940e 07c5 	CALL _oper_Disapath
                 ; 0000 007D 
                 ; 0000 007E             TIMER1_TIME = 0;
0002dc e0e0      	LDI  R30,LOW(0)
                +
0002dd 01de     +MOVW R26 , R28
0002de 5ea4     +SUBI R26 , LOW ( - 540 )
0002df 4fbd     +SBCI R27 , HIGH ( - 540 )
0002e0 93ed     +ST X + , R30
0002e1 93ed     +ST X + , R30
0002e2 93ed     +ST X + , R30
0002e3 93ec     +ST X , R30
                 	__CLRD1SX 540
                 ; 0000 007F             TIMER1_OVERFLOW = 0;
0002e4 940e 0f3e 	CALL SUBOPT_0x7
                 ; 0000 0080             TCNT1L = 0;
0002e6 bdec      	OUT  0x2C,R30
                 ; 0000 0081 
                 ; 0000 0082             // rootine_test = 1;
                 ; 0000 0083             STOP_FLAG = 1;
0002e7 e0e1      	LDI  R30,LOW(1)
                +
0002e8 01de     +MOVW R26 , R28
0002e9 5eae     +SUBI R26 , LOW ( - 530 )
0002ea 4fbd     +SBCI R27 , HIGH ( - 530 )
0002eb 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 0084             CHECK_GETS = 0;
0002ec e0e0      	LDI  R30,LOW(0)
0002ed 93e0 057f 	STS  _CHECK_GETS,R30
                 ; 0000 0085             UCSR1B |=(1<<RXEN1);
0002ef 91e0 009a 	LDS  R30,154
0002f1 61e0      	ORI  R30,0x10
0002f2 93e0 009a 	STS  154,R30
                 ; 0000 0086         }
                 ; 0000 0087 
                 ; 0000 0088         // if(rootine_test == 0)
                 ; 0000 0089         // {
                 ; 0000 008A         //     v_buff = 0.15;
                 ; 0000 008B         //     a_buff = 0;
                 ; 0000 008C         //     if(d_x<0.95)
                 ; 0000 008D         //     {
                 ; 0000 008E         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 008F         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 0090         //         STOP_FLAG = 1;
                 ; 0000 0091         //     }
                 ; 0000 0092         //     else{
                 ; 0000 0093         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 0094         //         if(TIMER0_TIME_print > a+2) rootine_test = 1;
                 ; 0000 0095         //         oper_Disapath(0,0);
                 ; 0000 0096         //         STOP_FLAG = 0;
                 ; 0000 0097         //     }
                 ; 0000 0098         // }
                 ; 0000 0099         // else if(rootine_test == 1)
                 ; 0000 009A         // {
                 ; 0000 009B         //     v_buff = 0;
                 ; 0000 009C         //     a_buff = -0.7;
                 ; 0000 009D         //     if(d_angular_circula<85)
                 ; 0000 009E         //     {
                 ; 0000 009F         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00A0         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00A1         //         STOP_FLAG = 1;
                 ; 0000 00A2         //     }
                 ; 0000 00A3         //     else{
                 ; 0000 00A4         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00A5         //         if(TIMER0_TIME_print > a+2) rootine_test = 2;
                 ; 0000 00A6         //         oper_Disapath(0,0);
                 ; 0000 00A7         //         STOP_FLAG = 0;
                 ; 0000 00A8         //     }
                 ; 0000 00A9         // }
                 ; 0000 00AA         // else if(rootine_test == 2)
                 ; 0000 00AB         // {
                 ; 0000 00AC         //     v_buff = 0.15;
                 ; 0000 00AD         //     a_buff = 0;
                 ; 0000 00AE         //     if(d_y<0.95)
                 ; 0000 00AF         //     {
                 ; 0000 00B0         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00B1         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00B2         //         STOP_FLAG = 1;
                 ; 0000 00B3         //     }
                 ; 0000 00B4         //     else{
                 ; 0000 00B5         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00B6         //         if(TIMER0_TIME_print > a+2) rootine_test = 3;
                 ; 0000 00B7         //         oper_Disapath(0,0);
                 ; 0000 00B8         //         STOP_FLAG = 0;
                 ; 0000 00B9         //     }
                 ; 0000 00BA         // }
                 ; 0000 00BB 
                 ; 0000 00BC         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
0002f4 91a0 0500 	LDS  R26,_TIMER1_OVERFLOW
0002f6 91b0 0501 	LDS  R27,_TIMER1_OVERFLOW+1
0002f8 efef      	LDI  R30,LOW(255)
0002f9 940e 1427 	CALL __MULB1W2U
0002fb 01df      	MOVW R26,R30
0002fc b5ec      	IN   R30,0x2C
0002fd 940e 0f44 	CALL SUBOPT_0x8
                +
0002ff edae     +LDI R26 , LOW ( 0x3D8E38DE )
000300 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
000301 e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
000302 e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
000303 940e 1347 	CALL __MULF12
                +
000305 01de     +MOVW R26 , R28
000306 5ea4     +SUBI R26 , LOW ( - 540 )
000307 4fbd     +SBCI R27 , HIGH ( - 540 )
000308 93ed     +ST X + , R30
000309 93fd     +ST X + , R31
00030a 936d     +ST X + , R22
00030b 937c     +ST X , R23
                 	__PUTD1SX 540
                 ; 0000 00BD 
                 ; 0000 00BE         if(del_ms<TIMER1_TIME)
                +
00030c 01de     +MOVW R26 , R28
00030d 59a2     +SUBI R26 , LOW ( - 622 )
00030e 4fbd     +SBCI R27 , HIGH ( - 622 )
00030f 900d     +LD R0 , X +
000310 91bc     +LD R27 , X
000311 2da0     +MOV R26 , R0
                 	__GETW2SX 622
000312 940e 141a 	CALL __CWD2
000314 940e 14b0 	CALL __CDF2
000316 940e 13da 	CALL __CMPF12
000318 f4e8      	BRSH _0x10
                 ; 0000 00BF         {
                 ; 0000 00C0             oper_Disapath(0,0);
000319 e0e0      	LDI  R30,LOW(0)
00031a e0f0      	LDI  R31,HIGH(0)
00031b 93fa      	ST   -Y,R31
00031c 93ea      	ST   -Y,R30
00031d 93fa      	ST   -Y,R31
00031e 93ea      	ST   -Y,R30
00031f 940e 07c5 	CALL _oper_Disapath
                 ; 0000 00C1             TIMER1_OVERFLOW = 0;
000321 940e 0f3e 	CALL SUBOPT_0x7
                 ; 0000 00C2             v_buff = 0;
                +
000323 01de     +MOVW R26 , R28
000324 58ae     +SUBI R26 , LOW ( - 626 )
000325 4fbd     +SBCI R27 , HIGH ( - 626 )
000326 93ed     +ST X + , R30
000327 93ed     +ST X + , R30
000328 93ed     +ST X + , R30
000329 93ec     +ST X , R30
                 	__CLRD1SX 626
                 ; 0000 00C3             a_buff = 0;
00032a e0e0      	LDI  R30,LOW(0)
                +
00032b 01de     +MOVW R26 , R28
00032c 58aa     +SUBI R26 , LOW ( - 630 )
00032d 4fbd     +SBCI R27 , HIGH ( - 630 )
00032e 93ed     +ST X + , R30
00032f 93ed     +ST X + , R30
000330 93ed     +ST X + , R30
000331 93ec     +ST X , R30
                 	__CLRD1SX 630
                 ; 0000 00C4             STOP_FLAG = 0;
                +
000332 01de     +MOVW R26 , R28
000333 5eae     +SUBI R26 , LOW ( - 530 )
000334 4fbd     +SBCI R27 , HIGH ( - 530 )
000335 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00C5         }
                 ; 0000 00C6         if(goal_currentV_R==0 && goal_currentV_L==0) TIMER0_TIME_print = 0;
                 _0x10:
000336 940e 0f4c 	CALL SUBOPT_0x9
000338 940e 14c4 	CALL __CPD02
00033a f429      	BRNE _0x12
00033b 940e 0f55 	CALL SUBOPT_0xA
00033d 940e 14c4 	CALL __CPD02
00033f f009      	BREQ _0x13
                 _0x12:
000340 c008      	RJMP _0x11
                 _0x13:
000341 e0e0      	LDI  R30,LOW(0)
                +
000342 01de     +MOVW R26 , R28
000343 5eac     +SUBI R26 , LOW ( - 532 )
000344 4fbd     +SBCI R27 , HIGH ( - 532 )
000345 93ed     +ST X + , R30
000346 93ed     +ST X + , R30
000347 93ed     +ST X + , R30
000348 93ec     +ST X , R30
                 	__CLRD1SX 532
                 ; 0000 00C7 
                 ; 0000 00C8         delay_ms(5);
                 _0x11:
000349 940e 0f5e 	CALL SUBOPT_0xB
                 ; 0000 00C9         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
00034b e0e1      	LDI  R30,LOW(1)
00034c 940e 0f61 	CALL SUBOPT_0xC
                 ; 0000 00CA         delay_ms(5);
                 ; 0000 00CB         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
00034e 940e 0f6b 	CALL SUBOPT_0xD
000350 01fe      	MOVW R30,R28
000351 5ae3      	SUBI R30,LOW(-(605))
000352 4ffd      	SBCI R31,HIGH(-(605))
000353 93fa      	ST   -Y,R31
000354 93ea      	ST   -Y,R30
000355 940e 07e3 	CALL _get_RPM
                +
000357 01de     +MOVW R26 , R28
000358 59aa     +SUBI R26 , LOW ( - 614 )
000359 4fbd     +SBCI R27 , HIGH ( - 614 )
00035a 93ed     +ST X + , R30
00035b 93fc     +ST X , R31
                 	__PUTW1SX 614
                 ; 0000 00CC         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
00035c e0e2      	LDI  R30,LOW(2)
00035d 940e 0f61 	CALL SUBOPT_0xC
                 ; 0000 00CD         delay_ms(5);
                 ; 0000 00CE         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
00035f 940e 0f6b 	CALL SUBOPT_0xD
000361 01fe      	MOVW R30,R28
000362 5ae5      	SUBI R30,LOW(-(603))
000363 4ffd      	SBCI R31,HIGH(-(603))
000364 93fa      	ST   -Y,R31
000365 93ea      	ST   -Y,R30
000366 940e 07e3 	CALL _get_RPM
000368 940e 13fe 	CALL __ANEGW1
                +
00036a 01de     +MOVW R26 , R28
00036b 59ac     +SUBI R26 , LOW ( - 612 )
00036c 4fbd     +SBCI R27 , HIGH ( - 612 )
00036d 93ed     +ST X + , R30
00036e 93fc     +ST X , R31
                 	__PUTW1SX 612
                 ; 0000 00CF 
                 ; 0000 00D0         currentV_R = (float)(currentRPM_R/(60/(Pi*0.125)*Gearratio));
                +
00036f 01fe     +MOVW R30 , R28
000370 59ea     +SUBI R30 , LOW ( - 614 )
000371 4ffd     +SBCI R31 , HIGH ( - 614 )
000372 9001     +LD R0 , Z +
000373 81f0     +LD R31 , Z
000374 2de0     +MOV R30 , R0
                 	__GETW1SX 614
000375 940e 0f37 	CALL SUBOPT_0x6
000377 940e 0f73 	CALL SUBOPT_0xE
                +
000379 01de     +MOVW R26 , R28
00037a 5aa0     +SUBI R26 , LOW ( - 608 )
00037b 4fbd     +SBCI R27 , HIGH ( - 608 )
00037c 93ed     +ST X + , R30
00037d 93fd     +ST X + , R31
00037e 936d     +ST X + , R22
00037f 937c     +ST X , R23
                 	__PUTD1SX 608
                 ; 0000 00D1         currentV_L = (float)(currentRPM_L/(60/(Pi*0.125)*Gearratio));
                +
000380 01fe     +MOVW R30 , R28
000381 59ec     +SUBI R30 , LOW ( - 612 )
000382 4ffd     +SBCI R31 , HIGH ( - 612 )
000383 9001     +LD R0 , Z +
000384 81f0     +LD R31 , Z
000385 2de0     +MOV R30 , R0
                 	__GETW1SX 612
000386 940e 0f37 	CALL SUBOPT_0x6
000388 940e 0f73 	CALL SUBOPT_0xE
                +
00038a 01de     +MOVW R26 , R28
00038b 5aa4     +SUBI R26 , LOW ( - 604 )
00038c 4fbd     +SBCI R27 , HIGH ( - 604 )
00038d 93ed     +ST X + , R30
00038e 93fd     +ST X + , R31
00038f 936d     +ST X + , R22
000390 937c     +ST X , R23
                 	__PUTD1SX 604
                 ; 0000 00D2 
                 ; 0000 00D3         goal_currentV_R = (float)(goal_current_R/(60/(Pi*0.125)*Gearratio));
                +
000391 01fe     +MOVW R30 , R28
000392 5ae6     +SUBI R30 , LOW ( - 602 )
000393 4ffd     +SBCI R31 , HIGH ( - 602 )
000394 9001     +LD R0 , Z +
000395 81f0     +LD R31 , Z
000396 2de0     +MOV R30 , R0
                 	__GETW1SX 602
000397 940e 0f37 	CALL SUBOPT_0x6
000399 940e 0f73 	CALL SUBOPT_0xE
                +
00039b 01de     +MOVW R26 , R28
00039c 5aac     +SUBI R26 , LOW ( - 596 )
00039d 4fbd     +SBCI R27 , HIGH ( - 596 )
00039e 93ed     +ST X + , R30
00039f 93fd     +ST X + , R31
0003a0 936d     +ST X + , R22
0003a1 937c     +ST X , R23
                 	__PUTD1SX 596
                 ; 0000 00D4         goal_currentV_L = (float)(-goal_current_L/(60/(Pi*0.125)*Gearratio));
                +
0003a2 01fe     +MOVW R30 , R28
0003a3 5ae8     +SUBI R30 , LOW ( - 600 )
0003a4 4ffd     +SBCI R31 , HIGH ( - 600 )
0003a5 9001     +LD R0 , Z +
0003a6 81f0     +LD R31 , Z
0003a7 2de0     +MOV R30 , R0
                 	__GETW1SX 600
0003a8 940e 13fe 	CALL __ANEGW1
0003aa 940e 0f37 	CALL SUBOPT_0x6
0003ac 940e 0f73 	CALL SUBOPT_0xE
                +
0003ae 01de     +MOVW R26 , R28
0003af 5ba0     +SUBI R26 , LOW ( - 592 )
0003b0 4fbd     +SBCI R27 , HIGH ( - 592 )
0003b1 93ed     +ST X + , R30
0003b2 93fd     +ST X + , R31
0003b3 936d     +ST X + , R22
0003b4 937c     +ST X , R23
                 	__PUTD1SX 592
                 ; 0000 00D5 
                 ; 0000 00D6         d_velocity = (currentV_R + currentV_L)/2;
                +
0003b5 01fe     +MOVW R30 , R28
0003b6 5ae4     +SUBI R30 , LOW ( - 604 )
0003b7 4ffd     +SBCI R31 , HIGH ( - 604 )
0003b8 9001     +LD R0 , Z +
0003b9 9011     +LD R1 , Z +
0003ba 9161     +LD R22 , Z +
0003bb 8170     +LD R23 , Z
0003bc 01f0     +MOVW R30 , R0
                 	__GETD1SX 604
                +
0003bd 01de     +MOVW R26 , R28
0003be 5aa0     +SUBI R26 , LOW ( - 608 )
0003bf 4fbd     +SBCI R27 , HIGH ( - 608 )
0003c0 900d     +LD R0 , X +
0003c1 901d     +LD R1 , X +
0003c2 918d     +LD R24 , X +
0003c3 919c     +LD R25 , X
0003c4 01d0     +MOVW R26 , R0
                 	__GETD2SX 608
0003c5 940e 0f7a 	CALL SUBOPT_0xF
                +
0003c7 01de     +MOVW R26 , R28
0003c8 5ba4     +SUBI R26 , LOW ( - 588 )
0003c9 4fbd     +SBCI R27 , HIGH ( - 588 )
0003ca 93ed     +ST X + , R30
0003cb 93fd     +ST X + , R31
0003cc 936d     +ST X + , R22
0003cd 937c     +ST X , R23
                 	__PUTD1SX 588
                 ; 0000 00D7         d_angularV = (currentV_R-currentV_L)/Length;
                +
0003ce 01de     +MOVW R26 , R28
0003cf 5aa4     +SUBI R26 , LOW ( - 604 )
0003d0 4fbd     +SBCI R27 , HIGH ( - 604 )
0003d1 900d     +LD R0 , X +
0003d2 901d     +LD R1 , X +
0003d3 918d     +LD R24 , X +
0003d4 919c     +LD R25 , X
0003d5 01d0     +MOVW R26 , R0
                 	__GETD2SX 604
                +
0003d6 01fe     +MOVW R30 , R28
0003d7 5ae0     +SUBI R30 , LOW ( - 608 )
0003d8 4ffd     +SBCI R31 , HIGH ( - 608 )
0003d9 9001     +LD R0 , Z +
0003da 9011     +LD R1 , Z +
0003db 9161     +LD R22 , Z +
0003dc 8170     +LD R23 , Z
0003dd 01f0     +MOVW R30 , R0
                 	__GETD1SX 608
0003de 940e 0f85 	CALL SUBOPT_0x10
                +
0003e0 01de     +MOVW R26 , R28
0003e1 5ba8     +SUBI R26 , LOW ( - 584 )
0003e2 4fbd     +SBCI R27 , HIGH ( - 584 )
0003e3 93ed     +ST X + , R30
0003e4 93fd     +ST X + , R31
0003e5 936d     +ST X + , R22
0003e6 937c     +ST X , R23
                 	__PUTD1SX 584
                 ; 0000 00D8         g_velocity = (goal_currentV_R+goal_currentV_L)/2;
                +
0003e7 01fe     +MOVW R30 , R28
0003e8 5be0     +SUBI R30 , LOW ( - 592 )
0003e9 4ffd     +SBCI R31 , HIGH ( - 592 )
0003ea 9001     +LD R0 , Z +
0003eb 9011     +LD R1 , Z +
0003ec 9161     +LD R22 , Z +
0003ed 8170     +LD R23 , Z
0003ee 01f0     +MOVW R30 , R0
                 	__GETD1SX 592
0003ef 940e 0f4c 	CALL SUBOPT_0x9
0003f1 940e 0f7a 	CALL SUBOPT_0xF
                +
0003f3 01de     +MOVW R26 , R28
0003f4 5ca0     +SUBI R26 , LOW ( - 576 )
0003f5 4fbd     +SBCI R27 , HIGH ( - 576 )
0003f6 93ed     +ST X + , R30
0003f7 93fd     +ST X + , R31
0003f8 936d     +ST X + , R22
0003f9 937c     +ST X , R23
                 	__PUTD1SX 576
                 ; 0000 00D9         g_angularV = (goal_currentV_R-goal_currentV_L)/Length;
0003fa 940e 0f55 	CALL SUBOPT_0xA
                +
0003fc 01fe     +MOVW R30 , R28
0003fd 5aec     +SUBI R30 , LOW ( - 596 )
0003fe 4ffd     +SBCI R31 , HIGH ( - 596 )
0003ff 9001     +LD R0 , Z +
000400 9011     +LD R1 , Z +
000401 9161     +LD R22 , Z +
000402 8170     +LD R23 , Z
000403 01f0     +MOVW R30 , R0
                 	__GETD1SX 596
000404 940e 0f85 	CALL SUBOPT_0x10
                +
000406 01de     +MOVW R26 , R28
000407 5ca4     +SUBI R26 , LOW ( - 572 )
000408 4fbd     +SBCI R27 , HIGH ( - 572 )
000409 93ed     +ST X + , R30
00040a 93fd     +ST X + , R31
00040b 936d     +ST X + , R22
00040c 937c     +ST X , R23
                 	__PUTD1SX 572
                 ; 0000 00DA 
                 ; 0000 00DB         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
00040d 91a0 0568 	LDS  R26,_TIMER0_OVERFLOW
00040f 91b0 0569 	LDS  R27,_TIMER0_OVERFLOW+1
000411 efef      	LDI  R30,LOW(255)
000412 940e 1427 	CALL __MULB1W2U
000414 01df      	MOVW R26,R30
000415 b7e2      	IN   R30,0x32
000416 940e 0f44 	CALL SUBOPT_0x8
                +
000418 eaae     +LDI R26 , LOW ( 0x3891A2AE )
000419 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
00041a e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
00041b e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
00041c 940e 1347 	CALL __MULF12
                +
00041e 01de     +MOVW R26 , R28
00041f 5bac     +SUBI R26 , LOW ( - 580 )
000420 4fbd     +SBCI R27 , HIGH ( - 580 )
000421 93ed     +ST X + , R30
000422 93fd     +ST X + , R31
000423 936d     +ST X + , R22
000424 937c     +ST X , R23
                 	__PUTD1SX 580
                 ; 0000 00DC         TIMER0_OVERFLOW = 0;
000425 940e 0f0c 	CALL SUBOPT_0x1
                 ; 0000 00DD         TCNT0 = 0;
                 ; 0000 00DE 
                 ; 0000 00DF         d_angular += control_time*d_angularV;
000427 940e 0f90 	CALL SUBOPT_0x11
000429 940e 0f99 	CALL SUBOPT_0x12
00042b 940e 0fa4 	CALL SUBOPT_0x13
00042d 940e 12f7 	CALL __ADDF12
                +
00042f 01de     +MOVW R26 , R28
000430 5da0     +SUBI R26 , LOW ( - 560 )
000431 4fbd     +SBCI R27 , HIGH ( - 560 )
000432 93ed     +ST X + , R30
000433 93fd     +ST X + , R31
000434 936d     +ST X + , R22
000435 937c     +ST X , R23
                 	__PUTD1SX 560
                 ; 0000 00E0         d_x += d_velocity*control_time*cos(d_angular);
000436 940e 0fad 	CALL SUBOPT_0x14
000438 937f      	PUSH R23
000439 936f      	PUSH R22
00043a 93ff      	PUSH R31
00043b 93ef      	PUSH R30
00043c 940e 0fc0 	CALL SUBOPT_0x15
00043e 940e 0e1f 	CALL _cos
000440 91af      	POP  R26
000441 91bf      	POP  R27
000442 918f      	POP  R24
000443 919f      	POP  R25
000444 940e 1347 	CALL __MULF12
                +
000446 01de     +MOVW R26 , R28
000447 5ca8     +SUBI R26 , LOW ( - 568 )
000448 4fbd     +SBCI R27 , HIGH ( - 568 )
000449 900d     +LD R0 , X +
00044a 901d     +LD R1 , X +
00044b 918d     +LD R24 , X +
00044c 919c     +LD R25 , X
00044d 01d0     +MOVW R26 , R0
                 	__GETD2SX 568
00044e 940e 12f7 	CALL __ADDF12
                +
000450 01de     +MOVW R26 , R28
000451 5ca8     +SUBI R26 , LOW ( - 568 )
000452 4fbd     +SBCI R27 , HIGH ( - 568 )
000453 93ed     +ST X + , R30
000454 93fd     +ST X + , R31
000455 936d     +ST X + , R22
000456 937c     +ST X , R23
                 	__PUTD1SX 568
                 ; 0000 00E1         d_y += d_velocity*control_time*sin(d_angular);
000457 940e 0fad 	CALL SUBOPT_0x14
000459 937f      	PUSH R23
00045a 936f      	PUSH R22
00045b 93ff      	PUSH R31
00045c 93ef      	PUSH R30
00045d 940e 0fc0 	CALL SUBOPT_0x15
00045f 940e 0d94 	CALL _sin
000461 91af      	POP  R26
000462 91bf      	POP  R27
000463 918f      	POP  R24
000464 919f      	POP  R25
000465 940e 1347 	CALL __MULF12
                +
000467 01de     +MOVW R26 , R28
000468 5cac     +SUBI R26 , LOW ( - 564 )
000469 4fbd     +SBCI R27 , HIGH ( - 564 )
00046a 900d     +LD R0 , X +
00046b 901d     +LD R1 , X +
00046c 918d     +LD R24 , X +
00046d 919c     +LD R25 , X
00046e 01d0     +MOVW R26 , R0
                 	__GETD2SX 564
00046f 940e 12f7 	CALL __ADDF12
                +
000471 01de     +MOVW R26 , R28
000472 5cac     +SUBI R26 , LOW ( - 564 )
000473 4fbd     +SBCI R27 , HIGH ( - 564 )
000474 93ed     +ST X + , R30
000475 93fd     +ST X + , R31
000476 936d     +ST X + , R22
000477 937c     +ST X , R23
                 	__PUTD1SX 564
                 ; 0000 00E2         d_angular_circula = (int)(d_angular*Circular);
000478 940e 0fa4 	CALL SUBOPT_0x13
00047a 940e 0fcb 	CALL SUBOPT_0x16
                +
00047c 01de     +MOVW R26 , R28
00047d 5da2     +SUBI R26 , LOW ( - 558 )
00047e 4fbd     +SBCI R27 , HIGH ( - 558 )
00047f 93ed     +ST X + , R30
000480 93fc     +ST X , R31
                 	__PUTW1SX 558
                 ; 0000 00E3 
                 ; 0000 00E4         g_angular += control_time*g_angularV;
                +
000481 01fe     +MOVW R30 , R28
000482 5ce4     +SUBI R30 , LOW ( - 572 )
000483 4ffd     +SBCI R31 , HIGH ( - 572 )
000484 9001     +LD R0 , Z +
000485 9011     +LD R1 , Z +
000486 9161     +LD R22 , Z +
000487 8170     +LD R23 , Z
000488 01f0     +MOVW R30 , R0
                 	__GETD1SX 572
000489 940e 0f99 	CALL SUBOPT_0x12
00048b 940e 0fd0 	CALL SUBOPT_0x17
00048d 940e 12f7 	CALL __ADDF12
                +
00048f 01de     +MOVW R26 , R28
000490 5dae     +SUBI R26 , LOW ( - 546 )
000491 4fbd     +SBCI R27 , HIGH ( - 546 )
000492 93ed     +ST X + , R30
000493 93fd     +ST X + , R31
000494 936d     +ST X + , R22
000495 937c     +ST X , R23
                 	__PUTD1SX 546
                 ; 0000 00E5         g_x += g_velocity*control_time*cos(g_angular);
000496 940e 0fd9 	CALL SUBOPT_0x18
000498 937f      	PUSH R23
000499 936f      	PUSH R22
00049a 93ff      	PUSH R31
00049b 93ef      	PUSH R30
00049c 940e 0fec 	CALL SUBOPT_0x19
00049e 940e 0e1f 	CALL _cos
0004a0 91af      	POP  R26
0004a1 91bf      	POP  R27
0004a2 918f      	POP  R24
0004a3 919f      	POP  R25
0004a4 940e 1347 	CALL __MULF12
                +
0004a6 01de     +MOVW R26 , R28
0004a7 5da6     +SUBI R26 , LOW ( - 554 )
0004a8 4fbd     +SBCI R27 , HIGH ( - 554 )
0004a9 900d     +LD R0 , X +
0004aa 901d     +LD R1 , X +
0004ab 918d     +LD R24 , X +
0004ac 919c     +LD R25 , X
0004ad 01d0     +MOVW R26 , R0
                 	__GETD2SX 554
0004ae 940e 12f7 	CALL __ADDF12
                +
0004b0 01de     +MOVW R26 , R28
0004b1 5da6     +SUBI R26 , LOW ( - 554 )
0004b2 4fbd     +SBCI R27 , HIGH ( - 554 )
0004b3 93ed     +ST X + , R30
0004b4 93fd     +ST X + , R31
0004b5 936d     +ST X + , R22
0004b6 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 00E6         g_y += g_velocity*control_time*sin(g_angular);
0004b7 940e 0fd9 	CALL SUBOPT_0x18
0004b9 937f      	PUSH R23
0004ba 936f      	PUSH R22
0004bb 93ff      	PUSH R31
0004bc 93ef      	PUSH R30
0004bd 940e 0fec 	CALL SUBOPT_0x19
0004bf 940e 0d94 	CALL _sin
0004c1 91af      	POP  R26
0004c2 91bf      	POP  R27
0004c3 918f      	POP  R24
0004c4 919f      	POP  R25
0004c5 940e 1347 	CALL __MULF12
                +
0004c7 01de     +MOVW R26 , R28
0004c8 5daa     +SUBI R26 , LOW ( - 550 )
0004c9 4fbd     +SBCI R27 , HIGH ( - 550 )
0004ca 900d     +LD R0 , X +
0004cb 901d     +LD R1 , X +
0004cc 918d     +LD R24 , X +
0004cd 919c     +LD R25 , X
0004ce 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
0004cf 940e 12f7 	CALL __ADDF12
                +
0004d1 01de     +MOVW R26 , R28
0004d2 5daa     +SUBI R26 , LOW ( - 550 )
0004d3 4fbd     +SBCI R27 , HIGH ( - 550 )
0004d4 93ed     +ST X + , R30
0004d5 93fd     +ST X + , R31
0004d6 936d     +ST X + , R22
0004d7 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 00E7         g_angular_circula = (int)(g_angular*Circular);
0004d8 940e 0fd0 	CALL SUBOPT_0x17
0004da 940e 0fcb 	CALL SUBOPT_0x16
                +
0004dc 01de     +MOVW R26 , R28
0004dd 5ea0     +SUBI R26 , LOW ( - 544 )
0004de 4fbd     +SBCI R27 , HIGH ( - 544 )
0004df 93ed     +ST X + , R30
0004e0 93fc     +ST X , R31
                 	__PUTW1SX 544
                 ; 0000 00E8 
                 ; 0000 00E9         // motorR_distance = (float)(MOTORR_HALL*0.1325*Pi/160);
                 ; 0000 00EA         // motorL_distance = (float)(MOTORL_HALL*0.1325*Pi/160);
                 ; 0000 00EB         motorR_distance = (float)(MOTORR_HALL*0.125*Pi/160);
0004e1 91e0 0580 	LDS  R30,_MOTORR_HALL
0004e3 91f0 0581 	LDS  R31,_MOTORR_HALL+1
0004e5 9160 0582 	LDS  R22,_MOTORR_HALL+2
0004e7 9170 0583 	LDS  R23,_MOTORR_HALL+3
0004e9 940e 0ff7 	CALL SUBOPT_0x1A
                +
0004eb 01de     +MOVW R26 , R28
0004ec 50a4     +SUBI R26 , LOW ( - 508 )
0004ed 4fbe     +SBCI R27 , HIGH ( - 508 )
0004ee 93ed     +ST X + , R30
0004ef 93fd     +ST X + , R31
0004f0 936d     +ST X + , R22
0004f1 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 00EC         motorL_distance = (float)(MOTORL_HALL*0.125*Pi/160);
0004f2 91e0 0584 	LDS  R30,_MOTORL_HALL
0004f4 91f0 0585 	LDS  R31,_MOTORL_HALL+1
0004f6 9160 0586 	LDS  R22,_MOTORL_HALL+2
0004f8 9170 0587 	LDS  R23,_MOTORL_HALL+3
0004fa 940e 0ff7 	CALL SUBOPT_0x1A
                +
0004fc 01de     +MOVW R26 , R28
0004fd 50a8     +SUBI R26 , LOW ( - 504 )
0004fe 4fbe     +SBCI R27 , HIGH ( - 504 )
0004ff 93ed     +ST X + , R30
000500 93fd     +ST X + , R31
000501 936d     +ST X + , R22
000502 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 00ED 
                 ; 0000 00EE         TIMER0_TIME += control_time;
                +
000503 01fe     +MOVW R30 , R28
000504 5bec     +SUBI R30 , LOW ( - 580 )
000505 4ffd     +SBCI R31 , HIGH ( - 580 )
000506 9001     +LD R0 , Z +
000507 9011     +LD R1 , Z +
000508 9161     +LD R22 , Z +
000509 8170     +LD R23 , Z
00050a 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
00050b 940e 100e 	CALL SUBOPT_0x1B
00050d 940e 12f7 	CALL __ADDF12
                +
00050f 01de     +MOVW R26 , R28
000510 5ea8     +SUBI R26 , LOW ( - 536 )
000511 4fbd     +SBCI R27 , HIGH ( - 536 )
000512 93ed     +ST X + , R30
000513 93fd     +ST X + , R31
000514 936d     +ST X + , R22
000515 937c     +ST X , R23
                 	__PUTD1SX 536
                 ; 0000 00EF         if(TIMER0_TIME>0.1){
000516 940e 100e 	CALL SUBOPT_0x1B
000518 940e 1017 	CALL SUBOPT_0x1C
00051a 940e 13da 	CALL __CMPF12
00051c f009      	BREQ PC+2
00051d f410      	BRCC PC+3
00051e 940c 060d 	JMP  _0x14
                 ; 0000 00F0             TIMER0_TIME_print += TIMER0_TIME;
000520 940e 101c 	CALL SUBOPT_0x1D
                +
000522 01de     +MOVW R26 , R28
000523 5eac     +SUBI R26 , LOW ( - 532 )
000524 4fbd     +SBCI R27 , HIGH ( - 532 )
000525 900d     +LD R0 , X +
000526 901d     +LD R1 , X +
000527 918d     +LD R24 , X +
000528 919c     +LD R25 , X
000529 01d0     +MOVW R26 , R0
                 	__GETD2SX 532
00052a 940e 12f7 	CALL __ADDF12
                +
00052c 01de     +MOVW R26 , R28
00052d 5eac     +SUBI R26 , LOW ( - 532 )
00052e 4fbd     +SBCI R27 , HIGH ( - 532 )
00052f 93ed     +ST X + , R30
000530 93fd     +ST X + , R31
000531 936d     +ST X + , R22
000532 937c     +ST X , R23
                 	__PUTD1SX 532
                 ; 0000 00F1             MOTORR_HALL = 0;
000533 e0e0      	LDI  R30,LOW(0)
000534 93e0 0580 	STS  _MOTORR_HALL,R30
000536 93e0 0581 	STS  _MOTORR_HALL+1,R30
000538 93e0 0582 	STS  _MOTORR_HALL+2,R30
00053a 93e0 0583 	STS  _MOTORR_HALL+3,R30
                 ; 0000 00F2             MOTORL_HALL = 0;
00053c 93e0 0584 	STS  _MOTORL_HALL,R30
00053e 93e0 0585 	STS  _MOTORL_HALL+1,R30
000540 93e0 0586 	STS  _MOTORL_HALL+2,R30
000542 93e0 0587 	STS  _MOTORL_HALL+3,R30
                 ; 0000 00F3 
                 ; 0000 00F4             hall_velocity = (float)((motorR_distance+motorL_distance)/(2*TIMER0_TIME));
000544 940e 1025 	CALL SUBOPT_0x1E
000546 940e 12f7 	CALL __ADDF12
000548 937f      	PUSH R23
000549 936f      	PUSH R22
00054a 93ff      	PUSH R31
00054b 93ef      	PUSH R30
00054c 940e 101c 	CALL SUBOPT_0x1D
                +
00054e e0a0     +LDI R26 , LOW ( 0x40000000 )
00054f e0b0     +LDI R27 , HIGH ( 0x40000000 )
000550 e080     +LDI R24 , BYTE3 ( 0x40000000 )
000551 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
000552 940e 1347 	CALL __MULF12
000554 91af      	POP  R26
000555 91bf      	POP  R27
000556 918f      	POP  R24
000557 919f      	POP  R25
000558 940e 1395 	CALL __DIVF21
                +
00055a 01de     +MOVW R26 , R28
00055b 50a0     +SUBI R26 , LOW ( - 512 )
00055c 4fbe     +SBCI R27 , HIGH ( - 512 )
00055d 93ed     +ST X + , R30
00055e 93fd     +ST X + , R31
00055f 936d     +ST X + , R22
000560 937c     +ST X , R23
                 	__PUTD1SX 512
                 ; 0000 00F5             hall_angular += (float)((motorR_distance-motorL_distance)/Length);
                +
000561 01de     +MOVW R26 , R28
000562 50a8     +SUBI R26 , LOW ( - 504 )
000563 4fbe     +SBCI R27 , HIGH ( - 504 )
000564 900d     +LD R0 , X +
000565 901d     +LD R1 , X +
000566 918d     +LD R24 , X +
000567 919c     +LD R25 , X
000568 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
                +
000569 01fe     +MOVW R30 , R28
00056a 50e4     +SUBI R30 , LOW ( - 508 )
00056b 4ffe     +SBCI R31 , HIGH ( - 508 )
00056c 9001     +LD R0 , Z +
00056d 9011     +LD R1 , Z +
00056e 9161     +LD R22 , Z +
00056f 8170     +LD R23 , Z
000570 01f0     +MOVW R30 , R0
                 	__GETD1SX 508
000571 940e 0f85 	CALL SUBOPT_0x10
000573 940e 1036 	CALL SUBOPT_0x1F
000575 940e 12f7 	CALL __ADDF12
                +
000577 01de     +MOVW R26 , R28
000578 5faa     +SUBI R26 , LOW ( - 518 )
000579 4fbd     +SBCI R27 , HIGH ( - 518 )
00057a 93ed     +ST X + , R30
00057b 93fd     +ST X + , R31
00057c 936d     +ST X + , R22
00057d 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 00F6             hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
00057e 940e 1025 	CALL SUBOPT_0x1E
000580 940e 0f7a 	CALL SUBOPT_0xF
000582 937f      	PUSH R23
000583 936f      	PUSH R22
000584 93ff      	PUSH R31
000585 93ef      	PUSH R30
000586 940e 103f 	CALL SUBOPT_0x20
000588 940e 0e1f 	CALL _cos
00058a 91af      	POP  R26
00058b 91bf      	POP  R27
00058c 918f      	POP  R24
00058d 919f      	POP  R25
00058e 940e 1347 	CALL __MULF12
                +
000590 01de     +MOVW R26 , R28
000591 5fa2     +SUBI R26 , LOW ( - 526 )
000592 4fbd     +SBCI R27 , HIGH ( - 526 )
000593 900d     +LD R0 , X +
000594 901d     +LD R1 , X +
000595 918d     +LD R24 , X +
000596 919c     +LD R25 , X
000597 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
000598 940e 12f7 	CALL __ADDF12
                +
00059a 01de     +MOVW R26 , R28
00059b 5fa2     +SUBI R26 , LOW ( - 526 )
00059c 4fbd     +SBCI R27 , HIGH ( - 526 )
00059d 93ed     +ST X + , R30
00059e 93fd     +ST X + , R31
00059f 936d     +ST X + , R22
0005a0 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 00F7             hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
0005a1 940e 1025 	CALL SUBOPT_0x1E
0005a3 940e 0f7a 	CALL SUBOPT_0xF
0005a5 937f      	PUSH R23
0005a6 936f      	PUSH R22
0005a7 93ff      	PUSH R31
0005a8 93ef      	PUSH R30
0005a9 940e 103f 	CALL SUBOPT_0x20
0005ab 940e 0d94 	CALL _sin
0005ad 91af      	POP  R26
0005ae 91bf      	POP  R27
0005af 918f      	POP  R24
0005b0 919f      	POP  R25
0005b1 940e 1347 	CALL __MULF12
                +
0005b3 01de     +MOVW R26 , R28
0005b4 5fa6     +SUBI R26 , LOW ( - 522 )
0005b5 4fbd     +SBCI R27 , HIGH ( - 522 )
0005b6 900d     +LD R0 , X +
0005b7 901d     +LD R1 , X +
0005b8 918d     +LD R24 , X +
0005b9 919c     +LD R25 , X
0005ba 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
0005bb 940e 12f7 	CALL __ADDF12
                +
0005bd 01de     +MOVW R26 , R28
0005be 5fa6     +SUBI R26 , LOW ( - 522 )
0005bf 4fbd     +SBCI R27 , HIGH ( - 522 )
0005c0 93ed     +ST X + , R30
0005c1 93fd     +ST X + , R31
0005c2 936d     +ST X + , R22
0005c3 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 00F8             hall_angular_circula = (int)(hall_angular*Circular);
0005c4 940e 1036 	CALL SUBOPT_0x1F
0005c6 940e 0fcb 	CALL SUBOPT_0x16
                +
0005c8 01de     +MOVW R26 , R28
0005c9 5fac     +SUBI R26 , LOW ( - 516 )
0005ca 4fbd     +SBCI R27 , HIGH ( - 516 )
0005cb 93ed     +ST X + , R30
0005cc 93fc     +ST X , R31
                 	__PUTW1SX 516
                 ; 0000 00F9             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 00FA             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 00FB             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 00FC             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d, %d\n", TIMER0_TIME_print, d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 00FD             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d, %.3f\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula, TIMER0_TIME_print);
                 ; 0000 00FE             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f \n",TIMER0_TIME_print, g_velocity, d_velocity, hall_velocity);
                 ; 0000 00FF             sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d\n",TIMER0_TIME_print,g_velocity, hall_velocity, g_x, hall_x, del_ms);
0005cd 01fe      	MOVW R30,R28
0005ce 93fa      	ST   -Y,R31
0005cf 93ea      	ST   -Y,R30
                +
0005d0 e0e3     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
0005d1 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
0005d2 93fa      	ST   -Y,R31
0005d3 93ea      	ST   -Y,R30
0005d4 940e 101c 	CALL SUBOPT_0x1D
0005d6 940e 14a9 	CALL __PUTPARD1
0005d8 940e 0f90 	CALL SUBOPT_0x11
0005da 940e 14a9 	CALL __PUTPARD1
                +
0005dc 01fe     +MOVW R30 , R28
0005dd 5fe4     +SUBI R30 , LOW ( - 524 )
0005de 4ffd     +SBCI R31 , HIGH ( - 524 )
0005df 9001     +LD R0 , Z +
0005e0 9011     +LD R1 , Z +
0005e1 9161     +LD R22 , Z +
0005e2 8170     +LD R23 , Z
0005e3 01f0     +MOVW R30 , R0
                 	__GETD1SX 524
0005e4 940e 14a9 	CALL __PUTPARD1
                +
0005e6 01fe     +MOVW R30 , R28
0005e7 5ce6     +SUBI R30 , LOW ( - 570 )
0005e8 4ffd     +SBCI R31 , HIGH ( - 570 )
0005e9 9001     +LD R0 , Z +
0005ea 9011     +LD R1 , Z +
0005eb 9161     +LD R22 , Z +
0005ec 8170     +LD R23 , Z
0005ed 01f0     +MOVW R30 , R0
                 	__GETD1SX 570
0005ee 940e 14a9 	CALL __PUTPARD1
0005f0 940e 0fec 	CALL SUBOPT_0x19
                +
0005f2 01fe     +MOVW R30 , R28
0005f3 57ea     +SUBI R30 , LOW ( - 646 )
0005f4 4ffd     +SBCI R31 , HIGH ( - 646 )
0005f5 9001     +LD R0 , Z +
0005f6 81f0     +LD R31 , Z
0005f7 2de0     +MOV R30 , R0
                 	__GETW1SX 646
0005f8 940e 1415 	CALL __CWD1
0005fa 940e 14a9 	CALL __PUTPARD1
0005fc e188      	LDI  R24,24
0005fd 940e 0b91 	CALL _sprintf
0005ff 966c      	ADIW R28,28
                 ; 0000 0100 
                 ; 0000 0101             // sprintf(BUFF, "%4d, %4d\n", MOTORR_HALL, MOTORL_HALL);
                 ; 0000 0102             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 0103             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 0104             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 0105             //                                                   d_velocity, g_velocity, d_x, g_x, TIMER0_TIME_print);
                 ; 0000 0106             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 0107             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -_buff);
                 ; 0000 0108             puts_USART1(BUFF);
000600 01fe      	MOVW R30,R28
000601 93fa      	ST   -Y,R31
000602 93ea      	ST   -Y,R30
000603 940e 06d8 	CALL _puts_USART1
                 ; 0000 0109             TIMER0_TIME = 0;
000605 e0e0      	LDI  R30,LOW(0)
                +
000606 01de     +MOVW R26 , R28
000607 5ea8     +SUBI R26 , LOW ( - 536 )
000608 4fbd     +SBCI R27 , HIGH ( - 536 )
000609 93ed     +ST X + , R30
00060a 93ed     +ST X + , R30
00060b 93ed     +ST X + , R30
00060c 93ec     +ST X , R30
                 	__CLRD1SX 536
                 ; 0000 010A         }
                 ; 0000 010B     }
                 _0x14:
00060d cc3c      	RJMP _0xA
                 ; 0000 010C }
                 _0x15:
00060e cfff      	RJMP _0x15
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
00060f 93ea      	ST   -Y,R30
000610 b7ef      	IN   R30,SREG
000611 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
000612 91e0 0502 	LDS  R30,_TIMER2_OVERFLOW
000614 5fef      	SUBI R30,-LOW(1)
000615 93e0 0502 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
000617 91e9      	LD   R30,Y+
000618 bfef      	OUT  SREG,R30
000619 91e9      	LD   R30,Y+
00061a 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
00061b 940e 104a 	CALL SUBOPT_0x21
                 ; 0001 0010     TIMER0_OVERFLOW++;
00061d e6a8      	LDI  R26,LOW(_TIMER0_OVERFLOW)
00061e e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
00061f 940e 1051 	CALL SUBOPT_0x22
                 ; 0001 0011 }
000621 c009      	RJMP _0x20003
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
000622 940e 104a 	CALL SUBOPT_0x21
                 ; 0001 0016     TIMER1_OVERFLOW++;
000624 e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
000625 e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
000626 940e 1051 	CALL SUBOPT_0x22
                 ; 0001 0017     TCNT1H = 0x00;
000628 e0e0      	LDI  R30,LOW(0)
000629 bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
00062a bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
                 _0x20003:
00062b 91e9      	LD   R30,Y+
00062c bfef      	OUT  SREG,R30
00062d 91f9      	LD   R31,Y+
00062e 91e9      	LD   R30,Y+
00062f 91b9      	LD   R27,Y+
000630 91a9      	LD   R26,Y+
000631 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
000632 e0ed      	LDI  R30,LOW(13)
000633 bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
000634 e2e8      	LDI  R30,LOW(40)
000635 bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
000636 e8e2      	LDI  R30,LOW(130)
000637 c010      	RJMP _0x20A0010
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
000638 e0e7      	LDI  R30,LOW(7)
000639 bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
00063a e8e1      	LDI  R30,LOW(129)
00063b c00c      	RJMP _0x20A0010
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
00063c e1ed      	LDI  R30,LOW(29)
00063d bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
00063e efef      	LDI  R30,LOW(255)
00063f e0f0      	LDI  R31,HIGH(255)
000640 bdf9      	OUT  0x28+1,R31
000641 bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
000642 ebe0      	LDI  R30,LOW(1200)
000643 e0f4      	LDI  R31,HIGH(1200)
000644 bdf7      	OUT  0x26+1,R31
000645 bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
000646 b7e7      	IN   R30,0x37
000647 60e8      	ORI  R30,8
                 _0x20A0010:
000648 bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
000649 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
00064a 93aa      	ST   -Y,R26
00064b 93ba      	ST   -Y,R27
00064c 93ea      	ST   -Y,R30
00064d b7ef      	IN   R30,SREG
00064e 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
00064f b5e4      	IN   R30,0x24
000650 31e9      	CPI  R30,LOW(0x19)
000651 f420      	BRSH _0x40004
000652 91a0 0502 	LDS  R26,_TIMER2_OVERFLOW
000654 30a0      	CPI  R26,LOW(0x0)
000655 f021      	BREQ _0x40006
                 _0x40004:
000656 91a0 0567 	LDS  R26,_PACKET_BUFF_IDX
000658 30a0      	CPI  R26,LOW(0x0)
000659 f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00065a 940e 1057 	CALL SUBOPT_0x23
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
00065c c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
00065d e0e0      	LDI  R30,LOW(0)
00065e 93e0 0567 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000660 940e 1057 	CALL SUBOPT_0x23
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
000662 e0e0      	LDI  R30,LOW(0)
000663 93e0 0502 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
000665 91e9      	LD   R30,Y+
000666 bfef      	OUT  SREG,R30
000667 91e9      	LD   R30,Y+
000668 91b9      	LD   R27,Y+
000669 91a9      	LD   R26,Y+
00066a 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
00066b 93aa      	ST   -Y,R26
00066c 93ea      	ST   -Y,R30
00066d 93fa      	ST   -Y,R31
00066e b7ef      	IN   R30,SREG
00066f 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
000670 931a      	ST   -Y,R17
                 ;	i -> R17
000671 e010      	LDI  R17,0
000672 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
000674 331c      	CPI  R17,60
000675 f421      	BRNE _0x4000A
000676 91a0 057f 	LDS  R26,_CHECK_GETS
000678 30a0      	CPI  R26,LOW(0x0)
000679 f009      	BREQ _0x4000B
                 _0x4000A:
00067a c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
00067b 9bc3      	SBIS 0x18,3
00067c c002      	RJMP _0x4000C
00067d 98c3      	CBI  0x18,3
00067e c001      	RJMP _0x4000D
                 _0x4000C:
00067f 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
000680 e0e0      	LDI  R30,LOW(0)
000681 93e0 057e 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000683 c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
000684 331e      	CPI  R17,62
000685 f421      	BRNE _0x40010
000686 91a0 057f 	LDS  R26,_CHECK_GETS
000688 30a0      	CPI  R26,LOW(0x0)
000689 f009      	BREQ _0x40011
                 _0x40010:
00068a c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00068b 91e0 057e 	LDS  R30,_VELOCITY_BUFF_IDX
00068d 940e 1066 	CALL SUBOPT_0x24
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
00068f e0e1      	LDI  R30,LOW(1)
000690 93e0 057f 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
000692 c008      	RJMP _0x40012
                 _0x4000F:
000693 91e0 057f 	LDS  R30,_CHECK_GETS
000695 30e0      	CPI  R30,0
000696 f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
000697 91e0 057e 	LDS  R30,_VELOCITY_BUFF_IDX
000699 940e 1066 	CALL SUBOPT_0x24
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
00069b 9119      	LD   R17,Y+
00069c 91e9      	LD   R30,Y+
00069d bfef      	OUT  SREG,R30
00069e 91f9      	LD   R31,Y+
00069f 91e9      	LD   R30,Y+
0006a0 91a9      	LD   R26,Y+
0006a1 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
0006a2 e0e0      	LDI  R30,LOW(0)
0006a3 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0006a5 e9e8      	LDI  R30,LOW(152)
0006a6 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0006a8 e0e6      	LDI  R30,LOW(6)
0006a9 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
0006ab 91e0 009d 	LDS  R30,157
0006ad 7bef      	ANDI R30,0xBF
0006ae 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0006b0 81e8      	LD   R30,Y
0006b1 81f9      	LDD  R31,Y+1
0006b2 940e 140a 	CALL __ASRW8
0006b4 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
0006b6 81e8      	LD   R30,Y
0006b7 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
0006b9 c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
0006ba e0e0      	LDI  R30,LOW(0)
0006bb b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0006bc e9e8      	LDI  R30,LOW(152)
0006bd b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0006be e0e6      	LDI  R30,LOW(6)
0006bf 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
0006c1 91e0 0095 	LDS  R30,149
0006c3 7bef      	ANDI R30,0xBF
0006c4 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0006c6 81e8      	LD   R30,Y
0006c7 81f9      	LDD  R31,Y+1
0006c8 940e 140a 	CALL __ASRW8
0006ca 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
0006cc 81e8      	LD   R30,Y
0006cd b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000F:
0006ce 9622      	ADIW R28,2
0006cf 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
0006d0 91e0 009b 	LDS  R30,155
0006d2 72e0      	ANDI R30,LOW(0x20)
0006d3 f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
0006d4 81e8      	LD   R30,Y
0006d5 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
0006d7 c023      	RJMP _0x20A000E
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
0006d8 931a      	ST   -Y,R17
0006d9 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
0006da e010      	LDI  R17,0
0006db e000      	LDI  R16,0
0006dc e010      	LDI  R17,LOW(0)
                 _0x40018:
0006dd 940e 1070 	CALL SUBOPT_0x25
0006df 30e0      	CPI  R30,0
0006e0 f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
0006e1 940e 1070 	CALL SUBOPT_0x25
0006e3 93ea      	ST   -Y,R30
0006e4 dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
0006e5 5f1f      	SUBI R17,-1
0006e6 cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
0006e7 e000      	LDI  R16,LOW(0)
                 _0x4001B:
0006e8 1701      	CP   R16,R17
0006e9 f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
0006ea 81aa      	LDD  R26,Y+2
0006eb 81bb      	LDD  R27,Y+2+1
0006ec 9611      	ADIW R26,1
0006ed 83aa      	STD  Y+2,R26
0006ee 83bb      	STD  Y+2+1,R27
0006ef 9711      	SBIW R26,1
0006f0 e0e0      	LDI  R30,LOW(0)
0006f1 93ec      	ST   X,R30
                 ; 0002 0054     }
0006f2 5f0f      	SUBI R16,-1
0006f3 cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
0006f4 8119      	LDD  R17,Y+1
0006f5 8108      	LDD  R16,Y+0
0006f6 c0ea      	RJMP _0x20A000C
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
0006f7 9b5d      	SBIS 0xB,5
0006f8 cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
0006f9 81e8      	LD   R30,Y
0006fa b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000E:
0006fb 9621      	ADIW R28,1
0006fc 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
0006fd 940e 14ca 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
0006ff ef2f     +LDI R18 , LOW ( - 1 )
000700 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
000701 81ee      	LDD  R30,Y+6
000702 81ff      	LDD  R31,Y+6+1
000703 9731      	SBIW R30,1
000704 83ee      	STD  Y+6,R30
000705 83ff      	STD  Y+6+1,R31
000706 9631      	ADIW R30,1
000707 f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
000708 85a8      	LDD  R26,Y+8
000709 85b9      	LDD  R27,Y+8+1
00070a 91ed      	LD   R30,X+
00070b 87a8      	STD  Y+8,R26
00070c 87b9      	STD  Y+8+1,R27
00070d e0f0      	LDI  R31,0
                +
00070e 272e     +EOR R18 , R30
00070f 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
000710 e000     +LDI R16 , LOW ( 0 )
000711 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
000712 3008     +CPI R16 , LOW ( 8 )
000713 e0e0     +LDI R30 , HIGH ( 8 )
000714 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000715 f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
000716 01f9      	MOVW R30,R18
000717 70e1      	ANDI R30,LOW(0x1)
000718 70f0      	ANDI R31,HIGH(0x1)
000719 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
00071a 9536      	LSR  R19
00071b 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
00071c 2e04      	MOV  R0,R20
00071d 2a05      	OR   R0,R21
00071e f021      	BREQ _0x4002D
00071f e0e1      	LDI  R30,LOW(40961)
000720 eaf0      	LDI  R31,HIGH(40961)
                +
000721 272e     +EOR R18 , R30
000722 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
000723 5f0f     +SUBI R16 , LOW ( - 1 )
000724 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000725 cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
000726 cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
000727 01f9      	MOVW R30,R18
000728 940e 14d1 	CALL __LOADLOCR6
00072a 962a      	ADIW R28,10
00072b 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
00072c 940e 1077 	CALL SUBOPT_0x26
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 0083     protocol[1]=0x06;
00072e e0e6      	LDI  R30,LOW(6)
00072f 940e 107f 	CALL SUBOPT_0x27
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 0088     protocol[6]=0;
                 ; 0002 0089     protocol[7]=0;
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                 _0x4002F:
                +
000731 3028     +CPI R18 , LOW ( 8 )
000732 e0e0     +LDI R30 , HIGH ( 8 )
000733 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000734 f42c      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
000735 940e 10a2 	CALL SUBOPT_0x28
                 ; 0002 0094     }
                +
000737 5f2f     +SUBI R18 , LOW ( - 1 )
000738 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000739 cff7      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
00073a c00e      	RJMP _0x20A000D
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 _RTU_ReedOperate0:
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
00073b 940e 1077 	CALL SUBOPT_0x26
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
00073d e0e4      	LDI  R30,LOW(4)
00073e 940e 107f 	CALL SUBOPT_0x27
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 _0x40032:
                +
000740 3028     +CPI R18 , LOW ( 8 )
000741 e0e0     +LDI R30 , HIGH ( 8 )
000742 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000743 f42c      	BRGE _0x40033
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
000744 940e 10a2 	CALL SUBOPT_0x28
                 ; 0002 00B0     }
                +
000746 5f2f     +SUBI R18 , LOW ( - 1 )
000747 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000748 cff7      	RJMP _0x40032
                 _0x40033:
                 ; 0002 00B1 }
                 _0x20A000D:
000749 940e 14d3 	CALL __LOADLOCR4
00074b 9661      	ADIW R28,17
00074c 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
00074d 9728      	SBIW R28,8
00074e 940e 10aa 	CALL SUBOPT_0x29
000750 e0e0      	LDI  R30,LOW(0)
000751 83ea      	STD  Y+2,R30
000752 83eb      	STD  Y+3,R30
000753 83ec      	STD  Y+4,R30
000754 83ed      	STD  Y+5,R30
000755 83ee      	STD  Y+6,R30
000756 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
000757 940e 10ae 	CALL SUBOPT_0x2A
000759 2377      	TST  R23
00075a f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
00075b 940e 10b3 	CALL SUBOPT_0x2B
00075d 940e 1251 	CALL __ANEGF1
00075f 85ac      	LDD  R26,Y+12
000760 85bd      	LDD  R27,Y+12+1
000761 940e 1490 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
000763 940e 10ae 	CALL SUBOPT_0x2A
000765 937f      	PUSH R23
000766 936f      	PUSH R22
000767 93ff      	PUSH R31
000768 93ef      	PUSH R30
000769 940e 10b3 	CALL SUBOPT_0x2B
00076b 940e 10b8 	CALL SUBOPT_0x2C
00076d 91af      	POP  R26
00076e 91bf      	POP  R27
00076f 918f      	POP  R24
000770 919f      	POP  R25
000771 940e 12f7 	CALL __ADDF12
000773 940e 10c7 	CALL SUBOPT_0x2D
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
000775 940e 10ae 	CALL SUBOPT_0x2A
000777 937f      	PUSH R23
000778 936f      	PUSH R22
000779 93ff      	PUSH R31
00077a 93ef      	PUSH R30
00077b 940e 10b3 	CALL SUBOPT_0x2B
00077d 940e 10b8 	CALL SUBOPT_0x2C
00077f 91af      	POP  R26
000780 91bf      	POP  R27
000781 918f      	POP  R24
000782 919f      	POP  R25
000783 940e 10cc 	CALL SUBOPT_0x2E
000785 940e 14a4 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(VelocityR*(60/(Pi*0.125)*Gearratio));
000787 940e 10d1 	CALL SUBOPT_0x2F
000789 940e 10d6 	CALL SUBOPT_0x30
00078b 85aa      	LDD  R26,Y+10
00078c 85bb      	LDD  R27,Y+10+1
00078d 93ed      	ST   X+,R30
00078e 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(VelocityL*(60/(Pi*0.125)*Gearratio));
00078f 940e 149f 	CALL __GETD2S0
000791 940e 10d6 	CALL SUBOPT_0x30
000793 85a8      	LDD  R26,Y+8
000794 85b9      	LDD  R27,Y+8+1
000795 93ed      	ST   X+,R30
000796 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
000797 85aa      	LDD  R26,Y+10
000798 85bb      	LDD  R27,Y+10+1
000799 940e 1481 	CALL __GETW1P
00079b 32ec      	CPI  R30,LOW(0x12C)
00079c e0a1      	LDI  R26,HIGH(0x12C)
00079d 07fa      	CPC  R31,R26
00079e f434      	BRGE _0x40036
00079f 01df      	MOVW R26,R30
0007a0 ede4      	LDI  R30,LOW(65236)
0007a1 effe      	LDI  R31,HIGH(65236)
0007a2 17ea      	CP   R30,R26
0007a3 07fb      	CPC  R31,R27
0007a4 f00c      	BRLT _0x40037
                 _0x40036:
0007a5 c014      	RJMP _0x40038
                 _0x40037:
0007a6 85a8      	LDD  R26,Y+8
0007a7 85b9      	LDD  R27,Y+8+1
0007a8 940e 1481 	CALL __GETW1P
0007aa 32ec      	CPI  R30,LOW(0x12C)
0007ab e0a1      	LDI  R26,HIGH(0x12C)
0007ac 07fa      	CPC  R31,R26
0007ad f454      	BRGE _0x40039
0007ae 85a8      	LDD  R26,Y+8
0007af 85b9      	LDD  R27,Y+8+1
0007b0 940e 1481 	CALL __GETW1P
0007b2 01df      	MOVW R26,R30
0007b3 ede4      	LDI  R30,LOW(65236)
0007b4 effe      	LDI  R31,HIGH(65236)
0007b5 17ea      	CP   R30,R26
0007b6 07fb      	CPC  R31,R27
0007b7 f00c      	BRLT _0x4003A
                 _0x40039:
0007b8 c001      	RJMP _0x40038
                 _0x4003A:
0007b9 c001      	RJMP _0x4003B
                 _0x40038:
0007ba c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
0007bb 85aa      	LDD  R26,Y+10
0007bc 85bb      	LDD  R27,Y+10+1
0007bd 940e 10db 	CALL SUBOPT_0x31
                 ; 0002 00C4         *L_RPM = 0;
0007bf 85a8      	LDD  R26,Y+8
0007c0 85b9      	LDD  R27,Y+8+1
0007c1 940e 10db 	CALL SUBOPT_0x31
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
0007c3 940c 0973 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0007c5 e0e1      	LDI  R30,LOW(1)
0007c6 93ea      	ST   -Y,R30
0007c7 e7e9      	LDI  R30,LOW(121)
0007c8 e0f0      	LDI  R31,HIGH(121)
0007c9 93fa      	ST   -Y,R31
0007ca 93ea      	ST   -Y,R30
0007cb 81ed      	LDD  R30,Y+5
0007cc 81fe      	LDD  R31,Y+5+1
0007cd 940e 10e0 	CALL SUBOPT_0x32
                 ; 0002 00CB     delay_ms(5);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0007cf e0e2      	LDI  R30,LOW(2)
0007d0 93ea      	ST   -Y,R30
0007d1 e7e9      	LDI  R30,LOW(121)
0007d2 e0f0      	LDI  R31,HIGH(121)
0007d3 93fa      	ST   -Y,R31
0007d4 93ea      	ST   -Y,R30
0007d5 81eb      	LDD  R30,Y+3
0007d6 81fc      	LDD  R31,Y+3+1
0007d7 940e 13fe 	CALL __ANEGW1
0007d9 940e 10e0 	CALL SUBOPT_0x32
                 ; 0002 00CE     delay_ms(5);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
0007db e0e1      	LDI  R30,LOW(1)
0007dc 940e 10e5 	CALL SUBOPT_0x33
                 ; 0002 00D1     delay_ms(5);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
0007de e0e2      	LDI  R30,LOW(2)
0007df 940e 10e5 	CALL SUBOPT_0x33
                 ; 0002 00D4     delay_ms(5);
                 ; 0002 00D5 }
                 _0x20A000C:
0007e1 9624      	ADIW R28,4
0007e2 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 _get_RPM:
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
0007e3 940e 14cc 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
0007e5 e010      	LDI  R17,0
                +
0007e6 e020     +LDI R18 , LOW ( 0 )
0007e7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0007e8 91a0 0504+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
0007ea 30a7      	CPI  R26,LOW(0x7)
0007eb f149      	BREQ _0x4003C
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
0007ec 91b0 0508+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
0007ee e0a0      	LDI  R26,LOW(0)
                +
0007ef 91e0 0509+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
0007f1 940e 10ed 	CALL SUBOPT_0x34
0007f3 019f      	MOVW R18,R30
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
0007f4 91b0 0506+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
0007f6 e0a0      	LDI  R26,LOW(0)
                +
0007f7 91e0 0507+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
0007f9 940e 10ed 	CALL SUBOPT_0x34
0007fb 81ac      	LDD  R26,Y+4
0007fc 81bd      	LDD  R27,Y+4+1
0007fd 93ed      	ST   X+,R30
0007fe 93fc      	ST   X,R31
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
0007ff e010      	LDI  R17,LOW(0)
                 _0x4003E:
000800 81ee      	LDD  R30,Y+6
000801 171e      	CP   R17,R30
000802 f450      	BRSH _0x4003F
000803 2fe1      	MOV  R30,R17
000804 e0f0      	LDI  R31,0
000805 81af      	LDD  R26,Y+7
000806 85b8      	LDD  R27,Y+7+1
000807 0fae      	ADD  R26,R30
000808 1fbf      	ADC  R27,R31
000809 e0e0      	LDI  R30,LOW(0)
00080a 93ec      	ST   X,R30
00080b 5f1f      	SUBI R17,-1
00080c cff3      	RJMP _0x4003E
                 _0x4003F:
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
00080d efef      	LDI  R30,LOW(65535)
00080e efff      	LDI  R31,HIGH(65535)
00080f 17e2      	CP   R30,R18
000810 07f3      	CPC  R31,R19
000811 f411      	BRNE _0x40040
                +
000812 e020     +LDI R18 , LOW ( 0 )
000813 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0002 00E1         return RPM;
                 _0x40040:
000814 01f9      	MOVW R30,R18
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 _0x4003C:
                 _0x20A000B:
000815 940e 14d3 	CALL __LOADLOCR4
000817 9629      	ADIW R28,9
000818 9508      	RET
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
000819 e5e5      	LDI  R30,LOW(85)
00081a bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
00081b efe0      	LDI  R30,LOW(240)
00081c bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
00081d 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
00081e 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
00081f 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
000820 9817      	CBI  0x2,7
                 ; 0003 000C }
000821 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
000822 940e 10f1 	CALL SUBOPT_0x35
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
000824 f039      	BREQ _0x6000B
000825 940e 1101 	CALL SUBOPT_0x36
000827 940e 1106 	CALL SUBOPT_0x37
000829 940e 110b 	CALL SUBOPT_0x38
                 ; 0003 0011     else MOTORR_HALL--;
00082b c004      	RJMP _0x6000C
                 _0x6000B:
00082c 940e 1101 	CALL SUBOPT_0x36
00082e 940e 1111 	CALL SUBOPT_0x39
                 ; 0003 0012 }
                 _0x6000C:
000830 c034      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
000831 940e 10f1 	CALL SUBOPT_0x35
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
000833 f029      	BREQ _0x6000D
000834 940e 1101 	CALL SUBOPT_0x36
000836 940e 1111 	CALL SUBOPT_0x39
                 ; 0003 0017     else MOTORR_HALL++;
000838 c004      	RJMP _0x6000E
                 _0x6000D:
000839 940e 1101 	CALL SUBOPT_0x36
00083b 940e 1117 	CALL SUBOPT_0x3A
                 ; 0003 0018 }
                 _0x6000E:
00083d c027      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
00083e 940e 1119 	CALL SUBOPT_0x3B
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
000840 e0a0      	LDI  R26,0
000841 990e      	SBIC 0x1,6
000842 e0a1      	LDI  R26,1
000843 e0e0      	LDI  R30,0
000844 990f      	SBIC 0x1,7
000845 e0e1      	LDI  R30,1
000846 17ea      	CP   R30,R26
000847 f029      	BREQ _0x6000F
000848 940e 1122 	CALL SUBOPT_0x3C
00084a 940e 1111 	CALL SUBOPT_0x39
                 ; 0003 001D     else MOTORL_HALL++;
00084c c004      	RJMP _0x60010
                 _0x6000F:
00084d 940e 1122 	CALL SUBOPT_0x3C
00084f 940e 1117 	CALL SUBOPT_0x3A
                 ; 0003 001E }
                 _0x60010:
000851 c013      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
000852 940e 1119 	CALL SUBOPT_0x3B
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
000854 e0a0      	LDI  R26,0
000855 990f      	SBIC 0x1,7
000856 e0a1      	LDI  R26,1
000857 e0e0      	LDI  R30,0
000858 990e      	SBIC 0x1,6
000859 e0e1      	LDI  R30,1
00085a 17ea      	CP   R30,R26
00085b f029      	BREQ _0x60011
00085c 940e 1122 	CALL SUBOPT_0x3C
00085e 940e 1117 	CALL SUBOPT_0x3A
                 ; 0003 0023     else MOTORL_HALL--;
000860 c004      	RJMP _0x60012
                 _0x60011:
000861 940e 1122 	CALL SUBOPT_0x3C
000863 940e 1111 	CALL SUBOPT_0x39
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
000865 91e9      	LD   R30,Y+
000866 bfef      	OUT  SREG,R30
000867 91f9      	LD   R31,Y+
000868 91e9      	LD   R30,Y+
000869 91b9      	LD   R27,Y+
00086a 91a9      	LD   R26,Y+
00086b 9179      	LD   R23,Y+
00086c 9169      	LD   R22,Y+
00086d 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
00086e 931a      	ST   -Y,R17
00086f 930a      	ST   -Y,R16
000870 81aa      	LDD  R26,Y+2
000871 81bb      	LDD  R27,Y+2+1
000872 9612      	ADIW R26,2
000873 940e 1481 	CALL __GETW1P
000875 9730      	SBIW R30,0
000876 f129      	BREQ _0x2000010
000877 81aa      	LDD  R26,Y+2
000878 81bb      	LDD  R27,Y+2+1
000879 9614      	ADIW R26,4
00087a 940e 1481 	CALL __GETW1P
00087c 018f      	MOVW R16,R30
00087d 9730      	SBIW R30,0
00087e f061      	BREQ _0x2000012
                +
00087f 3002     +CPI R16 , LOW ( 2 )
000880 e0e0     +LDI R30 , HIGH ( 2 )
000881 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000882 f0c0      	BRLO _0x2000013
000883 01f8      	MOVW R30,R16
000884 9731      	SBIW R30,1
000885 018f      	MOVW R16,R30
                +
000886 81aa     +LDD R26 , Y + 2
000887 81bb     +LDD R27 , Y + 2 + 1
000888 9614     +ADIW R26 , 4
000889 93ed     +ST X + , R30
00088a 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00088b 81aa      	LDD  R26,Y+2
00088c 81bb      	LDD  R27,Y+2+1
00088d 9612      	ADIW R26,2
00088e 940e 1051 	CALL SUBOPT_0x22
000890 9731      	SBIW R30,1
000891 81ac      	LDD  R26,Y+4
000892 83a0      	STD  Z+0,R26
000893 81aa      	LDD  R26,Y+2
000894 81bb      	LDD  R27,Y+2+1
000895 940e 1481 	CALL __GETW1P
000897 23ff      	TST  R31
000898 f012      	BRMI _0x2000014
000899 940e 1051 	CALL SUBOPT_0x22
                 _0x2000014:
                 _0x2000013:
00089b c006      	RJMP _0x2000015
                 _0x2000010:
00089c 81aa      	LDD  R26,Y+2
00089d 81bb      	LDD  R27,Y+2+1
00089e efef      	LDI  R30,LOW(65535)
00089f efff      	LDI  R31,HIGH(65535)
0008a0 93ed      	ST   X+,R30
0008a1 93fc      	ST   X,R31
                 _0x2000015:
0008a2 8119      	LDD  R17,Y+1
0008a3 8108      	LDD  R16,Y+0
0008a4 c346      	RJMP _0x20A0007
                 __ftoe_G100:
0008a5 9724      	SBIW R28,4
0008a6 940e 10aa 	CALL SUBOPT_0x29
0008a8 e8e0      	LDI  R30,LOW(128)
0008a9 83ea      	STD  Y+2,R30
0008aa e3ef      	LDI  R30,LOW(63)
0008ab 83eb      	STD  Y+3,R30
0008ac 940e 14cc 	CALL __SAVELOCR4
0008ae 85ee      	LDD  R30,Y+14
0008af 85ff      	LDD  R31,Y+14+1
0008b0 3fef      	CPI  R30,LOW(0xFFFF)
0008b1 efaf      	LDI  R26,HIGH(0xFFFF)
0008b2 07fa      	CPC  R31,R26
0008b3 f449      	BRNE _0x2000019
0008b4 85e8      	LDD  R30,Y+8
0008b5 85f9      	LDD  R31,Y+8+1
0008b6 93fa      	ST   -Y,R31
0008b7 93ea      	ST   -Y,R30
                +
0008b8 ebe6     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
0008b9 e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
0008ba 940e 1127 	CALL SUBOPT_0x3D
0008bc c0b4      	RJMP _0x20A0009
                 _0x2000019:
0008bd 3fef      	CPI  R30,LOW(0x7FFF)
0008be e7af      	LDI  R26,HIGH(0x7FFF)
0008bf 07fa      	CPC  R31,R26
0008c0 f449      	BRNE _0x2000018
0008c1 85e8      	LDD  R30,Y+8
0008c2 85f9      	LDD  R31,Y+8+1
0008c3 93fa      	ST   -Y,R31
0008c4 93ea      	ST   -Y,R30
                +
0008c5 ebe7     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
0008c6 e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
0008c7 940e 1127 	CALL SUBOPT_0x3D
0008c9 c0a7      	RJMP _0x20A0009
                 _0x2000018:
0008ca 85ab      	LDD  R26,Y+11
0008cb 30a7      	CPI  R26,LOW(0x7)
0008cc f010      	BRLO _0x200001B
0008cd e0e6      	LDI  R30,LOW(6)
0008ce 87eb      	STD  Y+11,R30
                 _0x200001B:
0008cf 851b      	LDD  R17,Y+11
                 _0x200001C:
0008d0 2fe1      	MOV  R30,R17
0008d1 5011      	SUBI R17,1
0008d2 30e0      	CPI  R30,0
0008d3 f019      	BREQ _0x200001E
0008d4 940e 112b 	CALL SUBOPT_0x3E
0008d6 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0008d7 85ec     +LDD R30 , Y + 12
0008d8 85fd     +LDD R31 , Y + 12 + 1
0008d9 856e     +LDD R22 , Y + 12 + 2
0008da 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0008db 940e 14c0 	CALL __CPD10
0008dd f421      	BRNE _0x200001F
0008de e030      	LDI  R19,LOW(0)
0008df 940e 112b 	CALL SUBOPT_0x3E
0008e1 c02e      	RJMP _0x2000020
                 _0x200001F:
0008e2 853b      	LDD  R19,Y+11
0008e3 940e 1133 	CALL SUBOPT_0x3F
0008e5 f009      	BREQ PC+2
0008e6 f410      	BRCC PC+3
0008e7 940c 08f4 	JMP  _0x2000021
0008e9 940e 112b 	CALL SUBOPT_0x3E
                 _0x2000022:
0008eb 940e 1133 	CALL SUBOPT_0x3F
0008ed f028      	BRLO _0x2000024
0008ee 940e 113e 	CALL SUBOPT_0x40
0008f0 940e 1143 	CALL SUBOPT_0x41
0008f2 cff8      	RJMP _0x2000022
                 _0x2000024:
0008f3 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0008f4 940e 1133 	CALL SUBOPT_0x3F
0008f6 f440      	BRSH _0x2000028
0008f7 940e 113e 	CALL SUBOPT_0x40
0008f9 940e 114c 	CALL SUBOPT_0x42
0008fb 940e 1153 	CALL SUBOPT_0x43
0008fd 5031      	SUBI R19,LOW(1)
0008fe cff5      	RJMP _0x2000026
                 _0x2000028:
0008ff 940e 112b 	CALL SUBOPT_0x3E
                 _0x2000025:
                +
000901 85ec     +LDD R30 , Y + 12
000902 85fd     +LDD R31 , Y + 12 + 1
000903 856e     +LDD R22 , Y + 12 + 2
000904 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000905 940e 1158 	CALL SUBOPT_0x44
000907 940e 1153 	CALL SUBOPT_0x43
000909 940e 1133 	CALL SUBOPT_0x3F
00090b f020      	BRLO _0x2000029
00090c 940e 113e 	CALL SUBOPT_0x40
00090e 940e 1143 	CALL SUBOPT_0x41
                 _0x2000029:
                 _0x2000020:
000910 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000911 85eb      	LDD  R30,Y+11
000912 17e1      	CP   R30,R17
000913 f188      	BRLO _0x200002C
000914 940e 10d1 	CALL SUBOPT_0x2F
000916 940e 115f 	CALL SUBOPT_0x45
000918 940e 1158 	CALL SUBOPT_0x44
00091a 940e 1163 	CALL SUBOPT_0x46
00091c 940e 10c7 	CALL SUBOPT_0x2D
                +
00091e 81ec     +LDD R30 , Y + 4
00091f 81fd     +LDD R31 , Y + 4 + 1
000920 816e     +LDD R22 , Y + 4 + 2
000921 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000922 940e 113e 	CALL SUBOPT_0x40
000924 940e 1395 	CALL __DIVF21
000926 940e 1284 	CALL __CFD1U
000928 2f0e      	MOV  R16,R30
000929 940e 1167 	CALL SUBOPT_0x47
00092b 940e 116e 	CALL SUBOPT_0x48
00092d 27ff      	CLR  R31
00092e 2766      	CLR  R22
00092f 2777      	CLR  R23
000930 940e 12bd 	CALL __CDF1
000932 940e 10d1 	CALL SUBOPT_0x2F
000934 940e 1347 	CALL __MULF12
000936 940e 113e 	CALL SUBOPT_0x40
000938 940e 10cc 	CALL SUBOPT_0x2E
00093a 940e 1153 	CALL SUBOPT_0x43
00093c 2fe1      	MOV  R30,R17
00093d 5f1f      	SUBI R17,-1
00093e 30e0      	CPI  R30,0
00093f f689      	BRNE _0x200002A
000940 940e 1167 	CALL SUBOPT_0x47
000942 e2ee      	LDI  R30,LOW(46)
000943 93ec      	ST   X,R30
000944 cfcc      	RJMP _0x200002A
                 _0x200002C:
000945 940e 1173 	CALL SUBOPT_0x49
000947 9731      	SBIW R30,1
000948 85aa      	LDD  R26,Y+10
000949 83a0      	STD  Z+0,R26
00094a 3030      	CPI  R19,0
00094b f42c      	BRGE _0x200002E
00094c 9531      	NEG  R19
00094d 85a8      	LDD  R26,Y+8
00094e 85b9      	LDD  R27,Y+8+1
00094f e2ed      	LDI  R30,LOW(45)
000950 c003      	RJMP _0x200010E
                 _0x200002E:
000951 85a8      	LDD  R26,Y+8
000952 85b9      	LDD  R27,Y+8+1
000953 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
000954 93ec      	ST   X,R30
000955 940e 1173 	CALL SUBOPT_0x49
000957 940e 1173 	CALL SUBOPT_0x49
000959 9731      	SBIW R30,1
00095a 01bf      	MOVW R22,R30
00095b 2fa3      	MOV  R26,R19
00095c e0ea      	LDI  R30,LOW(10)
00095d 940e 143b 	CALL __DIVB21
00095f 5de0      	SUBI R30,-LOW(48)
000960 01db      	MOVW R26,R22
000961 93ec      	ST   X,R30
000962 940e 1173 	CALL SUBOPT_0x49
000964 9731      	SBIW R30,1
000965 01bf      	MOVW R22,R30
000966 2fa3      	MOV  R26,R19
000967 e0ea      	LDI  R30,LOW(10)
000968 940e 1465 	CALL __MODB21
00096a 5de0      	SUBI R30,-LOW(48)
00096b 01db      	MOVW R26,R22
00096c 93ec      	ST   X,R30
00096d 85a8      	LDD  R26,Y+8
00096e 85b9      	LDD  R27,Y+8+1
00096f e0e0      	LDI  R30,LOW(0)
000970 93ec      	ST   X,R30
                 _0x20A0009:
000971 940e 14d3 	CALL __LOADLOCR4
                 _0x20A000A:
000973 9660      	ADIW R28,16
000974 9508      	RET
                 __print_G100:
000975 97ef      	SBIW R28,63
000976 9761      	SBIW R28,17
000977 940e 14ca 	CALL __SAVELOCR6
000979 e010      	LDI  R17,0
                +
00097a 01fe     +MOVW R30 , R28
00097b 5ae8     +SUBI R30 , LOW ( - 88 )
00097c 4fff     +SBCI R31 , HIGH ( - 88 )
00097d 9001     +LD R0 , Z +
00097e 81f0     +LD R31 , Z
00097f 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000980 87e8      	STD  Y+8,R30
000981 87f9      	STD  Y+8+1,R31
                +
000982 01fe     +MOVW R30 , R28
000983 5aea     +SUBI R30 , LOW ( - 86 )
000984 4fff     +SBCI R31 , HIGH ( - 86 )
000985 9001     +LD R0 , Z +
000986 81f0     +LD R31 , Z
000987 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000988 83ee      	STD  Y+6,R30
000989 83ff      	STD  Y+6+1,R31
00098a 81ae      	LDD  R26,Y+6
00098b 81bf      	LDD  R27,Y+6+1
00098c 940e 10db 	CALL SUBOPT_0x31
                 _0x2000030:
00098e 01de      	MOVW R26,R28
00098f 5aa4      	SUBI R26,LOW(-(92))
000990 4fbf      	SBCI R27,HIGH(-(92))
000991 940e 1051 	CALL SUBOPT_0x22
000993 9731      	SBIW R30,1
000994 91e4      	LPM  R30,Z
000995 2f2e      	MOV  R18,R30
000996 30e0      	CPI  R30,0
000997 f411      	BRNE PC+3
000998 940c 0b88 	JMP _0x2000032
00099a 2fe1      	MOV  R30,R17
00099b 30e0      	CPI  R30,0
00099c f439      	BRNE _0x2000036
00099d 3225      	CPI  R18,37
00099e f411      	BRNE _0x2000037
00099f e011      	LDI  R17,LOW(1)
0009a0 c002      	RJMP _0x2000038
                 _0x2000037:
0009a1 940e 1179 	CALL SUBOPT_0x4A
                 _0x2000038:
0009a3 c1e3      	RJMP _0x2000035
                 _0x2000036:
0009a4 30e1      	CPI  R30,LOW(0x1)
0009a5 f4c1      	BRNE _0x2000039
0009a6 3225      	CPI  R18,37
0009a7 f419      	BRNE _0x200003A
0009a8 940e 1179 	CALL SUBOPT_0x4A
0009aa c1db      	RJMP _0x200010F
                 _0x200003A:
0009ab e012      	LDI  R17,LOW(2)
0009ac e0e0      	LDI  R30,LOW(0)
0009ad 8bed      	STD  Y+21,R30
0009ae e000      	LDI  R16,LOW(0)
0009af 322d      	CPI  R18,45
0009b0 f411      	BRNE _0x200003B
0009b1 e001      	LDI  R16,LOW(1)
0009b2 c1d4      	RJMP _0x2000035
                 _0x200003B:
0009b3 322b      	CPI  R18,43
0009b4 f419      	BRNE _0x200003C
0009b5 e2eb      	LDI  R30,LOW(43)
0009b6 8bed      	STD  Y+21,R30
0009b7 c1cf      	RJMP _0x2000035
                 _0x200003C:
0009b8 3220      	CPI  R18,32
0009b9 f419      	BRNE _0x200003D
0009ba e2e0      	LDI  R30,LOW(32)
0009bb 8bed      	STD  Y+21,R30
0009bc c1ca      	RJMP _0x2000035
                 _0x200003D:
0009bd c002      	RJMP _0x200003E
                 _0x2000039:
0009be 30e2      	CPI  R30,LOW(0x2)
0009bf f439      	BRNE _0x200003F
                 _0x200003E:
0009c0 e050      	LDI  R21,LOW(0)
0009c1 e013      	LDI  R17,LOW(3)
0009c2 3320      	CPI  R18,48
0009c3 f411      	BRNE _0x2000040
0009c4 6800      	ORI  R16,LOW(128)
0009c5 c1c1      	RJMP _0x2000035
                 _0x2000040:
0009c6 c002      	RJMP _0x2000041
                 _0x200003F:
0009c7 30e3      	CPI  R30,LOW(0x3)
0009c8 f491      	BRNE _0x2000042
                 _0x2000041:
0009c9 3320      	CPI  R18,48
0009ca f010      	BRLO _0x2000044
0009cb 332a      	CPI  R18,58
0009cc f008      	BRLO _0x2000045
                 _0x2000044:
0009cd c007      	RJMP _0x2000043
                 _0x2000045:
0009ce e0aa      	LDI  R26,LOW(10)
0009cf 9f5a      	MUL  R21,R26
0009d0 2d50      	MOV  R21,R0
0009d1 2fe2      	MOV  R30,R18
0009d2 53e0      	SUBI R30,LOW(48)
0009d3 0f5e      	ADD  R21,R30
0009d4 c1b2      	RJMP _0x2000035
                 _0x2000043:
0009d5 e040      	LDI  R20,LOW(0)
0009d6 322e      	CPI  R18,46
0009d7 f411      	BRNE _0x2000046
0009d8 e014      	LDI  R17,LOW(4)
0009d9 c1ad      	RJMP _0x2000035
                 _0x2000046:
0009da c00f      	RJMP _0x2000047
                 _0x2000042:
0009db 30e4      	CPI  R30,LOW(0x4)
0009dc f499      	BRNE _0x2000049
0009dd 3320      	CPI  R18,48
0009de f010      	BRLO _0x200004B
0009df 332a      	CPI  R18,58
0009e0 f008      	BRLO _0x200004C
                 _0x200004B:
0009e1 c008      	RJMP _0x200004A
                 _0x200004C:
0009e2 6200      	ORI  R16,LOW(32)
0009e3 e0aa      	LDI  R26,LOW(10)
0009e4 9f4a      	MUL  R20,R26
0009e5 2d40      	MOV  R20,R0
0009e6 2fe2      	MOV  R30,R18
0009e7 53e0      	SUBI R30,LOW(48)
0009e8 0f4e      	ADD  R20,R30
0009e9 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0009ea 362c      	CPI  R18,108
0009eb f419      	BRNE _0x200004D
0009ec 6002      	ORI  R16,LOW(2)
0009ed e015      	LDI  R17,LOW(5)
0009ee c198      	RJMP _0x2000035
                 _0x200004D:
0009ef c004      	RJMP _0x200004E
                 _0x2000049:
0009f0 30e5      	CPI  R30,LOW(0x5)
0009f1 f011      	BREQ PC+3
0009f2 940c 0b87 	JMP _0x2000035
                 _0x200004E:
0009f4 2fe2      	MOV  R30,R18
0009f5 36e3      	CPI  R30,LOW(0x63)
0009f6 f459      	BRNE _0x2000053
0009f7 940e 1182 	CALL SUBOPT_0x4B
0009f9 940e 1189 	CALL SUBOPT_0x4C
0009fb 940e 1182 	CALL SUBOPT_0x4B
0009fd 81a4      	LDD  R26,Z+4
0009fe 93aa      	ST   -Y,R26
0009ff 940e 1190 	CALL SUBOPT_0x4D
000a01 c184      	RJMP _0x2000054
                 _0x2000053:
000a02 34e5      	CPI  R30,LOW(0x45)
000a03 f011      	BREQ _0x2000057
000a04 36e5      	CPI  R30,LOW(0x65)
000a05 f409      	BRNE _0x2000058
                 _0x2000057:
000a06 c004      	RJMP _0x2000059
                 _0x2000058:
000a07 36e6      	CPI  R30,LOW(0x66)
000a08 f011      	BREQ PC+3
000a09 940c 0a55 	JMP _0x200005A
                 _0x2000059:
000a0b 01fe      	MOVW R30,R28
000a0c 9676      	ADIW R30,22
000a0d 87ee      	STD  Y+14,R30
000a0e 87ff      	STD  Y+14+1,R31
000a0f 940e 1198 	CALL SUBOPT_0x4E
000a11 940e 1485 	CALL __GETD1P
000a13 940e 119f 	CALL SUBOPT_0x4F
000a15 940e 11a4 	CALL SUBOPT_0x50
000a17 85ad      	LDD  R26,Y+13
000a18 23aa      	TST  R26
000a19 f022      	BRMI _0x200005B
000a1a 89ad      	LDD  R26,Y+21
000a1b 32ab      	CPI  R26,LOW(0x2B)
000a1c f049      	BREQ _0x200005D
000a1d c017      	RJMP _0x200005E
                 _0x200005B:
000a1e 940e 11a6 	CALL SUBOPT_0x51
000a20 940e 1251 	CALL __ANEGF1
000a22 940e 119f 	CALL SUBOPT_0x4F
000a24 e2ed      	LDI  R30,LOW(45)
000a25 8bed      	STD  Y+21,R30
                 _0x200005D:
000a26 ff07      	SBRS R16,7
000a27 c005      	RJMP _0x200005F
000a28 89ed      	LDD  R30,Y+21
000a29 93ea      	ST   -Y,R30
000a2a 940e 1190 	CALL SUBOPT_0x4D
000a2c c008      	RJMP _0x2000060
                 _0x200005F:
000a2d 85ee      	LDD  R30,Y+14
000a2e 85ff      	LDD  R31,Y+14+1
000a2f 9631      	ADIW R30,1
000a30 87ee      	STD  Y+14,R30
000a31 87ff      	STD  Y+14+1,R31
000a32 9731      	SBIW R30,1
000a33 89ad      	LDD  R26,Y+21
000a34 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000a35 ff05      	SBRS R16,5
000a36 e046      	LDI  R20,LOW(6)
000a37 3626      	CPI  R18,102
000a38 f461      	BRNE _0x2000062
000a39 940e 11a6 	CALL SUBOPT_0x51
000a3b 940e 14a9 	CALL __PUTPARD1
000a3d 934a      	ST   -Y,R20
000a3e 89eb      	LDD  R30,Y+19
000a3f 89fc      	LDD  R31,Y+19+1
000a40 93fa      	ST   -Y,R31
000a41 93ea      	ST   -Y,R30
000a42 940e 0e6c 	CALL _ftoa
000a44 c00b      	RJMP _0x2000063
                 _0x2000062:
000a45 940e 11a6 	CALL SUBOPT_0x51
000a47 940e 14a9 	CALL __PUTPARD1
000a49 934a      	ST   -Y,R20
000a4a 932a      	ST   -Y,R18
000a4b 89ec      	LDD  R30,Y+20
000a4c 89fd      	LDD  R31,Y+20+1
000a4d 93fa      	ST   -Y,R31
000a4e 93ea      	ST   -Y,R30
000a4f de55      	RCALL __ftoe_G100
                 _0x2000063:
000a50 01fe      	MOVW R30,R28
000a51 9676      	ADIW R30,22
000a52 940e 11ab 	CALL SUBOPT_0x52
000a54 c01e      	RJMP _0x2000064
                 _0x200005A:
000a55 37e3      	CPI  R30,LOW(0x73)
000a56 f439      	BRNE _0x2000066
000a57 940e 11a4 	CALL SUBOPT_0x50
000a59 940e 11b3 	CALL SUBOPT_0x53
000a5b 940e 11ab 	CALL SUBOPT_0x52
000a5d c00e      	RJMP _0x2000067
                 _0x2000066:
000a5e 37e0      	CPI  R30,LOW(0x70)
000a5f f4c1      	BRNE _0x2000069
000a60 940e 11a4 	CALL SUBOPT_0x50
000a62 940e 11b3 	CALL SUBOPT_0x53
000a64 87ee      	STD  Y+14,R30
000a65 87ff      	STD  Y+14+1,R31
000a66 93fa      	ST   -Y,R31
000a67 93ea      	ST   -Y,R30
000a68 940e 0e61 	CALL _strlenf
000a6a 2f1e      	MOV  R17,R30
000a6b 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000a6c 770f      	ANDI R16,LOW(127)
000a6d 3040      	CPI  R20,0
000a6e f011      	BREQ _0x200006B
000a6f 1741      	CP   R20,R17
000a70 f008      	BRLO _0x200006C
                 _0x200006B:
000a71 c001      	RJMP _0x200006A
                 _0x200006C:
000a72 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000a73 e040      	LDI  R20,LOW(0)
000a74 e0e0      	LDI  R30,LOW(0)
000a75 8bec      	STD  Y+20,R30
000a76 e030      	LDI  R19,LOW(0)
000a77 c06e      	RJMP _0x200006D
                 _0x2000069:
000a78 36e4      	CPI  R30,LOW(0x64)
000a79 f011      	BREQ _0x2000070
000a7a 36e9      	CPI  R30,LOW(0x69)
000a7b f411      	BRNE _0x2000071
                 _0x2000070:
000a7c 6004      	ORI  R16,LOW(4)
000a7d c002      	RJMP _0x2000072
                 _0x2000071:
000a7e 37e5      	CPI  R30,LOW(0x75)
000a7f f4a1      	BRNE _0x2000073
                 _0x2000072:
000a80 e0ea      	LDI  R30,LOW(10)
000a81 8bec      	STD  Y+20,R30
000a82 ff01      	SBRS R16,1
000a83 c008      	RJMP _0x2000074
                +
000a84 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000a85 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000a86 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000a87 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000a88 940e 11b8 	CALL SUBOPT_0x54
000a8a e01a      	LDI  R17,LOW(10)
000a8b c023      	RJMP _0x2000075
                 _0x2000074:
                +
000a8c e1e0     +LDI R30 , LOW ( 0x2710 )
000a8d e2f7     +LDI R31 , HIGH ( 0x2710 )
000a8e e060     +LDI R22 , BYTE3 ( 0x2710 )
000a8f e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000a90 940e 11b8 	CALL SUBOPT_0x54
000a92 e015      	LDI  R17,LOW(5)
000a93 c01b      	RJMP _0x2000075
                 _0x2000073:
000a94 35e8      	CPI  R30,LOW(0x58)
000a95 f411      	BRNE _0x2000077
000a96 6008      	ORI  R16,LOW(8)
000a97 c004      	RJMP _0x2000078
                 _0x2000077:
000a98 37e8      	CPI  R30,LOW(0x78)
000a99 f011      	BREQ PC+3
000a9a 940c 0b86 	JMP _0x20000B6
                 _0x2000078:
000a9c e1e0      	LDI  R30,LOW(16)
000a9d 8bec      	STD  Y+20,R30
000a9e ff01      	SBRS R16,1
000a9f c008      	RJMP _0x200007A
                +
000aa0 e0e0     +LDI R30 , LOW ( 0x10000000 )
000aa1 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000aa2 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000aa3 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000aa4 940e 11b8 	CALL SUBOPT_0x54
000aa6 e018      	LDI  R17,LOW(8)
000aa7 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000aa8 e0e0     +LDI R30 , LOW ( 0x1000 )
000aa9 e1f0     +LDI R31 , HIGH ( 0x1000 )
000aaa e060     +LDI R22 , BYTE3 ( 0x1000 )
000aab e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000aac 940e 11b8 	CALL SUBOPT_0x54
000aae e014      	LDI  R17,LOW(4)
                 _0x2000075:
000aaf 3040      	CPI  R20,0
000ab0 f011      	BREQ _0x200007B
000ab1 770f      	ANDI R16,LOW(127)
000ab2 c001      	RJMP _0x200007C
                 _0x200007B:
000ab3 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000ab4 ff01      	SBRS R16,1
000ab5 c008      	RJMP _0x200007D
000ab6 940e 11a4 	CALL SUBOPT_0x50
000ab8 940e 1198 	CALL SUBOPT_0x4E
000aba 9614      	ADIW R26,4
000abb 940e 1485 	CALL __GETD1P
000abd c00f      	RJMP _0x2000110
                 _0x200007D:
000abe ff02      	SBRS R16,2
000abf c007      	RJMP _0x200007F
000ac0 940e 11a4 	CALL SUBOPT_0x50
000ac2 940e 11b3 	CALL SUBOPT_0x53
000ac4 940e 1415 	CALL __CWD1
000ac6 c006      	RJMP _0x2000110
                 _0x200007F:
000ac7 940e 11a4 	CALL SUBOPT_0x50
000ac9 940e 11b3 	CALL SUBOPT_0x53
000acb 2766      	CLR  R22
000acc 2777      	CLR  R23
                 _0x2000110:
                +
000acd 87ea     +STD Y + 10 , R30
000ace 87fb     +STD Y + 10 + 1 , R31
000acf 876c     +STD Y + 10 + 2 , R22
000ad0 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000ad1 ff02      	SBRS R16,2
000ad2 c012      	RJMP _0x2000081
000ad3 85ad      	LDD  R26,Y+13
000ad4 23aa      	TST  R26
000ad5 f442      	BRPL _0x2000082
000ad6 940e 11a6 	CALL SUBOPT_0x51
000ad8 940e 1402 	CALL __ANEGD1
000ada 940e 119f 	CALL SUBOPT_0x4F
000adc e2ed      	LDI  R30,LOW(45)
000add 8bed      	STD  Y+21,R30
                 _0x2000082:
000ade 89ed      	LDD  R30,Y+21
000adf 30e0      	CPI  R30,0
000ae0 f019      	BREQ _0x2000083
000ae1 5f1f      	SUBI R17,-LOW(1)
000ae2 5f4f      	SUBI R20,-LOW(1)
000ae3 c001      	RJMP _0x2000084
                 _0x2000083:
000ae4 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000ae5 2f34      	MOV  R19,R20
                 _0x200006D:
000ae6 fd00      	SBRC R16,0
000ae7 c014      	RJMP _0x2000085
                 _0x2000086:
000ae8 1715      	CP   R17,R21
000ae9 f410      	BRSH _0x2000089
000aea 1735      	CP   R19,R21
000aeb f008      	BRLO _0x200008A
                 _0x2000089:
000aec c00f      	RJMP _0x2000088
                 _0x200008A:
000aed ff07      	SBRS R16,7
000aee c008      	RJMP _0x200008B
000aef ff02      	SBRS R16,2
000af0 c004      	RJMP _0x200008C
000af1 7f0b      	ANDI R16,LOW(251)
000af2 892d      	LDD  R18,Y+21
000af3 5011      	SUBI R17,LOW(1)
000af4 c001      	RJMP _0x200008D
                 _0x200008C:
000af5 e320      	LDI  R18,LOW(48)
                 _0x200008D:
000af6 c001      	RJMP _0x200008E
                 _0x200008B:
000af7 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000af8 940e 1179 	CALL SUBOPT_0x4A
000afa 5051      	SUBI R21,LOW(1)
000afb cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000afc 1714      	CP   R17,R20
000afd f490      	BRSH _0x2000091
000afe 6100      	ORI  R16,LOW(16)
000aff ff02      	SBRS R16,2
000b00 c006      	RJMP _0x2000092
000b01 940e 11bd 	CALL SUBOPT_0x55
000b03 f009      	BREQ _0x2000093
000b04 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000b05 5011      	SUBI R17,LOW(1)
000b06 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000b07 e3e0      	LDI  R30,LOW(48)
000b08 93ea      	ST   -Y,R30
000b09 940e 1190 	CALL SUBOPT_0x4D
000b0b 3050      	CPI  R21,0
000b0c f009      	BREQ _0x2000094
000b0d 5051      	SUBI R21,LOW(1)
                 _0x2000094:
000b0e 5041      	SUBI R20,LOW(1)
000b0f cfec      	RJMP _0x200008F
                 _0x2000091:
000b10 2f31      	MOV  R19,R17
000b11 89ec      	LDD  R30,Y+20
000b12 30e0      	CPI  R30,0
000b13 f4b9      	BRNE _0x2000095
                 _0x2000096:
000b14 3030      	CPI  R19,0
000b15 f0a1      	BREQ _0x2000098
000b16 ff03      	SBRS R16,3
000b17 c006      	RJMP _0x2000099
000b18 85ee      	LDD  R30,Y+14
000b19 85ff      	LDD  R31,Y+14+1
000b1a 9125      	LPM  R18,Z+
000b1b 87ee      	STD  Y+14,R30
000b1c 87ff      	STD  Y+14+1,R31
000b1d c005      	RJMP _0x200009A
                 _0x2000099:
000b1e 85ae      	LDD  R26,Y+14
000b1f 85bf      	LDD  R27,Y+14+1
000b20 912d      	LD   R18,X+
000b21 87ae      	STD  Y+14,R26
000b22 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000b23 940e 1179 	CALL SUBOPT_0x4A
000b25 3050      	CPI  R21,0
000b26 f009      	BREQ _0x200009B
000b27 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000b28 5031      	SUBI R19,LOW(1)
000b29 cfea      	RJMP _0x2000096
                 _0x2000098:
000b2a c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000b2b 940e 11d1 	CALL SUBOPT_0x56
000b2d 940e 1440 	CALL __DIVD21U
000b2f 2f2e      	MOV  R18,R30
000b30 302a      	CPI  R18,10
000b31 f030      	BRLO _0x20000A0
000b32 ff03      	SBRS R16,3
000b33 c002      	RJMP _0x20000A1
000b34 5c29      	SUBI R18,-LOW(55)
000b35 c001      	RJMP _0x20000A2
                 _0x20000A1:
000b36 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000b37 c001      	RJMP _0x20000A3
                 _0x20000A0:
000b38 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000b39 fd04      	SBRC R16,4
000b3a c021      	RJMP _0x20000A5
000b3b 3321      	CPI  R18,49
000b3c f460      	BRSH _0x20000A7
                +
000b3d 89a8     +LDD R26 , Y + 16
000b3e 89b9     +LDD R27 , Y + 16 + 1
000b3f 898a     +LDD R24 , Y + 16 + 2
000b40 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000b41 30a1     +CPI R26 , LOW ( 0x1 )
000b42 e0e0     +LDI R30 , HIGH ( 0x1 )
000b43 07be     +CPC R27 , R30
000b44 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000b45 078e     +CPC R24 , R30
000b46 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000b47 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000b48 f409      	BRNE _0x20000A6
                 _0x20000A7:
000b49 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000b4a 1743      	CP   R20,R19
000b4b f440      	BRSH _0x2000111
000b4c 1753      	CP   R21,R19
000b4d f010      	BRLO _0x20000AC
000b4e ff00      	SBRS R16,0
000b4f c001      	RJMP _0x20000AD
                 _0x20000AC:
000b50 c010      	RJMP _0x20000AB
                 _0x20000AD:
000b51 e220      	LDI  R18,LOW(32)
000b52 ff07      	SBRS R16,7
000b53 c008      	RJMP _0x20000AE
                 _0x2000111:
000b54 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000b55 6100      	ORI  R16,LOW(16)
000b56 ff02      	SBRS R16,2
000b57 c004      	RJMP _0x20000AF
000b58 940e 11bd 	CALL SUBOPT_0x55
000b5a f009      	BREQ _0x20000B0
000b5b 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000b5c 940e 1179 	CALL SUBOPT_0x4A
000b5e 3050      	CPI  R21,0
000b5f f009      	BREQ _0x20000B1
000b60 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000b61 5031      	SUBI R19,LOW(1)
000b62 940e 11d1 	CALL SUBOPT_0x56
000b64 940e 1471 	CALL __MODD21U
000b66 940e 119f 	CALL SUBOPT_0x4F
000b68 89ec      	LDD  R30,Y+20
                +
000b69 89a8     +LDD R26 , Y + 16
000b6a 89b9     +LDD R27 , Y + 16 + 1
000b6b 898a     +LDD R24 , Y + 16 + 2
000b6c 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000b6d 27ff      	CLR  R31
000b6e 2766      	CLR  R22
000b6f 2777      	CLR  R23
000b70 940e 1440 	CALL __DIVD21U
000b72 940e 11b8 	CALL SUBOPT_0x54
                +
000b74 89e8     +LDD R30 , Y + 16
000b75 89f9     +LDD R31 , Y + 16 + 1
000b76 896a     +LDD R22 , Y + 16 + 2
000b77 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000b78 940e 14c0 	CALL __CPD10
000b7a f009      	BREQ _0x200009F
000b7b cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000b7c ff00      	SBRS R16,0
000b7d c008      	RJMP _0x20000B2
                 _0x20000B3:
000b7e 3050      	CPI  R21,0
000b7f f031      	BREQ _0x20000B5
000b80 5051      	SUBI R21,LOW(1)
000b81 e2e0      	LDI  R30,LOW(32)
000b82 93ea      	ST   -Y,R30
000b83 940e 1190 	CALL SUBOPT_0x4D
000b85 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000b86 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000b87 ce06      	RJMP _0x2000030
                 _0x2000032:
000b88 81ae      	LDD  R26,Y+6
000b89 81bf      	LDD  R27,Y+6+1
000b8a 940e 1481 	CALL __GETW1P
000b8c 940e 14d1 	CALL __LOADLOCR6
000b8e 96ef      	ADIW R28,63
000b8f 966f      	ADIW R28,31
000b90 9508      	RET
                 _sprintf:
000b91 92ff      	PUSH R15
000b92 2ef8      	MOV  R15,R24
000b93 9726      	SBIW R28,6
000b94 940e 14cc 	CALL __SAVELOCR4
000b96 940e 11da 	CALL SUBOPT_0x57
000b98 9730      	SBIW R30,0
000b99 f419      	BRNE _0x20000B7
000b9a efef      	LDI  R30,LOW(65535)
000b9b efff      	LDI  R31,HIGH(65535)
000b9c c023      	RJMP _0x20A0008
                 _0x20000B7:
000b9d 01de      	MOVW R26,R28
000b9e 9616      	ADIW R26,6
000b9f 940e 13fa 	CALL __ADDW2R15
000ba1 018d      	MOVW R16,R26
000ba2 940e 11da 	CALL SUBOPT_0x57
000ba4 83ee      	STD  Y+6,R30
000ba5 83ff      	STD  Y+6+1,R31
000ba6 e0e0      	LDI  R30,LOW(0)
000ba7 87e8      	STD  Y+8,R30
000ba8 87e9      	STD  Y+8+1,R30
000ba9 01de      	MOVW R26,R28
000baa 961a      	ADIW R26,10
000bab 940e 11e1 	CALL SUBOPT_0x58
000bad 93fa      	ST   -Y,R31
000bae 93ea      	ST   -Y,R30
000baf 931a      	ST   -Y,R17
000bb0 930a      	ST   -Y,R16
000bb1 e6ee      	LDI  R30,LOW(_put_buff_G100)
000bb2 e0f8      	LDI  R31,HIGH(_put_buff_G100)
000bb3 93fa      	ST   -Y,R31
000bb4 93ea      	ST   -Y,R30
000bb5 01fe      	MOVW R30,R28
000bb6 963a      	ADIW R30,10
000bb7 93fa      	ST   -Y,R31
000bb8 93ea      	ST   -Y,R30
000bb9 ddbb      	RCALL __print_G100
000bba 019f      	MOVW R18,R30
000bbb 81ae      	LDD  R26,Y+6
000bbc 81bf      	LDD  R27,Y+6+1
000bbd e0e0      	LDI  R30,LOW(0)
000bbe 93ec      	ST   X,R30
000bbf 01f9      	MOVW R30,R18
                 _0x20A0008:
000bc0 940e 14d3 	CALL __LOADLOCR4
000bc2 962a      	ADIW R28,10
000bc3 90ff      	POP  R15
000bc4 9508      	RET
                 _get_buff_G100:
000bc5 931a      	ST   -Y,R17
000bc6 81a9      	LDD  R26,Y+1
000bc7 81ba      	LDD  R27,Y+1+1
000bc8 e0e0      	LDI  R30,LOW(0)
000bc9 93ec      	ST   X,R30
000bca 81ab      	LDD  R26,Y+3
000bcb 81bc      	LDD  R27,Y+3+1
000bcc 91ec      	LD   R30,X
000bcd 2f1e      	MOV  R17,R30
000bce 30e0      	CPI  R30,0
000bcf f019      	BREQ _0x20000BF
000bd0 e0e0      	LDI  R30,LOW(0)
000bd1 93ec      	ST   X,R30
000bd2 c016      	RJMP _0x20000C0
                 _0x20000BF:
000bd3 81a9      	LDD  R26,Y+1
000bd4 81ba      	LDD  R27,Y+1+1
000bd5 9611      	ADIW R26,1
000bd6 940e 1481 	CALL __GETW1P
000bd8 9730      	SBIW R30,0
000bd9 f071      	BREQ _0x20000C1
000bda 81e9      	LDD  R30,Y+1
000bdb 81fa      	LDD  R31,Y+1+1
000bdc 81a1      	LDD  R26,Z+1
000bdd 81b2      	LDD  R27,Z+2
000bde 91ec      	LD   R30,X
000bdf 2f1e      	MOV  R17,R30
000be0 30e0      	CPI  R30,0
000be1 f029      	BREQ _0x20000C2
000be2 81a9      	LDD  R26,Y+1
000be3 81ba      	LDD  R27,Y+1+1
000be4 9611      	ADIW R26,1
000be5 940e 1051 	CALL SUBOPT_0x22
                 _0x20000C2:
000be7 c001      	RJMP _0x20000C3
                 _0x20000C1:
000be8 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000be9 2fe1      	MOV  R30,R17
000bea 8118      	LDD  R17,Y+0
                 _0x20A0007:
000beb 9625      	ADIW R28,5
000bec 9508      	RET
                 __scanf_G100:
000bed 9725      	SBIW R28,5
000bee 940e 14ca 	CALL __SAVELOCR6
000bf0 e0e0      	LDI  R30,LOW(0)
000bf1 e0f0      	LDI  R31,HIGH(0)
000bf2 87e8      	STD  Y+8,R30
000bf3 87f9      	STD  Y+8+1,R31
000bf4 2f4e      	MOV  R20,R30
                 _0x20000C4:
000bf5 89e9      	LDD  R30,Y+17
000bf6 89fa      	LDD  R31,Y+17+1
000bf7 9631      	ADIW R30,1
000bf8 8be9      	STD  Y+17,R30
000bf9 8bfa      	STD  Y+17+1,R31
000bfa 9731      	SBIW R30,1
000bfb 91e4      	LPM  R30,Z
000bfc 2f3e      	MOV  R19,R30
000bfd 30e0      	CPI  R30,0
000bfe f411      	BRNE PC+3
000bff 940c 0d1a 	JMP _0x20000C6
000c01 940e 11e6 	CALL SUBOPT_0x59
000c03 f0c1      	BREQ _0x20000C7
                 _0x20000C8:
000c04 b7ed      	IN   R30,SPL
000c05 b7fe      	IN   R31,SPH
000c06 93fa      	ST   -Y,R31
000c07 93ea      	ST   -Y,R30
000c08 934f      	PUSH R20
000c09 940e 11eb 	CALL SUBOPT_0x5A
000c0b 914f      	POP  R20
000c0c 2f3e      	MOV  R19,R30
000c0d 30e0      	CPI  R30,0
000c0e f019      	BREQ _0x20000CB
000c0f 940e 11e6 	CALL SUBOPT_0x59
000c11 f409      	BRNE _0x20000CC
                 _0x20000CB:
000c12 c007      	RJMP _0x20000CA
                 _0x20000CC:
000c13 940e 11f3 	CALL SUBOPT_0x5B
000c15 f41c      	BRGE _0x20000CD
000c16 efef      	LDI  R30,LOW(65535)
000c17 efff      	LDI  R31,HIGH(65535)
000c18 c103      	RJMP _0x20A0005
                 _0x20000CD:
000c19 cfea      	RJMP _0x20000C8
                 _0x20000CA:
000c1a 2f43      	MOV  R20,R19
000c1b c0fd      	RJMP _0x20000CE
                 _0x20000C7:
000c1c 3235      	CPI  R19,37
000c1d f011      	BREQ PC+3
000c1e 940c 0d01 	JMP _0x20000CF
000c20 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000c21 89e9      	LDD  R30,Y+17
000c22 89fa      	LDD  R31,Y+17+1
000c23 9135      	LPM  R19,Z+
000c24 8be9      	STD  Y+17,R30
000c25 8bfa      	STD  Y+17+1,R31
000c26 3330      	CPI  R19,48
000c27 f010      	BRLO _0x20000D4
000c28 333a      	CPI  R19,58
000c29 f008      	BRLO _0x20000D3
                 _0x20000D4:
000c2a c007      	RJMP _0x20000D2
                 _0x20000D3:
000c2b e0aa      	LDI  R26,LOW(10)
000c2c 9f5a      	MUL  R21,R26
000c2d 2d50      	MOV  R21,R0
000c2e 2fe3      	MOV  R30,R19
000c2f 53e0      	SUBI R30,LOW(48)
000c30 0f5e      	ADD  R21,R30
000c31 cfef      	RJMP _0x20000D0
                 _0x20000D2:
000c32 3030      	CPI  R19,0
000c33 f409      	BRNE _0x20000D6
000c34 c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000c35 b7ed      	IN   R30,SPL
000c36 b7fe      	IN   R31,SPH
000c37 93fa      	ST   -Y,R31
000c38 93ea      	ST   -Y,R30
000c39 934f      	PUSH R20
000c3a 940e 11eb 	CALL SUBOPT_0x5A
000c3c 914f      	POP  R20
000c3d 2f2e      	MOV  R18,R30
000c3e 93ea      	ST   -Y,R30
000c3f 940e 0e34 	CALL _isspace
000c41 30e0      	CPI  R30,0
000c42 f039      	BREQ _0x20000D9
000c43 940e 11f3 	CALL SUBOPT_0x5B
000c45 f41c      	BRGE _0x20000DA
000c46 efef      	LDI  R30,LOW(65535)
000c47 efff      	LDI  R31,HIGH(65535)
000c48 c0d3      	RJMP _0x20A0005
                 _0x20000DA:
000c49 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
000c4a 3020      	CPI  R18,0
000c4b f409      	BRNE _0x20000DB
000c4c c0c4      	RJMP _0x20000DC
                 _0x20000DB:
000c4d 2f42      	MOV  R20,R18
000c4e 3050      	CPI  R21,0
000c4f f409      	BRNE _0x20000DD
000c50 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000c51 2fe3      	MOV  R30,R19
000c52 36e3      	CPI  R30,LOW(0x63)
000c53 f499      	BRNE _0x20000E1
000c54 940e 11f8 	CALL SUBOPT_0x5C
000c56 b7ed      	IN   R30,SPL
000c57 b7fe      	IN   R31,SPH
000c58 93fa      	ST   -Y,R31
000c59 93ea      	ST   -Y,R30
000c5a 934f      	PUSH R20
000c5b 940e 11eb 	CALL SUBOPT_0x5A
000c5d 914f      	POP  R20
000c5e 01d8      	MOVW R26,R16
000c5f 93ec      	ST   X,R30
000c60 940e 11f3 	CALL SUBOPT_0x5B
000c62 f41c      	BRGE _0x20000E2
000c63 efef      	LDI  R30,LOW(65535)
000c64 efff      	LDI  R31,HIGH(65535)
000c65 c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000c66 c097      	RJMP _0x20000E0
                 _0x20000E1:
000c67 37e3      	CPI  R30,LOW(0x73)
000c68 f541      	BRNE _0x20000EB
000c69 940e 11f8 	CALL SUBOPT_0x5C
                 _0x20000E4:
000c6b 2fe5      	MOV  R30,R21
000c6c 5051      	SUBI R21,1
000c6d 30e0      	CPI  R30,0
000c6e f0f1      	BREQ _0x20000E6
000c6f b7ed      	IN   R30,SPL
000c70 b7fe      	IN   R31,SPH
000c71 93fa      	ST   -Y,R31
000c72 93ea      	ST   -Y,R30
000c73 934f      	PUSH R20
000c74 940e 11eb 	CALL SUBOPT_0x5A
000c76 914f      	POP  R20
000c77 2f3e      	MOV  R19,R30
000c78 30e0      	CPI  R30,0
000c79 f019      	BREQ _0x20000E8
000c7a 940e 11e6 	CALL SUBOPT_0x59
000c7c f039      	BREQ _0x20000E7
                 _0x20000E8:
000c7d 940e 11f3 	CALL SUBOPT_0x5B
000c7f f41c      	BRGE _0x20000EA
000c80 efef      	LDI  R30,LOW(65535)
000c81 efff      	LDI  R31,HIGH(65535)
000c82 c099      	RJMP _0x20A0005
                 _0x20000EA:
000c83 c009      	RJMP _0x20000E6
                 _0x20000E7:
000c84 931f      	PUSH R17
000c85 930f      	PUSH R16
                +
000c86 5f0f     +SUBI R16 , LOW ( - 1 )
000c87 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000c88 2fe3      	MOV  R30,R19
000c89 91af      	POP  R26
000c8a 91bf      	POP  R27
000c8b 93ec      	ST   X,R30
000c8c cfde      	RJMP _0x20000E4
                 _0x20000E6:
000c8d 01d8      	MOVW R26,R16
000c8e e0e0      	LDI  R30,LOW(0)
000c8f 93ec      	ST   X,R30
000c90 c06d      	RJMP _0x20000E0
                 _0x20000EB:
000c91 e0e1      	LDI  R30,LOW(1)
000c92 87ea      	STD  Y+10,R30
000c93 2fe3      	MOV  R30,R19
000c94 36e4      	CPI  R30,LOW(0x64)
000c95 f011      	BREQ _0x20000F0
000c96 36e9      	CPI  R30,LOW(0x69)
000c97 f419      	BRNE _0x20000F1
                 _0x20000F0:
000c98 e0e0      	LDI  R30,LOW(0)
000c99 87ea      	STD  Y+10,R30
000c9a c002      	RJMP _0x20000F2
                 _0x20000F1:
000c9b 37e5      	CPI  R30,LOW(0x75)
000c9c f411      	BRNE _0x20000F3
                 _0x20000F2:
000c9d e02a      	LDI  R18,LOW(10)
000c9e c008      	RJMP _0x20000EE
                 _0x20000F3:
000c9f 37e8      	CPI  R30,LOW(0x78)
000ca0 f411      	BRNE _0x20000F4
000ca1 e120      	LDI  R18,LOW(16)
000ca2 c004      	RJMP _0x20000EE
                 _0x20000F4:
000ca3 32e5      	CPI  R30,LOW(0x25)
000ca4 f409      	BRNE _0x20000F7
000ca5 c05b      	RJMP _0x20000F6
                 _0x20000F7:
000ca6 c073      	RJMP _0x20A0006
                 _0x20000EE:
000ca7 e0e0      	LDI  R30,LOW(0)
000ca8 83ee      	STD  Y+6,R30
000ca9 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000caa 2fe5      	MOV  R30,R21
000cab 5051      	SUBI R21,1
000cac 30e0      	CPI  R30,0
000cad f411      	BRNE PC+3
000cae 940c 0cf1 	JMP _0x20000FA
000cb0 b7ed      	IN   R30,SPL
000cb1 b7fe      	IN   R31,SPH
000cb2 93fa      	ST   -Y,R31
000cb3 93ea      	ST   -Y,R30
000cb4 934f      	PUSH R20
000cb5 940e 11eb 	CALL SUBOPT_0x5A
000cb7 914f      	POP  R20
000cb8 2f3e      	MOV  R19,R30
000cb9 32e1      	CPI  R30,LOW(0x21)
000cba f438      	BRSH _0x20000FB
000cbb 940e 11f3 	CALL SUBOPT_0x5B
000cbd f41c      	BRGE _0x20000FC
000cbe efef      	LDI  R30,LOW(65535)
000cbf efff      	LDI  R31,HIGH(65535)
000cc0 c05b      	RJMP _0x20A0005
                 _0x20000FC:
000cc1 c017      	RJMP _0x20000FD
                 _0x20000FB:
000cc2 85ea      	LDD  R30,Y+10
000cc3 30e0      	CPI  R30,0
000cc4 f439      	BRNE _0x20000FE
000cc5 323d      	CPI  R19,45
000cc6 f419      	BRNE _0x20000FF
000cc7 efef      	LDI  R30,LOW(255)
000cc8 87ea      	STD  Y+10,R30
000cc9 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000cca e0e1      	LDI  R30,LOW(1)
000ccb 87ea      	STD  Y+10,R30
                 _0x20000FE:
000ccc 3120      	CPI  R18,16
000ccd f431      	BRNE _0x2000101
000cce 933a      	ST   -Y,R19
000ccf 940e 0e3e 	CALL _isxdigit
000cd1 30e0      	CPI  R30,0
000cd2 f031      	BREQ _0x20000FD
000cd3 c007      	RJMP _0x2000103
                 _0x2000101:
000cd4 933a      	ST   -Y,R19
000cd5 940e 0e2c 	CALL _isdigit
000cd7 30e0      	CPI  R30,0
000cd8 f411      	BRNE _0x2000104
                 _0x20000FD:
000cd9 2f43      	MOV  R20,R19
000cda c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000cdb 3631      	CPI  R19,97
000cdc f010      	BRLO _0x2000105
000cdd 5537      	SUBI R19,LOW(87)
000cde c005      	RJMP _0x2000106
                 _0x2000105:
000cdf 3431      	CPI  R19,65
000ce0 f010      	BRLO _0x2000107
000ce1 5337      	SUBI R19,LOW(55)
000ce2 c001      	RJMP _0x2000108
                 _0x2000107:
000ce3 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000ce4 2fe2      	MOV  R30,R18
000ce5 81ae      	LDD  R26,Y+6
000ce6 81bf      	LDD  R27,Y+6+1
000ce7 e0f0      	LDI  R31,0
000ce8 940e 141f 	CALL __MULW12U
000cea 01df      	MOVW R26,R30
000ceb 2fe3      	MOV  R30,R19
000cec 940e 10ed 	CALL SUBOPT_0x34
000cee 83ee      	STD  Y+6,R30
000cef 83ff      	STD  Y+6+1,R31
000cf0 cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000cf1 940e 11f8 	CALL SUBOPT_0x5C
000cf3 85ea      	LDD  R30,Y+10
000cf4 81ae      	LDD  R26,Y+6
000cf5 81bf      	LDD  R27,Y+6+1
000cf6 e0f0      	LDI  R31,0
000cf7 fde7      	SBRC R30,7
000cf8 efff      	SER  R31
000cf9 940e 141f 	CALL __MULW12U
000cfb 01d8      	MOVW R26,R16
000cfc 93ed      	ST   X+,R30
000cfd 93fc      	ST   X,R31
                 _0x20000E0:
000cfe 940e 1173 	CALL SUBOPT_0x49
000d00 c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000d01 b7ed      	IN   R30,SPL
000d02 b7fe      	IN   R31,SPH
000d03 93fa      	ST   -Y,R31
000d04 93ea      	ST   -Y,R30
000d05 934f      	PUSH R20
000d06 940e 11eb 	CALL SUBOPT_0x5A
000d08 914f      	POP  R20
000d09 17e3      	CP   R30,R19
000d0a f071      	BREQ _0x200010A
000d0b 940e 11f3 	CALL SUBOPT_0x5B
000d0d f41c      	BRGE _0x200010B
000d0e efef      	LDI  R30,LOW(65535)
000d0f efff      	LDI  R31,HIGH(65535)
000d10 c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000d11 85e8      	LDD  R30,Y+8
000d12 85f9      	LDD  R31,Y+8+1
000d13 9730      	SBIW R30,0
000d14 f419      	BRNE _0x200010C
000d15 efef      	LDI  R30,LOW(65535)
000d16 efff      	LDI  R31,HIGH(65535)
000d17 c004      	RJMP _0x20A0005
                 _0x200010C:
000d18 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000d19 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000d1a 85e8      	LDD  R30,Y+8
000d1b 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000d1c 940e 14d1 	CALL __LOADLOCR6
000d1e 9663      	ADIW R28,19
000d1f 9508      	RET
                 _sscanf:
000d20 92ff      	PUSH R15
000d21 2ef8      	MOV  R15,R24
000d22 9723      	SBIW R28,3
000d23 931a      	ST   -Y,R17
000d24 930a      	ST   -Y,R16
000d25 01de      	MOVW R26,R28
000d26 9617      	ADIW R26,7
000d27 940e 11e1 	CALL SUBOPT_0x58
000d29 9730      	SBIW R30,0
000d2a f419      	BRNE _0x200010D
000d2b efef      	LDI  R30,LOW(65535)
000d2c efff      	LDI  R31,HIGH(65535)
000d2d c01c      	RJMP _0x20A0004
                 _0x200010D:
000d2e 01de      	MOVW R26,R28
000d2f 9611      	ADIW R26,1
000d30 940e 13fa 	CALL __ADDW2R15
000d32 018d      	MOVW R16,R26
000d33 01de      	MOVW R26,R28
000d34 9617      	ADIW R26,7
000d35 940e 11e1 	CALL SUBOPT_0x58
000d37 83eb      	STD  Y+3,R30
000d38 83fc      	STD  Y+3+1,R31
000d39 01de      	MOVW R26,R28
000d3a 9615      	ADIW R26,5
000d3b 940e 11e1 	CALL SUBOPT_0x58
000d3d 93fa      	ST   -Y,R31
000d3e 93ea      	ST   -Y,R30
000d3f 931a      	ST   -Y,R17
000d40 930a      	ST   -Y,R16
000d41 ece5      	LDI  R30,LOW(_get_buff_G100)
000d42 e0fb      	LDI  R31,HIGH(_get_buff_G100)
000d43 93fa      	ST   -Y,R31
000d44 93ea      	ST   -Y,R30
000d45 01fe      	MOVW R30,R28
000d46 9638      	ADIW R30,8
000d47 93fa      	ST   -Y,R31
000d48 93ea      	ST   -Y,R30
000d49 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000d4a 8119      	LDD  R17,Y+1
000d4b 8108      	LDD  R16,Y+0
000d4c 9625      	ADIW R28,5
000d4d 90ff      	POP  R15
000d4e 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000d4f 817b         ldd  r23,y+3
000d50 816a         ldd  r22,y+2
000d51 81f9         ldd  r31,y+1
000d52 81e8         ld   r30,y
000d53 fb77         bst  r23,7
000d54 0f77         lsl  r23
000d55 fd67         sbrc r22,7
000d56 6071         sbr  r23,1
000d57 2f97         mov  r25,r23
000d58 579e         subi r25,0x7e
000d59 f081         breq __ftrunc0
000d5a f078         brcs __ftrunc0
000d5b 3198         cpi  r25,24
000d5c f490         brsh __ftrunc1
000d5d 27aa         clr  r26
000d5e 27bb         clr  r27
000d5f 2788         clr  r24
                 __ftrunc2:
000d60 9408         sec
000d61 9587         ror  r24
000d62 95b7         ror  r27
000d63 95a7         ror  r26
000d64 959a         dec  r25
000d65 f7d1         brne __ftrunc2
000d66 23ea         and  r30,r26
000d67 23fb         and  r31,r27
000d68 2368         and  r22,r24
000d69 c005         rjmp __ftrunc1
                 __ftrunc0:
000d6a 94e8         clt
000d6b 2777         clr  r23
000d6c 27ee         clr  r30
000d6d 27ff         clr  r31
000d6e 2766         clr  r22
                 __ftrunc1:
000d6f 776f         cbr  r22,0x80
000d70 9576         lsr  r23
000d71 f408         brcc __ftrunc3
000d72 6860         sbr  r22,0x80
                 __ftrunc3:
000d73 f977         bld  r23,7
000d74 91a9         ld   r26,y+
000d75 91b9         ld   r27,y+
000d76 9189         ld   r24,y+
000d77 9199         ld   r25,y+
000d78 17ea         cp   r30,r26
000d79 07fb         cpc  r31,r27
000d7a 0768         cpc  r22,r24
000d7b 0779         cpc  r23,r25
000d7c fb97         bst  r25,7
000d7d 9508         ret
                 _floor:
000d7e 940e 1203 	CALL SUBOPT_0x5D
000d80 940e 14a9 	CALL __PUTPARD1
000d82 940e 0d4f 	CALL _ftrunc
000d84 940e 14a4 	CALL __PUTD1S0
000d86 f419          brne __floor1
                 __floor0:
000d87 940e 1203 	CALL SUBOPT_0x5D
000d89 c0a0      	RJMP _0x20A0003
                 __floor1:
000d8a f7e6          brtc __floor0
000d8b 940e 1203 	CALL SUBOPT_0x5D
                +
000d8d e0a0     +LDI R26 , LOW ( 0x3F800000 )
000d8e e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000d8f e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000d90 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000d91 940e 12f0 	CALL __SUBF12
000d93 c096      	RJMP _0x20A0003
                 _sin:
000d94 9724      	SBIW R28,4
000d95 931a      	ST   -Y,R17
000d96 e010      	LDI  R17,0
000d97 940e 1206 	CALL SUBOPT_0x5E
                +
000d99 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000d9a eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000d9b e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000d9c e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000d9d 940e 1347 	CALL __MULF12
000d9f 940e 120b 	CALL SUBOPT_0x5F
000da1 940e 1210 	CALL SUBOPT_0x60
000da3 940e 1163 	CALL SUBOPT_0x46
000da5 940e 1206 	CALL SUBOPT_0x5E
000da7 940e 10cc 	CALL SUBOPT_0x2E
000da9 940e 120b 	CALL SUBOPT_0x5F
000dab 940e 1206 	CALL SUBOPT_0x5E
000dad 940e 0f32 	CALL SUBOPT_0x5
000daf 940e 13da 	CALL __CMPF12
000db1 f009      	BREQ PC+2
000db2 f410      	BRCC PC+3
000db3 940c 0dc0 	JMP  _0x2020017
000db5 940e 1210 	CALL SUBOPT_0x60
                +
000db7 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000db8 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000db9 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000dba e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000dbb 940e 12f0 	CALL __SUBF12
000dbd 940e 120b 	CALL SUBOPT_0x5F
000dbf e011      	LDI  R17,LOW(1)
                 _0x2020017:
000dc0 940e 1206 	CALL SUBOPT_0x5E
                +
000dc2 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000dc3 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000dc4 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000dc5 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000dc6 940e 13da 	CALL __CMPF12
000dc8 f009      	BREQ PC+2
000dc9 f410      	BRCC PC+3
000dca 940c 0dd4 	JMP  _0x2020018
000dcc 940e 1206 	CALL SUBOPT_0x5E
000dce 940e 0f32 	CALL SUBOPT_0x5
000dd0 940e 12f0 	CALL __SUBF12
000dd2 940e 120b 	CALL SUBOPT_0x5F
                 _0x2020018:
000dd4 3010      	CPI  R17,0
000dd5 f031      	BREQ _0x2020019
000dd6 940e 1210 	CALL SUBOPT_0x60
000dd8 940e 1251 	CALL __ANEGF1
000dda 940e 120b 	CALL SUBOPT_0x5F
                 _0x2020019:
000ddc 940e 1210 	CALL SUBOPT_0x60
000dde 940e 1206 	CALL SUBOPT_0x5E
000de0 940e 1347 	CALL __MULF12
                +
000de2 83e9     +STD Y + 1 , R30
000de3 83fa     +STD Y + 1 + 1 , R31
000de4 836b     +STD Y + 1 + 2 , R22
000de5 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000de6 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000de7 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000de8 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000de9 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000dea 940e 1347 	CALL __MULF12
000dec 01df      	MOVW R26,R30
000ded 01cb      	MOVW R24,R22
                +
000dee e1ed     +LDI R30 , LOW ( 0x422DE51D )
000def eef5     +LDI R31 , HIGH ( 0x422DE51D )
000df0 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000df1 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000df2 940e 10cc 	CALL SUBOPT_0x2E
000df4 940e 1215 	CALL SUBOPT_0x61
                +
000df6 e4ac     +LDI R26 , LOW ( 0x4104534C )
000df7 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000df8 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000df9 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000dfa 940e 12f7 	CALL __ADDF12
000dfc 940e 1206 	CALL SUBOPT_0x5E
000dfe 940e 1347 	CALL __MULF12
000e00 937f      	PUSH R23
000e01 936f      	PUSH R22
000e02 93ff      	PUSH R31
000e03 93ef      	PUSH R30
                +
000e04 81e9     +LDD R30 , Y + 1
000e05 81fa     +LDD R31 , Y + 1 + 1
000e06 816b     +LDD R22 , Y + 1 + 2
000e07 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000e08 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000e09 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000e0a ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000e0b e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000e0c 940e 12f7 	CALL __ADDF12
000e0e 940e 1215 	CALL SUBOPT_0x61
                +
000e10 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000e11 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000e12 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000e13 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000e14 940e 12f7 	CALL __ADDF12
000e16 91af      	POP  R26
000e17 91bf      	POP  R27
000e18 918f      	POP  R24
000e19 919f      	POP  R25
000e1a 940e 1395 	CALL __DIVF21
000e1c 8118      	LDD  R17,Y+0
000e1d 9629      	ADIW R28,9
000e1e 9508      	RET
                 _cos:
000e1f 940e 149f 	CALL __GETD2S0
                +
000e21 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000e22 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000e23 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000e24 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000e25 940e 12f0 	CALL __SUBF12
000e27 940e 14a9 	CALL __PUTPARD1
000e29 df6a      	RCALL _sin
                 _0x20A0003:
000e2a 9624      	ADIW R28,4
000e2b 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000e2c e0e1          ldi  r30,1
000e2d 91f9          ld   r31,y+
000e2e 33f0          cpi  r31,'0'
000e2f f010          brlo isdigit0
000e30 33fa          cpi  r31,'9'+1
000e31 f008          brlo isdigit1
                 isdigit0:
000e32 27ee          clr  r30
                 isdigit1:
000e33 9508          ret
                 _isspace:
000e34 e0e1          ldi  r30,1
000e35 91f9          ld   r31,y+
000e36 32f0          cpi  r31,' '
000e37 f029          breq isspace1
000e38 30f9          cpi  r31,9
000e39 f010          brlo isspace0
000e3a 30fe          cpi  r31,13+1
000e3b f008          brlo isspace1
                 isspace0:
000e3c 27ee          clr  r30
                 isspace1:
000e3d 9508          ret
                 _isxdigit:
000e3e e0e1          ldi  r30,1
000e3f 91f9          ld   r31,y+
000e40 53f0          subi r31,0x30
000e41 f040          brcs isxdigit0
000e42 30fa          cpi  r31,10
000e43 f038          brcs isxdigit1
000e44 75ff          andi r31,0x5f
000e45 50f7          subi r31,7
000e46 30fa          cpi  r31,10
000e47 f010          brcs isxdigit0
000e48 31f0          cpi  r31,16
000e49 f008          brcs isxdigit1
                 isxdigit0:
000e4a 27ee          clr  r30
                 isxdigit1:
000e4b 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000e4c 91e9          ld   r30,y+
000e4d 91f9          ld   r31,y+
000e4e 91a9          ld   r26,y+
000e4f 91b9          ld   r27,y+
000e50 01cd          movw r24,r26
                 strcpyf0:
000e51 9005      	lpm  r0,z+
000e52 920d          st   x+,r0
000e53 2000          tst  r0
000e54 f7e1          brne strcpyf0
000e55 01fc          movw r30,r24
000e56 9508          ret
                 _strlen:
000e57 91a9          ld   r26,y+
000e58 91b9          ld   r27,y+
000e59 27ee          clr  r30
000e5a 27ff          clr  r31
                 strlen0:
000e5b 916d          ld   r22,x+
000e5c 2366          tst  r22
000e5d f011          breq strlen1
000e5e 9631          adiw r30,1
000e5f cffb          rjmp strlen0
                 strlen1:
000e60 9508          ret
                 _strlenf:
000e61 27aa          clr  r26
000e62 27bb          clr  r27
000e63 91e9          ld   r30,y+
000e64 91f9          ld   r31,y+
                 strlenf0:
000e65 9005      	lpm  r0,z+
000e66 2000          tst  r0
000e67 f011          breq strlenf1
000e68 9611          adiw r26,1
000e69 cffb          rjmp strlenf0
                 strlenf1:
000e6a 01fd          movw r30,r26
000e6b 9508          ret
                 
                 	.CSEG
                 _ftoa:
000e6c 9724      	SBIW R28,4
000e6d d23c      	RCALL SUBOPT_0x29
000e6e e0e0      	LDI  R30,LOW(0)
000e6f 83ea      	STD  Y+2,R30
000e70 e3ef      	LDI  R30,LOW(63)
000e71 83eb      	STD  Y+3,R30
000e72 931a      	ST   -Y,R17
000e73 930a      	ST   -Y,R16
000e74 85eb      	LDD  R30,Y+11
000e75 85fc      	LDD  R31,Y+11+1
000e76 3fef      	CPI  R30,LOW(0xFFFF)
000e77 efaf      	LDI  R26,HIGH(0xFFFF)
000e78 07fa      	CPC  R31,R26
000e79 f429      	BRNE _0x208000D
000e7a d3a1      	RCALL SUBOPT_0x62
                +
000e7b ebee     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000e7c e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000e7d d2a9      	RCALL SUBOPT_0x3D
000e7e c085      	RJMP _0x20A0002
                 _0x208000D:
000e7f 3fef      	CPI  R30,LOW(0x7FFF)
000e80 e7af      	LDI  R26,HIGH(0x7FFF)
000e81 07fa      	CPC  R31,R26
000e82 f429      	BRNE _0x208000C
000e83 d398      	RCALL SUBOPT_0x62
                +
000e84 ebef     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000e85 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000e86 d2a0      	RCALL SUBOPT_0x3D
000e87 c07c      	RJMP _0x20A0002
                 _0x208000C:
000e88 85ac      	LDD  R26,Y+12
000e89 23aa      	TST  R26
000e8a f452      	BRPL _0x208000F
                +
000e8b 85e9     +LDD R30 , Y + 9
000e8c 85fa     +LDD R31 , Y + 9 + 1
000e8d 856b     +LDD R22 , Y + 9 + 2
000e8e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000e8f 940e 1251 	CALL __ANEGF1
000e91 d38f      	RCALL SUBOPT_0x63
000e92 d393      	RCALL SUBOPT_0x64
000e93 e2ed      	LDI  R30,LOW(45)
000e94 93ec      	ST   X,R30
                 _0x208000F:
000e95 85a8      	LDD  R26,Y+8
000e96 30a7      	CPI  R26,LOW(0x7)
000e97 f010      	BRLO _0x2080010
000e98 e0e6      	LDI  R30,LOW(6)
000e99 87e8      	STD  Y+8,R30
                 _0x2080010:
000e9a 8518      	LDD  R17,Y+8
                 _0x2080011:
000e9b 2fe1      	MOV  R30,R17
000e9c 5011      	SUBI R17,1
000e9d 30e0      	CPI  R30,0
000e9e f021      	BREQ _0x2080013
000e9f d38d      	RCALL SUBOPT_0x65
000ea0 d2be      	RCALL SUBOPT_0x45
000ea1 d390      	RCALL SUBOPT_0x66
000ea2 cff8      	RJMP _0x2080011
                 _0x2080013:
000ea3 d393      	RCALL SUBOPT_0x67
000ea4 940e 12f7 	CALL __ADDF12
000ea6 d37a      	RCALL SUBOPT_0x63
000ea7 e010      	LDI  R17,LOW(0)
                +
000ea8 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000ea9 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000eaa e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000eab e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000eac d385      	RCALL SUBOPT_0x66
                 _0x2080014:
000ead d389      	RCALL SUBOPT_0x67
000eae 940e 13da 	CALL __CMPF12
000eb0 f060      	BRLO _0x2080016
000eb1 d37b      	RCALL SUBOPT_0x65
000eb2 d299      	RCALL SUBOPT_0x42
000eb3 d37e      	RCALL SUBOPT_0x66
000eb4 5f1f      	SUBI R17,-LOW(1)
000eb5 3217      	CPI  R17,39
000eb6 f028      	BRLO _0x2080017
000eb7 d364      	RCALL SUBOPT_0x62
                +
000eb8 ece3     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000eb9 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000eba d26c      	RCALL SUBOPT_0x3D
000ebb c048      	RJMP _0x20A0002
                 _0x2080017:
000ebc cff0      	RJMP _0x2080014
                 _0x2080016:
000ebd 3010      	CPI  R17,0
000ebe f421      	BRNE _0x2080018
000ebf d366      	RCALL SUBOPT_0x64
000ec0 e3e0      	LDI  R30,LOW(48)
000ec1 93ec      	ST   X,R30
000ec2 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000ec3 2fe1      	MOV  R30,R17
000ec4 5011      	SUBI R17,1
000ec5 30e0      	CPI  R30,0
000ec6 f0c9      	BREQ _0x208001C
000ec7 d365      	RCALL SUBOPT_0x65
000ec8 d296      	RCALL SUBOPT_0x45
000ec9 d28e      	RCALL SUBOPT_0x44
000eca d298      	RCALL SUBOPT_0x46
000ecb d366      	RCALL SUBOPT_0x66
000ecc d36a      	RCALL SUBOPT_0x67
000ecd 940e 1395 	CALL __DIVF21
000ecf 940e 1284 	CALL __CFD1U
000ed1 2f0e      	MOV  R16,R30
000ed2 d353      	RCALL SUBOPT_0x64
000ed3 d29a      	RCALL SUBOPT_0x48
000ed4 e0f0      	LDI  R31,0
000ed5 d357      	RCALL SUBOPT_0x65
000ed6 940e 1415 	CALL __CWD1
000ed8 940e 12bd 	CALL __CDF1
000eda 940e 1347 	CALL __MULF12
000edc d363      	RCALL SUBOPT_0x68
000edd d1ee      	RCALL SUBOPT_0x2E
000ede d342      	RCALL SUBOPT_0x63
000edf cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000ee0 85e8      	LDD  R30,Y+8
000ee1 30e0      	CPI  R30,0
000ee2 f0e9      	BREQ _0x20A0001
000ee3 d342      	RCALL SUBOPT_0x64
000ee4 e2ee      	LDI  R30,LOW(46)
000ee5 93ec      	ST   X,R30
                 _0x208001E:
000ee6 85e8      	LDD  R30,Y+8
000ee7 50e1      	SUBI R30,LOW(1)
000ee8 87e8      	STD  Y+8,R30
000ee9 5fef      	SUBI R30,-LOW(1)
000eea f0a9      	BREQ _0x2080020
000eeb d354      	RCALL SUBOPT_0x68
000eec d25f      	RCALL SUBOPT_0x42
000eed d333      	RCALL SUBOPT_0x63
                +
000eee 85e9     +LDD R30 , Y + 9
000eef 85fa     +LDD R31 , Y + 9 + 1
000ef0 856b     +LDD R22 , Y + 9 + 2
000ef1 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000ef2 940e 1284 	CALL __CFD1U
000ef4 2f0e      	MOV  R16,R30
000ef5 d330      	RCALL SUBOPT_0x64
000ef6 d277      	RCALL SUBOPT_0x48
000ef7 e0f0      	LDI  R31,0
000ef8 d347      	RCALL SUBOPT_0x68
000ef9 940e 1415 	CALL __CWD1
000efb 940e 12bd 	CALL __CDF1
000efd d1ce      	RCALL SUBOPT_0x2E
000efe d322      	RCALL SUBOPT_0x63
000eff cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000f00 81ae      	LDD  R26,Y+6
000f01 81bf      	LDD  R27,Y+6+1
000f02 e0e0      	LDI  R30,LOW(0)
000f03 93ec      	ST   X,R30
                 _0x20A0002:
000f04 8119      	LDD  R17,Y+1
000f05 8108      	LDD  R16,Y+0
000f06 962d      	ADIW R28,13
000f07 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x2
                 _TIMER2_OVERFLOW:
000502           	.BYTE 0x1
                 _PACKET_BUFF:
000503           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000567           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
000568           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056a           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
00057e           	.BYTE 0x1
                 _CHECK_GETS:
00057f           	.BYTE 0x1
                 _MOTORR_HALL:
000580           	.BYTE 0x4
                 _MOTORL_HALL:
000584           	.BYTE 0x4
                 __seed_G104:
000588           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x0:
000f08 93fa      	ST   -Y,R31
000f09 93ea      	ST   -Y,R30
000f0a 940c 1245 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000f0c e0e0      	LDI  R30,LOW(0)
000f0d 93e0 0568 	STS  _TIMER0_OVERFLOW,R30
000f0f 93e0 0569 	STS  _TIMER0_OVERFLOW+1,R30
000f11 bfe2      	OUT  0x32,R30
000f12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2:
                +
000f13 01fe     +MOVW R30 , R28
000f14 59e8     +SUBI R30 , LOW ( - 616 )
000f15 4ffd     +SBCI R31 , HIGH ( - 616 )
000f16 9001     +LD R0 , Z +
000f17 81f0     +LD R31 , Z
000f18 2de0     +MOV R30 , R0
                 	__GETW1SX 616
000f19 940e 1415 	CALL __CWD1
000f1b 940e 12bd 	CALL __CDF1
                +
000f1d e0a0     +LDI R26 , LOW ( 0x3EC00000 )
000f1e e0b0     +LDI R27 , HIGH ( 0x3EC00000 )
000f1f ec80     +LDI R24 , BYTE3 ( 0x3EC00000 )
000f20 e39e     +LDI R25 , BYTE4 ( 0x3EC00000 )
                 	__GETD2N 0x3EC00000
000f21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000f22 940e 12f7 	CALL __ADDF12
000f24 01df      	MOVW R26,R30
000f25 01cb      	MOVW R24,R22
                +
000f26 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000f27 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000f28 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000f29 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000f2a 940e 1395 	CALL __DIVF21
000f2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4:
000f2d 940e 1347 	CALL __MULF12
000f2f 940e 1286 	CALL __CFD1
000f31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
                +
000f32 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000f33 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000f34 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000f35 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000f36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x6:
000f37 940e 1415 	CALL __CWD1
000f39 940e 12bd 	CALL __CDF1
000f3b 01df      	MOVW R26,R30
000f3c 01cb      	MOVW R24,R22
000f3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000f3e e0e0      	LDI  R30,LOW(0)
000f3f 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000f41 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000f43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
000f44 e0f0      	LDI  R31,0
000f45 0fea      	ADD  R30,R26
000f46 1ffb      	ADC  R31,R27
000f47 2766      	CLR  R22
000f48 2777      	CLR  R23
000f49 940e 12bd 	CALL __CDF1
000f4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
                +
000f4c 01de     +MOVW R26 , R28
000f4d 5aac     +SUBI R26 , LOW ( - 596 )
000f4e 4fbd     +SBCI R27 , HIGH ( - 596 )
000f4f 900d     +LD R0 , X +
000f50 901d     +LD R1 , X +
000f51 918d     +LD R24 , X +
000f52 919c     +LD R25 , X
000f53 01d0     +MOVW R26 , R0
                 	__GETD2SX 596
000f54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
                +
000f55 01de     +MOVW R26 , R28
000f56 5ba0     +SUBI R26 , LOW ( - 592 )
000f57 4fbd     +SBCI R27 , HIGH ( - 592 )
000f58 900d     +LD R0 , X +
000f59 901d     +LD R1 , X +
000f5a 918d     +LD R24 , X +
000f5b 919c     +LD R25 , X
000f5c 01d0     +MOVW R26 , R0
                 	__GETD2SX 592
000f5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
000f5e e0e5      	LDI  R30,LOW(5)
000f5f e0f0      	LDI  R31,HIGH(5)
000f60 cfa7      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xC:
000f61 93ea      	ST   -Y,R30
000f62 e0e2      	LDI  R30,LOW(2)
000f63 e0f0      	LDI  R31,HIGH(2)
000f64 93fa      	ST   -Y,R31
000f65 93ea      	ST   -Y,R30
000f66 93fa      	ST   -Y,R31
000f67 93ea      	ST   -Y,R30
000f68 940e 073b 	CALL _RTU_ReedOperate0
000f6a cff3      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
000f6b e0e3      	LDI  R30,LOW(_PACKET_BUFF)
000f6c e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
000f6d 93fa      	ST   -Y,R31
000f6e 93ea      	ST   -Y,R30
000f6f 91e0 0567 	LDS  R30,_PACKET_BUFF_IDX
000f71 93ea      	ST   -Y,R30
000f72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
                +
000f73 e6e9     +LDI R30 , LOW ( 0x453EFC69 )
000f74 effc     +LDI R31 , HIGH ( 0x453EFC69 )
000f75 e36e     +LDI R22 , BYTE3 ( 0x453EFC69 )
000f76 e475     +LDI R23 , BYTE4 ( 0x453EFC69 )
                 	__GETD1N 0x453EFC69
000f77 940e 1395 	CALL __DIVF21
000f79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF:
000f7a 940e 12f7 	CALL __ADDF12
000f7c 01df      	MOVW R26,R30
000f7d 01cb      	MOVW R24,R22
                +
000f7e e0e0     +LDI R30 , LOW ( 0x40000000 )
000f7f e0f0     +LDI R31 , HIGH ( 0x40000000 )
000f80 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000f81 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000f82 940e 1395 	CALL __DIVF21
000f84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
000f85 940e 12f0 	CALL __SUBF12
000f87 01df      	MOVW R26,R30
000f88 01cb      	MOVW R24,R22
                +
000f89 e1e7     +LDI R30 , LOW ( 0x3E8ED917 )
000f8a edf9     +LDI R31 , HIGH ( 0x3E8ED917 )
000f8b e86e     +LDI R22 , BYTE3 ( 0x3E8ED917 )
000f8c e37e     +LDI R23 , BYTE4 ( 0x3E8ED917 )
                 	__GETD1N 0x3E8ED917
000f8d 940e 1395 	CALL __DIVF21
000f8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
                +
000f90 01fe     +MOVW R30 , R28
000f91 5be8     +SUBI R30 , LOW ( - 584 )
000f92 4ffd     +SBCI R31 , HIGH ( - 584 )
000f93 9001     +LD R0 , Z +
000f94 9011     +LD R1 , Z +
000f95 9161     +LD R22 , Z +
000f96 8170     +LD R23 , Z
000f97 01f0     +MOVW R30 , R0
                 	__GETD1SX 584
000f98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
000f99 01de     +MOVW R26 , R28
000f9a 5bac     +SUBI R26 , LOW ( - 580 )
000f9b 4fbd     +SBCI R27 , HIGH ( - 580 )
000f9c 900d     +LD R0 , X +
000f9d 901d     +LD R1 , X +
000f9e 918d     +LD R24 , X +
000f9f 919c     +LD R25 , X
000fa0 01d0     +MOVW R26 , R0
                 	__GETD2SX 580
000fa1 940e 1347 	CALL __MULF12
000fa3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
                +
000fa4 01de     +MOVW R26 , R28
000fa5 5da0     +SUBI R26 , LOW ( - 560 )
000fa6 4fbd     +SBCI R27 , HIGH ( - 560 )
000fa7 900d     +LD R0 , X +
000fa8 901d     +LD R1 , X +
000fa9 918d     +LD R24 , X +
000faa 919c     +LD R25 , X
000fab 01d0     +MOVW R26 , R0
                 	__GETD2SX 560
000fac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x14:
                +
000fad 01fe     +MOVW R30 , R28
000fae 5bec     +SUBI R30 , LOW ( - 580 )
000faf 4ffd     +SBCI R31 , HIGH ( - 580 )
000fb0 9001     +LD R0 , Z +
000fb1 9011     +LD R1 , Z +
000fb2 9161     +LD R22 , Z +
000fb3 8170     +LD R23 , Z
000fb4 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
                +
000fb5 01de     +MOVW R26 , R28
000fb6 5ba4     +SUBI R26 , LOW ( - 588 )
000fb7 4fbd     +SBCI R27 , HIGH ( - 588 )
000fb8 900d     +LD R0 , X +
000fb9 901d     +LD R1 , X +
000fba 918d     +LD R24 , X +
000fbb 919c     +LD R25 , X
000fbc 01d0     +MOVW R26 , R0
                 	__GETD2SX 588
000fbd 940e 1347 	CALL __MULF12
000fbf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
                +
000fc0 01fe     +MOVW R30 , R28
000fc1 5de0     +SUBI R30 , LOW ( - 560 )
000fc2 4ffd     +SBCI R31 , HIGH ( - 560 )
000fc3 9001     +LD R0 , Z +
000fc4 9011     +LD R1 , Z +
000fc5 9161     +LD R22 , Z +
000fc6 8170     +LD R23 , Z
000fc7 01f0     +MOVW R30 , R0
                 	__GETD1SX 560
000fc8 940e 14a9 	CALL __PUTPARD1
000fca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
                +
000fcb efe6     +LDI R30 , LOW ( 0x426528F6 )
000fcc e2f8     +LDI R31 , HIGH ( 0x426528F6 )
000fcd e665     +LDI R22 , BYTE3 ( 0x426528F6 )
000fce e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
000fcf cf5d      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
000fd0 01de     +MOVW R26 , R28
000fd1 5dae     +SUBI R26 , LOW ( - 546 )
000fd2 4fbd     +SBCI R27 , HIGH ( - 546 )
000fd3 900d     +LD R0 , X +
000fd4 901d     +LD R1 , X +
000fd5 918d     +LD R24 , X +
000fd6 919c     +LD R25 , X
000fd7 01d0     +MOVW R26 , R0
                 	__GETD2SX 546
000fd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
                +
000fd9 01fe     +MOVW R30 , R28
000fda 5bec     +SUBI R30 , LOW ( - 580 )
000fdb 4ffd     +SBCI R31 , HIGH ( - 580 )
000fdc 9001     +LD R0 , Z +
000fdd 9011     +LD R1 , Z +
000fde 9161     +LD R22 , Z +
000fdf 8170     +LD R23 , Z
000fe0 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
                +
000fe1 01de     +MOVW R26 , R28
000fe2 5ca0     +SUBI R26 , LOW ( - 576 )
000fe3 4fbd     +SBCI R27 , HIGH ( - 576 )
000fe4 900d     +LD R0 , X +
000fe5 901d     +LD R1 , X +
000fe6 918d     +LD R24 , X +
000fe7 919c     +LD R25 , X
000fe8 01d0     +MOVW R26 , R0
                 	__GETD2SX 576
000fe9 940e 1347 	CALL __MULF12
000feb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x19:
                +
000fec 01fe     +MOVW R30 , R28
000fed 5dee     +SUBI R30 , LOW ( - 546 )
000fee 4ffd     +SBCI R31 , HIGH ( - 546 )
000fef 9001     +LD R0 , Z +
000ff0 9011     +LD R1 , Z +
000ff1 9161     +LD R22 , Z +
000ff2 8170     +LD R23 , Z
000ff3 01f0     +MOVW R30 , R0
                 	__GETD1SX 546
000ff4 940e 14a9 	CALL __PUTPARD1
000ff6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A:
000ff7 940e 12bd 	CALL __CDF1
                +
000ff9 e0a0     +LDI R26 , LOW ( 0x3E000000 )
000ffa e0b0     +LDI R27 , HIGH ( 0x3E000000 )
000ffb e080     +LDI R24 , BYTE3 ( 0x3E000000 )
000ffc e39e     +LDI R25 , BYTE4 ( 0x3E000000 )
                 	__GETD2N 0x3E000000
000ffd 940e 1347 	CALL __MULF12
                +
000fff eda8     +LDI R26 , LOW ( 0x40490FD8 )
001000 e0bf     +LDI R27 , HIGH ( 0x40490FD8 )
001001 e489     +LDI R24 , BYTE3 ( 0x40490FD8 )
001002 e490     +LDI R25 , BYTE4 ( 0x40490FD8 )
                 	__GETD2N 0x40490FD8
001003 940e 1347 	CALL __MULF12
001005 01df      	MOVW R26,R30
001006 01cb      	MOVW R24,R22
                +
001007 e0e0     +LDI R30 , LOW ( 0x43200000 )
001008 e0f0     +LDI R31 , HIGH ( 0x43200000 )
001009 e260     +LDI R22 , BYTE3 ( 0x43200000 )
00100a e473     +LDI R23 , BYTE4 ( 0x43200000 )
                 	__GETD1N 0x43200000
00100b 940e 1395 	CALL __DIVF21
00100d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
00100e 01de     +MOVW R26 , R28
00100f 5ea8     +SUBI R26 , LOW ( - 536 )
001010 4fbd     +SBCI R27 , HIGH ( - 536 )
001011 900d     +LD R0 , X +
001012 901d     +LD R1 , X +
001013 918d     +LD R24 , X +
001014 919c     +LD R25 , X
001015 01d0     +MOVW R26 , R0
                 	__GETD2SX 536
001016 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
                +
001017 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001018 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001019 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00101a e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00101b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1D:
                +
00101c 01fe     +MOVW R30 , R28
00101d 5ee8     +SUBI R30 , LOW ( - 536 )
00101e 4ffd     +SBCI R31 , HIGH ( - 536 )
00101f 9001     +LD R0 , Z +
001020 9011     +LD R1 , Z +
001021 9161     +LD R22 , Z +
001022 8170     +LD R23 , Z
001023 01f0     +MOVW R30 , R0
                 	__GETD1SX 536
001024 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1E:
                +
001025 01fe     +MOVW R30 , R28
001026 50e8     +SUBI R30 , LOW ( - 504 )
001027 4ffe     +SBCI R31 , HIGH ( - 504 )
001028 9001     +LD R0 , Z +
001029 9011     +LD R1 , Z +
00102a 9161     +LD R22 , Z +
00102b 8170     +LD R23 , Z
00102c 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
                +
00102d 01de     +MOVW R26 , R28
00102e 50a4     +SUBI R26 , LOW ( - 508 )
00102f 4fbe     +SBCI R27 , HIGH ( - 508 )
001030 900d     +LD R0 , X +
001031 901d     +LD R1 , X +
001032 918d     +LD R24 , X +
001033 919c     +LD R25 , X
001034 01d0     +MOVW R26 , R0
                 	__GETD2SX 508
001035 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
001036 01de     +MOVW R26 , R28
001037 5faa     +SUBI R26 , LOW ( - 518 )
001038 4fbd     +SBCI R27 , HIGH ( - 518 )
001039 900d     +LD R0 , X +
00103a 901d     +LD R1 , X +
00103b 918d     +LD R24 , X +
00103c 919c     +LD R25 , X
00103d 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
00103e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
00103f 01fe     +MOVW R30 , R28
001040 5fea     +SUBI R30 , LOW ( - 518 )
001041 4ffd     +SBCI R31 , HIGH ( - 518 )
001042 9001     +LD R0 , Z +
001043 9011     +LD R1 , Z +
001044 9161     +LD R22 , Z +
001045 8170     +LD R23 , Z
001046 01f0     +MOVW R30 , R0
                 	__GETD1SX 518
001047 940e 14a9 	CALL __PUTPARD1
001049 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
00104a 93aa      	ST   -Y,R26
00104b 93ba      	ST   -Y,R27
00104c 93ea      	ST   -Y,R30
00104d 93fa      	ST   -Y,R31
00104e b7ef      	IN   R30,SREG
00104f 93ea      	ST   -Y,R30
001050 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22:
001051 91ed      	LD   R30,X+
001052 91fd      	LD   R31,X+
001053 9631      	ADIW R30,1
001054 93fe      	ST   -X,R31
001055 93ee      	ST   -X,R30
001056 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x23:
001057 91a0 0567 	LDS  R26,_PACKET_BUFF_IDX
001059 e0b0      	LDI  R27,0
00105a 5fad      	SUBI R26,LOW(-_PACKET_BUFF)
00105b 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
00105c b1ec      	IN   R30,0xC
00105d 93ec      	ST   X,R30
00105e 91e0 0567 	LDS  R30,_PACKET_BUFF_IDX
001060 5fef      	SUBI R30,-LOW(1)
001061 93e0 0567 	STS  _PACKET_BUFF_IDX,R30
001063 e0e0      	LDI  R30,LOW(0)
001064 bde4      	OUT  0x24,R30
001065 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24:
001066 e0f0      	LDI  R31,0
001067 59e6      	SUBI R30,LOW(-_VELOCITY_BUFF)
001068 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
001069 8310      	ST   Z,R17
00106a 91e0 057e 	LDS  R30,_VELOCITY_BUFF_IDX
00106c 5fef      	SUBI R30,-LOW(1)
00106d 93e0 057e 	STS  _VELOCITY_BUFF_IDX,R30
00106f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
001070 81aa      	LDD  R26,Y+2
001071 81bb      	LDD  R27,Y+2+1
001072 27ee      	CLR  R30
001073 0fa1      	ADD  R26,R17
001074 1fbe      	ADC  R27,R30
001075 91ec      	LD   R30,X
001076 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x26:
001077 9728      	SBIW R28,8
001078 940e 14cc 	CALL __SAVELOCR4
                +
00107a e020     +LDI R18 , LOW ( 0 )
00107b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00107c 89e8      	LDD  R30,Y+16
00107d 83ec      	STD  Y+4,R30
00107e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x27:
00107f 83ed      	STD  Y+5,R30
001080 85ee      	LDD  R30,Y+14
001081 85ff      	LDD  R31,Y+14+1
001082 940e 140a 	CALL __ASRW8
001084 83ee      	STD  Y+6,R30
001085 85ee      	LDD  R30,Y+14
001086 83ef      	STD  Y+7,R30
001087 85ec      	LDD  R30,Y+12
001088 85fd      	LDD  R31,Y+12+1
001089 940e 140a 	CALL __ASRW8
00108b 87e8      	STD  Y+8,R30
00108c 85ec      	LDD  R30,Y+12
00108d 87e9      	STD  Y+9,R30
00108e e0e0      	LDI  R30,LOW(0)
00108f 87ea      	STD  Y+10,R30
001090 87eb      	STD  Y+11,R30
001091 01fe      	MOVW R30,R28
001092 9634      	ADIW R30,4
001093 93fa      	ST   -Y,R31
001094 93ea      	ST   -Y,R30
001095 e0e6      	LDI  R30,LOW(6)
001096 e0f0      	LDI  R31,HIGH(6)
001097 93fa      	ST   -Y,R31
001098 93ea      	ST   -Y,R30
001099 940e 06fd 	CALL _CRC16
00109b 018f      	MOVW R16,R30
00109c 01f8      	MOVW R30,R16
00109d 87ea      	STD  Y+10,R30
                +
00109e 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
00109f e020     +LDI R18 , LOW ( 0 )
0010a0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0010a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
0010a2 01de      	MOVW R26,R28
0010a3 9614      	ADIW R26,4
0010a4 0fa2      	ADD  R26,R18
0010a5 1fb3      	ADC  R27,R19
0010a6 91ec      	LD   R30,X
0010a7 93ea      	ST   -Y,R30
0010a8 940c 06f7 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0010aa e0e0      	LDI  R30,LOW(0)
0010ab 83e8      	ST   Y,R30
0010ac 83e9      	STD  Y+1,R30
0010ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0010ae 85ae      	LDD  R26,Y+14
0010af 85bf      	LDD  R27,Y+14+1
0010b0 940e 1485 	CALL __GETD1P
0010b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0010b3 85ac      	LDD  R26,Y+12
0010b4 85bd      	LDD  R27,Y+12+1
0010b5 940e 1485 	CALL __GETD1P
0010b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C:
                +
0010b8 e1a7     +LDI R26 , LOW ( 0x3E8ED917 )
0010b9 edb9     +LDI R27 , HIGH ( 0x3E8ED917 )
0010ba e88e     +LDI R24 , BYTE3 ( 0x3E8ED917 )
0010bb e39e     +LDI R25 , BYTE4 ( 0x3E8ED917 )
                 	__GETD2N 0x3E8ED917
0010bc 940e 1347 	CALL __MULF12
0010be 01df      	MOVW R26,R30
0010bf 01cb      	MOVW R24,R22
                +
0010c0 e0e0     +LDI R30 , LOW ( 0x40000000 )
0010c1 e0f0     +LDI R31 , HIGH ( 0x40000000 )
0010c2 e060     +LDI R22 , BYTE3 ( 0x40000000 )
0010c3 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0010c4 940e 1395 	CALL __DIVF21
0010c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2D:
                +
0010c7 83ec     +STD Y + 4 , R30
0010c8 83fd     +STD Y + 4 + 1 , R31
0010c9 836e     +STD Y + 4 + 2 , R22
0010ca 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0010cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2E:
0010cc 940e 14b3 	CALL __SWAPD12
0010ce 940e 12f0 	CALL __SUBF12
0010d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F:
                +
0010d1 81ac     +LDD R26 , Y + 4
0010d2 81bd     +LDD R27 , Y + 4 + 1
0010d3 818e     +LDD R24 , Y + 4 + 2
0010d4 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0010d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
                +
0010d6 e6e9     +LDI R30 , LOW ( 0x453EFC69 )
0010d7 effc     +LDI R31 , HIGH ( 0x453EFC69 )
0010d8 e36e     +LDI R22 , BYTE3 ( 0x453EFC69 )
0010d9 e475     +LDI R23 , BYTE4 ( 0x453EFC69 )
                 	__GETD1N 0x453EFC69
0010da ce52      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
0010db e0e0      	LDI  R30,LOW(0)
0010dc e0f0      	LDI  R31,HIGH(0)
0010dd 93ed      	ST   X+,R30
0010de 93fc      	ST   X,R31
0010df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x32:
0010e0 93fa      	ST   -Y,R31
0010e1 93ea      	ST   -Y,R30
0010e2 940e 072c 	CALL _RTU_WriteOperate0
0010e4 ce79      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x33:
0010e5 93ea      	ST   -Y,R30
0010e6 e7e8      	LDI  R30,LOW(120)
0010e7 e0f0      	LDI  R31,HIGH(120)
0010e8 93fa      	ST   -Y,R31
0010e9 93ea      	ST   -Y,R30
0010ea e0e1      	LDI  R30,LOW(1)
0010eb e0f0      	LDI  R31,HIGH(1)
0010ec cff3      	RJMP SUBOPT_0x32
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34:
0010ed e0f0      	LDI  R31,0
0010ee 0fea      	ADD  R30,R26
0010ef 1ffb      	ADC  R31,R27
0010f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x35:
0010f1 936a      	ST   -Y,R22
0010f2 937a      	ST   -Y,R23
0010f3 93aa      	ST   -Y,R26
0010f4 93ba      	ST   -Y,R27
0010f5 93ea      	ST   -Y,R30
0010f6 93fa      	ST   -Y,R31
0010f7 b7ef      	IN   R30,SREG
0010f8 93ea      	ST   -Y,R30
0010f9 e0a0      	LDI  R26,0
0010fa 990c      	SBIC 0x1,4
0010fb e0a1      	LDI  R26,1
0010fc e0e0      	LDI  R30,0
0010fd 990d      	SBIC 0x1,5
0010fe e0e1      	LDI  R30,1
0010ff 17ea      	CP   R30,R26
001100 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36:
001101 e8a0      	LDI  R26,LOW(_MOTORR_HALL)
001102 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
001103 940e 148b 	CALL __GETD1P_INC
001105 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x37:
                +
001106 5fef     +SUBI R30 , LOW ( - 1 )
001107 4fff     +SBCI R31 , HIGH ( - 1 )
001108 4f6f     +SBCI R22 , BYTE3 ( - 1 )
001109 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00110a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x38:
00110b 940e 1495 	CALL __PUTDP1_DEC
00110d 9731      	SBIW R30,1
00110e 4060      	SBCI R22,0
00110f 4070      	SBCI R23,0
001110 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x39:
001111 9731      	SBIW R30,1
001112 4060      	SBCI R22,0
001113 4070      	SBCI R23,0
001114 940e 1495 	CALL __PUTDP1_DEC
001116 cfef      	RJMP SUBOPT_0x37
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
001117 dfee      	RCALL SUBOPT_0x37
001118 cff2      	RJMP SUBOPT_0x38
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
001119 936a      	ST   -Y,R22
00111a 937a      	ST   -Y,R23
00111b 93aa      	ST   -Y,R26
00111c 93ba      	ST   -Y,R27
00111d 93ea      	ST   -Y,R30
00111e 93fa      	ST   -Y,R31
00111f b7ef      	IN   R30,SREG
001120 93ea      	ST   -Y,R30
001121 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
001122 e8a4      	LDI  R26,LOW(_MOTORL_HALL)
001123 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
001124 940e 148b 	CALL __GETD1P_INC
001126 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D:
001127 93fa      	ST   -Y,R31
001128 93ea      	ST   -Y,R30
001129 940c 0e4c 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3E:
00112b dfa5      	RCALL SUBOPT_0x2F
                +
00112c e0e0     +LDI R30 , LOW ( 0x41200000 )
00112d e0f0     +LDI R31 , HIGH ( 0x41200000 )
00112e e260     +LDI R22 , BYTE3 ( 0x41200000 )
00112f e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001130 940e 1347 	CALL __MULF12
001132 cf94      	RJMP SUBOPT_0x2D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3F:
                +
001133 81ec     +LDD R30 , Y + 4
001134 81fd     +LDD R31 , Y + 4 + 1
001135 816e     +LDD R22 , Y + 4 + 2
001136 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
001137 85ac     +LDD R26 , Y + 12
001138 85bd     +LDD R27 , Y + 12 + 1
001139 858e     +LDD R24 , Y + 12 + 2
00113a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00113b 940e 13da 	CALL __CMPF12
00113d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40:
                +
00113e 85ac     +LDD R26 , Y + 12
00113f 85bd     +LDD R27 , Y + 12 + 1
001140 858e     +LDD R24 , Y + 12 + 2
001141 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001142 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x41:
001143 ded3      	RCALL SUBOPT_0x1C
001144 940e 1347 	CALL __MULF12
                +
001146 87ec     +STD Y + 12 , R30
001147 87fd     +STD Y + 12 + 1 , R31
001148 876e     +STD Y + 12 + 2 , R22
001149 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00114a 5f3f      	SUBI R19,-LOW(1)
00114b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x42:
                +
00114c e0e0     +LDI R30 , LOW ( 0x41200000 )
00114d e0f0     +LDI R31 , HIGH ( 0x41200000 )
00114e e260     +LDI R22 , BYTE3 ( 0x41200000 )
00114f e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001150 940e 1347 	CALL __MULF12
001152 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
                +
001153 87ec     +STD Y + 12 , R30
001154 87fd     +STD Y + 12 + 1 , R31
001155 876e     +STD Y + 12 + 2 , R22
001156 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001157 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x44:
                +
001158 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001159 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00115a e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00115b e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00115c 940e 12f7 	CALL __ADDF12
00115e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
00115f deb7      	RCALL SUBOPT_0x1C
001160 940e 1347 	CALL __MULF12
001162 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
001163 940e 14a9 	CALL __PUTPARD1
001165 940c 0d7e 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
001167 85a8      	LDD  R26,Y+8
001168 85b9      	LDD  R27,Y+8+1
001169 9611      	ADIW R26,1
00116a 87a8      	STD  Y+8,R26
00116b 87b9      	STD  Y+8+1,R27
00116c 9711      	SBIW R26,1
00116d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x48:
00116e 2fe0      	MOV  R30,R16
00116f 5de0      	SUBI R30,-LOW(48)
001170 93ec      	ST   X,R30
001171 2fe0      	MOV  R30,R16
001172 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x49:
001173 85e8      	LDD  R30,Y+8
001174 85f9      	LDD  R31,Y+8+1
001175 9631      	ADIW R30,1
001176 87e8      	STD  Y+8,R30
001177 87f9      	STD  Y+8+1,R31
001178 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x4A:
001179 932a      	ST   -Y,R18
00117a 81ef      	LDD  R30,Y+7
00117b 85f8      	LDD  R31,Y+7+1
00117c 93fa      	ST   -Y,R31
00117d 93ea      	ST   -Y,R30
00117e 85eb      	LDD  R30,Y+11
00117f 85fc      	LDD  R31,Y+11+1
001180 9509      	ICALL
001181 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x4B:
                +
001182 01fe     +MOVW R30 , R28
001183 5ae6     +SUBI R30 , LOW ( - 90 )
001184 4fff     +SBCI R31 , HIGH ( - 90 )
001185 9001     +LD R0 , Z +
001186 81f0     +LD R31 , Z
001187 2de0     +MOV R30 , R0
                 	__GETW1SX 90
001188 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x4C:
001189 9734      	SBIW R30,4
                +
00118a 01de     +MOVW R26 , R28
00118b 5aa6     +SUBI R26 , LOW ( - 90 )
00118c 4fbf     +SBCI R27 , HIGH ( - 90 )
00118d 93ed     +ST X + , R30
00118e 93fc     +ST X , R31
                 	__PUTW1SX 90
00118f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x4D:
001190 81ef      	LDD  R30,Y+7
001191 85f8      	LDD  R31,Y+7+1
001192 93fa      	ST   -Y,R31
001193 93ea      	ST   -Y,R30
001194 85eb      	LDD  R30,Y+11
001195 85fc      	LDD  R31,Y+11+1
001196 9509      	ICALL
001197 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x4E:
                +
001198 01de     +MOVW R26 , R28
001199 5aa6     +SUBI R26 , LOW ( - 90 )
00119a 4fbf     +SBCI R27 , HIGH ( - 90 )
00119b 900d     +LD R0 , X +
00119c 91bc     +LD R27 , X
00119d 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00119e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4F:
                +
00119f 87ea     +STD Y + 10 , R30
0011a0 87fb     +STD Y + 10 + 1 , R31
0011a1 876c     +STD Y + 10 + 2 , R22
0011a2 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0011a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x50:
0011a4 dfdd      	RCALL SUBOPT_0x4B
0011a5 cfe3      	RJMP SUBOPT_0x4C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x51:
                +
0011a6 85ea     +LDD R30 , Y + 10
0011a7 85fb     +LDD R31 , Y + 10 + 1
0011a8 856c     +LDD R22 , Y + 10 + 2
0011a9 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0011aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x52:
0011ab 87ee      	STD  Y+14,R30
0011ac 87ff      	STD  Y+14+1,R31
0011ad 93fa      	ST   -Y,R31
0011ae 93ea      	ST   -Y,R30
0011af 940e 0e57 	CALL _strlen
0011b1 2f1e      	MOV  R17,R30
0011b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x53:
0011b3 dfe4      	RCALL SUBOPT_0x4E
0011b4 9614      	ADIW R26,4
0011b5 940e 1481 	CALL __GETW1P
0011b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x54:
                +
0011b8 8be8     +STD Y + 16 , R30
0011b9 8bf9     +STD Y + 16 + 1 , R31
0011ba 8b6a     +STD Y + 16 + 2 , R22
0011bb 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0011bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x55:
0011bd 7f0b      	ANDI R16,LOW(251)
0011be 89ed      	LDD  R30,Y+21
0011bf 93ea      	ST   -Y,R30
                +
0011c0 01fe     +MOVW R30 , R28
0011c1 5ae9     +SUBI R30 , LOW ( - 87 )
0011c2 4fff     +SBCI R31 , HIGH ( - 87 )
0011c3 9001     +LD R0 , Z +
0011c4 81f0     +LD R31 , Z
0011c5 2de0     +MOV R30 , R0
                 	__GETW1SX 87
0011c6 93fa      	ST   -Y,R31
0011c7 93ea      	ST   -Y,R30
                +
0011c8 01fe     +MOVW R30 , R28
0011c9 5ae5     +SUBI R30 , LOW ( - 91 )
0011ca 4fff     +SBCI R31 , HIGH ( - 91 )
0011cb 9001     +LD R0 , Z +
0011cc 81f0     +LD R31 , Z
0011cd 2de0     +MOV R30 , R0
                 	__GETW1SX 91
0011ce 9509      	ICALL
0011cf 3050      	CPI  R21,0
0011d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x56:
                +
0011d1 89e8     +LDD R30 , Y + 16
0011d2 89f9     +LDD R31 , Y + 16 + 1
0011d3 896a     +LDD R22 , Y + 16 + 2
0011d4 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0011d5 85aa     +LDD R26 , Y + 10
0011d6 85bb     +LDD R27 , Y + 10 + 1
0011d7 858c     +LDD R24 , Y + 10 + 2
0011d8 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0011d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x57:
0011da 01de      	MOVW R26,R28
0011db 961c      	ADIW R26,12
0011dc 940e 13fa 	CALL __ADDW2R15
0011de 940e 1481 	CALL __GETW1P
0011e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x58:
0011e1 940e 13fa 	CALL __ADDW2R15
0011e3 940e 1481 	CALL __GETW1P
0011e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x59:
0011e6 933a      	ST   -Y,R19
0011e7 940e 0e34 	CALL _isspace
0011e9 30e0      	CPI  R30,0
0011ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x5A:
0011eb 85ed      	LDD  R30,Y+13
0011ec 85fe      	LDD  R31,Y+13+1
0011ed 93fa      	ST   -Y,R31
0011ee 93ea      	ST   -Y,R30
0011ef 89e9      	LDD  R30,Y+17
0011f0 89fa      	LDD  R31,Y+17+1
0011f1 9509      	ICALL
0011f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5B:
0011f3 85ab      	LDD  R26,Y+11
0011f4 85bc      	LDD  R27,Y+11+1
0011f5 91ac      	LD   R26,X
0011f6 30a0      	CPI  R26,0
0011f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5C:
0011f8 85ef      	LDD  R30,Y+15
0011f9 89f8      	LDD  R31,Y+15+1
0011fa 9734      	SBIW R30,4
0011fb 87ef      	STD  Y+15,R30
0011fc 8bf8      	STD  Y+15+1,R31
0011fd 85af      	LDD  R26,Y+15
0011fe 89b8      	LDD  R27,Y+15+1
0011ff 9614      	ADIW R26,4
001200 910d      	LD   R16,X+
001201 911c      	LD   R17,X
001202 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
001203 940e 149a 	CALL __GETD1S0
001205 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5E:
                +
001206 81ad     +LDD R26 , Y + 5
001207 81be     +LDD R27 , Y + 5 + 1
001208 818f     +LDD R24 , Y + 5 + 2
001209 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00120a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5F:
                +
00120b 83ed     +STD Y + 5 , R30
00120c 83fe     +STD Y + 5 + 1 , R31
00120d 836f     +STD Y + 5 + 2 , R22
00120e 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00120f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x60:
                +
001210 81ed     +LDD R30 , Y + 5
001211 81fe     +LDD R31 , Y + 5 + 1
001212 816f     +LDD R22 , Y + 5 + 2
001213 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
001214 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
001215 81a9     +LDD R26 , Y + 1
001216 81ba     +LDD R27 , Y + 1 + 1
001217 818b     +LDD R24 , Y + 1 + 2
001218 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001219 940e 1347 	CALL __MULF12
00121b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x62:
00121c 81ee      	LDD  R30,Y+6
00121d 81ff      	LDD  R31,Y+6+1
00121e 93fa      	ST   -Y,R31
00121f 93ea      	ST   -Y,R30
001220 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x63:
                +
001221 87e9     +STD Y + 9 , R30
001222 87fa     +STD Y + 9 + 1 , R31
001223 876b     +STD Y + 9 + 2 , R22
001224 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
001225 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x64:
001226 81ae      	LDD  R26,Y+6
001227 81bf      	LDD  R27,Y+6+1
001228 9611      	ADIW R26,1
001229 83ae      	STD  Y+6,R26
00122a 83bf      	STD  Y+6+1,R27
00122b 9711      	SBIW R26,1
00122c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x65:
                +
00122d 81aa     +LDD R26 , Y + 2
00122e 81bb     +LDD R27 , Y + 2 + 1
00122f 818c     +LDD R24 , Y + 2 + 2
001230 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001231 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x66:
                +
001232 83ea     +STD Y + 2 , R30
001233 83fb     +STD Y + 2 + 1 , R31
001234 836c     +STD Y + 2 + 2 , R22
001235 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
001236 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x67:
                +
001237 81ea     +LDD R30 , Y + 2
001238 81fb     +LDD R31 , Y + 2 + 1
001239 816c     +LDD R22 , Y + 2 + 2
00123a 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00123b 85a9     +LDD R26 , Y + 9
00123c 85ba     +LDD R27 , Y + 9 + 1
00123d 858b     +LDD R24 , Y + 9 + 2
00123e 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00123f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x68:
                +
001240 85a9     +LDD R26 , Y + 9
001241 85ba     +LDD R27 , Y + 9 + 1
001242 858b     +LDD R24 , Y + 9 + 2
001243 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001244 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001245 91e9      	ld   r30,y+
001246 91f9      	ld   r31,y+
001247 9630      	adiw r30,0
001248 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001249 e686     +LDI R24 , LOW ( 0xE66 )
00124a e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
00124b 9701     +SBIW R24 , 1
00124c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
00124d 95a8      	wdr
00124e 9731      	sbiw r30,1
00124f f7c9      	brne __delay_ms0
                 __delay_ms1:
001250 9508      	ret
                 
                 __ANEGF1:
001251 9730      	SBIW R30,0
001252 4060      	SBCI R22,0
001253 4070      	SBCI R23,0
001254 f009      	BREQ __ANEGF10
001255 5870      	SUBI R23,0x80
                 __ANEGF10:
001256 9508      	RET
                 
                 __ROUND_REPACK:
001257 2355      	TST  R21
001258 f442      	BRPL __REPACK
001259 3850      	CPI  R21,0x80
00125a f411      	BRNE __ROUND_REPACK0
00125b ffe0      	SBRS R30,0
00125c c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00125d 9631      	ADIW R30,1
00125e 1f69      	ADC  R22,R25
00125f 1f79      	ADC  R23,R25
001260 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001261 e850      	LDI  R21,0x80
001262 2757      	EOR  R21,R23
001263 f411      	BRNE __REPACK0
001264 935f      	PUSH R21
001265 c0cf      	RJMP __ZERORES
                 __REPACK0:
001266 3f5f      	CPI  R21,0xFF
001267 f031      	BREQ __REPACK1
001268 0f66      	LSL  R22
001269 0c00      	LSL  R0
00126a 9557      	ROR  R21
00126b 9567      	ROR  R22
00126c 2f75      	MOV  R23,R21
00126d 9508      	RET
                 __REPACK1:
00126e 935f      	PUSH R21
00126f 2000      	TST  R0
001270 f00a      	BRMI __REPACK2
001271 c0cf      	RJMP __MAXRES
                 __REPACK2:
001272 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
001273 e850      	LDI  R21,0x80
001274 2e19      	MOV  R1,R25
001275 2215      	AND  R1,R21
001276 0f88      	LSL  R24
001277 1f99      	ROL  R25
001278 2795      	EOR  R25,R21
001279 0f55      	LSL  R21
00127a 9587      	ROR  R24
                 
                 __UNPACK1:
00127b e850      	LDI  R21,0x80
00127c 2e07      	MOV  R0,R23
00127d 2205      	AND  R0,R21
00127e 0f66      	LSL  R22
00127f 1f77      	ROL  R23
001280 2775      	EOR  R23,R21
001281 0f55      	LSL  R21
001282 9567      	ROR  R22
001283 9508      	RET
                 
                 __CFD1U:
001284 9468      	SET
001285 c001      	RJMP __CFD1U0
                 __CFD1:
001286 94e8      	CLT
                 __CFD1U0:
001287 935f      	PUSH R21
001288 dff2      	RCALL __UNPACK1
001289 3870      	CPI  R23,0x80
00128a f018      	BRLO __CFD10
00128b 3f7f      	CPI  R23,0xFF
00128c f408      	BRCC __CFD10
00128d c0a7      	RJMP __ZERORES
                 __CFD10:
00128e e156      	LDI  R21,22
00128f 1b57      	SUB  R21,R23
001290 f4aa      	BRPL __CFD11
001291 9551      	NEG  R21
001292 3058      	CPI  R21,8
001293 f40e      	BRTC __CFD19
001294 3059      	CPI  R21,9
                 __CFD19:
001295 f030      	BRLO __CFD17
001296 efef      	SER  R30
001297 efff      	SER  R31
001298 ef6f      	SER  R22
001299 e77f      	LDI  R23,0x7F
00129a f977      	BLD  R23,7
00129b c01a      	RJMP __CFD15
                 __CFD17:
00129c 2777      	CLR  R23
00129d 2355      	TST  R21
00129e f0b9      	BREQ __CFD15
                 __CFD18:
00129f 0fee      	LSL  R30
0012a0 1fff      	ROL  R31
0012a1 1f66      	ROL  R22
0012a2 1f77      	ROL  R23
0012a3 955a      	DEC  R21
0012a4 f7d1      	BRNE __CFD18
0012a5 c010      	RJMP __CFD15
                 __CFD11:
0012a6 2777      	CLR  R23
                 __CFD12:
0012a7 3058      	CPI  R21,8
0012a8 f028      	BRLO __CFD13
0012a9 2fef      	MOV  R30,R31
0012aa 2ff6      	MOV  R31,R22
0012ab 2f67      	MOV  R22,R23
0012ac 5058      	SUBI R21,8
0012ad cff9      	RJMP __CFD12
                 __CFD13:
0012ae 2355      	TST  R21
0012af f031      	BREQ __CFD15
                 __CFD14:
0012b0 9576      	LSR  R23
0012b1 9567      	ROR  R22
0012b2 95f7      	ROR  R31
0012b3 95e7      	ROR  R30
0012b4 955a      	DEC  R21
0012b5 f7d1      	BRNE __CFD14
                 __CFD15:
0012b6 2000      	TST  R0
0012b7 f40a      	BRPL __CFD16
0012b8 d149      	RCALL __ANEGD1
                 __CFD16:
0012b9 915f      	POP  R21
0012ba 9508      	RET
                 
                 __CDF1U:
0012bb 9468      	SET
0012bc c001      	RJMP __CDF1U0
                 __CDF1:
0012bd 94e8      	CLT
                 __CDF1U0:
0012be 9730      	SBIW R30,0
0012bf 4060      	SBCI R22,0
0012c0 4070      	SBCI R23,0
0012c1 f0b1      	BREQ __CDF10
0012c2 2400      	CLR  R0
0012c3 f026      	BRTS __CDF11
0012c4 2377      	TST  R23
0012c5 f412      	BRPL __CDF11
0012c6 9400      	COM  R0
0012c7 d13a      	RCALL __ANEGD1
                 __CDF11:
0012c8 2e17      	MOV  R1,R23
0012c9 e17e      	LDI  R23,30
0012ca 2011      	TST  R1
                 __CDF12:
0012cb f032      	BRMI __CDF13
0012cc 957a      	DEC  R23
0012cd 0fee      	LSL  R30
0012ce 1fff      	ROL  R31
0012cf 1f66      	ROL  R22
0012d0 1c11      	ROL  R1
0012d1 cff9      	RJMP __CDF12
                 __CDF13:
0012d2 2fef      	MOV  R30,R31
0012d3 2ff6      	MOV  R31,R22
0012d4 2d61      	MOV  R22,R1
0012d5 935f      	PUSH R21
0012d6 df8a      	RCALL __REPACK
0012d7 915f      	POP  R21
                 __CDF10:
0012d8 9508      	RET
                 
                 __SWAPACC:
0012d9 934f      	PUSH R20
0012da 01af      	MOVW R20,R30
0012db 01fd      	MOVW R30,R26
0012dc 01da      	MOVW R26,R20
0012dd 01ab      	MOVW R20,R22
0012de 01bc      	MOVW R22,R24
0012df 01ca      	MOVW R24,R20
0012e0 2d40      	MOV  R20,R0
0012e1 2c01      	MOV  R0,R1
0012e2 2e14      	MOV  R1,R20
0012e3 914f      	POP  R20
0012e4 9508      	RET
                 
                 __UADD12:
0012e5 0fea      	ADD  R30,R26
0012e6 1ffb      	ADC  R31,R27
0012e7 1f68      	ADC  R22,R24
0012e8 9508      	RET
                 
                 __NEGMAN1:
0012e9 95e0      	COM  R30
0012ea 95f0      	COM  R31
0012eb 9560      	COM  R22
0012ec 5fef      	SUBI R30,-1
0012ed 4fff      	SBCI R31,-1
0012ee 4f6f      	SBCI R22,-1
0012ef 9508      	RET
                 
                 __SUBF12:
0012f0 935f      	PUSH R21
0012f1 df81      	RCALL __UNPACK
0012f2 3890      	CPI  R25,0x80
0012f3 f171      	BREQ __ADDF129
0012f4 e850      	LDI  R21,0x80
0012f5 2615      	EOR  R1,R21
                 
0012f6 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0012f7 935f      	PUSH R21
0012f8 df7a      	RCALL __UNPACK
0012f9 3890      	CPI  R25,0x80
0012fa f139      	BREQ __ADDF129
                 
                 __ADDF120:
0012fb 3870      	CPI  R23,0x80
0012fc f121      	BREQ __ADDF128
                 __ADDF121:
0012fd 2f57      	MOV  R21,R23
0012fe 1b59      	SUB  R21,R25
0012ff f12b      	BRVS __ADDF1211
001300 f412      	BRPL __ADDF122
001301 dfd7      	RCALL __SWAPACC
001302 cffa      	RJMP __ADDF121
                 __ADDF122:
001303 3158      	CPI  R21,24
001304 f018      	BRLO __ADDF123
001305 27aa      	CLR  R26
001306 27bb      	CLR  R27
001307 2788      	CLR  R24
                 __ADDF123:
001308 3058      	CPI  R21,8
001309 f028      	BRLO __ADDF124
00130a 2fab      	MOV  R26,R27
00130b 2fb8      	MOV  R27,R24
00130c 2788      	CLR  R24
00130d 5058      	SUBI R21,8
00130e cff9      	RJMP __ADDF123
                 __ADDF124:
00130f 2355      	TST  R21
001310 f029      	BREQ __ADDF126
                 __ADDF125:
001311 9586      	LSR  R24
001312 95b7      	ROR  R27
001313 95a7      	ROR  R26
001314 955a      	DEC  R21
001315 f7d9      	BRNE __ADDF125
                 __ADDF126:
001316 2d50      	MOV  R21,R0
001317 2551      	EOR  R21,R1
001318 f072      	BRMI __ADDF127
001319 dfcb      	RCALL __UADD12
00131a f438      	BRCC __ADDF129
00131b 9567      	ROR  R22
00131c 95f7      	ROR  R31
00131d 95e7      	ROR  R30
00131e 9573      	INC  R23
00131f f413      	BRVC __ADDF129
001320 c020      	RJMP __MAXRES
                 __ADDF128:
001321 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001322 df3e      	RCALL __REPACK
001323 915f      	POP  R21
001324 9508      	RET
                 __ADDF1211:
001325 f7d8      	BRCC __ADDF128
001326 cffb      	RJMP __ADDF129
                 __ADDF127:
001327 1bea      	SUB  R30,R26
001328 0bfb      	SBC  R31,R27
001329 0b68      	SBC  R22,R24
00132a f051      	BREQ __ZERORES
00132b f410      	BRCC __ADDF1210
00132c 9400      	COM  R0
00132d dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00132e 2366      	TST  R22
00132f f392      	BRMI __ADDF129
001330 0fee      	LSL  R30
001331 1fff      	ROL  R31
001332 1f66      	ROL  R22
001333 957a      	DEC  R23
001334 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001335 27ee      	CLR  R30
001336 27ff      	CLR  R31
001337 2766      	CLR  R22
001338 2777      	CLR  R23
001339 915f      	POP  R21
00133a 9508      	RET
                 
                 __MINRES:
00133b efef      	SER  R30
00133c efff      	SER  R31
00133d e76f      	LDI  R22,0x7F
00133e ef7f      	SER  R23
00133f 915f      	POP  R21
001340 9508      	RET
                 
                 __MAXRES:
001341 efef      	SER  R30
001342 efff      	SER  R31
001343 e76f      	LDI  R22,0x7F
001344 e77f      	LDI  R23,0x7F
001345 915f      	POP  R21
001346 9508      	RET
                 
                 __MULF12:
001347 935f      	PUSH R21
001348 df2a      	RCALL __UNPACK
001349 3870      	CPI  R23,0x80
00134a f351      	BREQ __ZERORES
00134b 3890      	CPI  R25,0x80
00134c f341      	BREQ __ZERORES
00134d 2401      	EOR  R0,R1
00134e 9408      	SEC
00134f 1f79      	ADC  R23,R25
001350 f423      	BRVC __MULF124
001351 f31c      	BRLT __ZERORES
                 __MULF125:
001352 2000      	TST  R0
001353 f33a      	BRMI __MINRES
001354 cfec      	RJMP __MAXRES
                 __MULF124:
001355 920f      	PUSH R0
001356 931f      	PUSH R17
001357 932f      	PUSH R18
001358 933f      	PUSH R19
001359 934f      	PUSH R20
00135a 2711      	CLR  R17
00135b 2722      	CLR  R18
00135c 2799      	CLR  R25
00135d 9f68      	MUL  R22,R24
00135e 01a0      	MOVW R20,R0
00135f 9f8f      	MUL  R24,R31
001360 2d30      	MOV  R19,R0
001361 0d41      	ADD  R20,R1
001362 1f59      	ADC  R21,R25
001363 9f6b      	MUL  R22,R27
001364 0d30      	ADD  R19,R0
001365 1d41      	ADC  R20,R1
001366 1f59      	ADC  R21,R25
001367 9f8e      	MUL  R24,R30
001368 d027      	RCALL __MULF126
001369 9fbf      	MUL  R27,R31
00136a d025      	RCALL __MULF126
00136b 9f6a      	MUL  R22,R26
00136c d023      	RCALL __MULF126
00136d 9fbe      	MUL  R27,R30
00136e d01d      	RCALL __MULF127
00136f 9faf      	MUL  R26,R31
001370 d01b      	RCALL __MULF127
001371 9fae      	MUL  R26,R30
001372 0d11      	ADD  R17,R1
001373 1f29      	ADC  R18,R25
001374 1f39      	ADC  R19,R25
001375 1f49      	ADC  R20,R25
001376 1f59      	ADC  R21,R25
001377 2fe3      	MOV  R30,R19
001378 2ff4      	MOV  R31,R20
001379 2f65      	MOV  R22,R21
00137a 2f52      	MOV  R21,R18
00137b 914f      	POP  R20
00137c 913f      	POP  R19
00137d 912f      	POP  R18
00137e 911f      	POP  R17
00137f 900f      	POP  R0
001380 2366      	TST  R22
001381 f02a      	BRMI __MULF122
001382 0f55      	LSL  R21
001383 1fee      	ROL  R30
001384 1fff      	ROL  R31
001385 1f66      	ROL  R22
001386 c002      	RJMP __MULF123
                 __MULF122:
001387 9573      	INC  R23
001388 f24b      	BRVS __MULF125
                 __MULF123:
001389 decd      	RCALL __ROUND_REPACK
00138a 915f      	POP  R21
00138b 9508      	RET
                 
                 __MULF127:
00138c 0d10      	ADD  R17,R0
00138d 1d21      	ADC  R18,R1
00138e 1f39      	ADC  R19,R25
00138f c002      	RJMP __MULF128
                 __MULF126:
001390 0d20      	ADD  R18,R0
001391 1d31      	ADC  R19,R1
                 __MULF128:
001392 1f49      	ADC  R20,R25
001393 1f59      	ADC  R21,R25
001394 9508      	RET
                 
                 __DIVF21:
001395 935f      	PUSH R21
001396 dedc      	RCALL __UNPACK
001397 3870      	CPI  R23,0x80
001398 f421      	BRNE __DIVF210
001399 2011      	TST  R1
                 __DIVF211:
00139a f40a      	BRPL __DIVF219
00139b cf9f      	RJMP __MINRES
                 __DIVF219:
00139c cfa4      	RJMP __MAXRES
                 __DIVF210:
00139d 3890      	CPI  R25,0x80
00139e f409      	BRNE __DIVF218
                 __DIVF217:
00139f cf95      	RJMP __ZERORES
                 __DIVF218:
0013a0 2401      	EOR  R0,R1
0013a1 9408      	SEC
0013a2 0b97      	SBC  R25,R23
0013a3 f41b      	BRVC __DIVF216
0013a4 f3d4      	BRLT __DIVF217
0013a5 2000      	TST  R0
0013a6 cff3      	RJMP __DIVF211
                 __DIVF216:
0013a7 2f79      	MOV  R23,R25
0013a8 931f      	PUSH R17
0013a9 932f      	PUSH R18
0013aa 933f      	PUSH R19
0013ab 934f      	PUSH R20
0013ac 2411      	CLR  R1
0013ad 2711      	CLR  R17
0013ae 2722      	CLR  R18
0013af 2733      	CLR  R19
0013b0 2744      	CLR  R20
0013b1 2755      	CLR  R21
0013b2 e290      	LDI  R25,32
                 __DIVF212:
0013b3 17ae      	CP   R26,R30
0013b4 07bf      	CPC  R27,R31
0013b5 0786      	CPC  R24,R22
0013b6 0741      	CPC  R20,R17
0013b7 f030      	BRLO __DIVF213
0013b8 1bae      	SUB  R26,R30
0013b9 0bbf      	SBC  R27,R31
0013ba 0b86      	SBC  R24,R22
0013bb 0b41      	SBC  R20,R17
0013bc 9408      	SEC
0013bd c001      	RJMP __DIVF214
                 __DIVF213:
0013be 9488      	CLC
                 __DIVF214:
0013bf 1f55      	ROL  R21
0013c0 1f22      	ROL  R18
0013c1 1f33      	ROL  R19
0013c2 1c11      	ROL  R1
0013c3 1faa      	ROL  R26
0013c4 1fbb      	ROL  R27
0013c5 1f88      	ROL  R24
0013c6 1f44      	ROL  R20
0013c7 959a      	DEC  R25
0013c8 f751      	BRNE __DIVF212
0013c9 01f9      	MOVW R30,R18
0013ca 2d61      	MOV  R22,R1
0013cb 914f      	POP  R20
0013cc 913f      	POP  R19
0013cd 912f      	POP  R18
0013ce 911f      	POP  R17
0013cf 2366      	TST  R22
0013d0 f032      	BRMI __DIVF215
0013d1 0f55      	LSL  R21
0013d2 1fee      	ROL  R30
0013d3 1fff      	ROL  R31
0013d4 1f66      	ROL  R22
0013d5 957a      	DEC  R23
0013d6 f243      	BRVS __DIVF217
                 __DIVF215:
0013d7 de7f      	RCALL __ROUND_REPACK
0013d8 915f      	POP  R21
0013d9 9508      	RET
                 
                 __CMPF12:
0013da 2399      	TST  R25
0013db f09a      	BRMI __CMPF120
0013dc 2377      	TST  R23
0013dd f042      	BRMI __CMPF121
0013de 1797      	CP   R25,R23
0013df f048      	BRLO __CMPF122
0013e0 f429      	BRNE __CMPF121
0013e1 17ae      	CP   R26,R30
0013e2 07bf      	CPC  R27,R31
0013e3 0786      	CPC  R24,R22
0013e4 f020      	BRLO __CMPF122
0013e5 f031      	BREQ __CMPF123
                 __CMPF121:
0013e6 9498      	CLZ
0013e7 9488      	CLC
0013e8 9508      	RET
                 __CMPF122:
0013e9 9498      	CLZ
0013ea 9408      	SEC
0013eb 9508      	RET
                 __CMPF123:
0013ec 9418      	SEZ
0013ed 9488      	CLC
0013ee 9508      	RET
                 __CMPF120:
0013ef 2377      	TST  R23
0013f0 f7c2      	BRPL __CMPF122
0013f1 1797      	CP   R25,R23
0013f2 f398      	BRLO __CMPF121
0013f3 f7a9      	BRNE __CMPF122
0013f4 17ea      	CP   R30,R26
0013f5 07fb      	CPC  R31,R27
0013f6 0768      	CPC  R22,R24
0013f7 f388      	BRLO __CMPF122
0013f8 f399      	BREQ __CMPF123
0013f9 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0013fa 2400      	CLR  R0
0013fb 0daf      	ADD  R26,R15
0013fc 1db0      	ADC  R27,R0
0013fd 9508      	RET
                 
                 __ANEGW1:
0013fe 95f1      	NEG  R31
0013ff 95e1      	NEG  R30
001400 40f0      	SBCI R31,0
001401 9508      	RET
                 
                 __ANEGD1:
001402 95f0      	COM  R31
001403 9560      	COM  R22
001404 9570      	COM  R23
001405 95e1      	NEG  R30
001406 4fff      	SBCI R31,-1
001407 4f6f      	SBCI R22,-1
001408 4f7f      	SBCI R23,-1
001409 9508      	RET
                 
                 __ASRW8:
00140a 2fef      	MOV  R30,R31
00140b 27ff      	CLR  R31
00140c fde7      	SBRC R30,7
00140d efff      	SER  R31
00140e 9508      	RET
                 
                 __CBD1:
00140f 2ffe      	MOV  R31,R30
001410 0fff      	ADD  R31,R31
001411 0bff      	SBC  R31,R31
001412 2f6f      	MOV  R22,R31
001413 2f7f      	MOV  R23,R31
001414 9508      	RET
                 
                 __CWD1:
001415 2f6f      	MOV  R22,R31
001416 0f66      	ADD  R22,R22
001417 0b66      	SBC  R22,R22
001418 2f76      	MOV  R23,R22
001419 9508      	RET
                 
                 __CWD2:
00141a 2f8b      	MOV  R24,R27
00141b 0f88      	ADD  R24,R24
00141c 0b88      	SBC  R24,R24
00141d 2f98      	MOV  R25,R24
00141e 9508      	RET
                 
                 __MULW12U:
00141f 9ffa      	MUL  R31,R26
001420 2df0      	MOV  R31,R0
001421 9feb      	MUL  R30,R27
001422 0df0      	ADD  R31,R0
001423 9fea      	MUL  R30,R26
001424 2de0      	MOV  R30,R0
001425 0df1      	ADD  R31,R1
001426 9508      	RET
                 
                 __MULB1W2U:
001427 2f6e      	MOV  R22,R30
001428 9f6a      	MUL  R22,R26
001429 01f0      	MOVW R30,R0
00142a 9f6b      	MUL  R22,R27
00142b 0df0      	ADD  R31,R0
00142c 9508      	RET
                 
                 __DIVB21U:
00142d 2400      	CLR  R0
00142e e098      	LDI  R25,8
                 __DIVB21U1:
00142f 0faa      	LSL  R26
001430 1c00      	ROL  R0
001431 1a0e      	SUB  R0,R30
001432 f410      	BRCC __DIVB21U2
001433 0e0e      	ADD  R0,R30
001434 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
001435 60a1      	SBR  R26,1
                 __DIVB21U3:
001436 959a      	DEC  R25
001437 f7b9      	BRNE __DIVB21U1
001438 2fea      	MOV  R30,R26
001439 2da0      	MOV  R26,R0
00143a 9508      	RET
                 
                 __DIVB21:
00143b d039      	RCALL __CHKSIGNB
00143c dff0      	RCALL __DIVB21U
00143d f40e      	BRTC __DIVB211
00143e 95e1      	NEG  R30
                 __DIVB211:
00143f 9508      	RET
                 
                 __DIVD21U:
001440 933f      	PUSH R19
001441 934f      	PUSH R20
001442 935f      	PUSH R21
001443 2400      	CLR  R0
001444 2411      	CLR  R1
001445 2744      	CLR  R20
001446 2755      	CLR  R21
001447 e230      	LDI  R19,32
                 __DIVD21U1:
001448 0faa      	LSL  R26
001449 1fbb      	ROL  R27
00144a 1f88      	ROL  R24
00144b 1f99      	ROL  R25
00144c 1c00      	ROL  R0
00144d 1c11      	ROL  R1
00144e 1f44      	ROL  R20
00144f 1f55      	ROL  R21
001450 1a0e      	SUB  R0,R30
001451 0a1f      	SBC  R1,R31
001452 0b46      	SBC  R20,R22
001453 0b57      	SBC  R21,R23
001454 f428      	BRCC __DIVD21U2
001455 0e0e      	ADD  R0,R30
001456 1e1f      	ADC  R1,R31
001457 1f46      	ADC  R20,R22
001458 1f57      	ADC  R21,R23
001459 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00145a 60a1      	SBR  R26,1
                 __DIVD21U3:
00145b 953a      	DEC  R19
00145c f759      	BRNE __DIVD21U1
00145d 01fd      	MOVW R30,R26
00145e 01bc      	MOVW R22,R24
00145f 01d0      	MOVW R26,R0
001460 01ca      	MOVW R24,R20
001461 915f      	POP  R21
001462 914f      	POP  R20
001463 913f      	POP  R19
001464 9508      	RET
                 
                 __MODB21:
001465 94e8      	CLT
001466 ffa7      	SBRS R26,7
001467 c002      	RJMP __MODB211
001468 95a1      	NEG  R26
001469 9468      	SET
                 __MODB211:
00146a fde7      	SBRC R30,7
00146b 95e1      	NEG  R30
00146c dfc0      	RCALL __DIVB21U
00146d 2fea      	MOV  R30,R26
00146e f40e      	BRTC __MODB212
00146f 95e1      	NEG  R30
                 __MODB212:
001470 9508      	RET
                 
                 __MODD21U:
001471 dfce      	RCALL __DIVD21U
001472 01fd      	MOVW R30,R26
001473 01bc      	MOVW R22,R24
001474 9508      	RET
                 
                 __CHKSIGNB:
001475 94e8      	CLT
001476 ffe7      	SBRS R30,7
001477 c002      	RJMP __CHKSB1
001478 95e1      	NEG  R30
001479 9468      	SET
                 __CHKSB1:
00147a ffa7      	SBRS R26,7
00147b c004      	RJMP __CHKSB2
00147c 95a1      	NEG  R26
00147d f800      	BLD  R0,0
00147e 9403      	INC  R0
00147f fa00      	BST  R0,0
                 __CHKSB2:
001480 9508      	RET
                 
                 __GETW1P:
001481 91ed      	LD   R30,X+
001482 91fc      	LD   R31,X
001483 9711      	SBIW R26,1
001484 9508      	RET
                 
                 __GETD1P:
001485 91ed      	LD   R30,X+
001486 91fd      	LD   R31,X+
001487 916d      	LD   R22,X+
001488 917c      	LD   R23,X
001489 9713      	SBIW R26,3
00148a 9508      	RET
                 
                 __GETD1P_INC:
00148b 91ed      	LD   R30,X+
00148c 91fd      	LD   R31,X+
00148d 916d      	LD   R22,X+
00148e 917d      	LD   R23,X+
00148f 9508      	RET
                 
                 __PUTDP1:
001490 93ed      	ST   X+,R30
001491 93fd      	ST   X+,R31
001492 936d      	ST   X+,R22
001493 937c      	ST   X,R23
001494 9508      	RET
                 
                 __PUTDP1_DEC:
001495 937e      	ST   -X,R23
001496 936e      	ST   -X,R22
001497 93fe      	ST   -X,R31
001498 93ee      	ST   -X,R30
001499 9508      	RET
                 
                 __GETD1S0:
00149a 81e8      	LD   R30,Y
00149b 81f9      	LDD  R31,Y+1
00149c 816a      	LDD  R22,Y+2
00149d 817b      	LDD  R23,Y+3
00149e 9508      	RET
                 
                 __GETD2S0:
00149f 81a8      	LD   R26,Y
0014a0 81b9      	LDD  R27,Y+1
0014a1 818a      	LDD  R24,Y+2
0014a2 819b      	LDD  R25,Y+3
0014a3 9508      	RET
                 
                 __PUTD1S0:
0014a4 83e8      	ST   Y,R30
0014a5 83f9      	STD  Y+1,R31
0014a6 836a      	STD  Y+2,R22
0014a7 837b      	STD  Y+3,R23
0014a8 9508      	RET
                 
                 __PUTPARD1:
0014a9 937a      	ST   -Y,R23
0014aa 936a      	ST   -Y,R22
0014ab 93fa      	ST   -Y,R31
0014ac 93ea      	ST   -Y,R30
0014ad 9508      	RET
                 
                 __CDF2U:
0014ae 9468      	SET
0014af c001      	RJMP __CDF2U0
                 __CDF2:
0014b0 94e8      	CLT
                 __CDF2U0:
0014b1 d001      	RCALL __SWAPD12
0014b2 de0b      	RCALL __CDF1U0
                 
                 __SWAPD12:
0014b3 2e18      	MOV  R1,R24
0014b4 2f86      	MOV  R24,R22
0014b5 2d61      	MOV  R22,R1
0014b6 2e19      	MOV  R1,R25
0014b7 2f97      	MOV  R25,R23
0014b8 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0014b9 2e1b      	MOV  R1,R27
0014ba 2fbf      	MOV  R27,R31
0014bb 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0014bc 2e1a      	MOV  R1,R26
0014bd 2fae      	MOV  R26,R30
0014be 2de1      	MOV  R30,R1
0014bf 9508      	RET
                 
                 __CPD10:
0014c0 9730      	SBIW R30,0
0014c1 4060      	SBCI R22,0
0014c2 4070      	SBCI R23,0
0014c3 9508      	RET
                 
                 __CPD02:
0014c4 2400      	CLR  R0
0014c5 160a      	CP   R0,R26
0014c6 060b      	CPC  R0,R27
0014c7 0608      	CPC  R0,R24
0014c8 0609      	CPC  R0,R25
0014c9 9508      	RET
                 
                 __SAVELOCR6:
0014ca 935a      	ST   -Y,R21
                 __SAVELOCR5:
0014cb 934a      	ST   -Y,R20
                 __SAVELOCR4:
0014cc 933a      	ST   -Y,R19
                 __SAVELOCR3:
0014cd 932a      	ST   -Y,R18
                 __SAVELOCR2:
0014ce 931a      	ST   -Y,R17
0014cf 930a      	ST   -Y,R16
0014d0 9508      	RET
                 
                 __LOADLOCR6:
0014d1 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0014d2 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0014d3 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0014d4 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0014d5 8119      	LDD  R17,Y+1
0014d6 8108      	LD   R16,Y
0014d7 9508      	RET
                 
                 __INITLOCW:
0014d8 0fac      	ADD  R26,R28
0014d9 1fbd      	ADC  R27,R29
                 __INITLOC0:
0014da 9005      	LPM  R0,Z+
0014db 920d      	ST   X+,R0
0014dc 9701      	SBIW R24,1
0014dd f7e1      	BRNE __INITLOC0
0014de 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 167 r1 :  73 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  72 r17:  97 r18:  75 r19:  76 r20:  72 r21: 105 r22: 201 r23: 180 
r24: 120 r25: 105 r26: 430 r27: 211 r28: 148 r29:   3 r30: 959 r31: 416 
x  : 306 y  : 630 z  : 113 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  27 add   :  24 
adiw  :  52 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  75 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  78 brpl  :   9 brsh  :  12 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 476 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  57 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  23 cpc   :  29 cpi   : 133 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  25 inc   :   3 jmp   :  53 ld    : 252 ldd   : 280 
ldi   : 458 lds   :  36 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 114 
movw  : 216 mul   :  17 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  33 pop   :  73 push  :  73 rcall :  78 
ret   : 164 reti  :   5 rjmp  : 208 rol   :  32 ror   :  16 sbc   :  12 
sbci  : 126 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  46 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 375 std   : 128 sts   :  33 sub   :   6 subi  : 160 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0029be   9850    836  10686  131072   8.2%
[.dseg] 0x000100 0x00058c      0    140    140    4351   3.2%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
