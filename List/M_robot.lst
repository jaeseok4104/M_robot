
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Tue Feb 18 15:35:11 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _CHECK_GETS=R8
                 	.DEF _CHECK_CONTROL=R11
                 	.DEF _TIMER1_OVERFLOW=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0186 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0382 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 038e 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0388 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 0341 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 035c 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x49:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1184): warning: .cseg .db misalignment - padding zero byte
000162 0000      	.DB  0x0
                 _0x60:
000163 0000
000164 0000
000165 0000
000166 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000167 0000      	.DB  0x0,0x0
                 _0x0:
000168 253c
000169 2c64
00016a 6425
00016b 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00016c 3e64
00016d 2500
00016e 2c64
00016f 2520      	.DB  0x64,0x3E,0x0,0x25,0x64,0x2C,0x20,0x25
000170 2c64
000171 2520
000172 2c64
000173 2520      	.DB  0x64,0x2C,0x20,0x25,0x64,0x2C,0x20,0x25
000174 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1192): warning: .cseg .db misalignment - padding zero byte
000175 0000      	.DB  0x64,0xA,0x0
                 _0x2000000:
000176 4e2d
000177 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1194): warning: .cseg .db misalignment - padding zero byte
000178 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1196): warning: .cseg .db misalignment - padding zero byte
000179 0001      	.DB  0x1
                 _0x2080000:
00017a 4e2d
00017b 4e41
00017c 4900
00017d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1199): warning: .cseg .db misalignment - padding zero byte
00017e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00017f 000a      	.DW  0x0A
000180 0004      	.DW  0x04
000181 02c6      	.DW  _0x60*2
                 
000182 0001      	.DW  0x01
000183 0578      	.DW  __seed_G104
000184 02f2      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000185 0000      	.DW  0
                 
                 __RESET:
000186 94f8      	CLI
000187 27ee      	CLR  R30
000188 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000189 e0f1      	LDI  R31,1
00018a bff5      	OUT  MCUCR,R31
00018b bfe5      	OUT  MCUCR,R30
00018c 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00018e e1f8      	LDI  R31,0x18
00018f bdf1      	OUT  WDTCR,R31
000190 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000191 e08d      	LDI  R24,(14-2)+1
000192 e0a2      	LDI  R26,2
000193 27bb      	CLR  R27
                 __CLEAR_REG:
000194 93ed      	ST   X+,R30
000195 958a      	DEC  R24
000196 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000197 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000198 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000199 e0a0      	LDI  R26,LOW(__SRAM_START)
00019a e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019b 93ed      	ST   X+,R30
00019c 9701      	SBIW R24,1
00019d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019e efee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00019f e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a0 9185      	LPM  R24,Z+
0001a1 9195      	LPM  R25,Z+
0001a2 9700      	SBIW R24,0
0001a3 f061      	BREQ __GLOBAL_INI_END
0001a4 91a5      	LPM  R26,Z+
0001a5 91b5      	LPM  R27,Z+
0001a6 9005      	LPM  R0,Z+
0001a7 9015      	LPM  R1,Z+
0001a8 01bf      	MOVW R22,R30
0001a9 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001aa 9005      	LPM  R0,Z+
0001ab 920d      	ST   X+,R0
0001ac 9701      	SBIW R24,1
0001ad f7e1      	BRNE __GLOBAL_INI_LOOP
0001ae 01fb      	MOVW R30,R22
0001af cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b0 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b1 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b2 bfed      	OUT  SPL,R30
0001b3 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b4 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b5 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b6 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b7 940c 039b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 25
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.281
                 ;#define Gearratio 20
                 ;
                 ;#define Circular 57.29                      // 180 / PI
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned char CHECK_CONTROL = 0;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0025 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0026     UCSR1A = 0x00;
                 ;	bps -> Y+0
0001b9 e0e0      	LDI  R30,LOW(0)
0001ba 93e0 009b 	STS  155,R30
                 ; 0000 0027     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0001bc e9e8      	LDI  R30,LOW(152)
0001bd 93e0 009a 	STS  154,R30
                 ; 0000 0028     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0001bf e0e6      	LDI  R30,LOW(6)
0001c0 93e0 009d 	STS  157,R30
                 ; 0000 0029     UCSR1C &= ~(1<<UMSEL1);
0001c2 91e0 009d 	LDS  R30,157
0001c4 7bef      	ANDI R30,0xBF
0001c5 93e0 009d 	STS  157,R30
                 ; 0000 002A 
                 ; 0000 002B     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0001c7 81e8      	LD   R30,Y
0001c8 81f9      	LDD  R31,Y+1
0001c9 940e 1099 	CALL __ASRW8
0001cb 93e0 0098 	STS  152,R30
                 ; 0000 002C     UBRR1L = (unsigned char)(bps & 0x00ff);
0001cd 81e8      	LD   R30,Y
0001ce 93e0 0099 	STS  153,R30
                 ; 0000 002D }
0001d0 c014      	RJMP _0x20A0010
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 0030 {
                 _usart0_init:
                 ; 0000 0031     UCSR0A = 0x00;
                 ;	bps -> Y+0
0001d1 e0e0      	LDI  R30,LOW(0)
0001d2 b9eb      	OUT  0xB,R30
                 ; 0000 0032     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0001d3 e9e8      	LDI  R30,LOW(152)
0001d4 b9ea      	OUT  0xA,R30
                 ; 0000 0033     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0001d5 e0e6      	LDI  R30,LOW(6)
0001d6 93e0 0095 	STS  149,R30
                 ; 0000 0034     UCSR0C &= ~(1<<UMSEL0);
0001d8 91e0 0095 	LDS  R30,149
0001da 7bef      	ANDI R30,0xBF
0001db 93e0 0095 	STS  149,R30
                 ; 0000 0035 
                 ; 0000 0036     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0001dd 81e8      	LD   R30,Y
0001de 81f9      	LDD  R31,Y+1
0001df 940e 1099 	CALL __ASRW8
0001e1 93e0 0090 	STS  144,R30
                 ; 0000 0037     UBRR0L = (unsigned char)(bps & 0x00ff);
0001e3 81e8      	LD   R30,Y
0001e4 b9e9      	OUT  0x9,R30
                 ; 0000 0038 }
                 _0x20A0010:
0001e5 9622      	ADIW R28,2
0001e6 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 003B {
                 _timer2_init:
                 ; 0000 003C     //TIMER2
                 ; 0000 003D     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0001e7 e0ed      	LDI  R30,LOW(13)
0001e8 bde5      	OUT  0x25,R30
                 ; 0000 003E 
                 ; 0000 003F     OCR2 = 40;
0001e9 e2e8      	LDI  R30,LOW(40)
0001ea bde3      	OUT  0x23,R30
                 ; 0000 0040     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0001eb e8e2      	LDI  R30,LOW(130)
0001ec c010      	RJMP _0x20A000F
                 ; 0000 0041     //TIMSK = (1<<OCIE2);
                 ; 0000 0042 }
                 ;void timer0_init(void)
                 ; 0000 0044 {
                 _timer0_init:
                 ; 0000 0045     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0001ed e0e7      	LDI  R30,LOW(7)
0001ee bfe3      	OUT  0x33,R30
                 ; 0000 0046     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0001ef e8e1      	LDI  R30,LOW(129)
0001f0 c00c      	RJMP _0x20A000F
                 ; 0000 0047 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 004A {
                 _timer1_init:
                 ; 0000 004B     // TCCR1A = (1<<COM1B0);
                 ; 0000 004C     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0001f1 e1ed      	LDI  R30,LOW(29)
0001f2 bdee      	OUT  0x2E,R30
                 ; 0000 004D 
                 ; 0000 004E     OCR1B = 255;
0001f3 efef      	LDI  R30,LOW(255)
0001f4 e0f0      	LDI  R31,HIGH(255)
0001f5 bdf9      	OUT  0x28+1,R31
0001f6 bde8      	OUT  0x28,R30
                 ; 0000 004F     ICR1 = 1200;
0001f7 ebe0      	LDI  R30,LOW(1200)
0001f8 e0f4      	LDI  R31,HIGH(1200)
0001f9 bdf7      	OUT  0x26+1,R31
0001fa bde6      	OUT  0x26,R30
                 ; 0000 0050     TIMSK |= (1<<OCIE1B);
0001fb b7e7      	IN   R30,0x37
0001fc 60e8      	ORI  R30,8
                 _0x20A000F:
0001fd bfe7      	OUT  0x37,R30
                 ; 0000 0051 }
0001fe 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0000 0054 {
                 _putch_USART1:
                 ; 0000 0055     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
0001ff 91e0 009b 	LDS  R30,155
000201 72e0      	ANDI R30,LOW(0x20)
000202 f3e1      	BREQ _0x3
                 ; 0000 0056     UDR1 = data;
000203 81e8      	LD   R30,Y
000204 93e0 009c 	STS  156,R30
                 ; 0000 0057 }
000206 c023      	RJMP _0x20A000E
                 ;
                 ;//USART 문자열 송신
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     for(i = 0;i<IDX;i++)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 006A {
                 _puts_USART1:
                 ; 0000 006B     unsigned char i = 0;
                 ; 0000 006C     unsigned char x = 0;
                 ; 0000 006D     for(i = 0; str[i] ;i++){
000207 931a      	ST   -Y,R17
000208 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000209 e010      	LDI  R17,0
00020a e000      	LDI  R16,0
00020b e010      	LDI  R17,LOW(0)
                 _0x7:
00020c 940e 0c91 	CALL SUBOPT_0x0
00020e 30e0      	CPI  R30,0
00020f f031      	BREQ _0x8
                 ; 0000 006E         putch_USART1(str[i]);
000210 940e 0c91 	CALL SUBOPT_0x0
000212 93ea      	ST   -Y,R30
000213 dfeb      	RCALL _putch_USART1
                 ; 0000 006F     }
000214 5f1f      	SUBI R17,-1
000215 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 0070     for(x = 0; x<i; x++){
000216 e000      	LDI  R16,LOW(0)
                 _0xA:
000217 1701      	CP   R16,R17
000218 f450      	BRSH _0xB
                 ; 0000 0071         *(str++) = 0;
000219 81aa      	LDD  R26,Y+2
00021a 81bb      	LDD  R27,Y+2+1
00021b 9611      	ADIW R26,1
00021c 83aa      	STD  Y+2,R26
00021d 83bb      	STD  Y+2+1,R27
00021e 9711      	SBIW R26,1
00021f e0e0      	LDI  R30,LOW(0)
000220 93ec      	ST   X,R30
                 ; 0000 0072     }
000221 5f0f      	SUBI R16,-1
000222 cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0073 }
000223 8119      	LDD  R17,Y+1
000224 8108      	LDD  R16,Y+0
000225 c0ea      	RJMP _0x20A000C
                 ;
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     while(*str != 0)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//         i++;
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0086 {
                 ; 0000 0087     unsigned char i = 0;
                 ; 0000 0088     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 0089     if(TIMER2_OVERFLOW>0)
                 ; 0000 008A     {
                 ; 0000 008B         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 008C for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 008D }
                 ; 0000 008E     UCSR0B |= (1<<RXEN0);
                 ; 0000 008F }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0092 {
                 _putch_USART0:
                 ; 0000 0093     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000226 9b5d      	SBIS 0xB,5
000227 cffe      	RJMP _0x13
                 ; 0000 0094     UDR0 = data;
000228 81e8      	LD   R30,Y
000229 b9ec      	OUT  0xC,R30
                 ; 0000 0095 }
                 _0x20A000E:
00022a 9621      	ADIW R28,1
00022b 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 0098 {
                 ; 0000 0099     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 009A     unsigned char i = 0;
                 ; 0000 009B     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009C     {
                 ; 0000 009D         putch_USART1(*(str+i));
                 ; 0000 009E     }
                 ; 0000 009F 
                 ; 0000 00A0     for(i = 0; i<IDX; i++)
                 ; 0000 00A1     {
                 ; 0000 00A2         *(str+i) = 0;
                 ; 0000 00A3     }
                 ; 0000 00A4 }
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00A7 {
                 _CRC16:
                 ; 0000 00A8     int i;
                 ; 0000 00A9     unsigned short crc, flag;
                 ; 0000 00AA     crc = 0xffff;
00022c 940e 1145 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00022e ef2f     +LDI R18 , LOW ( - 1 )
00022f ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00AB 
                 ; 0000 00AC     while(usDataLen--){
                 _0x1C:
000230 81ee      	LDD  R30,Y+6
000231 81ff      	LDD  R31,Y+6+1
000232 9731      	SBIW R30,1
000233 83ee      	STD  Y+6,R30
000234 83ff      	STD  Y+6+1,R31
000235 9631      	ADIW R30,1
000236 f0f9      	BREQ _0x1E
                 ; 0000 00AD         crc ^= *puchMsg++;
000237 85a8      	LDD  R26,Y+8
000238 85b9      	LDD  R27,Y+8+1
000239 91ed      	LD   R30,X+
00023a 87a8      	STD  Y+8,R26
00023b 87b9      	STD  Y+8+1,R27
00023c e0f0      	LDI  R31,0
                +
00023d 272e     +EOR R18 , R30
00023e 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00AE 
                 ; 0000 00AF         for (i=0; i<8; i++){
                +
00023f e000     +LDI R16 , LOW ( 0 )
000240 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
000241 3008     +CPI R16 , LOW ( 8 )
000242 e0e0     +LDI R30 , HIGH ( 8 )
000243 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000244 f484      	BRGE _0x21
                 ; 0000 00B0             flag = crc & 0x0001;
000245 01f9      	MOVW R30,R18
000246 70e1      	ANDI R30,LOW(0x1)
000247 70f0      	ANDI R31,HIGH(0x1)
000248 01af      	MOVW R20,R30
                 ; 0000 00B1             crc >>= 1;
000249 9536      	LSR  R19
00024a 9527      	ROR  R18
                 ; 0000 00B2             if(flag) crc ^= POLYNORMIAL;
00024b 2e04      	MOV  R0,R20
00024c 2a05      	OR   R0,R21
00024d f021      	BREQ _0x22
00024e e0e1      	LDI  R30,LOW(40961)
00024f eaf0      	LDI  R31,HIGH(40961)
                +
000250 272e     +EOR R18 , R30
000251 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B3         }
                 _0x22:
                +
000252 5f0f     +SUBI R16 , LOW ( - 1 )
000253 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000254 cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     }
000255 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00B5     return crc;
000256 01f9      	MOVW R30,R18
000257 940e 114c 	CALL __LOADLOCR6
000259 962a      	ADIW R28,10
00025a 9508      	RET
                 ; 0000 00B6 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00B9 {
                 _RTU_WriteOperate0:
                 ; 0000 00BA     char protocol[8];
                 ; 0000 00BB     unsigned short crc16;
                 ; 0000 00BC     int i=0;
                 ; 0000 00BD     //PACKET_BUFF_IDX = 0;
                 ; 0000 00BE 
                 ; 0000 00BF     protocol[0]=device_address;
00025b 940e 0c98 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00C0     protocol[1]=0x06;
00025d e0e6      	LDI  R30,LOW(6)
00025e 940e 0ca0 	CALL SUBOPT_0x2
                 ; 0000 00C1     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C2     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C3     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C4     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C5     protocol[6]=0;
                 ; 0000 00C6     protocol[7]=0;
                 ; 0000 00C7 
                 ; 0000 00C8     crc16 = CRC16(protocol, 6);
                 ; 0000 00C9 
                 ; 0000 00CA     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00CB     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00CC 
                 ; 0000 00CD 
                 ; 0000 00CE     for(i=0;i<8;i++)
                 _0x24:
                +
000260 3028     +CPI R18 , LOW ( 8 )
000261 e0e0     +LDI R30 , HIGH ( 8 )
000262 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000263 f42c      	BRGE _0x25
                 ; 0000 00CF     {
                 ; 0000 00D0         putch_USART0(*(protocol+i));
000264 940e 0cc3 	CALL SUBOPT_0x3
                 ; 0000 00D1     }
                +
000266 5f2f     +SUBI R18 , LOW ( - 1 )
000267 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000268 cff7      	RJMP _0x24
                 _0x25:
                 ; 0000 00D2 }
000269 c00e      	RJMP _0x20A000D
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00D5 {
                 ; 0000 00D6     char protocol[8];
                 ; 0000 00D7     unsigned short crc16;
                 ; 0000 00D8     int i=0;
                 ; 0000 00D9    // PACKET_BUFF_IDX = 0;
                 ; 0000 00DA 
                 ; 0000 00DB     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00DC     protocol[1]=0x06;
                 ; 0000 00DD     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00DE     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00DF     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00E0     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00E1     protocol[6]=0;
                 ; 0000 00E2     protocol[7]=0;
                 ; 0000 00E3 
                 ; 0000 00E4     crc16 = CRC16(protocol, 6);
                 ; 0000 00E5 
                 ; 0000 00E6     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00E7     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00E8 
                 ; 0000 00E9 
                 ; 0000 00EA     for(i=0;i<8;i++)
                 ; 0000 00EB     {
                 ; 0000 00EC         putch_USART1(*(protocol+i));
                 ; 0000 00ED     }
                 ; 0000 00EE }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00F1 {
                 _RTU_ReedOperate0:
                 ; 0000 00F2     char protocol[8];
                 ; 0000 00F3     unsigned short crc16;
                 ; 0000 00F4     int i=0;
                 ; 0000 00F5     //PACKET_BUFF_IDX = 0;
                 ; 0000 00F6 
                 ; 0000 00F7     protocol[0]=device_address;
00026a 940e 0c98 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00F8     protocol[1]=0x04;
00026c e0e4      	LDI  R30,LOW(4)
00026d 940e 0ca0 	CALL SUBOPT_0x2
                 ; 0000 00F9     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00FA     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00FB     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00FC     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00FD     protocol[6]=0;
                 ; 0000 00FE     protocol[7]=0;
                 ; 0000 00FF 
                 ; 0000 0100     crc16 = CRC16(protocol, 6);
                 ; 0000 0101 
                 ; 0000 0102     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 0103     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 0104 
                 ; 0000 0105 
                 ; 0000 0106     for(i=0;i<8;i++)
                 _0x2A:
                +
00026f 3028     +CPI R18 , LOW ( 8 )
000270 e0e0     +LDI R30 , HIGH ( 8 )
000271 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000272 f42c      	BRGE _0x2B
                 ; 0000 0107     {
                 ; 0000 0108         putch_USART0(*(protocol+i));
000273 940e 0cc3 	CALL SUBOPT_0x3
                 ; 0000 0109     }
                +
000275 5f2f     +SUBI R18 , LOW ( - 1 )
000276 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000277 cff7      	RJMP _0x2A
                 _0x2B:
                 ; 0000 010A }
                 _0x20A000D:
000278 940e 114e 	CALL __LOADLOCR4
00027a 9661      	ADIW R28,17
00027b 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 010D {
                 _Make_MSPEED:
                 ; 0000 010E     float VelocityR = 0;
                 ; 0000 010F     float VelocityL = 0;
                 ; 0000 0110 
                 ; 0000 0111     if(*_velocity>=0){
00027c 9728      	SBIW R28,8
00027d 940e 0ccb 	CALL SUBOPT_0x4
00027f e0e0      	LDI  R30,LOW(0)
000280 83ea      	STD  Y+2,R30
000281 83eb      	STD  Y+3,R30
000282 83ec      	STD  Y+4,R30
000283 83ed      	STD  Y+5,R30
000284 83ee      	STD  Y+6,R30
000285 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
000286 940e 0ccf 	CALL SUBOPT_0x5
000288 2377      	TST  R23
000289 f042      	BRMI _0x2C
                 ; 0000 0112         *_angularV = -(*_angularV);
00028a 940e 0cd4 	CALL SUBOPT_0x6
00028c 940e 0ee0 	CALL __ANEGF1
00028e 85ac      	LDD  R26,Y+12
00028f 85bd      	LDD  R27,Y+12+1
000290 940e 1114 	CALL __PUTDP1
                 ; 0000 0113     }
                 ; 0000 0114 
                 ; 0000 0115     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x2C:
000292 940e 0ccf 	CALL SUBOPT_0x5
000294 937f      	PUSH R23
000295 936f      	PUSH R22
000296 93ff      	PUSH R31
000297 93ef      	PUSH R30
000298 940e 0cd4 	CALL SUBOPT_0x6
00029a 940e 0cd9 	CALL SUBOPT_0x7
00029c 91af      	POP  R26
00029d 91bf      	POP  R27
00029e 918f      	POP  R24
00029f 919f      	POP  R25
0002a0 940e 0f86 	CALL __ADDF12
0002a2 940e 0ce8 	CALL SUBOPT_0x8
                 ; 0000 0116     VelocityL = *_velocity-(*_angularV*Length)/2;
0002a4 940e 0ccf 	CALL SUBOPT_0x5
0002a6 937f      	PUSH R23
0002a7 936f      	PUSH R22
0002a8 93ff      	PUSH R31
0002a9 93ef      	PUSH R30
0002aa 940e 0cd4 	CALL SUBOPT_0x6
0002ac 940e 0cd9 	CALL SUBOPT_0x7
0002ae 91af      	POP  R26
0002af 91bf      	POP  R27
0002b0 918f      	POP  R24
0002b1 919f      	POP  R25
0002b2 940e 0ced 	CALL SUBOPT_0x9
0002b4 940e 1123 	CALL __PUTD1S0
                 ; 0000 0117 
                 ; 0000 0118     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0002b6 940e 0cf2 	CALL SUBOPT_0xA
0002b8 940e 0cf7 	CALL SUBOPT_0xB
0002ba 85aa      	LDD  R26,Y+10
0002bb 85bb      	LDD  R27,Y+10+1
0002bc 93ed      	ST   X+,R30
0002bd 93fc      	ST   X,R31
                 ; 0000 0119     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0002be 940e 0d06 	CALL SUBOPT_0xC
0002c0 940e 0cf7 	CALL SUBOPT_0xB
0002c2 85a8      	LDD  R26,Y+8
0002c3 85b9      	LDD  R27,Y+8+1
0002c4 93ed      	ST   X+,R30
0002c5 93fc      	ST   X,R31
                 ; 0000 011A 
                 ; 0000 011B     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0002c6 85aa      	LDD  R26,Y+10
0002c7 85bb      	LDD  R27,Y+10+1
0002c8 940e 110a 	CALL __GETW1P
0002ca 32ec      	CPI  R30,LOW(0x12C)
0002cb e0a1      	LDI  R26,HIGH(0x12C)
0002cc 07fa      	CPC  R31,R26
0002cd f434      	BRGE _0x2E
0002ce 01df      	MOVW R26,R30
0002cf ede4      	LDI  R30,LOW(65236)
0002d0 effe      	LDI  R31,HIGH(65236)
0002d1 17ea      	CP   R30,R26
0002d2 07fb      	CPC  R31,R27
0002d3 f00c      	BRLT _0x2F
                 _0x2E:
0002d4 c014      	RJMP _0x30
                 _0x2F:
0002d5 85a8      	LDD  R26,Y+8
0002d6 85b9      	LDD  R27,Y+8+1
0002d7 940e 110a 	CALL __GETW1P
0002d9 32ec      	CPI  R30,LOW(0x12C)
0002da e0a1      	LDI  R26,HIGH(0x12C)
0002db 07fa      	CPC  R31,R26
0002dc f454      	BRGE _0x31
0002dd 85a8      	LDD  R26,Y+8
0002de 85b9      	LDD  R27,Y+8+1
0002df 940e 110a 	CALL __GETW1P
0002e1 01df      	MOVW R26,R30
0002e2 ede4      	LDI  R30,LOW(65236)
0002e3 effe      	LDI  R31,HIGH(65236)
0002e4 17ea      	CP   R30,R26
0002e5 07fb      	CPC  R31,R27
0002e6 f00c      	BRLT _0x32
                 _0x31:
0002e7 c001      	RJMP _0x30
                 _0x32:
0002e8 c001      	RJMP _0x33
                 _0x30:
0002e9 c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 011C         *R_RPM = 0;
0002ea 85aa      	LDD  R26,Y+10
0002eb 85bb      	LDD  R27,Y+10+1
0002ec 940e 0d09 	CALL SUBOPT_0xD
                 ; 0000 011D         *L_RPM = 0;
0002ee 85a8      	LDD  R26,Y+8
0002ef 85b9      	LDD  R27,Y+8+1
0002f0 940e 0d09 	CALL SUBOPT_0xD
                 ; 0000 011E     }
                 ; 0000 011F }
                 _0x2D:
0002f2 940c 0700 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 0122 {
                 _oper_Disapath:
                 ; 0000 0123     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0002f4 e0e1      	LDI  R30,LOW(1)
0002f5 93ea      	ST   -Y,R30
0002f6 e7e9      	LDI  R30,LOW(121)
0002f7 e0f0      	LDI  R31,HIGH(121)
0002f8 93fa      	ST   -Y,R31
0002f9 93ea      	ST   -Y,R30
0002fa 81ed      	LDD  R30,Y+5
0002fb 81fe      	LDD  R31,Y+5+1
0002fc 940e 0d0e 	CALL SUBOPT_0xE
                 ; 0000 0124     delay_ms(5);
                 ; 0000 0125 
                 ; 0000 0126     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0002fe e0e2      	LDI  R30,LOW(2)
0002ff 93ea      	ST   -Y,R30
000300 e7e9      	LDI  R30,LOW(121)
000301 e0f0      	LDI  R31,HIGH(121)
000302 93fa      	ST   -Y,R31
000303 93ea      	ST   -Y,R30
000304 81eb      	LDD  R30,Y+3
000305 81fc      	LDD  R31,Y+3+1
000306 940e 108d 	CALL __ANEGW1
000308 940e 0d0e 	CALL SUBOPT_0xE
                 ; 0000 0127     delay_ms(5);
                 ; 0000 0128 
                 ; 0000 0129     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00030a e0e1      	LDI  R30,LOW(1)
00030b 940e 0d18 	CALL SUBOPT_0xF
                 ; 0000 012A     delay_ms(5);
                 ; 0000 012B 
                 ; 0000 012C     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
00030d e0e2      	LDI  R30,LOW(2)
00030e 940e 0d18 	CALL SUBOPT_0xF
                 ; 0000 012D     delay_ms(5);
                 ; 0000 012E }
                 _0x20A000C:
000310 9624      	ADIW R28,4
000311 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 0131 {
                 _get_RPM:
                 ; 0000 0132     unsigned char i = 0;
                 ; 0000 0133     unsigned int RPM = 0;
                 ; 0000 0134 
                 ; 0000 0135     if(PACKET_BUFF[1]!=0x07){
000312 940e 1147 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
000314 e010      	LDI  R17,0
                +
000315 e020     +LDI R18 , LOW ( 0 )
000316 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000317 91a0 0501+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
000319 30a7      	CPI  R26,LOW(0x7)
00031a f111      	BREQ _0x34
                 ; 0000 0136         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
00031b 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
00031d e0a0      	LDI  R26,LOW(0)
                +
00031e 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
000320 940e 0d20 	CALL SUBOPT_0x10
000322 019f      	MOVW R18,R30
                 ; 0000 0137         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
000323 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
000325 e0a0      	LDI  R26,LOW(0)
                +
000326 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
000328 940e 0d20 	CALL SUBOPT_0x10
00032a 81ac      	LDD  R26,Y+4
00032b 81bd      	LDD  R27,Y+4+1
00032c 93ed      	ST   X+,R30
00032d 93fc      	ST   X,R31
                 ; 0000 0138         for(i = 0; i<IDX; i++) *(str+i) = 0;
00032e e010      	LDI  R17,LOW(0)
                 _0x36:
00032f 81ee      	LDD  R30,Y+6
000330 171e      	CP   R17,R30
000331 f450      	BRSH _0x37
000332 2fe1      	MOV  R30,R17
000333 e0f0      	LDI  R31,0
000334 81af      	LDD  R26,Y+7
000335 85b8      	LDD  R27,Y+7+1
000336 0fae      	ADD  R26,R30
000337 1fbf      	ADC  R27,R31
000338 e0e0      	LDI  R30,LOW(0)
000339 93ec      	ST   X,R30
00033a 5f1f      	SUBI R17,-1
00033b cff3      	RJMP _0x36
                 _0x37:
                 ; 0000 0139 return RPM;
00033c 01f9      	MOVW R30,R18
                 ; 0000 013A     }
                 ; 0000 013B }
                 _0x34:
                 _0x20A000B:
00033d 940e 114e 	CALL __LOADLOCR4
00033f 9629      	ADIW R28,9
000340 9508      	RET
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 013E {
                 _usart0_rxc:
000341 93aa      	ST   -Y,R26
000342 93ba      	ST   -Y,R27
000343 93ea      	ST   -Y,R30
000344 b7ef      	IN   R30,SREG
000345 93ea      	ST   -Y,R30
                 ; 0000 013F     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000346 b5e4      	IN   R30,0x24
000347 31e9      	CPI  R30,LOW(0x19)
000348 f418      	BRSH _0x39
000349 e0e0      	LDI  R30,LOW(0)
00034a 15e5      	CP   R30,R5
00034b f019      	BREQ _0x3B
                 _0x39:
00034c e0e0      	LDI  R30,LOW(0)
00034d 15e4      	CP   R30,R4
00034e f419      	BRNE _0x38
                 _0x3B:
                 ; 0000 0140     {
                 ; 0000 0141         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034f 940e 0d24 	CALL SUBOPT_0x11
                 ; 0000 0142         PACKET_BUFF_IDX++;
                 ; 0000 0143         TCNT2 = 0;
                 ; 0000 0144     }
                 ; 0000 0145     else {
000351 c004      	RJMP _0x3D
                 _0x38:
                 ; 0000 0146         PACKET_BUFF_IDX = 0;
000352 2444      	CLR  R4
                 ; 0000 0147         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000353 940e 0d24 	CALL SUBOPT_0x11
                 ; 0000 0148         PACKET_BUFF_IDX++;
                 ; 0000 0149         TCNT2 = 0;
                 ; 0000 014A         TIMER2_OVERFLOW = 0;
000355 2455      	CLR  R5
                 ; 0000 014B     }
                 _0x3D:
                 ; 0000 014C }
000356 91e9      	LD   R30,Y+
000357 bfef      	OUT  SREG,R30
000358 91e9      	LD   R30,Y+
000359 91b9      	LD   R27,Y+
00035a 91a9      	LD   R26,Y+
00035b 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 014F {
                 _usart1_rxc:
00035c 940e 0d2e 	CALL SUBOPT_0x12
                 ; 0000 0150     unsigned char i = 0;
                 ; 0000 0151     i = UDR1;
00035e 931a      	ST   -Y,R17
                 ;	i -> R17
00035f e010      	LDI  R17,0
000360 9110 009c 	LDS  R17,156
                 ; 0000 0152     if((i == '<') && (CHECK_GETS == 0)){
000362 331c      	CPI  R17,60
000363 f419      	BRNE _0x3F
000364 e0e0      	LDI  R30,LOW(0)
000365 15e8      	CP   R30,R8
000366 f009      	BREQ _0x40
                 _0x3F:
000367 c007      	RJMP _0x3E
                 _0x40:
                 ; 0000 0153         PORTB.3 = ~PORTB.3;
000368 9bc3      	SBIS 0x18,3
000369 c002      	RJMP _0x41
00036a 98c3      	CBI  0x18,3
00036b c001      	RJMP _0x42
                 _0x41:
00036c 9ac3      	SBI  0x18,3
                 _0x42:
                 ; 0000 0154         VELOCITY_BUFF_IDX = 0;
00036d 2499      	CLR  R9
                 ; 0000 0155         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00036e c00e      	RJMP _0x5E
                 ; 0000 0156         VELOCITY_BUFF_IDX++;
                 ; 0000 0157     }
                 ; 0000 0158     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x3E:
00036f 331e      	CPI  R17,62
000370 f419      	BRNE _0x45
000371 e0e0      	LDI  R30,LOW(0)
000372 15e8      	CP   R30,R8
000373 f009      	BREQ _0x46
                 _0x45:
000374 c006      	RJMP _0x44
                 _0x46:
                 ; 0000 0159         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000375 2de9      	MOV  R30,R9
000376 940e 0d33 	CALL SUBOPT_0x13
                 ; 0000 015A         VELOCITY_BUFF_IDX++;
                 ; 0000 015B         CHECK_GETS = 1;
000378 e0e1      	LDI  R30,LOW(1)
000379 2e8e      	MOV  R8,R30
                 ; 0000 015C     }
                 ; 0000 015D     else if(CHECK_GETS == 0){
00037a c005      	RJMP _0x47
                 _0x44:
00037b 2088      	TST  R8
00037c f419      	BRNE _0x48
                 ; 0000 015E         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x5E:
00037d 2de9      	MOV  R30,R9
00037e 940e 0d33 	CALL SUBOPT_0x13
                 ; 0000 015F         VELOCITY_BUFF_IDX++;
                 ; 0000 0160     }
                 ; 0000 0161 }
                 _0x48:
                 _0x47:
000380 9119      	LD   R17,Y+
000381 c014      	RJMP _0x5F
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 0164 {
                 _timer2_comp:
000382 93ea      	ST   -Y,R30
000383 b7ef      	IN   R30,SREG
                 ; 0000 0165     TIMER2_OVERFLOW++;
000384 9453      	INC  R5
                 ; 0000 0166 }
000385 bfef      	OUT  SREG,R30
000386 91e9      	LD   R30,Y+
000387 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 0169 {
                 _timer0_ovf:
000388 940e 0d2e 	CALL SUBOPT_0x12
                 ; 0000 016A     TIMER0_OVERFLOW++;
00038a 01f3      	MOVW R30,R6
00038b 9631      	ADIW R30,1
00038c 013f      	MOVW R6,R30
                 ; 0000 016B }
00038d c008      	RJMP _0x5F
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0000 016F {
                 _timer0_comp:
00038e 940e 0d2e 	CALL SUBOPT_0x12
                 ; 0000 0170     TIMER1_OVERFLOW++;
000390 01f6      	MOVW R30,R12
000391 9631      	ADIW R30,1
000392 016f      	MOVW R12,R30
                 ; 0000 0171     TCNT1H = 0x00;
000393 e0e0      	LDI  R30,LOW(0)
000394 bded      	OUT  0x2D,R30
                 ; 0000 0172     TCNT1L = 0x00;
000395 bdec      	OUT  0x2C,R30
                 ; 0000 0173 }
                 _0x5F:
000396 91e9      	LD   R30,Y+
000397 bfef      	OUT  SREG,R30
000398 91f9      	LD   R31,Y+
000399 91e9      	LD   R30,Y+
00039a 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 0176 {
                 _main:
                 ; 0000 0177     float a_buff;
                 ; 0000 0178     float v_buff;
                 ; 0000 0179 
                 ; 0000 017A     int velocity = 0;
                 ; 0000 017B     int angularV = 0;
                 ; 0000 017C     int velocity_R = 0;
                 ; 0000 017D     int velocity_L = 0;
                 ; 0000 017E     int past_velocity_R = 0;
                 ; 0000 017F     int past_velocity_L = 0;
                 ; 0000 0180     int del_ms = 0;
                 ; 0000 0181 
                 ; 0000 0182     int currentRPM_R = 0;
                 ; 0000 0183     int currentRPM_L = 0;
                 ; 0000 0184     float currentV_R = 0;
                 ; 0000 0185     float currentV_L = 0;
                 ; 0000 0186     int goal_current_R = 0;
                 ; 0000 0187     int goal_current_L = 0;
                 ; 0000 0188 
                 ; 0000 0189     float d_velocity = 0;
                 ; 0000 018A     float d_angularV = 0;
                 ; 0000 018B     float control_time = 0;
                 ; 0000 018C 
                 ; 0000 018D     float d_x = 0;
                 ; 0000 018E     float d_y = 0;
                 ; 0000 018F     float d_angular = 0;
                 ; 0000 0190     int d_angular_circula = 0;
                 ; 0000 0191 
                 ; 0000 0192     float goal_x = 0;
                 ; 0000 0193     float goal_y = 0;
                 ; 0000 0194     int goal_angular = 0;
                 ; 0000 0195 
                 ; 0000 0196     float TIMER1_TIME = 0;
                 ; 0000 0197     float TIMER0_TIME = 0;
                 ; 0000 0198 
                 ; 0000 0199     char rootine_test = 0;
                 ; 0000 019A 
                 ; 0000 019B     unsigned char BUFF[500] = {0,};
                 ; 0000 019C 
                 ; 0000 019D     usart1_init(bps_115200);
00039b 97ef      	SBIW R28,63
00039c 9722      	SBIW R28,2
00039d 50d2      	SUBI R29,2
                +
00039e e389     +LDI R24 , LOW ( 569 )
00039f e092     +LDI R25 , HIGH ( 569 )
                 	__GETWRN 24,25,569
0003a0 e0a0      	LDI  R26,LOW(0)
0003a1 e0b0      	LDI  R27,HIGH(0)
0003a2 e8ec      	LDI  R30,LOW(_0x49*2)
0003a3 e0f0      	LDI  R31,HIGH(_0x49*2)
0003a4 940e 1153 	CALL __INITLOCW
                 ;	a_buff -> Y+573
                 ;	v_buff -> Y+569
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+567
                 ;	past_velocity_R -> Y+565
                 ;	past_velocity_L -> Y+563
                 ;	del_ms -> Y+561
                 ;	currentRPM_R -> Y+559
                 ;	currentRPM_L -> Y+557
                 ;	currentV_R -> Y+553
                 ;	currentV_L -> Y+549
                 ;	goal_current_R -> Y+547
                 ;	goal_current_L -> Y+545
                 ;	d_velocity -> Y+541
                 ;	d_angularV -> Y+537
                 ;	control_time -> Y+533
                 ;	d_x -> Y+529
                 ;	d_y -> Y+525
                 ;	d_angular -> Y+521
                 ;	d_angular_circula -> Y+519
                 ;	goal_x -> Y+515
                 ;	goal_y -> Y+511
                 ;	goal_angular -> Y+509
                 ;	TIMER1_TIME -> Y+505
                 ;	TIMER0_TIME -> Y+501
                 ;	rootine_test -> Y+500
                 ;	BUFF -> Y+0
                +
0003a6 e000     +LDI R16 , LOW ( 0 )
0003a7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003a8 e020     +LDI R18 , LOW ( 0 )
0003a9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0003aa e040     +LDI R20 , LOW ( 0 )
0003ab e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0003ac e0e7      	LDI  R30,LOW(7)
0003ad e0f0      	LDI  R31,HIGH(7)
0003ae 93fa      	ST   -Y,R31
0003af 93ea      	ST   -Y,R30
0003b0 de08      	RCALL _usart1_init
                 ; 0000 019E     usart0_init(bps_115200);
0003b1 e0e7      	LDI  R30,LOW(7)
0003b2 e0f0      	LDI  R31,HIGH(7)
0003b3 93fa      	ST   -Y,R31
0003b4 93ea      	ST   -Y,R30
0003b5 de1b      	RCALL _usart0_init
                 ; 0000 019F     timer2_init();
0003b6 de30      	RCALL _timer2_init
                 ; 0000 01A0     timer0_init();
0003b7 de35      	RCALL _timer0_init
                 ; 0000 01A1     timer1_init();
0003b8 de38      	RCALL _timer1_init
                 ; 0000 01A2     SREG |= 0x80;
0003b9 9478      	BSET 7
                 ; 0000 01A3     DDRB.1 = 1;
0003ba 9ab9      	SBI  0x17,1
                 ; 0000 01A4     DDRB.2 = 1;
0003bb 9aba      	SBI  0x17,2
                 ; 0000 01A5     DDRB.3 = 1;
0003bc 9abb      	SBI  0x17,3
                 ; 0000 01A6     delay_ms(5000);
0003bd e8e8      	LDI  R30,LOW(5000)
0003be e1f3      	LDI  R31,HIGH(5000)
0003bf 940e 0d39 	CALL SUBOPT_0x14
                 ; 0000 01A7     PORTB.1 = 0;
0003c1 98c1      	CBI  0x18,1
                 ; 0000 01A8     PORTB.2 = 1;
0003c2 9ac2      	SBI  0x18,2
                 ; 0000 01A9 
                 ; 0000 01AA     TIMER0_OVERFLOW = 0;
0003c3 2466      	CLR  R6
0003c4 2477      	CLR  R7
                 ; 0000 01AB     TCNT0 = 0;
0003c5 e0e0      	LDI  R30,LOW(0)
0003c6 bfe2      	OUT  0x32,R30
                 ; 0000 01AC 
                 ; 0000 01AD     while(1)
                 _0x54:
                 ; 0000 01AE     {
                 ; 0000 01AF         if(CHECK_GETS)
0003c7 2088      	TST  R8
0003c8 f411      	BRNE PC+3
0003c9 940c 045e 	JMP _0x57
                 ; 0000 01B0         {
                 ; 0000 01B1             PORTB.1 = 1;
0003cb 9ac1      	SBI  0x18,1
                 ; 0000 01B2 
                 ; 0000 01B3             UCSR1B &= ~(1<<RXEN1);
0003cc 91e0 009a 	LDS  R30,154
0003ce 7eef      	ANDI R30,0xEF
0003cf 93e0 009a 	STS  154,R30
                 ; 0000 01B4             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
0003d1 e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0003d2 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0003d3 93fa      	ST   -Y,R31
0003d4 93ea      	ST   -Y,R30
                +
0003d5 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0003d6 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0003d7 93fa      	ST   -Y,R31
0003d8 93ea      	ST   -Y,R30
0003d9 b7ed      	IN   R30,SPL
0003da b7fe      	IN   R31,SPH
0003db 9731      	SBIW R30,1
0003dc 940e 1128 	CALL __PUTPARD1L
0003de 931f      	PUSH R17
0003df 930f      	PUSH R16
0003e0 b7ed      	IN   R30,SPL
0003e1 b7fe      	IN   R31,SPH
0003e2 9731      	SBIW R30,1
0003e3 940e 1128 	CALL __PUTPARD1L
0003e5 933f      	PUSH R19
0003e6 932f      	PUSH R18
0003e7 01fe      	MOVW R30,R28
0003e8 5ce3      	SUBI R30,LOW(-(573))
0003e9 4ffd      	SBCI R31,HIGH(-(573))
0003ea 2766      	CLR  R22
0003eb 2777      	CLR  R23
0003ec 940e 112a 	CALL __PUTPARD1
0003ee e08c      	LDI  R24,12
0003ef 940e 0aad 	CALL _sscanf
0003f1 9660      	ADIW R28,16
0003f2 912f      	POP  R18
0003f3 913f      	POP  R19
0003f4 910f      	POP  R16
0003f5 911f      	POP  R17
                 ; 0000 01B5             // sscanf(VELOCITY_BUFF,"<%f,%f,%d>", &goal_x, &goal_y, &goal_angular);
                 ; 0000 01B6 
                 ; 0000 01B7             if(!del_ms){
0003f6 940e 0d3d 	CALL SUBOPT_0x15
0003f8 9730      	SBIW R30,0
0003f9 f4b1      	BRNE _0x5A
                 ; 0000 01B8                 d_x = 0;
0003fa e0e0      	LDI  R30,LOW(0)
                +
0003fb 01de     +MOVW R26 , R28
0003fc 5eaf     +SUBI R26 , LOW ( - 529 )
0003fd 4fbd     +SBCI R27 , HIGH ( - 529 )
0003fe 93ed     +ST X + , R30
0003ff 93ed     +ST X + , R30
000400 93ed     +ST X + , R30
000401 93ec     +ST X , R30
                 	__CLRD1SX 529
                 ; 0000 01B9                 d_y = 0;
                +
000402 01de     +MOVW R26 , R28
000403 5fa3     +SUBI R26 , LOW ( - 525 )
000404 4fbd     +SBCI R27 , HIGH ( - 525 )
000405 93ed     +ST X + , R30
000406 93ed     +ST X + , R30
000407 93ed     +ST X + , R30
000408 93ec     +ST X , R30
                 	__CLRD1SX 525
                 ; 0000 01BA                 d_angular = 0;
                +
000409 01de     +MOVW R26 , R28
00040a 5fa7     +SUBI R26 , LOW ( - 521 )
00040b 4fbd     +SBCI R27 , HIGH ( - 521 )
00040c 93ed     +ST X + , R30
00040d 93ed     +ST X + , R30
00040e 93ed     +ST X + , R30
00040f 93ec     +ST X , R30
                 	__CLRD1SX 521
                 ; 0000 01BB             }
                 ; 0000 01BC 
                 ; 0000 01BD             v_buff = (float)velocity/1000;
                 _0x5A:
000410 01f8      	MOVW R30,R16
000411 940e 0d44 	CALL SUBOPT_0x16
                +
000413 01de     +MOVW R26 , R28
000414 5ca7     +SUBI R26 , LOW ( - 569 )
000415 4fbd     +SBCI R27 , HIGH ( - 569 )
000416 93ed     +ST X + , R30
000417 93fd     +ST X + , R31
000418 936d     +ST X + , R22
000419 937c     +ST X , R23
                 	__PUTD1SX 569
                 ; 0000 01BE             a_buff = (float)angularV/1000;
00041a 01f9      	MOVW R30,R18
00041b 940e 0d44 	CALL SUBOPT_0x16
                +
00041d 01de     +MOVW R26 , R28
00041e 5ca3     +SUBI R26 , LOW ( - 573 )
00041f 4fbd     +SBCI R27 , HIGH ( - 573 )
000420 93ed     +ST X + , R30
000421 93fd     +ST X + , R31
000422 936d     +ST X + , R22
000423 937c     +ST X , R23
                 	__PUTD1SX 573
                 ; 0000 01BF 
                 ; 0000 01C0             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000424 01fe      	MOVW R30,R28
000425 5ce7      	SUBI R30,LOW(-(569))
000426 4ffd      	SBCI R31,HIGH(-(569))
000427 93fa      	ST   -Y,R31
000428 93ea      	ST   -Y,R30
000429 01fe      	MOVW R30,R28
00042a 5ce1      	SUBI R30,LOW(-(575))
00042b 4ffd      	SBCI R31,HIGH(-(575))
00042c 93fa      	ST   -Y,R31
00042d 93ea      	ST   -Y,R30
00042e b7ed      	IN   R30,SPL
00042f b7fe      	IN   R31,SPH
000430 9731      	SBIW R30,1
000431 93fa      	ST   -Y,R31
000432 93ea      	ST   -Y,R30
000433 935f      	PUSH R21
000434 934f      	PUSH R20
000435 01fe      	MOVW R30,R28
000436 5ce3      	SUBI R30,LOW(-(573))
000437 4ffd      	SBCI R31,HIGH(-(573))
000438 93fa      	ST   -Y,R31
000439 93ea      	ST   -Y,R30
00043a de41      	RCALL _Make_MSPEED
00043b 914f      	POP  R20
00043c 915f      	POP  R21
                 ; 0000 01C1 
                 ; 0000 01C2             oper_Disapath(velocity_R, velocity_L);
00043d 935a      	ST   -Y,R21
00043e 934a      	ST   -Y,R20
                +
00043f 01fe     +MOVW R30 , R28
000440 5ce7     +SUBI R30 , LOW ( - 569 )
000441 4ffd     +SBCI R31 , HIGH ( - 569 )
000442 9001     +LD R0 , Z +
000443 81f0     +LD R31 , Z
000444 2de0     +MOV R30 , R0
                 	__GETW1SX 569
000445 93fa      	ST   -Y,R31
000446 93ea      	ST   -Y,R30
000447 deac      	RCALL _oper_Disapath
                 ; 0000 01C3 
                 ; 0000 01C4             TIMER1_TIME = 0;
000448 e0e0      	LDI  R30,LOW(0)
                +
000449 01de     +MOVW R26 , R28
00044a 50a7     +SUBI R26 , LOW ( - 505 )
00044b 4fbe     +SBCI R27 , HIGH ( - 505 )
00044c 93ed     +ST X + , R30
00044d 93ed     +ST X + , R30
00044e 93ed     +ST X + , R30
00044f 93ec     +ST X , R30
                 	__CLRD1SX 505
                 ; 0000 01C5             TIMER1_OVERFLOW = 0;
000450 24cc      	CLR  R12
000451 24dd      	CLR  R13
                 ; 0000 01C6             TCNT1L = 0;
000452 bdec      	OUT  0x2C,R30
                 ; 0000 01C7 
                 ; 0000 01C8             rootine_test = 1;
000453 e0e1      	LDI  R30,LOW(1)
                +
000454 01de     +MOVW R26 , R28
000455 50ac     +SUBI R26 , LOW ( - 500 )
000456 4fbe     +SBCI R27 , HIGH ( - 500 )
000457 93ec     +ST X , R30
                 	__PUTB1SX 500
                 ; 0000 01C9             CHECK_GETS = 0;
000458 2488      	CLR  R8
                 ; 0000 01CA             UCSR1B |=(1<<RXEN1);
000459 91e0 009a 	LDS  R30,154
00045b 61e0      	ORI  R30,0x10
00045c 93e0 009a 	STS  154,R30
                 ; 0000 01CB             // PORTB.1 = 0;
                 ; 0000 01CC         }
                 ; 0000 01CD 
                 ; 0000 01CE         // if(rootine_test == 0)
                 ; 0000 01CF         // {
                 ; 0000 01D0         //     v_buff = 0.15;
                 ; 0000 01D1         //     a_buff = 0;
                 ; 0000 01D2         //     if(d_x<1)
                 ; 0000 01D3         //     {
                 ; 0000 01D4         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 01D5         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 01D6         //     }
                 ; 0000 01D7         //     else{
                 ; 0000 01D8         //         rootine_test = 1;
                 ; 0000 01D9         //         oper_Disapath(0,0);
                 ; 0000 01DA         //     }
                 ; 0000 01DB         // }
                 ; 0000 01DC         // else if(rootine_test == 1)
                 ; 0000 01DD         // {
                 ; 0000 01DE         //     v_buff = 0;
                 ; 0000 01DF         //     a_buff = -0.7;
                 ; 0000 01E0         //     if(d_angular_circula<90)
                 ; 0000 01E1         //     {
                 ; 0000 01E2         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 01E3         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 01E4         //     }
                 ; 0000 01E5         //     else{
                 ; 0000 01E6         //         rootine_test = 2;
                 ; 0000 01E7         //         oper_Disapath(0,0);
                 ; 0000 01E8         //     }
                 ; 0000 01E9         // }
                 ; 0000 01EA         // else if(rootine_test == 2)
                 ; 0000 01EB         // {
                 ; 0000 01EC         //     v_buff = 0.15;
                 ; 0000 01ED         //     a_buff = 0;
                 ; 0000 01EE         //     if(d_y<1)
                 ; 0000 01EF         //     {
                 ; 0000 01F0         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 01F1         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 01F2         //     }
                 ; 0000 01F3         //     else{
                 ; 0000 01F4         //         rootine_test = 3;
                 ; 0000 01F5         //         oper_Disapath(0,0);
                 ; 0000 01F6         //     }
                 ; 0000 01F7         // }
                 ; 0000 01F8 
                 ; 0000 01F9         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0x57:
00045e 01f6      	MOVW R30,R12
00045f efaf      	LDI  R26,LOW(255)
000460 e0b0      	LDI  R27,HIGH(255)
000461 940e 10ae 	CALL __MULW12U
000463 01df      	MOVW R26,R30
000464 b5ec      	IN   R30,0x2C
000465 940e 0d20 	CALL SUBOPT_0x10
000467 2766      	CLR  R22
000468 2777      	CLR  R23
000469 940e 0f4c 	CALL __CDF1
                +
00046b edae     +LDI R26 , LOW ( 0x3D8E38DE )
00046c e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00046d e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00046e e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00046f 940e 0fd6 	CALL __MULF12
                +
000471 01de     +MOVW R26 , R28
000472 50a7     +SUBI R26 , LOW ( - 505 )
000473 4fbe     +SBCI R27 , HIGH ( - 505 )
000474 93ed     +ST X + , R30
000475 93fd     +ST X + , R31
000476 936d     +ST X + , R22
000477 937c     +ST X , R23
                 	__PUTD1SX 505
                 ; 0000 01FA 
                 ; 0000 01FB         if(del_ms<TIMER1_TIME)
                +
000478 01de     +MOVW R26 , R28
000479 5caf     +SUBI R26 , LOW ( - 561 )
00047a 4fbd     +SBCI R27 , HIGH ( - 561 )
00047b 900d     +LD R0 , X +
00047c 91bc     +LD R27 , X
00047d 2da0     +MOV R26 , R0
                 	__GETW2SX 561
00047e 940e 10a9 	CALL __CWD2
000480 940e 1131 	CALL __CDF2
000482 940e 1069 	CALL __CMPF12
000484 f4c0      	BRSH _0x5B
                 ; 0000 01FC         {
                 ; 0000 01FD             oper_Disapath(0,0);
000485 e0e0      	LDI  R30,LOW(0)
000486 e0f0      	LDI  R31,HIGH(0)
000487 93fa      	ST   -Y,R31
000488 93ea      	ST   -Y,R30
000489 93fa      	ST   -Y,R31
00048a 93ea      	ST   -Y,R30
00048b de68      	RCALL _oper_Disapath
                 ; 0000 01FE             TIMER1_OVERFLOW = 0;
00048c 24cc      	CLR  R12
00048d 24dd      	CLR  R13
                 ; 0000 01FF             v_buff = 0;
00048e e0e0      	LDI  R30,LOW(0)
                +
00048f 01de     +MOVW R26 , R28
000490 5ca7     +SUBI R26 , LOW ( - 569 )
000491 4fbd     +SBCI R27 , HIGH ( - 569 )
000492 93ed     +ST X + , R30
000493 93ed     +ST X + , R30
000494 93ed     +ST X + , R30
000495 93ec     +ST X , R30
                 	__CLRD1SX 569
                 ; 0000 0200             a_buff = 0;
                +
000496 01de     +MOVW R26 , R28
000497 5ca3     +SUBI R26 , LOW ( - 573 )
000498 4fbd     +SBCI R27 , HIGH ( - 573 )
000499 93ed     +ST X + , R30
00049a 93ed     +ST X + , R30
00049b 93ed     +ST X + , R30
00049c 93ec     +ST X , R30
                 	__CLRD1SX 573
                 ; 0000 0201         }
                 ; 0000 0202 
                 ; 0000 0203         delay_ms(5);
                 _0x5B:
00049d 940e 0d51 	CALL SUBOPT_0x17
                 ; 0000 0204         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
00049f e0e1      	LDI  R30,LOW(1)
0004a0 940e 0d54 	CALL SUBOPT_0x18
                 ; 0000 0205         delay_ms(5);
                 ; 0000 0206         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
0004a2 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004a3 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004a4 93fa      	ST   -Y,R31
0004a5 93ea      	ST   -Y,R30
0004a6 924a      	ST   -Y,R4
0004a7 01fe      	MOVW R30,R28
0004a8 5dea      	SUBI R30,LOW(-(550))
0004a9 4ffd      	SBCI R31,HIGH(-(550))
0004aa 93fa      	ST   -Y,R31
0004ab 93ea      	ST   -Y,R30
0004ac de65      	RCALL _get_RPM
                +
0004ad 01de     +MOVW R26 , R28
0004ae 5da1     +SUBI R26 , LOW ( - 559 )
0004af 4fbd     +SBCI R27 , HIGH ( - 559 )
0004b0 93ed     +ST X + , R30
0004b1 93fc     +ST X , R31
                 	__PUTW1SX 559
                 ; 0000 0207         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0004b2 e0e2      	LDI  R30,LOW(2)
0004b3 940e 0d54 	CALL SUBOPT_0x18
                 ; 0000 0208         delay_ms(5);
                 ; 0000 0209         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
0004b5 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004b6 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004b7 93fa      	ST   -Y,R31
0004b8 93ea      	ST   -Y,R30
0004b9 924a      	ST   -Y,R4
0004ba 01fe      	MOVW R30,R28
0004bb 5dec      	SUBI R30,LOW(-(548))
0004bc 4ffd      	SBCI R31,HIGH(-(548))
0004bd 93fa      	ST   -Y,R31
0004be 93ea      	ST   -Y,R30
0004bf de52      	RCALL _get_RPM
0004c0 940e 108d 	CALL __ANEGW1
                +
0004c2 01de     +MOVW R26 , R28
0004c3 5da3     +SUBI R26 , LOW ( - 557 )
0004c4 4fbd     +SBCI R27 , HIGH ( - 557 )
0004c5 93ed     +ST X + , R30
0004c6 93fc     +ST X , R31
                 	__PUTW1SX 557
                 ; 0000 020A 
                 ; 0000 020B         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
0004c7 940e 0d5e 	CALL SUBOPT_0x19
0004c9 940e 0d65 	CALL SUBOPT_0x1A
                +
0004cb 01de     +MOVW R26 , R28
0004cc 5da7     +SUBI R26 , LOW ( - 553 )
0004cd 4fbd     +SBCI R27 , HIGH ( - 553 )
0004ce 93ed     +ST X + , R30
0004cf 93fd     +ST X + , R31
0004d0 936d     +ST X + , R22
0004d1 937c     +ST X , R23
                 	__PUTD1SX 553
                 ; 0000 020C         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
0004d2 01fe     +MOVW R30 , R28
0004d3 5de3     +SUBI R30 , LOW ( - 557 )
0004d4 4ffd     +SBCI R31 , HIGH ( - 557 )
0004d5 9001     +LD R0 , Z +
0004d6 81f0     +LD R31 , Z
0004d7 2de0     +MOV R30 , R0
                 	__GETW1SX 557
0004d8 940e 0d65 	CALL SUBOPT_0x1A
                +
0004da 01de     +MOVW R26 , R28
0004db 5dab     +SUBI R26 , LOW ( - 549 )
0004dc 4fbd     +SBCI R27 , HIGH ( - 549 )
0004dd 93ed     +ST X + , R30
0004de 93fd     +ST X + , R31
0004df 936d     +ST X + , R22
0004e0 937c     +ST X , R23
                 	__PUTD1SX 549
                 ; 0000 020D 
                 ; 0000 020E         d_velocity = (currentV_R + currentV_L)/2;
                +
0004e1 01de     +MOVW R26 , R28
0004e2 5da7     +SUBI R26 , LOW ( - 553 )
0004e3 4fbd     +SBCI R27 , HIGH ( - 553 )
0004e4 900d     +LD R0 , X +
0004e5 901d     +LD R1 , X +
0004e6 918d     +LD R24 , X +
0004e7 919c     +LD R25 , X
0004e8 01d0     +MOVW R26 , R0
                 	__GETD2SX 553
0004e9 940e 0f86 	CALL __ADDF12
0004eb 01df      	MOVW R26,R30
0004ec 01cb      	MOVW R24,R22
                +
0004ed e0e0     +LDI R30 , LOW ( 0x40000000 )
0004ee e0f0     +LDI R31 , HIGH ( 0x40000000 )
0004ef e060     +LDI R22 , BYTE3 ( 0x40000000 )
0004f0 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0004f1 940e 1024 	CALL __DIVF21
                +
0004f3 01de     +MOVW R26 , R28
0004f4 5ea3     +SUBI R26 , LOW ( - 541 )
0004f5 4fbd     +SBCI R27 , HIGH ( - 541 )
0004f6 93ed     +ST X + , R30
0004f7 93fd     +ST X + , R31
0004f8 936d     +ST X + , R22
0004f9 937c     +ST X , R23
                 	__PUTD1SX 541
                 ; 0000 020F         d_angularV = (currentV_R-currentV_L)/Length;
                +
0004fa 01de     +MOVW R26 , R28
0004fb 5dab     +SUBI R26 , LOW ( - 549 )
0004fc 4fbd     +SBCI R27 , HIGH ( - 549 )
0004fd 900d     +LD R0 , X +
0004fe 901d     +LD R1 , X +
0004ff 918d     +LD R24 , X +
000500 919c     +LD R25 , X
000501 01d0     +MOVW R26 , R0
                 	__GETD2SX 549
                +
000502 01fe     +MOVW R30 , R28
000503 5de7     +SUBI R30 , LOW ( - 553 )
000504 4ffd     +SBCI R31 , HIGH ( - 553 )
000505 9001     +LD R0 , Z +
000506 9011     +LD R1 , Z +
000507 9161     +LD R22 , Z +
000508 8170     +LD R23 , Z
000509 01f0     +MOVW R30 , R0
                 	__GETD1SX 553
00050a 940e 0f7f 	CALL __SUBF12
00050c 01df      	MOVW R26,R30
00050d 01cb      	MOVW R24,R22
                +
00050e e3eb     +LDI R30 , LOW ( 0x3E8FDF3B )
00050f edff     +LDI R31 , HIGH ( 0x3E8FDF3B )
000510 e86f     +LDI R22 , BYTE3 ( 0x3E8FDF3B )
000511 e37e     +LDI R23 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD1N 0x3E8FDF3B
000512 940e 1024 	CALL __DIVF21
                +
000514 01de     +MOVW R26 , R28
000515 5ea7     +SUBI R26 , LOW ( - 537 )
000516 4fbd     +SBCI R27 , HIGH ( - 537 )
000517 93ed     +ST X + , R30
000518 93fd     +ST X + , R31
000519 936d     +ST X + , R22
00051a 937c     +ST X , R23
                 	__PUTD1SX 537
                 ; 0000 0210 
                 ; 0000 0211         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
00051b 01f3      	MOVW R30,R6
00051c efaf      	LDI  R26,LOW(255)
00051d e0b0      	LDI  R27,HIGH(255)
00051e 940e 10ae 	CALL __MULW12U
000520 01df      	MOVW R26,R30
000521 b7e2      	IN   R30,0x32
000522 940e 0d20 	CALL SUBOPT_0x10
000524 2766      	CLR  R22
000525 2777      	CLR  R23
000526 940e 0f4c 	CALL __CDF1
                +
000528 eaae     +LDI R26 , LOW ( 0x3891A2AE )
000529 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
00052a e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
00052b e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
00052c 940e 0fd6 	CALL __MULF12
                +
00052e 01de     +MOVW R26 , R28
00052f 5eab     +SUBI R26 , LOW ( - 533 )
000530 4fbd     +SBCI R27 , HIGH ( - 533 )
000531 93ed     +ST X + , R30
000532 93fd     +ST X + , R31
000533 936d     +ST X + , R22
000534 937c     +ST X , R23
                 	__PUTD1SX 533
                 ; 0000 0212         TIMER0_OVERFLOW = 0;
000535 2466      	CLR  R6
000536 2477      	CLR  R7
                 ; 0000 0213         TCNT0 = 0;
000537 e0e0      	LDI  R30,LOW(0)
000538 bfe2      	OUT  0x32,R30
                 ; 0000 0214 
                 ; 0000 0215         d_angular += control_time*d_angularV;
                +
000539 01fe     +MOVW R30 , R28
00053a 5ee7     +SUBI R30 , LOW ( - 537 )
00053b 4ffd     +SBCI R31 , HIGH ( - 537 )
00053c 9001     +LD R0 , Z +
00053d 9011     +LD R1 , Z +
00053e 9161     +LD R22 , Z +
00053f 8170     +LD R23 , Z
000540 01f0     +MOVW R30 , R0
                 	__GETD1SX 537
                +
000541 01de     +MOVW R26 , R28
000542 5eab     +SUBI R26 , LOW ( - 533 )
000543 4fbd     +SBCI R27 , HIGH ( - 533 )
000544 900d     +LD R0 , X +
000545 901d     +LD R1 , X +
000546 918d     +LD R24 , X +
000547 919c     +LD R25 , X
000548 01d0     +MOVW R26 , R0
                 	__GETD2SX 533
000549 940e 0fd6 	CALL __MULF12
00054b 940e 0d72 	CALL SUBOPT_0x1B
00054d 940e 0f86 	CALL __ADDF12
                +
00054f 01de     +MOVW R26 , R28
000550 5fa7     +SUBI R26 , LOW ( - 521 )
000551 4fbd     +SBCI R27 , HIGH ( - 521 )
000552 93ed     +ST X + , R30
000553 93fd     +ST X + , R31
000554 936d     +ST X + , R22
000555 937c     +ST X , R23
                 	__PUTD1SX 521
                 ; 0000 0216         d_x += d_velocity*control_time*cos(d_angular);
000556 940e 0d7b 	CALL SUBOPT_0x1C
000558 937f      	PUSH R23
000559 936f      	PUSH R22
00055a 93ff      	PUSH R31
00055b 93ef      	PUSH R30
00055c 940e 0d8e 	CALL SUBOPT_0x1D
00055e 940e 0ba8 	CALL _cos
000560 91af      	POP  R26
000561 91bf      	POP  R27
000562 918f      	POP  R24
000563 919f      	POP  R25
000564 940e 0fd6 	CALL __MULF12
                +
000566 01de     +MOVW R26 , R28
000567 5eaf     +SUBI R26 , LOW ( - 529 )
000568 4fbd     +SBCI R27 , HIGH ( - 529 )
000569 900d     +LD R0 , X +
00056a 901d     +LD R1 , X +
00056b 918d     +LD R24 , X +
00056c 919c     +LD R25 , X
00056d 01d0     +MOVW R26 , R0
                 	__GETD2SX 529
00056e 940e 0f86 	CALL __ADDF12
                +
000570 01de     +MOVW R26 , R28
000571 5eaf     +SUBI R26 , LOW ( - 529 )
000572 4fbd     +SBCI R27 , HIGH ( - 529 )
000573 93ed     +ST X + , R30
000574 93fd     +ST X + , R31
000575 936d     +ST X + , R22
000576 937c     +ST X , R23
                 	__PUTD1SX 529
                 ; 0000 0217         d_y += d_velocity*control_time*sin(d_angular);
000577 940e 0d7b 	CALL SUBOPT_0x1C
000579 937f      	PUSH R23
00057a 936f      	PUSH R22
00057b 93ff      	PUSH R31
00057c 93ef      	PUSH R30
00057d 940e 0d8e 	CALL SUBOPT_0x1D
00057f 940e 0b21 	CALL _sin
000581 91af      	POP  R26
000582 91bf      	POP  R27
000583 918f      	POP  R24
000584 919f      	POP  R25
000585 940e 0fd6 	CALL __MULF12
                +
000587 01de     +MOVW R26 , R28
000588 5fa3     +SUBI R26 , LOW ( - 525 )
000589 4fbd     +SBCI R27 , HIGH ( - 525 )
00058a 900d     +LD R0 , X +
00058b 901d     +LD R1 , X +
00058c 918d     +LD R24 , X +
00058d 919c     +LD R25 , X
00058e 01d0     +MOVW R26 , R0
                 	__GETD2SX 525
00058f 940e 0f86 	CALL __ADDF12
                +
000591 01de     +MOVW R26 , R28
000592 5fa3     +SUBI R26 , LOW ( - 525 )
000593 4fbd     +SBCI R27 , HIGH ( - 525 )
000594 93ed     +ST X + , R30
000595 93fd     +ST X + , R31
000596 936d     +ST X + , R22
000597 937c     +ST X , R23
                 	__PUTD1SX 525
                 ; 0000 0218         d_angular_circula = (int)(d_angular*Circular);
000598 940e 0d72 	CALL SUBOPT_0x1B
                +
00059a efe6     +LDI R30 , LOW ( 0x426528F6 )
00059b e2f8     +LDI R31 , HIGH ( 0x426528F6 )
00059c e665     +LDI R22 , BYTE3 ( 0x426528F6 )
00059d e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
00059e 940e 0fd6 	CALL __MULF12
0005a0 940e 0f15 	CALL __CFD1
                +
0005a2 01de     +MOVW R26 , R28
0005a3 5fa9     +SUBI R26 , LOW ( - 519 )
0005a4 4fbd     +SBCI R27 , HIGH ( - 519 )
0005a5 93ed     +ST X + , R30
0005a6 93fc     +ST X , R31
                 	__PUTW1SX 519
                 ; 0000 0219 
                 ; 0000 021A 
                 ; 0000 021B         TIMER0_TIME += control_time;
                +
0005a7 01fe     +MOVW R30 , R28
0005a8 5eeb     +SUBI R30 , LOW ( - 533 )
0005a9 4ffd     +SBCI R31 , HIGH ( - 533 )
0005aa 9001     +LD R0 , Z +
0005ab 9011     +LD R1 , Z +
0005ac 9161     +LD R22 , Z +
0005ad 8170     +LD R23 , Z
0005ae 01f0     +MOVW R30 , R0
                 	__GETD1SX 533
0005af 940e 0d99 	CALL SUBOPT_0x1E
0005b1 940e 0f86 	CALL __ADDF12
                +
0005b3 01de     +MOVW R26 , R28
0005b4 50ab     +SUBI R26 , LOW ( - 501 )
0005b5 4fbe     +SBCI R27 , HIGH ( - 501 )
0005b6 93ed     +ST X + , R30
0005b7 93fd     +ST X + , R31
0005b8 936d     +ST X + , R22
0005b9 937c     +ST X , R23
                 	__PUTD1SX 501
                 ; 0000 021C         if(TIMER0_TIME>0.01){
0005ba 940e 0d99 	CALL SUBOPT_0x1E
                +
0005bc e0ea     +LDI R30 , LOW ( 0x3C23D70A )
0005bd edf7     +LDI R31 , HIGH ( 0x3C23D70A )
0005be e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
0005bf e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
0005c0 940e 1069 	CALL __CMPF12
0005c2 f009      	BREQ PC+2
0005c3 f410      	BRCC PC+3
0005c4 940c 05f7 	JMP  _0x5C
                 ; 0000 021D             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 021E             // sprintf(BUFF, "%f, %f\n", d_x, d_y,currentRPM_R, current);
                 ; 0000 021F             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 0220             // sprintf(BUFF, "%.3f, %.3f, %4d\n", d_x, d_y, d_angular_circula);
                 ; 0000 0221             sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
0005c6 01fe      	MOVW R30,R28
0005c7 93fa      	ST   -Y,R31
0005c8 93ea      	ST   -Y,R30
                +
0005c9 edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0005ca e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0005cb 93fa      	ST   -Y,R31
0005cc 93ea      	ST   -Y,R30
                +
0005cd 01fe     +MOVW R30 , R28
0005ce 5ced     +SUBI R30 , LOW ( - 563 )
0005cf 4ffd     +SBCI R31 , HIGH ( - 563 )
0005d0 9001     +LD R0 , Z +
0005d1 81f0     +LD R31 , Z
0005d2 2de0     +MOV R30 , R0
                 	__GETW1SX 563
0005d3 940e 0da2 	CALL SUBOPT_0x1F
                +
0005d5 01fe     +MOVW R30 , R28
0005d6 5ceb     +SUBI R30 , LOW ( - 565 )
0005d7 4ffd     +SBCI R31 , HIGH ( - 565 )
0005d8 9001     +LD R0 , Z +
0005d9 81f0     +LD R31 , Z
0005da 2de0     +MOV R30 , R0
                 	__GETW1SX 565
0005db 940e 108d 	CALL __ANEGW1
0005dd 940e 0da2 	CALL SUBOPT_0x1F
0005df 940e 0d5e 	CALL SUBOPT_0x19
0005e1 940e 0da2 	CALL SUBOPT_0x1F
0005e3 940e 0d3d 	CALL SUBOPT_0x15
0005e5 940e 0da2 	CALL SUBOPT_0x1F
0005e7 e180      	LDI  R24,16
0005e8 940e 091e 	CALL _sprintf
0005ea 9664      	ADIW R28,20
                 ; 0000 0222             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 0223             puts_USART1(BUFF);
0005eb 01fe      	MOVW R30,R28
0005ec 93fa      	ST   -Y,R31
0005ed 93ea      	ST   -Y,R30
0005ee dc18      	RCALL _puts_USART1
                 ; 0000 0224              TIMER0_TIME = 0;
0005ef e0e0      	LDI  R30,LOW(0)
                +
0005f0 01de     +MOVW R26 , R28
0005f1 50ab     +SUBI R26 , LOW ( - 501 )
0005f2 4fbe     +SBCI R27 , HIGH ( - 501 )
0005f3 93ed     +ST X + , R30
0005f4 93ed     +ST X + , R30
0005f5 93ed     +ST X + , R30
0005f6 93ec     +ST X , R30
                 	__CLRD1SX 501
                 ; 0000 0225         }
                 ; 0000 0226 
                 ; 0000 0227     }
                 _0x5C:
0005f7 cdcf      	RJMP _0x54
                 ; 0000 0228 }
                 _0x5D:
0005f8 cfff      	RJMP _0x5D
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0005f9 931a      	ST   -Y,R17
0005fa 930a      	ST   -Y,R16
0005fb 81aa      	LDD  R26,Y+2
0005fc 81bb      	LDD  R27,Y+2+1
0005fd 9612      	ADIW R26,2
0005fe 940e 110a 	CALL __GETW1P
000600 9730      	SBIW R30,0
000601 f129      	BREQ _0x2000010
000602 81aa      	LDD  R26,Y+2
000603 81bb      	LDD  R27,Y+2+1
000604 9614      	ADIW R26,4
000605 940e 110a 	CALL __GETW1P
000607 018f      	MOVW R16,R30
000608 9730      	SBIW R30,0
000609 f061      	BREQ _0x2000012
                +
00060a 3002     +CPI R16 , LOW ( 2 )
00060b e0e0     +LDI R30 , HIGH ( 2 )
00060c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00060d f0c0      	BRLO _0x2000013
00060e 01f8      	MOVW R30,R16
00060f 9731      	SBIW R30,1
000610 018f      	MOVW R16,R30
                +
000611 81aa     +LDD R26 , Y + 2
000612 81bb     +LDD R27 , Y + 2 + 1
000613 9614     +ADIW R26 , 4
000614 93ed     +ST X + , R30
000615 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000616 81aa      	LDD  R26,Y+2
000617 81bb      	LDD  R27,Y+2+1
000618 9612      	ADIW R26,2
000619 940e 0da7 	CALL SUBOPT_0x20
00061b 9731      	SBIW R30,1
00061c 81ac      	LDD  R26,Y+4
00061d 83a0      	STD  Z+0,R26
00061e 81aa      	LDD  R26,Y+2
00061f 81bb      	LDD  R27,Y+2+1
000620 940e 110a 	CALL __GETW1P
000622 23ff      	TST  R31
000623 f012      	BRMI _0x2000014
000624 940e 0da7 	CALL SUBOPT_0x20
                 _0x2000014:
                 _0x2000013:
000626 c006      	RJMP _0x2000015
                 _0x2000010:
000627 81aa      	LDD  R26,Y+2
000628 81bb      	LDD  R27,Y+2+1
000629 efef      	LDI  R30,LOW(65535)
00062a efff      	LDI  R31,HIGH(65535)
00062b 93ed      	ST   X+,R30
00062c 93fc      	ST   X,R31
                 _0x2000015:
00062d 8119      	LDD  R17,Y+1
00062e 8108      	LDD  R16,Y+0
00062f c348      	RJMP _0x20A0007
                 __ftoe_G100:
000630 9724      	SBIW R28,4
000631 940e 0ccb 	CALL SUBOPT_0x4
000633 e8e0      	LDI  R30,LOW(128)
000634 83ea      	STD  Y+2,R30
000635 e3ef      	LDI  R30,LOW(63)
000636 83eb      	STD  Y+3,R30
000637 940e 1147 	CALL __SAVELOCR4
000639 85ee      	LDD  R30,Y+14
00063a 85ff      	LDD  R31,Y+14+1
00063b 3fef      	CPI  R30,LOW(0xFFFF)
00063c efaf      	LDI  R26,HIGH(0xFFFF)
00063d 07fa      	CPC  R31,R26
00063e f449      	BRNE _0x2000019
00063f 85e8      	LDD  R30,Y+8
000640 85f9      	LDD  R31,Y+8+1
000641 93fa      	ST   -Y,R31
000642 93ea      	ST   -Y,R30
                +
000643 eeec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000644 e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000645 940e 0dad 	CALL SUBOPT_0x21
000647 c0b6      	RJMP _0x20A0009
                 _0x2000019:
000648 3fef      	CPI  R30,LOW(0x7FFF)
000649 e7af      	LDI  R26,HIGH(0x7FFF)
00064a 07fa      	CPC  R31,R26
00064b f449      	BRNE _0x2000018
00064c 85e8      	LDD  R30,Y+8
00064d 85f9      	LDD  R31,Y+8+1
00064e 93fa      	ST   -Y,R31
00064f 93ea      	ST   -Y,R30
                +
000650 eeed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000651 e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000652 940e 0dad 	CALL SUBOPT_0x21
000654 c0a9      	RJMP _0x20A0009
                 _0x2000018:
000655 85ab      	LDD  R26,Y+11
000656 30a7      	CPI  R26,LOW(0x7)
000657 f010      	BRLO _0x200001B
000658 e0e6      	LDI  R30,LOW(6)
000659 87eb      	STD  Y+11,R30
                 _0x200001B:
00065a 851b      	LDD  R17,Y+11
                 _0x200001C:
00065b 2fe1      	MOV  R30,R17
00065c 5011      	SUBI R17,1
00065d 30e0      	CPI  R30,0
00065e f019      	BREQ _0x200001E
00065f 940e 0db1 	CALL SUBOPT_0x22
000661 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000662 85ec     +LDD R30 , Y + 12
000663 85fd     +LDD R31 , Y + 12 + 1
000664 856e     +LDD R22 , Y + 12 + 2
000665 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000666 940e 1141 	CALL __CPD10
000668 f421      	BRNE _0x200001F
000669 e030      	LDI  R19,LOW(0)
00066a 940e 0db1 	CALL SUBOPT_0x22
00066c c02e      	RJMP _0x2000020
                 _0x200001F:
00066d 853b      	LDD  R19,Y+11
00066e 940e 0dbc 	CALL SUBOPT_0x23
000670 f009      	BREQ PC+2
000671 f410      	BRCC PC+3
000672 940c 067f 	JMP  _0x2000021
000674 940e 0db1 	CALL SUBOPT_0x22
                 _0x2000022:
000676 940e 0dbc 	CALL SUBOPT_0x23
000678 f028      	BRLO _0x2000024
000679 940e 0dc4 	CALL SUBOPT_0x24
00067b 940e 0dc9 	CALL SUBOPT_0x25
00067d cff8      	RJMP _0x2000022
                 _0x2000024:
00067e c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00067f 940e 0dbc 	CALL SUBOPT_0x23
000681 f440      	BRSH _0x2000028
000682 940e 0dc4 	CALL SUBOPT_0x24
000684 940e 0dd5 	CALL SUBOPT_0x26
000686 940e 0ddc 	CALL SUBOPT_0x27
000688 5031      	SUBI R19,LOW(1)
000689 cff5      	RJMP _0x2000026
                 _0x2000028:
00068a 940e 0db1 	CALL SUBOPT_0x22
                 _0x2000025:
                +
00068c 85ec     +LDD R30 , Y + 12
00068d 85fd     +LDD R31 , Y + 12 + 1
00068e 856e     +LDD R22 , Y + 12 + 2
00068f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000690 940e 0de1 	CALL SUBOPT_0x28
000692 940e 0ddc 	CALL SUBOPT_0x27
000694 940e 0dbc 	CALL SUBOPT_0x23
000696 f020      	BRLO _0x2000029
000697 940e 0dc4 	CALL SUBOPT_0x24
000699 940e 0dc9 	CALL SUBOPT_0x25
                 _0x2000029:
                 _0x2000020:
00069b e010      	LDI  R17,LOW(0)
                 _0x200002A:
00069c 85eb      	LDD  R30,Y+11
00069d 17e1      	CP   R30,R17
00069e f198      	BRLO _0x200002C
                +
00069f 81ac     +LDD R26 , Y + 4
0006a0 81bd     +LDD R27 , Y + 4 + 1
0006a1 818e     +LDD R24 , Y + 4 + 2
0006a2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006a3 940e 0de8 	CALL SUBOPT_0x29
0006a5 940e 0de1 	CALL SUBOPT_0x28
0006a7 940e 0def 	CALL SUBOPT_0x2A
0006a9 940e 0ce8 	CALL SUBOPT_0x8
0006ab 940e 0cf2 	CALL SUBOPT_0xA
0006ad 940e 0dc4 	CALL SUBOPT_0x24
0006af 940e 1024 	CALL __DIVF21
0006b1 940e 0f13 	CALL __CFD1U
0006b3 2f0e      	MOV  R16,R30
0006b4 940e 0df3 	CALL SUBOPT_0x2B
0006b6 940e 0dfa 	CALL SUBOPT_0x2C
0006b8 27ff      	CLR  R31
0006b9 2766      	CLR  R22
0006ba 2777      	CLR  R23
0006bb 940e 0f4c 	CALL __CDF1
                +
0006bd 81ac     +LDD R26 , Y + 4
0006be 81bd     +LDD R27 , Y + 4 + 1
0006bf 818e     +LDD R24 , Y + 4 + 2
0006c0 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006c1 940e 0fd6 	CALL __MULF12
0006c3 940e 0dc4 	CALL SUBOPT_0x24
0006c5 940e 0ced 	CALL SUBOPT_0x9
0006c7 940e 0ddc 	CALL SUBOPT_0x27
0006c9 2fe1      	MOV  R30,R17
0006ca 5f1f      	SUBI R17,-1
0006cb 30e0      	CPI  R30,0
0006cc f679      	BRNE _0x200002A
0006cd 940e 0df3 	CALL SUBOPT_0x2B
0006cf e2ee      	LDI  R30,LOW(46)
0006d0 93ec      	ST   X,R30
0006d1 cfca      	RJMP _0x200002A
                 _0x200002C:
0006d2 940e 0dff 	CALL SUBOPT_0x2D
0006d4 9731      	SBIW R30,1
0006d5 85aa      	LDD  R26,Y+10
0006d6 83a0      	STD  Z+0,R26
0006d7 3030      	CPI  R19,0
0006d8 f42c      	BRGE _0x200002E
0006d9 9531      	NEG  R19
0006da 85a8      	LDD  R26,Y+8
0006db 85b9      	LDD  R27,Y+8+1
0006dc e2ed      	LDI  R30,LOW(45)
0006dd c003      	RJMP _0x200010E
                 _0x200002E:
0006de 85a8      	LDD  R26,Y+8
0006df 85b9      	LDD  R27,Y+8+1
0006e0 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
0006e1 93ec      	ST   X,R30
0006e2 940e 0dff 	CALL SUBOPT_0x2D
0006e4 940e 0dff 	CALL SUBOPT_0x2D
0006e6 9731      	SBIW R30,1
0006e7 01bf      	MOVW R22,R30
0006e8 2fa3      	MOV  R26,R19
0006e9 e0ea      	LDI  R30,LOW(10)
0006ea 940e 10c4 	CALL __DIVB21
0006ec 5de0      	SUBI R30,-LOW(48)
0006ed 01db      	MOVW R26,R22
0006ee 93ec      	ST   X,R30
0006ef 940e 0dff 	CALL SUBOPT_0x2D
0006f1 9731      	SBIW R30,1
0006f2 01bf      	MOVW R22,R30
0006f3 2fa3      	MOV  R26,R19
0006f4 e0ea      	LDI  R30,LOW(10)
0006f5 940e 10ee 	CALL __MODB21
0006f7 5de0      	SUBI R30,-LOW(48)
0006f8 01db      	MOVW R26,R22
0006f9 93ec      	ST   X,R30
0006fa 85a8      	LDD  R26,Y+8
0006fb 85b9      	LDD  R27,Y+8+1
0006fc e0e0      	LDI  R30,LOW(0)
0006fd 93ec      	ST   X,R30
                 _0x20A0009:
0006fe 940e 114e 	CALL __LOADLOCR4
                 _0x20A000A:
000700 9660      	ADIW R28,16
000701 9508      	RET
                 __print_G100:
000702 97ef      	SBIW R28,63
000703 9761      	SBIW R28,17
000704 940e 1145 	CALL __SAVELOCR6
000706 e010      	LDI  R17,0
                +
000707 01fe     +MOVW R30 , R28
000708 5ae8     +SUBI R30 , LOW ( - 88 )
000709 4fff     +SBCI R31 , HIGH ( - 88 )
00070a 9001     +LD R0 , Z +
00070b 81f0     +LD R31 , Z
00070c 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00070d 87e8      	STD  Y+8,R30
00070e 87f9      	STD  Y+8+1,R31
                +
00070f 01fe     +MOVW R30 , R28
000710 5aea     +SUBI R30 , LOW ( - 86 )
000711 4fff     +SBCI R31 , HIGH ( - 86 )
000712 9001     +LD R0 , Z +
000713 81f0     +LD R31 , Z
000714 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000715 83ee      	STD  Y+6,R30
000716 83ff      	STD  Y+6+1,R31
000717 81ae      	LDD  R26,Y+6
000718 81bf      	LDD  R27,Y+6+1
000719 940e 0d09 	CALL SUBOPT_0xD
                 _0x2000030:
00071b 01de      	MOVW R26,R28
00071c 5aa4      	SUBI R26,LOW(-(92))
00071d 4fbf      	SBCI R27,HIGH(-(92))
00071e 940e 0da7 	CALL SUBOPT_0x20
000720 9731      	SBIW R30,1
000721 91e4      	LPM  R30,Z
000722 2f2e      	MOV  R18,R30
000723 30e0      	CPI  R30,0
000724 f411      	BRNE PC+3
000725 940c 0915 	JMP _0x2000032
000727 2fe1      	MOV  R30,R17
000728 30e0      	CPI  R30,0
000729 f439      	BRNE _0x2000036
00072a 3225      	CPI  R18,37
00072b f411      	BRNE _0x2000037
00072c e011      	LDI  R17,LOW(1)
00072d c002      	RJMP _0x2000038
                 _0x2000037:
00072e 940e 0e05 	CALL SUBOPT_0x2E
                 _0x2000038:
000730 c1e3      	RJMP _0x2000035
                 _0x2000036:
000731 30e1      	CPI  R30,LOW(0x1)
000732 f4c1      	BRNE _0x2000039
000733 3225      	CPI  R18,37
000734 f419      	BRNE _0x200003A
000735 940e 0e05 	CALL SUBOPT_0x2E
000737 c1db      	RJMP _0x200010F
                 _0x200003A:
000738 e012      	LDI  R17,LOW(2)
000739 e0e0      	LDI  R30,LOW(0)
00073a 8bed      	STD  Y+21,R30
00073b e000      	LDI  R16,LOW(0)
00073c 322d      	CPI  R18,45
00073d f411      	BRNE _0x200003B
00073e e001      	LDI  R16,LOW(1)
00073f c1d4      	RJMP _0x2000035
                 _0x200003B:
000740 322b      	CPI  R18,43
000741 f419      	BRNE _0x200003C
000742 e2eb      	LDI  R30,LOW(43)
000743 8bed      	STD  Y+21,R30
000744 c1cf      	RJMP _0x2000035
                 _0x200003C:
000745 3220      	CPI  R18,32
000746 f419      	BRNE _0x200003D
000747 e2e0      	LDI  R30,LOW(32)
000748 8bed      	STD  Y+21,R30
000749 c1ca      	RJMP _0x2000035
                 _0x200003D:
00074a c002      	RJMP _0x200003E
                 _0x2000039:
00074b 30e2      	CPI  R30,LOW(0x2)
00074c f439      	BRNE _0x200003F
                 _0x200003E:
00074d e050      	LDI  R21,LOW(0)
00074e e013      	LDI  R17,LOW(3)
00074f 3320      	CPI  R18,48
000750 f411      	BRNE _0x2000040
000751 6800      	ORI  R16,LOW(128)
000752 c1c1      	RJMP _0x2000035
                 _0x2000040:
000753 c002      	RJMP _0x2000041
                 _0x200003F:
000754 30e3      	CPI  R30,LOW(0x3)
000755 f491      	BRNE _0x2000042
                 _0x2000041:
000756 3320      	CPI  R18,48
000757 f010      	BRLO _0x2000044
000758 332a      	CPI  R18,58
000759 f008      	BRLO _0x2000045
                 _0x2000044:
00075a c007      	RJMP _0x2000043
                 _0x2000045:
00075b e0aa      	LDI  R26,LOW(10)
00075c 9f5a      	MUL  R21,R26
00075d 2d50      	MOV  R21,R0
00075e 2fe2      	MOV  R30,R18
00075f 53e0      	SUBI R30,LOW(48)
000760 0f5e      	ADD  R21,R30
000761 c1b2      	RJMP _0x2000035
                 _0x2000043:
000762 e040      	LDI  R20,LOW(0)
000763 322e      	CPI  R18,46
000764 f411      	BRNE _0x2000046
000765 e014      	LDI  R17,LOW(4)
000766 c1ad      	RJMP _0x2000035
                 _0x2000046:
000767 c00f      	RJMP _0x2000047
                 _0x2000042:
000768 30e4      	CPI  R30,LOW(0x4)
000769 f499      	BRNE _0x2000049
00076a 3320      	CPI  R18,48
00076b f010      	BRLO _0x200004B
00076c 332a      	CPI  R18,58
00076d f008      	BRLO _0x200004C
                 _0x200004B:
00076e c008      	RJMP _0x200004A
                 _0x200004C:
00076f 6200      	ORI  R16,LOW(32)
000770 e0aa      	LDI  R26,LOW(10)
000771 9f4a      	MUL  R20,R26
000772 2d40      	MOV  R20,R0
000773 2fe2      	MOV  R30,R18
000774 53e0      	SUBI R30,LOW(48)
000775 0f4e      	ADD  R20,R30
000776 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000777 362c      	CPI  R18,108
000778 f419      	BRNE _0x200004D
000779 6002      	ORI  R16,LOW(2)
00077a e015      	LDI  R17,LOW(5)
00077b c198      	RJMP _0x2000035
                 _0x200004D:
00077c c004      	RJMP _0x200004E
                 _0x2000049:
00077d 30e5      	CPI  R30,LOW(0x5)
00077e f011      	BREQ PC+3
00077f 940c 0914 	JMP _0x2000035
                 _0x200004E:
000781 2fe2      	MOV  R30,R18
000782 36e3      	CPI  R30,LOW(0x63)
000783 f459      	BRNE _0x2000053
000784 940e 0e0e 	CALL SUBOPT_0x2F
000786 940e 0e15 	CALL SUBOPT_0x30
000788 940e 0e0e 	CALL SUBOPT_0x2F
00078a 81a4      	LDD  R26,Z+4
00078b 93aa      	ST   -Y,R26
00078c 940e 0e1c 	CALL SUBOPT_0x31
00078e c184      	RJMP _0x2000054
                 _0x2000053:
00078f 34e5      	CPI  R30,LOW(0x45)
000790 f011      	BREQ _0x2000057
000791 36e5      	CPI  R30,LOW(0x65)
000792 f409      	BRNE _0x2000058
                 _0x2000057:
000793 c004      	RJMP _0x2000059
                 _0x2000058:
000794 36e6      	CPI  R30,LOW(0x66)
000795 f011      	BREQ PC+3
000796 940c 07e2 	JMP _0x200005A
                 _0x2000059:
000798 01fe      	MOVW R30,R28
000799 9676      	ADIW R30,22
00079a 87ee      	STD  Y+14,R30
00079b 87ff      	STD  Y+14+1,R31
00079c 940e 0e24 	CALL SUBOPT_0x32
00079e 940e 110e 	CALL __GETD1P
0007a0 940e 0e2b 	CALL SUBOPT_0x33
0007a2 940e 0e30 	CALL SUBOPT_0x34
0007a4 85ad      	LDD  R26,Y+13
0007a5 23aa      	TST  R26
0007a6 f022      	BRMI _0x200005B
0007a7 89ad      	LDD  R26,Y+21
0007a8 32ab      	CPI  R26,LOW(0x2B)
0007a9 f049      	BREQ _0x200005D
0007aa c017      	RJMP _0x200005E
                 _0x200005B:
0007ab 940e 0e32 	CALL SUBOPT_0x35
0007ad 940e 0ee0 	CALL __ANEGF1
0007af 940e 0e2b 	CALL SUBOPT_0x33
0007b1 e2ed      	LDI  R30,LOW(45)
0007b2 8bed      	STD  Y+21,R30
                 _0x200005D:
0007b3 ff07      	SBRS R16,7
0007b4 c005      	RJMP _0x200005F
0007b5 89ed      	LDD  R30,Y+21
0007b6 93ea      	ST   -Y,R30
0007b7 940e 0e1c 	CALL SUBOPT_0x31
0007b9 c008      	RJMP _0x2000060
                 _0x200005F:
0007ba 85ee      	LDD  R30,Y+14
0007bb 85ff      	LDD  R31,Y+14+1
0007bc 9631      	ADIW R30,1
0007bd 87ee      	STD  Y+14,R30
0007be 87ff      	STD  Y+14+1,R31
0007bf 9731      	SBIW R30,1
0007c0 89ad      	LDD  R26,Y+21
0007c1 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0007c2 ff05      	SBRS R16,5
0007c3 e046      	LDI  R20,LOW(6)
0007c4 3626      	CPI  R18,102
0007c5 f461      	BRNE _0x2000062
0007c6 940e 0e32 	CALL SUBOPT_0x35
0007c8 940e 112a 	CALL __PUTPARD1
0007ca 934a      	ST   -Y,R20
0007cb 89eb      	LDD  R30,Y+19
0007cc 89fc      	LDD  R31,Y+19+1
0007cd 93fa      	ST   -Y,R31
0007ce 93ea      	ST   -Y,R30
0007cf 940e 0bf5 	CALL _ftoa
0007d1 c00b      	RJMP _0x2000063
                 _0x2000062:
0007d2 940e 0e32 	CALL SUBOPT_0x35
0007d4 940e 112a 	CALL __PUTPARD1
0007d6 934a      	ST   -Y,R20
0007d7 932a      	ST   -Y,R18
0007d8 89ec      	LDD  R30,Y+20
0007d9 89fd      	LDD  R31,Y+20+1
0007da 93fa      	ST   -Y,R31
0007db 93ea      	ST   -Y,R30
0007dc de53      	RCALL __ftoe_G100
                 _0x2000063:
0007dd 01fe      	MOVW R30,R28
0007de 9676      	ADIW R30,22
0007df 940e 0e37 	CALL SUBOPT_0x36
0007e1 c01e      	RJMP _0x2000064
                 _0x200005A:
0007e2 37e3      	CPI  R30,LOW(0x73)
0007e3 f439      	BRNE _0x2000066
0007e4 940e 0e30 	CALL SUBOPT_0x34
0007e6 940e 0e3f 	CALL SUBOPT_0x37
0007e8 940e 0e37 	CALL SUBOPT_0x36
0007ea c00e      	RJMP _0x2000067
                 _0x2000066:
0007eb 37e0      	CPI  R30,LOW(0x70)
0007ec f4c1      	BRNE _0x2000069
0007ed 940e 0e30 	CALL SUBOPT_0x34
0007ef 940e 0e3f 	CALL SUBOPT_0x37
0007f1 87ee      	STD  Y+14,R30
0007f2 87ff      	STD  Y+14+1,R31
0007f3 93fa      	ST   -Y,R31
0007f4 93ea      	ST   -Y,R30
0007f5 940e 0bea 	CALL _strlenf
0007f7 2f1e      	MOV  R17,R30
0007f8 6008      	ORI  R16,LOW(8)
                 _0x2000067:
0007f9 770f      	ANDI R16,LOW(127)
0007fa 3040      	CPI  R20,0
0007fb f011      	BREQ _0x200006B
0007fc 1741      	CP   R20,R17
0007fd f008      	BRLO _0x200006C
                 _0x200006B:
0007fe c001      	RJMP _0x200006A
                 _0x200006C:
0007ff 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000800 e040      	LDI  R20,LOW(0)
000801 e0e0      	LDI  R30,LOW(0)
000802 8bec      	STD  Y+20,R30
000803 e030      	LDI  R19,LOW(0)
000804 c06e      	RJMP _0x200006D
                 _0x2000069:
000805 36e4      	CPI  R30,LOW(0x64)
000806 f011      	BREQ _0x2000070
000807 36e9      	CPI  R30,LOW(0x69)
000808 f411      	BRNE _0x2000071
                 _0x2000070:
000809 6004      	ORI  R16,LOW(4)
00080a c002      	RJMP _0x2000072
                 _0x2000071:
00080b 37e5      	CPI  R30,LOW(0x75)
00080c f4a1      	BRNE _0x2000073
                 _0x2000072:
00080d e0ea      	LDI  R30,LOW(10)
00080e 8bec      	STD  Y+20,R30
00080f ff01      	SBRS R16,1
000810 c008      	RJMP _0x2000074
                +
000811 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000812 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000813 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000814 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000815 940e 0e44 	CALL SUBOPT_0x38
000817 e01a      	LDI  R17,LOW(10)
000818 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000819 e1e0     +LDI R30 , LOW ( 0x2710 )
00081a e2f7     +LDI R31 , HIGH ( 0x2710 )
00081b e060     +LDI R22 , BYTE3 ( 0x2710 )
00081c e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00081d 940e 0e44 	CALL SUBOPT_0x38
00081f e015      	LDI  R17,LOW(5)
000820 c01b      	RJMP _0x2000075
                 _0x2000073:
000821 35e8      	CPI  R30,LOW(0x58)
000822 f411      	BRNE _0x2000077
000823 6008      	ORI  R16,LOW(8)
000824 c004      	RJMP _0x2000078
                 _0x2000077:
000825 37e8      	CPI  R30,LOW(0x78)
000826 f011      	BREQ PC+3
000827 940c 0913 	JMP _0x20000B6
                 _0x2000078:
000829 e1e0      	LDI  R30,LOW(16)
00082a 8bec      	STD  Y+20,R30
00082b ff01      	SBRS R16,1
00082c c008      	RJMP _0x200007A
                +
00082d e0e0     +LDI R30 , LOW ( 0x10000000 )
00082e e0f0     +LDI R31 , HIGH ( 0x10000000 )
00082f e060     +LDI R22 , BYTE3 ( 0x10000000 )
000830 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000831 940e 0e44 	CALL SUBOPT_0x38
000833 e018      	LDI  R17,LOW(8)
000834 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000835 e0e0     +LDI R30 , LOW ( 0x1000 )
000836 e1f0     +LDI R31 , HIGH ( 0x1000 )
000837 e060     +LDI R22 , BYTE3 ( 0x1000 )
000838 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000839 940e 0e44 	CALL SUBOPT_0x38
00083b e014      	LDI  R17,LOW(4)
                 _0x2000075:
00083c 3040      	CPI  R20,0
00083d f011      	BREQ _0x200007B
00083e 770f      	ANDI R16,LOW(127)
00083f c001      	RJMP _0x200007C
                 _0x200007B:
000840 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000841 ff01      	SBRS R16,1
000842 c008      	RJMP _0x200007D
000843 940e 0e30 	CALL SUBOPT_0x34
000845 940e 0e24 	CALL SUBOPT_0x32
000847 9614      	ADIW R26,4
000848 940e 110e 	CALL __GETD1P
00084a c00f      	RJMP _0x2000110
                 _0x200007D:
00084b ff02      	SBRS R16,2
00084c c007      	RJMP _0x200007F
00084d 940e 0e30 	CALL SUBOPT_0x34
00084f 940e 0e3f 	CALL SUBOPT_0x37
000851 940e 10a4 	CALL __CWD1
000853 c006      	RJMP _0x2000110
                 _0x200007F:
000854 940e 0e30 	CALL SUBOPT_0x34
000856 940e 0e3f 	CALL SUBOPT_0x37
000858 2766      	CLR  R22
000859 2777      	CLR  R23
                 _0x2000110:
                +
00085a 87ea     +STD Y + 10 , R30
00085b 87fb     +STD Y + 10 + 1 , R31
00085c 876c     +STD Y + 10 + 2 , R22
00085d 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00085e ff02      	SBRS R16,2
00085f c012      	RJMP _0x2000081
000860 85ad      	LDD  R26,Y+13
000861 23aa      	TST  R26
000862 f442      	BRPL _0x2000082
000863 940e 0e32 	CALL SUBOPT_0x35
000865 940e 1091 	CALL __ANEGD1
000867 940e 0e2b 	CALL SUBOPT_0x33
000869 e2ed      	LDI  R30,LOW(45)
00086a 8bed      	STD  Y+21,R30
                 _0x2000082:
00086b 89ed      	LDD  R30,Y+21
00086c 30e0      	CPI  R30,0
00086d f019      	BREQ _0x2000083
00086e 5f1f      	SUBI R17,-LOW(1)
00086f 5f4f      	SUBI R20,-LOW(1)
000870 c001      	RJMP _0x2000084
                 _0x2000083:
000871 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000872 2f34      	MOV  R19,R20
                 _0x200006D:
000873 fd00      	SBRC R16,0
000874 c014      	RJMP _0x2000085
                 _0x2000086:
000875 1715      	CP   R17,R21
000876 f410      	BRSH _0x2000089
000877 1735      	CP   R19,R21
000878 f008      	BRLO _0x200008A
                 _0x2000089:
000879 c00f      	RJMP _0x2000088
                 _0x200008A:
00087a ff07      	SBRS R16,7
00087b c008      	RJMP _0x200008B
00087c ff02      	SBRS R16,2
00087d c004      	RJMP _0x200008C
00087e 7f0b      	ANDI R16,LOW(251)
00087f 892d      	LDD  R18,Y+21
000880 5011      	SUBI R17,LOW(1)
000881 c001      	RJMP _0x200008D
                 _0x200008C:
000882 e320      	LDI  R18,LOW(48)
                 _0x200008D:
000883 c001      	RJMP _0x200008E
                 _0x200008B:
000884 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000885 940e 0e05 	CALL SUBOPT_0x2E
000887 5051      	SUBI R21,LOW(1)
000888 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000889 1714      	CP   R17,R20
00088a f490      	BRSH _0x2000091
00088b 6100      	ORI  R16,LOW(16)
00088c ff02      	SBRS R16,2
00088d c006      	RJMP _0x2000092
00088e 940e 0e49 	CALL SUBOPT_0x39
000890 f009      	BREQ _0x2000093
000891 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000892 5011      	SUBI R17,LOW(1)
000893 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000894 e3e0      	LDI  R30,LOW(48)
000895 93ea      	ST   -Y,R30
000896 940e 0e1c 	CALL SUBOPT_0x31
000898 3050      	CPI  R21,0
000899 f009      	BREQ _0x2000094
00089a 5051      	SUBI R21,LOW(1)
                 _0x2000094:
00089b 5041      	SUBI R20,LOW(1)
00089c cfec      	RJMP _0x200008F
                 _0x2000091:
00089d 2f31      	MOV  R19,R17
00089e 89ec      	LDD  R30,Y+20
00089f 30e0      	CPI  R30,0
0008a0 f4b9      	BRNE _0x2000095
                 _0x2000096:
0008a1 3030      	CPI  R19,0
0008a2 f0a1      	BREQ _0x2000098
0008a3 ff03      	SBRS R16,3
0008a4 c006      	RJMP _0x2000099
0008a5 85ee      	LDD  R30,Y+14
0008a6 85ff      	LDD  R31,Y+14+1
0008a7 9125      	LPM  R18,Z+
0008a8 87ee      	STD  Y+14,R30
0008a9 87ff      	STD  Y+14+1,R31
0008aa c005      	RJMP _0x200009A
                 _0x2000099:
0008ab 85ae      	LDD  R26,Y+14
0008ac 85bf      	LDD  R27,Y+14+1
0008ad 912d      	LD   R18,X+
0008ae 87ae      	STD  Y+14,R26
0008af 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0008b0 940e 0e05 	CALL SUBOPT_0x2E
0008b2 3050      	CPI  R21,0
0008b3 f009      	BREQ _0x200009B
0008b4 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0008b5 5031      	SUBI R19,LOW(1)
0008b6 cfea      	RJMP _0x2000096
                 _0x2000098:
0008b7 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0008b8 940e 0e5d 	CALL SUBOPT_0x3A
0008ba 940e 10c9 	CALL __DIVD21U
0008bc 2f2e      	MOV  R18,R30
0008bd 302a      	CPI  R18,10
0008be f030      	BRLO _0x20000A0
0008bf ff03      	SBRS R16,3
0008c0 c002      	RJMP _0x20000A1
0008c1 5c29      	SUBI R18,-LOW(55)
0008c2 c001      	RJMP _0x20000A2
                 _0x20000A1:
0008c3 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0008c4 c001      	RJMP _0x20000A3
                 _0x20000A0:
0008c5 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0008c6 fd04      	SBRC R16,4
0008c7 c021      	RJMP _0x20000A5
0008c8 3321      	CPI  R18,49
0008c9 f460      	BRSH _0x20000A7
                +
0008ca 89a8     +LDD R26 , Y + 16
0008cb 89b9     +LDD R27 , Y + 16 + 1
0008cc 898a     +LDD R24 , Y + 16 + 2
0008cd 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0008ce 30a1     +CPI R26 , LOW ( 0x1 )
0008cf e0e0     +LDI R30 , HIGH ( 0x1 )
0008d0 07be     +CPC R27 , R30
0008d1 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0008d2 078e     +CPC R24 , R30
0008d3 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0008d4 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0008d5 f409      	BRNE _0x20000A6
                 _0x20000A7:
0008d6 c00b      	RJMP _0x20000A9
                 _0x20000A6:
0008d7 1743      	CP   R20,R19
0008d8 f440      	BRSH _0x2000111
0008d9 1753      	CP   R21,R19
0008da f010      	BRLO _0x20000AC
0008db ff00      	SBRS R16,0
0008dc c001      	RJMP _0x20000AD
                 _0x20000AC:
0008dd c010      	RJMP _0x20000AB
                 _0x20000AD:
0008de e220      	LDI  R18,LOW(32)
0008df ff07      	SBRS R16,7
0008e0 c008      	RJMP _0x20000AE
                 _0x2000111:
0008e1 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
0008e2 6100      	ORI  R16,LOW(16)
0008e3 ff02      	SBRS R16,2
0008e4 c004      	RJMP _0x20000AF
0008e5 940e 0e49 	CALL SUBOPT_0x39
0008e7 f009      	BREQ _0x20000B0
0008e8 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
0008e9 940e 0e05 	CALL SUBOPT_0x2E
0008eb 3050      	CPI  R21,0
0008ec f009      	BREQ _0x20000B1
0008ed 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
0008ee 5031      	SUBI R19,LOW(1)
0008ef 940e 0e5d 	CALL SUBOPT_0x3A
0008f1 940e 10fa 	CALL __MODD21U
0008f3 940e 0e2b 	CALL SUBOPT_0x33
0008f5 89ec      	LDD  R30,Y+20
                +
0008f6 89a8     +LDD R26 , Y + 16
0008f7 89b9     +LDD R27 , Y + 16 + 1
0008f8 898a     +LDD R24 , Y + 16 + 2
0008f9 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0008fa 27ff      	CLR  R31
0008fb 2766      	CLR  R22
0008fc 2777      	CLR  R23
0008fd 940e 10c9 	CALL __DIVD21U
0008ff 940e 0e44 	CALL SUBOPT_0x38
                +
000901 89e8     +LDD R30 , Y + 16
000902 89f9     +LDD R31 , Y + 16 + 1
000903 896a     +LDD R22 , Y + 16 + 2
000904 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000905 940e 1141 	CALL __CPD10
000907 f009      	BREQ _0x200009F
000908 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000909 ff00      	SBRS R16,0
00090a c008      	RJMP _0x20000B2
                 _0x20000B3:
00090b 3050      	CPI  R21,0
00090c f031      	BREQ _0x20000B5
00090d 5051      	SUBI R21,LOW(1)
00090e e2e0      	LDI  R30,LOW(32)
00090f 93ea      	ST   -Y,R30
000910 940e 0e1c 	CALL SUBOPT_0x31
000912 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000913 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000914 ce06      	RJMP _0x2000030
                 _0x2000032:
000915 81ae      	LDD  R26,Y+6
000916 81bf      	LDD  R27,Y+6+1
000917 940e 110a 	CALL __GETW1P
000919 940e 114c 	CALL __LOADLOCR6
00091b 96ef      	ADIW R28,63
00091c 966f      	ADIW R28,31
00091d 9508      	RET
                 _sprintf:
00091e 92ff      	PUSH R15
00091f 2ef8      	MOV  R15,R24
000920 9726      	SBIW R28,6
000921 940e 1147 	CALL __SAVELOCR4
000923 940e 0e66 	CALL SUBOPT_0x3B
000925 9730      	SBIW R30,0
000926 f419      	BRNE _0x20000B7
000927 efef      	LDI  R30,LOW(65535)
000928 efff      	LDI  R31,HIGH(65535)
000929 c023      	RJMP _0x20A0008
                 _0x20000B7:
00092a 01de      	MOVW R26,R28
00092b 9616      	ADIW R26,6
00092c 940e 1089 	CALL __ADDW2R15
00092e 018d      	MOVW R16,R26
00092f 940e 0e66 	CALL SUBOPT_0x3B
000931 83ee      	STD  Y+6,R30
000932 83ff      	STD  Y+6+1,R31
000933 e0e0      	LDI  R30,LOW(0)
000934 87e8      	STD  Y+8,R30
000935 87e9      	STD  Y+8+1,R30
000936 01de      	MOVW R26,R28
000937 961a      	ADIW R26,10
000938 940e 0e6d 	CALL SUBOPT_0x3C
00093a 93fa      	ST   -Y,R31
00093b 93ea      	ST   -Y,R30
00093c 931a      	ST   -Y,R17
00093d 930a      	ST   -Y,R16
00093e efe9      	LDI  R30,LOW(_put_buff_G100)
00093f e0f5      	LDI  R31,HIGH(_put_buff_G100)
000940 93fa      	ST   -Y,R31
000941 93ea      	ST   -Y,R30
000942 01fe      	MOVW R30,R28
000943 963a      	ADIW R30,10
000944 93fa      	ST   -Y,R31
000945 93ea      	ST   -Y,R30
000946 ddbb      	RCALL __print_G100
000947 019f      	MOVW R18,R30
000948 81ae      	LDD  R26,Y+6
000949 81bf      	LDD  R27,Y+6+1
00094a e0e0      	LDI  R30,LOW(0)
00094b 93ec      	ST   X,R30
00094c 01f9      	MOVW R30,R18
                 _0x20A0008:
00094d 940e 114e 	CALL __LOADLOCR4
00094f 962a      	ADIW R28,10
000950 90ff      	POP  R15
000951 9508      	RET
                 _get_buff_G100:
000952 931a      	ST   -Y,R17
000953 81a9      	LDD  R26,Y+1
000954 81ba      	LDD  R27,Y+1+1
000955 e0e0      	LDI  R30,LOW(0)
000956 93ec      	ST   X,R30
000957 81ab      	LDD  R26,Y+3
000958 81bc      	LDD  R27,Y+3+1
000959 91ec      	LD   R30,X
00095a 2f1e      	MOV  R17,R30
00095b 30e0      	CPI  R30,0
00095c f019      	BREQ _0x20000BF
00095d e0e0      	LDI  R30,LOW(0)
00095e 93ec      	ST   X,R30
00095f c016      	RJMP _0x20000C0
                 _0x20000BF:
000960 81a9      	LDD  R26,Y+1
000961 81ba      	LDD  R27,Y+1+1
000962 9611      	ADIW R26,1
000963 940e 110a 	CALL __GETW1P
000965 9730      	SBIW R30,0
000966 f071      	BREQ _0x20000C1
000967 81e9      	LDD  R30,Y+1
000968 81fa      	LDD  R31,Y+1+1
000969 81a1      	LDD  R26,Z+1
00096a 81b2      	LDD  R27,Z+2
00096b 91ec      	LD   R30,X
00096c 2f1e      	MOV  R17,R30
00096d 30e0      	CPI  R30,0
00096e f029      	BREQ _0x20000C2
00096f 81a9      	LDD  R26,Y+1
000970 81ba      	LDD  R27,Y+1+1
000971 9611      	ADIW R26,1
000972 940e 0da7 	CALL SUBOPT_0x20
                 _0x20000C2:
000974 c001      	RJMP _0x20000C3
                 _0x20000C1:
000975 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000976 2fe1      	MOV  R30,R17
000977 8118      	LDD  R17,Y+0
                 _0x20A0007:
000978 9625      	ADIW R28,5
000979 9508      	RET
                 __scanf_G100:
00097a 9725      	SBIW R28,5
00097b 940e 1145 	CALL __SAVELOCR6
00097d e0e0      	LDI  R30,LOW(0)
00097e e0f0      	LDI  R31,HIGH(0)
00097f 87e8      	STD  Y+8,R30
000980 87f9      	STD  Y+8+1,R31
000981 2f4e      	MOV  R20,R30
                 _0x20000C4:
000982 89e9      	LDD  R30,Y+17
000983 89fa      	LDD  R31,Y+17+1
000984 9631      	ADIW R30,1
000985 8be9      	STD  Y+17,R30
000986 8bfa      	STD  Y+17+1,R31
000987 9731      	SBIW R30,1
000988 91e4      	LPM  R30,Z
000989 2f3e      	MOV  R19,R30
00098a 30e0      	CPI  R30,0
00098b f411      	BRNE PC+3
00098c 940c 0aa7 	JMP _0x20000C6
00098e 940e 0e72 	CALL SUBOPT_0x3D
000990 f0c1      	BREQ _0x20000C7
                 _0x20000C8:
000991 b7ed      	IN   R30,SPL
000992 b7fe      	IN   R31,SPH
000993 93fa      	ST   -Y,R31
000994 93ea      	ST   -Y,R30
000995 934f      	PUSH R20
000996 940e 0e77 	CALL SUBOPT_0x3E
000998 914f      	POP  R20
000999 2f3e      	MOV  R19,R30
00099a 30e0      	CPI  R30,0
00099b f019      	BREQ _0x20000CB
00099c 940e 0e72 	CALL SUBOPT_0x3D
00099e f409      	BRNE _0x20000CC
                 _0x20000CB:
00099f c007      	RJMP _0x20000CA
                 _0x20000CC:
0009a0 940e 0e7f 	CALL SUBOPT_0x3F
0009a2 f41c      	BRGE _0x20000CD
0009a3 efef      	LDI  R30,LOW(65535)
0009a4 efff      	LDI  R31,HIGH(65535)
0009a5 c103      	RJMP _0x20A0005
                 _0x20000CD:
0009a6 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0009a7 2f43      	MOV  R20,R19
0009a8 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0009a9 3235      	CPI  R19,37
0009aa f011      	BREQ PC+3
0009ab 940c 0a8e 	JMP _0x20000CF
0009ad e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0009ae 89e9      	LDD  R30,Y+17
0009af 89fa      	LDD  R31,Y+17+1
0009b0 9135      	LPM  R19,Z+
0009b1 8be9      	STD  Y+17,R30
0009b2 8bfa      	STD  Y+17+1,R31
0009b3 3330      	CPI  R19,48
0009b4 f010      	BRLO _0x20000D4
0009b5 333a      	CPI  R19,58
0009b6 f008      	BRLO _0x20000D3
                 _0x20000D4:
0009b7 c007      	RJMP _0x20000D2
                 _0x20000D3:
0009b8 e0aa      	LDI  R26,LOW(10)
0009b9 9f5a      	MUL  R21,R26
0009ba 2d50      	MOV  R21,R0
0009bb 2fe3      	MOV  R30,R19
0009bc 53e0      	SUBI R30,LOW(48)
0009bd 0f5e      	ADD  R21,R30
0009be cfef      	RJMP _0x20000D0
                 _0x20000D2:
0009bf 3030      	CPI  R19,0
0009c0 f409      	BRNE _0x20000D6
0009c1 c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0009c2 b7ed      	IN   R30,SPL
0009c3 b7fe      	IN   R31,SPH
0009c4 93fa      	ST   -Y,R31
0009c5 93ea      	ST   -Y,R30
0009c6 934f      	PUSH R20
0009c7 940e 0e77 	CALL SUBOPT_0x3E
0009c9 914f      	POP  R20
0009ca 2f2e      	MOV  R18,R30
0009cb 93ea      	ST   -Y,R30
0009cc 940e 0bbd 	CALL _isspace
0009ce 30e0      	CPI  R30,0
0009cf f039      	BREQ _0x20000D9
0009d0 940e 0e7f 	CALL SUBOPT_0x3F
0009d2 f41c      	BRGE _0x20000DA
0009d3 efef      	LDI  R30,LOW(65535)
0009d4 efff      	LDI  R31,HIGH(65535)
0009d5 c0d3      	RJMP _0x20A0005
                 _0x20000DA:
0009d6 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
0009d7 3020      	CPI  R18,0
0009d8 f409      	BRNE _0x20000DB
0009d9 c0c4      	RJMP _0x20000DC
                 _0x20000DB:
0009da 2f42      	MOV  R20,R18
0009db 3050      	CPI  R21,0
0009dc f409      	BRNE _0x20000DD
0009dd ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
0009de 2fe3      	MOV  R30,R19
0009df 36e3      	CPI  R30,LOW(0x63)
0009e0 f499      	BRNE _0x20000E1
0009e1 940e 0e84 	CALL SUBOPT_0x40
0009e3 b7ed      	IN   R30,SPL
0009e4 b7fe      	IN   R31,SPH
0009e5 93fa      	ST   -Y,R31
0009e6 93ea      	ST   -Y,R30
0009e7 934f      	PUSH R20
0009e8 940e 0e77 	CALL SUBOPT_0x3E
0009ea 914f      	POP  R20
0009eb 01d8      	MOVW R26,R16
0009ec 93ec      	ST   X,R30
0009ed 940e 0e7f 	CALL SUBOPT_0x3F
0009ef f41c      	BRGE _0x20000E2
0009f0 efef      	LDI  R30,LOW(65535)
0009f1 efff      	LDI  R31,HIGH(65535)
0009f2 c0b6      	RJMP _0x20A0005
                 _0x20000E2:
0009f3 c097      	RJMP _0x20000E0
                 _0x20000E1:
0009f4 37e3      	CPI  R30,LOW(0x73)
0009f5 f541      	BRNE _0x20000EB
0009f6 940e 0e84 	CALL SUBOPT_0x40
                 _0x20000E4:
0009f8 2fe5      	MOV  R30,R21
0009f9 5051      	SUBI R21,1
0009fa 30e0      	CPI  R30,0
0009fb f0f1      	BREQ _0x20000E6
0009fc b7ed      	IN   R30,SPL
0009fd b7fe      	IN   R31,SPH
0009fe 93fa      	ST   -Y,R31
0009ff 93ea      	ST   -Y,R30
000a00 934f      	PUSH R20
000a01 940e 0e77 	CALL SUBOPT_0x3E
000a03 914f      	POP  R20
000a04 2f3e      	MOV  R19,R30
000a05 30e0      	CPI  R30,0
000a06 f019      	BREQ _0x20000E8
000a07 940e 0e72 	CALL SUBOPT_0x3D
000a09 f039      	BREQ _0x20000E7
                 _0x20000E8:
000a0a 940e 0e7f 	CALL SUBOPT_0x3F
000a0c f41c      	BRGE _0x20000EA
000a0d efef      	LDI  R30,LOW(65535)
000a0e efff      	LDI  R31,HIGH(65535)
000a0f c099      	RJMP _0x20A0005
                 _0x20000EA:
000a10 c009      	RJMP _0x20000E6
                 _0x20000E7:
000a11 931f      	PUSH R17
000a12 930f      	PUSH R16
                +
000a13 5f0f     +SUBI R16 , LOW ( - 1 )
000a14 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a15 2fe3      	MOV  R30,R19
000a16 91af      	POP  R26
000a17 91bf      	POP  R27
000a18 93ec      	ST   X,R30
000a19 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000a1a 01d8      	MOVW R26,R16
000a1b e0e0      	LDI  R30,LOW(0)
000a1c 93ec      	ST   X,R30
000a1d c06d      	RJMP _0x20000E0
                 _0x20000EB:
000a1e e0e1      	LDI  R30,LOW(1)
000a1f 87ea      	STD  Y+10,R30
000a20 2fe3      	MOV  R30,R19
000a21 36e4      	CPI  R30,LOW(0x64)
000a22 f011      	BREQ _0x20000F0
000a23 36e9      	CPI  R30,LOW(0x69)
000a24 f419      	BRNE _0x20000F1
                 _0x20000F0:
000a25 e0e0      	LDI  R30,LOW(0)
000a26 87ea      	STD  Y+10,R30
000a27 c002      	RJMP _0x20000F2
                 _0x20000F1:
000a28 37e5      	CPI  R30,LOW(0x75)
000a29 f411      	BRNE _0x20000F3
                 _0x20000F2:
000a2a e02a      	LDI  R18,LOW(10)
000a2b c008      	RJMP _0x20000EE
                 _0x20000F3:
000a2c 37e8      	CPI  R30,LOW(0x78)
000a2d f411      	BRNE _0x20000F4
000a2e e120      	LDI  R18,LOW(16)
000a2f c004      	RJMP _0x20000EE
                 _0x20000F4:
000a30 32e5      	CPI  R30,LOW(0x25)
000a31 f409      	BRNE _0x20000F7
000a32 c05b      	RJMP _0x20000F6
                 _0x20000F7:
000a33 c073      	RJMP _0x20A0006
                 _0x20000EE:
000a34 e0e0      	LDI  R30,LOW(0)
000a35 83ee      	STD  Y+6,R30
000a36 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000a37 2fe5      	MOV  R30,R21
000a38 5051      	SUBI R21,1
000a39 30e0      	CPI  R30,0
000a3a f411      	BRNE PC+3
000a3b 940c 0a7e 	JMP _0x20000FA
000a3d b7ed      	IN   R30,SPL
000a3e b7fe      	IN   R31,SPH
000a3f 93fa      	ST   -Y,R31
000a40 93ea      	ST   -Y,R30
000a41 934f      	PUSH R20
000a42 940e 0e77 	CALL SUBOPT_0x3E
000a44 914f      	POP  R20
000a45 2f3e      	MOV  R19,R30
000a46 32e1      	CPI  R30,LOW(0x21)
000a47 f438      	BRSH _0x20000FB
000a48 940e 0e7f 	CALL SUBOPT_0x3F
000a4a f41c      	BRGE _0x20000FC
000a4b efef      	LDI  R30,LOW(65535)
000a4c efff      	LDI  R31,HIGH(65535)
000a4d c05b      	RJMP _0x20A0005
                 _0x20000FC:
000a4e c017      	RJMP _0x20000FD
                 _0x20000FB:
000a4f 85ea      	LDD  R30,Y+10
000a50 30e0      	CPI  R30,0
000a51 f439      	BRNE _0x20000FE
000a52 323d      	CPI  R19,45
000a53 f419      	BRNE _0x20000FF
000a54 efef      	LDI  R30,LOW(255)
000a55 87ea      	STD  Y+10,R30
000a56 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000a57 e0e1      	LDI  R30,LOW(1)
000a58 87ea      	STD  Y+10,R30
                 _0x20000FE:
000a59 3120      	CPI  R18,16
000a5a f431      	BRNE _0x2000101
000a5b 933a      	ST   -Y,R19
000a5c 940e 0bc7 	CALL _isxdigit
000a5e 30e0      	CPI  R30,0
000a5f f031      	BREQ _0x20000FD
000a60 c007      	RJMP _0x2000103
                 _0x2000101:
000a61 933a      	ST   -Y,R19
000a62 940e 0bb5 	CALL _isdigit
000a64 30e0      	CPI  R30,0
000a65 f411      	BRNE _0x2000104
                 _0x20000FD:
000a66 2f43      	MOV  R20,R19
000a67 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000a68 3631      	CPI  R19,97
000a69 f010      	BRLO _0x2000105
000a6a 5537      	SUBI R19,LOW(87)
000a6b c005      	RJMP _0x2000106
                 _0x2000105:
000a6c 3431      	CPI  R19,65
000a6d f010      	BRLO _0x2000107
000a6e 5337      	SUBI R19,LOW(55)
000a6f c001      	RJMP _0x2000108
                 _0x2000107:
000a70 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000a71 2fe2      	MOV  R30,R18
000a72 81ae      	LDD  R26,Y+6
000a73 81bf      	LDD  R27,Y+6+1
000a74 e0f0      	LDI  R31,0
000a75 940e 10ae 	CALL __MULW12U
000a77 01df      	MOVW R26,R30
000a78 2fe3      	MOV  R30,R19
000a79 940e 0d20 	CALL SUBOPT_0x10
000a7b 83ee      	STD  Y+6,R30
000a7c 83ff      	STD  Y+6+1,R31
000a7d cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000a7e 940e 0e84 	CALL SUBOPT_0x40
000a80 85ea      	LDD  R30,Y+10
000a81 81ae      	LDD  R26,Y+6
000a82 81bf      	LDD  R27,Y+6+1
000a83 e0f0      	LDI  R31,0
000a84 fde7      	SBRC R30,7
000a85 efff      	SER  R31
000a86 940e 10ae 	CALL __MULW12U
000a88 01d8      	MOVW R26,R16
000a89 93ed      	ST   X+,R30
000a8a 93fc      	ST   X,R31
                 _0x20000E0:
000a8b 940e 0dff 	CALL SUBOPT_0x2D
000a8d c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000a8e b7ed      	IN   R30,SPL
000a8f b7fe      	IN   R31,SPH
000a90 93fa      	ST   -Y,R31
000a91 93ea      	ST   -Y,R30
000a92 934f      	PUSH R20
000a93 940e 0e77 	CALL SUBOPT_0x3E
000a95 914f      	POP  R20
000a96 17e3      	CP   R30,R19
000a97 f071      	BREQ _0x200010A
000a98 940e 0e7f 	CALL SUBOPT_0x3F
000a9a f41c      	BRGE _0x200010B
000a9b efef      	LDI  R30,LOW(65535)
000a9c efff      	LDI  R31,HIGH(65535)
000a9d c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000a9e 85e8      	LDD  R30,Y+8
000a9f 85f9      	LDD  R31,Y+8+1
000aa0 9730      	SBIW R30,0
000aa1 f419      	BRNE _0x200010C
000aa2 efef      	LDI  R30,LOW(65535)
000aa3 efff      	LDI  R31,HIGH(65535)
000aa4 c004      	RJMP _0x20A0005
                 _0x200010C:
000aa5 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000aa6 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000aa7 85e8      	LDD  R30,Y+8
000aa8 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000aa9 940e 114c 	CALL __LOADLOCR6
000aab 9663      	ADIW R28,19
000aac 9508      	RET
                 _sscanf:
000aad 92ff      	PUSH R15
000aae 2ef8      	MOV  R15,R24
000aaf 9723      	SBIW R28,3
000ab0 931a      	ST   -Y,R17
000ab1 930a      	ST   -Y,R16
000ab2 01de      	MOVW R26,R28
000ab3 9617      	ADIW R26,7
000ab4 940e 0e6d 	CALL SUBOPT_0x3C
000ab6 9730      	SBIW R30,0
000ab7 f419      	BRNE _0x200010D
000ab8 efef      	LDI  R30,LOW(65535)
000ab9 efff      	LDI  R31,HIGH(65535)
000aba c01c      	RJMP _0x20A0004
                 _0x200010D:
000abb 01de      	MOVW R26,R28
000abc 9611      	ADIW R26,1
000abd 940e 1089 	CALL __ADDW2R15
000abf 018d      	MOVW R16,R26
000ac0 01de      	MOVW R26,R28
000ac1 9617      	ADIW R26,7
000ac2 940e 0e6d 	CALL SUBOPT_0x3C
000ac4 83eb      	STD  Y+3,R30
000ac5 83fc      	STD  Y+3+1,R31
000ac6 01de      	MOVW R26,R28
000ac7 9615      	ADIW R26,5
000ac8 940e 0e6d 	CALL SUBOPT_0x3C
000aca 93fa      	ST   -Y,R31
000acb 93ea      	ST   -Y,R30
000acc 931a      	ST   -Y,R17
000acd 930a      	ST   -Y,R16
000ace e5e2      	LDI  R30,LOW(_get_buff_G100)
000acf e0f9      	LDI  R31,HIGH(_get_buff_G100)
000ad0 93fa      	ST   -Y,R31
000ad1 93ea      	ST   -Y,R30
000ad2 01fe      	MOVW R30,R28
000ad3 9638      	ADIW R30,8
000ad4 93fa      	ST   -Y,R31
000ad5 93ea      	ST   -Y,R30
000ad6 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000ad7 8119      	LDD  R17,Y+1
000ad8 8108      	LDD  R16,Y+0
000ad9 9625      	ADIW R28,5
000ada 90ff      	POP  R15
000adb 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000adc 817b         ldd  r23,y+3
000add 816a         ldd  r22,y+2
000ade 81f9         ldd  r31,y+1
000adf 81e8         ld   r30,y
000ae0 fb77         bst  r23,7
000ae1 0f77         lsl  r23
000ae2 fd67         sbrc r22,7
000ae3 6071         sbr  r23,1
000ae4 2f97         mov  r25,r23
000ae5 579e         subi r25,0x7e
000ae6 f081         breq __ftrunc0
000ae7 f078         brcs __ftrunc0
000ae8 3198         cpi  r25,24
000ae9 f490         brsh __ftrunc1
000aea 27aa         clr  r26
000aeb 27bb         clr  r27
000aec 2788         clr  r24
                 __ftrunc2:
000aed 9408         sec
000aee 9587         ror  r24
000aef 95b7         ror  r27
000af0 95a7         ror  r26
000af1 959a         dec  r25
000af2 f7d1         brne __ftrunc2
000af3 23ea         and  r30,r26
000af4 23fb         and  r31,r27
000af5 2368         and  r22,r24
000af6 c005         rjmp __ftrunc1
                 __ftrunc0:
000af7 94e8         clt
000af8 2777         clr  r23
000af9 27ee         clr  r30
000afa 27ff         clr  r31
000afb 2766         clr  r22
                 __ftrunc1:
000afc 776f         cbr  r22,0x80
000afd 9576         lsr  r23
000afe f408         brcc __ftrunc3
000aff 6860         sbr  r22,0x80
                 __ftrunc3:
000b00 f977         bld  r23,7
000b01 91a9         ld   r26,y+
000b02 91b9         ld   r27,y+
000b03 9189         ld   r24,y+
000b04 9199         ld   r25,y+
000b05 17ea         cp   r30,r26
000b06 07fb         cpc  r31,r27
000b07 0768         cpc  r22,r24
000b08 0779         cpc  r23,r25
000b09 fb97         bst  r25,7
000b0a 9508         ret
                 _floor:
000b0b 940e 0d06 	CALL SUBOPT_0xC
000b0d 940e 112a 	CALL __PUTPARD1
000b0f 940e 0adc 	CALL _ftrunc
000b11 940e 1123 	CALL __PUTD1S0
000b13 f419          brne __floor1
                 __floor0:
000b14 940e 0d06 	CALL SUBOPT_0xC
000b16 c09c      	RJMP _0x20A0003
                 __floor1:
000b17 f7e6          brtc __floor0
000b18 940e 0d06 	CALL SUBOPT_0xC
                +
000b1a e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b1b e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b1c e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b1d e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b1e 940e 0f7f 	CALL __SUBF12
000b20 c092      	RJMP _0x20A0003
                 _sin:
000b21 9724      	SBIW R28,4
000b22 931a      	ST   -Y,R17
000b23 e010      	LDI  R17,0
000b24 940e 0e8f 	CALL SUBOPT_0x41
                +
000b26 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000b27 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000b28 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000b29 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000b2a 940e 0fd6 	CALL __MULF12
000b2c 940e 0e94 	CALL SUBOPT_0x42
000b2e 940e 0e99 	CALL SUBOPT_0x43
000b30 940e 0def 	CALL SUBOPT_0x2A
000b32 940e 0e8f 	CALL SUBOPT_0x41
000b34 940e 0ced 	CALL SUBOPT_0x9
000b36 940e 0e94 	CALL SUBOPT_0x42
000b38 940e 0e9e 	CALL SUBOPT_0x44
000b3a 940e 1069 	CALL __CMPF12
000b3c f009      	BREQ PC+2
000b3d f410      	BRCC PC+3
000b3e 940c 0b4b 	JMP  _0x2020017
000b40 940e 0e99 	CALL SUBOPT_0x43
                +
000b42 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b43 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b44 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b45 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b46 940e 0f7f 	CALL __SUBF12
000b48 940e 0e94 	CALL SUBOPT_0x42
000b4a e011      	LDI  R17,LOW(1)
                 _0x2020017:
000b4b 940e 0e8f 	CALL SUBOPT_0x41
                +
000b4d e0e0     +LDI R30 , LOW ( 0x3E800000 )
000b4e e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000b4f e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000b50 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000b51 940e 1069 	CALL __CMPF12
000b53 f009      	BREQ PC+2
000b54 f410      	BRCC PC+3
000b55 940c 0b5d 	JMP  _0x2020018
000b57 940e 0e9e 	CALL SUBOPT_0x44
000b59 940e 0f7f 	CALL __SUBF12
000b5b 940e 0e94 	CALL SUBOPT_0x42
                 _0x2020018:
000b5d 3010      	CPI  R17,0
000b5e f031      	BREQ _0x2020019
000b5f 940e 0e99 	CALL SUBOPT_0x43
000b61 940e 0ee0 	CALL __ANEGF1
000b63 940e 0e94 	CALL SUBOPT_0x42
                 _0x2020019:
000b65 940e 0e99 	CALL SUBOPT_0x43
000b67 940e 0e8f 	CALL SUBOPT_0x41
000b69 940e 0fd6 	CALL __MULF12
                +
000b6b 83e9     +STD Y + 1 , R30
000b6c 83fa     +STD Y + 1 + 1 , R31
000b6d 836b     +STD Y + 1 + 2 , R22
000b6e 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000b6f eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000b70 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000b71 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000b72 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000b73 940e 0fd6 	CALL __MULF12
000b75 01df      	MOVW R26,R30
000b76 01cb      	MOVW R24,R22
                +
000b77 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000b78 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000b79 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000b7a e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000b7b 940e 0ced 	CALL SUBOPT_0x9
000b7d 940e 0ea4 	CALL SUBOPT_0x45
                +
000b7f e4ac     +LDI R26 , LOW ( 0x4104534C )
000b80 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000b81 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000b82 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000b83 940e 0f86 	CALL __ADDF12
000b85 940e 0e8f 	CALL SUBOPT_0x41
000b87 940e 0fd6 	CALL __MULF12
000b89 937f      	PUSH R23
000b8a 936f      	PUSH R22
000b8b 93ff      	PUSH R31
000b8c 93ef      	PUSH R30
                +
000b8d 81e9     +LDD R30 , Y + 1
000b8e 81fa     +LDD R31 , Y + 1 + 1
000b8f 816b     +LDD R22 , Y + 1 + 2
000b90 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000b91 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000b92 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000b93 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000b94 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000b95 940e 0f86 	CALL __ADDF12
000b97 940e 0ea4 	CALL SUBOPT_0x45
                +
000b99 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000b9a e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000b9b ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000b9c e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000b9d 940e 0f86 	CALL __ADDF12
000b9f 91af      	POP  R26
000ba0 91bf      	POP  R27
000ba1 918f      	POP  R24
000ba2 919f      	POP  R25
000ba3 940e 1024 	CALL __DIVF21
000ba5 8118      	LDD  R17,Y+0
000ba6 9629      	ADIW R28,9
000ba7 9508      	RET
                 _cos:
000ba8 940e 111e 	CALL __GETD2S0
                +
000baa edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000bab e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000bac ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000bad e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000bae 940e 0f7f 	CALL __SUBF12
000bb0 940e 112a 	CALL __PUTPARD1
000bb2 df6e      	RCALL _sin
                 _0x20A0003:
000bb3 9624      	ADIW R28,4
000bb4 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000bb5 e0e1          ldi  r30,1
000bb6 91f9          ld   r31,y+
000bb7 33f0          cpi  r31,'0'
000bb8 f010          brlo isdigit0
000bb9 33fa          cpi  r31,'9'+1
000bba f008          brlo isdigit1
                 isdigit0:
000bbb 27ee          clr  r30
                 isdigit1:
000bbc 9508          ret
                 _isspace:
000bbd e0e1          ldi  r30,1
000bbe 91f9          ld   r31,y+
000bbf 32f0          cpi  r31,' '
000bc0 f029          breq isspace1
000bc1 30f9          cpi  r31,9
000bc2 f010          brlo isspace0
000bc3 30fe          cpi  r31,13+1
000bc4 f008          brlo isspace1
                 isspace0:
000bc5 27ee          clr  r30
                 isspace1:
000bc6 9508          ret
                 _isxdigit:
000bc7 e0e1          ldi  r30,1
000bc8 91f9          ld   r31,y+
000bc9 53f0          subi r31,0x30
000bca f040          brcs isxdigit0
000bcb 30fa          cpi  r31,10
000bcc f038          brcs isxdigit1
000bcd 75ff          andi r31,0x5f
000bce 50f7          subi r31,7
000bcf 30fa          cpi  r31,10
000bd0 f010          brcs isxdigit0
000bd1 31f0          cpi  r31,16
000bd2 f008          brcs isxdigit1
                 isxdigit0:
000bd3 27ee          clr  r30
                 isxdigit1:
000bd4 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000bd5 91e9          ld   r30,y+
000bd6 91f9          ld   r31,y+
000bd7 91a9          ld   r26,y+
000bd8 91b9          ld   r27,y+
000bd9 01cd          movw r24,r26
                 strcpyf0:
000bda 9005      	lpm  r0,z+
000bdb 920d          st   x+,r0
000bdc 2000          tst  r0
000bdd f7e1          brne strcpyf0
000bde 01fc          movw r30,r24
000bdf 9508          ret
                 _strlen:
000be0 91a9          ld   r26,y+
000be1 91b9          ld   r27,y+
000be2 27ee          clr  r30
000be3 27ff          clr  r31
                 strlen0:
000be4 916d          ld   r22,x+
000be5 2366          tst  r22
000be6 f011          breq strlen1
000be7 9631          adiw r30,1
000be8 cffb          rjmp strlen0
                 strlen1:
000be9 9508          ret
                 _strlenf:
000bea 27aa          clr  r26
000beb 27bb          clr  r27
000bec 91e9          ld   r30,y+
000bed 91f9          ld   r31,y+
                 strlenf0:
000bee 9005      	lpm  r0,z+
000bef 2000          tst  r0
000bf0 f011          breq strlenf1
000bf1 9611          adiw r26,1
000bf2 cffb          rjmp strlenf0
                 strlenf1:
000bf3 01fd          movw r30,r26
000bf4 9508          ret
                 
                 	.CSEG
                 _ftoa:
000bf5 9724      	SBIW R28,4
000bf6 d0d4      	RCALL SUBOPT_0x4
000bf7 e0e0      	LDI  R30,LOW(0)
000bf8 83ea      	STD  Y+2,R30
000bf9 e3ef      	LDI  R30,LOW(63)
000bfa 83eb      	STD  Y+3,R30
000bfb 931a      	ST   -Y,R17
000bfc 930a      	ST   -Y,R16
000bfd 85eb      	LDD  R30,Y+11
000bfe 85fc      	LDD  R31,Y+11+1
000bff 3fef      	CPI  R30,LOW(0xFFFF)
000c00 efaf      	LDI  R26,HIGH(0xFFFF)
000c01 07fa      	CPC  R31,R26
000c02 f429      	BRNE _0x208000D
000c03 d2a7      	RCALL SUBOPT_0x46
                +
000c04 efe4     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000c05 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000c06 d1a6      	RCALL SUBOPT_0x21
000c07 c085      	RJMP _0x20A0002
                 _0x208000D:
000c08 3fef      	CPI  R30,LOW(0x7FFF)
000c09 e7af      	LDI  R26,HIGH(0x7FFF)
000c0a 07fa      	CPC  R31,R26
000c0b f429      	BRNE _0x208000C
000c0c d29e      	RCALL SUBOPT_0x46
                +
000c0d efe5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000c0e e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000c0f d19d      	RCALL SUBOPT_0x21
000c10 c07c      	RJMP _0x20A0002
                 _0x208000C:
000c11 85ac      	LDD  R26,Y+12
000c12 23aa      	TST  R26
000c13 f452      	BRPL _0x208000F
                +
000c14 85e9     +LDD R30 , Y + 9
000c15 85fa     +LDD R31 , Y + 9 + 1
000c16 856b     +LDD R22 , Y + 9 + 2
000c17 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c18 940e 0ee0 	CALL __ANEGF1
000c1a d295      	RCALL SUBOPT_0x47
000c1b d299      	RCALL SUBOPT_0x48
000c1c e2ed      	LDI  R30,LOW(45)
000c1d 93ec      	ST   X,R30
                 _0x208000F:
000c1e 85a8      	LDD  R26,Y+8
000c1f 30a7      	CPI  R26,LOW(0x7)
000c20 f010      	BRLO _0x2080010
000c21 e0e6      	LDI  R30,LOW(6)
000c22 87e8      	STD  Y+8,R30
                 _0x2080010:
000c23 8518      	LDD  R17,Y+8
                 _0x2080011:
000c24 2fe1      	MOV  R30,R17
000c25 5011      	SUBI R17,1
000c26 30e0      	CPI  R30,0
000c27 f021      	BREQ _0x2080013
000c28 d293      	RCALL SUBOPT_0x49
000c29 d1be      	RCALL SUBOPT_0x29
000c2a d296      	RCALL SUBOPT_0x4A
000c2b cff8      	RJMP _0x2080011
                 _0x2080013:
000c2c d299      	RCALL SUBOPT_0x4B
000c2d 940e 0f86 	CALL __ADDF12
000c2f d280      	RCALL SUBOPT_0x47
000c30 e010      	LDI  R17,LOW(0)
                +
000c31 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c32 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c33 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c34 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000c35 d28b      	RCALL SUBOPT_0x4A
                 _0x2080014:
000c36 d28f      	RCALL SUBOPT_0x4B
000c37 940e 1069 	CALL __CMPF12
000c39 f060      	BRLO _0x2080016
000c3a d281      	RCALL SUBOPT_0x49
000c3b d199      	RCALL SUBOPT_0x26
000c3c d284      	RCALL SUBOPT_0x4A
000c3d 5f1f      	SUBI R17,-LOW(1)
000c3e 3217      	CPI  R17,39
000c3f f028      	BRLO _0x2080017
000c40 d26a      	RCALL SUBOPT_0x46
                +
000c41 efe9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000c42 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000c43 d169      	RCALL SUBOPT_0x21
000c44 c048      	RJMP _0x20A0002
                 _0x2080017:
000c45 cff0      	RJMP _0x2080014
                 _0x2080016:
000c46 3010      	CPI  R17,0
000c47 f421      	BRNE _0x2080018
000c48 d26c      	RCALL SUBOPT_0x48
000c49 e3e0      	LDI  R30,LOW(48)
000c4a 93ec      	ST   X,R30
000c4b c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000c4c 2fe1      	MOV  R30,R17
000c4d 5011      	SUBI R17,1
000c4e 30e0      	CPI  R30,0
000c4f f0c9      	BREQ _0x208001C
000c50 d26b      	RCALL SUBOPT_0x49
000c51 d196      	RCALL SUBOPT_0x29
000c52 d18e      	RCALL SUBOPT_0x28
000c53 d19b      	RCALL SUBOPT_0x2A
000c54 d26c      	RCALL SUBOPT_0x4A
000c55 d270      	RCALL SUBOPT_0x4B
000c56 940e 1024 	CALL __DIVF21
000c58 940e 0f13 	CALL __CFD1U
000c5a 2f0e      	MOV  R16,R30
000c5b d259      	RCALL SUBOPT_0x48
000c5c d19d      	RCALL SUBOPT_0x2C
000c5d e0f0      	LDI  R31,0
000c5e d25d      	RCALL SUBOPT_0x49
000c5f 940e 10a4 	CALL __CWD1
000c61 940e 0f4c 	CALL __CDF1
000c63 940e 0fd6 	CALL __MULF12
000c65 d269      	RCALL SUBOPT_0x4C
000c66 d086      	RCALL SUBOPT_0x9
000c67 d248      	RCALL SUBOPT_0x47
000c68 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000c69 85e8      	LDD  R30,Y+8
000c6a 30e0      	CPI  R30,0
000c6b f0e9      	BREQ _0x20A0001
000c6c d248      	RCALL SUBOPT_0x48
000c6d e2ee      	LDI  R30,LOW(46)
000c6e 93ec      	ST   X,R30
                 _0x208001E:
000c6f 85e8      	LDD  R30,Y+8
000c70 50e1      	SUBI R30,LOW(1)
000c71 87e8      	STD  Y+8,R30
000c72 5fef      	SUBI R30,-LOW(1)
000c73 f0a9      	BREQ _0x2080020
000c74 d25a      	RCALL SUBOPT_0x4C
000c75 d15f      	RCALL SUBOPT_0x26
000c76 d239      	RCALL SUBOPT_0x47
                +
000c77 85e9     +LDD R30 , Y + 9
000c78 85fa     +LDD R31 , Y + 9 + 1
000c79 856b     +LDD R22 , Y + 9 + 2
000c7a 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c7b 940e 0f13 	CALL __CFD1U
000c7d 2f0e      	MOV  R16,R30
000c7e d236      	RCALL SUBOPT_0x48
000c7f d17a      	RCALL SUBOPT_0x2C
000c80 e0f0      	LDI  R31,0
000c81 d24d      	RCALL SUBOPT_0x4C
000c82 940e 10a4 	CALL __CWD1
000c84 940e 0f4c 	CALL __CDF1
000c86 d066      	RCALL SUBOPT_0x9
000c87 d228      	RCALL SUBOPT_0x47
000c88 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000c89 81ae      	LDD  R26,Y+6
000c8a 81bf      	LDD  R27,Y+6+1
000c8b e0e0      	LDI  R30,LOW(0)
000c8c 93ec      	ST   X,R30
                 _0x20A0002:
000c8d 8119      	LDD  R17,Y+1
000c8e 8108      	LDD  R16,Y+0
000c8f 962d      	ADIW R28,13
000c90 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000c91 81aa      	LDD  R26,Y+2
000c92 81bb      	LDD  R27,Y+2+1
000c93 27ee      	CLR  R30
000c94 0fa1      	ADD  R26,R17
000c95 1fbe      	ADC  R27,R30
000c96 91ec      	LD   R30,X
000c97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000c98 9728      	SBIW R28,8
000c99 940e 1147 	CALL __SAVELOCR4
                +
000c9b e020     +LDI R18 , LOW ( 0 )
000c9c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000c9d 89e8      	LDD  R30,Y+16
000c9e 83ec      	STD  Y+4,R30
000c9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000ca0 83ed      	STD  Y+5,R30
000ca1 85ee      	LDD  R30,Y+14
000ca2 85ff      	LDD  R31,Y+14+1
000ca3 940e 1099 	CALL __ASRW8
000ca5 83ee      	STD  Y+6,R30
000ca6 85ee      	LDD  R30,Y+14
000ca7 83ef      	STD  Y+7,R30
000ca8 85ec      	LDD  R30,Y+12
000ca9 85fd      	LDD  R31,Y+12+1
000caa 940e 1099 	CALL __ASRW8
000cac 87e8      	STD  Y+8,R30
000cad 85ec      	LDD  R30,Y+12
000cae 87e9      	STD  Y+9,R30
000caf e0e0      	LDI  R30,LOW(0)
000cb0 87ea      	STD  Y+10,R30
000cb1 87eb      	STD  Y+11,R30
000cb2 01fe      	MOVW R30,R28
000cb3 9634      	ADIW R30,4
000cb4 93fa      	ST   -Y,R31
000cb5 93ea      	ST   -Y,R30
000cb6 e0e6      	LDI  R30,LOW(6)
000cb7 e0f0      	LDI  R31,HIGH(6)
000cb8 93fa      	ST   -Y,R31
000cb9 93ea      	ST   -Y,R30
000cba 940e 022c 	CALL _CRC16
000cbc 018f      	MOVW R16,R30
000cbd 01f8      	MOVW R30,R16
000cbe 87ea      	STD  Y+10,R30
                +
000cbf 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000cc0 e020     +LDI R18 , LOW ( 0 )
000cc1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000cc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000cc3 01de      	MOVW R26,R28
000cc4 9614      	ADIW R26,4
000cc5 0fa2      	ADD  R26,R18
000cc6 1fb3      	ADC  R27,R19
000cc7 91ec      	LD   R30,X
000cc8 93ea      	ST   -Y,R30
000cc9 940c 0226 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000ccb e0e0      	LDI  R30,LOW(0)
000ccc 83e8      	ST   Y,R30
000ccd 83e9      	STD  Y+1,R30
000cce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000ccf 85ae      	LDD  R26,Y+14
000cd0 85bf      	LDD  R27,Y+14+1
000cd1 940e 110e 	CALL __GETD1P
000cd3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000cd4 85ac      	LDD  R26,Y+12
000cd5 85bd      	LDD  R27,Y+12+1
000cd6 940e 110e 	CALL __GETD1P
000cd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
000cd9 e3ab     +LDI R26 , LOW ( 0x3E8FDF3B )
000cda edbf     +LDI R27 , HIGH ( 0x3E8FDF3B )
000cdb e88f     +LDI R24 , BYTE3 ( 0x3E8FDF3B )
000cdc e39e     +LDI R25 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD2N 0x3E8FDF3B
000cdd 940e 0fd6 	CALL __MULF12
000cdf 01df      	MOVW R26,R30
000ce0 01cb      	MOVW R24,R22
                +
000ce1 e0e0     +LDI R30 , LOW ( 0x40000000 )
000ce2 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000ce3 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000ce4 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000ce5 940e 1024 	CALL __DIVF21
000ce7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
000ce8 83ec     +STD Y + 4 , R30
000ce9 83fd     +STD Y + 4 + 1 , R31
000cea 836e     +STD Y + 4 + 2 , R22
000ceb 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000cec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000ced 940e 1134 	CALL __SWAPD12
000cef 940e 0f7f 	CALL __SUBF12
000cf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
000cf2 81ec     +LDD R30 , Y + 4
000cf3 81fd     +LDD R31 , Y + 4 + 1
000cf4 816e     +LDD R22 , Y + 4 + 2
000cf5 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000cf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
000cf7 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000cf8 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000cf9 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000cfa e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000cfb 940e 0fd6 	CALL __MULF12
                +
000cfd e0a0     +LDI R26 , LOW ( 0x41A00000 )
000cfe e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000cff ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000d00 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000d01 940e 0fd6 	CALL __MULF12
000d03 940e 0f15 	CALL __CFD1
000d05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000d06 940e 1119 	CALL __GETD1S0
000d08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000d09 e0e0      	LDI  R30,LOW(0)
000d0a e0f0      	LDI  R31,HIGH(0)
000d0b 93ed      	ST   X+,R30
000d0c 93fc      	ST   X,R31
000d0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000d0e 93fa      	ST   -Y,R31
000d0f 93ea      	ST   -Y,R30
000d10 940e 025b 	CALL _RTU_WriteOperate0
000d12 e0e5      	LDI  R30,LOW(5)
000d13 e0f0      	LDI  R31,HIGH(5)
000d14 93fa      	ST   -Y,R31
000d15 93ea      	ST   -Y,R30
000d16 940c 0ed4 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000d18 93ea      	ST   -Y,R30
000d19 e7e8      	LDI  R30,LOW(120)
000d1a e0f0      	LDI  R31,HIGH(120)
000d1b 93fa      	ST   -Y,R31
000d1c 93ea      	ST   -Y,R30
000d1d e0e1      	LDI  R30,LOW(1)
000d1e e0f0      	LDI  R31,HIGH(1)
000d1f cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000d20 e0f0      	LDI  R31,0
000d21 0fea      	ADD  R30,R26
000d22 1ffb      	ADC  R31,R27
000d23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000d24 2da4      	MOV  R26,R4
000d25 e0b0      	LDI  R27,0
000d26 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000d27 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000d28 b1ec      	IN   R30,0xC
000d29 93ec      	ST   X,R30
000d2a 9443      	INC  R4
000d2b e0e0      	LDI  R30,LOW(0)
000d2c bde4      	OUT  0x24,R30
000d2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000d2e 93ea      	ST   -Y,R30
000d2f 93fa      	ST   -Y,R31
000d30 b7ef      	IN   R30,SREG
000d31 93ea      	ST   -Y,R30
000d32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000d33 e0f0      	LDI  R31,0
000d34 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000d35 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000d36 8310      	ST   Z,R17
000d37 9493      	INC  R9
000d38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000d39 93fa      	ST   -Y,R31
000d3a 93ea      	ST   -Y,R30
000d3b 940c 0ed4 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
                +
000d3d 01fe     +MOVW R30 , R28
000d3e 5cef     +SUBI R30 , LOW ( - 561 )
000d3f 4ffd     +SBCI R31 , HIGH ( - 561 )
000d40 9001     +LD R0 , Z +
000d41 81f0     +LD R31 , Z
000d42 2de0     +MOV R30 , R0
                 	__GETW1SX 561
000d43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
000d44 940e 10a4 	CALL __CWD1
000d46 940e 0f4c 	CALL __CDF1
000d48 01df      	MOVW R26,R30
000d49 01cb      	MOVW R24,R22
                +
000d4a e0e0     +LDI R30 , LOW ( 0x447A0000 )
000d4b e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000d4c e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000d4d e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000d4e 940e 1024 	CALL __DIVF21
000d50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000d51 e0e5      	LDI  R30,LOW(5)
000d52 e0f0      	LDI  R31,HIGH(5)
000d53 cfe5      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
000d54 93ea      	ST   -Y,R30
000d55 e0e2      	LDI  R30,LOW(2)
000d56 e0f0      	LDI  R31,HIGH(2)
000d57 93fa      	ST   -Y,R31
000d58 93ea      	ST   -Y,R30
000d59 93fa      	ST   -Y,R31
000d5a 93ea      	ST   -Y,R30
000d5b 940e 026a 	CALL _RTU_ReedOperate0
000d5d cff3      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
                +
000d5e 01fe     +MOVW R30 , R28
000d5f 5de1     +SUBI R30 , LOW ( - 559 )
000d60 4ffd     +SBCI R31 , HIGH ( - 559 )
000d61 9001     +LD R0 , Z +
000d62 81f0     +LD R31 , Z
000d63 2de0     +MOV R30 , R0
                 	__GETW1SX 559
000d64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
000d65 940e 10a4 	CALL __CWD1
000d67 940e 0f4c 	CALL __CDF1
000d69 01df      	MOVW R26,R30
000d6a 01cb      	MOVW R24,R22
                +
000d6b e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000d6c effc     +LDI R31 , HIGH ( 0x453EFC29 )
000d6d e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000d6e e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000d6f 940e 1024 	CALL __DIVF21
000d71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
000d72 01de     +MOVW R26 , R28
000d73 5fa7     +SUBI R26 , LOW ( - 521 )
000d74 4fbd     +SBCI R27 , HIGH ( - 521 )
000d75 900d     +LD R0 , X +
000d76 901d     +LD R1 , X +
000d77 918d     +LD R24 , X +
000d78 919c     +LD R25 , X
000d79 01d0     +MOVW R26 , R0
                 	__GETD2SX 521
000d7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1C:
                +
000d7b 01fe     +MOVW R30 , R28
000d7c 5eeb     +SUBI R30 , LOW ( - 533 )
000d7d 4ffd     +SBCI R31 , HIGH ( - 533 )
000d7e 9001     +LD R0 , Z +
000d7f 9011     +LD R1 , Z +
000d80 9161     +LD R22 , Z +
000d81 8170     +LD R23 , Z
000d82 01f0     +MOVW R30 , R0
                 	__GETD1SX 533
                +
000d83 01de     +MOVW R26 , R28
000d84 5ea3     +SUBI R26 , LOW ( - 541 )
000d85 4fbd     +SBCI R27 , HIGH ( - 541 )
000d86 900d     +LD R0 , X +
000d87 901d     +LD R1 , X +
000d88 918d     +LD R24 , X +
000d89 919c     +LD R25 , X
000d8a 01d0     +MOVW R26 , R0
                 	__GETD2SX 541
000d8b 940e 0fd6 	CALL __MULF12
000d8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
000d8e 01fe     +MOVW R30 , R28
000d8f 5fe7     +SUBI R30 , LOW ( - 521 )
000d90 4ffd     +SBCI R31 , HIGH ( - 521 )
000d91 9001     +LD R0 , Z +
000d92 9011     +LD R1 , Z +
000d93 9161     +LD R22 , Z +
000d94 8170     +LD R23 , Z
000d95 01f0     +MOVW R30 , R0
                 	__GETD1SX 521
000d96 940e 112a 	CALL __PUTPARD1
000d98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
                +
000d99 01de     +MOVW R26 , R28
000d9a 50ab     +SUBI R26 , LOW ( - 501 )
000d9b 4fbe     +SBCI R27 , HIGH ( - 501 )
000d9c 900d     +LD R0 , X +
000d9d 901d     +LD R1 , X +
000d9e 918d     +LD R24 , X +
000d9f 919c     +LD R25 , X
000da0 01d0     +MOVW R26 , R0
                 	__GETD2SX 501
000da1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000da2 940e 10a4 	CALL __CWD1
000da4 940e 112a 	CALL __PUTPARD1
000da6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x20:
000da7 91ed      	LD   R30,X+
000da8 91fd      	LD   R31,X+
000da9 9631      	ADIW R30,1
000daa 93fe      	ST   -X,R31
000dab 93ee      	ST   -X,R30
000dac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
000dad 93fa      	ST   -Y,R31
000dae 93ea      	ST   -Y,R30
000daf 940c 0bd5 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x22:
                +
000db1 81ac     +LDD R26 , Y + 4
000db2 81bd     +LDD R27 , Y + 4 + 1
000db3 818e     +LDD R24 , Y + 4 + 2
000db4 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000db5 e0e0     +LDI R30 , LOW ( 0x41200000 )
000db6 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000db7 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000db8 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000db9 940e 0fd6 	CALL __MULF12
000dbb cf2c      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x23:
000dbc df35      	RCALL SUBOPT_0xA
                +
000dbd 85ac     +LDD R26 , Y + 12
000dbe 85bd     +LDD R27 , Y + 12 + 1
000dbf 858e     +LDD R24 , Y + 12 + 2
000dc0 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000dc1 940e 1069 	CALL __CMPF12
000dc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
                +
000dc4 85ac     +LDD R26 , Y + 12
000dc5 85bd     +LDD R27 , Y + 12 + 1
000dc6 858e     +LDD R24 , Y + 12 + 2
000dc7 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000dc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
                +
000dc9 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000dca ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000dcb ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000dcc e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000dcd 940e 0fd6 	CALL __MULF12
                +
000dcf 87ec     +STD Y + 12 , R30
000dd0 87fd     +STD Y + 12 + 1 , R31
000dd1 876e     +STD Y + 12 + 2 , R22
000dd2 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000dd3 5f3f      	SUBI R19,-LOW(1)
000dd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
000dd5 e0e0     +LDI R30 , LOW ( 0x41200000 )
000dd6 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000dd7 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000dd8 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000dd9 940e 0fd6 	CALL __MULF12
000ddb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
                +
000ddc 87ec     +STD Y + 12 , R30
000ddd 87fd     +STD Y + 12 + 1 , R31
000dde 876e     +STD Y + 12 + 2 , R22
000ddf 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000de0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
                +
000de1 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000de2 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000de3 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000de4 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000de5 940e 0f86 	CALL __ADDF12
000de7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
                +
000de8 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000de9 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000dea ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000deb e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000dec 940e 0fd6 	CALL __MULF12
000dee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000def 940e 112a 	CALL __PUTPARD1
000df1 940c 0b0b 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000df3 85a8      	LDD  R26,Y+8
000df4 85b9      	LDD  R27,Y+8+1
000df5 9611      	ADIW R26,1
000df6 87a8      	STD  Y+8,R26
000df7 87b9      	STD  Y+8+1,R27
000df8 9711      	SBIW R26,1
000df9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000dfa 2fe0      	MOV  R30,R16
000dfb 5de0      	SUBI R30,-LOW(48)
000dfc 93ec      	ST   X,R30
000dfd 2fe0      	MOV  R30,R16
000dfe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D:
000dff 85e8      	LDD  R30,Y+8
000e00 85f9      	LDD  R31,Y+8+1
000e01 9631      	ADIW R30,1
000e02 87e8      	STD  Y+8,R30
000e03 87f9      	STD  Y+8+1,R31
000e04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2E:
000e05 932a      	ST   -Y,R18
000e06 81ef      	LDD  R30,Y+7
000e07 85f8      	LDD  R31,Y+7+1
000e08 93fa      	ST   -Y,R31
000e09 93ea      	ST   -Y,R30
000e0a 85eb      	LDD  R30,Y+11
000e0b 85fc      	LDD  R31,Y+11+1
000e0c 9509      	ICALL
000e0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F:
                +
000e0e 01fe     +MOVW R30 , R28
000e0f 5ae6     +SUBI R30 , LOW ( - 90 )
000e10 4fff     +SBCI R31 , HIGH ( - 90 )
000e11 9001     +LD R0 , Z +
000e12 81f0     +LD R31 , Z
000e13 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x30:
000e15 9734      	SBIW R30,4
                +
000e16 01de     +MOVW R26 , R28
000e17 5aa6     +SUBI R26 , LOW ( - 90 )
000e18 4fbf     +SBCI R27 , HIGH ( - 90 )
000e19 93ed     +ST X + , R30
000e1a 93fc     +ST X , R31
                 	__PUTW1SX 90
000e1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x31:
000e1c 81ef      	LDD  R30,Y+7
000e1d 85f8      	LDD  R31,Y+7+1
000e1e 93fa      	ST   -Y,R31
000e1f 93ea      	ST   -Y,R30
000e20 85eb      	LDD  R30,Y+11
000e21 85fc      	LDD  R31,Y+11+1
000e22 9509      	ICALL
000e23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x32:
                +
000e24 01de     +MOVW R26 , R28
000e25 5aa6     +SUBI R26 , LOW ( - 90 )
000e26 4fbf     +SBCI R27 , HIGH ( - 90 )
000e27 900d     +LD R0 , X +
000e28 91bc     +LD R27 , X
000e29 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
                +
000e2b 87ea     +STD Y + 10 , R30
000e2c 87fb     +STD Y + 10 + 1 , R31
000e2d 876c     +STD Y + 10 + 2 , R22
000e2e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34:
000e30 dfdd      	RCALL SUBOPT_0x2F
000e31 cfe3      	RJMP SUBOPT_0x30
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35:
                +
000e32 85ea     +LDD R30 , Y + 10
000e33 85fb     +LDD R31 , Y + 10 + 1
000e34 856c     +LDD R22 , Y + 10 + 2
000e35 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000e36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x36:
000e37 87ee      	STD  Y+14,R30
000e38 87ff      	STD  Y+14+1,R31
000e39 93fa      	ST   -Y,R31
000e3a 93ea      	ST   -Y,R30
000e3b 940e 0be0 	CALL _strlen
000e3d 2f1e      	MOV  R17,R30
000e3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x37:
000e3f dfe4      	RCALL SUBOPT_0x32
000e40 9614      	ADIW R26,4
000e41 940e 110a 	CALL __GETW1P
000e43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
000e44 8be8     +STD Y + 16 , R30
000e45 8bf9     +STD Y + 16 + 1 , R31
000e46 8b6a     +STD Y + 16 + 2 , R22
000e47 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000e48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x39:
000e49 7f0b      	ANDI R16,LOW(251)
000e4a 89ed      	LDD  R30,Y+21
000e4b 93ea      	ST   -Y,R30
                +
000e4c 01fe     +MOVW R30 , R28
000e4d 5ae9     +SUBI R30 , LOW ( - 87 )
000e4e 4fff     +SBCI R31 , HIGH ( - 87 )
000e4f 9001     +LD R0 , Z +
000e50 81f0     +LD R31 , Z
000e51 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000e52 93fa      	ST   -Y,R31
000e53 93ea      	ST   -Y,R30
                +
000e54 01fe     +MOVW R30 , R28
000e55 5ae5     +SUBI R30 , LOW ( - 91 )
000e56 4fff     +SBCI R31 , HIGH ( - 91 )
000e57 9001     +LD R0 , Z +
000e58 81f0     +LD R31 , Z
000e59 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000e5a 9509      	ICALL
000e5b 3050      	CPI  R21,0
000e5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
                +
000e5d 89e8     +LDD R30 , Y + 16
000e5e 89f9     +LDD R31 , Y + 16 + 1
000e5f 896a     +LDD R22 , Y + 16 + 2
000e60 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000e61 85aa     +LDD R26 , Y + 10
000e62 85bb     +LDD R27 , Y + 10 + 1
000e63 858c     +LDD R24 , Y + 10 + 2
000e64 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000e65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000e66 01de      	MOVW R26,R28
000e67 961c      	ADIW R26,12
000e68 940e 1089 	CALL __ADDW2R15
000e6a 940e 110a 	CALL __GETW1P
000e6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
000e6d 940e 1089 	CALL __ADDW2R15
000e6f 940e 110a 	CALL __GETW1P
000e71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
000e72 933a      	ST   -Y,R19
000e73 940e 0bbd 	CALL _isspace
000e75 30e0      	CPI  R30,0
000e76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3E:
000e77 85ed      	LDD  R30,Y+13
000e78 85fe      	LDD  R31,Y+13+1
000e79 93fa      	ST   -Y,R31
000e7a 93ea      	ST   -Y,R30
000e7b 89e9      	LDD  R30,Y+17
000e7c 89fa      	LDD  R31,Y+17+1
000e7d 9509      	ICALL
000e7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3F:
000e7f 85ab      	LDD  R26,Y+11
000e80 85bc      	LDD  R27,Y+11+1
000e81 91ac      	LD   R26,X
000e82 30a0      	CPI  R26,0
000e83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x40:
000e84 85ef      	LDD  R30,Y+15
000e85 89f8      	LDD  R31,Y+15+1
000e86 9734      	SBIW R30,4
000e87 87ef      	STD  Y+15,R30
000e88 8bf8      	STD  Y+15+1,R31
000e89 85af      	LDD  R26,Y+15
000e8a 89b8      	LDD  R27,Y+15+1
000e8b 9614      	ADIW R26,4
000e8c 910d      	LD   R16,X+
000e8d 911c      	LD   R17,X
000e8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x41:
                +
000e8f 81ad     +LDD R26 , Y + 5
000e90 81be     +LDD R27 , Y + 5 + 1
000e91 818f     +LDD R24 , Y + 5 + 2
000e92 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000e93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x42:
                +
000e94 83ed     +STD Y + 5 , R30
000e95 83fe     +STD Y + 5 + 1 , R31
000e96 836f     +STD Y + 5 + 2 , R22
000e97 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000e98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x43:
                +
000e99 81ed     +LDD R30 , Y + 5
000e9a 81fe     +LDD R31 , Y + 5 + 1
000e9b 816f     +LDD R22 , Y + 5 + 2
000e9c 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000e9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000e9e dff0      	RCALL SUBOPT_0x41
                +
000e9f e0e0     +LDI R30 , LOW ( 0x3F000000 )
000ea0 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000ea1 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000ea2 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000ea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
                +
000ea4 81a9     +LDD R26 , Y + 1
000ea5 81ba     +LDD R27 , Y + 1 + 1
000ea6 818b     +LDD R24 , Y + 1 + 2
000ea7 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ea8 940e 0fd6 	CALL __MULF12
000eaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000eab 81ee      	LDD  R30,Y+6
000eac 81ff      	LDD  R31,Y+6+1
000ead 93fa      	ST   -Y,R31
000eae 93ea      	ST   -Y,R30
000eaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x47:
                +
000eb0 87e9     +STD Y + 9 , R30
000eb1 87fa     +STD Y + 9 + 1 , R31
000eb2 876b     +STD Y + 9 + 2 , R22
000eb3 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000eb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x48:
000eb5 81ae      	LDD  R26,Y+6
000eb6 81bf      	LDD  R27,Y+6+1
000eb7 9611      	ADIW R26,1
000eb8 83ae      	STD  Y+6,R26
000eb9 83bf      	STD  Y+6+1,R27
000eba 9711      	SBIW R26,1
000ebb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
000ebc 81aa     +LDD R26 , Y + 2
000ebd 81bb     +LDD R27 , Y + 2 + 1
000ebe 818c     +LDD R24 , Y + 2 + 2
000ebf 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000ec0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
000ec1 83ea     +STD Y + 2 , R30
000ec2 83fb     +STD Y + 2 + 1 , R31
000ec3 836c     +STD Y + 2 + 2 , R22
000ec4 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000ec5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4B:
                +
000ec6 81ea     +LDD R30 , Y + 2
000ec7 81fb     +LDD R31 , Y + 2 + 1
000ec8 816c     +LDD R22 , Y + 2 + 2
000ec9 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000eca 85a9     +LDD R26 , Y + 9
000ecb 85ba     +LDD R27 , Y + 9 + 1
000ecc 858b     +LDD R24 , Y + 9 + 2
000ecd 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ece 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4C:
                +
000ecf 85a9     +LDD R26 , Y + 9
000ed0 85ba     +LDD R27 , Y + 9 + 1
000ed1 858b     +LDD R24 , Y + 9 + 2
000ed2 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ed3 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000ed4 91e9      	ld   r30,y+
000ed5 91f9      	ld   r31,y+
000ed6 9630      	adiw r30,0
000ed7 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ed8 e686     +LDI R24 , LOW ( 0xE66 )
000ed9 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000eda 9701     +SBIW R24 , 1
000edb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000edc 95a8      	wdr
000edd 9731      	sbiw r30,1
000ede f7c9      	brne __delay_ms0
                 __delay_ms1:
000edf 9508      	ret
                 
                 __ANEGF1:
000ee0 9730      	SBIW R30,0
000ee1 4060      	SBCI R22,0
000ee2 4070      	SBCI R23,0
000ee3 f009      	BREQ __ANEGF10
000ee4 5870      	SUBI R23,0x80
                 __ANEGF10:
000ee5 9508      	RET
                 
                 __ROUND_REPACK:
000ee6 2355      	TST  R21
000ee7 f442      	BRPL __REPACK
000ee8 3850      	CPI  R21,0x80
000ee9 f411      	BRNE __ROUND_REPACK0
000eea ffe0      	SBRS R30,0
000eeb c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000eec 9631      	ADIW R30,1
000eed 1f69      	ADC  R22,R25
000eee 1f79      	ADC  R23,R25
000eef f06b      	BRVS __REPACK1
                 
                 __REPACK:
000ef0 e850      	LDI  R21,0x80
000ef1 2757      	EOR  R21,R23
000ef2 f411      	BRNE __REPACK0
000ef3 935f      	PUSH R21
000ef4 c0cf      	RJMP __ZERORES
                 __REPACK0:
000ef5 3f5f      	CPI  R21,0xFF
000ef6 f031      	BREQ __REPACK1
000ef7 0f66      	LSL  R22
000ef8 0c00      	LSL  R0
000ef9 9557      	ROR  R21
000efa 9567      	ROR  R22
000efb 2f75      	MOV  R23,R21
000efc 9508      	RET
                 __REPACK1:
000efd 935f      	PUSH R21
000efe 2000      	TST  R0
000eff f00a      	BRMI __REPACK2
000f00 c0cf      	RJMP __MAXRES
                 __REPACK2:
000f01 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000f02 e850      	LDI  R21,0x80
000f03 2e19      	MOV  R1,R25
000f04 2215      	AND  R1,R21
000f05 0f88      	LSL  R24
000f06 1f99      	ROL  R25
000f07 2795      	EOR  R25,R21
000f08 0f55      	LSL  R21
000f09 9587      	ROR  R24
                 
                 __UNPACK1:
000f0a e850      	LDI  R21,0x80
000f0b 2e07      	MOV  R0,R23
000f0c 2205      	AND  R0,R21
000f0d 0f66      	LSL  R22
000f0e 1f77      	ROL  R23
000f0f 2775      	EOR  R23,R21
000f10 0f55      	LSL  R21
000f11 9567      	ROR  R22
000f12 9508      	RET
                 
                 __CFD1U:
000f13 9468      	SET
000f14 c001      	RJMP __CFD1U0
                 __CFD1:
000f15 94e8      	CLT
                 __CFD1U0:
000f16 935f      	PUSH R21
000f17 dff2      	RCALL __UNPACK1
000f18 3870      	CPI  R23,0x80
000f19 f018      	BRLO __CFD10
000f1a 3f7f      	CPI  R23,0xFF
000f1b f408      	BRCC __CFD10
000f1c c0a7      	RJMP __ZERORES
                 __CFD10:
000f1d e156      	LDI  R21,22
000f1e 1b57      	SUB  R21,R23
000f1f f4aa      	BRPL __CFD11
000f20 9551      	NEG  R21
000f21 3058      	CPI  R21,8
000f22 f40e      	BRTC __CFD19
000f23 3059      	CPI  R21,9
                 __CFD19:
000f24 f030      	BRLO __CFD17
000f25 efef      	SER  R30
000f26 efff      	SER  R31
000f27 ef6f      	SER  R22
000f28 e77f      	LDI  R23,0x7F
000f29 f977      	BLD  R23,7
000f2a c01a      	RJMP __CFD15
                 __CFD17:
000f2b 2777      	CLR  R23
000f2c 2355      	TST  R21
000f2d f0b9      	BREQ __CFD15
                 __CFD18:
000f2e 0fee      	LSL  R30
000f2f 1fff      	ROL  R31
000f30 1f66      	ROL  R22
000f31 1f77      	ROL  R23
000f32 955a      	DEC  R21
000f33 f7d1      	BRNE __CFD18
000f34 c010      	RJMP __CFD15
                 __CFD11:
000f35 2777      	CLR  R23
                 __CFD12:
000f36 3058      	CPI  R21,8
000f37 f028      	BRLO __CFD13
000f38 2fef      	MOV  R30,R31
000f39 2ff6      	MOV  R31,R22
000f3a 2f67      	MOV  R22,R23
000f3b 5058      	SUBI R21,8
000f3c cff9      	RJMP __CFD12
                 __CFD13:
000f3d 2355      	TST  R21
000f3e f031      	BREQ __CFD15
                 __CFD14:
000f3f 9576      	LSR  R23
000f40 9567      	ROR  R22
000f41 95f7      	ROR  R31
000f42 95e7      	ROR  R30
000f43 955a      	DEC  R21
000f44 f7d1      	BRNE __CFD14
                 __CFD15:
000f45 2000      	TST  R0
000f46 f40a      	BRPL __CFD16
000f47 d149      	RCALL __ANEGD1
                 __CFD16:
000f48 915f      	POP  R21
000f49 9508      	RET
                 
                 __CDF1U:
000f4a 9468      	SET
000f4b c001      	RJMP __CDF1U0
                 __CDF1:
000f4c 94e8      	CLT
                 __CDF1U0:
000f4d 9730      	SBIW R30,0
000f4e 4060      	SBCI R22,0
000f4f 4070      	SBCI R23,0
000f50 f0b1      	BREQ __CDF10
000f51 2400      	CLR  R0
000f52 f026      	BRTS __CDF11
000f53 2377      	TST  R23
000f54 f412      	BRPL __CDF11
000f55 9400      	COM  R0
000f56 d13a      	RCALL __ANEGD1
                 __CDF11:
000f57 2e17      	MOV  R1,R23
000f58 e17e      	LDI  R23,30
000f59 2011      	TST  R1
                 __CDF12:
000f5a f032      	BRMI __CDF13
000f5b 957a      	DEC  R23
000f5c 0fee      	LSL  R30
000f5d 1fff      	ROL  R31
000f5e 1f66      	ROL  R22
000f5f 1c11      	ROL  R1
000f60 cff9      	RJMP __CDF12
                 __CDF13:
000f61 2fef      	MOV  R30,R31
000f62 2ff6      	MOV  R31,R22
000f63 2d61      	MOV  R22,R1
000f64 935f      	PUSH R21
000f65 df8a      	RCALL __REPACK
000f66 915f      	POP  R21
                 __CDF10:
000f67 9508      	RET
                 
                 __SWAPACC:
000f68 934f      	PUSH R20
000f69 01af      	MOVW R20,R30
000f6a 01fd      	MOVW R30,R26
000f6b 01da      	MOVW R26,R20
000f6c 01ab      	MOVW R20,R22
000f6d 01bc      	MOVW R22,R24
000f6e 01ca      	MOVW R24,R20
000f6f 2d40      	MOV  R20,R0
000f70 2c01      	MOV  R0,R1
000f71 2e14      	MOV  R1,R20
000f72 914f      	POP  R20
000f73 9508      	RET
                 
                 __UADD12:
000f74 0fea      	ADD  R30,R26
000f75 1ffb      	ADC  R31,R27
000f76 1f68      	ADC  R22,R24
000f77 9508      	RET
                 
                 __NEGMAN1:
000f78 95e0      	COM  R30
000f79 95f0      	COM  R31
000f7a 9560      	COM  R22
000f7b 5fef      	SUBI R30,-1
000f7c 4fff      	SBCI R31,-1
000f7d 4f6f      	SBCI R22,-1
000f7e 9508      	RET
                 
                 __SUBF12:
000f7f 935f      	PUSH R21
000f80 df81      	RCALL __UNPACK
000f81 3890      	CPI  R25,0x80
000f82 f171      	BREQ __ADDF129
000f83 e850      	LDI  R21,0x80
000f84 2615      	EOR  R1,R21
                 
000f85 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000f86 935f      	PUSH R21
000f87 df7a      	RCALL __UNPACK
000f88 3890      	CPI  R25,0x80
000f89 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000f8a 3870      	CPI  R23,0x80
000f8b f121      	BREQ __ADDF128
                 __ADDF121:
000f8c 2f57      	MOV  R21,R23
000f8d 1b59      	SUB  R21,R25
000f8e f12b      	BRVS __ADDF1211
000f8f f412      	BRPL __ADDF122
000f90 dfd7      	RCALL __SWAPACC
000f91 cffa      	RJMP __ADDF121
                 __ADDF122:
000f92 3158      	CPI  R21,24
000f93 f018      	BRLO __ADDF123
000f94 27aa      	CLR  R26
000f95 27bb      	CLR  R27
000f96 2788      	CLR  R24
                 __ADDF123:
000f97 3058      	CPI  R21,8
000f98 f028      	BRLO __ADDF124
000f99 2fab      	MOV  R26,R27
000f9a 2fb8      	MOV  R27,R24
000f9b 2788      	CLR  R24
000f9c 5058      	SUBI R21,8
000f9d cff9      	RJMP __ADDF123
                 __ADDF124:
000f9e 2355      	TST  R21
000f9f f029      	BREQ __ADDF126
                 __ADDF125:
000fa0 9586      	LSR  R24
000fa1 95b7      	ROR  R27
000fa2 95a7      	ROR  R26
000fa3 955a      	DEC  R21
000fa4 f7d9      	BRNE __ADDF125
                 __ADDF126:
000fa5 2d50      	MOV  R21,R0
000fa6 2551      	EOR  R21,R1
000fa7 f072      	BRMI __ADDF127
000fa8 dfcb      	RCALL __UADD12
000fa9 f438      	BRCC __ADDF129
000faa 9567      	ROR  R22
000fab 95f7      	ROR  R31
000fac 95e7      	ROR  R30
000fad 9573      	INC  R23
000fae f413      	BRVC __ADDF129
000faf c020      	RJMP __MAXRES
                 __ADDF128:
000fb0 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000fb1 df3e      	RCALL __REPACK
000fb2 915f      	POP  R21
000fb3 9508      	RET
                 __ADDF1211:
000fb4 f7d8      	BRCC __ADDF128
000fb5 cffb      	RJMP __ADDF129
                 __ADDF127:
000fb6 1bea      	SUB  R30,R26
000fb7 0bfb      	SBC  R31,R27
000fb8 0b68      	SBC  R22,R24
000fb9 f051      	BREQ __ZERORES
000fba f410      	BRCC __ADDF1210
000fbb 9400      	COM  R0
000fbc dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000fbd 2366      	TST  R22
000fbe f392      	BRMI __ADDF129
000fbf 0fee      	LSL  R30
000fc0 1fff      	ROL  R31
000fc1 1f66      	ROL  R22
000fc2 957a      	DEC  R23
000fc3 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000fc4 27ee      	CLR  R30
000fc5 27ff      	CLR  R31
000fc6 2766      	CLR  R22
000fc7 2777      	CLR  R23
000fc8 915f      	POP  R21
000fc9 9508      	RET
                 
                 __MINRES:
000fca efef      	SER  R30
000fcb efff      	SER  R31
000fcc e76f      	LDI  R22,0x7F
000fcd ef7f      	SER  R23
000fce 915f      	POP  R21
000fcf 9508      	RET
                 
                 __MAXRES:
000fd0 efef      	SER  R30
000fd1 efff      	SER  R31
000fd2 e76f      	LDI  R22,0x7F
000fd3 e77f      	LDI  R23,0x7F
000fd4 915f      	POP  R21
000fd5 9508      	RET
                 
                 __MULF12:
000fd6 935f      	PUSH R21
000fd7 df2a      	RCALL __UNPACK
000fd8 3870      	CPI  R23,0x80
000fd9 f351      	BREQ __ZERORES
000fda 3890      	CPI  R25,0x80
000fdb f341      	BREQ __ZERORES
000fdc 2401      	EOR  R0,R1
000fdd 9408      	SEC
000fde 1f79      	ADC  R23,R25
000fdf f423      	BRVC __MULF124
000fe0 f31c      	BRLT __ZERORES
                 __MULF125:
000fe1 2000      	TST  R0
000fe2 f33a      	BRMI __MINRES
000fe3 cfec      	RJMP __MAXRES
                 __MULF124:
000fe4 920f      	PUSH R0
000fe5 931f      	PUSH R17
000fe6 932f      	PUSH R18
000fe7 933f      	PUSH R19
000fe8 934f      	PUSH R20
000fe9 2711      	CLR  R17
000fea 2722      	CLR  R18
000feb 2799      	CLR  R25
000fec 9f68      	MUL  R22,R24
000fed 01a0      	MOVW R20,R0
000fee 9f8f      	MUL  R24,R31
000fef 2d30      	MOV  R19,R0
000ff0 0d41      	ADD  R20,R1
000ff1 1f59      	ADC  R21,R25
000ff2 9f6b      	MUL  R22,R27
000ff3 0d30      	ADD  R19,R0
000ff4 1d41      	ADC  R20,R1
000ff5 1f59      	ADC  R21,R25
000ff6 9f8e      	MUL  R24,R30
000ff7 d027      	RCALL __MULF126
000ff8 9fbf      	MUL  R27,R31
000ff9 d025      	RCALL __MULF126
000ffa 9f6a      	MUL  R22,R26
000ffb d023      	RCALL __MULF126
000ffc 9fbe      	MUL  R27,R30
000ffd d01d      	RCALL __MULF127
000ffe 9faf      	MUL  R26,R31
000fff d01b      	RCALL __MULF127
001000 9fae      	MUL  R26,R30
001001 0d11      	ADD  R17,R1
001002 1f29      	ADC  R18,R25
001003 1f39      	ADC  R19,R25
001004 1f49      	ADC  R20,R25
001005 1f59      	ADC  R21,R25
001006 2fe3      	MOV  R30,R19
001007 2ff4      	MOV  R31,R20
001008 2f65      	MOV  R22,R21
001009 2f52      	MOV  R21,R18
00100a 914f      	POP  R20
00100b 913f      	POP  R19
00100c 912f      	POP  R18
00100d 911f      	POP  R17
00100e 900f      	POP  R0
00100f 2366      	TST  R22
001010 f02a      	BRMI __MULF122
001011 0f55      	LSL  R21
001012 1fee      	ROL  R30
001013 1fff      	ROL  R31
001014 1f66      	ROL  R22
001015 c002      	RJMP __MULF123
                 __MULF122:
001016 9573      	INC  R23
001017 f24b      	BRVS __MULF125
                 __MULF123:
001018 decd      	RCALL __ROUND_REPACK
001019 915f      	POP  R21
00101a 9508      	RET
                 
                 __MULF127:
00101b 0d10      	ADD  R17,R0
00101c 1d21      	ADC  R18,R1
00101d 1f39      	ADC  R19,R25
00101e c002      	RJMP __MULF128
                 __MULF126:
00101f 0d20      	ADD  R18,R0
001020 1d31      	ADC  R19,R1
                 __MULF128:
001021 1f49      	ADC  R20,R25
001022 1f59      	ADC  R21,R25
001023 9508      	RET
                 
                 __DIVF21:
001024 935f      	PUSH R21
001025 dedc      	RCALL __UNPACK
001026 3870      	CPI  R23,0x80
001027 f421      	BRNE __DIVF210
001028 2011      	TST  R1
                 __DIVF211:
001029 f40a      	BRPL __DIVF219
00102a cf9f      	RJMP __MINRES
                 __DIVF219:
00102b cfa4      	RJMP __MAXRES
                 __DIVF210:
00102c 3890      	CPI  R25,0x80
00102d f409      	BRNE __DIVF218
                 __DIVF217:
00102e cf95      	RJMP __ZERORES
                 __DIVF218:
00102f 2401      	EOR  R0,R1
001030 9408      	SEC
001031 0b97      	SBC  R25,R23
001032 f41b      	BRVC __DIVF216
001033 f3d4      	BRLT __DIVF217
001034 2000      	TST  R0
001035 cff3      	RJMP __DIVF211
                 __DIVF216:
001036 2f79      	MOV  R23,R25
001037 931f      	PUSH R17
001038 932f      	PUSH R18
001039 933f      	PUSH R19
00103a 934f      	PUSH R20
00103b 2411      	CLR  R1
00103c 2711      	CLR  R17
00103d 2722      	CLR  R18
00103e 2733      	CLR  R19
00103f 2744      	CLR  R20
001040 2755      	CLR  R21
001041 e290      	LDI  R25,32
                 __DIVF212:
001042 17ae      	CP   R26,R30
001043 07bf      	CPC  R27,R31
001044 0786      	CPC  R24,R22
001045 0741      	CPC  R20,R17
001046 f030      	BRLO __DIVF213
001047 1bae      	SUB  R26,R30
001048 0bbf      	SBC  R27,R31
001049 0b86      	SBC  R24,R22
00104a 0b41      	SBC  R20,R17
00104b 9408      	SEC
00104c c001      	RJMP __DIVF214
                 __DIVF213:
00104d 9488      	CLC
                 __DIVF214:
00104e 1f55      	ROL  R21
00104f 1f22      	ROL  R18
001050 1f33      	ROL  R19
001051 1c11      	ROL  R1
001052 1faa      	ROL  R26
001053 1fbb      	ROL  R27
001054 1f88      	ROL  R24
001055 1f44      	ROL  R20
001056 959a      	DEC  R25
001057 f751      	BRNE __DIVF212
001058 01f9      	MOVW R30,R18
001059 2d61      	MOV  R22,R1
00105a 914f      	POP  R20
00105b 913f      	POP  R19
00105c 912f      	POP  R18
00105d 911f      	POP  R17
00105e 2366      	TST  R22
00105f f032      	BRMI __DIVF215
001060 0f55      	LSL  R21
001061 1fee      	ROL  R30
001062 1fff      	ROL  R31
001063 1f66      	ROL  R22
001064 957a      	DEC  R23
001065 f243      	BRVS __DIVF217
                 __DIVF215:
001066 de7f      	RCALL __ROUND_REPACK
001067 915f      	POP  R21
001068 9508      	RET
                 
                 __CMPF12:
001069 2399      	TST  R25
00106a f09a      	BRMI __CMPF120
00106b 2377      	TST  R23
00106c f042      	BRMI __CMPF121
00106d 1797      	CP   R25,R23
00106e f048      	BRLO __CMPF122
00106f f429      	BRNE __CMPF121
001070 17ae      	CP   R26,R30
001071 07bf      	CPC  R27,R31
001072 0786      	CPC  R24,R22
001073 f020      	BRLO __CMPF122
001074 f031      	BREQ __CMPF123
                 __CMPF121:
001075 9498      	CLZ
001076 9488      	CLC
001077 9508      	RET
                 __CMPF122:
001078 9498      	CLZ
001079 9408      	SEC
00107a 9508      	RET
                 __CMPF123:
00107b 9418      	SEZ
00107c 9488      	CLC
00107d 9508      	RET
                 __CMPF120:
00107e 2377      	TST  R23
00107f f7c2      	BRPL __CMPF122
001080 1797      	CP   R25,R23
001081 f398      	BRLO __CMPF121
001082 f7a9      	BRNE __CMPF122
001083 17ea      	CP   R30,R26
001084 07fb      	CPC  R31,R27
001085 0768      	CPC  R22,R24
001086 f388      	BRLO __CMPF122
001087 f399      	BREQ __CMPF123
001088 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
001089 2400      	CLR  R0
00108a 0daf      	ADD  R26,R15
00108b 1db0      	ADC  R27,R0
00108c 9508      	RET
                 
                 __ANEGW1:
00108d 95f1      	NEG  R31
00108e 95e1      	NEG  R30
00108f 40f0      	SBCI R31,0
001090 9508      	RET
                 
                 __ANEGD1:
001091 95f0      	COM  R31
001092 9560      	COM  R22
001093 9570      	COM  R23
001094 95e1      	NEG  R30
001095 4fff      	SBCI R31,-1
001096 4f6f      	SBCI R22,-1
001097 4f7f      	SBCI R23,-1
001098 9508      	RET
                 
                 __ASRW8:
001099 2fef      	MOV  R30,R31
00109a 27ff      	CLR  R31
00109b fde7      	SBRC R30,7
00109c efff      	SER  R31
00109d 9508      	RET
                 
                 __CBD1:
00109e 2ffe      	MOV  R31,R30
00109f 0fff      	ADD  R31,R31
0010a0 0bff      	SBC  R31,R31
0010a1 2f6f      	MOV  R22,R31
0010a2 2f7f      	MOV  R23,R31
0010a3 9508      	RET
                 
                 __CWD1:
0010a4 2f6f      	MOV  R22,R31
0010a5 0f66      	ADD  R22,R22
0010a6 0b66      	SBC  R22,R22
0010a7 2f76      	MOV  R23,R22
0010a8 9508      	RET
                 
                 __CWD2:
0010a9 2f8b      	MOV  R24,R27
0010aa 0f88      	ADD  R24,R24
0010ab 0b88      	SBC  R24,R24
0010ac 2f98      	MOV  R25,R24
0010ad 9508      	RET
                 
                 __MULW12U:
0010ae 9ffa      	MUL  R31,R26
0010af 2df0      	MOV  R31,R0
0010b0 9feb      	MUL  R30,R27
0010b1 0df0      	ADD  R31,R0
0010b2 9fea      	MUL  R30,R26
0010b3 2de0      	MOV  R30,R0
0010b4 0df1      	ADD  R31,R1
0010b5 9508      	RET
                 
                 __DIVB21U:
0010b6 2400      	CLR  R0
0010b7 e098      	LDI  R25,8
                 __DIVB21U1:
0010b8 0faa      	LSL  R26
0010b9 1c00      	ROL  R0
0010ba 1a0e      	SUB  R0,R30
0010bb f410      	BRCC __DIVB21U2
0010bc 0e0e      	ADD  R0,R30
0010bd c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0010be 60a1      	SBR  R26,1
                 __DIVB21U3:
0010bf 959a      	DEC  R25
0010c0 f7b9      	BRNE __DIVB21U1
0010c1 2fea      	MOV  R30,R26
0010c2 2da0      	MOV  R26,R0
0010c3 9508      	RET
                 
                 __DIVB21:
0010c4 d039      	RCALL __CHKSIGNB
0010c5 dff0      	RCALL __DIVB21U
0010c6 f40e      	BRTC __DIVB211
0010c7 95e1      	NEG  R30
                 __DIVB211:
0010c8 9508      	RET
                 
                 __DIVD21U:
0010c9 933f      	PUSH R19
0010ca 934f      	PUSH R20
0010cb 935f      	PUSH R21
0010cc 2400      	CLR  R0
0010cd 2411      	CLR  R1
0010ce 2744      	CLR  R20
0010cf 2755      	CLR  R21
0010d0 e230      	LDI  R19,32
                 __DIVD21U1:
0010d1 0faa      	LSL  R26
0010d2 1fbb      	ROL  R27
0010d3 1f88      	ROL  R24
0010d4 1f99      	ROL  R25
0010d5 1c00      	ROL  R0
0010d6 1c11      	ROL  R1
0010d7 1f44      	ROL  R20
0010d8 1f55      	ROL  R21
0010d9 1a0e      	SUB  R0,R30
0010da 0a1f      	SBC  R1,R31
0010db 0b46      	SBC  R20,R22
0010dc 0b57      	SBC  R21,R23
0010dd f428      	BRCC __DIVD21U2
0010de 0e0e      	ADD  R0,R30
0010df 1e1f      	ADC  R1,R31
0010e0 1f46      	ADC  R20,R22
0010e1 1f57      	ADC  R21,R23
0010e2 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0010e3 60a1      	SBR  R26,1
                 __DIVD21U3:
0010e4 953a      	DEC  R19
0010e5 f759      	BRNE __DIVD21U1
0010e6 01fd      	MOVW R30,R26
0010e7 01bc      	MOVW R22,R24
0010e8 01d0      	MOVW R26,R0
0010e9 01ca      	MOVW R24,R20
0010ea 915f      	POP  R21
0010eb 914f      	POP  R20
0010ec 913f      	POP  R19
0010ed 9508      	RET
                 
                 __MODB21:
0010ee 94e8      	CLT
0010ef ffa7      	SBRS R26,7
0010f0 c002      	RJMP __MODB211
0010f1 95a1      	NEG  R26
0010f2 9468      	SET
                 __MODB211:
0010f3 fde7      	SBRC R30,7
0010f4 95e1      	NEG  R30
0010f5 dfc0      	RCALL __DIVB21U
0010f6 2fea      	MOV  R30,R26
0010f7 f40e      	BRTC __MODB212
0010f8 95e1      	NEG  R30
                 __MODB212:
0010f9 9508      	RET
                 
                 __MODD21U:
0010fa dfce      	RCALL __DIVD21U
0010fb 01fd      	MOVW R30,R26
0010fc 01bc      	MOVW R22,R24
0010fd 9508      	RET
                 
                 __CHKSIGNB:
0010fe 94e8      	CLT
0010ff ffe7      	SBRS R30,7
001100 c002      	RJMP __CHKSB1
001101 95e1      	NEG  R30
001102 9468      	SET
                 __CHKSB1:
001103 ffa7      	SBRS R26,7
001104 c004      	RJMP __CHKSB2
001105 95a1      	NEG  R26
001106 f800      	BLD  R0,0
001107 9403      	INC  R0
001108 fa00      	BST  R0,0
                 __CHKSB2:
001109 9508      	RET
                 
                 __GETW1P:
00110a 91ed      	LD   R30,X+
00110b 91fc      	LD   R31,X
00110c 9711      	SBIW R26,1
00110d 9508      	RET
                 
                 __GETD1P:
00110e 91ed      	LD   R30,X+
00110f 91fd      	LD   R31,X+
001110 916d      	LD   R22,X+
001111 917c      	LD   R23,X
001112 9713      	SBIW R26,3
001113 9508      	RET
                 
                 __PUTDP1:
001114 93ed      	ST   X+,R30
001115 93fd      	ST   X+,R31
001116 936d      	ST   X+,R22
001117 937c      	ST   X,R23
001118 9508      	RET
                 
                 __GETD1S0:
001119 81e8      	LD   R30,Y
00111a 81f9      	LDD  R31,Y+1
00111b 816a      	LDD  R22,Y+2
00111c 817b      	LDD  R23,Y+3
00111d 9508      	RET
                 
                 __GETD2S0:
00111e 81a8      	LD   R26,Y
00111f 81b9      	LDD  R27,Y+1
001120 818a      	LDD  R24,Y+2
001121 819b      	LDD  R25,Y+3
001122 9508      	RET
                 
                 __PUTD1S0:
001123 83e8      	ST   Y,R30
001124 83f9      	STD  Y+1,R31
001125 836a      	STD  Y+2,R22
001126 837b      	STD  Y+3,R23
001127 9508      	RET
                 
                 __PUTPARD1L:
001128 e060      	LDI  R22,0
001129 e070      	LDI  R23,0
                 __PUTPARD1:
00112a 937a      	ST   -Y,R23
00112b 936a      	ST   -Y,R22
00112c 93fa      	ST   -Y,R31
00112d 93ea      	ST   -Y,R30
00112e 9508      	RET
                 
                 __CDF2U:
00112f 9468      	SET
001130 c001      	RJMP __CDF2U0
                 __CDF2:
001131 94e8      	CLT
                 __CDF2U0:
001132 d001      	RCALL __SWAPD12
001133 de19      	RCALL __CDF1U0
                 
                 __SWAPD12:
001134 2e18      	MOV  R1,R24
001135 2f86      	MOV  R24,R22
001136 2d61      	MOV  R22,R1
001137 2e19      	MOV  R1,R25
001138 2f97      	MOV  R25,R23
001139 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00113a 2e1b      	MOV  R1,R27
00113b 2fbf      	MOV  R27,R31
00113c 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00113d 2e1a      	MOV  R1,R26
00113e 2fae      	MOV  R26,R30
00113f 2de1      	MOV  R30,R1
001140 9508      	RET
                 
                 __CPD10:
001141 9730      	SBIW R30,0
001142 4060      	SBCI R22,0
001143 4070      	SBCI R23,0
001144 9508      	RET
                 
                 __SAVELOCR6:
001145 935a      	ST   -Y,R21
                 __SAVELOCR5:
001146 934a      	ST   -Y,R20
                 __SAVELOCR4:
001147 933a      	ST   -Y,R19
                 __SAVELOCR3:
001148 932a      	ST   -Y,R18
                 __SAVELOCR2:
001149 931a      	ST   -Y,R17
00114a 930a      	ST   -Y,R16
00114b 9508      	RET
                 
                 __LOADLOCR6:
00114c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00114d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00114e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00114f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001150 8119      	LDD  R17,Y+1
001151 8108      	LD   R16,Y
001152 9508      	RET
                 
                 __INITLOCW:
001153 0fac      	ADD  R26,R28
001154 1fbd      	ADC  R27,R29
                 __INITLOC0:
001155 9005      	LPM  R0,Z+
001156 920d      	ST   X+,R0
001157 9701      	SBIW R24,1
001158 f7e1      	BRNE __INITLOC0
001159 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 108 r1 :  48 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   6 r9 :   4 r10:   0 r11:   0 r12:   5 r13:   2 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  72 r21: 105 r22: 153 r23: 136 
r24:  99 r25:  85 r26: 317 r27: 162 r28: 104 r29:   3 r30: 846 r31: 366 
x  : 183 y  : 604 z  :  63 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  22 
adiw  :  54 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  70 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  77 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 358 
cbi   :   2 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  70 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  22 cpc   :  25 cpi   : 127 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  26 inc   :   6 jmp   :  54 ld    : 132 ldd   : 284 
ldi   : 418 lds   :  11 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 116 
movw  : 151 mul   :  15 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  30 pop   :  57 push  :  57 rcall :  87 
ret   : 135 reti  :   3 rjmp  : 195 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  75 sbi   :   6 sbic  :   0 sbis  :   2 sbiw  :  47 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 292 std   : 128 sts   :  13 sub   :   6 subi  : 112 
swap  :   0 tst   :  27 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0022b4   8244    640   8884  131072   6.8%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 12 warnings
