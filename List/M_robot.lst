
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Tue Feb 11 12:49:54 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _CHECK_GETS=R8
                 	.DEF _CHECK_CONTROL=R11
                 	.DEF _TIMER1_OVERFLOW=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0186 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 037e 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 038a 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0384 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 033d 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0358 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x48:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000      	.DB  0x0,0x0
                 _0x62:
000163 0000
000164 0000
000165 0000
000166 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000167 0000      	.DB  0x0,0x0
                 _0x0:
000168 253c
000169 2c64
00016a 6425
00016b 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00016c 3e64
00016d 2500
00016e 2c66
00016f 2520      	.DB  0x64,0x3E,0x0,0x25,0x66,0x2C,0x20,0x25
000170 2c66
000171 2520
000172 2c66
000173 2520      	.DB  0x66,0x2C,0x20,0x25,0x66,0x2C,0x20,0x25
000174 0a66
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1192): warning: .cseg .db misalignment - padding zero byte
000175 0000      	.DB  0x66,0xA,0x0
                 _0x2000000:
000176 4e2d
000177 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1194): warning: .cseg .db misalignment - padding zero byte
000178 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1196): warning: .cseg .db misalignment - padding zero byte
000179 0001      	.DB  0x1
                 _0x2080000:
00017a 4e2d
00017b 4e41
00017c 4900
00017d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1199): warning: .cseg .db misalignment - padding zero byte
00017e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00017f 000a      	.DW  0x0A
000180 0004      	.DW  0x04
000181 02c6      	.DW  _0x62*2
                 
000182 0001      	.DW  0x01
000183 0578      	.DW  __seed_G104
000184 02f2      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000185 0000      	.DW  0
                 
                 __RESET:
000186 94f8      	CLI
000187 27ee      	CLR  R30
000188 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000189 e0f1      	LDI  R31,1
00018a bff5      	OUT  MCUCR,R31
00018b bfe5      	OUT  MCUCR,R30
00018c 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00018e e1f8      	LDI  R31,0x18
00018f bdf1      	OUT  WDTCR,R31
000190 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000191 e08d      	LDI  R24,(14-2)+1
000192 e0a2      	LDI  R26,2
000193 27bb      	CLR  R27
                 __CLEAR_REG:
000194 93ed      	ST   X+,R30
000195 958a      	DEC  R24
000196 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000197 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000198 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000199 e0a0      	LDI  R26,LOW(__SRAM_START)
00019a e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019b 93ed      	ST   X+,R30
00019c 9701      	SBIW R24,1
00019d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019e efee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00019f e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a0 9185      	LPM  R24,Z+
0001a1 9195      	LPM  R25,Z+
0001a2 9700      	SBIW R24,0
0001a3 f061      	BREQ __GLOBAL_INI_END
0001a4 91a5      	LPM  R26,Z+
0001a5 91b5      	LPM  R27,Z+
0001a6 9005      	LPM  R0,Z+
0001a7 9015      	LPM  R1,Z+
0001a8 01bf      	MOVW R22,R30
0001a9 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001aa 9005      	LPM  R0,Z+
0001ab 920d      	ST   X+,R0
0001ac 9701      	SBIW R24,1
0001ad f7e1      	BRNE __GLOBAL_INI_LOOP
0001ae 01fb      	MOVW R30,R22
0001af cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b0 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b1 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b2 bfed      	OUT  SPL,R30
0001b3 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b4 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b5 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b6 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b7 940c 0397 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 25
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.281
                 ;#define Gearratio 20
                 ;
                 ;#define Circular 57.29                      // 180 / PI
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned char CHECK_CONTROL = 0;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0025 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0026     UCSR1A = 0x00;
                 ;	bps -> Y+0
0001b9 e0e0      	LDI  R30,LOW(0)
0001ba 93e0 009b 	STS  155,R30
                 ; 0000 0027     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0001bc e9e8      	LDI  R30,LOW(152)
0001bd 93e0 009a 	STS  154,R30
                 ; 0000 0028     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0001bf e0e6      	LDI  R30,LOW(6)
0001c0 93e0 009d 	STS  157,R30
                 ; 0000 0029     UCSR1C &= ~(1<<UMSEL1);
0001c2 91e0 009d 	LDS  R30,157
0001c4 7bef      	ANDI R30,0xBF
0001c5 93e0 009d 	STS  157,R30
                 ; 0000 002A 
                 ; 0000 002B     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0001c7 81e8      	LD   R30,Y
0001c8 81f9      	LDD  R31,Y+1
0001c9 940e 10b7 	CALL __ASRW8
0001cb 93e0 0098 	STS  152,R30
                 ; 0000 002C     UBRR1L = (unsigned char)(bps & 0x00ff);
0001cd 81e8      	LD   R30,Y
0001ce 93e0 0099 	STS  153,R30
                 ; 0000 002D }
0001d0 c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 0030 {
                 _usart0_init:
                 ; 0000 0031     UCSR0A = 0x00;
                 ;	bps -> Y+0
0001d1 e0e0      	LDI  R30,LOW(0)
0001d2 b9eb      	OUT  0xB,R30
                 ; 0000 0032     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0001d3 e9e8      	LDI  R30,LOW(152)
0001d4 b9ea      	OUT  0xA,R30
                 ; 0000 0033     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0001d5 e0e6      	LDI  R30,LOW(6)
0001d6 93e0 0095 	STS  149,R30
                 ; 0000 0034     UCSR0C &= ~(1<<UMSEL0);
0001d8 91e0 0095 	LDS  R30,149
0001da 7bef      	ANDI R30,0xBF
0001db 93e0 0095 	STS  149,R30
                 ; 0000 0035 
                 ; 0000 0036     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0001dd 81e8      	LD   R30,Y
0001de 81f9      	LDD  R31,Y+1
0001df 940e 10b7 	CALL __ASRW8
0001e1 93e0 0090 	STS  144,R30
                 ; 0000 0037     UBRR0L = (unsigned char)(bps & 0x00ff);
0001e3 81e8      	LD   R30,Y
0001e4 b9e9      	OUT  0x9,R30
                 ; 0000 0038 }
                 _0x20A000F:
0001e5 9622      	ADIW R28,2
0001e6 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 003B {
                 _timer2_init:
                 ; 0000 003C     //TIMER2
                 ; 0000 003D     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0001e7 e0ed      	LDI  R30,LOW(13)
0001e8 bde5      	OUT  0x25,R30
                 ; 0000 003E 
                 ; 0000 003F     OCR2 = 40;
0001e9 e2e8      	LDI  R30,LOW(40)
0001ea bde3      	OUT  0x23,R30
                 ; 0000 0040     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0001eb e8e2      	LDI  R30,LOW(130)
0001ec c010      	RJMP _0x20A000E
                 ; 0000 0041     //TIMSK = (1<<OCIE2);
                 ; 0000 0042 }
                 ;void timer0_init(void)
                 ; 0000 0044 {
                 _timer0_init:
                 ; 0000 0045     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0001ed e0e7      	LDI  R30,LOW(7)
0001ee bfe3      	OUT  0x33,R30
                 ; 0000 0046     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0001ef e8e1      	LDI  R30,LOW(129)
0001f0 c00c      	RJMP _0x20A000E
                 ; 0000 0047 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 004A {
                 _timer1_init:
                 ; 0000 004B     // TCCR1A = (1<<COM1B0);
                 ; 0000 004C     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0001f1 e1ed      	LDI  R30,LOW(29)
0001f2 bdee      	OUT  0x2E,R30
                 ; 0000 004D 
                 ; 0000 004E     OCR1B = 255;
0001f3 efef      	LDI  R30,LOW(255)
0001f4 e0f0      	LDI  R31,HIGH(255)
0001f5 bdf9      	OUT  0x28+1,R31
0001f6 bde8      	OUT  0x28,R30
                 ; 0000 004F     ICR1 = 1200;
0001f7 ebe0      	LDI  R30,LOW(1200)
0001f8 e0f4      	LDI  R31,HIGH(1200)
0001f9 bdf7      	OUT  0x26+1,R31
0001fa bde6      	OUT  0x26,R30
                 ; 0000 0050     TIMSK |= (1<<OCIE1B);
0001fb b7e7      	IN   R30,0x37
0001fc 60e8      	ORI  R30,8
                 _0x20A000E:
0001fd bfe7      	OUT  0x37,R30
                 ; 0000 0051 }
0001fe 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0000 0054 {
                 _putch_USART1:
                 ; 0000 0055     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
0001ff 91e0 009b 	LDS  R30,155
000201 72e0      	ANDI R30,LOW(0x20)
000202 f3e1      	BREQ _0x3
                 ; 0000 0056     UDR1 = data;
000203 81e8      	LD   R30,Y
000204 93e0 009c 	STS  156,R30
                 ; 0000 0057 }
000206 c023      	RJMP _0x20A000D
                 ;
                 ;//USART 문자열 송신
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     for(i = 0;i<IDX;i++)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 006A {
                 _puts_USART1:
                 ; 0000 006B     unsigned char i = 0;
                 ; 0000 006C     unsigned char x = 0;
                 ; 0000 006D     for(i = 0; str[i] ;i++){
000207 931a      	ST   -Y,R17
000208 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000209 e010      	LDI  R17,0
00020a e000      	LDI  R16,0
00020b e010      	LDI  R17,LOW(0)
                 _0x7:
00020c 940e 0caf 	CALL SUBOPT_0x0
00020e 30e0      	CPI  R30,0
00020f f031      	BREQ _0x8
                 ; 0000 006E         putch_USART1(str[i]);
000210 940e 0caf 	CALL SUBOPT_0x0
000212 93ea      	ST   -Y,R30
000213 dfeb      	RCALL _putch_USART1
                 ; 0000 006F     }
000214 5f1f      	SUBI R17,-1
000215 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 0070     for(x = 0; x<i; x++){
000216 e000      	LDI  R16,LOW(0)
                 _0xA:
000217 1701      	CP   R16,R17
000218 f450      	BRSH _0xB
                 ; 0000 0071         *(str++) = 0;
000219 81aa      	LDD  R26,Y+2
00021a 81bb      	LDD  R27,Y+2+1
00021b 9611      	ADIW R26,1
00021c 83aa      	STD  Y+2,R26
00021d 83bb      	STD  Y+2+1,R27
00021e 9711      	SBIW R26,1
00021f e0e0      	LDI  R30,LOW(0)
000220 93ec      	ST   X,R30
                 ; 0000 0072     }
000221 5f0f      	SUBI R16,-1
000222 cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0073 }
000223 8119      	LDD  R17,Y+1
000224 8108      	LDD  R16,Y+0
000225 c0ea      	RJMP _0x20A000B
                 ;
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     while(*str != 0)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//         i++;
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0086 {
                 ; 0000 0087     unsigned char i = 0;
                 ; 0000 0088     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 0089     if(TIMER2_OVERFLOW>0)
                 ; 0000 008A     {
                 ; 0000 008B         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 008C for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 008D }
                 ; 0000 008E     UCSR0B |= (1<<RXEN0);
                 ; 0000 008F }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0092 {
                 _putch_USART0:
                 ; 0000 0093     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000226 9b5d      	SBIS 0xB,5
000227 cffe      	RJMP _0x13
                 ; 0000 0094     UDR0 = data;
000228 81e8      	LD   R30,Y
000229 b9ec      	OUT  0xC,R30
                 ; 0000 0095 }
                 _0x20A000D:
00022a 9621      	ADIW R28,1
00022b 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 0098 {
                 ; 0000 0099     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 009A     unsigned char i = 0;
                 ; 0000 009B     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009C     {
                 ; 0000 009D         putch_USART1(*(str+i));
                 ; 0000 009E     }
                 ; 0000 009F 
                 ; 0000 00A0     for(i = 0; i<IDX; i++)
                 ; 0000 00A1     {
                 ; 0000 00A2         *(str+i) = 0;
                 ; 0000 00A3     }
                 ; 0000 00A4 }
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00A7 {
                 _CRC16:
                 ; 0000 00A8     int i;
                 ; 0000 00A9     unsigned short crc, flag;
                 ; 0000 00AA     crc = 0xffff;
00022c 940e 1169 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00022e ef2f     +LDI R18 , LOW ( - 1 )
00022f ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00AB 
                 ; 0000 00AC     while(usDataLen--){
                 _0x1C:
000230 81ee      	LDD  R30,Y+6
000231 81ff      	LDD  R31,Y+6+1
000232 9731      	SBIW R30,1
000233 83ee      	STD  Y+6,R30
000234 83ff      	STD  Y+6+1,R31
000235 9631      	ADIW R30,1
000236 f0f9      	BREQ _0x1E
                 ; 0000 00AD         crc ^= *puchMsg++;
000237 85a8      	LDD  R26,Y+8
000238 85b9      	LDD  R27,Y+8+1
000239 91ed      	LD   R30,X+
00023a 87a8      	STD  Y+8,R26
00023b 87b9      	STD  Y+8+1,R27
00023c e0f0      	LDI  R31,0
                +
00023d 272e     +EOR R18 , R30
00023e 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00AE 
                 ; 0000 00AF         for (i=0; i<8; i++){
                +
00023f e000     +LDI R16 , LOW ( 0 )
000240 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
000241 3008     +CPI R16 , LOW ( 8 )
000242 e0e0     +LDI R30 , HIGH ( 8 )
000243 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000244 f484      	BRGE _0x21
                 ; 0000 00B0             flag = crc & 0x0001;
000245 01f9      	MOVW R30,R18
000246 70e1      	ANDI R30,LOW(0x1)
000247 70f0      	ANDI R31,HIGH(0x1)
000248 01af      	MOVW R20,R30
                 ; 0000 00B1             crc >>= 1;
000249 9536      	LSR  R19
00024a 9527      	ROR  R18
                 ; 0000 00B2             if(flag) crc ^= POLYNORMIAL;
00024b 2e04      	MOV  R0,R20
00024c 2a05      	OR   R0,R21
00024d f021      	BREQ _0x22
00024e e0e1      	LDI  R30,LOW(40961)
00024f eaf0      	LDI  R31,HIGH(40961)
                +
000250 272e     +EOR R18 , R30
000251 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B3         }
                 _0x22:
                +
000252 5f0f     +SUBI R16 , LOW ( - 1 )
000253 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000254 cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     }
000255 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00B5     return crc;
000256 01f9      	MOVW R30,R18
000257 940e 1170 	CALL __LOADLOCR6
000259 962a      	ADIW R28,10
00025a 9508      	RET
                 ; 0000 00B6 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00B9 {
                 _RTU_WriteOperate0:
                 ; 0000 00BA     char protocol[8];
                 ; 0000 00BB     unsigned short crc16;
                 ; 0000 00BC     int i=0;
                 ; 0000 00BD     //PACKET_BUFF_IDX = 0;
                 ; 0000 00BE 
                 ; 0000 00BF     protocol[0]=device_address;
00025b 940e 0cb6 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00C0     protocol[1]=0x06;
00025d e0e6      	LDI  R30,LOW(6)
00025e 940e 0cbe 	CALL SUBOPT_0x2
                 ; 0000 00C1     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C2     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C3     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C4     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C5     protocol[6]=0;
                 ; 0000 00C6     protocol[7]=0;
                 ; 0000 00C7 
                 ; 0000 00C8     crc16 = CRC16(protocol, 6);
                 ; 0000 00C9 
                 ; 0000 00CA     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00CB     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00CC 
                 ; 0000 00CD 
                 ; 0000 00CE     for(i=0;i<8;i++)
                 _0x24:
                +
000260 3028     +CPI R18 , LOW ( 8 )
000261 e0e0     +LDI R30 , HIGH ( 8 )
000262 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000263 f42c      	BRGE _0x25
                 ; 0000 00CF     {
                 ; 0000 00D0         putch_USART0(*(protocol+i));
000264 940e 0ce1 	CALL SUBOPT_0x3
                 ; 0000 00D1     }
                +
000266 5f2f     +SUBI R18 , LOW ( - 1 )
000267 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000268 cff7      	RJMP _0x24
                 _0x25:
                 ; 0000 00D2 }
000269 c00e      	RJMP _0x20A000C
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00D5 {
                 ; 0000 00D6     char protocol[8];
                 ; 0000 00D7     unsigned short crc16;
                 ; 0000 00D8     int i=0;
                 ; 0000 00D9    // PACKET_BUFF_IDX = 0;
                 ; 0000 00DA 
                 ; 0000 00DB     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00DC     protocol[1]=0x06;
                 ; 0000 00DD     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00DE     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00DF     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00E0     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00E1     protocol[6]=0;
                 ; 0000 00E2     protocol[7]=0;
                 ; 0000 00E3 
                 ; 0000 00E4     crc16 = CRC16(protocol, 6);
                 ; 0000 00E5 
                 ; 0000 00E6     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00E7     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00E8 
                 ; 0000 00E9 
                 ; 0000 00EA     for(i=0;i<8;i++)
                 ; 0000 00EB     {
                 ; 0000 00EC         putch_USART1(*(protocol+i));
                 ; 0000 00ED     }
                 ; 0000 00EE }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00F1 {
                 _RTU_ReedOperate0:
                 ; 0000 00F2     char protocol[8];
                 ; 0000 00F3     unsigned short crc16;
                 ; 0000 00F4     int i=0;
                 ; 0000 00F5     //PACKET_BUFF_IDX = 0;
                 ; 0000 00F6 
                 ; 0000 00F7     protocol[0]=device_address;
00026a 940e 0cb6 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00F8     protocol[1]=0x04;
00026c e0e4      	LDI  R30,LOW(4)
00026d 940e 0cbe 	CALL SUBOPT_0x2
                 ; 0000 00F9     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00FA     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00FB     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00FC     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00FD     protocol[6]=0;
                 ; 0000 00FE     protocol[7]=0;
                 ; 0000 00FF 
                 ; 0000 0100     crc16 = CRC16(protocol, 6);
                 ; 0000 0101 
                 ; 0000 0102     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 0103     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 0104 
                 ; 0000 0105 
                 ; 0000 0106     for(i=0;i<8;i++)
                 _0x2A:
                +
00026f 3028     +CPI R18 , LOW ( 8 )
000270 e0e0     +LDI R30 , HIGH ( 8 )
000271 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000272 f42c      	BRGE _0x2B
                 ; 0000 0107     {
                 ; 0000 0108         putch_USART0(*(protocol+i));
000273 940e 0ce1 	CALL SUBOPT_0x3
                 ; 0000 0109     }
                +
000275 5f2f     +SUBI R18 , LOW ( - 1 )
000276 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000277 cff7      	RJMP _0x2A
                 _0x2B:
                 ; 0000 010A }
                 _0x20A000C:
000278 940e 1172 	CALL __LOADLOCR4
00027a 9661      	ADIW R28,17
00027b 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 010D {
                 _Make_MSPEED:
                 ; 0000 010E     float VelocityR = 0;
                 ; 0000 010F     float VelocityL = 0;
                 ; 0000 0110 
                 ; 0000 0111     if(*_velocity>=0){
00027c 9728      	SBIW R28,8
00027d 940e 0ce9 	CALL SUBOPT_0x4
00027f e0e0      	LDI  R30,LOW(0)
000280 83ea      	STD  Y+2,R30
000281 83eb      	STD  Y+3,R30
000282 83ec      	STD  Y+4,R30
000283 83ed      	STD  Y+5,R30
000284 83ee      	STD  Y+6,R30
000285 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
000286 940e 0ced 	CALL SUBOPT_0x5
000288 2377      	TST  R23
000289 f042      	BRMI _0x2C
                 ; 0000 0112         *_angularV = -(*_angularV);
00028a 940e 0cf2 	CALL SUBOPT_0x6
00028c 940e 0efe 	CALL __ANEGF1
00028e 85ac      	LDD  R26,Y+12
00028f 85bd      	LDD  R27,Y+12+1
000290 940e 1132 	CALL __PUTDP1
                 ; 0000 0113     }
                 ; 0000 0114 
                 ; 0000 0115     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x2C:
000292 940e 0ced 	CALL SUBOPT_0x5
000294 937f      	PUSH R23
000295 936f      	PUSH R22
000296 93ff      	PUSH R31
000297 93ef      	PUSH R30
000298 940e 0cf2 	CALL SUBOPT_0x6
00029a 940e 0cf7 	CALL SUBOPT_0x7
00029c 91af      	POP  R26
00029d 91bf      	POP  R27
00029e 918f      	POP  R24
00029f 919f      	POP  R25
0002a0 940e 0fa4 	CALL __ADDF12
0002a2 940e 0d06 	CALL SUBOPT_0x8
                 ; 0000 0116     // VelocityR = *_velocity+(*_angularV*Length)/4;
                 ; 0000 0117     VelocityL = *_velocity-(*_angularV*Length)/2;
0002a4 940e 0ced 	CALL SUBOPT_0x5
0002a6 937f      	PUSH R23
0002a7 936f      	PUSH R22
0002a8 93ff      	PUSH R31
0002a9 93ef      	PUSH R30
0002aa 940e 0cf2 	CALL SUBOPT_0x6
0002ac 940e 0cf7 	CALL SUBOPT_0x7
0002ae 91af      	POP  R26
0002af 91bf      	POP  R27
0002b0 918f      	POP  R24
0002b1 919f      	POP  R25
0002b2 940e 0d0b 	CALL SUBOPT_0x9
0002b4 940e 1141 	CALL __PUTD1S0
                 ; 0000 0118     // VelocityL = *_velocity-(*_angularV*Length)/4;
                 ; 0000 0119 
                 ; 0000 011A     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0002b6 940e 0d10 	CALL SUBOPT_0xA
0002b8 940e 0d15 	CALL SUBOPT_0xB
0002ba 85aa      	LDD  R26,Y+10
0002bb 85bb      	LDD  R27,Y+10+1
0002bc 93ed      	ST   X+,R30
0002bd 93fc      	ST   X,R31
                 ; 0000 011B     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0002be 940e 0d24 	CALL SUBOPT_0xC
0002c0 940e 0d15 	CALL SUBOPT_0xB
0002c2 85a8      	LDD  R26,Y+8
0002c3 85b9      	LDD  R27,Y+8+1
0002c4 93ed      	ST   X+,R30
0002c5 93fc      	ST   X,R31
                 ; 0000 011C 
                 ; 0000 011D     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0002c6 85aa      	LDD  R26,Y+10
0002c7 85bb      	LDD  R27,Y+10+1
0002c8 940e 1128 	CALL __GETW1P
0002ca 32ec      	CPI  R30,LOW(0x12C)
0002cb e0a1      	LDI  R26,HIGH(0x12C)
0002cc 07fa      	CPC  R31,R26
0002cd f434      	BRGE _0x2E
0002ce 01df      	MOVW R26,R30
0002cf ede4      	LDI  R30,LOW(65236)
0002d0 effe      	LDI  R31,HIGH(65236)
0002d1 17ea      	CP   R30,R26
0002d2 07fb      	CPC  R31,R27
0002d3 f00c      	BRLT _0x2F
                 _0x2E:
0002d4 c014      	RJMP _0x30
                 _0x2F:
0002d5 85a8      	LDD  R26,Y+8
0002d6 85b9      	LDD  R27,Y+8+1
0002d7 940e 1128 	CALL __GETW1P
0002d9 32ec      	CPI  R30,LOW(0x12C)
0002da e0a1      	LDI  R26,HIGH(0x12C)
0002db 07fa      	CPC  R31,R26
0002dc f454      	BRGE _0x31
0002dd 85a8      	LDD  R26,Y+8
0002de 85b9      	LDD  R27,Y+8+1
0002df 940e 1128 	CALL __GETW1P
0002e1 01df      	MOVW R26,R30
0002e2 ede4      	LDI  R30,LOW(65236)
0002e3 effe      	LDI  R31,HIGH(65236)
0002e4 17ea      	CP   R30,R26
0002e5 07fb      	CPC  R31,R27
0002e6 f00c      	BRLT _0x32
                 _0x31:
0002e7 c001      	RJMP _0x30
                 _0x32:
0002e8 c001      	RJMP _0x33
                 _0x30:
0002e9 c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 011E         *R_RPM = 0;
0002ea 85aa      	LDD  R26,Y+10
0002eb 85bb      	LDD  R27,Y+10+1
0002ec 940e 0d27 	CALL SUBOPT_0xD
                 ; 0000 011F         *L_RPM = 0;
0002ee 85a8      	LDD  R26,Y+8
0002ef 85b9      	LDD  R27,Y+8+1
0002f0 940e 0d27 	CALL SUBOPT_0xD
                 ; 0000 0120     }
                 ; 0000 0121 }
                 _0x2D:
0002f2 940c 071e 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 0124 {
                 _oper_Disapath:
                 ; 0000 0125     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0002f4 e0e1      	LDI  R30,LOW(1)
0002f5 93ea      	ST   -Y,R30
0002f6 e7e9      	LDI  R30,LOW(121)
0002f7 e0f0      	LDI  R31,HIGH(121)
0002f8 93fa      	ST   -Y,R31
0002f9 93ea      	ST   -Y,R30
0002fa 81ed      	LDD  R30,Y+5
0002fb 81fe      	LDD  R31,Y+5+1
0002fc 940e 0d2c 	CALL SUBOPT_0xE
                 ; 0000 0126     delay_ms(5);
                 ; 0000 0127 
                 ; 0000 0128     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0002fe e0e2      	LDI  R30,LOW(2)
0002ff 93ea      	ST   -Y,R30
000300 e7e9      	LDI  R30,LOW(121)
000301 e0f0      	LDI  R31,HIGH(121)
000302 93fa      	ST   -Y,R31
000303 93ea      	ST   -Y,R30
000304 81eb      	LDD  R30,Y+3
000305 81fc      	LDD  R31,Y+3+1
000306 940e 10ab 	CALL __ANEGW1
000308 940e 0d2c 	CALL SUBOPT_0xE
                 ; 0000 0129     delay_ms(5);
                 ; 0000 012A 
                 ; 0000 012B     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00030a e0e1      	LDI  R30,LOW(1)
00030b 940e 0d36 	CALL SUBOPT_0xF
                 ; 0000 012C     delay_ms(5);
                 ; 0000 012D 
                 ; 0000 012E     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
00030d e0e2      	LDI  R30,LOW(2)
00030e 940e 0d36 	CALL SUBOPT_0xF
                 ; 0000 012F     delay_ms(5);
                 ; 0000 0130 }
                 _0x20A000B:
000310 9624      	ADIW R28,4
000311 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 0133 {
                 _get_RPM:
                 ; 0000 0134     unsigned char i = 0;
                 ; 0000 0135     unsigned int RPM = 0;
                 ; 0000 0136 
                 ; 0000 0137     RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
000312 940e 116b 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
000314 e010      	LDI  R17,0
                +
000315 e020     +LDI R18 , LOW ( 0 )
000316 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000317 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
000319 e0a0      	LDI  R26,LOW(0)
                +
00031a 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
00031c 940e 0d3e 	CALL SUBOPT_0x10
00031e 019f      	MOVW R18,R30
                 ; 0000 0138     *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
00031f 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
000321 e0a0      	LDI  R26,LOW(0)
                +
000322 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
000324 940e 0d3e 	CALL SUBOPT_0x10
000326 81ac      	LDD  R26,Y+4
000327 81bd      	LDD  R27,Y+4+1
000328 93ed      	ST   X+,R30
000329 93fc      	ST   X,R31
                 ; 0000 0139     for(i = 0; i<IDX; i++) *(str+i) = 0;
00032a e010      	LDI  R17,LOW(0)
                 _0x35:
00032b 81ee      	LDD  R30,Y+6
00032c 171e      	CP   R17,R30
00032d f450      	BRSH _0x36
00032e 2fe1      	MOV  R30,R17
00032f e0f0      	LDI  R31,0
000330 81af      	LDD  R26,Y+7
000331 85b8      	LDD  R27,Y+7+1
000332 0fae      	ADD  R26,R30
000333 1fbf      	ADC  R27,R31
000334 e0e0      	LDI  R30,LOW(0)
000335 93ec      	ST   X,R30
000336 5f1f      	SUBI R17,-1
000337 cff3      	RJMP _0x35
                 _0x36:
                 ; 0000 013B return RPM;
000338 01f9      	MOVW R30,R18
000339 940e 1172 	CALL __LOADLOCR4
00033b 9629      	ADIW R28,9
00033c 9508      	RET
                 ; 0000 013C }
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 013F {
                 _usart0_rxc:
00033d 93aa      	ST   -Y,R26
00033e 93ba      	ST   -Y,R27
00033f 93ea      	ST   -Y,R30
000340 b7ef      	IN   R30,SREG
000341 93ea      	ST   -Y,R30
                 ; 0000 0140     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000342 b5e4      	IN   R30,0x24
000343 31e9      	CPI  R30,LOW(0x19)
000344 f418      	BRSH _0x38
000345 e0e0      	LDI  R30,LOW(0)
000346 15e5      	CP   R30,R5
000347 f019      	BREQ _0x3A
                 _0x38:
000348 e0e0      	LDI  R30,LOW(0)
000349 15e4      	CP   R30,R4
00034a f419      	BRNE _0x37
                 _0x3A:
                 ; 0000 0141     {
                 ; 0000 0142         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034b 940e 0d42 	CALL SUBOPT_0x11
                 ; 0000 0143         PACKET_BUFF_IDX++;
                 ; 0000 0144         TCNT2 = 0;
                 ; 0000 0145     }
                 ; 0000 0146     else {
00034d c004      	RJMP _0x3C
                 _0x37:
                 ; 0000 0147         PACKET_BUFF_IDX = 0;
00034e 2444      	CLR  R4
                 ; 0000 0148         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034f 940e 0d42 	CALL SUBOPT_0x11
                 ; 0000 0149         PACKET_BUFF_IDX++;
                 ; 0000 014A         TCNT2 = 0;
                 ; 0000 014B         TIMER2_OVERFLOW = 0;
000351 2455      	CLR  R5
                 ; 0000 014C     }
                 _0x3C:
                 ; 0000 014D }
000352 91e9      	LD   R30,Y+
000353 bfef      	OUT  SREG,R30
000354 91e9      	LD   R30,Y+
000355 91b9      	LD   R27,Y+
000356 91a9      	LD   R26,Y+
000357 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 0150 {
                 _usart1_rxc:
000358 940e 0d4c 	CALL SUBOPT_0x12
                 ; 0000 0151     unsigned char i = 0;
                 ; 0000 0152     i = UDR1;
00035a 931a      	ST   -Y,R17
                 ;	i -> R17
00035b e010      	LDI  R17,0
00035c 9110 009c 	LDS  R17,156
                 ; 0000 0153     if((i == '<') && (CHECK_GETS == 0)){
00035e 331c      	CPI  R17,60
00035f f419      	BRNE _0x3E
000360 e0e0      	LDI  R30,LOW(0)
000361 15e8      	CP   R30,R8
000362 f009      	BREQ _0x3F
                 _0x3E:
000363 c007      	RJMP _0x3D
                 _0x3F:
                 ; 0000 0154         PORTB.3 = ~PORTB.3;
000364 9bc3      	SBIS 0x18,3
000365 c002      	RJMP _0x40
000366 98c3      	CBI  0x18,3
000367 c001      	RJMP _0x41
                 _0x40:
000368 9ac3      	SBI  0x18,3
                 _0x41:
                 ; 0000 0155         VELOCITY_BUFF_IDX = 0;
000369 2499      	CLR  R9
                 ; 0000 0156         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00036a c00e      	RJMP _0x60
                 ; 0000 0157         VELOCITY_BUFF_IDX++;
                 ; 0000 0158     }
                 ; 0000 0159     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x3D:
00036b 331e      	CPI  R17,62
00036c f419      	BRNE _0x44
00036d e0e0      	LDI  R30,LOW(0)
00036e 15e8      	CP   R30,R8
00036f f009      	BREQ _0x45
                 _0x44:
000370 c006      	RJMP _0x43
                 _0x45:
                 ; 0000 015A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000371 2de9      	MOV  R30,R9
000372 940e 0d51 	CALL SUBOPT_0x13
                 ; 0000 015B         VELOCITY_BUFF_IDX++;
                 ; 0000 015C         CHECK_GETS = 1;
000374 e0e1      	LDI  R30,LOW(1)
000375 2e8e      	MOV  R8,R30
                 ; 0000 015D     }
                 ; 0000 015E     else if(CHECK_GETS == 0){
000376 c005      	RJMP _0x46
                 _0x43:
000377 2088      	TST  R8
000378 f419      	BRNE _0x47
                 ; 0000 015F         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x60:
000379 2de9      	MOV  R30,R9
00037a 940e 0d51 	CALL SUBOPT_0x13
                 ; 0000 0160         VELOCITY_BUFF_IDX++;
                 ; 0000 0161     }
                 ; 0000 0162 }
                 _0x47:
                 _0x46:
00037c 9119      	LD   R17,Y+
00037d c014      	RJMP _0x61
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 0165 {
                 _timer2_comp:
00037e 93ea      	ST   -Y,R30
00037f b7ef      	IN   R30,SREG
                 ; 0000 0166     TIMER2_OVERFLOW++;
000380 9453      	INC  R5
                 ; 0000 0167 }
000381 bfef      	OUT  SREG,R30
000382 91e9      	LD   R30,Y+
000383 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 016A {
                 _timer0_ovf:
000384 940e 0d4c 	CALL SUBOPT_0x12
                 ; 0000 016B     TIMER0_OVERFLOW++;
000386 01f3      	MOVW R30,R6
000387 9631      	ADIW R30,1
000388 013f      	MOVW R6,R30
                 ; 0000 016C }
000389 c008      	RJMP _0x61
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0000 0170 {
                 _timer0_comp:
00038a 940e 0d4c 	CALL SUBOPT_0x12
                 ; 0000 0171     TIMER1_OVERFLOW++;
00038c 01f6      	MOVW R30,R12
00038d 9631      	ADIW R30,1
00038e 016f      	MOVW R12,R30
                 ; 0000 0172     TCNT1H = 0x00;
00038f e0e0      	LDI  R30,LOW(0)
000390 bded      	OUT  0x2D,R30
                 ; 0000 0173     TCNT1L = 0x00;
000391 bdec      	OUT  0x2C,R30
                 ; 0000 0174 }
                 _0x61:
000392 91e9      	LD   R30,Y+
000393 bfef      	OUT  SREG,R30
000394 91f9      	LD   R31,Y+
000395 91e9      	LD   R30,Y+
000396 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 0177 {
                 _main:
                 ; 0000 0178     float a_buff;
                 ; 0000 0179     float v_buff;
                 ; 0000 017A 
                 ; 0000 017B     int velocity = 0;
                 ; 0000 017C     int angularV = 0;
                 ; 0000 017D     int velocity_R = 0;
                 ; 0000 017E     int velocity_L = 0;
                 ; 0000 017F     int past_velocity_R = 0;
                 ; 0000 0180     int past_velocity_L = 0;
                 ; 0000 0181     int del_ms = 0;
                 ; 0000 0182 
                 ; 0000 0183     int currentRPM_R = 0;
                 ; 0000 0184     int currentRPM_L = 0;
                 ; 0000 0185     float currentV_R = 0;
                 ; 0000 0186     float currentV_L = 0;
                 ; 0000 0187     int goal_current_R = 0;
                 ; 0000 0188     int goal_current_L = 0;
                 ; 0000 0189 
                 ; 0000 018A     float d_velocity = 0;
                 ; 0000 018B     float d_angularV = 0;
                 ; 0000 018C     float control_time = 0;
                 ; 0000 018D 
                 ; 0000 018E     float d_x = 0;
                 ; 0000 018F     float d_y = 0;
                 ; 0000 0190     float d_angular = 0;
                 ; 0000 0191     int d_angular_circula = 0;
                 ; 0000 0192 
                 ; 0000 0193     float goal_x = 0;
                 ; 0000 0194     float goal_y = 0;
                 ; 0000 0195     float goal_angular = 0;
                 ; 0000 0196 
                 ; 0000 0197     float TIMER1_TIME = 0;
                 ; 0000 0198     float TIMER0_TIME = 0;
                 ; 0000 0199 
                 ; 0000 019A     unsigned char BUFF[500] = {0,};
                 ; 0000 019B 
                 ; 0000 019C     usart1_init(bps_115200);
000397 97ef      	SBIW R28,63
000398 9723      	SBIW R28,3
000399 50d2      	SUBI R29,2
                +
00039a e38a     +LDI R24 , LOW ( 570 )
00039b e092     +LDI R25 , HIGH ( 570 )
                 	__GETWRN 24,25,570
00039c e0a0      	LDI  R26,LOW(0)
00039d e0b0      	LDI  R27,HIGH(0)
00039e e8ec      	LDI  R30,LOW(_0x48*2)
00039f e0f0      	LDI  R31,HIGH(_0x48*2)
0003a0 940e 1177 	CALL __INITLOCW
                 ;	a_buff -> Y+574
                 ;	v_buff -> Y+570
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+568
                 ;	past_velocity_R -> Y+566
                 ;	past_velocity_L -> Y+564
                 ;	del_ms -> Y+562
                 ;	currentRPM_R -> Y+560
                 ;	currentRPM_L -> Y+558
                 ;	currentV_R -> Y+554
                 ;	currentV_L -> Y+550
                 ;	goal_current_R -> Y+548
                 ;	goal_current_L -> Y+546
                 ;	d_velocity -> Y+542
                 ;	d_angularV -> Y+538
                 ;	control_time -> Y+534
                 ;	d_x -> Y+530
                 ;	d_y -> Y+526
                 ;	d_angular -> Y+522
                 ;	d_angular_circula -> Y+520
                 ;	goal_x -> Y+516
                 ;	goal_y -> Y+512
                 ;	goal_angular -> Y+508
                 ;	TIMER1_TIME -> Y+504
                 ;	TIMER0_TIME -> Y+500
                 ;	BUFF -> Y+0
                +
0003a2 e000     +LDI R16 , LOW ( 0 )
0003a3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003a4 e020     +LDI R18 , LOW ( 0 )
0003a5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0003a6 e040     +LDI R20 , LOW ( 0 )
0003a7 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0003a8 e0e7      	LDI  R30,LOW(7)
0003a9 e0f0      	LDI  R31,HIGH(7)
0003aa 93fa      	ST   -Y,R31
0003ab 93ea      	ST   -Y,R30
0003ac de0c      	RCALL _usart1_init
                 ; 0000 019D     usart0_init(bps_115200);
0003ad e0e7      	LDI  R30,LOW(7)
0003ae e0f0      	LDI  R31,HIGH(7)
0003af 93fa      	ST   -Y,R31
0003b0 93ea      	ST   -Y,R30
0003b1 de1f      	RCALL _usart0_init
                 ; 0000 019E     timer2_init();
0003b2 de34      	RCALL _timer2_init
                 ; 0000 019F     timer0_init();
0003b3 de39      	RCALL _timer0_init
                 ; 0000 01A0     timer1_init();
0003b4 de3c      	RCALL _timer1_init
                 ; 0000 01A1     SREG |= 0x80;
0003b5 9478      	BSET 7
                 ; 0000 01A2     DDRB.1 = 1;
0003b6 9ab9      	SBI  0x17,1
                 ; 0000 01A3     DDRB.2 = 1;
0003b7 9aba      	SBI  0x17,2
                 ; 0000 01A4     DDRB.3 = 1;
0003b8 9abb      	SBI  0x17,3
                 ; 0000 01A5     delay_ms(5000);
0003b9 e8e8      	LDI  R30,LOW(5000)
0003ba e1f3      	LDI  R31,HIGH(5000)
0003bb 940e 0d57 	CALL SUBOPT_0x14
                 ; 0000 01A6     PORTB.1 = 0;
0003bd 98c1      	CBI  0x18,1
                 ; 0000 01A7     PORTB.2 = 1;
0003be 9ac2      	SBI  0x18,2
                 ; 0000 01A8 
                 ; 0000 01A9     TIMER0_OVERFLOW = 0;
0003bf 2466      	CLR  R6
0003c0 2477      	CLR  R7
                 ; 0000 01AA     TCNT0 = 0;
0003c1 e0e0      	LDI  R30,LOW(0)
0003c2 bfe2      	OUT  0x32,R30
                 ; 0000 01AB 
                 ; 0000 01AC     while(1)
                 _0x53:
                 ; 0000 01AD     {
                 ; 0000 01AE         if(CHECK_GETS)
0003c3 2088      	TST  R8
0003c4 f411      	BRNE PC+3
0003c5 940c 0459 	JMP _0x56
                 ; 0000 01AF         {
                 ; 0000 01B0             PORTB.1 = 1;
0003c7 9ac1      	SBI  0x18,1
                 ; 0000 01B1 
                 ; 0000 01B2             UCSR1B &= ~(1<<RXEN1);
0003c8 91e0 009a 	LDS  R30,154
0003ca 7eef      	ANDI R30,0xEF
0003cb 93e0 009a 	STS  154,R30
                 ; 0000 01B3             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
0003cd e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0003ce e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0003cf 93fa      	ST   -Y,R31
0003d0 93ea      	ST   -Y,R30
                +
0003d1 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0003d2 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0003d3 93fa      	ST   -Y,R31
0003d4 93ea      	ST   -Y,R30
0003d5 b7ed      	IN   R30,SPL
0003d6 b7fe      	IN   R31,SPH
0003d7 9731      	SBIW R30,1
0003d8 940e 1146 	CALL __PUTPARD1L
0003da 931f      	PUSH R17
0003db 930f      	PUSH R16
0003dc b7ed      	IN   R30,SPL
0003dd b7fe      	IN   R31,SPH
0003de 9731      	SBIW R30,1
0003df 940e 1146 	CALL __PUTPARD1L
0003e1 933f      	PUSH R19
0003e2 932f      	PUSH R18
0003e3 01fe      	MOVW R30,R28
0003e4 5ce2      	SUBI R30,LOW(-(574))
0003e5 4ffd      	SBCI R31,HIGH(-(574))
0003e6 2766      	CLR  R22
0003e7 2777      	CLR  R23
0003e8 940e 1148 	CALL __PUTPARD1
0003ea e08c      	LDI  R24,12
0003eb 940e 0acb 	CALL _sscanf
0003ed 9660      	ADIW R28,16
0003ee 912f      	POP  R18
0003ef 913f      	POP  R19
0003f0 910f      	POP  R16
0003f1 911f      	POP  R17
                 ; 0000 01B4             // sscanf(VELOCITY_BUFF,"<%d,%d,%f,%f,%f>", &velocity, &angularV, &goal_x, &goal_y, goal_angular);
                 ; 0000 01B5 
                 ; 0000 01B6             if(!del_ms){
                +
0003f2 01fe     +MOVW R30 , R28
0003f3 5cee     +SUBI R30 , LOW ( - 562 )
0003f4 4ffd     +SBCI R31 , HIGH ( - 562 )
0003f5 9001     +LD R0 , Z +
0003f6 81f0     +LD R31 , Z
0003f7 2de0     +MOV R30 , R0
                 	__GETW1SX 562
0003f8 9730      	SBIW R30,0
0003f9 f4b1      	BRNE _0x59
                 ; 0000 01B7                 d_x = 0;
0003fa e0e0      	LDI  R30,LOW(0)
                +
0003fb 01de     +MOVW R26 , R28
0003fc 5eae     +SUBI R26 , LOW ( - 530 )
0003fd 4fbd     +SBCI R27 , HIGH ( - 530 )
0003fe 93ed     +ST X + , R30
0003ff 93ed     +ST X + , R30
000400 93ed     +ST X + , R30
000401 93ec     +ST X , R30
                 	__CLRD1SX 530
                 ; 0000 01B8                 d_y = 0;
                +
000402 01de     +MOVW R26 , R28
000403 5fa2     +SUBI R26 , LOW ( - 526 )
000404 4fbd     +SBCI R27 , HIGH ( - 526 )
000405 93ed     +ST X + , R30
000406 93ed     +ST X + , R30
000407 93ed     +ST X + , R30
000408 93ec     +ST X , R30
                 	__CLRD1SX 526
                 ; 0000 01B9                 d_angular = 0;
                +
000409 01de     +MOVW R26 , R28
00040a 5fa6     +SUBI R26 , LOW ( - 522 )
00040b 4fbd     +SBCI R27 , HIGH ( - 522 )
00040c 93ed     +ST X + , R30
00040d 93ed     +ST X + , R30
00040e 93ed     +ST X + , R30
00040f 93ec     +ST X , R30
                 	__CLRD1SX 522
                 ; 0000 01BA             }
                 ; 0000 01BB 
                 ; 0000 01BC             v_buff = (float)velocity/1000;
                 _0x59:
000410 01f8      	MOVW R30,R16
000411 940e 0d5b 	CALL SUBOPT_0x15
                +
000413 01de     +MOVW R26 , R28
000414 5ca6     +SUBI R26 , LOW ( - 570 )
000415 4fbd     +SBCI R27 , HIGH ( - 570 )
000416 93ed     +ST X + , R30
000417 93fd     +ST X + , R31
000418 936d     +ST X + , R22
000419 937c     +ST X , R23
                 	__PUTD1SX 570
                 ; 0000 01BD             a_buff = (float)angularV/1000;
00041a 01f9      	MOVW R30,R18
00041b 940e 0d5b 	CALL SUBOPT_0x15
                +
00041d 01de     +MOVW R26 , R28
00041e 5ca2     +SUBI R26 , LOW ( - 574 )
00041f 4fbd     +SBCI R27 , HIGH ( - 574 )
000420 93ed     +ST X + , R30
000421 93fd     +ST X + , R31
000422 936d     +ST X + , R22
000423 937c     +ST X , R23
                 	__PUTD1SX 574
                 ; 0000 01BE 
                 ; 0000 01BF             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000424 01fe      	MOVW R30,R28
000425 5ce6      	SUBI R30,LOW(-(570))
000426 4ffd      	SBCI R31,HIGH(-(570))
000427 93fa      	ST   -Y,R31
000428 93ea      	ST   -Y,R30
000429 01fe      	MOVW R30,R28
00042a 5ce0      	SUBI R30,LOW(-(576))
00042b 4ffd      	SBCI R31,HIGH(-(576))
00042c 93fa      	ST   -Y,R31
00042d 93ea      	ST   -Y,R30
00042e b7ed      	IN   R30,SPL
00042f b7fe      	IN   R31,SPH
000430 9731      	SBIW R30,1
000431 93fa      	ST   -Y,R31
000432 93ea      	ST   -Y,R30
000433 935f      	PUSH R21
000434 934f      	PUSH R20
000435 01fe      	MOVW R30,R28
000436 5ce2      	SUBI R30,LOW(-(574))
000437 4ffd      	SBCI R31,HIGH(-(574))
000438 93fa      	ST   -Y,R31
000439 93ea      	ST   -Y,R30
00043a de41      	RCALL _Make_MSPEED
00043b 914f      	POP  R20
00043c 915f      	POP  R21
                 ; 0000 01C0 
                 ; 0000 01C1             oper_Disapath(velocity_R, velocity_L);
00043d 935a      	ST   -Y,R21
00043e 934a      	ST   -Y,R20
                +
00043f 01fe     +MOVW R30 , R28
000440 5ce6     +SUBI R30 , LOW ( - 570 )
000441 4ffd     +SBCI R31 , HIGH ( - 570 )
000442 9001     +LD R0 , Z +
000443 81f0     +LD R31 , Z
000444 2de0     +MOV R30 , R0
                 	__GETW1SX 570
000445 93fa      	ST   -Y,R31
000446 93ea      	ST   -Y,R30
000447 deac      	RCALL _oper_Disapath
                 ; 0000 01C2 
                 ; 0000 01C3             TIMER1_TIME = 0;
000448 e0e0      	LDI  R30,LOW(0)
                +
000449 01de     +MOVW R26 , R28
00044a 50a8     +SUBI R26 , LOW ( - 504 )
00044b 4fbe     +SBCI R27 , HIGH ( - 504 )
00044c 93ed     +ST X + , R30
00044d 93ed     +ST X + , R30
00044e 93ed     +ST X + , R30
00044f 93ec     +ST X , R30
                 	__CLRD1SX 504
                 ; 0000 01C4             TIMER1_OVERFLOW = 0;
000450 24cc      	CLR  R12
000451 24dd      	CLR  R13
                 ; 0000 01C5             TCNT1L = 0;
000452 bdec      	OUT  0x2C,R30
                 ; 0000 01C6 
                 ; 0000 01C7             CHECK_GETS = 0;
000453 2488      	CLR  R8
                 ; 0000 01C8             UCSR1B |=(1<<RXEN1);
000454 91e0 009a 	LDS  R30,154
000456 61e0      	ORI  R30,0x10
000457 93e0 009a 	STS  154,R30
                 ; 0000 01C9             // PORTB.1 = 0;
                 ; 0000 01CA         }
                 ; 0000 01CB 
                 ; 0000 01CC         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0x56:
000459 01f6      	MOVW R30,R12
00045a efaf      	LDI  R26,LOW(255)
00045b e0b0      	LDI  R27,HIGH(255)
00045c 940e 10cc 	CALL __MULW12U
00045e 01df      	MOVW R26,R30
00045f b5ec      	IN   R30,0x2C
000460 940e 0d3e 	CALL SUBOPT_0x10
000462 2766      	CLR  R22
000463 2777      	CLR  R23
000464 940e 0f6a 	CALL __CDF1
                +
000466 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000467 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
000468 e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
000469 e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00046a 940e 0ff4 	CALL __MULF12
                +
00046c 01de     +MOVW R26 , R28
00046d 50a8     +SUBI R26 , LOW ( - 504 )
00046e 4fbe     +SBCI R27 , HIGH ( - 504 )
00046f 93ed     +ST X + , R30
000470 93fd     +ST X + , R31
000471 936d     +ST X + , R22
000472 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 01CD 
                 ; 0000 01CE         if(del_ms<TIMER1_TIME)
                +
000473 01de     +MOVW R26 , R28
000474 5cae     +SUBI R26 , LOW ( - 562 )
000475 4fbd     +SBCI R27 , HIGH ( - 562 )
000476 900d     +LD R0 , X +
000477 91bc     +LD R27 , X
000478 2da0     +MOV R26 , R0
                 	__GETW2SX 562
000479 940e 10c7 	CALL __CWD2
00047b 940e 114f 	CALL __CDF2
00047d 940e 1087 	CALL __CMPF12
00047f f4c0      	BRSH _0x5A
                 ; 0000 01CF         {
                 ; 0000 01D0             oper_Disapath(0,0);
000480 e0e0      	LDI  R30,LOW(0)
000481 e0f0      	LDI  R31,HIGH(0)
000482 93fa      	ST   -Y,R31
000483 93ea      	ST   -Y,R30
000484 93fa      	ST   -Y,R31
000485 93ea      	ST   -Y,R30
000486 de6d      	RCALL _oper_Disapath
                 ; 0000 01D1             TIMER1_OVERFLOW = 0;
000487 24cc      	CLR  R12
000488 24dd      	CLR  R13
                 ; 0000 01D2             v_buff = 0;
000489 e0e0      	LDI  R30,LOW(0)
                +
00048a 01de     +MOVW R26 , R28
00048b 5ca6     +SUBI R26 , LOW ( - 570 )
00048c 4fbd     +SBCI R27 , HIGH ( - 570 )
00048d 93ed     +ST X + , R30
00048e 93ed     +ST X + , R30
00048f 93ed     +ST X + , R30
000490 93ec     +ST X , R30
                 	__CLRD1SX 570
                 ; 0000 01D3             a_buff = 0;
                +
000491 01de     +MOVW R26 , R28
000492 5ca2     +SUBI R26 , LOW ( - 574 )
000493 4fbd     +SBCI R27 , HIGH ( - 574 )
000494 93ed     +ST X + , R30
000495 93ed     +ST X + , R30
000496 93ed     +ST X + , R30
000497 93ec     +ST X , R30
                 	__CLRD1SX 574
                 ; 0000 01D4         }
                 ; 0000 01D5 
                 ; 0000 01D6         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 _0x5A:
000498 e0e1      	LDI  R30,LOW(1)
000499 940e 0d68 	CALL SUBOPT_0x16
                 ; 0000 01D7         delay_ms(5);
                 ; 0000 01D8         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
00049b e0e0      	LDI  R30,LOW(_PACKET_BUFF)
00049c e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
00049d 93fa      	ST   -Y,R31
00049e 93ea      	ST   -Y,R30
00049f 924a      	ST   -Y,R4
0004a0 01fe      	MOVW R30,R28
0004a1 5de9      	SUBI R30,LOW(-(551))
0004a2 4ffd      	SBCI R31,HIGH(-(551))
0004a3 93fa      	ST   -Y,R31
0004a4 93ea      	ST   -Y,R30
0004a5 de6c      	RCALL _get_RPM
                +
0004a6 01de     +MOVW R26 , R28
0004a7 5da0     +SUBI R26 , LOW ( - 560 )
0004a8 4fbd     +SBCI R27 , HIGH ( - 560 )
0004a9 93ed     +ST X + , R30
0004aa 93fc     +ST X , R31
                 	__PUTW1SX 560
                 ; 0000 01D9         delay_ms(5);
0004ab e0e5      	LDI  R30,LOW(5)
0004ac e0f0      	LDI  R31,HIGH(5)
0004ad 940e 0d57 	CALL SUBOPT_0x14
                 ; 0000 01DA         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0004af e0e2      	LDI  R30,LOW(2)
0004b0 940e 0d68 	CALL SUBOPT_0x16
                 ; 0000 01DB         delay_ms(5);
                 ; 0000 01DC         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
0004b2 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004b3 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004b4 93fa      	ST   -Y,R31
0004b5 93ea      	ST   -Y,R30
0004b6 924a      	ST   -Y,R4
0004b7 01fe      	MOVW R30,R28
0004b8 5deb      	SUBI R30,LOW(-(549))
0004b9 4ffd      	SBCI R31,HIGH(-(549))
0004ba 93fa      	ST   -Y,R31
0004bb 93ea      	ST   -Y,R30
0004bc de55      	RCALL _get_RPM
0004bd 940e 10ab 	CALL __ANEGW1
                +
0004bf 01de     +MOVW R26 , R28
0004c0 5da2     +SUBI R26 , LOW ( - 558 )
0004c1 4fbd     +SBCI R27 , HIGH ( - 558 )
0004c2 93ed     +ST X + , R30
0004c3 93fc     +ST X , R31
                 	__PUTW1SX 558
                 ; 0000 01DD         delay_ms(5);
0004c4 e0e5      	LDI  R30,LOW(5)
0004c5 e0f0      	LDI  R31,HIGH(5)
0004c6 940e 0d57 	CALL SUBOPT_0x14
                 ; 0000 01DE 
                 ; 0000 01DF         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
                +
0004c8 01fe     +MOVW R30 , R28
0004c9 5de0     +SUBI R30 , LOW ( - 560 )
0004ca 4ffd     +SBCI R31 , HIGH ( - 560 )
0004cb 9001     +LD R0 , Z +
0004cc 81f0     +LD R31 , Z
0004cd 2de0     +MOV R30 , R0
                 	__GETW1SX 560
0004ce 940e 0d74 	CALL SUBOPT_0x17
                +
0004d0 01de     +MOVW R26 , R28
0004d1 5da6     +SUBI R26 , LOW ( - 554 )
0004d2 4fbd     +SBCI R27 , HIGH ( - 554 )
0004d3 93ed     +ST X + , R30
0004d4 93fd     +ST X + , R31
0004d5 936d     +ST X + , R22
0004d6 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 01E0         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
0004d7 01fe     +MOVW R30 , R28
0004d8 5de2     +SUBI R30 , LOW ( - 558 )
0004d9 4ffd     +SBCI R31 , HIGH ( - 558 )
0004da 9001     +LD R0 , Z +
0004db 81f0     +LD R31 , Z
0004dc 2de0     +MOV R30 , R0
                 	__GETW1SX 558
0004dd 940e 0d74 	CALL SUBOPT_0x17
                +
0004df 01de     +MOVW R26 , R28
0004e0 5daa     +SUBI R26 , LOW ( - 550 )
0004e1 4fbd     +SBCI R27 , HIGH ( - 550 )
0004e2 93ed     +ST X + , R30
0004e3 93fd     +ST X + , R31
0004e4 936d     +ST X + , R22
0004e5 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 01E1 
                 ; 0000 01E2         d_velocity = (currentV_R + currentV_L)/2;
0004e6 940e 0d81 	CALL SUBOPT_0x18
                +
0004e8 01de     +MOVW R26 , R28
0004e9 5da6     +SUBI R26 , LOW ( - 554 )
0004ea 4fbd     +SBCI R27 , HIGH ( - 554 )
0004eb 900d     +LD R0 , X +
0004ec 901d     +LD R1 , X +
0004ed 918d     +LD R24 , X +
0004ee 919c     +LD R25 , X
0004ef 01d0     +MOVW R26 , R0
                 	__GETD2SX 554
0004f0 940e 0fa4 	CALL __ADDF12
0004f2 01df      	MOVW R26,R30
0004f3 01cb      	MOVW R24,R22
                +
0004f4 e0e0     +LDI R30 , LOW ( 0x40000000 )
0004f5 e0f0     +LDI R31 , HIGH ( 0x40000000 )
0004f6 e060     +LDI R22 , BYTE3 ( 0x40000000 )
0004f7 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0004f8 940e 1042 	CALL __DIVF21
                +
0004fa 01de     +MOVW R26 , R28
0004fb 5ea2     +SUBI R26 , LOW ( - 542 )
0004fc 4fbd     +SBCI R27 , HIGH ( - 542 )
0004fd 93ed     +ST X + , R30
0004fe 93fd     +ST X + , R31
0004ff 936d     +ST X + , R22
000500 937c     +ST X , R23
                 	__PUTD1SX 542
                 ; 0000 01E3         // d_angularV = (2*(currentV_R-currentV_L))/Length;
                 ; 0000 01E4         d_angularV = (currentV_R-currentV_L)/Length;
                +
000501 01de     +MOVW R26 , R28
000502 5daa     +SUBI R26 , LOW ( - 550 )
000503 4fbd     +SBCI R27 , HIGH ( - 550 )
000504 900d     +LD R0 , X +
000505 901d     +LD R1 , X +
000506 918d     +LD R24 , X +
000507 919c     +LD R25 , X
000508 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
                +
000509 01fe     +MOVW R30 , R28
00050a 5de6     +SUBI R30 , LOW ( - 554 )
00050b 4ffd     +SBCI R31 , HIGH ( - 554 )
00050c 9001     +LD R0 , Z +
00050d 9011     +LD R1 , Z +
00050e 9161     +LD R22 , Z +
00050f 8170     +LD R23 , Z
000510 01f0     +MOVW R30 , R0
                 	__GETD1SX 554
000511 940e 0f9d 	CALL __SUBF12
000513 01df      	MOVW R26,R30
000514 01cb      	MOVW R24,R22
                +
000515 e3eb     +LDI R30 , LOW ( 0x3E8FDF3B )
000516 edff     +LDI R31 , HIGH ( 0x3E8FDF3B )
000517 e86f     +LDI R22 , BYTE3 ( 0x3E8FDF3B )
000518 e37e     +LDI R23 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD1N 0x3E8FDF3B
000519 940e 1042 	CALL __DIVF21
                +
00051b 01de     +MOVW R26 , R28
00051c 5ea6     +SUBI R26 , LOW ( - 538 )
00051d 4fbd     +SBCI R27 , HIGH ( - 538 )
00051e 93ed     +ST X + , R30
00051f 93fd     +ST X + , R31
000520 936d     +ST X + , R22
000521 937c     +ST X , R23
                 	__PUTD1SX 538
                 ; 0000 01E5 
                 ; 0000 01E6         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
000522 01f3      	MOVW R30,R6
000523 efaf      	LDI  R26,LOW(255)
000524 e0b0      	LDI  R27,HIGH(255)
000525 940e 10cc 	CALL __MULW12U
000527 01df      	MOVW R26,R30
000528 b7e2      	IN   R30,0x32
000529 940e 0d3e 	CALL SUBOPT_0x10
00052b 2766      	CLR  R22
00052c 2777      	CLR  R23
00052d 940e 0f6a 	CALL __CDF1
                +
00052f eaae     +LDI R26 , LOW ( 0x3891A2AE )
000530 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000531 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000532 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000533 940e 0ff4 	CALL __MULF12
                +
000535 01de     +MOVW R26 , R28
000536 5eaa     +SUBI R26 , LOW ( - 534 )
000537 4fbd     +SBCI R27 , HIGH ( - 534 )
000538 93ed     +ST X + , R30
000539 93fd     +ST X + , R31
00053a 936d     +ST X + , R22
00053b 937c     +ST X , R23
                 	__PUTD1SX 534
                 ; 0000 01E7         TIMER0_OVERFLOW = 0;
00053c 2466      	CLR  R6
00053d 2477      	CLR  R7
                 ; 0000 01E8         TCNT0 = 0;
00053e e0e0      	LDI  R30,LOW(0)
00053f bfe2      	OUT  0x32,R30
                 ; 0000 01E9 
                 ; 0000 01EA         if((d_velocity!=0) ||(d_angularV!=0)){
000540 940e 0d8a 	CALL SUBOPT_0x19
000542 940e 1163 	CALL __CPD02
000544 f461      	BRNE _0x5C
                +
000545 01de     +MOVW R26 , R28
000546 5ea6     +SUBI R26 , LOW ( - 538 )
000547 4fbd     +SBCI R27 , HIGH ( - 538 )
000548 900d     +LD R0 , X +
000549 901d     +LD R1 , X +
00054a 918d     +LD R24 , X +
00054b 919c     +LD R25 , X
00054c 01d0     +MOVW R26 , R0
                 	__GETD2SX 538
00054d 940e 1163 	CALL __CPD02
00054f f409      	BRNE _0x5C
000550 c06e      	RJMP _0x5B
                 _0x5C:
                 ; 0000 01EB             d_x += d_velocity*control_time*cos(control_time*d_angularV);
000551 940e 0d93 	CALL SUBOPT_0x1A
000553 937f      	PUSH R23
000554 936f      	PUSH R22
000555 93ff      	PUSH R31
000556 93ef      	PUSH R30
000557 940e 0d9f 	CALL SUBOPT_0x1B
000559 940e 0bc6 	CALL _cos
00055b 91af      	POP  R26
00055c 91bf      	POP  R27
00055d 918f      	POP  R24
00055e 919f      	POP  R25
00055f 940e 0ff4 	CALL __MULF12
                +
000561 01de     +MOVW R26 , R28
000562 5eae     +SUBI R26 , LOW ( - 530 )
000563 4fbd     +SBCI R27 , HIGH ( - 530 )
000564 900d     +LD R0 , X +
000565 901d     +LD R1 , X +
000566 918d     +LD R24 , X +
000567 919c     +LD R25 , X
000568 01d0     +MOVW R26 , R0
                 	__GETD2SX 530
000569 940e 0fa4 	CALL __ADDF12
                +
00056b 01de     +MOVW R26 , R28
00056c 5eae     +SUBI R26 , LOW ( - 530 )
00056d 4fbd     +SBCI R27 , HIGH ( - 530 )
00056e 93ed     +ST X + , R30
00056f 93fd     +ST X + , R31
000570 936d     +ST X + , R22
000571 937c     +ST X , R23
                 	__PUTD1SX 530
                 ; 0000 01EC             d_y += d_velocity*control_time*sin(control_time*d_angularV);
000572 940e 0d93 	CALL SUBOPT_0x1A
000574 937f      	PUSH R23
000575 936f      	PUSH R22
000576 93ff      	PUSH R31
000577 93ef      	PUSH R30
000578 940e 0d9f 	CALL SUBOPT_0x1B
00057a 940e 0b3f 	CALL _sin
00057c 91af      	POP  R26
00057d 91bf      	POP  R27
00057e 918f      	POP  R24
00057f 919f      	POP  R25
000580 940e 0ff4 	CALL __MULF12
                +
000582 01de     +MOVW R26 , R28
000583 5fa2     +SUBI R26 , LOW ( - 526 )
000584 4fbd     +SBCI R27 , HIGH ( - 526 )
000585 900d     +LD R0 , X +
000586 901d     +LD R1 , X +
000587 918d     +LD R24 , X +
000588 919c     +LD R25 , X
000589 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
00058a 940e 0fa4 	CALL __ADDF12
                +
00058c 01de     +MOVW R26 , R28
00058d 5fa2     +SUBI R26 , LOW ( - 526 )
00058e 4fbd     +SBCI R27 , HIGH ( - 526 )
00058f 93ed     +ST X + , R30
000590 93fd     +ST X + , R31
000591 936d     +ST X + , R22
000592 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 01ED             d_angular += control_time*d_angularV;
                +
000593 01fe     +MOVW R30 , R28
000594 5ee6     +SUBI R30 , LOW ( - 538 )
000595 4ffd     +SBCI R31 , HIGH ( - 538 )
000596 9001     +LD R0 , Z +
000597 9011     +LD R1 , Z +
000598 9161     +LD R22 , Z +
000599 8170     +LD R23 , Z
00059a 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
00059b 01de     +MOVW R26 , R28
00059c 5eaa     +SUBI R26 , LOW ( - 534 )
00059d 4fbd     +SBCI R27 , HIGH ( - 534 )
00059e 900d     +LD R0 , X +
00059f 901d     +LD R1 , X +
0005a0 918d     +LD R24 , X +
0005a1 919c     +LD R25 , X
0005a2 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
0005a3 940e 0ff4 	CALL __MULF12
0005a5 940e 0db4 	CALL SUBOPT_0x1C
0005a7 940e 0fa4 	CALL __ADDF12
                +
0005a9 01de     +MOVW R26 , R28
0005aa 5fa6     +SUBI R26 , LOW ( - 522 )
0005ab 4fbd     +SBCI R27 , HIGH ( - 522 )
0005ac 93ed     +ST X + , R30
0005ad 93fd     +ST X + , R31
0005ae 936d     +ST X + , R22
0005af 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 01EE             d_angular_circula = (int)(d_angular*Circular);
0005b0 940e 0db4 	CALL SUBOPT_0x1C
                +
0005b2 efe6     +LDI R30 , LOW ( 0x426528F6 )
0005b3 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
0005b4 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
0005b5 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
0005b6 940e 0ff4 	CALL __MULF12
0005b8 940e 0f33 	CALL __CFD1
                +
0005ba 01de     +MOVW R26 , R28
0005bb 5fa8     +SUBI R26 , LOW ( - 520 )
0005bc 4fbd     +SBCI R27 , HIGH ( - 520 )
0005bd 93ed     +ST X + , R30
0005be 93fc     +ST X , R31
                 	__PUTW1SX 520
                 ; 0000 01EF         }
                 ; 0000 01F0 
                 ; 0000 01F1         TIMER0_TIME += control_time;
                 _0x5B:
                +
0005bf 01fe     +MOVW R30 , R28
0005c0 5eea     +SUBI R30 , LOW ( - 534 )
0005c1 4ffd     +SBCI R31 , HIGH ( - 534 )
0005c2 9001     +LD R0 , Z +
0005c3 9011     +LD R1 , Z +
0005c4 9161     +LD R22 , Z +
0005c5 8170     +LD R23 , Z
0005c6 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
0005c7 940e 0dbd 	CALL SUBOPT_0x1D
0005c9 940e 0fa4 	CALL __ADDF12
                +
0005cb 01de     +MOVW R26 , R28
0005cc 50ac     +SUBI R26 , LOW ( - 500 )
0005cd 4fbe     +SBCI R27 , HIGH ( - 500 )
0005ce 93ed     +ST X + , R30
0005cf 93fd     +ST X + , R31
0005d0 936d     +ST X + , R22
0005d1 937c     +ST X , R23
                 	__PUTD1SX 500
                 ; 0000 01F2         if(TIMER0_TIME>0.1){
0005d2 940e 0dbd 	CALL SUBOPT_0x1D
0005d4 940e 0dc6 	CALL SUBOPT_0x1E
0005d6 940e 1087 	CALL __CMPF12
0005d8 f009      	BREQ PC+2
0005d9 f410      	BRCC PC+3
0005da 940c 0615 	JMP  _0x5E
                 ; 0000 01F3             sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
0005dc 01fe      	MOVW R30,R28
0005dd 93fa      	ST   -Y,R31
0005de 93ea      	ST   -Y,R30
                +
0005df edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0005e0 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0005e1 93fa      	ST   -Y,R31
0005e2 93ea      	ST   -Y,R30
                +
0005e3 01fe     +MOVW R30 , R28
0005e4 5dee     +SUBI R30 , LOW ( - 546 )
0005e5 4ffd     +SBCI R31 , HIGH ( - 546 )
0005e6 9001     +LD R0 , Z +
0005e7 9011     +LD R1 , Z +
0005e8 9161     +LD R22 , Z +
0005e9 8170     +LD R23 , Z
0005ea 01f0     +MOVW R30 , R0
                 	__GETD1SX 546
0005eb 940e 1148 	CALL __PUTPARD1
                +
0005ed 01fe     +MOVW R30 , R28
0005ee 5bee     +SUBI R30 , LOW ( - 578 )
0005ef 4ffd     +SBCI R31 , HIGH ( - 578 )
0005f0 9001     +LD R0 , Z +
0005f1 9011     +LD R1 , Z +
0005f2 9161     +LD R22 , Z +
0005f3 8170     +LD R23 , Z
0005f4 01f0     +MOVW R30 , R0
                 	__GETD1SX 578
0005f5 940e 1148 	CALL __PUTPARD1
0005f7 940e 0d81 	CALL SUBOPT_0x18
0005f9 940e 1148 	CALL __PUTPARD1
                +
0005fb 01fe     +MOVW R30 , R28
0005fc 5be2     +SUBI R30 , LOW ( - 590 )
0005fd 4ffd     +SBCI R31 , HIGH ( - 590 )
0005fe 9001     +LD R0 , Z +
0005ff 9011     +LD R1 , Z +
000600 9161     +LD R22 , Z +
000601 8170     +LD R23 , Z
000602 01f0     +MOVW R30 , R0
                 	__GETD1SX 590
000603 940e 1148 	CALL __PUTPARD1
000605 e180      	LDI  R24,16
000606 940e 093c 	CALL _sprintf
000608 9664      	ADIW R28,20
                 ; 0000 01F4             // sprintf(BUFF, "%f, %f\n", d_x, d_y,currentRPM_R, current);
                 ; 0000 01F5             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 01F6             // sprintf(BUFF, "%.3f, %.3f, %4d\n", d_x, d_y, d_angular_circula);
                 ; 0000 01F7             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 01F8             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 01F9             puts_USART1(BUFF);
000609 01fe      	MOVW R30,R28
00060a 93fa      	ST   -Y,R31
00060b 93ea      	ST   -Y,R30
00060c dbfa      	RCALL _puts_USART1
                 ; 0000 01FA              TIMER0_TIME = 0;
00060d e0e0      	LDI  R30,LOW(0)
                +
00060e 01de     +MOVW R26 , R28
00060f 50ac     +SUBI R26 , LOW ( - 500 )
000610 4fbe     +SBCI R27 , HIGH ( - 500 )
000611 93ed     +ST X + , R30
000612 93ed     +ST X + , R30
000613 93ed     +ST X + , R30
000614 93ec     +ST X , R30
                 	__CLRD1SX 500
                 ; 0000 01FB         }
                 ; 0000 01FC 
                 ; 0000 01FD     }
                 _0x5E:
000615 cdad      	RJMP _0x53
                 ; 0000 01FE }
                 _0x5F:
000616 cfff      	RJMP _0x5F
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000617 931a      	ST   -Y,R17
000618 930a      	ST   -Y,R16
000619 81aa      	LDD  R26,Y+2
00061a 81bb      	LDD  R27,Y+2+1
00061b 9612      	ADIW R26,2
00061c 940e 1128 	CALL __GETW1P
00061e 9730      	SBIW R30,0
00061f f129      	BREQ _0x2000010
000620 81aa      	LDD  R26,Y+2
000621 81bb      	LDD  R27,Y+2+1
000622 9614      	ADIW R26,4
000623 940e 1128 	CALL __GETW1P
000625 018f      	MOVW R16,R30
000626 9730      	SBIW R30,0
000627 f061      	BREQ _0x2000012
                +
000628 3002     +CPI R16 , LOW ( 2 )
000629 e0e0     +LDI R30 , HIGH ( 2 )
00062a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00062b f0c0      	BRLO _0x2000013
00062c 01f8      	MOVW R30,R16
00062d 9731      	SBIW R30,1
00062e 018f      	MOVW R16,R30
                +
00062f 81aa     +LDD R26 , Y + 2
000630 81bb     +LDD R27 , Y + 2 + 1
000631 9614     +ADIW R26 , 4
000632 93ed     +ST X + , R30
000633 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000634 81aa      	LDD  R26,Y+2
000635 81bb      	LDD  R27,Y+2+1
000636 9612      	ADIW R26,2
000637 940e 0dcb 	CALL SUBOPT_0x1F
000639 9731      	SBIW R30,1
00063a 81ac      	LDD  R26,Y+4
00063b 83a0      	STD  Z+0,R26
00063c 81aa      	LDD  R26,Y+2
00063d 81bb      	LDD  R27,Y+2+1
00063e 940e 1128 	CALL __GETW1P
000640 23ff      	TST  R31
000641 f012      	BRMI _0x2000014
000642 940e 0dcb 	CALL SUBOPT_0x1F
                 _0x2000014:
                 _0x2000013:
000644 c006      	RJMP _0x2000015
                 _0x2000010:
000645 81aa      	LDD  R26,Y+2
000646 81bb      	LDD  R27,Y+2+1
000647 efef      	LDI  R30,LOW(65535)
000648 efff      	LDI  R31,HIGH(65535)
000649 93ed      	ST   X+,R30
00064a 93fc      	ST   X,R31
                 _0x2000015:
00064b 8119      	LDD  R17,Y+1
00064c 8108      	LDD  R16,Y+0
00064d c348      	RJMP _0x20A0007
                 __ftoe_G100:
00064e 9724      	SBIW R28,4
00064f 940e 0ce9 	CALL SUBOPT_0x4
000651 e8e0      	LDI  R30,LOW(128)
000652 83ea      	STD  Y+2,R30
000653 e3ef      	LDI  R30,LOW(63)
000654 83eb      	STD  Y+3,R30
000655 940e 116b 	CALL __SAVELOCR4
000657 85ee      	LDD  R30,Y+14
000658 85ff      	LDD  R31,Y+14+1
000659 3fef      	CPI  R30,LOW(0xFFFF)
00065a efaf      	LDI  R26,HIGH(0xFFFF)
00065b 07fa      	CPC  R31,R26
00065c f449      	BRNE _0x2000019
00065d 85e8      	LDD  R30,Y+8
00065e 85f9      	LDD  R31,Y+8+1
00065f 93fa      	ST   -Y,R31
000660 93ea      	ST   -Y,R30
                +
000661 eeec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000662 e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000663 940e 0dd1 	CALL SUBOPT_0x20
000665 c0b6      	RJMP _0x20A0009
                 _0x2000019:
000666 3fef      	CPI  R30,LOW(0x7FFF)
000667 e7af      	LDI  R26,HIGH(0x7FFF)
000668 07fa      	CPC  R31,R26
000669 f449      	BRNE _0x2000018
00066a 85e8      	LDD  R30,Y+8
00066b 85f9      	LDD  R31,Y+8+1
00066c 93fa      	ST   -Y,R31
00066d 93ea      	ST   -Y,R30
                +
00066e eeed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00066f e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000670 940e 0dd1 	CALL SUBOPT_0x20
000672 c0a9      	RJMP _0x20A0009
                 _0x2000018:
000673 85ab      	LDD  R26,Y+11
000674 30a7      	CPI  R26,LOW(0x7)
000675 f010      	BRLO _0x200001B
000676 e0e6      	LDI  R30,LOW(6)
000677 87eb      	STD  Y+11,R30
                 _0x200001B:
000678 851b      	LDD  R17,Y+11
                 _0x200001C:
000679 2fe1      	MOV  R30,R17
00067a 5011      	SUBI R17,1
00067b 30e0      	CPI  R30,0
00067c f019      	BREQ _0x200001E
00067d 940e 0dd5 	CALL SUBOPT_0x21
00067f cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000680 85ec     +LDD R30 , Y + 12
000681 85fd     +LDD R31 , Y + 12 + 1
000682 856e     +LDD R22 , Y + 12 + 2
000683 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000684 940e 115f 	CALL __CPD10
000686 f421      	BRNE _0x200001F
000687 e030      	LDI  R19,LOW(0)
000688 940e 0dd5 	CALL SUBOPT_0x21
00068a c02e      	RJMP _0x2000020
                 _0x200001F:
00068b 853b      	LDD  R19,Y+11
00068c 940e 0de0 	CALL SUBOPT_0x22
00068e f009      	BREQ PC+2
00068f f410      	BRCC PC+3
000690 940c 069d 	JMP  _0x2000021
000692 940e 0dd5 	CALL SUBOPT_0x21
                 _0x2000022:
000694 940e 0de0 	CALL SUBOPT_0x22
000696 f028      	BRLO _0x2000024
000697 940e 0de8 	CALL SUBOPT_0x23
000699 940e 0ded 	CALL SUBOPT_0x24
00069b cff8      	RJMP _0x2000022
                 _0x2000024:
00069c c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00069d 940e 0de0 	CALL SUBOPT_0x22
00069f f440      	BRSH _0x2000028
0006a0 940e 0de8 	CALL SUBOPT_0x23
0006a2 940e 0df6 	CALL SUBOPT_0x25
0006a4 940e 0dfd 	CALL SUBOPT_0x26
0006a6 5031      	SUBI R19,LOW(1)
0006a7 cff5      	RJMP _0x2000026
                 _0x2000028:
0006a8 940e 0dd5 	CALL SUBOPT_0x21
                 _0x2000025:
                +
0006aa 85ec     +LDD R30 , Y + 12
0006ab 85fd     +LDD R31 , Y + 12 + 1
0006ac 856e     +LDD R22 , Y + 12 + 2
0006ad 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0006ae 940e 0e02 	CALL SUBOPT_0x27
0006b0 940e 0dfd 	CALL SUBOPT_0x26
0006b2 940e 0de0 	CALL SUBOPT_0x22
0006b4 f020      	BRLO _0x2000029
0006b5 940e 0de8 	CALL SUBOPT_0x23
0006b7 940e 0ded 	CALL SUBOPT_0x24
                 _0x2000029:
                 _0x2000020:
0006b9 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0006ba 85eb      	LDD  R30,Y+11
0006bb 17e1      	CP   R30,R17
0006bc f198      	BRLO _0x200002C
                +
0006bd 81ac     +LDD R26 , Y + 4
0006be 81bd     +LDD R27 , Y + 4 + 1
0006bf 818e     +LDD R24 , Y + 4 + 2
0006c0 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006c1 940e 0e09 	CALL SUBOPT_0x28
0006c3 940e 0e02 	CALL SUBOPT_0x27
0006c5 940e 0e0d 	CALL SUBOPT_0x29
0006c7 940e 0d06 	CALL SUBOPT_0x8
0006c9 940e 0d10 	CALL SUBOPT_0xA
0006cb 940e 0de8 	CALL SUBOPT_0x23
0006cd 940e 1042 	CALL __DIVF21
0006cf 940e 0f31 	CALL __CFD1U
0006d1 2f0e      	MOV  R16,R30
0006d2 940e 0e11 	CALL SUBOPT_0x2A
0006d4 940e 0e18 	CALL SUBOPT_0x2B
0006d6 27ff      	CLR  R31
0006d7 2766      	CLR  R22
0006d8 2777      	CLR  R23
0006d9 940e 0f6a 	CALL __CDF1
                +
0006db 81ac     +LDD R26 , Y + 4
0006dc 81bd     +LDD R27 , Y + 4 + 1
0006dd 818e     +LDD R24 , Y + 4 + 2
0006de 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006df 940e 0ff4 	CALL __MULF12
0006e1 940e 0de8 	CALL SUBOPT_0x23
0006e3 940e 0d0b 	CALL SUBOPT_0x9
0006e5 940e 0dfd 	CALL SUBOPT_0x26
0006e7 2fe1      	MOV  R30,R17
0006e8 5f1f      	SUBI R17,-1
0006e9 30e0      	CPI  R30,0
0006ea f679      	BRNE _0x200002A
0006eb 940e 0e11 	CALL SUBOPT_0x2A
0006ed e2ee      	LDI  R30,LOW(46)
0006ee 93ec      	ST   X,R30
0006ef cfca      	RJMP _0x200002A
                 _0x200002C:
0006f0 940e 0e1d 	CALL SUBOPT_0x2C
0006f2 9731      	SBIW R30,1
0006f3 85aa      	LDD  R26,Y+10
0006f4 83a0      	STD  Z+0,R26
0006f5 3030      	CPI  R19,0
0006f6 f42c      	BRGE _0x200002E
0006f7 9531      	NEG  R19
0006f8 85a8      	LDD  R26,Y+8
0006f9 85b9      	LDD  R27,Y+8+1
0006fa e2ed      	LDI  R30,LOW(45)
0006fb c003      	RJMP _0x200010E
                 _0x200002E:
0006fc 85a8      	LDD  R26,Y+8
0006fd 85b9      	LDD  R27,Y+8+1
0006fe e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
0006ff 93ec      	ST   X,R30
000700 940e 0e1d 	CALL SUBOPT_0x2C
000702 940e 0e1d 	CALL SUBOPT_0x2C
000704 9731      	SBIW R30,1
000705 01bf      	MOVW R22,R30
000706 2fa3      	MOV  R26,R19
000707 e0ea      	LDI  R30,LOW(10)
000708 940e 10e2 	CALL __DIVB21
00070a 5de0      	SUBI R30,-LOW(48)
00070b 01db      	MOVW R26,R22
00070c 93ec      	ST   X,R30
00070d 940e 0e1d 	CALL SUBOPT_0x2C
00070f 9731      	SBIW R30,1
000710 01bf      	MOVW R22,R30
000711 2fa3      	MOV  R26,R19
000712 e0ea      	LDI  R30,LOW(10)
000713 940e 110c 	CALL __MODB21
000715 5de0      	SUBI R30,-LOW(48)
000716 01db      	MOVW R26,R22
000717 93ec      	ST   X,R30
000718 85a8      	LDD  R26,Y+8
000719 85b9      	LDD  R27,Y+8+1
00071a e0e0      	LDI  R30,LOW(0)
00071b 93ec      	ST   X,R30
                 _0x20A0009:
00071c 940e 1172 	CALL __LOADLOCR4
                 _0x20A000A:
00071e 9660      	ADIW R28,16
00071f 9508      	RET
                 __print_G100:
000720 97ef      	SBIW R28,63
000721 9761      	SBIW R28,17
000722 940e 1169 	CALL __SAVELOCR6
000724 e010      	LDI  R17,0
                +
000725 01fe     +MOVW R30 , R28
000726 5ae8     +SUBI R30 , LOW ( - 88 )
000727 4fff     +SBCI R31 , HIGH ( - 88 )
000728 9001     +LD R0 , Z +
000729 81f0     +LD R31 , Z
00072a 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00072b 87e8      	STD  Y+8,R30
00072c 87f9      	STD  Y+8+1,R31
                +
00072d 01fe     +MOVW R30 , R28
00072e 5aea     +SUBI R30 , LOW ( - 86 )
00072f 4fff     +SBCI R31 , HIGH ( - 86 )
000730 9001     +LD R0 , Z +
000731 81f0     +LD R31 , Z
000732 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000733 83ee      	STD  Y+6,R30
000734 83ff      	STD  Y+6+1,R31
000735 81ae      	LDD  R26,Y+6
000736 81bf      	LDD  R27,Y+6+1
000737 940e 0d27 	CALL SUBOPT_0xD
                 _0x2000030:
000739 01de      	MOVW R26,R28
00073a 5aa4      	SUBI R26,LOW(-(92))
00073b 4fbf      	SBCI R27,HIGH(-(92))
00073c 940e 0dcb 	CALL SUBOPT_0x1F
00073e 9731      	SBIW R30,1
00073f 91e4      	LPM  R30,Z
000740 2f2e      	MOV  R18,R30
000741 30e0      	CPI  R30,0
000742 f411      	BRNE PC+3
000743 940c 0933 	JMP _0x2000032
000745 2fe1      	MOV  R30,R17
000746 30e0      	CPI  R30,0
000747 f439      	BRNE _0x2000036
000748 3225      	CPI  R18,37
000749 f411      	BRNE _0x2000037
00074a e011      	LDI  R17,LOW(1)
00074b c002      	RJMP _0x2000038
                 _0x2000037:
00074c 940e 0e23 	CALL SUBOPT_0x2D
                 _0x2000038:
00074e c1e3      	RJMP _0x2000035
                 _0x2000036:
00074f 30e1      	CPI  R30,LOW(0x1)
000750 f4c1      	BRNE _0x2000039
000751 3225      	CPI  R18,37
000752 f419      	BRNE _0x200003A
000753 940e 0e23 	CALL SUBOPT_0x2D
000755 c1db      	RJMP _0x200010F
                 _0x200003A:
000756 e012      	LDI  R17,LOW(2)
000757 e0e0      	LDI  R30,LOW(0)
000758 8bed      	STD  Y+21,R30
000759 e000      	LDI  R16,LOW(0)
00075a 322d      	CPI  R18,45
00075b f411      	BRNE _0x200003B
00075c e001      	LDI  R16,LOW(1)
00075d c1d4      	RJMP _0x2000035
                 _0x200003B:
00075e 322b      	CPI  R18,43
00075f f419      	BRNE _0x200003C
000760 e2eb      	LDI  R30,LOW(43)
000761 8bed      	STD  Y+21,R30
000762 c1cf      	RJMP _0x2000035
                 _0x200003C:
000763 3220      	CPI  R18,32
000764 f419      	BRNE _0x200003D
000765 e2e0      	LDI  R30,LOW(32)
000766 8bed      	STD  Y+21,R30
000767 c1ca      	RJMP _0x2000035
                 _0x200003D:
000768 c002      	RJMP _0x200003E
                 _0x2000039:
000769 30e2      	CPI  R30,LOW(0x2)
00076a f439      	BRNE _0x200003F
                 _0x200003E:
00076b e050      	LDI  R21,LOW(0)
00076c e013      	LDI  R17,LOW(3)
00076d 3320      	CPI  R18,48
00076e f411      	BRNE _0x2000040
00076f 6800      	ORI  R16,LOW(128)
000770 c1c1      	RJMP _0x2000035
                 _0x2000040:
000771 c002      	RJMP _0x2000041
                 _0x200003F:
000772 30e3      	CPI  R30,LOW(0x3)
000773 f491      	BRNE _0x2000042
                 _0x2000041:
000774 3320      	CPI  R18,48
000775 f010      	BRLO _0x2000044
000776 332a      	CPI  R18,58
000777 f008      	BRLO _0x2000045
                 _0x2000044:
000778 c007      	RJMP _0x2000043
                 _0x2000045:
000779 e0aa      	LDI  R26,LOW(10)
00077a 9f5a      	MUL  R21,R26
00077b 2d50      	MOV  R21,R0
00077c 2fe2      	MOV  R30,R18
00077d 53e0      	SUBI R30,LOW(48)
00077e 0f5e      	ADD  R21,R30
00077f c1b2      	RJMP _0x2000035
                 _0x2000043:
000780 e040      	LDI  R20,LOW(0)
000781 322e      	CPI  R18,46
000782 f411      	BRNE _0x2000046
000783 e014      	LDI  R17,LOW(4)
000784 c1ad      	RJMP _0x2000035
                 _0x2000046:
000785 c00f      	RJMP _0x2000047
                 _0x2000042:
000786 30e4      	CPI  R30,LOW(0x4)
000787 f499      	BRNE _0x2000049
000788 3320      	CPI  R18,48
000789 f010      	BRLO _0x200004B
00078a 332a      	CPI  R18,58
00078b f008      	BRLO _0x200004C
                 _0x200004B:
00078c c008      	RJMP _0x200004A
                 _0x200004C:
00078d 6200      	ORI  R16,LOW(32)
00078e e0aa      	LDI  R26,LOW(10)
00078f 9f4a      	MUL  R20,R26
000790 2d40      	MOV  R20,R0
000791 2fe2      	MOV  R30,R18
000792 53e0      	SUBI R30,LOW(48)
000793 0f4e      	ADD  R20,R30
000794 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000795 362c      	CPI  R18,108
000796 f419      	BRNE _0x200004D
000797 6002      	ORI  R16,LOW(2)
000798 e015      	LDI  R17,LOW(5)
000799 c198      	RJMP _0x2000035
                 _0x200004D:
00079a c004      	RJMP _0x200004E
                 _0x2000049:
00079b 30e5      	CPI  R30,LOW(0x5)
00079c f011      	BREQ PC+3
00079d 940c 0932 	JMP _0x2000035
                 _0x200004E:
00079f 2fe2      	MOV  R30,R18
0007a0 36e3      	CPI  R30,LOW(0x63)
0007a1 f459      	BRNE _0x2000053
0007a2 940e 0e2c 	CALL SUBOPT_0x2E
0007a4 940e 0e33 	CALL SUBOPT_0x2F
0007a6 940e 0e2c 	CALL SUBOPT_0x2E
0007a8 81a4      	LDD  R26,Z+4
0007a9 93aa      	ST   -Y,R26
0007aa 940e 0e3a 	CALL SUBOPT_0x30
0007ac c184      	RJMP _0x2000054
                 _0x2000053:
0007ad 34e5      	CPI  R30,LOW(0x45)
0007ae f011      	BREQ _0x2000057
0007af 36e5      	CPI  R30,LOW(0x65)
0007b0 f409      	BRNE _0x2000058
                 _0x2000057:
0007b1 c004      	RJMP _0x2000059
                 _0x2000058:
0007b2 36e6      	CPI  R30,LOW(0x66)
0007b3 f011      	BREQ PC+3
0007b4 940c 0800 	JMP _0x200005A
                 _0x2000059:
0007b6 01fe      	MOVW R30,R28
0007b7 9676      	ADIW R30,22
0007b8 87ee      	STD  Y+14,R30
0007b9 87ff      	STD  Y+14+1,R31
0007ba 940e 0e42 	CALL SUBOPT_0x31
0007bc 940e 112c 	CALL __GETD1P
0007be 940e 0e49 	CALL SUBOPT_0x32
0007c0 940e 0e4e 	CALL SUBOPT_0x33
0007c2 85ad      	LDD  R26,Y+13
0007c3 23aa      	TST  R26
0007c4 f022      	BRMI _0x200005B
0007c5 89ad      	LDD  R26,Y+21
0007c6 32ab      	CPI  R26,LOW(0x2B)
0007c7 f049      	BREQ _0x200005D
0007c8 c017      	RJMP _0x200005E
                 _0x200005B:
0007c9 940e 0e50 	CALL SUBOPT_0x34
0007cb 940e 0efe 	CALL __ANEGF1
0007cd 940e 0e49 	CALL SUBOPT_0x32
0007cf e2ed      	LDI  R30,LOW(45)
0007d0 8bed      	STD  Y+21,R30
                 _0x200005D:
0007d1 ff07      	SBRS R16,7
0007d2 c005      	RJMP _0x200005F
0007d3 89ed      	LDD  R30,Y+21
0007d4 93ea      	ST   -Y,R30
0007d5 940e 0e3a 	CALL SUBOPT_0x30
0007d7 c008      	RJMP _0x2000060
                 _0x200005F:
0007d8 85ee      	LDD  R30,Y+14
0007d9 85ff      	LDD  R31,Y+14+1
0007da 9631      	ADIW R30,1
0007db 87ee      	STD  Y+14,R30
0007dc 87ff      	STD  Y+14+1,R31
0007dd 9731      	SBIW R30,1
0007de 89ad      	LDD  R26,Y+21
0007df 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0007e0 ff05      	SBRS R16,5
0007e1 e046      	LDI  R20,LOW(6)
0007e2 3626      	CPI  R18,102
0007e3 f461      	BRNE _0x2000062
0007e4 940e 0e50 	CALL SUBOPT_0x34
0007e6 940e 1148 	CALL __PUTPARD1
0007e8 934a      	ST   -Y,R20
0007e9 89eb      	LDD  R30,Y+19
0007ea 89fc      	LDD  R31,Y+19+1
0007eb 93fa      	ST   -Y,R31
0007ec 93ea      	ST   -Y,R30
0007ed 940e 0c13 	CALL _ftoa
0007ef c00b      	RJMP _0x2000063
                 _0x2000062:
0007f0 940e 0e50 	CALL SUBOPT_0x34
0007f2 940e 1148 	CALL __PUTPARD1
0007f4 934a      	ST   -Y,R20
0007f5 932a      	ST   -Y,R18
0007f6 89ec      	LDD  R30,Y+20
0007f7 89fd      	LDD  R31,Y+20+1
0007f8 93fa      	ST   -Y,R31
0007f9 93ea      	ST   -Y,R30
0007fa de53      	RCALL __ftoe_G100
                 _0x2000063:
0007fb 01fe      	MOVW R30,R28
0007fc 9676      	ADIW R30,22
0007fd 940e 0e55 	CALL SUBOPT_0x35
0007ff c01e      	RJMP _0x2000064
                 _0x200005A:
000800 37e3      	CPI  R30,LOW(0x73)
000801 f439      	BRNE _0x2000066
000802 940e 0e4e 	CALL SUBOPT_0x33
000804 940e 0e5d 	CALL SUBOPT_0x36
000806 940e 0e55 	CALL SUBOPT_0x35
000808 c00e      	RJMP _0x2000067
                 _0x2000066:
000809 37e0      	CPI  R30,LOW(0x70)
00080a f4c1      	BRNE _0x2000069
00080b 940e 0e4e 	CALL SUBOPT_0x33
00080d 940e 0e5d 	CALL SUBOPT_0x36
00080f 87ee      	STD  Y+14,R30
000810 87ff      	STD  Y+14+1,R31
000811 93fa      	ST   -Y,R31
000812 93ea      	ST   -Y,R30
000813 940e 0c08 	CALL _strlenf
000815 2f1e      	MOV  R17,R30
000816 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000817 770f      	ANDI R16,LOW(127)
000818 3040      	CPI  R20,0
000819 f011      	BREQ _0x200006B
00081a 1741      	CP   R20,R17
00081b f008      	BRLO _0x200006C
                 _0x200006B:
00081c c001      	RJMP _0x200006A
                 _0x200006C:
00081d 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
00081e e040      	LDI  R20,LOW(0)
00081f e0e0      	LDI  R30,LOW(0)
000820 8bec      	STD  Y+20,R30
000821 e030      	LDI  R19,LOW(0)
000822 c06e      	RJMP _0x200006D
                 _0x2000069:
000823 36e4      	CPI  R30,LOW(0x64)
000824 f011      	BREQ _0x2000070
000825 36e9      	CPI  R30,LOW(0x69)
000826 f411      	BRNE _0x2000071
                 _0x2000070:
000827 6004      	ORI  R16,LOW(4)
000828 c002      	RJMP _0x2000072
                 _0x2000071:
000829 37e5      	CPI  R30,LOW(0x75)
00082a f4a1      	BRNE _0x2000073
                 _0x2000072:
00082b e0ea      	LDI  R30,LOW(10)
00082c 8bec      	STD  Y+20,R30
00082d ff01      	SBRS R16,1
00082e c008      	RJMP _0x2000074
                +
00082f e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000830 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000831 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000832 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000833 940e 0e62 	CALL SUBOPT_0x37
000835 e01a      	LDI  R17,LOW(10)
000836 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000837 e1e0     +LDI R30 , LOW ( 0x2710 )
000838 e2f7     +LDI R31 , HIGH ( 0x2710 )
000839 e060     +LDI R22 , BYTE3 ( 0x2710 )
00083a e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00083b 940e 0e62 	CALL SUBOPT_0x37
00083d e015      	LDI  R17,LOW(5)
00083e c01b      	RJMP _0x2000075
                 _0x2000073:
00083f 35e8      	CPI  R30,LOW(0x58)
000840 f411      	BRNE _0x2000077
000841 6008      	ORI  R16,LOW(8)
000842 c004      	RJMP _0x2000078
                 _0x2000077:
000843 37e8      	CPI  R30,LOW(0x78)
000844 f011      	BREQ PC+3
000845 940c 0931 	JMP _0x20000B6
                 _0x2000078:
000847 e1e0      	LDI  R30,LOW(16)
000848 8bec      	STD  Y+20,R30
000849 ff01      	SBRS R16,1
00084a c008      	RJMP _0x200007A
                +
00084b e0e0     +LDI R30 , LOW ( 0x10000000 )
00084c e0f0     +LDI R31 , HIGH ( 0x10000000 )
00084d e060     +LDI R22 , BYTE3 ( 0x10000000 )
00084e e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00084f 940e 0e62 	CALL SUBOPT_0x37
000851 e018      	LDI  R17,LOW(8)
000852 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000853 e0e0     +LDI R30 , LOW ( 0x1000 )
000854 e1f0     +LDI R31 , HIGH ( 0x1000 )
000855 e060     +LDI R22 , BYTE3 ( 0x1000 )
000856 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000857 940e 0e62 	CALL SUBOPT_0x37
000859 e014      	LDI  R17,LOW(4)
                 _0x2000075:
00085a 3040      	CPI  R20,0
00085b f011      	BREQ _0x200007B
00085c 770f      	ANDI R16,LOW(127)
00085d c001      	RJMP _0x200007C
                 _0x200007B:
00085e e041      	LDI  R20,LOW(1)
                 _0x200007C:
00085f ff01      	SBRS R16,1
000860 c008      	RJMP _0x200007D
000861 940e 0e4e 	CALL SUBOPT_0x33
000863 940e 0e42 	CALL SUBOPT_0x31
000865 9614      	ADIW R26,4
000866 940e 112c 	CALL __GETD1P
000868 c00f      	RJMP _0x2000110
                 _0x200007D:
000869 ff02      	SBRS R16,2
00086a c007      	RJMP _0x200007F
00086b 940e 0e4e 	CALL SUBOPT_0x33
00086d 940e 0e5d 	CALL SUBOPT_0x36
00086f 940e 10c2 	CALL __CWD1
000871 c006      	RJMP _0x2000110
                 _0x200007F:
000872 940e 0e4e 	CALL SUBOPT_0x33
000874 940e 0e5d 	CALL SUBOPT_0x36
000876 2766      	CLR  R22
000877 2777      	CLR  R23
                 _0x2000110:
                +
000878 87ea     +STD Y + 10 , R30
000879 87fb     +STD Y + 10 + 1 , R31
00087a 876c     +STD Y + 10 + 2 , R22
00087b 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00087c ff02      	SBRS R16,2
00087d c012      	RJMP _0x2000081
00087e 85ad      	LDD  R26,Y+13
00087f 23aa      	TST  R26
000880 f442      	BRPL _0x2000082
000881 940e 0e50 	CALL SUBOPT_0x34
000883 940e 10af 	CALL __ANEGD1
000885 940e 0e49 	CALL SUBOPT_0x32
000887 e2ed      	LDI  R30,LOW(45)
000888 8bed      	STD  Y+21,R30
                 _0x2000082:
000889 89ed      	LDD  R30,Y+21
00088a 30e0      	CPI  R30,0
00088b f019      	BREQ _0x2000083
00088c 5f1f      	SUBI R17,-LOW(1)
00088d 5f4f      	SUBI R20,-LOW(1)
00088e c001      	RJMP _0x2000084
                 _0x2000083:
00088f 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000890 2f34      	MOV  R19,R20
                 _0x200006D:
000891 fd00      	SBRC R16,0
000892 c014      	RJMP _0x2000085
                 _0x2000086:
000893 1715      	CP   R17,R21
000894 f410      	BRSH _0x2000089
000895 1735      	CP   R19,R21
000896 f008      	BRLO _0x200008A
                 _0x2000089:
000897 c00f      	RJMP _0x2000088
                 _0x200008A:
000898 ff07      	SBRS R16,7
000899 c008      	RJMP _0x200008B
00089a ff02      	SBRS R16,2
00089b c004      	RJMP _0x200008C
00089c 7f0b      	ANDI R16,LOW(251)
00089d 892d      	LDD  R18,Y+21
00089e 5011      	SUBI R17,LOW(1)
00089f c001      	RJMP _0x200008D
                 _0x200008C:
0008a0 e320      	LDI  R18,LOW(48)
                 _0x200008D:
0008a1 c001      	RJMP _0x200008E
                 _0x200008B:
0008a2 e220      	LDI  R18,LOW(32)
                 _0x200008E:
0008a3 940e 0e23 	CALL SUBOPT_0x2D
0008a5 5051      	SUBI R21,LOW(1)
0008a6 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0008a7 1714      	CP   R17,R20
0008a8 f490      	BRSH _0x2000091
0008a9 6100      	ORI  R16,LOW(16)
0008aa ff02      	SBRS R16,2
0008ab c006      	RJMP _0x2000092
0008ac 940e 0e67 	CALL SUBOPT_0x38
0008ae f009      	BREQ _0x2000093
0008af 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0008b0 5011      	SUBI R17,LOW(1)
0008b1 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0008b2 e3e0      	LDI  R30,LOW(48)
0008b3 93ea      	ST   -Y,R30
0008b4 940e 0e3a 	CALL SUBOPT_0x30
0008b6 3050      	CPI  R21,0
0008b7 f009      	BREQ _0x2000094
0008b8 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0008b9 5041      	SUBI R20,LOW(1)
0008ba cfec      	RJMP _0x200008F
                 _0x2000091:
0008bb 2f31      	MOV  R19,R17
0008bc 89ec      	LDD  R30,Y+20
0008bd 30e0      	CPI  R30,0
0008be f4b9      	BRNE _0x2000095
                 _0x2000096:
0008bf 3030      	CPI  R19,0
0008c0 f0a1      	BREQ _0x2000098
0008c1 ff03      	SBRS R16,3
0008c2 c006      	RJMP _0x2000099
0008c3 85ee      	LDD  R30,Y+14
0008c4 85ff      	LDD  R31,Y+14+1
0008c5 9125      	LPM  R18,Z+
0008c6 87ee      	STD  Y+14,R30
0008c7 87ff      	STD  Y+14+1,R31
0008c8 c005      	RJMP _0x200009A
                 _0x2000099:
0008c9 85ae      	LDD  R26,Y+14
0008ca 85bf      	LDD  R27,Y+14+1
0008cb 912d      	LD   R18,X+
0008cc 87ae      	STD  Y+14,R26
0008cd 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0008ce 940e 0e23 	CALL SUBOPT_0x2D
0008d0 3050      	CPI  R21,0
0008d1 f009      	BREQ _0x200009B
0008d2 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0008d3 5031      	SUBI R19,LOW(1)
0008d4 cfea      	RJMP _0x2000096
                 _0x2000098:
0008d5 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0008d6 940e 0e7b 	CALL SUBOPT_0x39
0008d8 940e 10e7 	CALL __DIVD21U
0008da 2f2e      	MOV  R18,R30
0008db 302a      	CPI  R18,10
0008dc f030      	BRLO _0x20000A0
0008dd ff03      	SBRS R16,3
0008de c002      	RJMP _0x20000A1
0008df 5c29      	SUBI R18,-LOW(55)
0008e0 c001      	RJMP _0x20000A2
                 _0x20000A1:
0008e1 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0008e2 c001      	RJMP _0x20000A3
                 _0x20000A0:
0008e3 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0008e4 fd04      	SBRC R16,4
0008e5 c021      	RJMP _0x20000A5
0008e6 3321      	CPI  R18,49
0008e7 f460      	BRSH _0x20000A7
                +
0008e8 89a8     +LDD R26 , Y + 16
0008e9 89b9     +LDD R27 , Y + 16 + 1
0008ea 898a     +LDD R24 , Y + 16 + 2
0008eb 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0008ec 30a1     +CPI R26 , LOW ( 0x1 )
0008ed e0e0     +LDI R30 , HIGH ( 0x1 )
0008ee 07be     +CPC R27 , R30
0008ef e0e0     +LDI R30 , BYTE3 ( 0x1 )
0008f0 078e     +CPC R24 , R30
0008f1 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0008f2 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0008f3 f409      	BRNE _0x20000A6
                 _0x20000A7:
0008f4 c00b      	RJMP _0x20000A9
                 _0x20000A6:
0008f5 1743      	CP   R20,R19
0008f6 f440      	BRSH _0x2000111
0008f7 1753      	CP   R21,R19
0008f8 f010      	BRLO _0x20000AC
0008f9 ff00      	SBRS R16,0
0008fa c001      	RJMP _0x20000AD
                 _0x20000AC:
0008fb c010      	RJMP _0x20000AB
                 _0x20000AD:
0008fc e220      	LDI  R18,LOW(32)
0008fd ff07      	SBRS R16,7
0008fe c008      	RJMP _0x20000AE
                 _0x2000111:
0008ff e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000900 6100      	ORI  R16,LOW(16)
000901 ff02      	SBRS R16,2
000902 c004      	RJMP _0x20000AF
000903 940e 0e67 	CALL SUBOPT_0x38
000905 f009      	BREQ _0x20000B0
000906 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000907 940e 0e23 	CALL SUBOPT_0x2D
000909 3050      	CPI  R21,0
00090a f009      	BREQ _0x20000B1
00090b 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
00090c 5031      	SUBI R19,LOW(1)
00090d 940e 0e7b 	CALL SUBOPT_0x39
00090f 940e 1118 	CALL __MODD21U
000911 940e 0e49 	CALL SUBOPT_0x32
000913 89ec      	LDD  R30,Y+20
                +
000914 89a8     +LDD R26 , Y + 16
000915 89b9     +LDD R27 , Y + 16 + 1
000916 898a     +LDD R24 , Y + 16 + 2
000917 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000918 27ff      	CLR  R31
000919 2766      	CLR  R22
00091a 2777      	CLR  R23
00091b 940e 10e7 	CALL __DIVD21U
00091d 940e 0e62 	CALL SUBOPT_0x37
                +
00091f 89e8     +LDD R30 , Y + 16
000920 89f9     +LDD R31 , Y + 16 + 1
000921 896a     +LDD R22 , Y + 16 + 2
000922 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000923 940e 115f 	CALL __CPD10
000925 f009      	BREQ _0x200009F
000926 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000927 ff00      	SBRS R16,0
000928 c008      	RJMP _0x20000B2
                 _0x20000B3:
000929 3050      	CPI  R21,0
00092a f031      	BREQ _0x20000B5
00092b 5051      	SUBI R21,LOW(1)
00092c e2e0      	LDI  R30,LOW(32)
00092d 93ea      	ST   -Y,R30
00092e 940e 0e3a 	CALL SUBOPT_0x30
000930 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000931 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000932 ce06      	RJMP _0x2000030
                 _0x2000032:
000933 81ae      	LDD  R26,Y+6
000934 81bf      	LDD  R27,Y+6+1
000935 940e 1128 	CALL __GETW1P
000937 940e 1170 	CALL __LOADLOCR6
000939 96ef      	ADIW R28,63
00093a 966f      	ADIW R28,31
00093b 9508      	RET
                 _sprintf:
00093c 92ff      	PUSH R15
00093d 2ef8      	MOV  R15,R24
00093e 9726      	SBIW R28,6
00093f 940e 116b 	CALL __SAVELOCR4
000941 940e 0e84 	CALL SUBOPT_0x3A
000943 9730      	SBIW R30,0
000944 f419      	BRNE _0x20000B7
000945 efef      	LDI  R30,LOW(65535)
000946 efff      	LDI  R31,HIGH(65535)
000947 c023      	RJMP _0x20A0008
                 _0x20000B7:
000948 01de      	MOVW R26,R28
000949 9616      	ADIW R26,6
00094a 940e 10a7 	CALL __ADDW2R15
00094c 018d      	MOVW R16,R26
00094d 940e 0e84 	CALL SUBOPT_0x3A
00094f 83ee      	STD  Y+6,R30
000950 83ff      	STD  Y+6+1,R31
000951 e0e0      	LDI  R30,LOW(0)
000952 87e8      	STD  Y+8,R30
000953 87e9      	STD  Y+8+1,R30
000954 01de      	MOVW R26,R28
000955 961a      	ADIW R26,10
000956 940e 0e8b 	CALL SUBOPT_0x3B
000958 93fa      	ST   -Y,R31
000959 93ea      	ST   -Y,R30
00095a 931a      	ST   -Y,R17
00095b 930a      	ST   -Y,R16
00095c e1e7      	LDI  R30,LOW(_put_buff_G100)
00095d e0f6      	LDI  R31,HIGH(_put_buff_G100)
00095e 93fa      	ST   -Y,R31
00095f 93ea      	ST   -Y,R30
000960 01fe      	MOVW R30,R28
000961 963a      	ADIW R30,10
000962 93fa      	ST   -Y,R31
000963 93ea      	ST   -Y,R30
000964 ddbb      	RCALL __print_G100
000965 019f      	MOVW R18,R30
000966 81ae      	LDD  R26,Y+6
000967 81bf      	LDD  R27,Y+6+1
000968 e0e0      	LDI  R30,LOW(0)
000969 93ec      	ST   X,R30
00096a 01f9      	MOVW R30,R18
                 _0x20A0008:
00096b 940e 1172 	CALL __LOADLOCR4
00096d 962a      	ADIW R28,10
00096e 90ff      	POP  R15
00096f 9508      	RET
                 _get_buff_G100:
000970 931a      	ST   -Y,R17
000971 81a9      	LDD  R26,Y+1
000972 81ba      	LDD  R27,Y+1+1
000973 e0e0      	LDI  R30,LOW(0)
000974 93ec      	ST   X,R30
000975 81ab      	LDD  R26,Y+3
000976 81bc      	LDD  R27,Y+3+1
000977 91ec      	LD   R30,X
000978 2f1e      	MOV  R17,R30
000979 30e0      	CPI  R30,0
00097a f019      	BREQ _0x20000BF
00097b e0e0      	LDI  R30,LOW(0)
00097c 93ec      	ST   X,R30
00097d c016      	RJMP _0x20000C0
                 _0x20000BF:
00097e 81a9      	LDD  R26,Y+1
00097f 81ba      	LDD  R27,Y+1+1
000980 9611      	ADIW R26,1
000981 940e 1128 	CALL __GETW1P
000983 9730      	SBIW R30,0
000984 f071      	BREQ _0x20000C1
000985 81e9      	LDD  R30,Y+1
000986 81fa      	LDD  R31,Y+1+1
000987 81a1      	LDD  R26,Z+1
000988 81b2      	LDD  R27,Z+2
000989 91ec      	LD   R30,X
00098a 2f1e      	MOV  R17,R30
00098b 30e0      	CPI  R30,0
00098c f029      	BREQ _0x20000C2
00098d 81a9      	LDD  R26,Y+1
00098e 81ba      	LDD  R27,Y+1+1
00098f 9611      	ADIW R26,1
000990 940e 0dcb 	CALL SUBOPT_0x1F
                 _0x20000C2:
000992 c001      	RJMP _0x20000C3
                 _0x20000C1:
000993 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000994 2fe1      	MOV  R30,R17
000995 8118      	LDD  R17,Y+0
                 _0x20A0007:
000996 9625      	ADIW R28,5
000997 9508      	RET
                 __scanf_G100:
000998 9725      	SBIW R28,5
000999 940e 1169 	CALL __SAVELOCR6
00099b e0e0      	LDI  R30,LOW(0)
00099c e0f0      	LDI  R31,HIGH(0)
00099d 87e8      	STD  Y+8,R30
00099e 87f9      	STD  Y+8+1,R31
00099f 2f4e      	MOV  R20,R30
                 _0x20000C4:
0009a0 89e9      	LDD  R30,Y+17
0009a1 89fa      	LDD  R31,Y+17+1
0009a2 9631      	ADIW R30,1
0009a3 8be9      	STD  Y+17,R30
0009a4 8bfa      	STD  Y+17+1,R31
0009a5 9731      	SBIW R30,1
0009a6 91e4      	LPM  R30,Z
0009a7 2f3e      	MOV  R19,R30
0009a8 30e0      	CPI  R30,0
0009a9 f411      	BRNE PC+3
0009aa 940c 0ac5 	JMP _0x20000C6
0009ac 940e 0e90 	CALL SUBOPT_0x3C
0009ae f0c1      	BREQ _0x20000C7
                 _0x20000C8:
0009af b7ed      	IN   R30,SPL
0009b0 b7fe      	IN   R31,SPH
0009b1 93fa      	ST   -Y,R31
0009b2 93ea      	ST   -Y,R30
0009b3 934f      	PUSH R20
0009b4 940e 0e95 	CALL SUBOPT_0x3D
0009b6 914f      	POP  R20
0009b7 2f3e      	MOV  R19,R30
0009b8 30e0      	CPI  R30,0
0009b9 f019      	BREQ _0x20000CB
0009ba 940e 0e90 	CALL SUBOPT_0x3C
0009bc f409      	BRNE _0x20000CC
                 _0x20000CB:
0009bd c007      	RJMP _0x20000CA
                 _0x20000CC:
0009be 940e 0e9d 	CALL SUBOPT_0x3E
0009c0 f41c      	BRGE _0x20000CD
0009c1 efef      	LDI  R30,LOW(65535)
0009c2 efff      	LDI  R31,HIGH(65535)
0009c3 c103      	RJMP _0x20A0005
                 _0x20000CD:
0009c4 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0009c5 2f43      	MOV  R20,R19
0009c6 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0009c7 3235      	CPI  R19,37
0009c8 f011      	BREQ PC+3
0009c9 940c 0aac 	JMP _0x20000CF
0009cb e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0009cc 89e9      	LDD  R30,Y+17
0009cd 89fa      	LDD  R31,Y+17+1
0009ce 9135      	LPM  R19,Z+
0009cf 8be9      	STD  Y+17,R30
0009d0 8bfa      	STD  Y+17+1,R31
0009d1 3330      	CPI  R19,48
0009d2 f010      	BRLO _0x20000D4
0009d3 333a      	CPI  R19,58
0009d4 f008      	BRLO _0x20000D3
                 _0x20000D4:
0009d5 c007      	RJMP _0x20000D2
                 _0x20000D3:
0009d6 e0aa      	LDI  R26,LOW(10)
0009d7 9f5a      	MUL  R21,R26
0009d8 2d50      	MOV  R21,R0
0009d9 2fe3      	MOV  R30,R19
0009da 53e0      	SUBI R30,LOW(48)
0009db 0f5e      	ADD  R21,R30
0009dc cfef      	RJMP _0x20000D0
                 _0x20000D2:
0009dd 3030      	CPI  R19,0
0009de f409      	BRNE _0x20000D6
0009df c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0009e0 b7ed      	IN   R30,SPL
0009e1 b7fe      	IN   R31,SPH
0009e2 93fa      	ST   -Y,R31
0009e3 93ea      	ST   -Y,R30
0009e4 934f      	PUSH R20
0009e5 940e 0e95 	CALL SUBOPT_0x3D
0009e7 914f      	POP  R20
0009e8 2f2e      	MOV  R18,R30
0009e9 93ea      	ST   -Y,R30
0009ea 940e 0bdb 	CALL _isspace
0009ec 30e0      	CPI  R30,0
0009ed f039      	BREQ _0x20000D9
0009ee 940e 0e9d 	CALL SUBOPT_0x3E
0009f0 f41c      	BRGE _0x20000DA
0009f1 efef      	LDI  R30,LOW(65535)
0009f2 efff      	LDI  R31,HIGH(65535)
0009f3 c0d3      	RJMP _0x20A0005
                 _0x20000DA:
0009f4 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
0009f5 3020      	CPI  R18,0
0009f6 f409      	BRNE _0x20000DB
0009f7 c0c4      	RJMP _0x20000DC
                 _0x20000DB:
0009f8 2f42      	MOV  R20,R18
0009f9 3050      	CPI  R21,0
0009fa f409      	BRNE _0x20000DD
0009fb ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
0009fc 2fe3      	MOV  R30,R19
0009fd 36e3      	CPI  R30,LOW(0x63)
0009fe f499      	BRNE _0x20000E1
0009ff 940e 0ea2 	CALL SUBOPT_0x3F
000a01 b7ed      	IN   R30,SPL
000a02 b7fe      	IN   R31,SPH
000a03 93fa      	ST   -Y,R31
000a04 93ea      	ST   -Y,R30
000a05 934f      	PUSH R20
000a06 940e 0e95 	CALL SUBOPT_0x3D
000a08 914f      	POP  R20
000a09 01d8      	MOVW R26,R16
000a0a 93ec      	ST   X,R30
000a0b 940e 0e9d 	CALL SUBOPT_0x3E
000a0d f41c      	BRGE _0x20000E2
000a0e efef      	LDI  R30,LOW(65535)
000a0f efff      	LDI  R31,HIGH(65535)
000a10 c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000a11 c097      	RJMP _0x20000E0
                 _0x20000E1:
000a12 37e3      	CPI  R30,LOW(0x73)
000a13 f541      	BRNE _0x20000EB
000a14 940e 0ea2 	CALL SUBOPT_0x3F
                 _0x20000E4:
000a16 2fe5      	MOV  R30,R21
000a17 5051      	SUBI R21,1
000a18 30e0      	CPI  R30,0
000a19 f0f1      	BREQ _0x20000E6
000a1a b7ed      	IN   R30,SPL
000a1b b7fe      	IN   R31,SPH
000a1c 93fa      	ST   -Y,R31
000a1d 93ea      	ST   -Y,R30
000a1e 934f      	PUSH R20
000a1f 940e 0e95 	CALL SUBOPT_0x3D
000a21 914f      	POP  R20
000a22 2f3e      	MOV  R19,R30
000a23 30e0      	CPI  R30,0
000a24 f019      	BREQ _0x20000E8
000a25 940e 0e90 	CALL SUBOPT_0x3C
000a27 f039      	BREQ _0x20000E7
                 _0x20000E8:
000a28 940e 0e9d 	CALL SUBOPT_0x3E
000a2a f41c      	BRGE _0x20000EA
000a2b efef      	LDI  R30,LOW(65535)
000a2c efff      	LDI  R31,HIGH(65535)
000a2d c099      	RJMP _0x20A0005
                 _0x20000EA:
000a2e c009      	RJMP _0x20000E6
                 _0x20000E7:
000a2f 931f      	PUSH R17
000a30 930f      	PUSH R16
                +
000a31 5f0f     +SUBI R16 , LOW ( - 1 )
000a32 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a33 2fe3      	MOV  R30,R19
000a34 91af      	POP  R26
000a35 91bf      	POP  R27
000a36 93ec      	ST   X,R30
000a37 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000a38 01d8      	MOVW R26,R16
000a39 e0e0      	LDI  R30,LOW(0)
000a3a 93ec      	ST   X,R30
000a3b c06d      	RJMP _0x20000E0
                 _0x20000EB:
000a3c e0e1      	LDI  R30,LOW(1)
000a3d 87ea      	STD  Y+10,R30
000a3e 2fe3      	MOV  R30,R19
000a3f 36e4      	CPI  R30,LOW(0x64)
000a40 f011      	BREQ _0x20000F0
000a41 36e9      	CPI  R30,LOW(0x69)
000a42 f419      	BRNE _0x20000F1
                 _0x20000F0:
000a43 e0e0      	LDI  R30,LOW(0)
000a44 87ea      	STD  Y+10,R30
000a45 c002      	RJMP _0x20000F2
                 _0x20000F1:
000a46 37e5      	CPI  R30,LOW(0x75)
000a47 f411      	BRNE _0x20000F3
                 _0x20000F2:
000a48 e02a      	LDI  R18,LOW(10)
000a49 c008      	RJMP _0x20000EE
                 _0x20000F3:
000a4a 37e8      	CPI  R30,LOW(0x78)
000a4b f411      	BRNE _0x20000F4
000a4c e120      	LDI  R18,LOW(16)
000a4d c004      	RJMP _0x20000EE
                 _0x20000F4:
000a4e 32e5      	CPI  R30,LOW(0x25)
000a4f f409      	BRNE _0x20000F7
000a50 c05b      	RJMP _0x20000F6
                 _0x20000F7:
000a51 c073      	RJMP _0x20A0006
                 _0x20000EE:
000a52 e0e0      	LDI  R30,LOW(0)
000a53 83ee      	STD  Y+6,R30
000a54 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000a55 2fe5      	MOV  R30,R21
000a56 5051      	SUBI R21,1
000a57 30e0      	CPI  R30,0
000a58 f411      	BRNE PC+3
000a59 940c 0a9c 	JMP _0x20000FA
000a5b b7ed      	IN   R30,SPL
000a5c b7fe      	IN   R31,SPH
000a5d 93fa      	ST   -Y,R31
000a5e 93ea      	ST   -Y,R30
000a5f 934f      	PUSH R20
000a60 940e 0e95 	CALL SUBOPT_0x3D
000a62 914f      	POP  R20
000a63 2f3e      	MOV  R19,R30
000a64 32e1      	CPI  R30,LOW(0x21)
000a65 f438      	BRSH _0x20000FB
000a66 940e 0e9d 	CALL SUBOPT_0x3E
000a68 f41c      	BRGE _0x20000FC
000a69 efef      	LDI  R30,LOW(65535)
000a6a efff      	LDI  R31,HIGH(65535)
000a6b c05b      	RJMP _0x20A0005
                 _0x20000FC:
000a6c c017      	RJMP _0x20000FD
                 _0x20000FB:
000a6d 85ea      	LDD  R30,Y+10
000a6e 30e0      	CPI  R30,0
000a6f f439      	BRNE _0x20000FE
000a70 323d      	CPI  R19,45
000a71 f419      	BRNE _0x20000FF
000a72 efef      	LDI  R30,LOW(255)
000a73 87ea      	STD  Y+10,R30
000a74 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000a75 e0e1      	LDI  R30,LOW(1)
000a76 87ea      	STD  Y+10,R30
                 _0x20000FE:
000a77 3120      	CPI  R18,16
000a78 f431      	BRNE _0x2000101
000a79 933a      	ST   -Y,R19
000a7a 940e 0be5 	CALL _isxdigit
000a7c 30e0      	CPI  R30,0
000a7d f031      	BREQ _0x20000FD
000a7e c007      	RJMP _0x2000103
                 _0x2000101:
000a7f 933a      	ST   -Y,R19
000a80 940e 0bd3 	CALL _isdigit
000a82 30e0      	CPI  R30,0
000a83 f411      	BRNE _0x2000104
                 _0x20000FD:
000a84 2f43      	MOV  R20,R19
000a85 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000a86 3631      	CPI  R19,97
000a87 f010      	BRLO _0x2000105
000a88 5537      	SUBI R19,LOW(87)
000a89 c005      	RJMP _0x2000106
                 _0x2000105:
000a8a 3431      	CPI  R19,65
000a8b f010      	BRLO _0x2000107
000a8c 5337      	SUBI R19,LOW(55)
000a8d c001      	RJMP _0x2000108
                 _0x2000107:
000a8e 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000a8f 2fe2      	MOV  R30,R18
000a90 81ae      	LDD  R26,Y+6
000a91 81bf      	LDD  R27,Y+6+1
000a92 e0f0      	LDI  R31,0
000a93 940e 10cc 	CALL __MULW12U
000a95 01df      	MOVW R26,R30
000a96 2fe3      	MOV  R30,R19
000a97 940e 0d3e 	CALL SUBOPT_0x10
000a99 83ee      	STD  Y+6,R30
000a9a 83ff      	STD  Y+6+1,R31
000a9b cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000a9c 940e 0ea2 	CALL SUBOPT_0x3F
000a9e 85ea      	LDD  R30,Y+10
000a9f 81ae      	LDD  R26,Y+6
000aa0 81bf      	LDD  R27,Y+6+1
000aa1 e0f0      	LDI  R31,0
000aa2 fde7      	SBRC R30,7
000aa3 efff      	SER  R31
000aa4 940e 10cc 	CALL __MULW12U
000aa6 01d8      	MOVW R26,R16
000aa7 93ed      	ST   X+,R30
000aa8 93fc      	ST   X,R31
                 _0x20000E0:
000aa9 940e 0e1d 	CALL SUBOPT_0x2C
000aab c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000aac b7ed      	IN   R30,SPL
000aad b7fe      	IN   R31,SPH
000aae 93fa      	ST   -Y,R31
000aaf 93ea      	ST   -Y,R30
000ab0 934f      	PUSH R20
000ab1 940e 0e95 	CALL SUBOPT_0x3D
000ab3 914f      	POP  R20
000ab4 17e3      	CP   R30,R19
000ab5 f071      	BREQ _0x200010A
000ab6 940e 0e9d 	CALL SUBOPT_0x3E
000ab8 f41c      	BRGE _0x200010B
000ab9 efef      	LDI  R30,LOW(65535)
000aba efff      	LDI  R31,HIGH(65535)
000abb c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000abc 85e8      	LDD  R30,Y+8
000abd 85f9      	LDD  R31,Y+8+1
000abe 9730      	SBIW R30,0
000abf f419      	BRNE _0x200010C
000ac0 efef      	LDI  R30,LOW(65535)
000ac1 efff      	LDI  R31,HIGH(65535)
000ac2 c004      	RJMP _0x20A0005
                 _0x200010C:
000ac3 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000ac4 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000ac5 85e8      	LDD  R30,Y+8
000ac6 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000ac7 940e 1170 	CALL __LOADLOCR6
000ac9 9663      	ADIW R28,19
000aca 9508      	RET
                 _sscanf:
000acb 92ff      	PUSH R15
000acc 2ef8      	MOV  R15,R24
000acd 9723      	SBIW R28,3
000ace 931a      	ST   -Y,R17
000acf 930a      	ST   -Y,R16
000ad0 01de      	MOVW R26,R28
000ad1 9617      	ADIW R26,7
000ad2 940e 0e8b 	CALL SUBOPT_0x3B
000ad4 9730      	SBIW R30,0
000ad5 f419      	BRNE _0x200010D
000ad6 efef      	LDI  R30,LOW(65535)
000ad7 efff      	LDI  R31,HIGH(65535)
000ad8 c01c      	RJMP _0x20A0004
                 _0x200010D:
000ad9 01de      	MOVW R26,R28
000ada 9611      	ADIW R26,1
000adb 940e 10a7 	CALL __ADDW2R15
000add 018d      	MOVW R16,R26
000ade 01de      	MOVW R26,R28
000adf 9617      	ADIW R26,7
000ae0 940e 0e8b 	CALL SUBOPT_0x3B
000ae2 83eb      	STD  Y+3,R30
000ae3 83fc      	STD  Y+3+1,R31
000ae4 01de      	MOVW R26,R28
000ae5 9615      	ADIW R26,5
000ae6 940e 0e8b 	CALL SUBOPT_0x3B
000ae8 93fa      	ST   -Y,R31
000ae9 93ea      	ST   -Y,R30
000aea 931a      	ST   -Y,R17
000aeb 930a      	ST   -Y,R16
000aec e7e0      	LDI  R30,LOW(_get_buff_G100)
000aed e0f9      	LDI  R31,HIGH(_get_buff_G100)
000aee 93fa      	ST   -Y,R31
000aef 93ea      	ST   -Y,R30
000af0 01fe      	MOVW R30,R28
000af1 9638      	ADIW R30,8
000af2 93fa      	ST   -Y,R31
000af3 93ea      	ST   -Y,R30
000af4 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000af5 8119      	LDD  R17,Y+1
000af6 8108      	LDD  R16,Y+0
000af7 9625      	ADIW R28,5
000af8 90ff      	POP  R15
000af9 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000afa 817b         ldd  r23,y+3
000afb 816a         ldd  r22,y+2
000afc 81f9         ldd  r31,y+1
000afd 81e8         ld   r30,y
000afe fb77         bst  r23,7
000aff 0f77         lsl  r23
000b00 fd67         sbrc r22,7
000b01 6071         sbr  r23,1
000b02 2f97         mov  r25,r23
000b03 579e         subi r25,0x7e
000b04 f081         breq __ftrunc0
000b05 f078         brcs __ftrunc0
000b06 3198         cpi  r25,24
000b07 f490         brsh __ftrunc1
000b08 27aa         clr  r26
000b09 27bb         clr  r27
000b0a 2788         clr  r24
                 __ftrunc2:
000b0b 9408         sec
000b0c 9587         ror  r24
000b0d 95b7         ror  r27
000b0e 95a7         ror  r26
000b0f 959a         dec  r25
000b10 f7d1         brne __ftrunc2
000b11 23ea         and  r30,r26
000b12 23fb         and  r31,r27
000b13 2368         and  r22,r24
000b14 c005         rjmp __ftrunc1
                 __ftrunc0:
000b15 94e8         clt
000b16 2777         clr  r23
000b17 27ee         clr  r30
000b18 27ff         clr  r31
000b19 2766         clr  r22
                 __ftrunc1:
000b1a 776f         cbr  r22,0x80
000b1b 9576         lsr  r23
000b1c f408         brcc __ftrunc3
000b1d 6860         sbr  r22,0x80
                 __ftrunc3:
000b1e f977         bld  r23,7
000b1f 91a9         ld   r26,y+
000b20 91b9         ld   r27,y+
000b21 9189         ld   r24,y+
000b22 9199         ld   r25,y+
000b23 17ea         cp   r30,r26
000b24 07fb         cpc  r31,r27
000b25 0768         cpc  r22,r24
000b26 0779         cpc  r23,r25
000b27 fb97         bst  r25,7
000b28 9508         ret
                 _floor:
000b29 940e 0d24 	CALL SUBOPT_0xC
000b2b 940e 1148 	CALL __PUTPARD1
000b2d 940e 0afa 	CALL _ftrunc
000b2f 940e 1141 	CALL __PUTD1S0
000b31 f419          brne __floor1
                 __floor0:
000b32 940e 0d24 	CALL SUBOPT_0xC
000b34 c09c      	RJMP _0x20A0003
                 __floor1:
000b35 f7e6          brtc __floor0
000b36 940e 0d24 	CALL SUBOPT_0xC
                +
000b38 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b39 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b3a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b3b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b3c 940e 0f9d 	CALL __SUBF12
000b3e c092      	RJMP _0x20A0003
                 _sin:
000b3f 9724      	SBIW R28,4
000b40 931a      	ST   -Y,R17
000b41 e010      	LDI  R17,0
000b42 940e 0ead 	CALL SUBOPT_0x40
                +
000b44 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000b45 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000b46 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000b47 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000b48 940e 0ff4 	CALL __MULF12
000b4a 940e 0eb2 	CALL SUBOPT_0x41
000b4c 940e 0eb7 	CALL SUBOPT_0x42
000b4e 940e 0e0d 	CALL SUBOPT_0x29
000b50 940e 0ead 	CALL SUBOPT_0x40
000b52 940e 0d0b 	CALL SUBOPT_0x9
000b54 940e 0eb2 	CALL SUBOPT_0x41
000b56 940e 0ebc 	CALL SUBOPT_0x43
000b58 940e 1087 	CALL __CMPF12
000b5a f009      	BREQ PC+2
000b5b f410      	BRCC PC+3
000b5c 940c 0b69 	JMP  _0x2020017
000b5e 940e 0eb7 	CALL SUBOPT_0x42
                +
000b60 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b61 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b62 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b63 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b64 940e 0f9d 	CALL __SUBF12
000b66 940e 0eb2 	CALL SUBOPT_0x41
000b68 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000b69 940e 0ead 	CALL SUBOPT_0x40
                +
000b6b e0e0     +LDI R30 , LOW ( 0x3E800000 )
000b6c e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000b6d e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000b6e e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000b6f 940e 1087 	CALL __CMPF12
000b71 f009      	BREQ PC+2
000b72 f410      	BRCC PC+3
000b73 940c 0b7b 	JMP  _0x2020018
000b75 940e 0ebc 	CALL SUBOPT_0x43
000b77 940e 0f9d 	CALL __SUBF12
000b79 940e 0eb2 	CALL SUBOPT_0x41
                 _0x2020018:
000b7b 3010      	CPI  R17,0
000b7c f031      	BREQ _0x2020019
000b7d 940e 0eb7 	CALL SUBOPT_0x42
000b7f 940e 0efe 	CALL __ANEGF1
000b81 940e 0eb2 	CALL SUBOPT_0x41
                 _0x2020019:
000b83 940e 0eb7 	CALL SUBOPT_0x42
000b85 940e 0ead 	CALL SUBOPT_0x40
000b87 940e 0ff4 	CALL __MULF12
                +
000b89 83e9     +STD Y + 1 , R30
000b8a 83fa     +STD Y + 1 + 1 , R31
000b8b 836b     +STD Y + 1 + 2 , R22
000b8c 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000b8d eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000b8e ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000b8f e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000b90 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000b91 940e 0ff4 	CALL __MULF12
000b93 01df      	MOVW R26,R30
000b94 01cb      	MOVW R24,R22
                +
000b95 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000b96 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000b97 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000b98 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000b99 940e 0d0b 	CALL SUBOPT_0x9
000b9b 940e 0ec2 	CALL SUBOPT_0x44
                +
000b9d e4ac     +LDI R26 , LOW ( 0x4104534C )
000b9e e5b3     +LDI R27 , HIGH ( 0x4104534C )
000b9f e084     +LDI R24 , BYTE3 ( 0x4104534C )
000ba0 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000ba1 940e 0fa4 	CALL __ADDF12
000ba3 940e 0ead 	CALL SUBOPT_0x40
000ba5 940e 0ff4 	CALL __MULF12
000ba7 937f      	PUSH R23
000ba8 936f      	PUSH R22
000ba9 93ff      	PUSH R31
000baa 93ef      	PUSH R30
                +
000bab 81e9     +LDD R30 , Y + 1
000bac 81fa     +LDD R31 , Y + 1 + 1
000bad 816b     +LDD R22 , Y + 1 + 2
000bae 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000baf e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000bb0 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000bb1 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000bb2 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000bb3 940e 0fa4 	CALL __ADDF12
000bb5 940e 0ec2 	CALL SUBOPT_0x44
                +
000bb7 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000bb8 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000bb9 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000bba e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000bbb 940e 0fa4 	CALL __ADDF12
000bbd 91af      	POP  R26
000bbe 91bf      	POP  R27
000bbf 918f      	POP  R24
000bc0 919f      	POP  R25
000bc1 940e 1042 	CALL __DIVF21
000bc3 8118      	LDD  R17,Y+0
000bc4 9629      	ADIW R28,9
000bc5 9508      	RET
                 _cos:
000bc6 940e 113c 	CALL __GETD2S0
                +
000bc8 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000bc9 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000bca ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000bcb e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000bcc 940e 0f9d 	CALL __SUBF12
000bce 940e 1148 	CALL __PUTPARD1
000bd0 df6e      	RCALL _sin
                 _0x20A0003:
000bd1 9624      	ADIW R28,4
000bd2 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000bd3 e0e1          ldi  r30,1
000bd4 91f9          ld   r31,y+
000bd5 33f0          cpi  r31,'0'
000bd6 f010          brlo isdigit0
000bd7 33fa          cpi  r31,'9'+1
000bd8 f008          brlo isdigit1
                 isdigit0:
000bd9 27ee          clr  r30
                 isdigit1:
000bda 9508          ret
                 _isspace:
000bdb e0e1          ldi  r30,1
000bdc 91f9          ld   r31,y+
000bdd 32f0          cpi  r31,' '
000bde f029          breq isspace1
000bdf 30f9          cpi  r31,9
000be0 f010          brlo isspace0
000be1 30fe          cpi  r31,13+1
000be2 f008          brlo isspace1
                 isspace0:
000be3 27ee          clr  r30
                 isspace1:
000be4 9508          ret
                 _isxdigit:
000be5 e0e1          ldi  r30,1
000be6 91f9          ld   r31,y+
000be7 53f0          subi r31,0x30
000be8 f040          brcs isxdigit0
000be9 30fa          cpi  r31,10
000bea f038          brcs isxdigit1
000beb 75ff          andi r31,0x5f
000bec 50f7          subi r31,7
000bed 30fa          cpi  r31,10
000bee f010          brcs isxdigit0
000bef 31f0          cpi  r31,16
000bf0 f008          brcs isxdigit1
                 isxdigit0:
000bf1 27ee          clr  r30
                 isxdigit1:
000bf2 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000bf3 91e9          ld   r30,y+
000bf4 91f9          ld   r31,y+
000bf5 91a9          ld   r26,y+
000bf6 91b9          ld   r27,y+
000bf7 01cd          movw r24,r26
                 strcpyf0:
000bf8 9005      	lpm  r0,z+
000bf9 920d          st   x+,r0
000bfa 2000          tst  r0
000bfb f7e1          brne strcpyf0
000bfc 01fc          movw r30,r24
000bfd 9508          ret
                 _strlen:
000bfe 91a9          ld   r26,y+
000bff 91b9          ld   r27,y+
000c00 27ee          clr  r30
000c01 27ff          clr  r31
                 strlen0:
000c02 916d          ld   r22,x+
000c03 2366          tst  r22
000c04 f011          breq strlen1
000c05 9631          adiw r30,1
000c06 cffb          rjmp strlen0
                 strlen1:
000c07 9508          ret
                 _strlenf:
000c08 27aa          clr  r26
000c09 27bb          clr  r27
000c0a 91e9          ld   r30,y+
000c0b 91f9          ld   r31,y+
                 strlenf0:
000c0c 9005      	lpm  r0,z+
000c0d 2000          tst  r0
000c0e f011          breq strlenf1
000c0f 9611          adiw r26,1
000c10 cffb          rjmp strlenf0
                 strlenf1:
000c11 01fd          movw r30,r26
000c12 9508          ret
                 
                 	.CSEG
                 _ftoa:
000c13 9724      	SBIW R28,4
000c14 d0d4      	RCALL SUBOPT_0x4
000c15 e0e0      	LDI  R30,LOW(0)
000c16 83ea      	STD  Y+2,R30
000c17 e3ef      	LDI  R30,LOW(63)
000c18 83eb      	STD  Y+3,R30
000c19 931a      	ST   -Y,R17
000c1a 930a      	ST   -Y,R16
000c1b 85eb      	LDD  R30,Y+11
000c1c 85fc      	LDD  R31,Y+11+1
000c1d 3fef      	CPI  R30,LOW(0xFFFF)
000c1e efaf      	LDI  R26,HIGH(0xFFFF)
000c1f 07fa      	CPC  R31,R26
000c20 f429      	BRNE _0x208000D
000c21 d2a7      	RCALL SUBOPT_0x45
                +
000c22 efe4     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000c23 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000c24 d1ac      	RCALL SUBOPT_0x20
000c25 c085      	RJMP _0x20A0002
                 _0x208000D:
000c26 3fef      	CPI  R30,LOW(0x7FFF)
000c27 e7af      	LDI  R26,HIGH(0x7FFF)
000c28 07fa      	CPC  R31,R26
000c29 f429      	BRNE _0x208000C
000c2a d29e      	RCALL SUBOPT_0x45
                +
000c2b efe5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000c2c e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000c2d d1a3      	RCALL SUBOPT_0x20
000c2e c07c      	RJMP _0x20A0002
                 _0x208000C:
000c2f 85ac      	LDD  R26,Y+12
000c30 23aa      	TST  R26
000c31 f452      	BRPL _0x208000F
                +
000c32 85e9     +LDD R30 , Y + 9
000c33 85fa     +LDD R31 , Y + 9 + 1
000c34 856b     +LDD R22 , Y + 9 + 2
000c35 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c36 940e 0efe 	CALL __ANEGF1
000c38 d295      	RCALL SUBOPT_0x46
000c39 d299      	RCALL SUBOPT_0x47
000c3a e2ed      	LDI  R30,LOW(45)
000c3b 93ec      	ST   X,R30
                 _0x208000F:
000c3c 85a8      	LDD  R26,Y+8
000c3d 30a7      	CPI  R26,LOW(0x7)
000c3e f010      	BRLO _0x2080010
000c3f e0e6      	LDI  R30,LOW(6)
000c40 87e8      	STD  Y+8,R30
                 _0x2080010:
000c41 8518      	LDD  R17,Y+8
                 _0x2080011:
000c42 2fe1      	MOV  R30,R17
000c43 5011      	SUBI R17,1
000c44 30e0      	CPI  R30,0
000c45 f021      	BREQ _0x2080013
000c46 d293      	RCALL SUBOPT_0x48
000c47 d1c1      	RCALL SUBOPT_0x28
000c48 d296      	RCALL SUBOPT_0x49
000c49 cff8      	RJMP _0x2080011
                 _0x2080013:
000c4a d299      	RCALL SUBOPT_0x4A
000c4b 940e 0fa4 	CALL __ADDF12
000c4d d280      	RCALL SUBOPT_0x46
000c4e e010      	LDI  R17,LOW(0)
                +
000c4f e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c50 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c51 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c52 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000c53 d28b      	RCALL SUBOPT_0x49
                 _0x2080014:
000c54 d28f      	RCALL SUBOPT_0x4A
000c55 940e 1087 	CALL __CMPF12
000c57 f060      	BRLO _0x2080016
000c58 d281      	RCALL SUBOPT_0x48
000c59 d19c      	RCALL SUBOPT_0x25
000c5a d284      	RCALL SUBOPT_0x49
000c5b 5f1f      	SUBI R17,-LOW(1)
000c5c 3217      	CPI  R17,39
000c5d f028      	BRLO _0x2080017
000c5e d26a      	RCALL SUBOPT_0x45
                +
000c5f efe9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000c60 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000c61 d16f      	RCALL SUBOPT_0x20
000c62 c048      	RJMP _0x20A0002
                 _0x2080017:
000c63 cff0      	RJMP _0x2080014
                 _0x2080016:
000c64 3010      	CPI  R17,0
000c65 f421      	BRNE _0x2080018
000c66 d26c      	RCALL SUBOPT_0x47
000c67 e3e0      	LDI  R30,LOW(48)
000c68 93ec      	ST   X,R30
000c69 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000c6a 2fe1      	MOV  R30,R17
000c6b 5011      	SUBI R17,1
000c6c 30e0      	CPI  R30,0
000c6d f0c9      	BREQ _0x208001C
000c6e d26b      	RCALL SUBOPT_0x48
000c6f d199      	RCALL SUBOPT_0x28
000c70 d191      	RCALL SUBOPT_0x27
000c71 d19b      	RCALL SUBOPT_0x29
000c72 d26c      	RCALL SUBOPT_0x49
000c73 d270      	RCALL SUBOPT_0x4A
000c74 940e 1042 	CALL __DIVF21
000c76 940e 0f31 	CALL __CFD1U
000c78 2f0e      	MOV  R16,R30
000c79 d259      	RCALL SUBOPT_0x47
000c7a d19d      	RCALL SUBOPT_0x2B
000c7b e0f0      	LDI  R31,0
000c7c d25d      	RCALL SUBOPT_0x48
000c7d 940e 10c2 	CALL __CWD1
000c7f 940e 0f6a 	CALL __CDF1
000c81 940e 0ff4 	CALL __MULF12
000c83 d269      	RCALL SUBOPT_0x4B
000c84 d086      	RCALL SUBOPT_0x9
000c85 d248      	RCALL SUBOPT_0x46
000c86 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000c87 85e8      	LDD  R30,Y+8
000c88 30e0      	CPI  R30,0
000c89 f0e9      	BREQ _0x20A0001
000c8a d248      	RCALL SUBOPT_0x47
000c8b e2ee      	LDI  R30,LOW(46)
000c8c 93ec      	ST   X,R30
                 _0x208001E:
000c8d 85e8      	LDD  R30,Y+8
000c8e 50e1      	SUBI R30,LOW(1)
000c8f 87e8      	STD  Y+8,R30
000c90 5fef      	SUBI R30,-LOW(1)
000c91 f0a9      	BREQ _0x2080020
000c92 d25a      	RCALL SUBOPT_0x4B
000c93 d162      	RCALL SUBOPT_0x25
000c94 d239      	RCALL SUBOPT_0x46
                +
000c95 85e9     +LDD R30 , Y + 9
000c96 85fa     +LDD R31 , Y + 9 + 1
000c97 856b     +LDD R22 , Y + 9 + 2
000c98 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c99 940e 0f31 	CALL __CFD1U
000c9b 2f0e      	MOV  R16,R30
000c9c d236      	RCALL SUBOPT_0x47
000c9d d17a      	RCALL SUBOPT_0x2B
000c9e e0f0      	LDI  R31,0
000c9f d24d      	RCALL SUBOPT_0x4B
000ca0 940e 10c2 	CALL __CWD1
000ca2 940e 0f6a 	CALL __CDF1
000ca4 d066      	RCALL SUBOPT_0x9
000ca5 d228      	RCALL SUBOPT_0x46
000ca6 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000ca7 81ae      	LDD  R26,Y+6
000ca8 81bf      	LDD  R27,Y+6+1
000ca9 e0e0      	LDI  R30,LOW(0)
000caa 93ec      	ST   X,R30
                 _0x20A0002:
000cab 8119      	LDD  R17,Y+1
000cac 8108      	LDD  R16,Y+0
000cad 962d      	ADIW R28,13
000cae 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000caf 81aa      	LDD  R26,Y+2
000cb0 81bb      	LDD  R27,Y+2+1
000cb1 27ee      	CLR  R30
000cb2 0fa1      	ADD  R26,R17
000cb3 1fbe      	ADC  R27,R30
000cb4 91ec      	LD   R30,X
000cb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000cb6 9728      	SBIW R28,8
000cb7 940e 116b 	CALL __SAVELOCR4
                +
000cb9 e020     +LDI R18 , LOW ( 0 )
000cba e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000cbb 89e8      	LDD  R30,Y+16
000cbc 83ec      	STD  Y+4,R30
000cbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000cbe 83ed      	STD  Y+5,R30
000cbf 85ee      	LDD  R30,Y+14
000cc0 85ff      	LDD  R31,Y+14+1
000cc1 940e 10b7 	CALL __ASRW8
000cc3 83ee      	STD  Y+6,R30
000cc4 85ee      	LDD  R30,Y+14
000cc5 83ef      	STD  Y+7,R30
000cc6 85ec      	LDD  R30,Y+12
000cc7 85fd      	LDD  R31,Y+12+1
000cc8 940e 10b7 	CALL __ASRW8
000cca 87e8      	STD  Y+8,R30
000ccb 85ec      	LDD  R30,Y+12
000ccc 87e9      	STD  Y+9,R30
000ccd e0e0      	LDI  R30,LOW(0)
000cce 87ea      	STD  Y+10,R30
000ccf 87eb      	STD  Y+11,R30
000cd0 01fe      	MOVW R30,R28
000cd1 9634      	ADIW R30,4
000cd2 93fa      	ST   -Y,R31
000cd3 93ea      	ST   -Y,R30
000cd4 e0e6      	LDI  R30,LOW(6)
000cd5 e0f0      	LDI  R31,HIGH(6)
000cd6 93fa      	ST   -Y,R31
000cd7 93ea      	ST   -Y,R30
000cd8 940e 022c 	CALL _CRC16
000cda 018f      	MOVW R16,R30
000cdb 01f8      	MOVW R30,R16
000cdc 87ea      	STD  Y+10,R30
                +
000cdd 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000cde e020     +LDI R18 , LOW ( 0 )
000cdf e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000ce0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000ce1 01de      	MOVW R26,R28
000ce2 9614      	ADIW R26,4
000ce3 0fa2      	ADD  R26,R18
000ce4 1fb3      	ADC  R27,R19
000ce5 91ec      	LD   R30,X
000ce6 93ea      	ST   -Y,R30
000ce7 940c 0226 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000ce9 e0e0      	LDI  R30,LOW(0)
000cea 83e8      	ST   Y,R30
000ceb 83e9      	STD  Y+1,R30
000cec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000ced 85ae      	LDD  R26,Y+14
000cee 85bf      	LDD  R27,Y+14+1
000cef 940e 112c 	CALL __GETD1P
000cf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000cf2 85ac      	LDD  R26,Y+12
000cf3 85bd      	LDD  R27,Y+12+1
000cf4 940e 112c 	CALL __GETD1P
000cf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
000cf7 e3ab     +LDI R26 , LOW ( 0x3E8FDF3B )
000cf8 edbf     +LDI R27 , HIGH ( 0x3E8FDF3B )
000cf9 e88f     +LDI R24 , BYTE3 ( 0x3E8FDF3B )
000cfa e39e     +LDI R25 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD2N 0x3E8FDF3B
000cfb 940e 0ff4 	CALL __MULF12
000cfd 01df      	MOVW R26,R30
000cfe 01cb      	MOVW R24,R22
                +
000cff e0e0     +LDI R30 , LOW ( 0x40000000 )
000d00 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000d01 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000d02 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000d03 940e 1042 	CALL __DIVF21
000d05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
000d06 83ec     +STD Y + 4 , R30
000d07 83fd     +STD Y + 4 + 1 , R31
000d08 836e     +STD Y + 4 + 2 , R22
000d09 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000d0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000d0b 940e 1152 	CALL __SWAPD12
000d0d 940e 0f9d 	CALL __SUBF12
000d0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
000d10 81ec     +LDD R30 , Y + 4
000d11 81fd     +LDD R31 , Y + 4 + 1
000d12 816e     +LDD R22 , Y + 4 + 2
000d13 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000d14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
000d15 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000d16 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000d17 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000d18 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000d19 940e 0ff4 	CALL __MULF12
                +
000d1b e0a0     +LDI R26 , LOW ( 0x41A00000 )
000d1c e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000d1d ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000d1e e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000d1f 940e 0ff4 	CALL __MULF12
000d21 940e 0f33 	CALL __CFD1
000d23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000d24 940e 1137 	CALL __GETD1S0
000d26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000d27 e0e0      	LDI  R30,LOW(0)
000d28 e0f0      	LDI  R31,HIGH(0)
000d29 93ed      	ST   X+,R30
000d2a 93fc      	ST   X,R31
000d2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000d2c 93fa      	ST   -Y,R31
000d2d 93ea      	ST   -Y,R30
000d2e 940e 025b 	CALL _RTU_WriteOperate0
000d30 e0e5      	LDI  R30,LOW(5)
000d31 e0f0      	LDI  R31,HIGH(5)
000d32 93fa      	ST   -Y,R31
000d33 93ea      	ST   -Y,R30
000d34 940c 0ef2 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000d36 93ea      	ST   -Y,R30
000d37 e7e8      	LDI  R30,LOW(120)
000d38 e0f0      	LDI  R31,HIGH(120)
000d39 93fa      	ST   -Y,R31
000d3a 93ea      	ST   -Y,R30
000d3b e0e1      	LDI  R30,LOW(1)
000d3c e0f0      	LDI  R31,HIGH(1)
000d3d cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000d3e e0f0      	LDI  R31,0
000d3f 0fea      	ADD  R30,R26
000d40 1ffb      	ADC  R31,R27
000d41 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000d42 2da4      	MOV  R26,R4
000d43 e0b0      	LDI  R27,0
000d44 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000d45 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000d46 b1ec      	IN   R30,0xC
000d47 93ec      	ST   X,R30
000d48 9443      	INC  R4
000d49 e0e0      	LDI  R30,LOW(0)
000d4a bde4      	OUT  0x24,R30
000d4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000d4c 93ea      	ST   -Y,R30
000d4d 93fa      	ST   -Y,R31
000d4e b7ef      	IN   R30,SREG
000d4f 93ea      	ST   -Y,R30
000d50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000d51 e0f0      	LDI  R31,0
000d52 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000d53 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000d54 8310      	ST   Z,R17
000d55 9493      	INC  R9
000d56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
000d57 93fa      	ST   -Y,R31
000d58 93ea      	ST   -Y,R30
000d59 940c 0ef2 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
000d5b 940e 10c2 	CALL __CWD1
000d5d 940e 0f6a 	CALL __CDF1
000d5f 01df      	MOVW R26,R30
000d60 01cb      	MOVW R24,R22
                +
000d61 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000d62 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000d63 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000d64 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000d65 940e 1042 	CALL __DIVF21
000d67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x16:
000d68 93ea      	ST   -Y,R30
000d69 e0e2      	LDI  R30,LOW(2)
000d6a e0f0      	LDI  R31,HIGH(2)
000d6b 93fa      	ST   -Y,R31
000d6c 93ea      	ST   -Y,R30
000d6d 93fa      	ST   -Y,R31
000d6e 93ea      	ST   -Y,R30
000d6f 940e 026a 	CALL _RTU_ReedOperate0
000d71 e0e5      	LDI  R30,LOW(5)
000d72 e0f0      	LDI  R31,HIGH(5)
000d73 cfe3      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x17:
000d74 940e 10c2 	CALL __CWD1
000d76 940e 0f6a 	CALL __CDF1
000d78 01df      	MOVW R26,R30
000d79 01cb      	MOVW R24,R22
                +
000d7a e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000d7b effc     +LDI R31 , HIGH ( 0x453EFC29 )
000d7c e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000d7d e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000d7e 940e 1042 	CALL __DIVF21
000d80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
                +
000d81 01fe     +MOVW R30 , R28
000d82 5dea     +SUBI R30 , LOW ( - 550 )
000d83 4ffd     +SBCI R31 , HIGH ( - 550 )
000d84 9001     +LD R0 , Z +
000d85 9011     +LD R1 , Z +
000d86 9161     +LD R22 , Z +
000d87 8170     +LD R23 , Z
000d88 01f0     +MOVW R30 , R0
                 	__GETD1SX 550
000d89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
                +
000d8a 01de     +MOVW R26 , R28
000d8b 5ea2     +SUBI R26 , LOW ( - 542 )
000d8c 4fbd     +SBCI R27 , HIGH ( - 542 )
000d8d 900d     +LD R0 , X +
000d8e 901d     +LD R1 , X +
000d8f 918d     +LD R24 , X +
000d90 919c     +LD R25 , X
000d91 01d0     +MOVW R26 , R0
                 	__GETD2SX 542
000d92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
                +
000d93 01fe     +MOVW R30 , R28
000d94 5eea     +SUBI R30 , LOW ( - 534 )
000d95 4ffd     +SBCI R31 , HIGH ( - 534 )
000d96 9001     +LD R0 , Z +
000d97 9011     +LD R1 , Z +
000d98 9161     +LD R22 , Z +
000d99 8170     +LD R23 , Z
000d9a 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
000d9b dfee      	RCALL SUBOPT_0x19
000d9c 940e 0ff4 	CALL __MULF12
000d9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1B:
                +
000d9f 01fe     +MOVW R30 , R28
000da0 5ee6     +SUBI R30 , LOW ( - 538 )
000da1 4ffd     +SBCI R31 , HIGH ( - 538 )
000da2 9001     +LD R0 , Z +
000da3 9011     +LD R1 , Z +
000da4 9161     +LD R22 , Z +
000da5 8170     +LD R23 , Z
000da6 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
000da7 01de     +MOVW R26 , R28
000da8 5eaa     +SUBI R26 , LOW ( - 534 )
000da9 4fbd     +SBCI R27 , HIGH ( - 534 )
000daa 900d     +LD R0 , X +
000dab 901d     +LD R1 , X +
000dac 918d     +LD R24 , X +
000dad 919c     +LD R25 , X
000dae 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
000daf 940e 0ff4 	CALL __MULF12
000db1 940e 1148 	CALL __PUTPARD1
000db3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
                +
000db4 01de     +MOVW R26 , R28
000db5 5fa6     +SUBI R26 , LOW ( - 522 )
000db6 4fbd     +SBCI R27 , HIGH ( - 522 )
000db7 900d     +LD R0 , X +
000db8 901d     +LD R1 , X +
000db9 918d     +LD R24 , X +
000dba 919c     +LD R25 , X
000dbb 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
000dbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000dbd 01de     +MOVW R26 , R28
000dbe 50ac     +SUBI R26 , LOW ( - 500 )
000dbf 4fbe     +SBCI R27 , HIGH ( - 500 )
000dc0 900d     +LD R0 , X +
000dc1 901d     +LD R1 , X +
000dc2 918d     +LD R24 , X +
000dc3 919c     +LD R25 , X
000dc4 01d0     +MOVW R26 , R0
                 	__GETD2SX 500
000dc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
                +
000dc6 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000dc7 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000dc8 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000dc9 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000dca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F:
000dcb 91ed      	LD   R30,X+
000dcc 91fd      	LD   R31,X+
000dcd 9631      	ADIW R30,1
000dce 93fe      	ST   -X,R31
000dcf 93ee      	ST   -X,R30
000dd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
000dd1 93fa      	ST   -Y,R31
000dd2 93ea      	ST   -Y,R30
000dd3 940c 0bf3 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x21:
                +
000dd5 81ac     +LDD R26 , Y + 4
000dd6 81bd     +LDD R27 , Y + 4 + 1
000dd7 818e     +LDD R24 , Y + 4 + 2
000dd8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000dd9 e0e0     +LDI R30 , LOW ( 0x41200000 )
000dda e0f0     +LDI R31 , HIGH ( 0x41200000 )
000ddb e260     +LDI R22 , BYTE3 ( 0x41200000 )
000ddc e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000ddd 940e 0ff4 	CALL __MULF12
000ddf cf26      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x22:
000de0 df2f      	RCALL SUBOPT_0xA
                +
000de1 85ac     +LDD R26 , Y + 12
000de2 85bd     +LDD R27 , Y + 12 + 1
000de3 858e     +LDD R24 , Y + 12 + 2
000de4 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000de5 940e 1087 	CALL __CMPF12
000de7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
                +
000de8 85ac     +LDD R26 , Y + 12
000de9 85bd     +LDD R27 , Y + 12 + 1
000dea 858e     +LDD R24 , Y + 12 + 2
000deb 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000dec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x24:
000ded dfd8      	RCALL SUBOPT_0x1E
000dee 940e 0ff4 	CALL __MULF12
                +
000df0 87ec     +STD Y + 12 , R30
000df1 87fd     +STD Y + 12 + 1 , R31
000df2 876e     +STD Y + 12 + 2 , R22
000df3 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000df4 5f3f      	SUBI R19,-LOW(1)
000df5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
000df6 e0e0     +LDI R30 , LOW ( 0x41200000 )
000df7 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000df8 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000df9 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000dfa 940e 0ff4 	CALL __MULF12
000dfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
                +
000dfd 87ec     +STD Y + 12 , R30
000dfe 87fd     +STD Y + 12 + 1 , R31
000dff 876e     +STD Y + 12 + 2 , R22
000e00 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000e01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
                +
000e02 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000e03 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000e04 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000e05 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000e06 940e 0fa4 	CALL __ADDF12
000e08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000e09 dfbc      	RCALL SUBOPT_0x1E
000e0a 940e 0ff4 	CALL __MULF12
000e0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000e0d 940e 1148 	CALL __PUTPARD1
000e0f 940c 0b29 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000e11 85a8      	LDD  R26,Y+8
000e12 85b9      	LDD  R27,Y+8+1
000e13 9611      	ADIW R26,1
000e14 87a8      	STD  Y+8,R26
000e15 87b9      	STD  Y+8+1,R27
000e16 9711      	SBIW R26,1
000e17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000e18 2fe0      	MOV  R30,R16
000e19 5de0      	SUBI R30,-LOW(48)
000e1a 93ec      	ST   X,R30
000e1b 2fe0      	MOV  R30,R16
000e1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C:
000e1d 85e8      	LDD  R30,Y+8
000e1e 85f9      	LDD  R31,Y+8+1
000e1f 9631      	ADIW R30,1
000e20 87e8      	STD  Y+8,R30
000e21 87f9      	STD  Y+8+1,R31
000e22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2D:
000e23 932a      	ST   -Y,R18
000e24 81ef      	LDD  R30,Y+7
000e25 85f8      	LDD  R31,Y+7+1
000e26 93fa      	ST   -Y,R31
000e27 93ea      	ST   -Y,R30
000e28 85eb      	LDD  R30,Y+11
000e29 85fc      	LDD  R31,Y+11+1
000e2a 9509      	ICALL
000e2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2E:
                +
000e2c 01fe     +MOVW R30 , R28
000e2d 5ae6     +SUBI R30 , LOW ( - 90 )
000e2e 4fff     +SBCI R31 , HIGH ( - 90 )
000e2f 9001     +LD R0 , Z +
000e30 81f0     +LD R31 , Z
000e31 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2F:
000e33 9734      	SBIW R30,4
                +
000e34 01de     +MOVW R26 , R28
000e35 5aa6     +SUBI R26 , LOW ( - 90 )
000e36 4fbf     +SBCI R27 , HIGH ( - 90 )
000e37 93ed     +ST X + , R30
000e38 93fc     +ST X , R31
                 	__PUTW1SX 90
000e39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x30:
000e3a 81ef      	LDD  R30,Y+7
000e3b 85f8      	LDD  R31,Y+7+1
000e3c 93fa      	ST   -Y,R31
000e3d 93ea      	ST   -Y,R30
000e3e 85eb      	LDD  R30,Y+11
000e3f 85fc      	LDD  R31,Y+11+1
000e40 9509      	ICALL
000e41 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x31:
                +
000e42 01de     +MOVW R26 , R28
000e43 5aa6     +SUBI R26 , LOW ( - 90 )
000e44 4fbf     +SBCI R27 , HIGH ( - 90 )
000e45 900d     +LD R0 , X +
000e46 91bc     +LD R27 , X
000e47 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32:
                +
000e49 87ea     +STD Y + 10 , R30
000e4a 87fb     +STD Y + 10 + 1 , R31
000e4b 876c     +STD Y + 10 + 2 , R22
000e4c 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x33:
000e4e dfdd      	RCALL SUBOPT_0x2E
000e4f cfe3      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34:
                +
000e50 85ea     +LDD R30 , Y + 10
000e51 85fb     +LDD R31 , Y + 10 + 1
000e52 856c     +LDD R22 , Y + 10 + 2
000e53 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000e54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x35:
000e55 87ee      	STD  Y+14,R30
000e56 87ff      	STD  Y+14+1,R31
000e57 93fa      	ST   -Y,R31
000e58 93ea      	ST   -Y,R30
000e59 940e 0bfe 	CALL _strlen
000e5b 2f1e      	MOV  R17,R30
000e5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x36:
000e5d dfe4      	RCALL SUBOPT_0x31
000e5e 9614      	ADIW R26,4
000e5f 940e 1128 	CALL __GETW1P
000e61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x37:
                +
000e62 8be8     +STD Y + 16 , R30
000e63 8bf9     +STD Y + 16 + 1 , R31
000e64 8b6a     +STD Y + 16 + 2 , R22
000e65 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000e66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x38:
000e67 7f0b      	ANDI R16,LOW(251)
000e68 89ed      	LDD  R30,Y+21
000e69 93ea      	ST   -Y,R30
                +
000e6a 01fe     +MOVW R30 , R28
000e6b 5ae9     +SUBI R30 , LOW ( - 87 )
000e6c 4fff     +SBCI R31 , HIGH ( - 87 )
000e6d 9001     +LD R0 , Z +
000e6e 81f0     +LD R31 , Z
000e6f 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000e70 93fa      	ST   -Y,R31
000e71 93ea      	ST   -Y,R30
                +
000e72 01fe     +MOVW R30 , R28
000e73 5ae5     +SUBI R30 , LOW ( - 91 )
000e74 4fff     +SBCI R31 , HIGH ( - 91 )
000e75 9001     +LD R0 , Z +
000e76 81f0     +LD R31 , Z
000e77 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000e78 9509      	ICALL
000e79 3050      	CPI  R21,0
000e7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39:
                +
000e7b 89e8     +LDD R30 , Y + 16
000e7c 89f9     +LDD R31 , Y + 16 + 1
000e7d 896a     +LDD R22 , Y + 16 + 2
000e7e 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000e7f 85aa     +LDD R26 , Y + 10
000e80 85bb     +LDD R27 , Y + 10 + 1
000e81 858c     +LDD R24 , Y + 10 + 2
000e82 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000e83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
000e84 01de      	MOVW R26,R28
000e85 961c      	ADIW R26,12
000e86 940e 10a7 	CALL __ADDW2R15
000e88 940e 1128 	CALL __GETW1P
000e8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
000e8b 940e 10a7 	CALL __ADDW2R15
000e8d 940e 1128 	CALL __GETW1P
000e8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
000e90 933a      	ST   -Y,R19
000e91 940e 0bdb 	CALL _isspace
000e93 30e0      	CPI  R30,0
000e94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3D:
000e95 85ed      	LDD  R30,Y+13
000e96 85fe      	LDD  R31,Y+13+1
000e97 93fa      	ST   -Y,R31
000e98 93ea      	ST   -Y,R30
000e99 89e9      	LDD  R30,Y+17
000e9a 89fa      	LDD  R31,Y+17+1
000e9b 9509      	ICALL
000e9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3E:
000e9d 85ab      	LDD  R26,Y+11
000e9e 85bc      	LDD  R27,Y+11+1
000e9f 91ac      	LD   R26,X
000ea0 30a0      	CPI  R26,0
000ea1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3F:
000ea2 85ef      	LDD  R30,Y+15
000ea3 89f8      	LDD  R31,Y+15+1
000ea4 9734      	SBIW R30,4
000ea5 87ef      	STD  Y+15,R30
000ea6 8bf8      	STD  Y+15+1,R31
000ea7 85af      	LDD  R26,Y+15
000ea8 89b8      	LDD  R27,Y+15+1
000ea9 9614      	ADIW R26,4
000eaa 910d      	LD   R16,X+
000eab 911c      	LD   R17,X
000eac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x40:
                +
000ead 81ad     +LDD R26 , Y + 5
000eae 81be     +LDD R27 , Y + 5 + 1
000eaf 818f     +LDD R24 , Y + 5 + 2
000eb0 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000eb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x41:
                +
000eb2 83ed     +STD Y + 5 , R30
000eb3 83fe     +STD Y + 5 + 1 , R31
000eb4 836f     +STD Y + 5 + 2 , R22
000eb5 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000eb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x42:
                +
000eb7 81ed     +LDD R30 , Y + 5
000eb8 81fe     +LDD R31 , Y + 5 + 1
000eb9 816f     +LDD R22 , Y + 5 + 2
000eba 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000ebb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000ebc dff0      	RCALL SUBOPT_0x40
                +
000ebd e0e0     +LDI R30 , LOW ( 0x3F000000 )
000ebe e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000ebf e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000ec0 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000ec1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
                +
000ec2 81a9     +LDD R26 , Y + 1
000ec3 81ba     +LDD R27 , Y + 1 + 1
000ec4 818b     +LDD R24 , Y + 1 + 2
000ec5 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ec6 940e 0ff4 	CALL __MULF12
000ec8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
000ec9 81ee      	LDD  R30,Y+6
000eca 81ff      	LDD  R31,Y+6+1
000ecb 93fa      	ST   -Y,R31
000ecc 93ea      	ST   -Y,R30
000ecd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x46:
                +
000ece 87e9     +STD Y + 9 , R30
000ecf 87fa     +STD Y + 9 + 1 , R31
000ed0 876b     +STD Y + 9 + 2 , R22
000ed1 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000ed2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x47:
000ed3 81ae      	LDD  R26,Y+6
000ed4 81bf      	LDD  R27,Y+6+1
000ed5 9611      	ADIW R26,1
000ed6 83ae      	STD  Y+6,R26
000ed7 83bf      	STD  Y+6+1,R27
000ed8 9711      	SBIW R26,1
000ed9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x48:
                +
000eda 81aa     +LDD R26 , Y + 2
000edb 81bb     +LDD R27 , Y + 2 + 1
000edc 818c     +LDD R24 , Y + 2 + 2
000edd 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000ede 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
000edf 83ea     +STD Y + 2 , R30
000ee0 83fb     +STD Y + 2 + 1 , R31
000ee1 836c     +STD Y + 2 + 2 , R22
000ee2 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000ee3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4A:
                +
000ee4 81ea     +LDD R30 , Y + 2
000ee5 81fb     +LDD R31 , Y + 2 + 1
000ee6 816c     +LDD R22 , Y + 2 + 2
000ee7 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000ee8 85a9     +LDD R26 , Y + 9
000ee9 85ba     +LDD R27 , Y + 9 + 1
000eea 858b     +LDD R24 , Y + 9 + 2
000eeb 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000eec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
                +
000eed 85a9     +LDD R26 , Y + 9
000eee 85ba     +LDD R27 , Y + 9 + 1
000eef 858b     +LDD R24 , Y + 9 + 2
000ef0 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ef1 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000ef2 91e9      	ld   r30,y+
000ef3 91f9      	ld   r31,y+
000ef4 9630      	adiw r30,0
000ef5 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ef6 e686     +LDI R24 , LOW ( 0xE66 )
000ef7 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000ef8 9701     +SBIW R24 , 1
000ef9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000efa 95a8      	wdr
000efb 9731      	sbiw r30,1
000efc f7c9      	brne __delay_ms0
                 __delay_ms1:
000efd 9508      	ret
                 
                 __ANEGF1:
000efe 9730      	SBIW R30,0
000eff 4060      	SBCI R22,0
000f00 4070      	SBCI R23,0
000f01 f009      	BREQ __ANEGF10
000f02 5870      	SUBI R23,0x80
                 __ANEGF10:
000f03 9508      	RET
                 
                 __ROUND_REPACK:
000f04 2355      	TST  R21
000f05 f442      	BRPL __REPACK
000f06 3850      	CPI  R21,0x80
000f07 f411      	BRNE __ROUND_REPACK0
000f08 ffe0      	SBRS R30,0
000f09 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000f0a 9631      	ADIW R30,1
000f0b 1f69      	ADC  R22,R25
000f0c 1f79      	ADC  R23,R25
000f0d f06b      	BRVS __REPACK1
                 
                 __REPACK:
000f0e e850      	LDI  R21,0x80
000f0f 2757      	EOR  R21,R23
000f10 f411      	BRNE __REPACK0
000f11 935f      	PUSH R21
000f12 c0cf      	RJMP __ZERORES
                 __REPACK0:
000f13 3f5f      	CPI  R21,0xFF
000f14 f031      	BREQ __REPACK1
000f15 0f66      	LSL  R22
000f16 0c00      	LSL  R0
000f17 9557      	ROR  R21
000f18 9567      	ROR  R22
000f19 2f75      	MOV  R23,R21
000f1a 9508      	RET
                 __REPACK1:
000f1b 935f      	PUSH R21
000f1c 2000      	TST  R0
000f1d f00a      	BRMI __REPACK2
000f1e c0cf      	RJMP __MAXRES
                 __REPACK2:
000f1f c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000f20 e850      	LDI  R21,0x80
000f21 2e19      	MOV  R1,R25
000f22 2215      	AND  R1,R21
000f23 0f88      	LSL  R24
000f24 1f99      	ROL  R25
000f25 2795      	EOR  R25,R21
000f26 0f55      	LSL  R21
000f27 9587      	ROR  R24
                 
                 __UNPACK1:
000f28 e850      	LDI  R21,0x80
000f29 2e07      	MOV  R0,R23
000f2a 2205      	AND  R0,R21
000f2b 0f66      	LSL  R22
000f2c 1f77      	ROL  R23
000f2d 2775      	EOR  R23,R21
000f2e 0f55      	LSL  R21
000f2f 9567      	ROR  R22
000f30 9508      	RET
                 
                 __CFD1U:
000f31 9468      	SET
000f32 c001      	RJMP __CFD1U0
                 __CFD1:
000f33 94e8      	CLT
                 __CFD1U0:
000f34 935f      	PUSH R21
000f35 dff2      	RCALL __UNPACK1
000f36 3870      	CPI  R23,0x80
000f37 f018      	BRLO __CFD10
000f38 3f7f      	CPI  R23,0xFF
000f39 f408      	BRCC __CFD10
000f3a c0a7      	RJMP __ZERORES
                 __CFD10:
000f3b e156      	LDI  R21,22
000f3c 1b57      	SUB  R21,R23
000f3d f4aa      	BRPL __CFD11
000f3e 9551      	NEG  R21
000f3f 3058      	CPI  R21,8
000f40 f40e      	BRTC __CFD19
000f41 3059      	CPI  R21,9
                 __CFD19:
000f42 f030      	BRLO __CFD17
000f43 efef      	SER  R30
000f44 efff      	SER  R31
000f45 ef6f      	SER  R22
000f46 e77f      	LDI  R23,0x7F
000f47 f977      	BLD  R23,7
000f48 c01a      	RJMP __CFD15
                 __CFD17:
000f49 2777      	CLR  R23
000f4a 2355      	TST  R21
000f4b f0b9      	BREQ __CFD15
                 __CFD18:
000f4c 0fee      	LSL  R30
000f4d 1fff      	ROL  R31
000f4e 1f66      	ROL  R22
000f4f 1f77      	ROL  R23
000f50 955a      	DEC  R21
000f51 f7d1      	BRNE __CFD18
000f52 c010      	RJMP __CFD15
                 __CFD11:
000f53 2777      	CLR  R23
                 __CFD12:
000f54 3058      	CPI  R21,8
000f55 f028      	BRLO __CFD13
000f56 2fef      	MOV  R30,R31
000f57 2ff6      	MOV  R31,R22
000f58 2f67      	MOV  R22,R23
000f59 5058      	SUBI R21,8
000f5a cff9      	RJMP __CFD12
                 __CFD13:
000f5b 2355      	TST  R21
000f5c f031      	BREQ __CFD15
                 __CFD14:
000f5d 9576      	LSR  R23
000f5e 9567      	ROR  R22
000f5f 95f7      	ROR  R31
000f60 95e7      	ROR  R30
000f61 955a      	DEC  R21
000f62 f7d1      	BRNE __CFD14
                 __CFD15:
000f63 2000      	TST  R0
000f64 f40a      	BRPL __CFD16
000f65 d149      	RCALL __ANEGD1
                 __CFD16:
000f66 915f      	POP  R21
000f67 9508      	RET
                 
                 __CDF1U:
000f68 9468      	SET
000f69 c001      	RJMP __CDF1U0
                 __CDF1:
000f6a 94e8      	CLT
                 __CDF1U0:
000f6b 9730      	SBIW R30,0
000f6c 4060      	SBCI R22,0
000f6d 4070      	SBCI R23,0
000f6e f0b1      	BREQ __CDF10
000f6f 2400      	CLR  R0
000f70 f026      	BRTS __CDF11
000f71 2377      	TST  R23
000f72 f412      	BRPL __CDF11
000f73 9400      	COM  R0
000f74 d13a      	RCALL __ANEGD1
                 __CDF11:
000f75 2e17      	MOV  R1,R23
000f76 e17e      	LDI  R23,30
000f77 2011      	TST  R1
                 __CDF12:
000f78 f032      	BRMI __CDF13
000f79 957a      	DEC  R23
000f7a 0fee      	LSL  R30
000f7b 1fff      	ROL  R31
000f7c 1f66      	ROL  R22
000f7d 1c11      	ROL  R1
000f7e cff9      	RJMP __CDF12
                 __CDF13:
000f7f 2fef      	MOV  R30,R31
000f80 2ff6      	MOV  R31,R22
000f81 2d61      	MOV  R22,R1
000f82 935f      	PUSH R21
000f83 df8a      	RCALL __REPACK
000f84 915f      	POP  R21
                 __CDF10:
000f85 9508      	RET
                 
                 __SWAPACC:
000f86 934f      	PUSH R20
000f87 01af      	MOVW R20,R30
000f88 01fd      	MOVW R30,R26
000f89 01da      	MOVW R26,R20
000f8a 01ab      	MOVW R20,R22
000f8b 01bc      	MOVW R22,R24
000f8c 01ca      	MOVW R24,R20
000f8d 2d40      	MOV  R20,R0
000f8e 2c01      	MOV  R0,R1
000f8f 2e14      	MOV  R1,R20
000f90 914f      	POP  R20
000f91 9508      	RET
                 
                 __UADD12:
000f92 0fea      	ADD  R30,R26
000f93 1ffb      	ADC  R31,R27
000f94 1f68      	ADC  R22,R24
000f95 9508      	RET
                 
                 __NEGMAN1:
000f96 95e0      	COM  R30
000f97 95f0      	COM  R31
000f98 9560      	COM  R22
000f99 5fef      	SUBI R30,-1
000f9a 4fff      	SBCI R31,-1
000f9b 4f6f      	SBCI R22,-1
000f9c 9508      	RET
                 
                 __SUBF12:
000f9d 935f      	PUSH R21
000f9e df81      	RCALL __UNPACK
000f9f 3890      	CPI  R25,0x80
000fa0 f171      	BREQ __ADDF129
000fa1 e850      	LDI  R21,0x80
000fa2 2615      	EOR  R1,R21
                 
000fa3 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000fa4 935f      	PUSH R21
000fa5 df7a      	RCALL __UNPACK
000fa6 3890      	CPI  R25,0x80
000fa7 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000fa8 3870      	CPI  R23,0x80
000fa9 f121      	BREQ __ADDF128
                 __ADDF121:
000faa 2f57      	MOV  R21,R23
000fab 1b59      	SUB  R21,R25
000fac f12b      	BRVS __ADDF1211
000fad f412      	BRPL __ADDF122
000fae dfd7      	RCALL __SWAPACC
000faf cffa      	RJMP __ADDF121
                 __ADDF122:
000fb0 3158      	CPI  R21,24
000fb1 f018      	BRLO __ADDF123
000fb2 27aa      	CLR  R26
000fb3 27bb      	CLR  R27
000fb4 2788      	CLR  R24
                 __ADDF123:
000fb5 3058      	CPI  R21,8
000fb6 f028      	BRLO __ADDF124
000fb7 2fab      	MOV  R26,R27
000fb8 2fb8      	MOV  R27,R24
000fb9 2788      	CLR  R24
000fba 5058      	SUBI R21,8
000fbb cff9      	RJMP __ADDF123
                 __ADDF124:
000fbc 2355      	TST  R21
000fbd f029      	BREQ __ADDF126
                 __ADDF125:
000fbe 9586      	LSR  R24
000fbf 95b7      	ROR  R27
000fc0 95a7      	ROR  R26
000fc1 955a      	DEC  R21
000fc2 f7d9      	BRNE __ADDF125
                 __ADDF126:
000fc3 2d50      	MOV  R21,R0
000fc4 2551      	EOR  R21,R1
000fc5 f072      	BRMI __ADDF127
000fc6 dfcb      	RCALL __UADD12
000fc7 f438      	BRCC __ADDF129
000fc8 9567      	ROR  R22
000fc9 95f7      	ROR  R31
000fca 95e7      	ROR  R30
000fcb 9573      	INC  R23
000fcc f413      	BRVC __ADDF129
000fcd c020      	RJMP __MAXRES
                 __ADDF128:
000fce dfb7      	RCALL __SWAPACC
                 __ADDF129:
000fcf df3e      	RCALL __REPACK
000fd0 915f      	POP  R21
000fd1 9508      	RET
                 __ADDF1211:
000fd2 f7d8      	BRCC __ADDF128
000fd3 cffb      	RJMP __ADDF129
                 __ADDF127:
000fd4 1bea      	SUB  R30,R26
000fd5 0bfb      	SBC  R31,R27
000fd6 0b68      	SBC  R22,R24
000fd7 f051      	BREQ __ZERORES
000fd8 f410      	BRCC __ADDF1210
000fd9 9400      	COM  R0
000fda dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000fdb 2366      	TST  R22
000fdc f392      	BRMI __ADDF129
000fdd 0fee      	LSL  R30
000fde 1fff      	ROL  R31
000fdf 1f66      	ROL  R22
000fe0 957a      	DEC  R23
000fe1 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000fe2 27ee      	CLR  R30
000fe3 27ff      	CLR  R31
000fe4 2766      	CLR  R22
000fe5 2777      	CLR  R23
000fe6 915f      	POP  R21
000fe7 9508      	RET
                 
                 __MINRES:
000fe8 efef      	SER  R30
000fe9 efff      	SER  R31
000fea e76f      	LDI  R22,0x7F
000feb ef7f      	SER  R23
000fec 915f      	POP  R21
000fed 9508      	RET
                 
                 __MAXRES:
000fee efef      	SER  R30
000fef efff      	SER  R31
000ff0 e76f      	LDI  R22,0x7F
000ff1 e77f      	LDI  R23,0x7F
000ff2 915f      	POP  R21
000ff3 9508      	RET
                 
                 __MULF12:
000ff4 935f      	PUSH R21
000ff5 df2a      	RCALL __UNPACK
000ff6 3870      	CPI  R23,0x80
000ff7 f351      	BREQ __ZERORES
000ff8 3890      	CPI  R25,0x80
000ff9 f341      	BREQ __ZERORES
000ffa 2401      	EOR  R0,R1
000ffb 9408      	SEC
000ffc 1f79      	ADC  R23,R25
000ffd f423      	BRVC __MULF124
000ffe f31c      	BRLT __ZERORES
                 __MULF125:
000fff 2000      	TST  R0
001000 f33a      	BRMI __MINRES
001001 cfec      	RJMP __MAXRES
                 __MULF124:
001002 920f      	PUSH R0
001003 931f      	PUSH R17
001004 932f      	PUSH R18
001005 933f      	PUSH R19
001006 934f      	PUSH R20
001007 2711      	CLR  R17
001008 2722      	CLR  R18
001009 2799      	CLR  R25
00100a 9f68      	MUL  R22,R24
00100b 01a0      	MOVW R20,R0
00100c 9f8f      	MUL  R24,R31
00100d 2d30      	MOV  R19,R0
00100e 0d41      	ADD  R20,R1
00100f 1f59      	ADC  R21,R25
001010 9f6b      	MUL  R22,R27
001011 0d30      	ADD  R19,R0
001012 1d41      	ADC  R20,R1
001013 1f59      	ADC  R21,R25
001014 9f8e      	MUL  R24,R30
001015 d027      	RCALL __MULF126
001016 9fbf      	MUL  R27,R31
001017 d025      	RCALL __MULF126
001018 9f6a      	MUL  R22,R26
001019 d023      	RCALL __MULF126
00101a 9fbe      	MUL  R27,R30
00101b d01d      	RCALL __MULF127
00101c 9faf      	MUL  R26,R31
00101d d01b      	RCALL __MULF127
00101e 9fae      	MUL  R26,R30
00101f 0d11      	ADD  R17,R1
001020 1f29      	ADC  R18,R25
001021 1f39      	ADC  R19,R25
001022 1f49      	ADC  R20,R25
001023 1f59      	ADC  R21,R25
001024 2fe3      	MOV  R30,R19
001025 2ff4      	MOV  R31,R20
001026 2f65      	MOV  R22,R21
001027 2f52      	MOV  R21,R18
001028 914f      	POP  R20
001029 913f      	POP  R19
00102a 912f      	POP  R18
00102b 911f      	POP  R17
00102c 900f      	POP  R0
00102d 2366      	TST  R22
00102e f02a      	BRMI __MULF122
00102f 0f55      	LSL  R21
001030 1fee      	ROL  R30
001031 1fff      	ROL  R31
001032 1f66      	ROL  R22
001033 c002      	RJMP __MULF123
                 __MULF122:
001034 9573      	INC  R23
001035 f24b      	BRVS __MULF125
                 __MULF123:
001036 decd      	RCALL __ROUND_REPACK
001037 915f      	POP  R21
001038 9508      	RET
                 
                 __MULF127:
001039 0d10      	ADD  R17,R0
00103a 1d21      	ADC  R18,R1
00103b 1f39      	ADC  R19,R25
00103c c002      	RJMP __MULF128
                 __MULF126:
00103d 0d20      	ADD  R18,R0
00103e 1d31      	ADC  R19,R1
                 __MULF128:
00103f 1f49      	ADC  R20,R25
001040 1f59      	ADC  R21,R25
001041 9508      	RET
                 
                 __DIVF21:
001042 935f      	PUSH R21
001043 dedc      	RCALL __UNPACK
001044 3870      	CPI  R23,0x80
001045 f421      	BRNE __DIVF210
001046 2011      	TST  R1
                 __DIVF211:
001047 f40a      	BRPL __DIVF219
001048 cf9f      	RJMP __MINRES
                 __DIVF219:
001049 cfa4      	RJMP __MAXRES
                 __DIVF210:
00104a 3890      	CPI  R25,0x80
00104b f409      	BRNE __DIVF218
                 __DIVF217:
00104c cf95      	RJMP __ZERORES
                 __DIVF218:
00104d 2401      	EOR  R0,R1
00104e 9408      	SEC
00104f 0b97      	SBC  R25,R23
001050 f41b      	BRVC __DIVF216
001051 f3d4      	BRLT __DIVF217
001052 2000      	TST  R0
001053 cff3      	RJMP __DIVF211
                 __DIVF216:
001054 2f79      	MOV  R23,R25
001055 931f      	PUSH R17
001056 932f      	PUSH R18
001057 933f      	PUSH R19
001058 934f      	PUSH R20
001059 2411      	CLR  R1
00105a 2711      	CLR  R17
00105b 2722      	CLR  R18
00105c 2733      	CLR  R19
00105d 2744      	CLR  R20
00105e 2755      	CLR  R21
00105f e290      	LDI  R25,32
                 __DIVF212:
001060 17ae      	CP   R26,R30
001061 07bf      	CPC  R27,R31
001062 0786      	CPC  R24,R22
001063 0741      	CPC  R20,R17
001064 f030      	BRLO __DIVF213
001065 1bae      	SUB  R26,R30
001066 0bbf      	SBC  R27,R31
001067 0b86      	SBC  R24,R22
001068 0b41      	SBC  R20,R17
001069 9408      	SEC
00106a c001      	RJMP __DIVF214
                 __DIVF213:
00106b 9488      	CLC
                 __DIVF214:
00106c 1f55      	ROL  R21
00106d 1f22      	ROL  R18
00106e 1f33      	ROL  R19
00106f 1c11      	ROL  R1
001070 1faa      	ROL  R26
001071 1fbb      	ROL  R27
001072 1f88      	ROL  R24
001073 1f44      	ROL  R20
001074 959a      	DEC  R25
001075 f751      	BRNE __DIVF212
001076 01f9      	MOVW R30,R18
001077 2d61      	MOV  R22,R1
001078 914f      	POP  R20
001079 913f      	POP  R19
00107a 912f      	POP  R18
00107b 911f      	POP  R17
00107c 2366      	TST  R22
00107d f032      	BRMI __DIVF215
00107e 0f55      	LSL  R21
00107f 1fee      	ROL  R30
001080 1fff      	ROL  R31
001081 1f66      	ROL  R22
001082 957a      	DEC  R23
001083 f243      	BRVS __DIVF217
                 __DIVF215:
001084 de7f      	RCALL __ROUND_REPACK
001085 915f      	POP  R21
001086 9508      	RET
                 
                 __CMPF12:
001087 2399      	TST  R25
001088 f09a      	BRMI __CMPF120
001089 2377      	TST  R23
00108a f042      	BRMI __CMPF121
00108b 1797      	CP   R25,R23
00108c f048      	BRLO __CMPF122
00108d f429      	BRNE __CMPF121
00108e 17ae      	CP   R26,R30
00108f 07bf      	CPC  R27,R31
001090 0786      	CPC  R24,R22
001091 f020      	BRLO __CMPF122
001092 f031      	BREQ __CMPF123
                 __CMPF121:
001093 9498      	CLZ
001094 9488      	CLC
001095 9508      	RET
                 __CMPF122:
001096 9498      	CLZ
001097 9408      	SEC
001098 9508      	RET
                 __CMPF123:
001099 9418      	SEZ
00109a 9488      	CLC
00109b 9508      	RET
                 __CMPF120:
00109c 2377      	TST  R23
00109d f7c2      	BRPL __CMPF122
00109e 1797      	CP   R25,R23
00109f f398      	BRLO __CMPF121
0010a0 f7a9      	BRNE __CMPF122
0010a1 17ea      	CP   R30,R26
0010a2 07fb      	CPC  R31,R27
0010a3 0768      	CPC  R22,R24
0010a4 f388      	BRLO __CMPF122
0010a5 f399      	BREQ __CMPF123
0010a6 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0010a7 2400      	CLR  R0
0010a8 0daf      	ADD  R26,R15
0010a9 1db0      	ADC  R27,R0
0010aa 9508      	RET
                 
                 __ANEGW1:
0010ab 95f1      	NEG  R31
0010ac 95e1      	NEG  R30
0010ad 40f0      	SBCI R31,0
0010ae 9508      	RET
                 
                 __ANEGD1:
0010af 95f0      	COM  R31
0010b0 9560      	COM  R22
0010b1 9570      	COM  R23
0010b2 95e1      	NEG  R30
0010b3 4fff      	SBCI R31,-1
0010b4 4f6f      	SBCI R22,-1
0010b5 4f7f      	SBCI R23,-1
0010b6 9508      	RET
                 
                 __ASRW8:
0010b7 2fef      	MOV  R30,R31
0010b8 27ff      	CLR  R31
0010b9 fde7      	SBRC R30,7
0010ba efff      	SER  R31
0010bb 9508      	RET
                 
                 __CBD1:
0010bc 2ffe      	MOV  R31,R30
0010bd 0fff      	ADD  R31,R31
0010be 0bff      	SBC  R31,R31
0010bf 2f6f      	MOV  R22,R31
0010c0 2f7f      	MOV  R23,R31
0010c1 9508      	RET
                 
                 __CWD1:
0010c2 2f6f      	MOV  R22,R31
0010c3 0f66      	ADD  R22,R22
0010c4 0b66      	SBC  R22,R22
0010c5 2f76      	MOV  R23,R22
0010c6 9508      	RET
                 
                 __CWD2:
0010c7 2f8b      	MOV  R24,R27
0010c8 0f88      	ADD  R24,R24
0010c9 0b88      	SBC  R24,R24
0010ca 2f98      	MOV  R25,R24
0010cb 9508      	RET
                 
                 __MULW12U:
0010cc 9ffa      	MUL  R31,R26
0010cd 2df0      	MOV  R31,R0
0010ce 9feb      	MUL  R30,R27
0010cf 0df0      	ADD  R31,R0
0010d0 9fea      	MUL  R30,R26
0010d1 2de0      	MOV  R30,R0
0010d2 0df1      	ADD  R31,R1
0010d3 9508      	RET
                 
                 __DIVB21U:
0010d4 2400      	CLR  R0
0010d5 e098      	LDI  R25,8
                 __DIVB21U1:
0010d6 0faa      	LSL  R26
0010d7 1c00      	ROL  R0
0010d8 1a0e      	SUB  R0,R30
0010d9 f410      	BRCC __DIVB21U2
0010da 0e0e      	ADD  R0,R30
0010db c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0010dc 60a1      	SBR  R26,1
                 __DIVB21U3:
0010dd 959a      	DEC  R25
0010de f7b9      	BRNE __DIVB21U1
0010df 2fea      	MOV  R30,R26
0010e0 2da0      	MOV  R26,R0
0010e1 9508      	RET
                 
                 __DIVB21:
0010e2 d039      	RCALL __CHKSIGNB
0010e3 dff0      	RCALL __DIVB21U
0010e4 f40e      	BRTC __DIVB211
0010e5 95e1      	NEG  R30
                 __DIVB211:
0010e6 9508      	RET
                 
                 __DIVD21U:
0010e7 933f      	PUSH R19
0010e8 934f      	PUSH R20
0010e9 935f      	PUSH R21
0010ea 2400      	CLR  R0
0010eb 2411      	CLR  R1
0010ec 2744      	CLR  R20
0010ed 2755      	CLR  R21
0010ee e230      	LDI  R19,32
                 __DIVD21U1:
0010ef 0faa      	LSL  R26
0010f0 1fbb      	ROL  R27
0010f1 1f88      	ROL  R24
0010f2 1f99      	ROL  R25
0010f3 1c00      	ROL  R0
0010f4 1c11      	ROL  R1
0010f5 1f44      	ROL  R20
0010f6 1f55      	ROL  R21
0010f7 1a0e      	SUB  R0,R30
0010f8 0a1f      	SBC  R1,R31
0010f9 0b46      	SBC  R20,R22
0010fa 0b57      	SBC  R21,R23
0010fb f428      	BRCC __DIVD21U2
0010fc 0e0e      	ADD  R0,R30
0010fd 1e1f      	ADC  R1,R31
0010fe 1f46      	ADC  R20,R22
0010ff 1f57      	ADC  R21,R23
001100 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001101 60a1      	SBR  R26,1
                 __DIVD21U3:
001102 953a      	DEC  R19
001103 f759      	BRNE __DIVD21U1
001104 01fd      	MOVW R30,R26
001105 01bc      	MOVW R22,R24
001106 01d0      	MOVW R26,R0
001107 01ca      	MOVW R24,R20
001108 915f      	POP  R21
001109 914f      	POP  R20
00110a 913f      	POP  R19
00110b 9508      	RET
                 
                 __MODB21:
00110c 94e8      	CLT
00110d ffa7      	SBRS R26,7
00110e c002      	RJMP __MODB211
00110f 95a1      	NEG  R26
001110 9468      	SET
                 __MODB211:
001111 fde7      	SBRC R30,7
001112 95e1      	NEG  R30
001113 dfc0      	RCALL __DIVB21U
001114 2fea      	MOV  R30,R26
001115 f40e      	BRTC __MODB212
001116 95e1      	NEG  R30
                 __MODB212:
001117 9508      	RET
                 
                 __MODD21U:
001118 dfce      	RCALL __DIVD21U
001119 01fd      	MOVW R30,R26
00111a 01bc      	MOVW R22,R24
00111b 9508      	RET
                 
                 __CHKSIGNB:
00111c 94e8      	CLT
00111d ffe7      	SBRS R30,7
00111e c002      	RJMP __CHKSB1
00111f 95e1      	NEG  R30
001120 9468      	SET
                 __CHKSB1:
001121 ffa7      	SBRS R26,7
001122 c004      	RJMP __CHKSB2
001123 95a1      	NEG  R26
001124 f800      	BLD  R0,0
001125 9403      	INC  R0
001126 fa00      	BST  R0,0
                 __CHKSB2:
001127 9508      	RET
                 
                 __GETW1P:
001128 91ed      	LD   R30,X+
001129 91fc      	LD   R31,X
00112a 9711      	SBIW R26,1
00112b 9508      	RET
                 
                 __GETD1P:
00112c 91ed      	LD   R30,X+
00112d 91fd      	LD   R31,X+
00112e 916d      	LD   R22,X+
00112f 917c      	LD   R23,X
001130 9713      	SBIW R26,3
001131 9508      	RET
                 
                 __PUTDP1:
001132 93ed      	ST   X+,R30
001133 93fd      	ST   X+,R31
001134 936d      	ST   X+,R22
001135 937c      	ST   X,R23
001136 9508      	RET
                 
                 __GETD1S0:
001137 81e8      	LD   R30,Y
001138 81f9      	LDD  R31,Y+1
001139 816a      	LDD  R22,Y+2
00113a 817b      	LDD  R23,Y+3
00113b 9508      	RET
                 
                 __GETD2S0:
00113c 81a8      	LD   R26,Y
00113d 81b9      	LDD  R27,Y+1
00113e 818a      	LDD  R24,Y+2
00113f 819b      	LDD  R25,Y+3
001140 9508      	RET
                 
                 __PUTD1S0:
001141 83e8      	ST   Y,R30
001142 83f9      	STD  Y+1,R31
001143 836a      	STD  Y+2,R22
001144 837b      	STD  Y+3,R23
001145 9508      	RET
                 
                 __PUTPARD1L:
001146 e060      	LDI  R22,0
001147 e070      	LDI  R23,0
                 __PUTPARD1:
001148 937a      	ST   -Y,R23
001149 936a      	ST   -Y,R22
00114a 93fa      	ST   -Y,R31
00114b 93ea      	ST   -Y,R30
00114c 9508      	RET
                 
                 __CDF2U:
00114d 9468      	SET
00114e c001      	RJMP __CDF2U0
                 __CDF2:
00114f 94e8      	CLT
                 __CDF2U0:
001150 d001      	RCALL __SWAPD12
001151 de19      	RCALL __CDF1U0
                 
                 __SWAPD12:
001152 2e18      	MOV  R1,R24
001153 2f86      	MOV  R24,R22
001154 2d61      	MOV  R22,R1
001155 2e19      	MOV  R1,R25
001156 2f97      	MOV  R25,R23
001157 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001158 2e1b      	MOV  R1,R27
001159 2fbf      	MOV  R27,R31
00115a 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00115b 2e1a      	MOV  R1,R26
00115c 2fae      	MOV  R26,R30
00115d 2de1      	MOV  R30,R1
00115e 9508      	RET
                 
                 __CPD10:
00115f 9730      	SBIW R30,0
001160 4060      	SBCI R22,0
001161 4070      	SBCI R23,0
001162 9508      	RET
                 
                 __CPD02:
001163 2400      	CLR  R0
001164 160a      	CP   R0,R26
001165 060b      	CPC  R0,R27
001166 0608      	CPC  R0,R24
001167 0609      	CPC  R0,R25
001168 9508      	RET
                 
                 __SAVELOCR6:
001169 935a      	ST   -Y,R21
                 __SAVELOCR5:
00116a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00116b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00116c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00116d 931a      	ST   -Y,R17
00116e 930a      	ST   -Y,R16
00116f 9508      	RET
                 
                 __LOADLOCR6:
001170 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001171 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001172 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001173 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001174 8119      	LDD  R17,Y+1
001175 8108      	LD   R16,Y
001176 9508      	RET
                 
                 __INITLOCW:
001177 0fac      	ADD  R26,R28
001178 1fbd      	ADC  R27,R29
                 __INITLOC0:
001179 9005      	LPM  R0,Z+
00117a 920d      	ST   X+,R0
00117b 9701      	SBIW R24,1
00117c f7e1      	BRNE __INITLOC0
00117d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 121 r1 :  54 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   6 r9 :   4 r10:   0 r11:   0 r12:   5 r13:   2 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  72 r21: 105 r22: 155 r23: 138 
r24: 102 r25:  88 r26: 320 r27: 164 r28: 107 r29:   3 r30: 850 r31: 366 
x  : 190 y  : 604 z  :  75 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  22 
adiw  :  54 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  69 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  79 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 359 
cbi   :   2 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  71 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  23 cpc   :  28 cpi   : 126 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  26 inc   :   6 jmp   :  54 ld    : 152 ldd   : 284 
ldi   : 413 lds   :  10 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 114 
movw  : 160 mul   :  15 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  30 pop   :  57 push  :  57 rcall :  90 
ret   : 136 reti  :   3 rjmp  : 195 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  78 sbi   :   6 sbic  :   0 sbis  :   2 sbiw  :  47 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 291 std   : 128 sts   :  13 sub   :   6 subi  : 115 
swap  :   0 tst   :  27 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0022fc   8316    640   8956  131072   6.8%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 11 warnings
