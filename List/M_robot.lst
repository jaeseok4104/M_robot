
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Thu Feb 27 15:12:58 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01e2 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 06cb 	JMP  _hall_sensor_detection1
00000c 940c 06d9 	JMP  _hall_sensor_detection2
00000e 940c 06e7 	JMP  _hall_sensor_detection3
000010 940c 06fc 	JMP  _hall_sensor_detection4
000012 940c 04c8 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 04e5 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 04d4 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 050f 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0530 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 0000
000169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016a 0000
00016b 0000
00016c 0000
00016d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0000
000174 0000
000175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000176 0000
000177 0000
000178 0000
000179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017a 0000
00017b 0000
00017c 0000
00017d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017e 0000
00017f 0000
000180 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000181 253c
000182 3e64
000183 2500
000184 332e      	.DB  0x3C,0x25,0x64,0x3E,0x0,0x25,0x2E,0x33
000185 2c66
000186 2520
000187 332e
000188 2c66      	.DB  0x66,0x2C,0x20,0x25,0x2E,0x33,0x66,0x2C
000189 2520
00018a 332e
00018b 0a66
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1186): warning: .cseg .db misalignment - padding zero byte
00018c 0000      	.DB  0x20,0x25,0x2E,0x33,0x66,0xA,0x0
                 _0x80003:
00018d 0000
00018e 0000
00018f 0000
000190 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000191 0000
000192 0000
000193 0000
000194 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000195 0000
000196 0000
000197 0000
000198 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000199 0000
00019a 0000
00019b 0000
00019c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019d 0000
00019e 0000
00019f 0000
0001a0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a1 0000
0001a2 0000
0001a3 0000
0001a4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a5 0000
0001a6 0000
0001a7 0000
0001a8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a9 0000
0001aa 0000
0001ab 0000
0001ac 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ad 0000
0001ae 0000
0001af 0000
0001b0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b1 0000
0001b2 0000
0001b3 0000
0001b4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b5 0000
0001b6 0000
0001b7 0000
0001b8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b9 0000
0001ba 0000
0001bb 0000
0001bc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001bd 0000
0001be 0000
0001bf 0000
0001c0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c1 0000
0001c2 0000
0001c3 0000
0001c4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c5 0000
0001c6 0000
0001c7 0000
0001c8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c9 0000
0001ca 0000
0001cb 0000
0001cc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001cd 0000
0001ce 0000
0001cf 0000
0001d0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d1 0000
0001d2 0000
0001d3 0000
0001d4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001d5 4e2d
0001d6 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1207): warning: .cseg .db misalignment - padding zero byte
0001d7 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1209): warning: .cseg .db misalignment - padding zero byte
0001d8 0001      	.DB  0x1
                 _0x2080000:
0001d9 4e2d
0001da 4e41
0001db 4900
0001dc 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1212): warning: .cseg .db misalignment - padding zero byte
0001dd 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001de 0001      	.DW  0x01
0001df 058a      	.DW  __seed_G104
0001e0 03b0      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001e1 0000      	.DW  0
                 
                 __RESET:
0001e2 94f8      	CLI
0001e3 27ee      	CLR  R30
0001e4 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001e5 e0f1      	LDI  R31,1
0001e6 bff5      	OUT  MCUCR,R31
0001e7 bfe5      	OUT  MCUCR,R30
0001e8 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001ea e1f8      	LDI  R31,0x18
0001eb bdf1      	OUT  WDTCR,R31
0001ec bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001ed e08d      	LDI  R24,(14-2)+1
0001ee e0a2      	LDI  R26,2
0001ef 27bb      	CLR  R27
                 __CLEAR_REG:
0001f0 93ed      	ST   X+,R30
0001f1 958a      	DEC  R24
0001f2 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001f3 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001f4 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001f5 e0a0      	LDI  R26,LOW(__SRAM_START)
0001f6 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001f7 93ed      	ST   X+,R30
0001f8 9701      	SBIW R24,1
0001f9 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001fa ebec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001fb e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001fc 9185      	LPM  R24,Z+
0001fd 9195      	LPM  R25,Z+
0001fe 9700      	SBIW R24,0
0001ff f061      	BREQ __GLOBAL_INI_END
000200 91a5      	LPM  R26,Z+
000201 91b5      	LPM  R27,Z+
000202 9005      	LPM  R0,Z+
000203 9015      	LPM  R1,Z+
000204 01bf      	MOVW R22,R30
000205 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000206 9005      	LPM  R0,Z+
000207 920d      	ST   X+,R0
000208 9701      	SBIW R24,1
000209 f7e1      	BRNE __GLOBAL_INI_LOOP
00020a 01fb      	MOVW R30,R22
00020b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00020c bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00020d efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00020e bfed      	OUT  SPL,R30
00020f e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000210 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000211 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000212 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000213 940c 0215 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define PREDICTION 0.3
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;long int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; 0000 001B     float a_buff;
                 ; 0000 001C     float v_buff;
                 ; 0000 001D 
                 ; 0000 001E     int velocity = 0;
                 ; 0000 001F     int angularV = 0;
                 ; 0000 0020     int velocity_R = 0;
                 ; 0000 0021     int velocity_L = 0;
                 ; 0000 0022     int del_ms = 0;
                 ; 0000 0023     float del_s = 0;
                 ; 0000 0024     float diameter = 0;
                 ; 0000 0025     int d_diameter = 0;
                 ; 0000 0026 
                 ; 0000 0027     int currentRPM_R = 0;
                 ; 0000 0028     int currentRPM_L = 0;
                 ; 0000 0029     float currentV_R = 0;
                 ; 0000 002A     float currentV_L = 0;
                 ; 0000 002B     int goal_current_R = 0;
                 ; 0000 002C     int goal_current_L = 0;
                 ; 0000 002D     float goal_currentV_R = 0;
                 ; 0000 002E     float goal_currentV_L = 0;
                 ; 0000 002F 
                 ; 0000 0030 
                 ; 0000 0031     float d_velocity = 0;
                 ; 0000 0032     float d_angularV = 0;
                 ; 0000 0033     float control_time = 0;
                 ; 0000 0034     float g_velocity = 0;
                 ; 0000 0035     float g_angularV = 0;
                 ; 0000 0036 
                 ; 0000 0037     float d_x = 0;
                 ; 0000 0038     float d_y = 0;
                 ; 0000 0039     float d_angular = 0;
                 ; 0000 003A     int d_angular_circula = 0;
                 ; 0000 003B     float g_x = 0;
                 ; 0000 003C     float g_y = 0;
                 ; 0000 003D     float g_angular = 0;
                 ; 0000 003E     int g_angular_circula = 0;
                 ; 0000 003F 
                 ; 0000 0040     float TIMER1_TIME = 0;
                 ; 0000 0041     float TIMER0_TIME = 0;
                 ; 0000 0042     float TIMER0_TIME_print = 0;
                 ; 0000 0043 
                 ; 0000 0044     char rootine_test = 0;
                 ; 0000 0045     char STOP_FLAG = 0;
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048     float hall_x = 0;
                 ; 0000 0049     float hall_y = 0;
                 ; 0000 004A     float hall_angular = 0;
                 ; 0000 004B     int hall_angular_circula = 0;
                 ; 0000 004C     float hall_velocity = 0;
                 ; 0000 004D 
                 ; 0000 004E     float motorR_distance = 0;
                 ; 0000 004F     float motorL_distance = 0;
                 ; 0000 0050     float a = 0;
                 ; 0000 0051 
                 ; 0000 0052     unsigned char BUFF[500] = {0,};
                 ; 0000 0053 
                 ; 0000 0054     usart1_init(bps_115200);
000215 97ef      	SBIW R28,63
000216 97ef      	SBIW R28,63
000217 50d2      	SUBI R29,2
                +
000218 e786     +LDI R24 , LOW ( 630 )
000219 e092     +LDI R25 , HIGH ( 630 )
                 	__GETWRN 24,25,630
00021a e0a0      	LDI  R26,LOW(0)
00021b e0b0      	LDI  R27,HIGH(0)
00021c e8ec      	LDI  R30,LOW(_0x3*2)
00021d e0f0      	LDI  R31,HIGH(_0x3*2)
00021e 940e 1311 	CALL __INITLOCW
                 ;	a_buff -> Y+634
                 ;	v_buff -> Y+630
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+628
                 ;	del_ms -> Y+626
                 ;	del_s -> Y+622
                 ;	diameter -> Y+618
                 ;	d_diameter -> Y+616
                 ;	currentRPM_R -> Y+614
                 ;	currentRPM_L -> Y+612
                 ;	currentV_R -> Y+608
                 ;	currentV_L -> Y+604
                 ;	goal_current_R -> Y+602
                 ;	goal_current_L -> Y+600
                 ;	goal_currentV_R -> Y+596
                 ;	goal_currentV_L -> Y+592
                 ;	d_velocity -> Y+588
                 ;	d_angularV -> Y+584
                 ;	control_time -> Y+580
                 ;	g_velocity -> Y+576
                 ;	g_angularV -> Y+572
                 ;	d_x -> Y+568
                 ;	d_y -> Y+564
                 ;	d_angular -> Y+560
                 ;	d_angular_circula -> Y+558
                 ;	g_x -> Y+554
                 ;	g_y -> Y+550
                 ;	g_angular -> Y+546
                 ;	g_angular_circula -> Y+544
                 ;	TIMER1_TIME -> Y+540
                 ;	TIMER0_TIME -> Y+536
                 ;	TIMER0_TIME_print -> Y+532
                 ;	rootine_test -> Y+531
                 ;	STOP_FLAG -> Y+530
                 ;	hall_x -> Y+526
                 ;	hall_y -> Y+522
                 ;	hall_angular -> Y+518
                 ;	hall_angular_circula -> Y+516
                 ;	hall_velocity -> Y+512
                 ;	motorR_distance -> Y+508
                 ;	motorL_distance -> Y+504
                 ;	a -> Y+500
                 ;	BUFF -> Y+0
                +
000220 e000     +LDI R16 , LOW ( 0 )
000221 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000222 e020     +LDI R18 , LOW ( 0 )
000223 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000224 e040     +LDI R20 , LOW ( 0 )
000225 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000226 e0e7      	LDI  R30,LOW(7)
000227 e0f0      	LDI  R31,HIGH(7)
000228 93fa      	ST   -Y,R31
000229 93ea      	ST   -Y,R30
00022a 940e 0567 	CALL _usart1_init
                 ; 0000 0055     usart0_init(bps_115200);
00022c e0e7      	LDI  R30,LOW(7)
00022d e0f0      	LDI  R31,HIGH(7)
00022e 93fa      	ST   -Y,R31
00022f 93ea      	ST   -Y,R30
000230 940e 057f 	CALL _usart0_init
                 ; 0000 0056     timer2_init();
000232 d2c4      	RCALL _timer2_init
                 ; 0000 0057     timer0_init();
000233 d2c9      	RCALL _timer0_init
                 ; 0000 0058     timer1_init();
000234 d2cc      	RCALL _timer1_init
                 ; 0000 0059     EXT_INT_init();
000235 940e 06c2 	CALL _EXT_INT_init
                 ; 0000 005A     SREG |= 0x80;
000237 9478      	BSET 7
                 ; 0000 005B     DDRB.1 = 1;
000238 9ab9      	SBI  0x17,1
                 ; 0000 005C     DDRB.2 = 1;
000239 9aba      	SBI  0x17,2
                 ; 0000 005D     DDRB.3 = 1;
00023a 9abb      	SBI  0x17,3
                 ; 0000 005E     delay_ms(5000);
00023b e8e8      	LDI  R30,LOW(5000)
00023c e1f3      	LDI  R31,HIGH(5000)
00023d 940e 0db4 	CALL SUBOPT_0x0
                 ; 0000 005F 
                 ; 0000 0060     TIMER0_OVERFLOW = 0;
00023f 940e 0db8 	CALL SUBOPT_0x1
                 ; 0000 0061     TCNT0 = 0;
                 ; 0000 0062 
                 ; 0000 0063     while(1)
                 _0xA:
                 ; 0000 0064     {
                 ; 0000 0065         if(CHECK_GETS)
000241 91e0 0581 	LDS  R30,_CHECK_GETS
000243 30e0      	CPI  R30,0
000244 f411      	BRNE PC+3
000245 940c 0330 	JMP _0xD
                 ; 0000 0066         {
                 ; 0000 0067             UCSR1B &= ~(1<<RXEN1);
000247 91e0 009a 	LDS  R30,154
000249 7eef      	ANDI R30,0xEF
00024a 93e0 009a 	STS  154,R30
                 ; 0000 0068             // sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
                 ; 0000 0069             sscanf(VELOCITY_BUFF,"<%d>", &d_diameter);
00024c e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
00024d e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
00024e 93fa      	ST   -Y,R31
00024f 93ea      	ST   -Y,R30
                +
000250 e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000251 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000252 93fa      	ST   -Y,R31
000253 93ea      	ST   -Y,R30
000254 01fe      	MOVW R30,R28
000255 59e4      	SUBI R30,LOW(-(620))
000256 4ffd      	SBCI R31,HIGH(-(620))
000257 2766      	CLR  R22
000258 2777      	CLR  R23
000259 940e 12e4 	CALL __PUTPARD1
00025b e084      	LDI  R24,4
00025c 940e 0bd2 	CALL _sscanf
00025e 9628      	ADIW R28,8
                 ; 0000 006A             if(!del_ms){
                +
00025f 01fe     +MOVW R30 , R28
000260 58ee     +SUBI R30 , LOW ( - 626 )
000261 4ffd     +SBCI R31 , HIGH ( - 626 )
000262 9001     +LD R0 , Z +
000263 81f0     +LD R31 , Z
000264 2de0     +MOV R30 , R0
                 	__GETW1SX 626
000265 9730      	SBIW R30,0
000266 f4b1      	BRNE _0xE
                 ; 0000 006B                 d_x = 0;
000267 e0e0      	LDI  R30,LOW(0)
                +
000268 01de     +MOVW R26 , R28
000269 5ca8     +SUBI R26 , LOW ( - 568 )
00026a 4fbd     +SBCI R27 , HIGH ( - 568 )
00026b 93ed     +ST X + , R30
00026c 93ed     +ST X + , R30
00026d 93ed     +ST X + , R30
00026e 93ec     +ST X , R30
                 	__CLRD1SX 568
                 ; 0000 006C                 d_y = 0;
                +
00026f 01de     +MOVW R26 , R28
000270 5cac     +SUBI R26 , LOW ( - 564 )
000271 4fbd     +SBCI R27 , HIGH ( - 564 )
000272 93ed     +ST X + , R30
000273 93ed     +ST X + , R30
000274 93ed     +ST X + , R30
000275 93ec     +ST X , R30
                 	__CLRD1SX 564
                 ; 0000 006D                 d_angular = 0;
                +
000276 01de     +MOVW R26 , R28
000277 5da0     +SUBI R26 , LOW ( - 560 )
000278 4fbd     +SBCI R27 , HIGH ( - 560 )
000279 93ed     +ST X + , R30
00027a 93ed     +ST X + , R30
00027b 93ed     +ST X + , R30
00027c 93ec     +ST X , R30
                 	__CLRD1SX 560
                 ; 0000 006E             }
                 ; 0000 006F 
                 ; 0000 0070             if(d_diameter>0){
                 _0xE:
                +
00027d 01de     +MOVW R26 , R28
00027e 59a8     +SUBI R26 , LOW ( - 616 )
00027f 4fbd     +SBCI R27 , HIGH ( - 616 )
000280 900d     +LD R0 , X +
000281 91bc     +LD R27 , X
000282 2da0     +MOV R26 , R0
                 	__GETW2SX 616
000283 940e 12ff 	CALL __CPW02
000285 f524      	BRGE _0xF
                 ; 0000 0071                 diameter = (float)(((float)d_diameter/100)-0.06);
000286 940e 0dbf 	CALL SUBOPT_0x2
000288 01df      	MOVW R26,R30
000289 01cb      	MOVW R24,R22
                +
00028a e8ef     +LDI R30 , LOW ( 0x3D75C28F )
00028b ecf2     +LDI R31 , HIGH ( 0x3D75C28F )
00028c e765     +LDI R22 , BYTE3 ( 0x3D75C28F )
00028d e37d     +LDI R23 , BYTE4 ( 0x3D75C28F )
                 	__GETD1N 0x3D75C28F
00028e 940e 0dd2 	CALL SUBOPT_0x3
000290 940e 0dd7 	CALL SUBOPT_0x4
                 ; 0000 0072                 if((float)(MOTOR_CONT_MAX_SPEED*MOTOR_DRIVE_CEL_TIME)<diameter)
000292 940e 0ddf 	CALL SUBOPT_0x5
000294 940e 11e0 	CALL __CMPF12
000296 f428      	BRSH _0x10
                 ; 0000 0073                 {
                 ; 0000 0074                     del_s = (float)((diameter + (MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED))/MOTOR_CONT_MAX_SPEED);
000297 940e 0de4 	CALL SUBOPT_0x6
000299 940e 0df8 	CALL SUBOPT_0x7
                 ; 0000 0075                     del_s -= MOTOR_DRIVE_CEL_TIME;
00029b c002      	RJMP _0x18
                 ; 0000 0076                 }
                 ; 0000 0077                 else del_s = (float)(((MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED)+diameter)/MOTOR_CONT_MAX_SPEED);
                 _0x10:
00029c 940e 0de4 	CALL SUBOPT_0x6
                 _0x18:
                +
00029e 01de     +MOVW R26 , R28
00029f 59a2     +SUBI R26 , LOW ( - 622 )
0002a0 4fbd     +SBCI R27 , HIGH ( - 622 )
0002a1 93ed     +ST X + , R30
0002a2 93fd     +ST X + , R31
0002a3 936d     +ST X + , R22
0002a4 937c     +ST X , R23
                 	__PUTD1SX 622
                 ; 0000 0078                 del_ms = (int)(del_s*1000);
0002a5 940e 0e06 	CALL SUBOPT_0x8
                 ; 0000 0079                 v_buff = MOTOR_CONT_MAX_SPEED;
0002a7 940e 0e1c 	CALL SUBOPT_0x9
0002a9 c027      	RJMP _0x19
                 ; 0000 007A 
                 ; 0000 007B                 // v_buff = (float)velocity/1000;
                 ; 0000 007C                 a_buff = (float)angularV/1000;
                 ; 0000 007D             }
                 ; 0000 007E             else{
                 _0xF:
                 ; 0000 007F                 diameter = (float)(((float)d_diameter/100)+0.06);
0002aa 940e 0dbf 	CALL SUBOPT_0x2
                +
0002ac e8af     +LDI R26 , LOW ( 0x3D75C28F )
0002ad ecb2     +LDI R27 , HIGH ( 0x3D75C28F )
0002ae e785     +LDI R24 , BYTE3 ( 0x3D75C28F )
0002af e39d     +LDI R25 , BYTE4 ( 0x3D75C28F )
                 	__GETD2N 0x3D75C28F
0002b0 940e 10fd 	CALL __ADDF12
0002b2 940e 0dd7 	CALL SUBOPT_0x4
                 ; 0000 0080                 diameter = -diameter;
0002b4 940e 1057 	CALL __ANEGF1
0002b6 940e 0dd7 	CALL SUBOPT_0x4
                 ; 0000 0081                 if((float)(MOTOR_CONT_MAX_SPEED*MOTOR_DRIVE_CEL_TIME)<diameter)
0002b8 940e 0ddf 	CALL SUBOPT_0x5
0002ba 940e 11e0 	CALL __CMPF12
0002bc f428      	BRSH _0x13
                 ; 0000 0082                 {
                 ; 0000 0083                     del_s = (float)((diameter + (MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED))/MOTOR_CONT_MAX_SPEED);
0002bd 940e 0de4 	CALL SUBOPT_0x6
0002bf 940e 0df8 	CALL SUBOPT_0x7
                 ; 0000 0084                     del_s -= MOTOR_DRIVE_CEL_TIME;
0002c1 c002      	RJMP _0x1A
                 ; 0000 0085                 }
                 ; 0000 0086                 else del_s = (float)(((MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED)+diameter)/MOTOR_CONT_MAX_SPEED);
                 _0x13:
0002c2 940e 0de4 	CALL SUBOPT_0x6
                 _0x1A:
                +
0002c4 01de     +MOVW R26 , R28
0002c5 59a2     +SUBI R26 , LOW ( - 622 )
0002c6 4fbd     +SBCI R27 , HIGH ( - 622 )
0002c7 93ed     +ST X + , R30
0002c8 93fd     +ST X + , R31
0002c9 936d     +ST X + , R22
0002ca 937c     +ST X , R23
                 	__PUTD1SX 622
                 ; 0000 0087                 del_ms = (int)(del_s*1000);
0002cb 940e 0e06 	CALL SUBOPT_0x8
                 ; 0000 0088                 v_buff = -MOTOR_CONT_MAX_SPEED;
                +
0002cd e0e0     +LDI R30 , LOW ( 0xBF000000 )
0002ce e0f0     +LDI R31 , HIGH ( 0xBF000000 )
0002cf e060     +LDI R22 , BYTE3 ( 0xBF000000 )
0002d0 eb7f     +LDI R23 , BYTE4 ( 0xBF000000 )
                 	__GETD1N 0xBF000000
                 _0x19:
                +
0002d1 01de     +MOVW R26 , R28
0002d2 58aa     +SUBI R26 , LOW ( - 630 )
0002d3 4fbd     +SBCI R27 , HIGH ( - 630 )
0002d4 93ed     +ST X + , R30
0002d5 93fd     +ST X + , R31
0002d6 936d     +ST X + , R22
0002d7 937c     +ST X , R23
                 	__PUTD1SX 630
                 ; 0000 0089 
                 ; 0000 008A                 // v_buff = (float)velocity/1000;
                 ; 0000 008B                 a_buff = (float)angularV/1000;
0002d8 01f9      	MOVW R30,R18
0002d9 940e 0e21 	CALL SUBOPT_0xA
0002db 01df      	MOVW R26,R30
0002dc 01cb      	MOVW R24,R22
                +
0002dd e0e0     +LDI R30 , LOW ( 0x447A0000 )
0002de e0f0     +LDI R31 , HIGH ( 0x447A0000 )
0002df e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
0002e0 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
0002e1 940e 119b 	CALL __DIVF21
                +
0002e3 01de     +MOVW R26 , R28
0002e4 58a6     +SUBI R26 , LOW ( - 634 )
0002e5 4fbd     +SBCI R27 , HIGH ( - 634 )
0002e6 93ed     +ST X + , R30
0002e7 93fd     +ST X + , R31
0002e8 936d     +ST X + , R22
0002e9 937c     +ST X , R23
                 	__PUTD1SX 634
                 ; 0000 008C             }
                 ; 0000 008D 
                 ; 0000 008E             TIMER0_TIME_print = 0;
0002ea e0e0      	LDI  R30,LOW(0)
                +
0002eb 01de     +MOVW R26 , R28
0002ec 5eac     +SUBI R26 , LOW ( - 532 )
0002ed 4fbd     +SBCI R27 , HIGH ( - 532 )
0002ee 93ed     +ST X + , R30
0002ef 93ed     +ST X + , R30
0002f0 93ed     +ST X + , R30
0002f1 93ec     +ST X , R30
                 	__CLRD1SX 532
                 ; 0000 008F             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
0002f2 01fe      	MOVW R30,R28
0002f3 58ea      	SUBI R30,LOW(-(630))
0002f4 4ffd      	SBCI R31,HIGH(-(630))
0002f5 93fa      	ST   -Y,R31
0002f6 93ea      	ST   -Y,R30
0002f7 01fe      	MOVW R30,R28
0002f8 58e4      	SUBI R30,LOW(-(636))
0002f9 4ffd      	SBCI R31,HIGH(-(636))
0002fa 93fa      	ST   -Y,R31
0002fb 93ea      	ST   -Y,R30
0002fc b7ed      	IN   R30,SPL
0002fd b7fe      	IN   R31,SPH
0002fe 9731      	SBIW R30,1
0002ff 93fa      	ST   -Y,R31
000300 93ea      	ST   -Y,R30
000301 935f      	PUSH R21
000302 934f      	PUSH R20
000303 01fe      	MOVW R30,R28
000304 58e6      	SUBI R30,LOW(-(634))
000305 4ffd      	SBCI R31,HIGH(-(634))
000306 93fa      	ST   -Y,R31
000307 93ea      	ST   -Y,R30
000308 940e 062c 	CALL _Make_MSPEED
00030a 914f      	POP  R20
00030b 915f      	POP  R21
                 ; 0000 0090 
                 ; 0000 0091             oper_Disapath(velocity_R, velocity_L);
00030c 935a      	ST   -Y,R21
00030d 934a      	ST   -Y,R20
                +
00030e 01fe     +MOVW R30 , R28
00030f 58ea     +SUBI R30 , LOW ( - 630 )
000310 4ffd     +SBCI R31 , HIGH ( - 630 )
000311 9001     +LD R0 , Z +
000312 81f0     +LD R31 , Z
000313 2de0     +MOV R30 , R0
                 	__GETW1SX 630
000314 93fa      	ST   -Y,R31
000315 93ea      	ST   -Y,R30
000316 940e 06a4 	CALL _oper_Disapath
                 ; 0000 0092 
                 ; 0000 0093             TIMER1_TIME = 0;
000318 e0e0      	LDI  R30,LOW(0)
                +
000319 01de     +MOVW R26 , R28
00031a 5ea4     +SUBI R26 , LOW ( - 540 )
00031b 4fbd     +SBCI R27 , HIGH ( - 540 )
00031c 93ed     +ST X + , R30
00031d 93ed     +ST X + , R30
00031e 93ed     +ST X + , R30
00031f 93ec     +ST X , R30
                 	__CLRD1SX 540
                 ; 0000 0094             TIMER1_OVERFLOW = 0;
000320 940e 0e26 	CALL SUBOPT_0xB
                 ; 0000 0095             TCNT1L = 0;
000322 bdec      	OUT  0x2C,R30
                 ; 0000 0096 
                 ; 0000 0097             // rootine_test = 1;
                 ; 0000 0098             STOP_FLAG = 1;
000323 e0e1      	LDI  R30,LOW(1)
                +
000324 01de     +MOVW R26 , R28
000325 5eae     +SUBI R26 , LOW ( - 530 )
000326 4fbd     +SBCI R27 , HIGH ( - 530 )
000327 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 0099             CHECK_GETS = 0;
000328 e0e0      	LDI  R30,LOW(0)
000329 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0000 009A             UCSR1B |=(1<<RXEN1);
00032b 91e0 009a 	LDS  R30,154
00032d 61e0      	ORI  R30,0x10
00032e 93e0 009a 	STS  154,R30
                 ; 0000 009B         }
                 ; 0000 009C 
                 ; 0000 009D         // if(rootine_test == 0)
                 ; 0000 009E         // {
                 ; 0000 009F         //     v_buff = 0.15;
                 ; 0000 00A0         //     a_buff = 0;
                 ; 0000 00A1         //     if(d_x<0.95)
                 ; 0000 00A2         //     {
                 ; 0000 00A3         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00A4         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00A5         //         STOP_FLAG = 1;
                 ; 0000 00A6         //     }
                 ; 0000 00A7         //     else{
                 ; 0000 00A8         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00A9         //         if(TIMER0_TIME_print > a+2) rootine_test = 1;
                 ; 0000 00AA         //         oper_Disapath(0,0);
                 ; 0000 00AB         //         STOP_FLAG = 0;
                 ; 0000 00AC         //     }
                 ; 0000 00AD         // }
                 ; 0000 00AE         // else if(rootine_test == 1)
                 ; 0000 00AF         // {
                 ; 0000 00B0         //     v_buff = 0;
                 ; 0000 00B1         //     a_buff = -0.7;
                 ; 0000 00B2         //     if(d_angular_circula<85)
                 ; 0000 00B3         //     {
                 ; 0000 00B4         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00B5         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00B6         //         STOP_FLAG = 1;
                 ; 0000 00B7         //     }
                 ; 0000 00B8         //     else{
                 ; 0000 00B9         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00BA         //         if(TIMER0_TIME_print > a+2) rootine_test = 2;
                 ; 0000 00BB         //         oper_Disapath(0,0);
                 ; 0000 00BC         //         STOP_FLAG = 0;
                 ; 0000 00BD         //     }
                 ; 0000 00BE         // }
                 ; 0000 00BF         // else if(rootine_test == 2)
                 ; 0000 00C0         // {
                 ; 0000 00C1         //     v_buff = 0.15;
                 ; 0000 00C2         //     a_buff = 0;
                 ; 0000 00C3         //     if(d_y<0.95)
                 ; 0000 00C4         //     {
                 ; 0000 00C5         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00C6         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00C7         //         STOP_FLAG = 1;
                 ; 0000 00C8         //     }
                 ; 0000 00C9         //     else{
                 ; 0000 00CA         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00CB         //         if(TIMER0_TIME_print > a+2) rootine_test = 3;
                 ; 0000 00CC         //         oper_Disapath(0,0);
                 ; 0000 00CD         //         STOP_FLAG = 0;
                 ; 0000 00CE         //     }
                 ; 0000 00CF         // }
                 ; 0000 00D0 
                 ; 0000 00D1         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
000330 91e0 0500 	LDS  R30,_TIMER1_OVERFLOW
000332 91f0 0501 	LDS  R31,_TIMER1_OVERFLOW+1
000334 9160 0502 	LDS  R22,_TIMER1_OVERFLOW+2
000336 9170 0503 	LDS  R23,_TIMER1_OVERFLOW+3
                +
000338 efaf     +LDI R26 , LOW ( 0xFF )
000339 e0b0     +LDI R27 , HIGH ( 0xFF )
00033a e080     +LDI R24 , BYTE3 ( 0xFF )
00033b e090     +LDI R25 , BYTE4 ( 0xFF )
                 	__GETD2N 0xFF
00033c 940e 1250 	CALL __MULD12
00033e 01df      	MOVW R26,R30
00033f 01cb      	MOVW R24,R22
000340 b5ec      	IN   R30,0x2C
000341 e0f0      	LDI  R31,0
000342 940e 1220 	CALL __CWD1
000344 940e 1204 	CALL __ADDD12
000346 940e 10c3 	CALL __CDF1
                +
000348 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000349 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00034a e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00034b e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00034c 940e 114d 	CALL __MULF12
                +
00034e 01de     +MOVW R26 , R28
00034f 5ea4     +SUBI R26 , LOW ( - 540 )
000350 4fbd     +SBCI R27 , HIGH ( - 540 )
000351 93ed     +ST X + , R30
000352 93fd     +ST X + , R31
000353 936d     +ST X + , R22
000354 937c     +ST X , R23
                 	__PUTD1SX 540
                 ; 0000 00D2 
                 ; 0000 00D3         if(del_ms<TIMER1_TIME)
                +
000355 01de     +MOVW R26 , R28
000356 58ae     +SUBI R26 , LOW ( - 626 )
000357 4fbd     +SBCI R27 , HIGH ( - 626 )
000358 900d     +LD R0 , X +
000359 91bc     +LD R27 , X
00035a 2da0     +MOV R26 , R0
                 	__GETW2SX 626
00035b 940e 1225 	CALL __CWD2
00035d 940e 12eb 	CALL __CDF2
00035f 940e 11e0 	CALL __CMPF12
000361 f4e8      	BRSH _0x15
                 ; 0000 00D4         {
                 ; 0000 00D5             oper_Disapath(0,0);
000362 e0e0      	LDI  R30,LOW(0)
000363 e0f0      	LDI  R31,HIGH(0)
000364 93fa      	ST   -Y,R31
000365 93ea      	ST   -Y,R30
000366 93fa      	ST   -Y,R31
000367 93ea      	ST   -Y,R30
000368 940e 06a4 	CALL _oper_Disapath
                 ; 0000 00D6             TIMER1_OVERFLOW = 0;
00036a 940e 0e26 	CALL SUBOPT_0xB
                 ; 0000 00D7             v_buff = 0;
                +
00036c 01de     +MOVW R26 , R28
00036d 58aa     +SUBI R26 , LOW ( - 630 )
00036e 4fbd     +SBCI R27 , HIGH ( - 630 )
00036f 93ed     +ST X + , R30
000370 93ed     +ST X + , R30
000371 93ed     +ST X + , R30
000372 93ec     +ST X , R30
                 	__CLRD1SX 630
                 ; 0000 00D8             a_buff = 0;
000373 e0e0      	LDI  R30,LOW(0)
                +
000374 01de     +MOVW R26 , R28
000375 58a6     +SUBI R26 , LOW ( - 634 )
000376 4fbd     +SBCI R27 , HIGH ( - 634 )
000377 93ed     +ST X + , R30
000378 93ed     +ST X + , R30
000379 93ed     +ST X + , R30
00037a 93ec     +ST X , R30
                 	__CLRD1SX 634
                 ; 0000 00D9             STOP_FLAG = 0;
                +
00037b 01de     +MOVW R26 , R28
00037c 5eae     +SUBI R26 , LOW ( - 530 )
00037d 4fbd     +SBCI R27 , HIGH ( - 530 )
00037e 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00DA         }
                 ; 0000 00DB         // if(goal_currentV_R==0 && goal_currentV_L==0) TIMER0_TIME_print = 0;
                 ; 0000 00DC 
                 ; 0000 00DD         // delay_ms(5);
                 ; 0000 00DE         // RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 ; 0000 00DF         // delay_ms(5);
                 ; 0000 00E0         // currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
                 ; 0000 00E1         // RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
                 ; 0000 00E2         // delay_ms(5);
                 ; 0000 00E3         // currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
                 ; 0000 00E4 
                 ; 0000 00E5         // // currentV_R = (float)(currentRPM_R/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00E6         // // currentV_L = (float)(currentRPM_L/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00E7 
                 ; 0000 00E8         // // goal_currentV_R = (float)(goal_current_R/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00E9         // // goal_currentV_L = (float)(-goal_current_L/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00EA 
                 ; 0000 00EB         // d_velocity = (currentV_R + currentV_L)/2;
                 ; 0000 00EC         // d_angularV = (currentV_R-currentV_L)/Length;
                 ; 0000 00ED         // g_velocity = (goal_currentV_R+goal_currentV_L)/2;
                 ; 0000 00EE         // g_angularV = (goal_currentV_R-goal_currentV_L)/Length;
                 ; 0000 00EF 
                 ; 0000 00F0         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
                 _0x15:
00037f 91a0 056a 	LDS  R26,_TIMER0_OVERFLOW
000381 91b0 056b 	LDS  R27,_TIMER0_OVERFLOW+1
000383 efef      	LDI  R30,LOW(255)
000384 940e 124a 	CALL __MULB1W2U
000386 01df      	MOVW R26,R30
000387 b7e2      	IN   R30,0x32
000388 e0f0      	LDI  R31,0
000389 0fea      	ADD  R30,R26
00038a 1ffb      	ADC  R31,R27
00038b 2766      	CLR  R22
00038c 2777      	CLR  R23
00038d 940e 10c3 	CALL __CDF1
                +
00038f eaae     +LDI R26 , LOW ( 0x3891A2AE )
000390 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000391 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000392 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000393 940e 114d 	CALL __MULF12
                +
000395 01de     +MOVW R26 , R28
000396 5bac     +SUBI R26 , LOW ( - 580 )
000397 4fbd     +SBCI R27 , HIGH ( - 580 )
000398 93ed     +ST X + , R30
000399 93fd     +ST X + , R31
00039a 936d     +ST X + , R22
00039b 937c     +ST X , R23
                 	__PUTD1SX 580
                 ; 0000 00F1         TIMER0_OVERFLOW = 0;
00039c 940e 0db8 	CALL SUBOPT_0x1
                 ; 0000 00F2         TCNT0 = 0;
                 ; 0000 00F3 
                 ; 0000 00F4         // d_angular += control_time*d_angularV;
                 ; 0000 00F5         // d_x += d_velocity*control_time*cos(d_angular);
                 ; 0000 00F6         // d_y += d_velocity*control_time*sin(d_angular);
                 ; 0000 00F7         // d_angular_circula = (int)(d_angular*Circular);
                 ; 0000 00F8 
                 ; 0000 00F9         // g_angular += control_time*g_angularV;
                 ; 0000 00FA         // g_x += g_velocity*control_time*cos(g_angular);
                 ; 0000 00FB         // g_y += g_velocity*control_time*sin(g_angular);
                 ; 0000 00FC         // g_angular_circula = (int)(g_angular*Circular);
                 ; 0000 00FD 
                 ; 0000 00FE         // motorR_distance = (float)(MOTORR_HALL*0.1325*Pi/160);
                 ; 0000 00FF         // motorL_distance = (float)(MOTORL_HALL*0.1325*Pi/160);
                 ; 0000 0100         motorR_distance = (float)(MOTORR_HALL*0.125*Pi/160);
00039e 91e0 0582 	LDS  R30,_MOTORR_HALL
0003a0 91f0 0583 	LDS  R31,_MOTORR_HALL+1
0003a2 9160 0584 	LDS  R22,_MOTORR_HALL+2
0003a4 9170 0585 	LDS  R23,_MOTORR_HALL+3
0003a6 940e 0e30 	CALL SUBOPT_0xC
                +
0003a8 01de     +MOVW R26 , R28
0003a9 50a4     +SUBI R26 , LOW ( - 508 )
0003aa 4fbe     +SBCI R27 , HIGH ( - 508 )
0003ab 93ed     +ST X + , R30
0003ac 93fd     +ST X + , R31
0003ad 936d     +ST X + , R22
0003ae 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 0101         motorL_distance = (float)(MOTORL_HALL*0.125*Pi/160);
0003af 91e0 0586 	LDS  R30,_MOTORL_HALL
0003b1 91f0 0587 	LDS  R31,_MOTORL_HALL+1
0003b3 9160 0588 	LDS  R22,_MOTORL_HALL+2
0003b5 9170 0589 	LDS  R23,_MOTORL_HALL+3
0003b7 940e 0e30 	CALL SUBOPT_0xC
                +
0003b9 01de     +MOVW R26 , R28
0003ba 50a8     +SUBI R26 , LOW ( - 504 )
0003bb 4fbe     +SBCI R27 , HIGH ( - 504 )
0003bc 93ed     +ST X + , R30
0003bd 93fd     +ST X + , R31
0003be 936d     +ST X + , R22
0003bf 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 0102 
                 ; 0000 0103         TIMER0_TIME += control_time;
                +
0003c0 01fe     +MOVW R30 , R28
0003c1 5bec     +SUBI R30 , LOW ( - 580 )
0003c2 4ffd     +SBCI R31 , HIGH ( - 580 )
0003c3 9001     +LD R0 , Z +
0003c4 9011     +LD R1 , Z +
0003c5 9161     +LD R22 , Z +
0003c6 8170     +LD R23 , Z
0003c7 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
0003c8 940e 0e47 	CALL SUBOPT_0xD
0003ca 940e 10fd 	CALL __ADDF12
                +
0003cc 01de     +MOVW R26 , R28
0003cd 5ea8     +SUBI R26 , LOW ( - 536 )
0003ce 4fbd     +SBCI R27 , HIGH ( - 536 )
0003cf 93ed     +ST X + , R30
0003d0 93fd     +ST X + , R31
0003d1 936d     +ST X + , R22
0003d2 937c     +ST X , R23
                 	__PUTD1SX 536
                 ; 0000 0104         if(TIMER0_TIME>0.01){
0003d3 940e 0e47 	CALL SUBOPT_0xD
                +
0003d5 e0ea     +LDI R30 , LOW ( 0x3C23D70A )
0003d6 edf7     +LDI R31 , HIGH ( 0x3C23D70A )
0003d7 e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
0003d8 e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
0003d9 940e 11e0 	CALL __CMPF12
0003db f009      	BREQ PC+2
0003dc f410      	BRCC PC+3
0003dd 940c 04c6 	JMP  _0x16
                 ; 0000 0105             TIMER0_TIME_print += TIMER0_TIME;
0003df 940e 0e50 	CALL SUBOPT_0xE
                +
0003e1 01de     +MOVW R26 , R28
0003e2 5eac     +SUBI R26 , LOW ( - 532 )
0003e3 4fbd     +SBCI R27 , HIGH ( - 532 )
0003e4 900d     +LD R0 , X +
0003e5 901d     +LD R1 , X +
0003e6 918d     +LD R24 , X +
0003e7 919c     +LD R25 , X
0003e8 01d0     +MOVW R26 , R0
                 	__GETD2SX 532
0003e9 940e 10fd 	CALL __ADDF12
                +
0003eb 01de     +MOVW R26 , R28
0003ec 5eac     +SUBI R26 , LOW ( - 532 )
0003ed 4fbd     +SBCI R27 , HIGH ( - 532 )
0003ee 93ed     +ST X + , R30
0003ef 93fd     +ST X + , R31
0003f0 936d     +ST X + , R22
0003f1 937c     +ST X , R23
                 	__PUTD1SX 532
                 ; 0000 0106             MOTORR_HALL = 0;
0003f2 e0e0      	LDI  R30,LOW(0)
0003f3 93e0 0582 	STS  _MOTORR_HALL,R30
0003f5 93e0 0583 	STS  _MOTORR_HALL+1,R30
0003f7 93e0 0584 	STS  _MOTORR_HALL+2,R30
0003f9 93e0 0585 	STS  _MOTORR_HALL+3,R30
                 ; 0000 0107             MOTORL_HALL = 0;
0003fb 93e0 0586 	STS  _MOTORL_HALL,R30
0003fd 93e0 0587 	STS  _MOTORL_HALL+1,R30
0003ff 93e0 0588 	STS  _MOTORL_HALL+2,R30
000401 93e0 0589 	STS  _MOTORL_HALL+3,R30
                 ; 0000 0108 
                 ; 0000 0109             hall_velocity = (float)((motorR_distance+motorL_distance)/(2*TIMER0_TIME));
000403 940e 0e59 	CALL SUBOPT_0xF
000405 937f      	PUSH R23
000406 936f      	PUSH R22
000407 93ff      	PUSH R31
000408 93ef      	PUSH R30
000409 940e 0e50 	CALL SUBOPT_0xE
                +
00040b e0a0     +LDI R26 , LOW ( 0x40000000 )
00040c e0b0     +LDI R27 , HIGH ( 0x40000000 )
00040d e080     +LDI R24 , BYTE3 ( 0x40000000 )
00040e e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00040f 940e 114d 	CALL __MULF12
000411 91af      	POP  R26
000412 91bf      	POP  R27
000413 918f      	POP  R24
000414 919f      	POP  R25
000415 940e 119b 	CALL __DIVF21
                +
000417 01de     +MOVW R26 , R28
000418 50a0     +SUBI R26 , LOW ( - 512 )
000419 4fbe     +SBCI R27 , HIGH ( - 512 )
00041a 93ed     +ST X + , R30
00041b 93fd     +ST X + , R31
00041c 936d     +ST X + , R22
00041d 937c     +ST X , R23
                 	__PUTD1SX 512
                 ; 0000 010A             hall_angular += (float)((motorR_distance-motorL_distance)/Length);
                +
00041e 01de     +MOVW R26 , R28
00041f 50a8     +SUBI R26 , LOW ( - 504 )
000420 4fbe     +SBCI R27 , HIGH ( - 504 )
000421 900d     +LD R0 , X +
000422 901d     +LD R1 , X +
000423 918d     +LD R24 , X +
000424 919c     +LD R25 , X
000425 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
                +
000426 01fe     +MOVW R30 , R28
000427 50e4     +SUBI R30 , LOW ( - 508 )
000428 4ffe     +SBCI R31 , HIGH ( - 508 )
000429 9001     +LD R0 , Z +
00042a 9011     +LD R1 , Z +
00042b 9161     +LD R22 , Z +
00042c 8170     +LD R23 , Z
00042d 01f0     +MOVW R30 , R0
                 	__GETD1SX 508
00042e 940e 10f6 	CALL __SUBF12
000430 01df      	MOVW R26,R30
000431 01cb      	MOVW R24,R22
                +
000432 e1e7     +LDI R30 , LOW ( 0x3E8ED917 )
000433 edf9     +LDI R31 , HIGH ( 0x3E8ED917 )
000434 e86e     +LDI R22 , BYTE3 ( 0x3E8ED917 )
000435 e37e     +LDI R23 , BYTE4 ( 0x3E8ED917 )
                 	__GETD1N 0x3E8ED917
000436 940e 119b 	CALL __DIVF21
000438 940e 0e6c 	CALL SUBOPT_0x10
00043a 940e 10fd 	CALL __ADDF12
                +
00043c 01de     +MOVW R26 , R28
00043d 5faa     +SUBI R26 , LOW ( - 518 )
00043e 4fbd     +SBCI R27 , HIGH ( - 518 )
00043f 93ed     +ST X + , R30
000440 93fd     +ST X + , R31
000441 936d     +ST X + , R22
000442 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 010B             hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
000443 940e 0e59 	CALL SUBOPT_0xF
000445 940e 0e75 	CALL SUBOPT_0x11
000447 937f      	PUSH R23
000448 936f      	PUSH R22
000449 93ff      	PUSH R31
00044a 93ef      	PUSH R30
00044b 940e 0e7e 	CALL SUBOPT_0x12
00044d 940e 0cd1 	CALL _cos
00044f 91af      	POP  R26
000450 91bf      	POP  R27
000451 918f      	POP  R24
000452 919f      	POP  R25
000453 940e 114d 	CALL __MULF12
                +
000455 01de     +MOVW R26 , R28
000456 5fa2     +SUBI R26 , LOW ( - 526 )
000457 4fbd     +SBCI R27 , HIGH ( - 526 )
000458 900d     +LD R0 , X +
000459 901d     +LD R1 , X +
00045a 918d     +LD R24 , X +
00045b 919c     +LD R25 , X
00045c 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
00045d 940e 10fd 	CALL __ADDF12
                +
00045f 01de     +MOVW R26 , R28
000460 5fa2     +SUBI R26 , LOW ( - 526 )
000461 4fbd     +SBCI R27 , HIGH ( - 526 )
000462 93ed     +ST X + , R30
000463 93fd     +ST X + , R31
000464 936d     +ST X + , R22
000465 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 010C             hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
000466 940e 0e59 	CALL SUBOPT_0xF
000468 940e 0e75 	CALL SUBOPT_0x11
00046a 937f      	PUSH R23
00046b 936f      	PUSH R22
00046c 93ff      	PUSH R31
00046d 93ef      	PUSH R30
00046e 940e 0e7e 	CALL SUBOPT_0x12
000470 940e 0c46 	CALL _sin
000472 91af      	POP  R26
000473 91bf      	POP  R27
000474 918f      	POP  R24
000475 919f      	POP  R25
000476 940e 114d 	CALL __MULF12
                +
000478 01de     +MOVW R26 , R28
000479 5fa6     +SUBI R26 , LOW ( - 522 )
00047a 4fbd     +SBCI R27 , HIGH ( - 522 )
00047b 900d     +LD R0 , X +
00047c 901d     +LD R1 , X +
00047d 918d     +LD R24 , X +
00047e 919c     +LD R25 , X
00047f 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
000480 940e 10fd 	CALL __ADDF12
                +
000482 01de     +MOVW R26 , R28
000483 5fa6     +SUBI R26 , LOW ( - 522 )
000484 4fbd     +SBCI R27 , HIGH ( - 522 )
000485 93ed     +ST X + , R30
000486 93fd     +ST X + , R31
000487 936d     +ST X + , R22
000488 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 010D             hall_angular_circula = (int)(hall_angular*Circular);
000489 940e 0e6c 	CALL SUBOPT_0x10
                +
00048b efe6     +LDI R30 , LOW ( 0x426528F6 )
00048c e2f8     +LDI R31 , HIGH ( 0x426528F6 )
00048d e665     +LDI R22 , BYTE3 ( 0x426528F6 )
00048e e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
00048f 940e 0e89 	CALL SUBOPT_0x13
                +
000491 01de     +MOVW R26 , R28
000492 5fac     +SUBI R26 , LOW ( - 516 )
000493 4fbd     +SBCI R27 , HIGH ( - 516 )
000494 93ed     +ST X + , R30
000495 93fc     +ST X , R31
                 	__PUTW1SX 516
                 ; 0000 010E             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 010F             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 0110             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 0111             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d, %d\n", TIMER0_TIME_print, d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 0112             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d, %.3f\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula, TIMER0_TIME_print);
                 ; 0000 0113             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f \n",TIMER0_TIME_print, g_velocity, d_velocity, hall_velocity);
                 ; 0000 0114             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d\n",TIMER0_TIME_print,g_velocity, hall_velocity, g_x, hall_x, del_ms);
                 ; 0000 0115             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n",TIMER0_TIME_print,g_velocity, d_velocity, hall_velocity,);
                 ; 0000 0116 
                 ; 0000 0117             sprintf(BUFF, "%.3f, %.3f, %.3f\n", TIMER0_TIME_print, hall_x, diameter);
000496 01fe      	MOVW R30,R28
000497 93fa      	ST   -Y,R31
000498 93ea      	ST   -Y,R30
                +
000499 e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
00049a e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
00049b 93fa      	ST   -Y,R31
00049c 93ea      	ST   -Y,R30
00049d 940e 0e50 	CALL SUBOPT_0xE
00049f 940e 12e4 	CALL __PUTPARD1
                +
0004a1 01fe     +MOVW R30 , R28
0004a2 5eea     +SUBI R30 , LOW ( - 534 )
0004a3 4ffd     +SBCI R31 , HIGH ( - 534 )
0004a4 9001     +LD R0 , Z +
0004a5 9011     +LD R1 , Z +
0004a6 9161     +LD R22 , Z +
0004a7 8170     +LD R23 , Z
0004a8 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
0004a9 940e 12e4 	CALL __PUTPARD1
                +
0004ab 01fe     +MOVW R30 , R28
0004ac 58ea     +SUBI R30 , LOW ( - 630 )
0004ad 4ffd     +SBCI R31 , HIGH ( - 630 )
0004ae 9001     +LD R0 , Z +
0004af 9011     +LD R1 , Z +
0004b0 9161     +LD R22 , Z +
0004b1 8170     +LD R23 , Z
0004b2 01f0     +MOVW R30 , R0
                 	__GETD1SX 630
0004b3 940e 12e4 	CALL __PUTPARD1
0004b5 e08c      	LDI  R24,12
0004b6 940e 0a3c 	CALL _sprintf
0004b8 9660      	ADIW R28,16
                 ; 0000 0118             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 0119             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 011A             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 011B             //                                                   d_velocity, g_velocity, d_x, g_x, TIMER0_TIME_print);
                 ; 0000 011C             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 011D             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -_buff);
                 ; 0000 011E             puts_USART1(BUFF);
0004b9 01fe      	MOVW R30,R28
0004ba 93fa      	ST   -Y,R31
0004bb 93ea      	ST   -Y,R30
0004bc 940e 059d 	CALL _puts_USART1
                 ; 0000 011F             TIMER0_TIME = 0;
0004be e0e0      	LDI  R30,LOW(0)
                +
0004bf 01de     +MOVW R26 , R28
0004c0 5ea8     +SUBI R26 , LOW ( - 536 )
0004c1 4fbd     +SBCI R27 , HIGH ( - 536 )
0004c2 93ed     +ST X + , R30
0004c3 93ed     +ST X + , R30
0004c4 93ed     +ST X + , R30
0004c5 93ec     +ST X , R30
                 	__CLRD1SX 536
                 ; 0000 0120         }
                 ; 0000 0121     }
                 _0x16:
0004c6 cd7a      	RJMP _0xA
                 ; 0000 0122 }
                 _0x17:
0004c7 cfff      	RJMP _0x17
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
0004c8 93ea      	ST   -Y,R30
0004c9 b7ef      	IN   R30,SREG
0004ca 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
0004cb 91e0 0504 	LDS  R30,_TIMER2_OVERFLOW
0004cd 5fef      	SUBI R30,-LOW(1)
0004ce 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
0004d0 91e9      	LD   R30,Y+
0004d1 bfef      	OUT  SREG,R30
0004d2 91e9      	LD   R30,Y+
0004d3 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
0004d4 93aa      	ST   -Y,R26
0004d5 93ba      	ST   -Y,R27
0004d6 93ea      	ST   -Y,R30
0004d7 93fa      	ST   -Y,R31
0004d8 b7ef      	IN   R30,SREG
0004d9 93ea      	ST   -Y,R30
                 ; 0001 0010     TIMER0_OVERFLOW++;
0004da e6aa      	LDI  R26,LOW(_TIMER0_OVERFLOW)
0004db e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
0004dc 940e 0e8e 	CALL SUBOPT_0x14
                 ; 0001 0011 }
0004de 91e9      	LD   R30,Y+
0004df bfef      	OUT  SREG,R30
0004e0 91f9      	LD   R31,Y+
0004e1 91e9      	LD   R30,Y+
0004e2 91b9      	LD   R27,Y+
0004e3 91a9      	LD   R26,Y+
0004e4 9518      	RETI
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
0004e5 940e 0e94 	CALL SUBOPT_0x15
                 ; 0001 0016     TIMER1_OVERFLOW++;
0004e7 e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
0004e8 e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
0004e9 940e 0e9d 	CALL SUBOPT_0x16
                 ; 0001 0017     TCNT1H = 0x00;
0004eb e0e0      	LDI  R30,LOW(0)
0004ec bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
0004ed bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
0004ee 91e9      	LD   R30,Y+
0004ef bfef      	OUT  SREG,R30
0004f0 91f9      	LD   R31,Y+
0004f1 91e9      	LD   R30,Y+
0004f2 91b9      	LD   R27,Y+
0004f3 91a9      	LD   R26,Y+
0004f4 9179      	LD   R23,Y+
0004f5 9169      	LD   R22,Y+
0004f6 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0004f7 e0ed      	LDI  R30,LOW(13)
0004f8 bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
0004f9 e2e8      	LDI  R30,LOW(40)
0004fa bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0004fb e8e2      	LDI  R30,LOW(130)
0004fc c010      	RJMP _0x20A000E
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0004fd e0e7      	LDI  R30,LOW(7)
0004fe bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0004ff e8e1      	LDI  R30,LOW(129)
000500 c00c      	RJMP _0x20A000E
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
000501 e1ed      	LDI  R30,LOW(29)
000502 bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
000503 efef      	LDI  R30,LOW(255)
000504 e0f0      	LDI  R31,HIGH(255)
000505 bdf9      	OUT  0x28+1,R31
000506 bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
000507 ebe0      	LDI  R30,LOW(1200)
000508 e0f4      	LDI  R31,HIGH(1200)
000509 bdf7      	OUT  0x26+1,R31
00050a bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
00050b b7e7      	IN   R30,0x37
00050c 60e8      	ORI  R30,8
                 _0x20A000E:
00050d bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
00050e 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
00050f 93aa      	ST   -Y,R26
000510 93ba      	ST   -Y,R27
000511 93ea      	ST   -Y,R30
000512 b7ef      	IN   R30,SREG
000513 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000514 b5e4      	IN   R30,0x24
000515 31e9      	CPI  R30,LOW(0x19)
000516 f420      	BRSH _0x40004
000517 91a0 0504 	LDS  R26,_TIMER2_OVERFLOW
000519 30a0      	CPI  R26,LOW(0x0)
00051a f021      	BREQ _0x40006
                 _0x40004:
00051b 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
00051d 30a0      	CPI  R26,LOW(0x0)
00051e f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00051f 940e 0ea6 	CALL SUBOPT_0x17
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
000521 c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
000522 e0e0      	LDI  R30,LOW(0)
000523 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000525 940e 0ea6 	CALL SUBOPT_0x17
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
000527 e0e0      	LDI  R30,LOW(0)
000528 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
00052a 91e9      	LD   R30,Y+
00052b bfef      	OUT  SREG,R30
00052c 91e9      	LD   R30,Y+
00052d 91b9      	LD   R27,Y+
00052e 91a9      	LD   R26,Y+
00052f 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
000530 93aa      	ST   -Y,R26
000531 93ea      	ST   -Y,R30
000532 93fa      	ST   -Y,R31
000533 b7ef      	IN   R30,SREG
000534 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
000535 931a      	ST   -Y,R17
                 ;	i -> R17
000536 e010      	LDI  R17,0
000537 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
000539 331c      	CPI  R17,60
00053a f421      	BRNE _0x4000A
00053b 91a0 0581 	LDS  R26,_CHECK_GETS
00053d 30a0      	CPI  R26,LOW(0x0)
00053e f009      	BREQ _0x4000B
                 _0x4000A:
00053f c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
000540 9bc3      	SBIS 0x18,3
000541 c002      	RJMP _0x4000C
000542 98c3      	CBI  0x18,3
000543 c001      	RJMP _0x4000D
                 _0x4000C:
000544 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
000545 e0e0      	LDI  R30,LOW(0)
000546 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000548 c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
000549 331e      	CPI  R17,62
00054a f421      	BRNE _0x40010
00054b 91a0 0581 	LDS  R26,_CHECK_GETS
00054d 30a0      	CPI  R26,LOW(0x0)
00054e f009      	BREQ _0x40011
                 _0x40010:
00054f c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000550 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000552 940e 0eb5 	CALL SUBOPT_0x18
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
000554 e0e1      	LDI  R30,LOW(1)
000555 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
000557 c008      	RJMP _0x40012
                 _0x4000F:
000558 91e0 0581 	LDS  R30,_CHECK_GETS
00055a 30e0      	CPI  R30,0
00055b f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
00055c 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
00055e 940e 0eb5 	CALL SUBOPT_0x18
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
000560 9119      	LD   R17,Y+
000561 91e9      	LD   R30,Y+
000562 bfef      	OUT  SREG,R30
000563 91f9      	LD   R31,Y+
000564 91e9      	LD   R30,Y+
000565 91a9      	LD   R26,Y+
000566 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
000567 e0e0      	LDI  R30,LOW(0)
000568 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
00056a e9e8      	LDI  R30,LOW(152)
00056b 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
00056d e0e6      	LDI  R30,LOW(6)
00056e 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
000570 91e0 009d 	LDS  R30,157
000572 7bef      	ANDI R30,0xBF
000573 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
000575 81e8      	LD   R30,Y
000576 81f9      	LDD  R31,Y+1
000577 940e 1215 	CALL __ASRW8
000579 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
00057b 81e8      	LD   R30,Y
00057c 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
00057e c014      	RJMP _0x20A000D
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
00057f e0e0      	LDI  R30,LOW(0)
000580 b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
000581 e9e8      	LDI  R30,LOW(152)
000582 b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
000583 e0e6      	LDI  R30,LOW(6)
000584 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
000586 91e0 0095 	LDS  R30,149
000588 7bef      	ANDI R30,0xBF
000589 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
00058b 81e8      	LD   R30,Y
00058c 81f9      	LDD  R31,Y+1
00058d 940e 1215 	CALL __ASRW8
00058f 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
000591 81e8      	LD   R30,Y
000592 b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000D:
000593 9622      	ADIW R28,2
000594 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
000595 91e0 009b 	LDS  R30,155
000597 72e0      	ANDI R30,LOW(0x20)
000598 f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
000599 81e8      	LD   R30,Y
00059a 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
00059c c023      	RJMP _0x20A000C
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
00059d 931a      	ST   -Y,R17
00059e 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
00059f e010      	LDI  R17,0
0005a0 e000      	LDI  R16,0
0005a1 e010      	LDI  R17,LOW(0)
                 _0x40018:
0005a2 940e 0ebf 	CALL SUBOPT_0x19
0005a4 30e0      	CPI  R30,0
0005a5 f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
0005a6 940e 0ebf 	CALL SUBOPT_0x19
0005a8 93ea      	ST   -Y,R30
0005a9 dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
0005aa 5f1f      	SUBI R17,-1
0005ab cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
0005ac e000      	LDI  R16,LOW(0)
                 _0x4001B:
0005ad 1701      	CP   R16,R17
0005ae f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
0005af 81aa      	LDD  R26,Y+2
0005b0 81bb      	LDD  R27,Y+2+1
0005b1 9611      	ADIW R26,1
0005b2 83aa      	STD  Y+2,R26
0005b3 83bb      	STD  Y+2+1,R27
0005b4 9711      	SBIW R26,1
0005b5 e0e0      	LDI  R30,LOW(0)
0005b6 93ec      	ST   X,R30
                 ; 0002 0054     }
0005b7 5f0f      	SUBI R16,-1
0005b8 cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
0005b9 8119      	LDD  R17,Y+1
0005ba 8108      	LDD  R16,Y+0
0005bb c104      	RJMP _0x20A000B
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
0005bc 9b5d      	SBIS 0xB,5
0005bd cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
0005be 81e8      	LD   R30,Y
0005bf b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000C:
0005c0 9621      	ADIW R28,1
0005c1 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
0005c2 940e 1303 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
0005c4 ef2f     +LDI R18 , LOW ( - 1 )
0005c5 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
0005c6 81ee      	LDD  R30,Y+6
0005c7 81ff      	LDD  R31,Y+6+1
0005c8 9731      	SBIW R30,1
0005c9 83ee      	STD  Y+6,R30
0005ca 83ff      	STD  Y+6+1,R31
0005cb 9631      	ADIW R30,1
0005cc f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
0005cd 85a8      	LDD  R26,Y+8
0005ce 85b9      	LDD  R27,Y+8+1
0005cf 91ed      	LD   R30,X+
0005d0 87a8      	STD  Y+8,R26
0005d1 87b9      	STD  Y+8+1,R27
0005d2 e0f0      	LDI  R31,0
                +
0005d3 272e     +EOR R18 , R30
0005d4 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
0005d5 e000     +LDI R16 , LOW ( 0 )
0005d6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
0005d7 3008     +CPI R16 , LOW ( 8 )
0005d8 e0e0     +LDI R30 , HIGH ( 8 )
0005d9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0005da f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
0005db 01f9      	MOVW R30,R18
0005dc 70e1      	ANDI R30,LOW(0x1)
0005dd 70f0      	ANDI R31,HIGH(0x1)
0005de 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
0005df 9536      	LSR  R19
0005e0 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
0005e1 2e04      	MOV  R0,R20
0005e2 2a05      	OR   R0,R21
0005e3 f021      	BREQ _0x4002D
0005e4 e0e1      	LDI  R30,LOW(40961)
0005e5 eaf0      	LDI  R31,HIGH(40961)
                +
0005e6 272e     +EOR R18 , R30
0005e7 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
0005e8 5f0f     +SUBI R16 , LOW ( - 1 )
0005e9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0005ea cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
0005eb cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
0005ec 01f9      	MOVW R30,R18
0005ed 940e 130a 	CALL __LOADLOCR6
0005ef 962a      	ADIW R28,10
0005f0 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
0005f1 9728      	SBIW R28,8
0005f2 940e 1305 	CALL __SAVELOCR4
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                +
0005f4 e020     +LDI R18 , LOW ( 0 )
0005f5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0005f6 89e8      	LDD  R30,Y+16
0005f7 83ec      	STD  Y+4,R30
                 ; 0002 0083     protocol[1]=0x06;
0005f8 e0e6      	LDI  R30,LOW(6)
0005f9 83ed      	STD  Y+5,R30
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
0005fa 85ee      	LDD  R30,Y+14
0005fb 85ff      	LDD  R31,Y+14+1
0005fc 940e 1215 	CALL __ASRW8
0005fe 83ee      	STD  Y+6,R30
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
0005ff 85ee      	LDD  R30,Y+14
000600 83ef      	STD  Y+7,R30
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
000601 85ec      	LDD  R30,Y+12
000602 85fd      	LDD  R31,Y+12+1
000603 940e 1215 	CALL __ASRW8
000605 87e8      	STD  Y+8,R30
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
000606 85ec      	LDD  R30,Y+12
000607 87e9      	STD  Y+9,R30
                 ; 0002 0088     protocol[6]=0;
000608 e0e0      	LDI  R30,LOW(0)
000609 87ea      	STD  Y+10,R30
                 ; 0002 0089     protocol[7]=0;
00060a 87eb      	STD  Y+11,R30
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
00060b 01fe      	MOVW R30,R28
00060c 9634      	ADIW R30,4
00060d 93fa      	ST   -Y,R31
00060e 93ea      	ST   -Y,R30
00060f e0e6      	LDI  R30,LOW(6)
000610 e0f0      	LDI  R31,HIGH(6)
000611 93fa      	ST   -Y,R31
000612 93ea      	ST   -Y,R30
000613 dfae      	RCALL _CRC16
000614 018f      	MOVW R16,R30
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
000615 01f8      	MOVW R30,R16
000616 87ea      	STD  Y+10,R30
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                +
000617 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                +
000618 e020     +LDI R18 , LOW ( 0 )
000619 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002F:
                +
00061a 3028     +CPI R18 , LOW ( 8 )
00061b e0e0     +LDI R30 , HIGH ( 8 )
00061c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00061d f454      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
00061e 01de      	MOVW R26,R28
00061f 9614      	ADIW R26,4
000620 0fa2      	ADD  R26,R18
000621 1fb3      	ADC  R27,R19
000622 91ec      	LD   R30,X
000623 93ea      	ST   -Y,R30
000624 df97      	RCALL _putch_USART0
                 ; 0002 0094     }
                +
000625 5f2f     +SUBI R18 , LOW ( - 1 )
000626 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000627 cff2      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
000628 940e 130c 	CALL __LOADLOCR4
00062a 9661      	ADIW R28,17
00062b 9508      	RET
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
                 ; 0002 00B0     }
                 ; 0002 00B1 }
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
00062c 9728      	SBIW R28,8
00062d 940e 0ec6 	CALL SUBOPT_0x1A
00062f e0e0      	LDI  R30,LOW(0)
000630 83ea      	STD  Y+2,R30
000631 83eb      	STD  Y+3,R30
000632 83ec      	STD  Y+4,R30
000633 83ed      	STD  Y+5,R30
000634 83ee      	STD  Y+6,R30
000635 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
000636 940e 0eca 	CALL SUBOPT_0x1B
000638 2377      	TST  R23
000639 f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
00063a 940e 0ecf 	CALL SUBOPT_0x1C
00063c 940e 1057 	CALL __ANEGF1
00063e 85ac      	LDD  R26,Y+12
00063f 85bd      	LDD  R27,Y+12+1
000640 940e 12cb 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
000642 940e 0eca 	CALL SUBOPT_0x1B
000644 937f      	PUSH R23
000645 936f      	PUSH R22
000646 93ff      	PUSH R31
000647 93ef      	PUSH R30
000648 940e 0ecf 	CALL SUBOPT_0x1C
00064a 940e 0ed4 	CALL SUBOPT_0x1D
00064c 91af      	POP  R26
00064d 91bf      	POP  R27
00064e 918f      	POP  R24
00064f 919f      	POP  R25
000650 940e 10fd 	CALL __ADDF12
000652 940e 0edb 	CALL SUBOPT_0x1E
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
000654 940e 0eca 	CALL SUBOPT_0x1B
000656 937f      	PUSH R23
000657 936f      	PUSH R22
000658 93ff      	PUSH R31
000659 93ef      	PUSH R30
00065a 940e 0ecf 	CALL SUBOPT_0x1C
00065c 940e 0ed4 	CALL SUBOPT_0x1D
00065e 91af      	POP  R26
00065f 91bf      	POP  R27
000660 918f      	POP  R24
000661 919f      	POP  R25
000662 940e 0dd2 	CALL SUBOPT_0x3
000664 940e 12df 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(VelocityR*(60/(Pi*0.125)*Gearratio));
000666 940e 0ee0 	CALL SUBOPT_0x1F
000668 940e 0ee5 	CALL SUBOPT_0x20
00066a 85aa      	LDD  R26,Y+10
00066b 85bb      	LDD  R27,Y+10+1
00066c 93ed      	ST   X+,R30
00066d 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(VelocityL*(60/(Pi*0.125)*Gearratio));
00066e 940e 12da 	CALL __GETD2S0
000670 940e 0ee5 	CALL SUBOPT_0x20
000672 85a8      	LDD  R26,Y+8
000673 85b9      	LDD  R27,Y+8+1
000674 93ed      	ST   X+,R30
000675 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
000676 85aa      	LDD  R26,Y+10
000677 85bb      	LDD  R27,Y+10+1
000678 940e 12bc 	CALL __GETW1P
00067a 32ec      	CPI  R30,LOW(0x12C)
00067b e0a1      	LDI  R26,HIGH(0x12C)
00067c 07fa      	CPC  R31,R26
00067d f434      	BRGE _0x40036
00067e 01df      	MOVW R26,R30
00067f ede4      	LDI  R30,LOW(65236)
000680 effe      	LDI  R31,HIGH(65236)
000681 17ea      	CP   R30,R26
000682 07fb      	CPC  R31,R27
000683 f00c      	BRLT _0x40037
                 _0x40036:
000684 c014      	RJMP _0x40038
                 _0x40037:
000685 85a8      	LDD  R26,Y+8
000686 85b9      	LDD  R27,Y+8+1
000687 940e 12bc 	CALL __GETW1P
000689 32ec      	CPI  R30,LOW(0x12C)
00068a e0a1      	LDI  R26,HIGH(0x12C)
00068b 07fa      	CPC  R31,R26
00068c f454      	BRGE _0x40039
00068d 85a8      	LDD  R26,Y+8
00068e 85b9      	LDD  R27,Y+8+1
00068f 940e 12bc 	CALL __GETW1P
000691 01df      	MOVW R26,R30
000692 ede4      	LDI  R30,LOW(65236)
000693 effe      	LDI  R31,HIGH(65236)
000694 17ea      	CP   R30,R26
000695 07fb      	CPC  R31,R27
000696 f00c      	BRLT _0x4003A
                 _0x40039:
000697 c001      	RJMP _0x40038
                 _0x4003A:
000698 c001      	RJMP _0x4003B
                 _0x40038:
000699 c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
00069a 85aa      	LDD  R26,Y+10
00069b 85bb      	LDD  R27,Y+10+1
00069c 940e 0eea 	CALL SUBOPT_0x21
                 ; 0002 00C4         *L_RPM = 0;
00069e 85a8      	LDD  R26,Y+8
00069f 85b9      	LDD  R27,Y+8+1
0006a0 940e 0eea 	CALL SUBOPT_0x21
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
0006a2 940c 081e 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0006a4 e0e1      	LDI  R30,LOW(1)
0006a5 93ea      	ST   -Y,R30
0006a6 e7e9      	LDI  R30,LOW(121)
0006a7 e0f0      	LDI  R31,HIGH(121)
0006a8 93fa      	ST   -Y,R31
0006a9 93ea      	ST   -Y,R30
0006aa 81ed      	LDD  R30,Y+5
0006ab 81fe      	LDD  R31,Y+5+1
0006ac 940e 0eef 	CALL SUBOPT_0x22
                 ; 0002 00CB     delay_ms(5);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0006ae e0e2      	LDI  R30,LOW(2)
0006af 93ea      	ST   -Y,R30
0006b0 e7e9      	LDI  R30,LOW(121)
0006b1 e0f0      	LDI  R31,HIGH(121)
0006b2 93fa      	ST   -Y,R31
0006b3 93ea      	ST   -Y,R30
0006b4 81eb      	LDD  R30,Y+3
0006b5 81fc      	LDD  R31,Y+3+1
0006b6 940e 1209 	CALL __ANEGW1
0006b8 940e 0eef 	CALL SUBOPT_0x22
                 ; 0002 00CE     delay_ms(5);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
0006ba e0e1      	LDI  R30,LOW(1)
0006bb 940e 0ef6 	CALL SUBOPT_0x23
                 ; 0002 00D1     delay_ms(5);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
0006bd e0e2      	LDI  R30,LOW(2)
0006be 940e 0ef6 	CALL SUBOPT_0x23
                 ; 0002 00D4     delay_ms(5);
                 ; 0002 00D5 }
                 _0x20A000B:
0006c0 9624      	ADIW R28,4
0006c1 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
                 ; 0002 00E1         return RPM;
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
0006c2 e5e5      	LDI  R30,LOW(85)
0006c3 bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
0006c4 efe0      	LDI  R30,LOW(240)
0006c5 bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
0006c6 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
0006c7 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
0006c8 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
0006c9 9817      	CBI  0x2,7
                 ; 0003 000C }
0006ca 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
0006cb 940e 0efe 	CALL SUBOPT_0x24
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
0006cd f041      	BREQ _0x6000B
0006ce e8a2      	LDI  R26,LOW(_MOTORR_HALL)
0006cf e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
0006d0 940e 0e9d 	CALL SUBOPT_0x16
0006d2 9731      	SBIW R30,1
0006d3 4060      	SBCI R22,0
0006d4 4070      	SBCI R23,0
                 ; 0003 0011     else MOTORR_HALL--;
0006d5 c002      	RJMP _0x6000C
                 _0x6000B:
0006d6 940e 0f07 	CALL SUBOPT_0x25
                 ; 0003 0012 }
                 _0x6000C:
0006d8 c037      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
0006d9 940e 0efe 	CALL SUBOPT_0x24
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
0006db f019      	BREQ _0x6000D
0006dc 940e 0f07 	CALL SUBOPT_0x25
                 ; 0003 0017     else MOTORR_HALL++;
0006de c007      	RJMP _0x6000E
                 _0x6000D:
0006df e8a2      	LDI  R26,LOW(_MOTORR_HALL)
0006e0 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
0006e1 940e 0e9d 	CALL SUBOPT_0x16
0006e3 9731      	SBIW R30,1
0006e4 4060      	SBCI R22,0
0006e5 4070      	SBCI R23,0
                 ; 0003 0018 }
                 _0x6000E:
0006e6 c029      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
0006e7 940e 0e94 	CALL SUBOPT_0x15
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
0006e9 e0a0      	LDI  R26,0
0006ea 990e      	SBIC 0x1,6
0006eb e0a1      	LDI  R26,1
0006ec e0e0      	LDI  R30,0
0006ed 990f      	SBIC 0x1,7
0006ee e0e1      	LDI  R30,1
0006ef 17ea      	CP   R30,R26
0006f0 f019      	BREQ _0x6000F
0006f1 940e 0f15 	CALL SUBOPT_0x26
                 ; 0003 001D     else MOTORL_HALL++;
0006f3 c007      	RJMP _0x60010
                 _0x6000F:
0006f4 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0006f5 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0006f6 940e 0e9d 	CALL SUBOPT_0x16
0006f8 9731      	SBIW R30,1
0006f9 4060      	SBCI R22,0
0006fa 4070      	SBCI R23,0
                 ; 0003 001E }
                 _0x60010:
0006fb c014      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
0006fc 940e 0e94 	CALL SUBOPT_0x15
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
0006fe e0a0      	LDI  R26,0
0006ff 990f      	SBIC 0x1,7
000700 e0a1      	LDI  R26,1
000701 e0e0      	LDI  R30,0
000702 990e      	SBIC 0x1,6
000703 e0e1      	LDI  R30,1
000704 17ea      	CP   R30,R26
000705 f041      	BREQ _0x60011
000706 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000707 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000708 940e 0e9d 	CALL SUBOPT_0x16
00070a 9731      	SBIW R30,1
00070b 4060      	SBCI R22,0
00070c 4070      	SBCI R23,0
                 ; 0003 0023     else MOTORL_HALL--;
00070d c002      	RJMP _0x60012
                 _0x60011:
00070e 940e 0f15 	CALL SUBOPT_0x26
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
000710 91e9      	LD   R30,Y+
000711 bfef      	OUT  SREG,R30
000712 91f9      	LD   R31,Y+
000713 91e9      	LD   R30,Y+
000714 91b9      	LD   R27,Y+
000715 91a9      	LD   R26,Y+
000716 9179      	LD   R23,Y+
000717 9169      	LD   R22,Y+
000718 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000719 931a      	ST   -Y,R17
00071a 930a      	ST   -Y,R16
00071b 81aa      	LDD  R26,Y+2
00071c 81bb      	LDD  R27,Y+2+1
00071d 9612      	ADIW R26,2
00071e 940e 12bc 	CALL __GETW1P
000720 9730      	SBIW R30,0
000721 f129      	BREQ _0x2000010
000722 81aa      	LDD  R26,Y+2
000723 81bb      	LDD  R27,Y+2+1
000724 9614      	ADIW R26,4
000725 940e 12bc 	CALL __GETW1P
000727 018f      	MOVW R16,R30
000728 9730      	SBIW R30,0
000729 f061      	BREQ _0x2000012
                +
00072a 3002     +CPI R16 , LOW ( 2 )
00072b e0e0     +LDI R30 , HIGH ( 2 )
00072c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00072d f0c0      	BRLO _0x2000013
00072e 01f8      	MOVW R30,R16
00072f 9731      	SBIW R30,1
000730 018f      	MOVW R16,R30
                +
000731 81aa     +LDD R26 , Y + 2
000732 81bb     +LDD R27 , Y + 2 + 1
000733 9614     +ADIW R26 , 4
000734 93ed     +ST X + , R30
000735 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000736 81aa      	LDD  R26,Y+2
000737 81bb      	LDD  R27,Y+2+1
000738 9612      	ADIW R26,2
000739 940e 0e8e 	CALL SUBOPT_0x14
00073b 9731      	SBIW R30,1
00073c 81ac      	LDD  R26,Y+4
00073d 83a0      	STD  Z+0,R26
00073e 81aa      	LDD  R26,Y+2
00073f 81bb      	LDD  R27,Y+2+1
000740 940e 12bc 	CALL __GETW1P
000742 23ff      	TST  R31
000743 f012      	BRMI _0x2000014
000744 940e 0e8e 	CALL SUBOPT_0x14
                 _0x2000014:
                 _0x2000013:
000746 c006      	RJMP _0x2000015
                 _0x2000010:
000747 81aa      	LDD  R26,Y+2
000748 81bb      	LDD  R27,Y+2+1
000749 efef      	LDI  R30,LOW(65535)
00074a efff      	LDI  R31,HIGH(65535)
00074b 93ed      	ST   X+,R30
00074c 93fc      	ST   X,R31
                 _0x2000015:
00074d 8119      	LDD  R17,Y+1
00074e 8108      	LDD  R16,Y+0
00074f c346      	RJMP _0x20A0007
                 __ftoe_G100:
000750 9724      	SBIW R28,4
000751 940e 0ec6 	CALL SUBOPT_0x1A
000753 e8e0      	LDI  R30,LOW(128)
000754 83ea      	STD  Y+2,R30
000755 e3ef      	LDI  R30,LOW(63)
000756 83eb      	STD  Y+3,R30
000757 940e 1305 	CALL __SAVELOCR4
000759 85ee      	LDD  R30,Y+14
00075a 85ff      	LDD  R31,Y+14+1
00075b 3fef      	CPI  R30,LOW(0xFFFF)
00075c efaf      	LDI  R26,HIGH(0xFFFF)
00075d 07fa      	CPC  R31,R26
00075e f449      	BRNE _0x2000019
00075f 85e8      	LDD  R30,Y+8
000760 85f9      	LDD  R31,Y+8+1
000761 93fa      	ST   -Y,R31
000762 93ea      	ST   -Y,R30
                +
000763 eaea     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000764 e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000765 940e 0f23 	CALL SUBOPT_0x27
000767 c0b4      	RJMP _0x20A0009
                 _0x2000019:
000768 3fef      	CPI  R30,LOW(0x7FFF)
000769 e7af      	LDI  R26,HIGH(0x7FFF)
00076a 07fa      	CPC  R31,R26
00076b f449      	BRNE _0x2000018
00076c 85e8      	LDD  R30,Y+8
00076d 85f9      	LDD  R31,Y+8+1
00076e 93fa      	ST   -Y,R31
00076f 93ea      	ST   -Y,R30
                +
000770 eaeb     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000771 e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000772 940e 0f23 	CALL SUBOPT_0x27
000774 c0a7      	RJMP _0x20A0009
                 _0x2000018:
000775 85ab      	LDD  R26,Y+11
000776 30a7      	CPI  R26,LOW(0x7)
000777 f010      	BRLO _0x200001B
000778 e0e6      	LDI  R30,LOW(6)
000779 87eb      	STD  Y+11,R30
                 _0x200001B:
00077a 851b      	LDD  R17,Y+11
                 _0x200001C:
00077b 2fe1      	MOV  R30,R17
00077c 5011      	SUBI R17,1
00077d 30e0      	CPI  R30,0
00077e f019      	BREQ _0x200001E
00077f 940e 0f27 	CALL SUBOPT_0x28
000781 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000782 85ec     +LDD R30 , Y + 12
000783 85fd     +LDD R31 , Y + 12 + 1
000784 856e     +LDD R22 , Y + 12 + 2
000785 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000786 940e 12fb 	CALL __CPD10
000788 f421      	BRNE _0x200001F
000789 e030      	LDI  R19,LOW(0)
00078a 940e 0f27 	CALL SUBOPT_0x28
00078c c02e      	RJMP _0x2000020
                 _0x200001F:
00078d 853b      	LDD  R19,Y+11
00078e 940e 0f2f 	CALL SUBOPT_0x29
000790 f009      	BREQ PC+2
000791 f410      	BRCC PC+3
000792 940c 079f 	JMP  _0x2000021
000794 940e 0f27 	CALL SUBOPT_0x28
                 _0x2000022:
000796 940e 0f2f 	CALL SUBOPT_0x29
000798 f028      	BRLO _0x2000024
000799 940e 0f3a 	CALL SUBOPT_0x2A
00079b 940e 0f3f 	CALL SUBOPT_0x2B
00079d cff8      	RJMP _0x2000022
                 _0x2000024:
00079e c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00079f 940e 0f2f 	CALL SUBOPT_0x29
0007a1 f440      	BRSH _0x2000028
0007a2 940e 0f3a 	CALL SUBOPT_0x2A
0007a4 940e 0f4b 	CALL SUBOPT_0x2C
0007a6 940e 0f52 	CALL SUBOPT_0x2D
0007a8 5031      	SUBI R19,LOW(1)
0007a9 cff5      	RJMP _0x2000026
                 _0x2000028:
0007aa 940e 0f27 	CALL SUBOPT_0x28
                 _0x2000025:
                +
0007ac 85ec     +LDD R30 , Y + 12
0007ad 85fd     +LDD R31 , Y + 12 + 1
0007ae 856e     +LDD R22 , Y + 12 + 2
0007af 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0007b0 940e 0f57 	CALL SUBOPT_0x2E
0007b2 940e 0f52 	CALL SUBOPT_0x2D
0007b4 940e 0f2f 	CALL SUBOPT_0x29
0007b6 f020      	BRLO _0x2000029
0007b7 940e 0f3a 	CALL SUBOPT_0x2A
0007b9 940e 0f3f 	CALL SUBOPT_0x2B
                 _0x2000029:
                 _0x2000020:
0007bb e010      	LDI  R17,LOW(0)
                 _0x200002A:
0007bc 85eb      	LDD  R30,Y+11
0007bd 17e1      	CP   R30,R17
0007be f188      	BRLO _0x200002C
0007bf 940e 0ee0 	CALL SUBOPT_0x1F
0007c1 940e 0f5e 	CALL SUBOPT_0x2F
0007c3 940e 0f57 	CALL SUBOPT_0x2E
0007c5 940e 0f65 	CALL SUBOPT_0x30
0007c7 940e 0edb 	CALL SUBOPT_0x1E
                +
0007c9 81ec     +LDD R30 , Y + 4
0007ca 81fd     +LDD R31 , Y + 4 + 1
0007cb 816e     +LDD R22 , Y + 4 + 2
0007cc 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0007cd 940e 0f3a 	CALL SUBOPT_0x2A
0007cf 940e 119b 	CALL __DIVF21
0007d1 940e 108a 	CALL __CFD1U
0007d3 2f0e      	MOV  R16,R30
0007d4 940e 0f69 	CALL SUBOPT_0x31
0007d6 940e 0f70 	CALL SUBOPT_0x32
0007d8 27ff      	CLR  R31
0007d9 2766      	CLR  R22
0007da 2777      	CLR  R23
0007db 940e 10c3 	CALL __CDF1
0007dd 940e 0ee0 	CALL SUBOPT_0x1F
0007df 940e 114d 	CALL __MULF12
0007e1 940e 0f3a 	CALL SUBOPT_0x2A
0007e3 940e 0dd2 	CALL SUBOPT_0x3
0007e5 940e 0f52 	CALL SUBOPT_0x2D
0007e7 2fe1      	MOV  R30,R17
0007e8 5f1f      	SUBI R17,-1
0007e9 30e0      	CPI  R30,0
0007ea f689      	BRNE _0x200002A
0007eb 940e 0f69 	CALL SUBOPT_0x31
0007ed e2ee      	LDI  R30,LOW(46)
0007ee 93ec      	ST   X,R30
0007ef cfcc      	RJMP _0x200002A
                 _0x200002C:
0007f0 940e 0f75 	CALL SUBOPT_0x33
0007f2 9731      	SBIW R30,1
0007f3 85aa      	LDD  R26,Y+10
0007f4 83a0      	STD  Z+0,R26
0007f5 3030      	CPI  R19,0
0007f6 f42c      	BRGE _0x200002E
0007f7 9531      	NEG  R19
0007f8 85a8      	LDD  R26,Y+8
0007f9 85b9      	LDD  R27,Y+8+1
0007fa e2ed      	LDI  R30,LOW(45)
0007fb c003      	RJMP _0x2000111
                 _0x200002E:
0007fc 85a8      	LDD  R26,Y+8
0007fd 85b9      	LDD  R27,Y+8+1
0007fe e2eb      	LDI  R30,LOW(43)
                 _0x2000111:
0007ff 93ec      	ST   X,R30
000800 940e 0f75 	CALL SUBOPT_0x33
000802 940e 0f75 	CALL SUBOPT_0x33
000804 9731      	SBIW R30,1
000805 01bf      	MOVW R22,R30
000806 2fa3      	MOV  R26,R19
000807 e0ea      	LDI  R30,LOW(10)
000808 940e 1263 	CALL __DIVB21
00080a 5de0      	SUBI R30,-LOW(48)
00080b 01db      	MOVW R26,R22
00080c 93ec      	ST   X,R30
00080d 940e 0f75 	CALL SUBOPT_0x33
00080f 9731      	SBIW R30,1
000810 01bf      	MOVW R22,R30
000811 2fa3      	MOV  R26,R19
000812 e0ea      	LDI  R30,LOW(10)
000813 940e 128d 	CALL __MODB21
000815 5de0      	SUBI R30,-LOW(48)
000816 01db      	MOVW R26,R22
000817 93ec      	ST   X,R30
000818 85a8      	LDD  R26,Y+8
000819 85b9      	LDD  R27,Y+8+1
00081a e0e0      	LDI  R30,LOW(0)
00081b 93ec      	ST   X,R30
                 _0x20A0009:
00081c 940e 130c 	CALL __LOADLOCR4
                 _0x20A000A:
00081e 9660      	ADIW R28,16
00081f 9508      	RET
                 __print_G100:
000820 97ef      	SBIW R28,63
000821 9761      	SBIW R28,17
000822 940e 1303 	CALL __SAVELOCR6
000824 e010      	LDI  R17,0
                +
000825 01fe     +MOVW R30 , R28
000826 5ae8     +SUBI R30 , LOW ( - 88 )
000827 4fff     +SBCI R31 , HIGH ( - 88 )
000828 9001     +LD R0 , Z +
000829 81f0     +LD R31 , Z
00082a 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00082b 87e8      	STD  Y+8,R30
00082c 87f9      	STD  Y+8+1,R31
                +
00082d 01fe     +MOVW R30 , R28
00082e 5aea     +SUBI R30 , LOW ( - 86 )
00082f 4fff     +SBCI R31 , HIGH ( - 86 )
000830 9001     +LD R0 , Z +
000831 81f0     +LD R31 , Z
000832 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000833 83ee      	STD  Y+6,R30
000834 83ff      	STD  Y+6+1,R31
000835 81ae      	LDD  R26,Y+6
000836 81bf      	LDD  R27,Y+6+1
000837 940e 0eea 	CALL SUBOPT_0x21
                 _0x2000030:
000839 01de      	MOVW R26,R28
00083a 5aa4      	SUBI R26,LOW(-(92))
00083b 4fbf      	SBCI R27,HIGH(-(92))
00083c 940e 0e8e 	CALL SUBOPT_0x14
00083e 9731      	SBIW R30,1
00083f 91e4      	LPM  R30,Z
000840 2f2e      	MOV  R18,R30
000841 30e0      	CPI  R30,0
000842 f411      	BRNE PC+3
000843 940c 0a33 	JMP _0x2000032
000845 2fe1      	MOV  R30,R17
000846 30e0      	CPI  R30,0
000847 f439      	BRNE _0x2000036
000848 3225      	CPI  R18,37
000849 f411      	BRNE _0x2000037
00084a e011      	LDI  R17,LOW(1)
00084b c002      	RJMP _0x2000038
                 _0x2000037:
00084c 940e 0f7b 	CALL SUBOPT_0x34
                 _0x2000038:
00084e c1e3      	RJMP _0x2000035
                 _0x2000036:
00084f 30e1      	CPI  R30,LOW(0x1)
000850 f4c1      	BRNE _0x2000039
000851 3225      	CPI  R18,37
000852 f419      	BRNE _0x200003A
000853 940e 0f7b 	CALL SUBOPT_0x34
000855 c1db      	RJMP _0x2000112
                 _0x200003A:
000856 e012      	LDI  R17,LOW(2)
000857 e0e0      	LDI  R30,LOW(0)
000858 8bed      	STD  Y+21,R30
000859 e000      	LDI  R16,LOW(0)
00085a 322d      	CPI  R18,45
00085b f411      	BRNE _0x200003B
00085c e001      	LDI  R16,LOW(1)
00085d c1d4      	RJMP _0x2000035
                 _0x200003B:
00085e 322b      	CPI  R18,43
00085f f419      	BRNE _0x200003C
000860 e2eb      	LDI  R30,LOW(43)
000861 8bed      	STD  Y+21,R30
000862 c1cf      	RJMP _0x2000035
                 _0x200003C:
000863 3220      	CPI  R18,32
000864 f419      	BRNE _0x200003D
000865 e2e0      	LDI  R30,LOW(32)
000866 8bed      	STD  Y+21,R30
000867 c1ca      	RJMP _0x2000035
                 _0x200003D:
000868 c002      	RJMP _0x200003E
                 _0x2000039:
000869 30e2      	CPI  R30,LOW(0x2)
00086a f439      	BRNE _0x200003F
                 _0x200003E:
00086b e050      	LDI  R21,LOW(0)
00086c e013      	LDI  R17,LOW(3)
00086d 3320      	CPI  R18,48
00086e f411      	BRNE _0x2000040
00086f 6800      	ORI  R16,LOW(128)
000870 c1c1      	RJMP _0x2000035
                 _0x2000040:
000871 c002      	RJMP _0x2000041
                 _0x200003F:
000872 30e3      	CPI  R30,LOW(0x3)
000873 f491      	BRNE _0x2000042
                 _0x2000041:
000874 3320      	CPI  R18,48
000875 f010      	BRLO _0x2000044
000876 332a      	CPI  R18,58
000877 f008      	BRLO _0x2000045
                 _0x2000044:
000878 c007      	RJMP _0x2000043
                 _0x2000045:
000879 e0aa      	LDI  R26,LOW(10)
00087a 9f5a      	MUL  R21,R26
00087b 2d50      	MOV  R21,R0
00087c 2fe2      	MOV  R30,R18
00087d 53e0      	SUBI R30,LOW(48)
00087e 0f5e      	ADD  R21,R30
00087f c1b2      	RJMP _0x2000035
                 _0x2000043:
000880 e040      	LDI  R20,LOW(0)
000881 322e      	CPI  R18,46
000882 f411      	BRNE _0x2000046
000883 e014      	LDI  R17,LOW(4)
000884 c1ad      	RJMP _0x2000035
                 _0x2000046:
000885 c00f      	RJMP _0x2000047
                 _0x2000042:
000886 30e4      	CPI  R30,LOW(0x4)
000887 f499      	BRNE _0x2000049
000888 3320      	CPI  R18,48
000889 f010      	BRLO _0x200004B
00088a 332a      	CPI  R18,58
00088b f008      	BRLO _0x200004C
                 _0x200004B:
00088c c008      	RJMP _0x200004A
                 _0x200004C:
00088d 6200      	ORI  R16,LOW(32)
00088e e0aa      	LDI  R26,LOW(10)
00088f 9f4a      	MUL  R20,R26
000890 2d40      	MOV  R20,R0
000891 2fe2      	MOV  R30,R18
000892 53e0      	SUBI R30,LOW(48)
000893 0f4e      	ADD  R20,R30
000894 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000895 362c      	CPI  R18,108
000896 f419      	BRNE _0x200004D
000897 6002      	ORI  R16,LOW(2)
000898 e015      	LDI  R17,LOW(5)
000899 c198      	RJMP _0x2000035
                 _0x200004D:
00089a c004      	RJMP _0x200004E
                 _0x2000049:
00089b 30e5      	CPI  R30,LOW(0x5)
00089c f011      	BREQ PC+3
00089d 940c 0a32 	JMP _0x2000035
                 _0x200004E:
00089f 2fe2      	MOV  R30,R18
0008a0 36e3      	CPI  R30,LOW(0x63)
0008a1 f459      	BRNE _0x2000053
0008a2 940e 0f84 	CALL SUBOPT_0x35
0008a4 940e 0f8b 	CALL SUBOPT_0x36
0008a6 940e 0f84 	CALL SUBOPT_0x35
0008a8 81a4      	LDD  R26,Z+4
0008a9 93aa      	ST   -Y,R26
0008aa 940e 0f92 	CALL SUBOPT_0x37
0008ac c184      	RJMP _0x2000054
                 _0x2000053:
0008ad 34e5      	CPI  R30,LOW(0x45)
0008ae f011      	BREQ _0x2000057
0008af 36e5      	CPI  R30,LOW(0x65)
0008b0 f409      	BRNE _0x2000058
                 _0x2000057:
0008b1 c004      	RJMP _0x2000059
                 _0x2000058:
0008b2 36e6      	CPI  R30,LOW(0x66)
0008b3 f011      	BREQ PC+3
0008b4 940c 0900 	JMP _0x200005A
                 _0x2000059:
0008b6 01fe      	MOVW R30,R28
0008b7 9676      	ADIW R30,22
0008b8 87ee      	STD  Y+14,R30
0008b9 87ff      	STD  Y+14+1,R31
0008ba 940e 0f9a 	CALL SUBOPT_0x38
0008bc 940e 12c0 	CALL __GETD1P
0008be 940e 0fa1 	CALL SUBOPT_0x39
0008c0 940e 0fa6 	CALL SUBOPT_0x3A
0008c2 85ad      	LDD  R26,Y+13
0008c3 23aa      	TST  R26
0008c4 f022      	BRMI _0x200005B
0008c5 89ad      	LDD  R26,Y+21
0008c6 32ab      	CPI  R26,LOW(0x2B)
0008c7 f049      	BREQ _0x200005D
0008c8 c017      	RJMP _0x200005E
                 _0x200005B:
0008c9 940e 0fa8 	CALL SUBOPT_0x3B
0008cb 940e 1057 	CALL __ANEGF1
0008cd 940e 0fa1 	CALL SUBOPT_0x39
0008cf e2ed      	LDI  R30,LOW(45)
0008d0 8bed      	STD  Y+21,R30
                 _0x200005D:
0008d1 ff07      	SBRS R16,7
0008d2 c005      	RJMP _0x200005F
0008d3 89ed      	LDD  R30,Y+21
0008d4 93ea      	ST   -Y,R30
0008d5 940e 0f92 	CALL SUBOPT_0x37
0008d7 c008      	RJMP _0x2000060
                 _0x200005F:
0008d8 85ee      	LDD  R30,Y+14
0008d9 85ff      	LDD  R31,Y+14+1
0008da 9631      	ADIW R30,1
0008db 87ee      	STD  Y+14,R30
0008dc 87ff      	STD  Y+14+1,R31
0008dd 9731      	SBIW R30,1
0008de 89ad      	LDD  R26,Y+21
0008df 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0008e0 ff05      	SBRS R16,5
0008e1 e046      	LDI  R20,LOW(6)
0008e2 3626      	CPI  R18,102
0008e3 f461      	BRNE _0x2000062
0008e4 940e 0fa8 	CALL SUBOPT_0x3B
0008e6 940e 12e4 	CALL __PUTPARD1
0008e8 934a      	ST   -Y,R20
0008e9 89eb      	LDD  R30,Y+19
0008ea 89fc      	LDD  R31,Y+19+1
0008eb 93fa      	ST   -Y,R31
0008ec 93ea      	ST   -Y,R30
0008ed 940e 0d1e 	CALL _ftoa
0008ef c00b      	RJMP _0x2000063
                 _0x2000062:
0008f0 940e 0fa8 	CALL SUBOPT_0x3B
0008f2 940e 12e4 	CALL __PUTPARD1
0008f4 934a      	ST   -Y,R20
0008f5 932a      	ST   -Y,R18
0008f6 89ec      	LDD  R30,Y+20
0008f7 89fd      	LDD  R31,Y+20+1
0008f8 93fa      	ST   -Y,R31
0008f9 93ea      	ST   -Y,R30
0008fa de55      	RCALL __ftoe_G100
                 _0x2000063:
0008fb 01fe      	MOVW R30,R28
0008fc 9676      	ADIW R30,22
0008fd 940e 0fad 	CALL SUBOPT_0x3C
0008ff c01e      	RJMP _0x2000064
                 _0x200005A:
000900 37e3      	CPI  R30,LOW(0x73)
000901 f439      	BRNE _0x2000066
000902 940e 0fa6 	CALL SUBOPT_0x3A
000904 940e 0fb5 	CALL SUBOPT_0x3D
000906 940e 0fad 	CALL SUBOPT_0x3C
000908 c00e      	RJMP _0x2000067
                 _0x2000066:
000909 37e0      	CPI  R30,LOW(0x70)
00090a f4c1      	BRNE _0x2000069
00090b 940e 0fa6 	CALL SUBOPT_0x3A
00090d 940e 0fb5 	CALL SUBOPT_0x3D
00090f 87ee      	STD  Y+14,R30
000910 87ff      	STD  Y+14+1,R31
000911 93fa      	ST   -Y,R31
000912 93ea      	ST   -Y,R30
000913 940e 0d13 	CALL _strlenf
000915 2f1e      	MOV  R17,R30
000916 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000917 770f      	ANDI R16,LOW(127)
000918 3040      	CPI  R20,0
000919 f011      	BREQ _0x200006B
00091a 1741      	CP   R20,R17
00091b f008      	BRLO _0x200006C
                 _0x200006B:
00091c c001      	RJMP _0x200006A
                 _0x200006C:
00091d 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
00091e e040      	LDI  R20,LOW(0)
00091f e0e0      	LDI  R30,LOW(0)
000920 8bec      	STD  Y+20,R30
000921 e030      	LDI  R19,LOW(0)
000922 c06e      	RJMP _0x200006D
                 _0x2000069:
000923 36e4      	CPI  R30,LOW(0x64)
000924 f011      	BREQ _0x2000070
000925 36e9      	CPI  R30,LOW(0x69)
000926 f411      	BRNE _0x2000071
                 _0x2000070:
000927 6004      	ORI  R16,LOW(4)
000928 c002      	RJMP _0x2000072
                 _0x2000071:
000929 37e5      	CPI  R30,LOW(0x75)
00092a f4a1      	BRNE _0x2000073
                 _0x2000072:
00092b e0ea      	LDI  R30,LOW(10)
00092c 8bec      	STD  Y+20,R30
00092d ff01      	SBRS R16,1
00092e c008      	RJMP _0x2000074
                +
00092f e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000930 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000931 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000932 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000933 940e 0fba 	CALL SUBOPT_0x3E
000935 e01a      	LDI  R17,LOW(10)
000936 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000937 e1e0     +LDI R30 , LOW ( 0x2710 )
000938 e2f7     +LDI R31 , HIGH ( 0x2710 )
000939 e060     +LDI R22 , BYTE3 ( 0x2710 )
00093a e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00093b 940e 0fba 	CALL SUBOPT_0x3E
00093d e015      	LDI  R17,LOW(5)
00093e c01b      	RJMP _0x2000075
                 _0x2000073:
00093f 35e8      	CPI  R30,LOW(0x58)
000940 f411      	BRNE _0x2000077
000941 6008      	ORI  R16,LOW(8)
000942 c004      	RJMP _0x2000078
                 _0x2000077:
000943 37e8      	CPI  R30,LOW(0x78)
000944 f011      	BREQ PC+3
000945 940c 0a31 	JMP _0x20000B6
                 _0x2000078:
000947 e1e0      	LDI  R30,LOW(16)
000948 8bec      	STD  Y+20,R30
000949 ff01      	SBRS R16,1
00094a c008      	RJMP _0x200007A
                +
00094b e0e0     +LDI R30 , LOW ( 0x10000000 )
00094c e0f0     +LDI R31 , HIGH ( 0x10000000 )
00094d e060     +LDI R22 , BYTE3 ( 0x10000000 )
00094e e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00094f 940e 0fba 	CALL SUBOPT_0x3E
000951 e018      	LDI  R17,LOW(8)
000952 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000953 e0e0     +LDI R30 , LOW ( 0x1000 )
000954 e1f0     +LDI R31 , HIGH ( 0x1000 )
000955 e060     +LDI R22 , BYTE3 ( 0x1000 )
000956 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000957 940e 0fba 	CALL SUBOPT_0x3E
000959 e014      	LDI  R17,LOW(4)
                 _0x2000075:
00095a 3040      	CPI  R20,0
00095b f011      	BREQ _0x200007B
00095c 770f      	ANDI R16,LOW(127)
00095d c001      	RJMP _0x200007C
                 _0x200007B:
00095e e041      	LDI  R20,LOW(1)
                 _0x200007C:
00095f ff01      	SBRS R16,1
000960 c008      	RJMP _0x200007D
000961 940e 0fa6 	CALL SUBOPT_0x3A
000963 940e 0f9a 	CALL SUBOPT_0x38
000965 9614      	ADIW R26,4
000966 940e 12c0 	CALL __GETD1P
000968 c00f      	RJMP _0x2000113
                 _0x200007D:
000969 ff02      	SBRS R16,2
00096a c007      	RJMP _0x200007F
00096b 940e 0fa6 	CALL SUBOPT_0x3A
00096d 940e 0fb5 	CALL SUBOPT_0x3D
00096f 940e 1220 	CALL __CWD1
000971 c006      	RJMP _0x2000113
                 _0x200007F:
000972 940e 0fa6 	CALL SUBOPT_0x3A
000974 940e 0fb5 	CALL SUBOPT_0x3D
000976 2766      	CLR  R22
000977 2777      	CLR  R23
                 _0x2000113:
                +
000978 87ea     +STD Y + 10 , R30
000979 87fb     +STD Y + 10 + 1 , R31
00097a 876c     +STD Y + 10 + 2 , R22
00097b 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00097c ff02      	SBRS R16,2
00097d c012      	RJMP _0x2000081
00097e 85ad      	LDD  R26,Y+13
00097f 23aa      	TST  R26
000980 f442      	BRPL _0x2000082
000981 940e 0fa8 	CALL SUBOPT_0x3B
000983 940e 120d 	CALL __ANEGD1
000985 940e 0fa1 	CALL SUBOPT_0x39
000987 e2ed      	LDI  R30,LOW(45)
000988 8bed      	STD  Y+21,R30
                 _0x2000082:
000989 89ed      	LDD  R30,Y+21
00098a 30e0      	CPI  R30,0
00098b f019      	BREQ _0x2000083
00098c 5f1f      	SUBI R17,-LOW(1)
00098d 5f4f      	SUBI R20,-LOW(1)
00098e c001      	RJMP _0x2000084
                 _0x2000083:
00098f 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000990 2f34      	MOV  R19,R20
                 _0x200006D:
000991 fd00      	SBRC R16,0
000992 c014      	RJMP _0x2000085
                 _0x2000086:
000993 1715      	CP   R17,R21
000994 f410      	BRSH _0x2000089
000995 1735      	CP   R19,R21
000996 f008      	BRLO _0x200008A
                 _0x2000089:
000997 c00f      	RJMP _0x2000088
                 _0x200008A:
000998 ff07      	SBRS R16,7
000999 c008      	RJMP _0x200008B
00099a ff02      	SBRS R16,2
00099b c004      	RJMP _0x200008C
00099c 7f0b      	ANDI R16,LOW(251)
00099d 892d      	LDD  R18,Y+21
00099e 5011      	SUBI R17,LOW(1)
00099f c001      	RJMP _0x200008D
                 _0x200008C:
0009a0 e320      	LDI  R18,LOW(48)
                 _0x200008D:
0009a1 c001      	RJMP _0x200008E
                 _0x200008B:
0009a2 e220      	LDI  R18,LOW(32)
                 _0x200008E:
0009a3 940e 0f7b 	CALL SUBOPT_0x34
0009a5 5051      	SUBI R21,LOW(1)
0009a6 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0009a7 1714      	CP   R17,R20
0009a8 f490      	BRSH _0x2000091
0009a9 6100      	ORI  R16,LOW(16)
0009aa ff02      	SBRS R16,2
0009ab c006      	RJMP _0x2000092
0009ac 940e 0fbf 	CALL SUBOPT_0x3F
0009ae f009      	BREQ _0x2000093
0009af 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0009b0 5011      	SUBI R17,LOW(1)
0009b1 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0009b2 e3e0      	LDI  R30,LOW(48)
0009b3 93ea      	ST   -Y,R30
0009b4 940e 0f92 	CALL SUBOPT_0x37
0009b6 3050      	CPI  R21,0
0009b7 f009      	BREQ _0x2000094
0009b8 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0009b9 5041      	SUBI R20,LOW(1)
0009ba cfec      	RJMP _0x200008F
                 _0x2000091:
0009bb 2f31      	MOV  R19,R17
0009bc 89ec      	LDD  R30,Y+20
0009bd 30e0      	CPI  R30,0
0009be f4b9      	BRNE _0x2000095
                 _0x2000096:
0009bf 3030      	CPI  R19,0
0009c0 f0a1      	BREQ _0x2000098
0009c1 ff03      	SBRS R16,3
0009c2 c006      	RJMP _0x2000099
0009c3 85ee      	LDD  R30,Y+14
0009c4 85ff      	LDD  R31,Y+14+1
0009c5 9125      	LPM  R18,Z+
0009c6 87ee      	STD  Y+14,R30
0009c7 87ff      	STD  Y+14+1,R31
0009c8 c005      	RJMP _0x200009A
                 _0x2000099:
0009c9 85ae      	LDD  R26,Y+14
0009ca 85bf      	LDD  R27,Y+14+1
0009cb 912d      	LD   R18,X+
0009cc 87ae      	STD  Y+14,R26
0009cd 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0009ce 940e 0f7b 	CALL SUBOPT_0x34
0009d0 3050      	CPI  R21,0
0009d1 f009      	BREQ _0x200009B
0009d2 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0009d3 5031      	SUBI R19,LOW(1)
0009d4 cfea      	RJMP _0x2000096
                 _0x2000098:
0009d5 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0009d6 940e 0fd3 	CALL SUBOPT_0x40
0009d8 940e 1268 	CALL __DIVD21U
0009da 2f2e      	MOV  R18,R30
0009db 302a      	CPI  R18,10
0009dc f030      	BRLO _0x20000A0
0009dd ff03      	SBRS R16,3
0009de c002      	RJMP _0x20000A1
0009df 5c29      	SUBI R18,-LOW(55)
0009e0 c001      	RJMP _0x20000A2
                 _0x20000A1:
0009e1 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0009e2 c001      	RJMP _0x20000A3
                 _0x20000A0:
0009e3 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0009e4 fd04      	SBRC R16,4
0009e5 c021      	RJMP _0x20000A5
0009e6 3321      	CPI  R18,49
0009e7 f460      	BRSH _0x20000A7
                +
0009e8 89a8     +LDD R26 , Y + 16
0009e9 89b9     +LDD R27 , Y + 16 + 1
0009ea 898a     +LDD R24 , Y + 16 + 2
0009eb 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0009ec 30a1     +CPI R26 , LOW ( 0x1 )
0009ed e0e0     +LDI R30 , HIGH ( 0x1 )
0009ee 07be     +CPC R27 , R30
0009ef e0e0     +LDI R30 , BYTE3 ( 0x1 )
0009f0 078e     +CPC R24 , R30
0009f1 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0009f2 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0009f3 f409      	BRNE _0x20000A6
                 _0x20000A7:
0009f4 c00b      	RJMP _0x20000A9
                 _0x20000A6:
0009f5 1743      	CP   R20,R19
0009f6 f440      	BRSH _0x2000114
0009f7 1753      	CP   R21,R19
0009f8 f010      	BRLO _0x20000AC
0009f9 ff00      	SBRS R16,0
0009fa c001      	RJMP _0x20000AD
                 _0x20000AC:
0009fb c010      	RJMP _0x20000AB
                 _0x20000AD:
0009fc e220      	LDI  R18,LOW(32)
0009fd ff07      	SBRS R16,7
0009fe c008      	RJMP _0x20000AE
                 _0x2000114:
0009ff e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000a00 6100      	ORI  R16,LOW(16)
000a01 ff02      	SBRS R16,2
000a02 c004      	RJMP _0x20000AF
000a03 940e 0fbf 	CALL SUBOPT_0x3F
000a05 f009      	BREQ _0x20000B0
000a06 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000a07 940e 0f7b 	CALL SUBOPT_0x34
000a09 3050      	CPI  R21,0
000a0a f009      	BREQ _0x20000B1
000a0b 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000a0c 5031      	SUBI R19,LOW(1)
000a0d 940e 0fd3 	CALL SUBOPT_0x40
000a0f 940e 1299 	CALL __MODD21U
000a11 940e 0fa1 	CALL SUBOPT_0x39
000a13 89ec      	LDD  R30,Y+20
                +
000a14 89a8     +LDD R26 , Y + 16
000a15 89b9     +LDD R27 , Y + 16 + 1
000a16 898a     +LDD R24 , Y + 16 + 2
000a17 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000a18 27ff      	CLR  R31
000a19 2766      	CLR  R22
000a1a 2777      	CLR  R23
000a1b 940e 1268 	CALL __DIVD21U
000a1d 940e 0fba 	CALL SUBOPT_0x3E
                +
000a1f 89e8     +LDD R30 , Y + 16
000a20 89f9     +LDD R31 , Y + 16 + 1
000a21 896a     +LDD R22 , Y + 16 + 2
000a22 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000a23 940e 12fb 	CALL __CPD10
000a25 f009      	BREQ _0x200009F
000a26 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000a27 ff00      	SBRS R16,0
000a28 c008      	RJMP _0x20000B2
                 _0x20000B3:
000a29 3050      	CPI  R21,0
000a2a f031      	BREQ _0x20000B5
000a2b 5051      	SUBI R21,LOW(1)
000a2c e2e0      	LDI  R30,LOW(32)
000a2d 93ea      	ST   -Y,R30
000a2e 940e 0f92 	CALL SUBOPT_0x37
000a30 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x2000112:
000a31 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000a32 ce06      	RJMP _0x2000030
                 _0x2000032:
000a33 81ae      	LDD  R26,Y+6
000a34 81bf      	LDD  R27,Y+6+1
000a35 940e 12bc 	CALL __GETW1P
000a37 940e 130a 	CALL __LOADLOCR6
000a39 96ef      	ADIW R28,63
000a3a 966f      	ADIW R28,31
000a3b 9508      	RET
                 _sprintf:
000a3c 92ff      	PUSH R15
000a3d 2ef8      	MOV  R15,R24
000a3e 9726      	SBIW R28,6
000a3f 940e 1305 	CALL __SAVELOCR4
000a41 940e 0fdc 	CALL SUBOPT_0x41
000a43 9730      	SBIW R30,0
000a44 f419      	BRNE _0x20000B7
000a45 efef      	LDI  R30,LOW(65535)
000a46 efff      	LDI  R31,HIGH(65535)
000a47 c023      	RJMP _0x20A0008
                 _0x20000B7:
000a48 01de      	MOVW R26,R28
000a49 9616      	ADIW R26,6
000a4a 940e 1200 	CALL __ADDW2R15
000a4c 018d      	MOVW R16,R26
000a4d 940e 0fdc 	CALL SUBOPT_0x41
000a4f 83ee      	STD  Y+6,R30
000a50 83ff      	STD  Y+6+1,R31
000a51 e0e0      	LDI  R30,LOW(0)
000a52 87e8      	STD  Y+8,R30
000a53 87e9      	STD  Y+8+1,R30
000a54 01de      	MOVW R26,R28
000a55 961a      	ADIW R26,10
000a56 940e 0fe3 	CALL SUBOPT_0x42
000a58 93fa      	ST   -Y,R31
000a59 93ea      	ST   -Y,R30
000a5a 931a      	ST   -Y,R17
000a5b 930a      	ST   -Y,R16
000a5c e1e9      	LDI  R30,LOW(_put_buff_G100)
000a5d e0f7      	LDI  R31,HIGH(_put_buff_G100)
000a5e 93fa      	ST   -Y,R31
000a5f 93ea      	ST   -Y,R30
000a60 01fe      	MOVW R30,R28
000a61 963a      	ADIW R30,10
000a62 93fa      	ST   -Y,R31
000a63 93ea      	ST   -Y,R30
000a64 ddbb      	RCALL __print_G100
000a65 019f      	MOVW R18,R30
000a66 81ae      	LDD  R26,Y+6
000a67 81bf      	LDD  R27,Y+6+1
000a68 e0e0      	LDI  R30,LOW(0)
000a69 93ec      	ST   X,R30
000a6a 01f9      	MOVW R30,R18
                 _0x20A0008:
000a6b 940e 130c 	CALL __LOADLOCR4
000a6d 962a      	ADIW R28,10
000a6e 90ff      	POP  R15
000a6f 9508      	RET
                 _get_buff_G100:
000a70 931a      	ST   -Y,R17
000a71 81a9      	LDD  R26,Y+1
000a72 81ba      	LDD  R27,Y+1+1
000a73 e0e0      	LDI  R30,LOW(0)
000a74 93ec      	ST   X,R30
000a75 81ab      	LDD  R26,Y+3
000a76 81bc      	LDD  R27,Y+3+1
000a77 91ec      	LD   R30,X
000a78 2f1e      	MOV  R17,R30
000a79 30e0      	CPI  R30,0
000a7a f019      	BREQ _0x20000BF
000a7b e0e0      	LDI  R30,LOW(0)
000a7c 93ec      	ST   X,R30
000a7d c016      	RJMP _0x20000C0
                 _0x20000BF:
000a7e 81a9      	LDD  R26,Y+1
000a7f 81ba      	LDD  R27,Y+1+1
000a80 9611      	ADIW R26,1
000a81 940e 12bc 	CALL __GETW1P
000a83 9730      	SBIW R30,0
000a84 f071      	BREQ _0x20000C1
000a85 81e9      	LDD  R30,Y+1
000a86 81fa      	LDD  R31,Y+1+1
000a87 81a1      	LDD  R26,Z+1
000a88 81b2      	LDD  R27,Z+2
000a89 91ec      	LD   R30,X
000a8a 2f1e      	MOV  R17,R30
000a8b 30e0      	CPI  R30,0
000a8c f029      	BREQ _0x20000C2
000a8d 81a9      	LDD  R26,Y+1
000a8e 81ba      	LDD  R27,Y+1+1
000a8f 9611      	ADIW R26,1
000a90 940e 0e8e 	CALL SUBOPT_0x14
                 _0x20000C2:
000a92 c001      	RJMP _0x20000C3
                 _0x20000C1:
000a93 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000a94 2fe1      	MOV  R30,R17
000a95 8118      	LDD  R17,Y+0
                 _0x20A0007:
000a96 9625      	ADIW R28,5
000a97 9508      	RET
                 __scanf_G100:
000a98 9728      	SBIW R28,8
000a99 940e 1303 	CALL __SAVELOCR6
000a9b e0e0      	LDI  R30,LOW(0)
000a9c e0f0      	LDI  R31,HIGH(0)
000a9d 87ea      	STD  Y+10,R30
000a9e 87fb      	STD  Y+10+1,R31
000a9f 87ed      	STD  Y+13,R30
                 _0x20000C4:
000aa0 89ec      	LDD  R30,Y+20
000aa1 89fd      	LDD  R31,Y+20+1
000aa2 9631      	ADIW R30,1
000aa3 8bec      	STD  Y+20,R30
000aa4 8bfd      	STD  Y+20+1,R31
000aa5 9731      	SBIW R30,1
000aa6 91e4      	LPM  R30,Z
000aa7 2f3e      	MOV  R19,R30
000aa8 30e0      	CPI  R30,0
000aa9 f411      	BRNE PC+3
000aaa 940c 0bcc 	JMP _0x20000C6
000aac 940e 0fe8 	CALL SUBOPT_0x43
000aae f091      	BREQ _0x20000C7
                 _0x20000C8:
000aaf 940e 0fed 	CALL SUBOPT_0x44
000ab1 2f3e      	MOV  R19,R30
000ab2 30e0      	CPI  R30,0
000ab3 f019      	BREQ _0x20000CB
000ab4 940e 0fe8 	CALL SUBOPT_0x43
000ab6 f409      	BRNE _0x20000CC
                 _0x20000CB:
000ab7 c007      	RJMP _0x20000CA
                 _0x20000CC:
000ab8 940e 0ff9 	CALL SUBOPT_0x45
000aba f41c      	BRGE _0x20000CD
000abb efef      	LDI  R30,LOW(65535)
000abc efff      	LDI  R31,HIGH(65535)
000abd c110      	RJMP _0x20A0005
                 _0x20000CD:
000abe cff0      	RJMP _0x20000C8
                 _0x20000CA:
                +
000abf 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000ac0 c10a      	RJMP _0x20000CE
                 _0x20000C7:
000ac1 3235      	CPI  R19,37
000ac2 f011      	BREQ PC+3
000ac3 940c 0bb9 	JMP _0x20000CF
000ac5 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000ac6 89ec      	LDD  R30,Y+20
000ac7 89fd      	LDD  R31,Y+20+1
000ac8 9135      	LPM  R19,Z+
000ac9 8bec      	STD  Y+20,R30
000aca 8bfd      	STD  Y+20+1,R31
000acb 3330      	CPI  R19,48
000acc f010      	BRLO _0x20000D4
000acd 333a      	CPI  R19,58
000ace f008      	BRLO _0x20000D3
                 _0x20000D4:
000acf c007      	RJMP _0x20000D2
                 _0x20000D3:
000ad0 e0aa      	LDI  R26,LOW(10)
000ad1 9f5a      	MUL  R21,R26
000ad2 2d50      	MOV  R21,R0
000ad3 2fe3      	MOV  R30,R19
000ad4 53e0      	SUBI R30,LOW(48)
000ad5 0f5e      	ADD  R21,R30
000ad6 cfef      	RJMP _0x20000D0
                 _0x20000D2:
000ad7 3030      	CPI  R19,0
000ad8 f409      	BRNE _0x20000D6
000ad9 c0f2      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000ada 940e 0fed 	CALL SUBOPT_0x44
000adc 2f2e      	MOV  R18,R30
000add 93ea      	ST   -Y,R30
000ade 940e 0ce6 	CALL _isspace
000ae0 30e0      	CPI  R30,0
000ae1 f039      	BREQ _0x20000D9
000ae2 940e 0ff9 	CALL SUBOPT_0x45
000ae4 f41c      	BRGE _0x20000DA
000ae5 efef      	LDI  R30,LOW(65535)
000ae6 efff      	LDI  R31,HIGH(65535)
000ae7 c0e6      	RJMP _0x20A0005
                 _0x20000DA:
000ae8 cff1      	RJMP _0x20000D7
                 _0x20000D9:
000ae9 3020      	CPI  R18,0
000aea f409      	BRNE _0x20000DB
000aeb c0d7      	RJMP _0x20000DC
                 _0x20000DB:
                +
000aec 872d     +STD Y + 13 , R18
                 	__PUTBSR 18,13
000aed 3050      	CPI  R21,0
000aee f409      	BRNE _0x20000DD
000aef ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000af0 e040      	LDI  R20,LOW(0)
000af1 2fe3      	MOV  R30,R19
000af2 36e3      	CPI  R30,LOW(0x63)
000af3 f469      	BRNE _0x20000E1
000af4 940e 0ffe 	CALL SUBOPT_0x46
000af6 940e 0fed 	CALL SUBOPT_0x44
000af8 01d8      	MOVW R26,R16
000af9 93ec      	ST   X,R30
000afa 940e 0ff9 	CALL SUBOPT_0x45
000afc f41c      	BRGE _0x20000E2
000afd efef      	LDI  R30,LOW(65535)
000afe efff      	LDI  R31,HIGH(65535)
000aff c0ce      	RJMP _0x20A0005
                 _0x20000E2:
000b00 c0b2      	RJMP _0x20000E0
                 _0x20000E1:
000b01 37e3      	CPI  R30,LOW(0x73)
000b02 f511      	BRNE _0x20000E3
000b03 940e 0ffe 	CALL SUBOPT_0x46
                 _0x20000E4:
000b05 2fe5      	MOV  R30,R21
000b06 5051      	SUBI R21,1
000b07 30e0      	CPI  R30,0
000b08 f0c1      	BREQ _0x20000E6
000b09 940e 0fed 	CALL SUBOPT_0x44
000b0b 2f3e      	MOV  R19,R30
000b0c 30e0      	CPI  R30,0
000b0d f019      	BREQ _0x20000E8
000b0e 940e 0fe8 	CALL SUBOPT_0x43
000b10 f039      	BREQ _0x20000E7
                 _0x20000E8:
000b11 940e 0ff9 	CALL SUBOPT_0x45
000b13 f41c      	BRGE _0x20000EA
000b14 efef      	LDI  R30,LOW(65535)
000b15 efff      	LDI  R31,HIGH(65535)
000b16 c0b7      	RJMP _0x20A0005
                 _0x20000EA:
000b17 c009      	RJMP _0x20000E6
                 _0x20000E7:
000b18 931f      	PUSH R17
000b19 930f      	PUSH R16
                +
000b1a 5f0f     +SUBI R16 , LOW ( - 1 )
000b1b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000b1c 2fe3      	MOV  R30,R19
000b1d 91af      	POP  R26
000b1e 91bf      	POP  R27
000b1f 93ec      	ST   X,R30
000b20 cfe4      	RJMP _0x20000E4
                 _0x20000E6:
000b21 01d8      	MOVW R26,R16
000b22 e0e0      	LDI  R30,LOW(0)
000b23 93ec      	ST   X,R30
000b24 c08e      	RJMP _0x20000E0
                 _0x20000E3:
000b25 36ec      	CPI  R30,LOW(0x6C)
000b26 f431      	BRNE _0x20000EC
000b27 e041      	LDI  R20,LOW(1)
000b28 89ec      	LDD  R30,Y+20
000b29 89fd      	LDD  R31,Y+20+1
000b2a 9135      	LPM  R19,Z+
000b2b 8bec      	STD  Y+20,R30
000b2c 8bfd      	STD  Y+20+1,R31
                 _0x20000EC:
000b2d e0e1      	LDI  R30,LOW(1)
000b2e 87ec      	STD  Y+12,R30
000b2f 2fe3      	MOV  R30,R19
000b30 36e4      	CPI  R30,LOW(0x64)
000b31 f011      	BREQ _0x20000F1
000b32 36e9      	CPI  R30,LOW(0x69)
000b33 f419      	BRNE _0x20000F2
                 _0x20000F1:
000b34 e0e0      	LDI  R30,LOW(0)
000b35 87ec      	STD  Y+12,R30
000b36 c002      	RJMP _0x20000F3
                 _0x20000F2:
000b37 37e5      	CPI  R30,LOW(0x75)
000b38 f411      	BRNE _0x20000F4
                 _0x20000F3:
000b39 e02a      	LDI  R18,LOW(10)
000b3a c008      	RJMP _0x20000EF
                 _0x20000F4:
000b3b 37e8      	CPI  R30,LOW(0x78)
000b3c f411      	BRNE _0x20000F5
000b3d e120      	LDI  R18,LOW(16)
000b3e c004      	RJMP _0x20000EF
                 _0x20000F5:
000b3f 32e5      	CPI  R30,LOW(0x25)
000b40 f409      	BRNE _0x20000F8
000b41 c077      	RJMP _0x20000F7
                 _0x20000F8:
000b42 c089      	RJMP _0x20A0006
                 _0x20000EF:
000b43 e0e0      	LDI  R30,LOW(0)
                +
000b44 83ee     +STD Y + 6 , R30
000b45 83ef     +STD Y + 6 + 1 , R30
000b46 87e8     +STD Y + 6 + 2 , R30
000b47 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
                 _0x20000F9:
000b48 2fe5      	MOV  R30,R21
000b49 5051      	SUBI R21,1
000b4a 30e0      	CPI  R30,0
000b4b f411      	BRNE PC+3
000b4c 940c 0b93 	JMP _0x20000FB
000b4e 940e 0fed 	CALL SUBOPT_0x44
000b50 2f3e      	MOV  R19,R30
000b51 32e1      	CPI  R30,LOW(0x21)
000b52 f438      	BRSH _0x20000FC
000b53 940e 0ff9 	CALL SUBOPT_0x45
000b55 f41c      	BRGE _0x20000FD
000b56 efef      	LDI  R30,LOW(65535)
000b57 efff      	LDI  R31,HIGH(65535)
000b58 c075      	RJMP _0x20A0005
                 _0x20000FD:
000b59 c017      	RJMP _0x20000FE
                 _0x20000FC:
000b5a 85ec      	LDD  R30,Y+12
000b5b 30e0      	CPI  R30,0
000b5c f439      	BRNE _0x20000FF
000b5d 323d      	CPI  R19,45
000b5e f419      	BRNE _0x2000100
000b5f efef      	LDI  R30,LOW(255)
000b60 87ec      	STD  Y+12,R30
000b61 cfe6      	RJMP _0x20000F9
                 _0x2000100:
000b62 e0e1      	LDI  R30,LOW(1)
000b63 87ec      	STD  Y+12,R30
                 _0x20000FF:
000b64 3120      	CPI  R18,16
000b65 f431      	BRNE _0x2000102
000b66 933a      	ST   -Y,R19
000b67 940e 0cf0 	CALL _isxdigit
000b69 30e0      	CPI  R30,0
000b6a f031      	BREQ _0x20000FE
000b6b c007      	RJMP _0x2000104
                 _0x2000102:
000b6c 933a      	ST   -Y,R19
000b6d 940e 0cde 	CALL _isdigit
000b6f 30e0      	CPI  R30,0
000b70 f411      	BRNE _0x2000105
                 _0x20000FE:
                +
000b71 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000b72 c020      	RJMP _0x20000FB
                 _0x2000105:
                 _0x2000104:
000b73 3631      	CPI  R19,97
000b74 f010      	BRLO _0x2000106
000b75 5537      	SUBI R19,LOW(87)
000b76 c005      	RJMP _0x2000107
                 _0x2000106:
000b77 3431      	CPI  R19,65
000b78 f010      	BRLO _0x2000108
000b79 5337      	SUBI R19,LOW(55)
000b7a c001      	RJMP _0x2000109
                 _0x2000108:
000b7b 5330      	SUBI R19,LOW(48)
                 _0x2000109:
                 _0x2000107:
000b7c 2fe2      	MOV  R30,R18
                +
000b7d 81ae     +LDD R26 , Y + 6
000b7e 81bf     +LDD R27 , Y + 6 + 1
000b7f 8588     +LDD R24 , Y + 6 + 2
000b80 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000b81 27ff      	CLR  R31
000b82 2766      	CLR  R22
000b83 2777      	CLR  R23
000b84 940e 122a 	CALL __MULD12U
000b86 01df      	MOVW R26,R30
000b87 01cb      	MOVW R24,R22
000b88 2fe3      	MOV  R30,R19
000b89 27ff      	CLR  R31
000b8a 2766      	CLR  R22
000b8b 2777      	CLR  R23
000b8c 940e 1204 	CALL __ADDD12
                +
000b8e 83ee     +STD Y + 6 , R30
000b8f 83ff     +STD Y + 6 + 1 , R31
000b90 8768     +STD Y + 6 + 2 , R22
000b91 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000b92 cfb5      	RJMP _0x20000F9
                 _0x20000FB:
000b93 85ec      	LDD  R30,Y+12
                +
000b94 81ae     +LDD R26 , Y + 6
000b95 81bf     +LDD R27 , Y + 6 + 1
000b96 8588     +LDD R24 , Y + 6 + 2
000b97 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000b98 940e 121a 	CALL __CBD1
000b9a 940e 122a 	CALL __MULD12U
                +
000b9c 83ee     +STD Y + 6 , R30
000b9d 83ff     +STD Y + 6 + 1 , R31
000b9e 8768     +STD Y + 6 + 2 , R22
000b9f 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000ba0 3040      	CPI  R20,0
000ba1 f051      	BREQ _0x200010A
000ba2 940e 0ffe 	CALL SUBOPT_0x46
                +
000ba4 81ee     +LDD R30 , Y + 6
000ba5 81ff     +LDD R31 , Y + 6 + 1
000ba6 8568     +LDD R22 , Y + 6 + 2
000ba7 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000ba8 01d8      	MOVW R26,R16
000ba9 940e 12cb 	CALL __PUTDP1
000bab c007      	RJMP _0x200010B
                 _0x200010A:
000bac 940e 0ffe 	CALL SUBOPT_0x46
000bae 81ee      	LDD  R30,Y+6
000baf 81ff      	LDD  R31,Y+6+1
000bb0 01d8      	MOVW R26,R16
000bb1 93ed      	ST   X+,R30
000bb2 93fc      	ST   X,R31
                 _0x200010B:
                 _0x20000E0:
000bb3 85ea      	LDD  R30,Y+10
000bb4 85fb      	LDD  R31,Y+10+1
000bb5 9631      	ADIW R30,1
000bb6 87ea      	STD  Y+10,R30
000bb7 87fb      	STD  Y+10+1,R31
000bb8 c012      	RJMP _0x200010C
                 _0x20000CF:
                 _0x20000F7:
000bb9 940e 0fed 	CALL SUBOPT_0x44
000bbb 17e3      	CP   R30,R19
000bbc f071      	BREQ _0x200010D
000bbd 940e 0ff9 	CALL SUBOPT_0x45
000bbf f41c      	BRGE _0x200010E
000bc0 efef      	LDI  R30,LOW(65535)
000bc1 efff      	LDI  R31,HIGH(65535)
000bc2 c00b      	RJMP _0x20A0005
                 _0x200010E:
                 _0x20000DC:
000bc3 85ea      	LDD  R30,Y+10
000bc4 85fb      	LDD  R31,Y+10+1
000bc5 9730      	SBIW R30,0
000bc6 f419      	BRNE _0x200010F
000bc7 efef      	LDI  R30,LOW(65535)
000bc8 efff      	LDI  R31,HIGH(65535)
000bc9 c004      	RJMP _0x20A0005
                 _0x200010F:
000bca c001      	RJMP _0x20000C6
                 _0x200010D:
                 _0x200010C:
                 _0x20000CE:
000bcb ced4      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000bcc 85ea      	LDD  R30,Y+10
000bcd 85fb      	LDD  R31,Y+10+1
                 _0x20A0005:
000bce 940e 130a 	CALL __LOADLOCR6
000bd0 9666      	ADIW R28,22
000bd1 9508      	RET
                 _sscanf:
000bd2 92ff      	PUSH R15
000bd3 2ef8      	MOV  R15,R24
000bd4 9723      	SBIW R28,3
000bd5 931a      	ST   -Y,R17
000bd6 930a      	ST   -Y,R16
000bd7 01de      	MOVW R26,R28
000bd8 9617      	ADIW R26,7
000bd9 940e 0fe3 	CALL SUBOPT_0x42
000bdb 9730      	SBIW R30,0
000bdc f419      	BRNE _0x2000110
000bdd efef      	LDI  R30,LOW(65535)
000bde efff      	LDI  R31,HIGH(65535)
000bdf c01c      	RJMP _0x20A0004
                 _0x2000110:
000be0 01de      	MOVW R26,R28
000be1 9611      	ADIW R26,1
000be2 940e 1200 	CALL __ADDW2R15
000be4 018d      	MOVW R16,R26
000be5 01de      	MOVW R26,R28
000be6 9617      	ADIW R26,7
000be7 940e 0fe3 	CALL SUBOPT_0x42
000be9 83eb      	STD  Y+3,R30
000bea 83fc      	STD  Y+3+1,R31
000beb 01de      	MOVW R26,R28
000bec 9615      	ADIW R26,5
000bed 940e 0fe3 	CALL SUBOPT_0x42
000bef 93fa      	ST   -Y,R31
000bf0 93ea      	ST   -Y,R30
000bf1 931a      	ST   -Y,R17
000bf2 930a      	ST   -Y,R16
000bf3 e7e0      	LDI  R30,LOW(_get_buff_G100)
000bf4 e0fa      	LDI  R31,HIGH(_get_buff_G100)
000bf5 93fa      	ST   -Y,R31
000bf6 93ea      	ST   -Y,R30
000bf7 01fe      	MOVW R30,R28
000bf8 9638      	ADIW R30,8
000bf9 93fa      	ST   -Y,R31
000bfa 93ea      	ST   -Y,R30
000bfb de9c      	RCALL __scanf_G100
                 _0x20A0004:
000bfc 8119      	LDD  R17,Y+1
000bfd 8108      	LDD  R16,Y+0
000bfe 9625      	ADIW R28,5
000bff 90ff      	POP  R15
000c00 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000c01 817b         ldd  r23,y+3
000c02 816a         ldd  r22,y+2
000c03 81f9         ldd  r31,y+1
000c04 81e8         ld   r30,y
000c05 fb77         bst  r23,7
000c06 0f77         lsl  r23
000c07 fd67         sbrc r22,7
000c08 6071         sbr  r23,1
000c09 2f97         mov  r25,r23
000c0a 579e         subi r25,0x7e
000c0b f081         breq __ftrunc0
000c0c f078         brcs __ftrunc0
000c0d 3198         cpi  r25,24
000c0e f490         brsh __ftrunc1
000c0f 27aa         clr  r26
000c10 27bb         clr  r27
000c11 2788         clr  r24
                 __ftrunc2:
000c12 9408         sec
000c13 9587         ror  r24
000c14 95b7         ror  r27
000c15 95a7         ror  r26
000c16 959a         dec  r25
000c17 f7d1         brne __ftrunc2
000c18 23ea         and  r30,r26
000c19 23fb         and  r31,r27
000c1a 2368         and  r22,r24
000c1b c005         rjmp __ftrunc1
                 __ftrunc0:
000c1c 94e8         clt
000c1d 2777         clr  r23
000c1e 27ee         clr  r30
000c1f 27ff         clr  r31
000c20 2766         clr  r22
                 __ftrunc1:
000c21 776f         cbr  r22,0x80
000c22 9576         lsr  r23
000c23 f408         brcc __ftrunc3
000c24 6860         sbr  r22,0x80
                 __ftrunc3:
000c25 f977         bld  r23,7
000c26 91a9         ld   r26,y+
000c27 91b9         ld   r27,y+
000c28 9189         ld   r24,y+
000c29 9199         ld   r25,y+
000c2a 17ea         cp   r30,r26
000c2b 07fb         cpc  r31,r27
000c2c 0768         cpc  r22,r24
000c2d 0779         cpc  r23,r25
000c2e fb97         bst  r25,7
000c2f 9508         ret
                 _floor:
000c30 940e 1009 	CALL SUBOPT_0x47
000c32 940e 12e4 	CALL __PUTPARD1
000c34 940e 0c01 	CALL _ftrunc
000c36 940e 12df 	CALL __PUTD1S0
000c38 f419          brne __floor1
                 __floor0:
000c39 940e 1009 	CALL SUBOPT_0x47
000c3b c0a0      	RJMP _0x20A0003
                 __floor1:
000c3c f7e6          brtc __floor0
000c3d 940e 1009 	CALL SUBOPT_0x47
                +
000c3f e0a0     +LDI R26 , LOW ( 0x3F800000 )
000c40 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000c41 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000c42 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000c43 940e 10f6 	CALL __SUBF12
000c45 c096      	RJMP _0x20A0003
                 _sin:
000c46 9724      	SBIW R28,4
000c47 931a      	ST   -Y,R17
000c48 e010      	LDI  R17,0
000c49 940e 100c 	CALL SUBOPT_0x48
                +
000c4b e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000c4c eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000c4d e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000c4e e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000c4f 940e 114d 	CALL __MULF12
000c51 940e 1011 	CALL SUBOPT_0x49
000c53 940e 1016 	CALL SUBOPT_0x4A
000c55 940e 0f65 	CALL SUBOPT_0x30
000c57 940e 100c 	CALL SUBOPT_0x48
000c59 940e 0dd2 	CALL SUBOPT_0x3
000c5b 940e 1011 	CALL SUBOPT_0x49
000c5d 940e 100c 	CALL SUBOPT_0x48
000c5f 940e 0e1c 	CALL SUBOPT_0x9
000c61 940e 11e0 	CALL __CMPF12
000c63 f009      	BREQ PC+2
000c64 f410      	BRCC PC+3
000c65 940c 0c72 	JMP  _0x2020017
000c67 940e 1016 	CALL SUBOPT_0x4A
                +
000c69 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c6a e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c6b e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c6c e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c6d 940e 10f6 	CALL __SUBF12
000c6f 940e 1011 	CALL SUBOPT_0x49
000c71 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000c72 940e 100c 	CALL SUBOPT_0x48
                +
000c74 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000c75 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000c76 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000c77 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000c78 940e 11e0 	CALL __CMPF12
000c7a f009      	BREQ PC+2
000c7b f410      	BRCC PC+3
000c7c 940c 0c86 	JMP  _0x2020018
000c7e 940e 100c 	CALL SUBOPT_0x48
000c80 940e 0e1c 	CALL SUBOPT_0x9
000c82 940e 10f6 	CALL __SUBF12
000c84 940e 1011 	CALL SUBOPT_0x49
                 _0x2020018:
000c86 3010      	CPI  R17,0
000c87 f031      	BREQ _0x2020019
000c88 940e 1016 	CALL SUBOPT_0x4A
000c8a 940e 1057 	CALL __ANEGF1
000c8c 940e 1011 	CALL SUBOPT_0x49
                 _0x2020019:
000c8e 940e 1016 	CALL SUBOPT_0x4A
000c90 940e 100c 	CALL SUBOPT_0x48
000c92 940e 114d 	CALL __MULF12
                +
000c94 83e9     +STD Y + 1 , R30
000c95 83fa     +STD Y + 1 + 1 , R31
000c96 836b     +STD Y + 1 + 2 , R22
000c97 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000c98 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000c99 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000c9a e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000c9b e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000c9c 940e 114d 	CALL __MULF12
000c9e 01df      	MOVW R26,R30
000c9f 01cb      	MOVW R24,R22
                +
000ca0 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000ca1 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000ca2 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000ca3 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000ca4 940e 0dd2 	CALL SUBOPT_0x3
000ca6 940e 101b 	CALL SUBOPT_0x4B
                +
000ca8 e4ac     +LDI R26 , LOW ( 0x4104534C )
000ca9 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000caa e084     +LDI R24 , BYTE3 ( 0x4104534C )
000cab e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000cac 940e 10fd 	CALL __ADDF12
000cae 940e 100c 	CALL SUBOPT_0x48
000cb0 940e 114d 	CALL __MULF12
000cb2 937f      	PUSH R23
000cb3 936f      	PUSH R22
000cb4 93ff      	PUSH R31
000cb5 93ef      	PUSH R30
                +
000cb6 81e9     +LDD R30 , Y + 1
000cb7 81fa     +LDD R31 , Y + 1 + 1
000cb8 816b     +LDD R22 , Y + 1 + 2
000cb9 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000cba e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000cbb eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000cbc ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000cbd e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000cbe 940e 10fd 	CALL __ADDF12
000cc0 940e 101b 	CALL SUBOPT_0x4B
                +
000cc2 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000cc3 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000cc4 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000cc5 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000cc6 940e 10fd 	CALL __ADDF12
000cc8 91af      	POP  R26
000cc9 91bf      	POP  R27
000cca 918f      	POP  R24
000ccb 919f      	POP  R25
000ccc 940e 119b 	CALL __DIVF21
000cce 8118      	LDD  R17,Y+0
000ccf 9629      	ADIW R28,9
000cd0 9508      	RET
                 _cos:
000cd1 940e 12da 	CALL __GETD2S0
                +
000cd3 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000cd4 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000cd5 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000cd6 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000cd7 940e 10f6 	CALL __SUBF12
000cd9 940e 12e4 	CALL __PUTPARD1
000cdb df6a      	RCALL _sin
                 _0x20A0003:
000cdc 9624      	ADIW R28,4
000cdd 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000cde e0e1          ldi  r30,1
000cdf 91f9          ld   r31,y+
000ce0 33f0          cpi  r31,'0'
000ce1 f010          brlo isdigit0
000ce2 33fa          cpi  r31,'9'+1
000ce3 f008          brlo isdigit1
                 isdigit0:
000ce4 27ee          clr  r30
                 isdigit1:
000ce5 9508          ret
                 _isspace:
000ce6 e0e1          ldi  r30,1
000ce7 91f9          ld   r31,y+
000ce8 32f0          cpi  r31,' '
000ce9 f029          breq isspace1
000cea 30f9          cpi  r31,9
000ceb f010          brlo isspace0
000cec 30fe          cpi  r31,13+1
000ced f008          brlo isspace1
                 isspace0:
000cee 27ee          clr  r30
                 isspace1:
000cef 9508          ret
                 _isxdigit:
000cf0 e0e1          ldi  r30,1
000cf1 91f9          ld   r31,y+
000cf2 53f0          subi r31,0x30
000cf3 f040          brcs isxdigit0
000cf4 30fa          cpi  r31,10
000cf5 f038          brcs isxdigit1
000cf6 75ff          andi r31,0x5f
000cf7 50f7          subi r31,7
000cf8 30fa          cpi  r31,10
000cf9 f010          brcs isxdigit0
000cfa 31f0          cpi  r31,16
000cfb f008          brcs isxdigit1
                 isxdigit0:
000cfc 27ee          clr  r30
                 isxdigit1:
000cfd 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000cfe 91e9          ld   r30,y+
000cff 91f9          ld   r31,y+
000d00 91a9          ld   r26,y+
000d01 91b9          ld   r27,y+
000d02 01cd          movw r24,r26
                 strcpyf0:
000d03 9005      	lpm  r0,z+
000d04 920d          st   x+,r0
000d05 2000          tst  r0
000d06 f7e1          brne strcpyf0
000d07 01fc          movw r30,r24
000d08 9508          ret
                 _strlen:
000d09 91a9          ld   r26,y+
000d0a 91b9          ld   r27,y+
000d0b 27ee          clr  r30
000d0c 27ff          clr  r31
                 strlen0:
000d0d 916d          ld   r22,x+
000d0e 2366          tst  r22
000d0f f011          breq strlen1
000d10 9631          adiw r30,1
000d11 cffb          rjmp strlen0
                 strlen1:
000d12 9508          ret
                 _strlenf:
000d13 27aa          clr  r26
000d14 27bb          clr  r27
000d15 91e9          ld   r30,y+
000d16 91f9          ld   r31,y+
                 strlenf0:
000d17 9005      	lpm  r0,z+
000d18 2000          tst  r0
000d19 f011          breq strlenf1
000d1a 9611          adiw r26,1
000d1b cffb          rjmp strlenf0
                 strlenf1:
000d1c 01fd          movw r30,r26
000d1d 9508          ret
                 
                 	.CSEG
                 _ftoa:
000d1e 9724      	SBIW R28,4
000d1f d1a6      	RCALL SUBOPT_0x1A
000d20 e0e0      	LDI  R30,LOW(0)
000d21 83ea      	STD  Y+2,R30
000d22 e3ef      	LDI  R30,LOW(63)
000d23 83eb      	STD  Y+3,R30
000d24 931a      	ST   -Y,R17
000d25 930a      	ST   -Y,R16
000d26 85eb      	LDD  R30,Y+11
000d27 85fc      	LDD  R31,Y+11+1
000d28 3fef      	CPI  R30,LOW(0xFFFF)
000d29 efaf      	LDI  R26,HIGH(0xFFFF)
000d2a 07fa      	CPC  R31,R26
000d2b f429      	BRNE _0x208000D
000d2c d2f5      	RCALL SUBOPT_0x4C
                +
000d2d ebe2     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000d2e e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000d2f d1f3      	RCALL SUBOPT_0x27
000d30 c07f      	RJMP _0x20A0002
                 _0x208000D:
000d31 3fef      	CPI  R30,LOW(0x7FFF)
000d32 e7af      	LDI  R26,HIGH(0x7FFF)
000d33 07fa      	CPC  R31,R26
000d34 f429      	BRNE _0x208000C
000d35 d2ec      	RCALL SUBOPT_0x4C
                +
000d36 ebe3     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000d37 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000d38 d1ea      	RCALL SUBOPT_0x27
000d39 c076      	RJMP _0x20A0002
                 _0x208000C:
000d3a 85ac      	LDD  R26,Y+12
000d3b 23aa      	TST  R26
000d3c f452      	BRPL _0x208000F
                +
000d3d 85e9     +LDD R30 , Y + 9
000d3e 85fa     +LDD R31 , Y + 9 + 1
000d3f 856b     +LDD R22 , Y + 9 + 2
000d40 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000d41 940e 1057 	CALL __ANEGF1
000d43 d2e3      	RCALL SUBOPT_0x4D
000d44 d2e7      	RCALL SUBOPT_0x4E
000d45 e2ed      	LDI  R30,LOW(45)
000d46 93ec      	ST   X,R30
                 _0x208000F:
000d47 85a8      	LDD  R26,Y+8
000d48 30a7      	CPI  R26,LOW(0x7)
000d49 f010      	BRLO _0x2080010
000d4a e0e6      	LDI  R30,LOW(6)
000d4b 87e8      	STD  Y+8,R30
                 _0x2080010:
000d4c 8518      	LDD  R17,Y+8
                 _0x2080011:
000d4d 2fe1      	MOV  R30,R17
000d4e 5011      	SUBI R17,1
000d4f 30e0      	CPI  R30,0
000d50 f021      	BREQ _0x2080013
000d51 d2e1      	RCALL SUBOPT_0x4F
000d52 d20b      	RCALL SUBOPT_0x2F
000d53 d2e4      	RCALL SUBOPT_0x50
000d54 cff8      	RJMP _0x2080011
                 _0x2080013:
000d55 d2e7      	RCALL SUBOPT_0x51
000d56 940e 10fd 	CALL __ADDF12
000d58 d2ce      	RCALL SUBOPT_0x4D
000d59 e010      	LDI  R17,LOW(0)
                +
000d5a e0e0     +LDI R30 , LOW ( 0x3F800000 )
000d5b e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000d5c e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000d5d e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000d5e d2d9      	RCALL SUBOPT_0x50
                 _0x2080014:
000d5f d2dd      	RCALL SUBOPT_0x51
000d60 940e 11e0 	CALL __CMPF12
000d62 f060      	BRLO _0x2080016
000d63 d2cf      	RCALL SUBOPT_0x4F
000d64 d1e6      	RCALL SUBOPT_0x2C
000d65 d2d2      	RCALL SUBOPT_0x50
000d66 5f1f      	SUBI R17,-LOW(1)
000d67 3217      	CPI  R17,39
000d68 f028      	BRLO _0x2080017
000d69 d2b8      	RCALL SUBOPT_0x4C
                +
000d6a ebe7     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000d6b e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000d6c d1b6      	RCALL SUBOPT_0x27
000d6d c042      	RJMP _0x20A0002
                 _0x2080017:
000d6e cff0      	RJMP _0x2080014
                 _0x2080016:
000d6f 3010      	CPI  R17,0
000d70 f421      	BRNE _0x2080018
000d71 d2ba      	RCALL SUBOPT_0x4E
000d72 e3e0      	LDI  R30,LOW(48)
000d73 93ec      	ST   X,R30
000d74 c01a      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000d75 2fe1      	MOV  R30,R17
000d76 5011      	SUBI R17,1
000d77 30e0      	CPI  R30,0
000d78 f0b1      	BREQ _0x208001C
000d79 d2b9      	RCALL SUBOPT_0x4F
000d7a d1e3      	RCALL SUBOPT_0x2F
000d7b d1db      	RCALL SUBOPT_0x2E
000d7c d1e8      	RCALL SUBOPT_0x30
000d7d d2ba      	RCALL SUBOPT_0x50
000d7e d2be      	RCALL SUBOPT_0x51
000d7f 940e 119b 	CALL __DIVF21
000d81 940e 108a 	CALL __CFD1U
000d83 2f0e      	MOV  R16,R30
000d84 d2a7      	RCALL SUBOPT_0x4E
000d85 d1ea      	RCALL SUBOPT_0x32
000d86 e0f0      	LDI  R31,0
000d87 d2ab      	RCALL SUBOPT_0x4F
000d88 d098      	RCALL SUBOPT_0xA
000d89 940e 114d 	CALL __MULF12
000d8b d2ba      	RCALL SUBOPT_0x52
000d8c d045      	RCALL SUBOPT_0x3
000d8d d299      	RCALL SUBOPT_0x4D
000d8e cfe6      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000d8f 85e8      	LDD  R30,Y+8
000d90 30e0      	CPI  R30,0
000d91 f0d1      	BREQ _0x20A0001
000d92 d299      	RCALL SUBOPT_0x4E
000d93 e2ee      	LDI  R30,LOW(46)
000d94 93ec      	ST   X,R30
                 _0x208001E:
000d95 85e8      	LDD  R30,Y+8
000d96 50e1      	SUBI R30,LOW(1)
000d97 87e8      	STD  Y+8,R30
000d98 5fef      	SUBI R30,-LOW(1)
000d99 f091      	BREQ _0x2080020
000d9a d2ab      	RCALL SUBOPT_0x52
000d9b d1af      	RCALL SUBOPT_0x2C
000d9c d28a      	RCALL SUBOPT_0x4D
                +
000d9d 85e9     +LDD R30 , Y + 9
000d9e 85fa     +LDD R31 , Y + 9 + 1
000d9f 856b     +LDD R22 , Y + 9 + 2
000da0 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000da1 940e 108a 	CALL __CFD1U
000da3 2f0e      	MOV  R16,R30
000da4 d287      	RCALL SUBOPT_0x4E
000da5 d1ca      	RCALL SUBOPT_0x32
000da6 e0f0      	LDI  R31,0
000da7 d29e      	RCALL SUBOPT_0x52
000da8 d078      	RCALL SUBOPT_0xA
000da9 d028      	RCALL SUBOPT_0x3
000daa d27c      	RCALL SUBOPT_0x4D
000dab cfe9      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000dac 81ae      	LDD  R26,Y+6
000dad 81bf      	LDD  R27,Y+6+1
000dae e0e0      	LDI  R30,LOW(0)
000daf 93ec      	ST   X,R30
                 _0x20A0002:
000db0 8119      	LDD  R17,Y+1
000db1 8108      	LDD  R16,Y+0
000db2 962d      	ADIW R28,13
000db3 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x4
                 _TIMER2_OVERFLOW:
000504           	.BYTE 0x1
                 _PACKET_BUFF:
000505           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000569           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
00056a           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056c           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
000580           	.BYTE 0x1
                 _CHECK_GETS:
000581           	.BYTE 0x1
                 _MOTORR_HALL:
000582           	.BYTE 0x4
                 _MOTORL_HALL:
000586           	.BYTE 0x4
                 __seed_G104:
00058a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000db4 93fa      	ST   -Y,R31
000db5 93ea      	ST   -Y,R30
000db6 940c 104b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000db8 e0e0      	LDI  R30,LOW(0)
000db9 93e0 056a 	STS  _TIMER0_OVERFLOW,R30
000dbb 93e0 056b 	STS  _TIMER0_OVERFLOW+1,R30
000dbd bfe2      	OUT  0x32,R30
000dbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
                +
000dbf 01fe     +MOVW R30 , R28
000dc0 59e8     +SUBI R30 , LOW ( - 616 )
000dc1 4ffd     +SBCI R31 , HIGH ( - 616 )
000dc2 9001     +LD R0 , Z +
000dc3 81f0     +LD R31 , Z
000dc4 2de0     +MOV R30 , R0
                 	__GETW1SX 616
000dc5 940e 1220 	CALL __CWD1
000dc7 940e 10c3 	CALL __CDF1
000dc9 01df      	MOVW R26,R30
000dca 01cb      	MOVW R24,R22
                +
000dcb e0e0     +LDI R30 , LOW ( 0x42C80000 )
000dcc e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000dcd ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000dce e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000dcf 940e 119b 	CALL __DIVF21
000dd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000dd2 940e 12ee 	CALL __SWAPD12
000dd4 940e 10f6 	CALL __SUBF12
000dd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x4:
                +
000dd7 01de     +MOVW R26 , R28
000dd8 59a6     +SUBI R26 , LOW ( - 618 )
000dd9 4fbd     +SBCI R27 , HIGH ( - 618 )
000dda 93ed     +ST X + , R30
000ddb 93fd     +ST X + , R31
000ddc 936d     +ST X + , R22
000ddd 937c     +ST X , R23
                 	__PUTD1SX 618
000dde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
                +
000ddf e0a0     +LDI R26 , LOW ( 0x3EC00000 )
000de0 e0b0     +LDI R27 , HIGH ( 0x3EC00000 )
000de1 ec80     +LDI R24 , BYTE3 ( 0x3EC00000 )
000de2 e39e     +LDI R25 , BYTE4 ( 0x3EC00000 )
                 	__GETD2N 0x3EC00000
000de3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x6:
                +
000de4 01fe     +MOVW R30 , R28
000de5 59e6     +SUBI R30 , LOW ( - 618 )
000de6 4ffd     +SBCI R31 , HIGH ( - 618 )
000de7 9001     +LD R0 , Z +
000de8 9011     +LD R1 , Z +
000de9 9161     +LD R22 , Z +
000dea 8170     +LD R23 , Z
000deb 01f0     +MOVW R30 , R0
                 	__GETD1SX 618
000dec dff2      	RCALL SUBOPT_0x5
000ded 940e 10fd 	CALL __ADDF12
000def 01df      	MOVW R26,R30
000df0 01cb      	MOVW R24,R22
                +
000df1 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000df2 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000df3 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000df4 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000df5 940e 119b 	CALL __DIVF21
000df7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x7:
                +
000df8 01de     +MOVW R26 , R28
000df9 59a2     +SUBI R26 , LOW ( - 622 )
000dfa 4fbd     +SBCI R27 , HIGH ( - 622 )
000dfb 93ed     +ST X + , R30
000dfc 93fd     +ST X + , R31
000dfd 936d     +ST X + , R22
000dfe 937c     +ST X , R23
                 	__PUTD1SX 622
                +
000dff e0a0     +LDI R26 , LOW ( 0x3F400000 )
000e00 e0b0     +LDI R27 , HIGH ( 0x3F400000 )
000e01 e480     +LDI R24 , BYTE3 ( 0x3F400000 )
000e02 e39f     +LDI R25 , BYTE4 ( 0x3F400000 )
                 	__GETD2N 0x3F400000
000e03 940e 10f6 	CALL __SUBF12
000e05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x8:
                +
000e06 01de     +MOVW R26 , R28
000e07 59a2     +SUBI R26 , LOW ( - 622 )
000e08 4fbd     +SBCI R27 , HIGH ( - 622 )
000e09 900d     +LD R0 , X +
000e0a 901d     +LD R1 , X +
000e0b 918d     +LD R24 , X +
000e0c 919c     +LD R25 , X
000e0d 01d0     +MOVW R26 , R0
                 	__GETD2SX 622
                +
000e0e e0e0     +LDI R30 , LOW ( 0x447A0000 )
000e0f e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000e10 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000e11 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000e12 940e 114d 	CALL __MULF12
000e14 940e 108c 	CALL __CFD1
                +
000e16 01de     +MOVW R26 , R28
000e17 58ae     +SUBI R26 , LOW ( - 626 )
000e18 4fbd     +SBCI R27 , HIGH ( - 626 )
000e19 93ed     +ST X + , R30
000e1a 93fc     +ST X , R31
                 	__PUTW1SX 626
000e1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
                +
000e1c e0e0     +LDI R30 , LOW ( 0x3F000000 )
000e1d e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000e1e e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000e1f e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000e20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000e21 940e 1220 	CALL __CWD1
000e23 940e 10c3 	CALL __CDF1
000e25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
000e26 e0e0      	LDI  R30,LOW(0)
000e27 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000e29 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000e2b 93e0 0502 	STS  _TIMER1_OVERFLOW+2,R30
000e2d 93e0 0503 	STS  _TIMER1_OVERFLOW+3,R30
000e2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xC:
000e30 940e 10c3 	CALL __CDF1
                +
000e32 e0a0     +LDI R26 , LOW ( 0x3E000000 )
000e33 e0b0     +LDI R27 , HIGH ( 0x3E000000 )
000e34 e080     +LDI R24 , BYTE3 ( 0x3E000000 )
000e35 e39e     +LDI R25 , BYTE4 ( 0x3E000000 )
                 	__GETD2N 0x3E000000
000e36 940e 114d 	CALL __MULF12
                +
000e38 eda8     +LDI R26 , LOW ( 0x40490FD8 )
000e39 e0bf     +LDI R27 , HIGH ( 0x40490FD8 )
000e3a e489     +LDI R24 , BYTE3 ( 0x40490FD8 )
000e3b e490     +LDI R25 , BYTE4 ( 0x40490FD8 )
                 	__GETD2N 0x40490FD8
000e3c 940e 114d 	CALL __MULF12
000e3e 01df      	MOVW R26,R30
000e3f 01cb      	MOVW R24,R22
                +
000e40 e0e0     +LDI R30 , LOW ( 0x43200000 )
000e41 e0f0     +LDI R31 , HIGH ( 0x43200000 )
000e42 e260     +LDI R22 , BYTE3 ( 0x43200000 )
000e43 e473     +LDI R23 , BYTE4 ( 0x43200000 )
                 	__GETD1N 0x43200000
000e44 940e 119b 	CALL __DIVF21
000e46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
                +
000e47 01de     +MOVW R26 , R28
000e48 5ea8     +SUBI R26 , LOW ( - 536 )
000e49 4fbd     +SBCI R27 , HIGH ( - 536 )
000e4a 900d     +LD R0 , X +
000e4b 901d     +LD R1 , X +
000e4c 918d     +LD R24 , X +
000e4d 919c     +LD R25 , X
000e4e 01d0     +MOVW R26 , R0
                 	__GETD2SX 536
000e4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
                +
000e50 01fe     +MOVW R30 , R28
000e51 5ee8     +SUBI R30 , LOW ( - 536 )
000e52 4ffd     +SBCI R31 , HIGH ( - 536 )
000e53 9001     +LD R0 , Z +
000e54 9011     +LD R1 , Z +
000e55 9161     +LD R22 , Z +
000e56 8170     +LD R23 , Z
000e57 01f0     +MOVW R30 , R0
                 	__GETD1SX 536
000e58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0xF:
                +
000e59 01fe     +MOVW R30 , R28
000e5a 50e8     +SUBI R30 , LOW ( - 504 )
000e5b 4ffe     +SBCI R31 , HIGH ( - 504 )
000e5c 9001     +LD R0 , Z +
000e5d 9011     +LD R1 , Z +
000e5e 9161     +LD R22 , Z +
000e5f 8170     +LD R23 , Z
000e60 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
                +
000e61 01de     +MOVW R26 , R28
000e62 50a4     +SUBI R26 , LOW ( - 508 )
000e63 4fbe     +SBCI R27 , HIGH ( - 508 )
000e64 900d     +LD R0 , X +
000e65 901d     +LD R1 , X +
000e66 918d     +LD R24 , X +
000e67 919c     +LD R25 , X
000e68 01d0     +MOVW R26 , R0
                 	__GETD2SX 508
000e69 940e 10fd 	CALL __ADDF12
000e6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
000e6c 01de     +MOVW R26 , R28
000e6d 5faa     +SUBI R26 , LOW ( - 518 )
000e6e 4fbd     +SBCI R27 , HIGH ( - 518 )
000e6f 900d     +LD R0 , X +
000e70 901d     +LD R1 , X +
000e71 918d     +LD R24 , X +
000e72 919c     +LD R25 , X
000e73 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
000e74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x11:
000e75 01df      	MOVW R26,R30
000e76 01cb      	MOVW R24,R22
                +
000e77 e0e0     +LDI R30 , LOW ( 0x40000000 )
000e78 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000e79 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000e7a e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000e7b 940e 119b 	CALL __DIVF21
000e7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
000e7e 01fe     +MOVW R30 , R28
000e7f 5fea     +SUBI R30 , LOW ( - 518 )
000e80 4ffd     +SBCI R31 , HIGH ( - 518 )
000e81 9001     +LD R0 , Z +
000e82 9011     +LD R1 , Z +
000e83 9161     +LD R22 , Z +
000e84 8170     +LD R23 , Z
000e85 01f0     +MOVW R30 , R0
                 	__GETD1SX 518
000e86 940e 12e4 	CALL __PUTPARD1
000e88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000e89 940e 114d 	CALL __MULF12
000e8b 940e 108c 	CALL __CFD1
000e8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
000e8e 91ed      	LD   R30,X+
000e8f 91fd      	LD   R31,X+
000e90 9631      	ADIW R30,1
000e91 93fe      	ST   -X,R31
000e92 93ee      	ST   -X,R30
000e93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x15:
000e94 936a      	ST   -Y,R22
000e95 937a      	ST   -Y,R23
000e96 93aa      	ST   -Y,R26
000e97 93ba      	ST   -Y,R27
000e98 93ea      	ST   -Y,R30
000e99 93fa      	ST   -Y,R31
000e9a b7ef      	IN   R30,SREG
000e9b 93ea      	ST   -Y,R30
000e9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x16:
000e9d 940e 12c6 	CALL __GETD1P_INC
                +
000e9f 5fef     +SUBI R30 , LOW ( - 1 )
000ea0 4fff     +SBCI R31 , HIGH ( - 1 )
000ea1 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000ea2 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000ea3 940e 12d0 	CALL __PUTDP1_DEC
000ea5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x17:
000ea6 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
000ea8 e0b0      	LDI  R27,0
000ea9 5fab      	SUBI R26,LOW(-_PACKET_BUFF)
000eaa 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
000eab b1ec      	IN   R30,0xC
000eac 93ec      	ST   X,R30
000ead 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
000eaf 5fef      	SUBI R30,-LOW(1)
000eb0 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
000eb2 e0e0      	LDI  R30,LOW(0)
000eb3 bde4      	OUT  0x24,R30
000eb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x18:
000eb5 e0f0      	LDI  R31,0
000eb6 59e4      	SUBI R30,LOW(-_VELOCITY_BUFF)
000eb7 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000eb8 8310      	ST   Z,R17
000eb9 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000ebb 5fef      	SUBI R30,-LOW(1)
000ebc 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
000ebe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000ebf 81aa      	LDD  R26,Y+2
000ec0 81bb      	LDD  R27,Y+2+1
000ec1 27ee      	CLR  R30
000ec2 0fa1      	ADD  R26,R17
000ec3 1fbe      	ADC  R27,R30
000ec4 91ec      	LD   R30,X
000ec5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000ec6 e0e0      	LDI  R30,LOW(0)
000ec7 83e8      	ST   Y,R30
000ec8 83e9      	STD  Y+1,R30
000ec9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000eca 85ae      	LDD  R26,Y+14
000ecb 85bf      	LDD  R27,Y+14+1
000ecc 940e 12c0 	CALL __GETD1P
000ece 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000ecf 85ac      	LDD  R26,Y+12
000ed0 85bd      	LDD  R27,Y+12+1
000ed1 940e 12c0 	CALL __GETD1P
000ed3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000ed4 e1a7     +LDI R26 , LOW ( 0x3E8ED917 )
000ed5 edb9     +LDI R27 , HIGH ( 0x3E8ED917 )
000ed6 e88e     +LDI R24 , BYTE3 ( 0x3E8ED917 )
000ed7 e39e     +LDI R25 , BYTE4 ( 0x3E8ED917 )
                 	__GETD2N 0x3E8ED917
000ed8 940e 114d 	CALL __MULF12
000eda cf9a      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
                +
000edb 83ec     +STD Y + 4 , R30
000edc 83fd     +STD Y + 4 + 1 , R31
000edd 836e     +STD Y + 4 + 2 , R22
000ede 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000edf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1F:
                +
000ee0 81ac     +LDD R26 , Y + 4
000ee1 81bd     +LDD R27 , Y + 4 + 1
000ee2 818e     +LDD R24 , Y + 4 + 2
000ee3 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000ee4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
                +
000ee5 e6e9     +LDI R30 , LOW ( 0x453EFC69 )
000ee6 effc     +LDI R31 , HIGH ( 0x453EFC69 )
000ee7 e36e     +LDI R22 , BYTE3 ( 0x453EFC69 )
000ee8 e475     +LDI R23 , BYTE4 ( 0x453EFC69 )
                 	__GETD1N 0x453EFC69
000ee9 cf9f      	RJMP SUBOPT_0x13
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000eea e0e0      	LDI  R30,LOW(0)
000eeb e0f0      	LDI  R31,HIGH(0)
000eec 93ed      	ST   X+,R30
000eed 93fc      	ST   X,R31
000eee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x22:
000eef 93fa      	ST   -Y,R31
000ef0 93ea      	ST   -Y,R30
000ef1 940e 05f1 	CALL _RTU_WriteOperate0
000ef3 e0e5      	LDI  R30,LOW(5)
000ef4 e0f0      	LDI  R31,HIGH(5)
000ef5 cebe      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x23:
000ef6 93ea      	ST   -Y,R30
000ef7 e7e8      	LDI  R30,LOW(120)
000ef8 e0f0      	LDI  R31,HIGH(120)
000ef9 93fa      	ST   -Y,R31
000efa 93ea      	ST   -Y,R30
000efb e0e1      	LDI  R30,LOW(1)
000efc e0f0      	LDI  R31,HIGH(1)
000efd cff1      	RJMP SUBOPT_0x22
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x24:
000efe df95      	RCALL SUBOPT_0x15
000eff e0a0      	LDI  R26,0
000f00 990c      	SBIC 0x1,4
000f01 e0a1      	LDI  R26,1
000f02 e0e0      	LDI  R30,0
000f03 990d      	SBIC 0x1,5
000f04 e0e1      	LDI  R30,1
000f05 17ea      	CP   R30,R26
000f06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x25:
000f07 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
000f08 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
000f09 940e 12c6 	CALL __GETD1P_INC
000f0b 9731      	SBIW R30,1
000f0c 4060      	SBCI R22,0
000f0d 4070      	SBCI R23,0
000f0e 940e 12d0 	CALL __PUTDP1_DEC
                +
000f10 5fef     +SUBI R30 , LOW ( - 1 )
000f11 4fff     +SBCI R31 , HIGH ( - 1 )
000f12 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000f13 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000f14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x26:
000f15 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000f16 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000f17 940e 12c6 	CALL __GETD1P_INC
000f19 9731      	SBIW R30,1
000f1a 4060      	SBCI R22,0
000f1b 4070      	SBCI R23,0
000f1c 940e 12d0 	CALL __PUTDP1_DEC
                +
000f1e 5fef     +SUBI R30 , LOW ( - 1 )
000f1f 4fff     +SBCI R31 , HIGH ( - 1 )
000f20 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000f21 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000f22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
000f23 93fa      	ST   -Y,R31
000f24 93ea      	ST   -Y,R30
000f25 940c 0cfe 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x28:
000f27 dfb8      	RCALL SUBOPT_0x1F
                +
000f28 e0e0     +LDI R30 , LOW ( 0x41200000 )
000f29 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000f2a e260     +LDI R22 , BYTE3 ( 0x41200000 )
000f2b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000f2c 940e 114d 	CALL __MULF12
000f2e cfac      	RJMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x29:
                +
000f2f 81ec     +LDD R30 , Y + 4
000f30 81fd     +LDD R31 , Y + 4 + 1
000f31 816e     +LDD R22 , Y + 4 + 2
000f32 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000f33 85ac     +LDD R26 , Y + 12
000f34 85bd     +LDD R27 , Y + 12 + 1
000f35 858e     +LDD R24 , Y + 12 + 2
000f36 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000f37 940e 11e0 	CALL __CMPF12
000f39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A:
                +
000f3a 85ac     +LDD R26 , Y + 12
000f3b 85bd     +LDD R27 , Y + 12 + 1
000f3c 858e     +LDD R24 , Y + 12 + 2
000f3d 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000f3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2B:
                +
000f3f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000f40 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000f41 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000f42 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000f43 940e 114d 	CALL __MULF12
                +
000f45 87ec     +STD Y + 12 , R30
000f46 87fd     +STD Y + 12 + 1 , R31
000f47 876e     +STD Y + 12 + 2 , R22
000f48 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000f49 5f3f      	SUBI R19,-LOW(1)
000f4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2C:
                +
000f4b e0e0     +LDI R30 , LOW ( 0x41200000 )
000f4c e0f0     +LDI R31 , HIGH ( 0x41200000 )
000f4d e260     +LDI R22 , BYTE3 ( 0x41200000 )
000f4e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000f4f 940e 114d 	CALL __MULF12
000f51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
000f52 87ec     +STD Y + 12 , R30
000f53 87fd     +STD Y + 12 + 1 , R31
000f54 876e     +STD Y + 12 + 2 , R22
000f55 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000f56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E:
                +
000f57 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000f58 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000f59 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000f5a e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000f5b 940e 10fd 	CALL __ADDF12
000f5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F:
                +
000f5e eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000f5f ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000f60 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000f61 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000f62 940e 114d 	CALL __MULF12
000f64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
000f65 940e 12e4 	CALL __PUTPARD1
000f67 940c 0c30 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000f69 85a8      	LDD  R26,Y+8
000f6a 85b9      	LDD  R27,Y+8+1
000f6b 9611      	ADIW R26,1
000f6c 87a8      	STD  Y+8,R26
000f6d 87b9      	STD  Y+8+1,R27
000f6e 9711      	SBIW R26,1
000f6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000f70 2fe0      	MOV  R30,R16
000f71 5de0      	SUBI R30,-LOW(48)
000f72 93ec      	ST   X,R30
000f73 2fe0      	MOV  R30,R16
000f74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x33:
000f75 85e8      	LDD  R30,Y+8
000f76 85f9      	LDD  R31,Y+8+1
000f77 9631      	ADIW R30,1
000f78 87e8      	STD  Y+8,R30
000f79 87f9      	STD  Y+8+1,R31
000f7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x34:
000f7b 932a      	ST   -Y,R18
000f7c 81ef      	LDD  R30,Y+7
000f7d 85f8      	LDD  R31,Y+7+1
000f7e 93fa      	ST   -Y,R31
000f7f 93ea      	ST   -Y,R30
000f80 85eb      	LDD  R30,Y+11
000f81 85fc      	LDD  R31,Y+11+1
000f82 9509      	ICALL
000f83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x35:
                +
000f84 01fe     +MOVW R30 , R28
000f85 5ae6     +SUBI R30 , LOW ( - 90 )
000f86 4fff     +SBCI R31 , HIGH ( - 90 )
000f87 9001     +LD R0 , Z +
000f88 81f0     +LD R31 , Z
000f89 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000f8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x36:
000f8b 9734      	SBIW R30,4
                +
000f8c 01de     +MOVW R26 , R28
000f8d 5aa6     +SUBI R26 , LOW ( - 90 )
000f8e 4fbf     +SBCI R27 , HIGH ( - 90 )
000f8f 93ed     +ST X + , R30
000f90 93fc     +ST X , R31
                 	__PUTW1SX 90
000f91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x37:
000f92 81ef      	LDD  R30,Y+7
000f93 85f8      	LDD  R31,Y+7+1
000f94 93fa      	ST   -Y,R31
000f95 93ea      	ST   -Y,R30
000f96 85eb      	LDD  R30,Y+11
000f97 85fc      	LDD  R31,Y+11+1
000f98 9509      	ICALL
000f99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x38:
                +
000f9a 01de     +MOVW R26 , R28
000f9b 5aa6     +SUBI R26 , LOW ( - 90 )
000f9c 4fbf     +SBCI R27 , HIGH ( - 90 )
000f9d 900d     +LD R0 , X +
000f9e 91bc     +LD R27 , X
000f9f 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000fa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39:
                +
000fa1 87ea     +STD Y + 10 , R30
000fa2 87fb     +STD Y + 10 + 1 , R31
000fa3 876c     +STD Y + 10 + 2 , R22
000fa4 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000fa5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3A:
000fa6 dfdd      	RCALL SUBOPT_0x35
000fa7 cfe3      	RJMP SUBOPT_0x36
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
                +
000fa8 85ea     +LDD R30 , Y + 10
000fa9 85fb     +LDD R31 , Y + 10 + 1
000faa 856c     +LDD R22 , Y + 10 + 2
000fab 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000fac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3C:
000fad 87ee      	STD  Y+14,R30
000fae 87ff      	STD  Y+14+1,R31
000faf 93fa      	ST   -Y,R31
000fb0 93ea      	ST   -Y,R30
000fb1 940e 0d09 	CALL _strlen
000fb3 2f1e      	MOV  R17,R30
000fb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3D:
000fb5 dfe4      	RCALL SUBOPT_0x38
000fb6 9614      	ADIW R26,4
000fb7 940e 12bc 	CALL __GETW1P
000fb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
                +
000fba 8be8     +STD Y + 16 , R30
000fbb 8bf9     +STD Y + 16 + 1 , R31
000fbc 8b6a     +STD Y + 16 + 2 , R22
000fbd 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000fbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x3F:
000fbf 7f0b      	ANDI R16,LOW(251)
000fc0 89ed      	LDD  R30,Y+21
000fc1 93ea      	ST   -Y,R30
                +
000fc2 01fe     +MOVW R30 , R28
000fc3 5ae9     +SUBI R30 , LOW ( - 87 )
000fc4 4fff     +SBCI R31 , HIGH ( - 87 )
000fc5 9001     +LD R0 , Z +
000fc6 81f0     +LD R31 , Z
000fc7 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000fc8 93fa      	ST   -Y,R31
000fc9 93ea      	ST   -Y,R30
                +
000fca 01fe     +MOVW R30 , R28
000fcb 5ae5     +SUBI R30 , LOW ( - 91 )
000fcc 4fff     +SBCI R31 , HIGH ( - 91 )
000fcd 9001     +LD R0 , Z +
000fce 81f0     +LD R31 , Z
000fcf 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000fd0 9509      	ICALL
000fd1 3050      	CPI  R21,0
000fd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40:
                +
000fd3 89e8     +LDD R30 , Y + 16
000fd4 89f9     +LDD R31 , Y + 16 + 1
000fd5 896a     +LDD R22 , Y + 16 + 2
000fd6 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000fd7 85aa     +LDD R26 , Y + 10
000fd8 85bb     +LDD R27 , Y + 10 + 1
000fd9 858c     +LDD R24 , Y + 10 + 2
000fda 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000fdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
000fdc 01de      	MOVW R26,R28
000fdd 961c      	ADIW R26,12
000fde 940e 1200 	CALL __ADDW2R15
000fe0 940e 12bc 	CALL __GETW1P
000fe2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x42:
000fe3 940e 1200 	CALL __ADDW2R15
000fe5 940e 12bc 	CALL __GETW1P
000fe7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000fe8 933a      	ST   -Y,R19
000fe9 940e 0ce6 	CALL _isspace
000feb 30e0      	CPI  R30,0
000fec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x44:
000fed 01fe      	MOVW R30,R28
000fee 963d      	ADIW R30,13
000fef 93fa      	ST   -Y,R31
000ff0 93ea      	ST   -Y,R30
000ff1 89e8      	LDD  R30,Y+16
000ff2 89f9      	LDD  R31,Y+16+1
000ff3 93fa      	ST   -Y,R31
000ff4 93ea      	ST   -Y,R30
000ff5 89ec      	LDD  R30,Y+20
000ff6 89fd      	LDD  R31,Y+20+1
000ff7 9509      	ICALL
000ff8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x45:
000ff9 85ae      	LDD  R26,Y+14
000ffa 85bf      	LDD  R27,Y+14+1
000ffb 91ac      	LD   R26,X
000ffc 30a0      	CPI  R26,0
000ffd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x46:
000ffe 89ea      	LDD  R30,Y+18
000fff 89fb      	LDD  R31,Y+18+1
001000 9734      	SBIW R30,4
001001 8bea      	STD  Y+18,R30
001002 8bfb      	STD  Y+18+1,R31
001003 89aa      	LDD  R26,Y+18
001004 89bb      	LDD  R27,Y+18+1
001005 9614      	ADIW R26,4
001006 910d      	LD   R16,X+
001007 911c      	LD   R17,X
001008 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
001009 940e 12d5 	CALL __GETD1S0
00100b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x48:
                +
00100c 81ad     +LDD R26 , Y + 5
00100d 81be     +LDD R27 , Y + 5 + 1
00100e 818f     +LDD R24 , Y + 5 + 2
00100f 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001010 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x49:
                +
001011 83ed     +STD Y + 5 , R30
001012 83fe     +STD Y + 5 + 1 , R31
001013 836f     +STD Y + 5 + 2 , R22
001014 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
001015 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
001016 81ed     +LDD R30 , Y + 5
001017 81fe     +LDD R31 , Y + 5 + 1
001018 816f     +LDD R22 , Y + 5 + 2
001019 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00101a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
                +
00101b 81a9     +LDD R26 , Y + 1
00101c 81ba     +LDD R27 , Y + 1 + 1
00101d 818b     +LDD R24 , Y + 1 + 2
00101e 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00101f 940e 114d 	CALL __MULF12
001021 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4C:
001022 81ee      	LDD  R30,Y+6
001023 81ff      	LDD  R31,Y+6+1
001024 93fa      	ST   -Y,R31
001025 93ea      	ST   -Y,R30
001026 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4D:
                +
001027 87e9     +STD Y + 9 , R30
001028 87fa     +STD Y + 9 + 1 , R31
001029 876b     +STD Y + 9 + 2 , R22
00102a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00102b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4E:
00102c 81ae      	LDD  R26,Y+6
00102d 81bf      	LDD  R27,Y+6+1
00102e 9611      	ADIW R26,1
00102f 83ae      	STD  Y+6,R26
001030 83bf      	STD  Y+6+1,R27
001031 9711      	SBIW R26,1
001032 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4F:
                +
001033 81aa     +LDD R26 , Y + 2
001034 81bb     +LDD R27 , Y + 2 + 1
001035 818c     +LDD R24 , Y + 2 + 2
001036 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001037 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x50:
                +
001038 83ea     +STD Y + 2 , R30
001039 83fb     +STD Y + 2 + 1 , R31
00103a 836c     +STD Y + 2 + 2 , R22
00103b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00103c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x51:
                +
00103d 81ea     +LDD R30 , Y + 2
00103e 81fb     +LDD R31 , Y + 2 + 1
00103f 816c     +LDD R22 , Y + 2 + 2
001040 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001041 85a9     +LDD R26 , Y + 9
001042 85ba     +LDD R27 , Y + 9 + 1
001043 858b     +LDD R24 , Y + 9 + 2
001044 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001045 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x52:
                +
001046 85a9     +LDD R26 , Y + 9
001047 85ba     +LDD R27 , Y + 9 + 1
001048 858b     +LDD R24 , Y + 9 + 2
001049 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00104a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00104b 91e9      	ld   r30,y+
00104c 91f9      	ld   r31,y+
00104d 9630      	adiw r30,0
00104e f039      	breq __delay_ms1
                 __delay_ms0:
                +
00104f e686     +LDI R24 , LOW ( 0xE66 )
001050 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
001051 9701     +SBIW R24 , 1
001052 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
001053 95a8      	wdr
001054 9731      	sbiw r30,1
001055 f7c9      	brne __delay_ms0
                 __delay_ms1:
001056 9508      	ret
                 
                 __ANEGF1:
001057 9730      	SBIW R30,0
001058 4060      	SBCI R22,0
001059 4070      	SBCI R23,0
00105a f009      	BREQ __ANEGF10
00105b 5870      	SUBI R23,0x80
                 __ANEGF10:
00105c 9508      	RET
                 
                 __ROUND_REPACK:
00105d 2355      	TST  R21
00105e f442      	BRPL __REPACK
00105f 3850      	CPI  R21,0x80
001060 f411      	BRNE __ROUND_REPACK0
001061 ffe0      	SBRS R30,0
001062 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001063 9631      	ADIW R30,1
001064 1f69      	ADC  R22,R25
001065 1f79      	ADC  R23,R25
001066 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001067 e850      	LDI  R21,0x80
001068 2757      	EOR  R21,R23
001069 f411      	BRNE __REPACK0
00106a 935f      	PUSH R21
00106b c0cf      	RJMP __ZERORES
                 __REPACK0:
00106c 3f5f      	CPI  R21,0xFF
00106d f031      	BREQ __REPACK1
00106e 0f66      	LSL  R22
00106f 0c00      	LSL  R0
001070 9557      	ROR  R21
001071 9567      	ROR  R22
001072 2f75      	MOV  R23,R21
001073 9508      	RET
                 __REPACK1:
001074 935f      	PUSH R21
001075 2000      	TST  R0
001076 f00a      	BRMI __REPACK2
001077 c0cf      	RJMP __MAXRES
                 __REPACK2:
001078 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
001079 e850      	LDI  R21,0x80
00107a 2e19      	MOV  R1,R25
00107b 2215      	AND  R1,R21
00107c 0f88      	LSL  R24
00107d 1f99      	ROL  R25
00107e 2795      	EOR  R25,R21
00107f 0f55      	LSL  R21
001080 9587      	ROR  R24
                 
                 __UNPACK1:
001081 e850      	LDI  R21,0x80
001082 2e07      	MOV  R0,R23
001083 2205      	AND  R0,R21
001084 0f66      	LSL  R22
001085 1f77      	ROL  R23
001086 2775      	EOR  R23,R21
001087 0f55      	LSL  R21
001088 9567      	ROR  R22
001089 9508      	RET
                 
                 __CFD1U:
00108a 9468      	SET
00108b c001      	RJMP __CFD1U0
                 __CFD1:
00108c 94e8      	CLT
                 __CFD1U0:
00108d 935f      	PUSH R21
00108e dff2      	RCALL __UNPACK1
00108f 3870      	CPI  R23,0x80
001090 f018      	BRLO __CFD10
001091 3f7f      	CPI  R23,0xFF
001092 f408      	BRCC __CFD10
001093 c0a7      	RJMP __ZERORES
                 __CFD10:
001094 e156      	LDI  R21,22
001095 1b57      	SUB  R21,R23
001096 f4aa      	BRPL __CFD11
001097 9551      	NEG  R21
001098 3058      	CPI  R21,8
001099 f40e      	BRTC __CFD19
00109a 3059      	CPI  R21,9
                 __CFD19:
00109b f030      	BRLO __CFD17
00109c efef      	SER  R30
00109d efff      	SER  R31
00109e ef6f      	SER  R22
00109f e77f      	LDI  R23,0x7F
0010a0 f977      	BLD  R23,7
0010a1 c01a      	RJMP __CFD15
                 __CFD17:
0010a2 2777      	CLR  R23
0010a3 2355      	TST  R21
0010a4 f0b9      	BREQ __CFD15
                 __CFD18:
0010a5 0fee      	LSL  R30
0010a6 1fff      	ROL  R31
0010a7 1f66      	ROL  R22
0010a8 1f77      	ROL  R23
0010a9 955a      	DEC  R21
0010aa f7d1      	BRNE __CFD18
0010ab c010      	RJMP __CFD15
                 __CFD11:
0010ac 2777      	CLR  R23
                 __CFD12:
0010ad 3058      	CPI  R21,8
0010ae f028      	BRLO __CFD13
0010af 2fef      	MOV  R30,R31
0010b0 2ff6      	MOV  R31,R22
0010b1 2f67      	MOV  R22,R23
0010b2 5058      	SUBI R21,8
0010b3 cff9      	RJMP __CFD12
                 __CFD13:
0010b4 2355      	TST  R21
0010b5 f031      	BREQ __CFD15
                 __CFD14:
0010b6 9576      	LSR  R23
0010b7 9567      	ROR  R22
0010b8 95f7      	ROR  R31
0010b9 95e7      	ROR  R30
0010ba 955a      	DEC  R21
0010bb f7d1      	BRNE __CFD14
                 __CFD15:
0010bc 2000      	TST  R0
0010bd f40a      	BRPL __CFD16
0010be d14e      	RCALL __ANEGD1
                 __CFD16:
0010bf 915f      	POP  R21
0010c0 9508      	RET
                 
                 __CDF1U:
0010c1 9468      	SET
0010c2 c001      	RJMP __CDF1U0
                 __CDF1:
0010c3 94e8      	CLT
                 __CDF1U0:
0010c4 9730      	SBIW R30,0
0010c5 4060      	SBCI R22,0
0010c6 4070      	SBCI R23,0
0010c7 f0b1      	BREQ __CDF10
0010c8 2400      	CLR  R0
0010c9 f026      	BRTS __CDF11
0010ca 2377      	TST  R23
0010cb f412      	BRPL __CDF11
0010cc 9400      	COM  R0
0010cd d13f      	RCALL __ANEGD1
                 __CDF11:
0010ce 2e17      	MOV  R1,R23
0010cf e17e      	LDI  R23,30
0010d0 2011      	TST  R1
                 __CDF12:
0010d1 f032      	BRMI __CDF13
0010d2 957a      	DEC  R23
0010d3 0fee      	LSL  R30
0010d4 1fff      	ROL  R31
0010d5 1f66      	ROL  R22
0010d6 1c11      	ROL  R1
0010d7 cff9      	RJMP __CDF12
                 __CDF13:
0010d8 2fef      	MOV  R30,R31
0010d9 2ff6      	MOV  R31,R22
0010da 2d61      	MOV  R22,R1
0010db 935f      	PUSH R21
0010dc df8a      	RCALL __REPACK
0010dd 915f      	POP  R21
                 __CDF10:
0010de 9508      	RET
                 
                 __SWAPACC:
0010df 934f      	PUSH R20
0010e0 01af      	MOVW R20,R30
0010e1 01fd      	MOVW R30,R26
0010e2 01da      	MOVW R26,R20
0010e3 01ab      	MOVW R20,R22
0010e4 01bc      	MOVW R22,R24
0010e5 01ca      	MOVW R24,R20
0010e6 2d40      	MOV  R20,R0
0010e7 2c01      	MOV  R0,R1
0010e8 2e14      	MOV  R1,R20
0010e9 914f      	POP  R20
0010ea 9508      	RET
                 
                 __UADD12:
0010eb 0fea      	ADD  R30,R26
0010ec 1ffb      	ADC  R31,R27
0010ed 1f68      	ADC  R22,R24
0010ee 9508      	RET
                 
                 __NEGMAN1:
0010ef 95e0      	COM  R30
0010f0 95f0      	COM  R31
0010f1 9560      	COM  R22
0010f2 5fef      	SUBI R30,-1
0010f3 4fff      	SBCI R31,-1
0010f4 4f6f      	SBCI R22,-1
0010f5 9508      	RET
                 
                 __SUBF12:
0010f6 935f      	PUSH R21
0010f7 df81      	RCALL __UNPACK
0010f8 3890      	CPI  R25,0x80
0010f9 f171      	BREQ __ADDF129
0010fa e850      	LDI  R21,0x80
0010fb 2615      	EOR  R1,R21
                 
0010fc c004      	RJMP __ADDF120
                 
                 __ADDF12:
0010fd 935f      	PUSH R21
0010fe df7a      	RCALL __UNPACK
0010ff 3890      	CPI  R25,0x80
001100 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001101 3870      	CPI  R23,0x80
001102 f121      	BREQ __ADDF128
                 __ADDF121:
001103 2f57      	MOV  R21,R23
001104 1b59      	SUB  R21,R25
001105 f12b      	BRVS __ADDF1211
001106 f412      	BRPL __ADDF122
001107 dfd7      	RCALL __SWAPACC
001108 cffa      	RJMP __ADDF121
                 __ADDF122:
001109 3158      	CPI  R21,24
00110a f018      	BRLO __ADDF123
00110b 27aa      	CLR  R26
00110c 27bb      	CLR  R27
00110d 2788      	CLR  R24
                 __ADDF123:
00110e 3058      	CPI  R21,8
00110f f028      	BRLO __ADDF124
001110 2fab      	MOV  R26,R27
001111 2fb8      	MOV  R27,R24
001112 2788      	CLR  R24
001113 5058      	SUBI R21,8
001114 cff9      	RJMP __ADDF123
                 __ADDF124:
001115 2355      	TST  R21
001116 f029      	BREQ __ADDF126
                 __ADDF125:
001117 9586      	LSR  R24
001118 95b7      	ROR  R27
001119 95a7      	ROR  R26
00111a 955a      	DEC  R21
00111b f7d9      	BRNE __ADDF125
                 __ADDF126:
00111c 2d50      	MOV  R21,R0
00111d 2551      	EOR  R21,R1
00111e f072      	BRMI __ADDF127
00111f dfcb      	RCALL __UADD12
001120 f438      	BRCC __ADDF129
001121 9567      	ROR  R22
001122 95f7      	ROR  R31
001123 95e7      	ROR  R30
001124 9573      	INC  R23
001125 f413      	BRVC __ADDF129
001126 c020      	RJMP __MAXRES
                 __ADDF128:
001127 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001128 df3e      	RCALL __REPACK
001129 915f      	POP  R21
00112a 9508      	RET
                 __ADDF1211:
00112b f7d8      	BRCC __ADDF128
00112c cffb      	RJMP __ADDF129
                 __ADDF127:
00112d 1bea      	SUB  R30,R26
00112e 0bfb      	SBC  R31,R27
00112f 0b68      	SBC  R22,R24
001130 f051      	BREQ __ZERORES
001131 f410      	BRCC __ADDF1210
001132 9400      	COM  R0
001133 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001134 2366      	TST  R22
001135 f392      	BRMI __ADDF129
001136 0fee      	LSL  R30
001137 1fff      	ROL  R31
001138 1f66      	ROL  R22
001139 957a      	DEC  R23
00113a f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00113b 27ee      	CLR  R30
00113c 27ff      	CLR  R31
00113d 2766      	CLR  R22
00113e 2777      	CLR  R23
00113f 915f      	POP  R21
001140 9508      	RET
                 
                 __MINRES:
001141 efef      	SER  R30
001142 efff      	SER  R31
001143 e76f      	LDI  R22,0x7F
001144 ef7f      	SER  R23
001145 915f      	POP  R21
001146 9508      	RET
                 
                 __MAXRES:
001147 efef      	SER  R30
001148 efff      	SER  R31
001149 e76f      	LDI  R22,0x7F
00114a e77f      	LDI  R23,0x7F
00114b 915f      	POP  R21
00114c 9508      	RET
                 
                 __MULF12:
00114d 935f      	PUSH R21
00114e df2a      	RCALL __UNPACK
00114f 3870      	CPI  R23,0x80
001150 f351      	BREQ __ZERORES
001151 3890      	CPI  R25,0x80
001152 f341      	BREQ __ZERORES
001153 2401      	EOR  R0,R1
001154 9408      	SEC
001155 1f79      	ADC  R23,R25
001156 f423      	BRVC __MULF124
001157 f31c      	BRLT __ZERORES
                 __MULF125:
001158 2000      	TST  R0
001159 f33a      	BRMI __MINRES
00115a cfec      	RJMP __MAXRES
                 __MULF124:
00115b 920f      	PUSH R0
00115c 931f      	PUSH R17
00115d 932f      	PUSH R18
00115e 933f      	PUSH R19
00115f 934f      	PUSH R20
001160 2711      	CLR  R17
001161 2722      	CLR  R18
001162 2799      	CLR  R25
001163 9f68      	MUL  R22,R24
001164 01a0      	MOVW R20,R0
001165 9f8f      	MUL  R24,R31
001166 2d30      	MOV  R19,R0
001167 0d41      	ADD  R20,R1
001168 1f59      	ADC  R21,R25
001169 9f6b      	MUL  R22,R27
00116a 0d30      	ADD  R19,R0
00116b 1d41      	ADC  R20,R1
00116c 1f59      	ADC  R21,R25
00116d 9f8e      	MUL  R24,R30
00116e d027      	RCALL __MULF126
00116f 9fbf      	MUL  R27,R31
001170 d025      	RCALL __MULF126
001171 9f6a      	MUL  R22,R26
001172 d023      	RCALL __MULF126
001173 9fbe      	MUL  R27,R30
001174 d01d      	RCALL __MULF127
001175 9faf      	MUL  R26,R31
001176 d01b      	RCALL __MULF127
001177 9fae      	MUL  R26,R30
001178 0d11      	ADD  R17,R1
001179 1f29      	ADC  R18,R25
00117a 1f39      	ADC  R19,R25
00117b 1f49      	ADC  R20,R25
00117c 1f59      	ADC  R21,R25
00117d 2fe3      	MOV  R30,R19
00117e 2ff4      	MOV  R31,R20
00117f 2f65      	MOV  R22,R21
001180 2f52      	MOV  R21,R18
001181 914f      	POP  R20
001182 913f      	POP  R19
001183 912f      	POP  R18
001184 911f      	POP  R17
001185 900f      	POP  R0
001186 2366      	TST  R22
001187 f02a      	BRMI __MULF122
001188 0f55      	LSL  R21
001189 1fee      	ROL  R30
00118a 1fff      	ROL  R31
00118b 1f66      	ROL  R22
00118c c002      	RJMP __MULF123
                 __MULF122:
00118d 9573      	INC  R23
00118e f24b      	BRVS __MULF125
                 __MULF123:
00118f decd      	RCALL __ROUND_REPACK
001190 915f      	POP  R21
001191 9508      	RET
                 
                 __MULF127:
001192 0d10      	ADD  R17,R0
001193 1d21      	ADC  R18,R1
001194 1f39      	ADC  R19,R25
001195 c002      	RJMP __MULF128
                 __MULF126:
001196 0d20      	ADD  R18,R0
001197 1d31      	ADC  R19,R1
                 __MULF128:
001198 1f49      	ADC  R20,R25
001199 1f59      	ADC  R21,R25
00119a 9508      	RET
                 
                 __DIVF21:
00119b 935f      	PUSH R21
00119c dedc      	RCALL __UNPACK
00119d 3870      	CPI  R23,0x80
00119e f421      	BRNE __DIVF210
00119f 2011      	TST  R1
                 __DIVF211:
0011a0 f40a      	BRPL __DIVF219
0011a1 cf9f      	RJMP __MINRES
                 __DIVF219:
0011a2 cfa4      	RJMP __MAXRES
                 __DIVF210:
0011a3 3890      	CPI  R25,0x80
0011a4 f409      	BRNE __DIVF218
                 __DIVF217:
0011a5 cf95      	RJMP __ZERORES
                 __DIVF218:
0011a6 2401      	EOR  R0,R1
0011a7 9408      	SEC
0011a8 0b97      	SBC  R25,R23
0011a9 f41b      	BRVC __DIVF216
0011aa f3d4      	BRLT __DIVF217
0011ab 2000      	TST  R0
0011ac cff3      	RJMP __DIVF211
                 __DIVF216:
0011ad 2f79      	MOV  R23,R25
0011ae 931f      	PUSH R17
0011af 932f      	PUSH R18
0011b0 933f      	PUSH R19
0011b1 934f      	PUSH R20
0011b2 2411      	CLR  R1
0011b3 2711      	CLR  R17
0011b4 2722      	CLR  R18
0011b5 2733      	CLR  R19
0011b6 2744      	CLR  R20
0011b7 2755      	CLR  R21
0011b8 e290      	LDI  R25,32
                 __DIVF212:
0011b9 17ae      	CP   R26,R30
0011ba 07bf      	CPC  R27,R31
0011bb 0786      	CPC  R24,R22
0011bc 0741      	CPC  R20,R17
0011bd f030      	BRLO __DIVF213
0011be 1bae      	SUB  R26,R30
0011bf 0bbf      	SBC  R27,R31
0011c0 0b86      	SBC  R24,R22
0011c1 0b41      	SBC  R20,R17
0011c2 9408      	SEC
0011c3 c001      	RJMP __DIVF214
                 __DIVF213:
0011c4 9488      	CLC
                 __DIVF214:
0011c5 1f55      	ROL  R21
0011c6 1f22      	ROL  R18
0011c7 1f33      	ROL  R19
0011c8 1c11      	ROL  R1
0011c9 1faa      	ROL  R26
0011ca 1fbb      	ROL  R27
0011cb 1f88      	ROL  R24
0011cc 1f44      	ROL  R20
0011cd 959a      	DEC  R25
0011ce f751      	BRNE __DIVF212
0011cf 01f9      	MOVW R30,R18
0011d0 2d61      	MOV  R22,R1
0011d1 914f      	POP  R20
0011d2 913f      	POP  R19
0011d3 912f      	POP  R18
0011d4 911f      	POP  R17
0011d5 2366      	TST  R22
0011d6 f032      	BRMI __DIVF215
0011d7 0f55      	LSL  R21
0011d8 1fee      	ROL  R30
0011d9 1fff      	ROL  R31
0011da 1f66      	ROL  R22
0011db 957a      	DEC  R23
0011dc f243      	BRVS __DIVF217
                 __DIVF215:
0011dd de7f      	RCALL __ROUND_REPACK
0011de 915f      	POP  R21
0011df 9508      	RET
                 
                 __CMPF12:
0011e0 2399      	TST  R25
0011e1 f09a      	BRMI __CMPF120
0011e2 2377      	TST  R23
0011e3 f042      	BRMI __CMPF121
0011e4 1797      	CP   R25,R23
0011e5 f048      	BRLO __CMPF122
0011e6 f429      	BRNE __CMPF121
0011e7 17ae      	CP   R26,R30
0011e8 07bf      	CPC  R27,R31
0011e9 0786      	CPC  R24,R22
0011ea f020      	BRLO __CMPF122
0011eb f031      	BREQ __CMPF123
                 __CMPF121:
0011ec 9498      	CLZ
0011ed 9488      	CLC
0011ee 9508      	RET
                 __CMPF122:
0011ef 9498      	CLZ
0011f0 9408      	SEC
0011f1 9508      	RET
                 __CMPF123:
0011f2 9418      	SEZ
0011f3 9488      	CLC
0011f4 9508      	RET
                 __CMPF120:
0011f5 2377      	TST  R23
0011f6 f7c2      	BRPL __CMPF122
0011f7 1797      	CP   R25,R23
0011f8 f398      	BRLO __CMPF121
0011f9 f7a9      	BRNE __CMPF122
0011fa 17ea      	CP   R30,R26
0011fb 07fb      	CPC  R31,R27
0011fc 0768      	CPC  R22,R24
0011fd f388      	BRLO __CMPF122
0011fe f399      	BREQ __CMPF123
0011ff cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
001200 2400      	CLR  R0
001201 0daf      	ADD  R26,R15
001202 1db0      	ADC  R27,R0
001203 9508      	RET
                 
                 __ADDD12:
001204 0fea      	ADD  R30,R26
001205 1ffb      	ADC  R31,R27
001206 1f68      	ADC  R22,R24
001207 1f79      	ADC  R23,R25
001208 9508      	RET
                 
                 __ANEGW1:
001209 95f1      	NEG  R31
00120a 95e1      	NEG  R30
00120b 40f0      	SBCI R31,0
00120c 9508      	RET
                 
                 __ANEGD1:
00120d 95f0      	COM  R31
00120e 9560      	COM  R22
00120f 9570      	COM  R23
001210 95e1      	NEG  R30
001211 4fff      	SBCI R31,-1
001212 4f6f      	SBCI R22,-1
001213 4f7f      	SBCI R23,-1
001214 9508      	RET
                 
                 __ASRW8:
001215 2fef      	MOV  R30,R31
001216 27ff      	CLR  R31
001217 fde7      	SBRC R30,7
001218 efff      	SER  R31
001219 9508      	RET
                 
                 __CBD1:
00121a 2ffe      	MOV  R31,R30
00121b 0fff      	ADD  R31,R31
00121c 0bff      	SBC  R31,R31
00121d 2f6f      	MOV  R22,R31
00121e 2f7f      	MOV  R23,R31
00121f 9508      	RET
                 
                 __CWD1:
001220 2f6f      	MOV  R22,R31
001221 0f66      	ADD  R22,R22
001222 0b66      	SBC  R22,R22
001223 2f76      	MOV  R23,R22
001224 9508      	RET
                 
                 __CWD2:
001225 2f8b      	MOV  R24,R27
001226 0f88      	ADD  R24,R24
001227 0b88      	SBC  R24,R24
001228 2f98      	MOV  R25,R24
001229 9508      	RET
                 
                 __MULD12U:
00122a 9f7a      	MUL  R23,R26
00122b 2d70      	MOV  R23,R0
00122c 9f6b      	MUL  R22,R27
00122d 0d70      	ADD  R23,R0
00122e 9ff8      	MUL  R31,R24
00122f 0d70      	ADD  R23,R0
001230 9fe9      	MUL  R30,R25
001231 0d70      	ADD  R23,R0
001232 9f6a      	MUL  R22,R26
001233 2d60      	MOV  R22,R0
001234 0d71      	ADD  R23,R1
001235 9ffb      	MUL  R31,R27
001236 0d60      	ADD  R22,R0
001237 1d71      	ADC  R23,R1
001238 9fe8      	MUL  R30,R24
001239 0d60      	ADD  R22,R0
00123a 1d71      	ADC  R23,R1
00123b 2788      	CLR  R24
00123c 9ffa      	MUL  R31,R26
00123d 2df0      	MOV  R31,R0
00123e 0d61      	ADD  R22,R1
00123f 1f78      	ADC  R23,R24
001240 9feb      	MUL  R30,R27
001241 0df0      	ADD  R31,R0
001242 1d61      	ADC  R22,R1
001243 1f78      	ADC  R23,R24
001244 9fea      	MUL  R30,R26
001245 2de0      	MOV  R30,R0
001246 0df1      	ADD  R31,R1
001247 1f68      	ADC  R22,R24
001248 1f78      	ADC  R23,R24
001249 9508      	RET
                 
                 __MULB1W2U:
00124a 2f6e      	MOV  R22,R30
00124b 9f6a      	MUL  R22,R26
00124c 01f0      	MOVW R30,R0
00124d 9f6b      	MUL  R22,R27
00124e 0df0      	ADD  R31,R0
00124f 9508      	RET
                 
                 __MULD12:
001250 d058      	RCALL __CHKSIGND
001251 dfd8      	RCALL __MULD12U
001252 f40e      	BRTC __MULD121
001253 dfb9      	RCALL __ANEGD1
                 __MULD121:
001254 9508      	RET
                 
                 __DIVB21U:
001255 2400      	CLR  R0
001256 e098      	LDI  R25,8
                 __DIVB21U1:
001257 0faa      	LSL  R26
001258 1c00      	ROL  R0
001259 1a0e      	SUB  R0,R30
00125a f410      	BRCC __DIVB21U2
00125b 0e0e      	ADD  R0,R30
00125c c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00125d 60a1      	SBR  R26,1
                 __DIVB21U3:
00125e 959a      	DEC  R25
00125f f7b9      	BRNE __DIVB21U1
001260 2fea      	MOV  R30,R26
001261 2da0      	MOV  R26,R0
001262 9508      	RET
                 
                 __DIVB21:
001263 d039      	RCALL __CHKSIGNB
001264 dff0      	RCALL __DIVB21U
001265 f40e      	BRTC __DIVB211
001266 95e1      	NEG  R30
                 __DIVB211:
001267 9508      	RET
                 
                 __DIVD21U:
001268 933f      	PUSH R19
001269 934f      	PUSH R20
00126a 935f      	PUSH R21
00126b 2400      	CLR  R0
00126c 2411      	CLR  R1
00126d 2744      	CLR  R20
00126e 2755      	CLR  R21
00126f e230      	LDI  R19,32
                 __DIVD21U1:
001270 0faa      	LSL  R26
001271 1fbb      	ROL  R27
001272 1f88      	ROL  R24
001273 1f99      	ROL  R25
001274 1c00      	ROL  R0
001275 1c11      	ROL  R1
001276 1f44      	ROL  R20
001277 1f55      	ROL  R21
001278 1a0e      	SUB  R0,R30
001279 0a1f      	SBC  R1,R31
00127a 0b46      	SBC  R20,R22
00127b 0b57      	SBC  R21,R23
00127c f428      	BRCC __DIVD21U2
00127d 0e0e      	ADD  R0,R30
00127e 1e1f      	ADC  R1,R31
00127f 1f46      	ADC  R20,R22
001280 1f57      	ADC  R21,R23
001281 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001282 60a1      	SBR  R26,1
                 __DIVD21U3:
001283 953a      	DEC  R19
001284 f759      	BRNE __DIVD21U1
001285 01fd      	MOVW R30,R26
001286 01bc      	MOVW R22,R24
001287 01d0      	MOVW R26,R0
001288 01ca      	MOVW R24,R20
001289 915f      	POP  R21
00128a 914f      	POP  R20
00128b 913f      	POP  R19
00128c 9508      	RET
                 
                 __MODB21:
00128d 94e8      	CLT
00128e ffa7      	SBRS R26,7
00128f c002      	RJMP __MODB211
001290 95a1      	NEG  R26
001291 9468      	SET
                 __MODB211:
001292 fde7      	SBRC R30,7
001293 95e1      	NEG  R30
001294 dfc0      	RCALL __DIVB21U
001295 2fea      	MOV  R30,R26
001296 f40e      	BRTC __MODB212
001297 95e1      	NEG  R30
                 __MODB212:
001298 9508      	RET
                 
                 __MODD21U:
001299 dfce      	RCALL __DIVD21U
00129a 01fd      	MOVW R30,R26
00129b 01bc      	MOVW R22,R24
00129c 9508      	RET
                 
                 __CHKSIGNB:
00129d 94e8      	CLT
00129e ffe7      	SBRS R30,7
00129f c002      	RJMP __CHKSB1
0012a0 95e1      	NEG  R30
0012a1 9468      	SET
                 __CHKSB1:
0012a2 ffa7      	SBRS R26,7
0012a3 c004      	RJMP __CHKSB2
0012a4 95a1      	NEG  R26
0012a5 f800      	BLD  R0,0
0012a6 9403      	INC  R0
0012a7 fa00      	BST  R0,0
                 __CHKSB2:
0012a8 9508      	RET
                 
                 __CHKSIGND:
0012a9 94e8      	CLT
0012aa ff77      	SBRS R23,7
0012ab c002      	RJMP __CHKSD1
0012ac df60      	RCALL __ANEGD1
0012ad 9468      	SET
                 __CHKSD1:
0012ae ff97      	SBRS R25,7
0012af c00b      	RJMP __CHKSD2
0012b0 2400      	CLR  R0
0012b1 95a0      	COM  R26
0012b2 95b0      	COM  R27
0012b3 9580      	COM  R24
0012b4 9590      	COM  R25
0012b5 9611      	ADIW R26,1
0012b6 1d80      	ADC  R24,R0
0012b7 1d90      	ADC  R25,R0
0012b8 f800      	BLD  R0,0
0012b9 9403      	INC  R0
0012ba fa00      	BST  R0,0
                 __CHKSD2:
0012bb 9508      	RET
                 
                 __GETW1P:
0012bc 91ed      	LD   R30,X+
0012bd 91fc      	LD   R31,X
0012be 9711      	SBIW R26,1
0012bf 9508      	RET
                 
                 __GETD1P:
0012c0 91ed      	LD   R30,X+
0012c1 91fd      	LD   R31,X+
0012c2 916d      	LD   R22,X+
0012c3 917c      	LD   R23,X
0012c4 9713      	SBIW R26,3
0012c5 9508      	RET
                 
                 __GETD1P_INC:
0012c6 91ed      	LD   R30,X+
0012c7 91fd      	LD   R31,X+
0012c8 916d      	LD   R22,X+
0012c9 917d      	LD   R23,X+
0012ca 9508      	RET
                 
                 __PUTDP1:
0012cb 93ed      	ST   X+,R30
0012cc 93fd      	ST   X+,R31
0012cd 936d      	ST   X+,R22
0012ce 937c      	ST   X,R23
0012cf 9508      	RET
                 
                 __PUTDP1_DEC:
0012d0 937e      	ST   -X,R23
0012d1 936e      	ST   -X,R22
0012d2 93fe      	ST   -X,R31
0012d3 93ee      	ST   -X,R30
0012d4 9508      	RET
                 
                 __GETD1S0:
0012d5 81e8      	LD   R30,Y
0012d6 81f9      	LDD  R31,Y+1
0012d7 816a      	LDD  R22,Y+2
0012d8 817b      	LDD  R23,Y+3
0012d9 9508      	RET
                 
                 __GETD2S0:
0012da 81a8      	LD   R26,Y
0012db 81b9      	LDD  R27,Y+1
0012dc 818a      	LDD  R24,Y+2
0012dd 819b      	LDD  R25,Y+3
0012de 9508      	RET
                 
                 __PUTD1S0:
0012df 83e8      	ST   Y,R30
0012e0 83f9      	STD  Y+1,R31
0012e1 836a      	STD  Y+2,R22
0012e2 837b      	STD  Y+3,R23
0012e3 9508      	RET
                 
                 __PUTPARD1:
0012e4 937a      	ST   -Y,R23
0012e5 936a      	ST   -Y,R22
0012e6 93fa      	ST   -Y,R31
0012e7 93ea      	ST   -Y,R30
0012e8 9508      	RET
                 
                 __CDF2U:
0012e9 9468      	SET
0012ea c001      	RJMP __CDF2U0
                 __CDF2:
0012eb 94e8      	CLT
                 __CDF2U0:
0012ec d001      	RCALL __SWAPD12
0012ed ddd6      	RCALL __CDF1U0
                 
                 __SWAPD12:
0012ee 2e18      	MOV  R1,R24
0012ef 2f86      	MOV  R24,R22
0012f0 2d61      	MOV  R22,R1
0012f1 2e19      	MOV  R1,R25
0012f2 2f97      	MOV  R25,R23
0012f3 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0012f4 2e1b      	MOV  R1,R27
0012f5 2fbf      	MOV  R27,R31
0012f6 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0012f7 2e1a      	MOV  R1,R26
0012f8 2fae      	MOV  R26,R30
0012f9 2de1      	MOV  R30,R1
0012fa 9508      	RET
                 
                 __CPD10:
0012fb 9730      	SBIW R30,0
0012fc 4060      	SBCI R22,0
0012fd 4070      	SBCI R23,0
0012fe 9508      	RET
                 
                 __CPW02:
0012ff 2400      	CLR  R0
001300 160a      	CP   R0,R26
001301 060b      	CPC  R0,R27
001302 9508      	RET
                 
                 __SAVELOCR6:
001303 935a      	ST   -Y,R21
                 __SAVELOCR5:
001304 934a      	ST   -Y,R20
                 __SAVELOCR4:
001305 933a      	ST   -Y,R19
                 __SAVELOCR3:
001306 932a      	ST   -Y,R18
                 __SAVELOCR2:
001307 931a      	ST   -Y,R17
001308 930a      	ST   -Y,R16
001309 9508      	RET
                 
                 __LOADLOCR6:
00130a 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00130b 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00130c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00130d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00130e 8119      	LDD  R17,Y+1
00130f 8108      	LD   R16,Y
001310 9508      	RET
                 
                 __INITLOCW:
001311 0fac      	ADD  R26,R28
001312 1fbd      	ADC  R27,R29
                 __INITLOC0:
001313 9005      	LPM  R0,Z+
001314 920d      	ST   X+,R0
001315 9701      	SBIW R24,1
001316 f7e1      	BRNE __INITLOC0
001317 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 128 r1 :  56 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  73 r17:  92 r18:  68 r19:  72 r20:  59 r21: 105 r22: 203 r23: 183 
r24: 119 r25:  96 r26: 368 r27: 186 r28: 108 r29:   3 r30: 897 r31: 368 
x  : 209 y  : 633 z  :  70 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  37 add   :  30 
adiw  :  54 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  74 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  78 brpl  :   9 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   4 call  : 396 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  65 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  21 cpc   :  25 cpi   : 133 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  12 inc   :   4 jmp   :  52 ld    : 165 ldd   : 289 
ldi   : 466 lds   :  32 lpm   :  17 lsl   :  14 lsr   :   4 mov   : 108 
movw  : 158 mul   :  24 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  34 pop   :  51 push  :  51 rcall :  88 
ret   : 149 reti  :   6 rjmp  : 204 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  99 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  51 sbr   :   4 
sbrc  :   5 sbrs  :  22 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 299 std   : 144 sts   :  35 sub   :   6 subi  : 120 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002630   8952    824   9776  131072   7.5%
[.dseg] 0x000100 0x00058e      0    142    142    4351   3.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
