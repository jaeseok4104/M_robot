
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Mon Feb 10 19:32:17 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _CHECK_GETS=R8
                 	.DEF _CHECK_CONTROL=R11
                 	.DEF _TIMER1_OVERFLOW=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0186 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 037e 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 038a 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0384 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 033d 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0358 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x48:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000      	.DB  0x0,0x0
                 _0x62:
000163 0000
000164 0000
000165 0000
000166 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000167 0000      	.DB  0x0,0x0
                 _0x0:
000168 253c
000169 2c64
00016a 6425
00016b 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00016c 3e64
00016d 2500
00016e 2c66
00016f 2520      	.DB  0x64,0x3E,0x0,0x25,0x66,0x2C,0x20,0x25
000170 2c66
000171 2520
000172 2c66
000173 2520      	.DB  0x66,0x2C,0x20,0x25,0x66,0x2C,0x20,0x25
000174 0a66
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1192): warning: .cseg .db misalignment - padding zero byte
000175 0000      	.DB  0x66,0xA,0x0
                 _0x2000000:
000176 4e2d
000177 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1194): warning: .cseg .db misalignment - padding zero byte
000178 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1196): warning: .cseg .db misalignment - padding zero byte
000179 0001      	.DB  0x1
                 _0x2080000:
00017a 4e2d
00017b 4e41
00017c 4900
00017d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1199): warning: .cseg .db misalignment - padding zero byte
00017e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00017f 000a      	.DW  0x0A
000180 0004      	.DW  0x04
000181 02c6      	.DW  _0x62*2
                 
000182 0001      	.DW  0x01
000183 0578      	.DW  __seed_G104
000184 02f2      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000185 0000      	.DW  0
                 
                 __RESET:
000186 94f8      	CLI
000187 27ee      	CLR  R30
000188 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000189 e0f1      	LDI  R31,1
00018a bff5      	OUT  MCUCR,R31
00018b bfe5      	OUT  MCUCR,R30
00018c 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00018e e1f8      	LDI  R31,0x18
00018f bdf1      	OUT  WDTCR,R31
000190 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000191 e08d      	LDI  R24,(14-2)+1
000192 e0a2      	LDI  R26,2
000193 27bb      	CLR  R27
                 __CLEAR_REG:
000194 93ed      	ST   X+,R30
000195 958a      	DEC  R24
000196 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000197 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000198 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000199 e0a0      	LDI  R26,LOW(__SRAM_START)
00019a e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019b 93ed      	ST   X+,R30
00019c 9701      	SBIW R24,1
00019d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019e efee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00019f e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a0 9185      	LPM  R24,Z+
0001a1 9195      	LPM  R25,Z+
0001a2 9700      	SBIW R24,0
0001a3 f061      	BREQ __GLOBAL_INI_END
0001a4 91a5      	LPM  R26,Z+
0001a5 91b5      	LPM  R27,Z+
0001a6 9005      	LPM  R0,Z+
0001a7 9015      	LPM  R1,Z+
0001a8 01bf      	MOVW R22,R30
0001a9 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001aa 9005      	LPM  R0,Z+
0001ab 920d      	ST   X+,R0
0001ac 9701      	SBIW R24,1
0001ad f7e1      	BRNE __GLOBAL_INI_LOOP
0001ae 01fb      	MOVW R30,R22
0001af cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b0 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b1 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b2 bfed      	OUT  SPL,R30
0001b3 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b4 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b5 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b6 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b7 940c 0397 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 25
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.281
                 ;#define Gearratio 20
                 ;
                 ;#define Circular 57.29                      // 180 / PI
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned char CHECK_CONTROL = 0;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0025 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0026     UCSR1A = 0x00;
                 ;	bps -> Y+0
0001b9 e0e0      	LDI  R30,LOW(0)
0001ba 93e0 009b 	STS  155,R30
                 ; 0000 0027     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0001bc e9e8      	LDI  R30,LOW(152)
0001bd 93e0 009a 	STS  154,R30
                 ; 0000 0028     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0001bf e0e6      	LDI  R30,LOW(6)
0001c0 93e0 009d 	STS  157,R30
                 ; 0000 0029     UCSR1C &= ~(1<<UMSEL1);
0001c2 91e0 009d 	LDS  R30,157
0001c4 7bef      	ANDI R30,0xBF
0001c5 93e0 009d 	STS  157,R30
                 ; 0000 002A 
                 ; 0000 002B     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0001c7 81e8      	LD   R30,Y
0001c8 81f9      	LDD  R31,Y+1
0001c9 940e 10c0 	CALL __ASRW8
0001cb 93e0 0098 	STS  152,R30
                 ; 0000 002C     UBRR1L = (unsigned char)(bps & 0x00ff);
0001cd 81e8      	LD   R30,Y
0001ce 93e0 0099 	STS  153,R30
                 ; 0000 002D }
0001d0 c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 0030 {
                 _usart0_init:
                 ; 0000 0031     UCSR0A = 0x00;
                 ;	bps -> Y+0
0001d1 e0e0      	LDI  R30,LOW(0)
0001d2 b9eb      	OUT  0xB,R30
                 ; 0000 0032     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0001d3 e9e8      	LDI  R30,LOW(152)
0001d4 b9ea      	OUT  0xA,R30
                 ; 0000 0033     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0001d5 e0e6      	LDI  R30,LOW(6)
0001d6 93e0 0095 	STS  149,R30
                 ; 0000 0034     UCSR0C &= ~(1<<UMSEL0);
0001d8 91e0 0095 	LDS  R30,149
0001da 7bef      	ANDI R30,0xBF
0001db 93e0 0095 	STS  149,R30
                 ; 0000 0035 
                 ; 0000 0036     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0001dd 81e8      	LD   R30,Y
0001de 81f9      	LDD  R31,Y+1
0001df 940e 10c0 	CALL __ASRW8
0001e1 93e0 0090 	STS  144,R30
                 ; 0000 0037     UBRR0L = (unsigned char)(bps & 0x00ff);
0001e3 81e8      	LD   R30,Y
0001e4 b9e9      	OUT  0x9,R30
                 ; 0000 0038 }
                 _0x20A000F:
0001e5 9622      	ADIW R28,2
0001e6 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 003B {
                 _timer2_init:
                 ; 0000 003C     //TIMER2
                 ; 0000 003D     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0001e7 e0ed      	LDI  R30,LOW(13)
0001e8 bde5      	OUT  0x25,R30
                 ; 0000 003E 
                 ; 0000 003F     OCR2 = 40;
0001e9 e2e8      	LDI  R30,LOW(40)
0001ea bde3      	OUT  0x23,R30
                 ; 0000 0040     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0001eb e8e2      	LDI  R30,LOW(130)
0001ec c010      	RJMP _0x20A000E
                 ; 0000 0041     //TIMSK = (1<<OCIE2);
                 ; 0000 0042 }
                 ;void timer0_init(void)
                 ; 0000 0044 {
                 _timer0_init:
                 ; 0000 0045     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0001ed e0e7      	LDI  R30,LOW(7)
0001ee bfe3      	OUT  0x33,R30
                 ; 0000 0046     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0001ef e8e1      	LDI  R30,LOW(129)
0001f0 c00c      	RJMP _0x20A000E
                 ; 0000 0047 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 004A {
                 _timer1_init:
                 ; 0000 004B     // TCCR1A = (1<<COM1B0);
                 ; 0000 004C     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0001f1 e1ed      	LDI  R30,LOW(29)
0001f2 bdee      	OUT  0x2E,R30
                 ; 0000 004D 
                 ; 0000 004E     OCR1B = 255;
0001f3 efef      	LDI  R30,LOW(255)
0001f4 e0f0      	LDI  R31,HIGH(255)
0001f5 bdf9      	OUT  0x28+1,R31
0001f6 bde8      	OUT  0x28,R30
                 ; 0000 004F     ICR1 = 1200;
0001f7 ebe0      	LDI  R30,LOW(1200)
0001f8 e0f4      	LDI  R31,HIGH(1200)
0001f9 bdf7      	OUT  0x26+1,R31
0001fa bde6      	OUT  0x26,R30
                 ; 0000 0050     TIMSK |= (1<<OCIE1B);
0001fb b7e7      	IN   R30,0x37
0001fc 60e8      	ORI  R30,8
                 _0x20A000E:
0001fd bfe7      	OUT  0x37,R30
                 ; 0000 0051 }
0001fe 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0000 0054 {
                 _putch_USART1:
                 ; 0000 0055     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
0001ff 91e0 009b 	LDS  R30,155
000201 72e0      	ANDI R30,LOW(0x20)
000202 f3e1      	BREQ _0x3
                 ; 0000 0056     UDR1 = data;
000203 81e8      	LD   R30,Y
000204 93e0 009c 	STS  156,R30
                 ; 0000 0057 }
000206 c023      	RJMP _0x20A000D
                 ;
                 ;//USART 문자열 송신
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     for(i = 0;i<IDX;i++)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 006A {
                 _puts_USART1:
                 ; 0000 006B     unsigned char i = 0;
                 ; 0000 006C     unsigned char x = 0;
                 ; 0000 006D     for(i = 0; str[i] ;i++){
000207 931a      	ST   -Y,R17
000208 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000209 e010      	LDI  R17,0
00020a e000      	LDI  R16,0
00020b e010      	LDI  R17,LOW(0)
                 _0x7:
00020c 940e 0cb7 	CALL SUBOPT_0x0
00020e 30e0      	CPI  R30,0
00020f f031      	BREQ _0x8
                 ; 0000 006E         putch_USART1(str[i]);
000210 940e 0cb7 	CALL SUBOPT_0x0
000212 93ea      	ST   -Y,R30
000213 dfeb      	RCALL _putch_USART1
                 ; 0000 006F     }
000214 5f1f      	SUBI R17,-1
000215 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 0070     for(x = 0; x<i; x++){
000216 e000      	LDI  R16,LOW(0)
                 _0xA:
000217 1701      	CP   R16,R17
000218 f450      	BRSH _0xB
                 ; 0000 0071         *(str++) = 0;
000219 81aa      	LDD  R26,Y+2
00021a 81bb      	LDD  R27,Y+2+1
00021b 9611      	ADIW R26,1
00021c 83aa      	STD  Y+2,R26
00021d 83bb      	STD  Y+2+1,R27
00021e 9711      	SBIW R26,1
00021f e0e0      	LDI  R30,LOW(0)
000220 93ec      	ST   X,R30
                 ; 0000 0072     }
000221 5f0f      	SUBI R16,-1
000222 cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0073 }
000223 8119      	LDD  R17,Y+1
000224 8108      	LDD  R16,Y+0
000225 c0ea      	RJMP _0x20A000B
                 ;
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     while(*str != 0)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//         i++;
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0086 {
                 ; 0000 0087     unsigned char i = 0;
                 ; 0000 0088     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 0089     if(TIMER2_OVERFLOW>0)
                 ; 0000 008A     {
                 ; 0000 008B         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 008C for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 008D }
                 ; 0000 008E     UCSR0B |= (1<<RXEN0);
                 ; 0000 008F }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0092 {
                 _putch_USART0:
                 ; 0000 0093     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000226 9b5d      	SBIS 0xB,5
000227 cffe      	RJMP _0x13
                 ; 0000 0094     UDR0 = data;
000228 81e8      	LD   R30,Y
000229 b9ec      	OUT  0xC,R30
                 ; 0000 0095 }
                 _0x20A000D:
00022a 9621      	ADIW R28,1
00022b 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 0098 {
                 ; 0000 0099     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 009A     unsigned char i = 0;
                 ; 0000 009B     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009C     {
                 ; 0000 009D         putch_USART1(*(str+i));
                 ; 0000 009E     }
                 ; 0000 009F 
                 ; 0000 00A0     for(i = 0; i<IDX; i++)
                 ; 0000 00A1     {
                 ; 0000 00A2         *(str+i) = 0;
                 ; 0000 00A3     }
                 ; 0000 00A4 }
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00A7 {
                 _CRC16:
                 ; 0000 00A8     int i;
                 ; 0000 00A9     unsigned short crc, flag;
                 ; 0000 00AA     crc = 0xffff;
00022c 940e 1172 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00022e ef2f     +LDI R18 , LOW ( - 1 )
00022f ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00AB 
                 ; 0000 00AC     while(usDataLen--){
                 _0x1C:
000230 81ee      	LDD  R30,Y+6
000231 81ff      	LDD  R31,Y+6+1
000232 9731      	SBIW R30,1
000233 83ee      	STD  Y+6,R30
000234 83ff      	STD  Y+6+1,R31
000235 9631      	ADIW R30,1
000236 f0f9      	BREQ _0x1E
                 ; 0000 00AD         crc ^= *puchMsg++;
000237 85a8      	LDD  R26,Y+8
000238 85b9      	LDD  R27,Y+8+1
000239 91ed      	LD   R30,X+
00023a 87a8      	STD  Y+8,R26
00023b 87b9      	STD  Y+8+1,R27
00023c e0f0      	LDI  R31,0
                +
00023d 272e     +EOR R18 , R30
00023e 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00AE 
                 ; 0000 00AF         for (i=0; i<8; i++){
                +
00023f e000     +LDI R16 , LOW ( 0 )
000240 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
000241 3008     +CPI R16 , LOW ( 8 )
000242 e0e0     +LDI R30 , HIGH ( 8 )
000243 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000244 f484      	BRGE _0x21
                 ; 0000 00B0             flag = crc & 0x0001;
000245 01f9      	MOVW R30,R18
000246 70e1      	ANDI R30,LOW(0x1)
000247 70f0      	ANDI R31,HIGH(0x1)
000248 01af      	MOVW R20,R30
                 ; 0000 00B1             crc >>= 1;
000249 9536      	LSR  R19
00024a 9527      	ROR  R18
                 ; 0000 00B2             if(flag) crc ^= POLYNORMIAL;
00024b 2e04      	MOV  R0,R20
00024c 2a05      	OR   R0,R21
00024d f021      	BREQ _0x22
00024e e0e1      	LDI  R30,LOW(40961)
00024f eaf0      	LDI  R31,HIGH(40961)
                +
000250 272e     +EOR R18 , R30
000251 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B3         }
                 _0x22:
                +
000252 5f0f     +SUBI R16 , LOW ( - 1 )
000253 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000254 cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     }
000255 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00B5     return crc;
000256 01f9      	MOVW R30,R18
000257 940e 1179 	CALL __LOADLOCR6
000259 962a      	ADIW R28,10
00025a 9508      	RET
                 ; 0000 00B6 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00B9 {
                 _RTU_WriteOperate0:
                 ; 0000 00BA     char protocol[8];
                 ; 0000 00BB     unsigned short crc16;
                 ; 0000 00BC     int i=0;
                 ; 0000 00BD     //PACKET_BUFF_IDX = 0;
                 ; 0000 00BE 
                 ; 0000 00BF     protocol[0]=device_address;
00025b 940e 0cbe 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00C0     protocol[1]=0x06;
00025d e0e6      	LDI  R30,LOW(6)
00025e 940e 0cc6 	CALL SUBOPT_0x2
                 ; 0000 00C1     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C2     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C3     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C4     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C5     protocol[6]=0;
                 ; 0000 00C6     protocol[7]=0;
                 ; 0000 00C7 
                 ; 0000 00C8     crc16 = CRC16(protocol, 6);
                 ; 0000 00C9 
                 ; 0000 00CA     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00CB     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00CC 
                 ; 0000 00CD 
                 ; 0000 00CE     for(i=0;i<8;i++)
                 _0x24:
                +
000260 3028     +CPI R18 , LOW ( 8 )
000261 e0e0     +LDI R30 , HIGH ( 8 )
000262 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000263 f42c      	BRGE _0x25
                 ; 0000 00CF     {
                 ; 0000 00D0         putch_USART0(*(protocol+i));
000264 940e 0ce9 	CALL SUBOPT_0x3
                 ; 0000 00D1     }
                +
000266 5f2f     +SUBI R18 , LOW ( - 1 )
000267 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000268 cff7      	RJMP _0x24
                 _0x25:
                 ; 0000 00D2 }
000269 c00e      	RJMP _0x20A000C
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00D5 {
                 ; 0000 00D6     char protocol[8];
                 ; 0000 00D7     unsigned short crc16;
                 ; 0000 00D8     int i=0;
                 ; 0000 00D9    // PACKET_BUFF_IDX = 0;
                 ; 0000 00DA 
                 ; 0000 00DB     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00DC     protocol[1]=0x06;
                 ; 0000 00DD     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00DE     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00DF     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00E0     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00E1     protocol[6]=0;
                 ; 0000 00E2     protocol[7]=0;
                 ; 0000 00E3 
                 ; 0000 00E4     crc16 = CRC16(protocol, 6);
                 ; 0000 00E5 
                 ; 0000 00E6     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00E7     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00E8 
                 ; 0000 00E9 
                 ; 0000 00EA     for(i=0;i<8;i++)
                 ; 0000 00EB     {
                 ; 0000 00EC         putch_USART1(*(protocol+i));
                 ; 0000 00ED     }
                 ; 0000 00EE }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00F1 {
                 _RTU_ReedOperate0:
                 ; 0000 00F2     char protocol[8];
                 ; 0000 00F3     unsigned short crc16;
                 ; 0000 00F4     int i=0;
                 ; 0000 00F5     //PACKET_BUFF_IDX = 0;
                 ; 0000 00F6 
                 ; 0000 00F7     protocol[0]=device_address;
00026a 940e 0cbe 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00F8     protocol[1]=0x04;
00026c e0e4      	LDI  R30,LOW(4)
00026d 940e 0cc6 	CALL SUBOPT_0x2
                 ; 0000 00F9     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00FA     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00FB     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00FC     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00FD     protocol[6]=0;
                 ; 0000 00FE     protocol[7]=0;
                 ; 0000 00FF 
                 ; 0000 0100     crc16 = CRC16(protocol, 6);
                 ; 0000 0101 
                 ; 0000 0102     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 0103     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 0104 
                 ; 0000 0105 
                 ; 0000 0106     for(i=0;i<8;i++)
                 _0x2A:
                +
00026f 3028     +CPI R18 , LOW ( 8 )
000270 e0e0     +LDI R30 , HIGH ( 8 )
000271 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000272 f42c      	BRGE _0x2B
                 ; 0000 0107     {
                 ; 0000 0108         putch_USART0(*(protocol+i));
000273 940e 0ce9 	CALL SUBOPT_0x3
                 ; 0000 0109     }
                +
000275 5f2f     +SUBI R18 , LOW ( - 1 )
000276 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000277 cff7      	RJMP _0x2A
                 _0x2B:
                 ; 0000 010A }
                 _0x20A000C:
000278 940e 117b 	CALL __LOADLOCR4
00027a 9661      	ADIW R28,17
00027b 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 010D {
                 _Make_MSPEED:
                 ; 0000 010E     float VelocityR = 0;
                 ; 0000 010F     float VelocityL = 0;
                 ; 0000 0110 
                 ; 0000 0111     if(*_velocity>=0){
00027c 9728      	SBIW R28,8
00027d 940e 0cf1 	CALL SUBOPT_0x4
00027f e0e0      	LDI  R30,LOW(0)
000280 83ea      	STD  Y+2,R30
000281 83eb      	STD  Y+3,R30
000282 83ec      	STD  Y+4,R30
000283 83ed      	STD  Y+5,R30
000284 83ee      	STD  Y+6,R30
000285 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
000286 940e 0cf5 	CALL SUBOPT_0x5
000288 2377      	TST  R23
000289 f042      	BRMI _0x2C
                 ; 0000 0112         *_angularV = -(*_angularV);
00028a 940e 0cfa 	CALL SUBOPT_0x6
00028c 940e 0f07 	CALL __ANEGF1
00028e 85ac      	LDD  R26,Y+12
00028f 85bd      	LDD  R27,Y+12+1
000290 940e 113b 	CALL __PUTDP1
                 ; 0000 0113     }
                 ; 0000 0114 
                 ; 0000 0115     VelocityR = *_velocity+(*_angularV*Length)/4;
                 _0x2C:
000292 940e 0cf5 	CALL SUBOPT_0x5
000294 937f      	PUSH R23
000295 936f      	PUSH R22
000296 93ff      	PUSH R31
000297 93ef      	PUSH R30
000298 940e 0cfa 	CALL SUBOPT_0x6
00029a 940e 0cff 	CALL SUBOPT_0x7
00029c 91af      	POP  R26
00029d 91bf      	POP  R27
00029e 918f      	POP  R24
00029f 919f      	POP  R25
0002a0 940e 0fad 	CALL __ADDF12
0002a2 940e 0d0e 	CALL SUBOPT_0x8
                 ; 0000 0116     VelocityL = *_velocity-(*_angularV*Length)/4;
0002a4 940e 0cf5 	CALL SUBOPT_0x5
0002a6 937f      	PUSH R23
0002a7 936f      	PUSH R22
0002a8 93ff      	PUSH R31
0002a9 93ef      	PUSH R30
0002aa 940e 0cfa 	CALL SUBOPT_0x6
0002ac 940e 0cff 	CALL SUBOPT_0x7
0002ae 91af      	POP  R26
0002af 91bf      	POP  R27
0002b0 918f      	POP  R24
0002b1 919f      	POP  R25
0002b2 940e 0d13 	CALL SUBOPT_0x9
0002b4 940e 114a 	CALL __PUTD1S0
                 ; 0000 0117 
                 ; 0000 0118     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0002b6 940e 0d18 	CALL SUBOPT_0xA
0002b8 940e 0d1d 	CALL SUBOPT_0xB
0002ba 85aa      	LDD  R26,Y+10
0002bb 85bb      	LDD  R27,Y+10+1
0002bc 93ed      	ST   X+,R30
0002bd 93fc      	ST   X,R31
                 ; 0000 0119     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0002be 940e 0d2c 	CALL SUBOPT_0xC
0002c0 940e 0d1d 	CALL SUBOPT_0xB
0002c2 85a8      	LDD  R26,Y+8
0002c3 85b9      	LDD  R27,Y+8+1
0002c4 93ed      	ST   X+,R30
0002c5 93fc      	ST   X,R31
                 ; 0000 011A 
                 ; 0000 011B     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0002c6 85aa      	LDD  R26,Y+10
0002c7 85bb      	LDD  R27,Y+10+1
0002c8 940e 1131 	CALL __GETW1P
0002ca 32ec      	CPI  R30,LOW(0x12C)
0002cb e0a1      	LDI  R26,HIGH(0x12C)
0002cc 07fa      	CPC  R31,R26
0002cd f434      	BRGE _0x2E
0002ce 01df      	MOVW R26,R30
0002cf ede4      	LDI  R30,LOW(65236)
0002d0 effe      	LDI  R31,HIGH(65236)
0002d1 17ea      	CP   R30,R26
0002d2 07fb      	CPC  R31,R27
0002d3 f00c      	BRLT _0x2F
                 _0x2E:
0002d4 c014      	RJMP _0x30
                 _0x2F:
0002d5 85a8      	LDD  R26,Y+8
0002d6 85b9      	LDD  R27,Y+8+1
0002d7 940e 1131 	CALL __GETW1P
0002d9 32ec      	CPI  R30,LOW(0x12C)
0002da e0a1      	LDI  R26,HIGH(0x12C)
0002db 07fa      	CPC  R31,R26
0002dc f454      	BRGE _0x31
0002dd 85a8      	LDD  R26,Y+8
0002de 85b9      	LDD  R27,Y+8+1
0002df 940e 1131 	CALL __GETW1P
0002e1 01df      	MOVW R26,R30
0002e2 ede4      	LDI  R30,LOW(65236)
0002e3 effe      	LDI  R31,HIGH(65236)
0002e4 17ea      	CP   R30,R26
0002e5 07fb      	CPC  R31,R27
0002e6 f00c      	BRLT _0x32
                 _0x31:
0002e7 c001      	RJMP _0x30
                 _0x32:
0002e8 c001      	RJMP _0x33
                 _0x30:
0002e9 c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 011C         *R_RPM = 0;
0002ea 85aa      	LDD  R26,Y+10
0002eb 85bb      	LDD  R27,Y+10+1
0002ec 940e 0d2f 	CALL SUBOPT_0xD
                 ; 0000 011D         *L_RPM = 0;
0002ee 85a8      	LDD  R26,Y+8
0002ef 85b9      	LDD  R27,Y+8+1
0002f0 940e 0d2f 	CALL SUBOPT_0xD
                 ; 0000 011E     }
                 ; 0000 011F }
                 _0x2D:
0002f2 940c 0726 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 0122 {
                 _oper_Disapath:
                 ; 0000 0123     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0002f4 e0e1      	LDI  R30,LOW(1)
0002f5 93ea      	ST   -Y,R30
0002f6 e7e9      	LDI  R30,LOW(121)
0002f7 e0f0      	LDI  R31,HIGH(121)
0002f8 93fa      	ST   -Y,R31
0002f9 93ea      	ST   -Y,R30
0002fa 81ed      	LDD  R30,Y+5
0002fb 81fe      	LDD  R31,Y+5+1
0002fc 940e 0d34 	CALL SUBOPT_0xE
                 ; 0000 0124     delay_ms(5);
                 ; 0000 0125 
                 ; 0000 0126     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0002fe e0e2      	LDI  R30,LOW(2)
0002ff 93ea      	ST   -Y,R30
000300 e7e9      	LDI  R30,LOW(121)
000301 e0f0      	LDI  R31,HIGH(121)
000302 93fa      	ST   -Y,R31
000303 93ea      	ST   -Y,R30
000304 81eb      	LDD  R30,Y+3
000305 81fc      	LDD  R31,Y+3+1
000306 940e 10b4 	CALL __ANEGW1
000308 940e 0d34 	CALL SUBOPT_0xE
                 ; 0000 0127     delay_ms(5);
                 ; 0000 0128 
                 ; 0000 0129     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00030a e0e1      	LDI  R30,LOW(1)
00030b 940e 0d3e 	CALL SUBOPT_0xF
                 ; 0000 012A     delay_ms(5);
                 ; 0000 012B 
                 ; 0000 012C     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
00030d e0e2      	LDI  R30,LOW(2)
00030e 940e 0d3e 	CALL SUBOPT_0xF
                 ; 0000 012D     delay_ms(5);
                 ; 0000 012E }
                 _0x20A000B:
000310 9624      	ADIW R28,4
000311 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 0131 {
                 _get_RPM:
                 ; 0000 0132     unsigned char i = 0;
                 ; 0000 0133     unsigned int RPM = 0;
                 ; 0000 0134 
                 ; 0000 0135     RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
000312 940e 1174 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
000314 e010      	LDI  R17,0
                +
000315 e020     +LDI R18 , LOW ( 0 )
000316 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000317 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
000319 e0a0      	LDI  R26,LOW(0)
                +
00031a 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
00031c 940e 0d46 	CALL SUBOPT_0x10
00031e 019f      	MOVW R18,R30
                 ; 0000 0136     *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
00031f 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
000321 e0a0      	LDI  R26,LOW(0)
                +
000322 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
000324 940e 0d46 	CALL SUBOPT_0x10
000326 81ac      	LDD  R26,Y+4
000327 81bd      	LDD  R27,Y+4+1
000328 93ed      	ST   X+,R30
000329 93fc      	ST   X,R31
                 ; 0000 0137     for(i = 0; i<IDX; i++) *(str+i) = 0;
00032a e010      	LDI  R17,LOW(0)
                 _0x35:
00032b 81ee      	LDD  R30,Y+6
00032c 171e      	CP   R17,R30
00032d f450      	BRSH _0x36
00032e 2fe1      	MOV  R30,R17
00032f e0f0      	LDI  R31,0
000330 81af      	LDD  R26,Y+7
000331 85b8      	LDD  R27,Y+7+1
000332 0fae      	ADD  R26,R30
000333 1fbf      	ADC  R27,R31
000334 e0e0      	LDI  R30,LOW(0)
000335 93ec      	ST   X,R30
000336 5f1f      	SUBI R17,-1
000337 cff3      	RJMP _0x35
                 _0x36:
                 ; 0000 0139 return RPM;
000338 01f9      	MOVW R30,R18
000339 940e 117b 	CALL __LOADLOCR4
00033b 9629      	ADIW R28,9
00033c 9508      	RET
                 ; 0000 013A }
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 013D {
                 _usart0_rxc:
00033d 93aa      	ST   -Y,R26
00033e 93ba      	ST   -Y,R27
00033f 93ea      	ST   -Y,R30
000340 b7ef      	IN   R30,SREG
000341 93ea      	ST   -Y,R30
                 ; 0000 013E     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000342 b5e4      	IN   R30,0x24
000343 31e9      	CPI  R30,LOW(0x19)
000344 f418      	BRSH _0x38
000345 e0e0      	LDI  R30,LOW(0)
000346 15e5      	CP   R30,R5
000347 f019      	BREQ _0x3A
                 _0x38:
000348 e0e0      	LDI  R30,LOW(0)
000349 15e4      	CP   R30,R4
00034a f419      	BRNE _0x37
                 _0x3A:
                 ; 0000 013F     {
                 ; 0000 0140         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034b 940e 0d4a 	CALL SUBOPT_0x11
                 ; 0000 0141         PACKET_BUFF_IDX++;
                 ; 0000 0142         TCNT2 = 0;
                 ; 0000 0143     }
                 ; 0000 0144     else {
00034d c004      	RJMP _0x3C
                 _0x37:
                 ; 0000 0145         PACKET_BUFF_IDX = 0;
00034e 2444      	CLR  R4
                 ; 0000 0146         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034f 940e 0d4a 	CALL SUBOPT_0x11
                 ; 0000 0147         PACKET_BUFF_IDX++;
                 ; 0000 0148         TCNT2 = 0;
                 ; 0000 0149         TIMER2_OVERFLOW = 0;
000351 2455      	CLR  R5
                 ; 0000 014A     }
                 _0x3C:
                 ; 0000 014B }
000352 91e9      	LD   R30,Y+
000353 bfef      	OUT  SREG,R30
000354 91e9      	LD   R30,Y+
000355 91b9      	LD   R27,Y+
000356 91a9      	LD   R26,Y+
000357 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 014E {
                 _usart1_rxc:
000358 940e 0d54 	CALL SUBOPT_0x12
                 ; 0000 014F     unsigned char i = 0;
                 ; 0000 0150     i = UDR1;
00035a 931a      	ST   -Y,R17
                 ;	i -> R17
00035b e010      	LDI  R17,0
00035c 9110 009c 	LDS  R17,156
                 ; 0000 0151     if((i == '<') && (CHECK_GETS == 0)){
00035e 331c      	CPI  R17,60
00035f f419      	BRNE _0x3E
000360 e0e0      	LDI  R30,LOW(0)
000361 15e8      	CP   R30,R8
000362 f009      	BREQ _0x3F
                 _0x3E:
000363 c007      	RJMP _0x3D
                 _0x3F:
                 ; 0000 0152         PORTB.3 = ~PORTB.3;
000364 9bc3      	SBIS 0x18,3
000365 c002      	RJMP _0x40
000366 98c3      	CBI  0x18,3
000367 c001      	RJMP _0x41
                 _0x40:
000368 9ac3      	SBI  0x18,3
                 _0x41:
                 ; 0000 0153         VELOCITY_BUFF_IDX = 0;
000369 2499      	CLR  R9
                 ; 0000 0154         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00036a c00e      	RJMP _0x60
                 ; 0000 0155         VELOCITY_BUFF_IDX++;
                 ; 0000 0156     }
                 ; 0000 0157     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x3D:
00036b 331e      	CPI  R17,62
00036c f419      	BRNE _0x44
00036d e0e0      	LDI  R30,LOW(0)
00036e 15e8      	CP   R30,R8
00036f f009      	BREQ _0x45
                 _0x44:
000370 c006      	RJMP _0x43
                 _0x45:
                 ; 0000 0158         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000371 2de9      	MOV  R30,R9
000372 940e 0d59 	CALL SUBOPT_0x13
                 ; 0000 0159         VELOCITY_BUFF_IDX++;
                 ; 0000 015A         CHECK_GETS = 1;
000374 e0e1      	LDI  R30,LOW(1)
000375 2e8e      	MOV  R8,R30
                 ; 0000 015B     }
                 ; 0000 015C     else if(CHECK_GETS == 0){
000376 c005      	RJMP _0x46
                 _0x43:
000377 2088      	TST  R8
000378 f419      	BRNE _0x47
                 ; 0000 015D         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x60:
000379 2de9      	MOV  R30,R9
00037a 940e 0d59 	CALL SUBOPT_0x13
                 ; 0000 015E         VELOCITY_BUFF_IDX++;
                 ; 0000 015F     }
                 ; 0000 0160 }
                 _0x47:
                 _0x46:
00037c 9119      	LD   R17,Y+
00037d c014      	RJMP _0x61
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 0163 {
                 _timer2_comp:
00037e 93ea      	ST   -Y,R30
00037f b7ef      	IN   R30,SREG
                 ; 0000 0164     TIMER2_OVERFLOW++;
000380 9453      	INC  R5
                 ; 0000 0165 }
000381 bfef      	OUT  SREG,R30
000382 91e9      	LD   R30,Y+
000383 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 0168 {
                 _timer0_ovf:
000384 940e 0d54 	CALL SUBOPT_0x12
                 ; 0000 0169     TIMER0_OVERFLOW++;
000386 01f3      	MOVW R30,R6
000387 9631      	ADIW R30,1
000388 013f      	MOVW R6,R30
                 ; 0000 016A }
000389 c008      	RJMP _0x61
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0000 016E {
                 _timer0_comp:
00038a 940e 0d54 	CALL SUBOPT_0x12
                 ; 0000 016F     TIMER1_OVERFLOW++;
00038c 01f6      	MOVW R30,R12
00038d 9631      	ADIW R30,1
00038e 016f      	MOVW R12,R30
                 ; 0000 0170     TCNT1H = 0x00;
00038f e0e0      	LDI  R30,LOW(0)
000390 bded      	OUT  0x2D,R30
                 ; 0000 0171     TCNT1L = 0x00;
000391 bdec      	OUT  0x2C,R30
                 ; 0000 0172 }
                 _0x61:
000392 91e9      	LD   R30,Y+
000393 bfef      	OUT  SREG,R30
000394 91f9      	LD   R31,Y+
000395 91e9      	LD   R30,Y+
000396 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 0175 {
                 _main:
                 ; 0000 0176     float a_buff;
                 ; 0000 0177     float v_buff;
                 ; 0000 0178 
                 ; 0000 0179     int velocity = 0;
                 ; 0000 017A     int angularV = 0;
                 ; 0000 017B     int velocity_R = 0;
                 ; 0000 017C     int velocity_L = 0;
                 ; 0000 017D     int past_velocity_R = 0;
                 ; 0000 017E     int past_velocity_L = 0;
                 ; 0000 017F     int del_ms = 0;
                 ; 0000 0180 
                 ; 0000 0181     int currentRPM_R = 0;
                 ; 0000 0182     int currentRPM_L = 0;
                 ; 0000 0183     float currentV_R = 0;
                 ; 0000 0184     float currentV_L = 0;
                 ; 0000 0185     int goal_current_R = 0;
                 ; 0000 0186     int goal_current_L = 0;
                 ; 0000 0187 
                 ; 0000 0188     float d_velocity = 0;
                 ; 0000 0189     float d_angularV = 0;
                 ; 0000 018A     float control_time = 0;
                 ; 0000 018B 
                 ; 0000 018C     float d_x = 0;
                 ; 0000 018D     float d_y = 0;
                 ; 0000 018E     float d_angular = 0;
                 ; 0000 018F     int d_angular_circula = 0;
                 ; 0000 0190 
                 ; 0000 0191     float goal_x = 0;
                 ; 0000 0192     float goal_y = 0;
                 ; 0000 0193     float goal_angular = 0;
                 ; 0000 0194 
                 ; 0000 0195     float TIMER1_TIME = 0;
                 ; 0000 0196     float TIMER0_TIME = 0;
                 ; 0000 0197 
                 ; 0000 0198     unsigned char BUFF[500] = {0,};
                 ; 0000 0199 
                 ; 0000 019A     usart1_init(bps_115200);
000397 97ef      	SBIW R28,63
000398 9723      	SBIW R28,3
000399 50d2      	SUBI R29,2
                +
00039a e38a     +LDI R24 , LOW ( 570 )
00039b e092     +LDI R25 , HIGH ( 570 )
                 	__GETWRN 24,25,570
00039c e0a0      	LDI  R26,LOW(0)
00039d e0b0      	LDI  R27,HIGH(0)
00039e e8ec      	LDI  R30,LOW(_0x48*2)
00039f e0f0      	LDI  R31,HIGH(_0x48*2)
0003a0 940e 1180 	CALL __INITLOCW
                 ;	a_buff -> Y+574
                 ;	v_buff -> Y+570
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+568
                 ;	past_velocity_R -> Y+566
                 ;	past_velocity_L -> Y+564
                 ;	del_ms -> Y+562
                 ;	currentRPM_R -> Y+560
                 ;	currentRPM_L -> Y+558
                 ;	currentV_R -> Y+554
                 ;	currentV_L -> Y+550
                 ;	goal_current_R -> Y+548
                 ;	goal_current_L -> Y+546
                 ;	d_velocity -> Y+542
                 ;	d_angularV -> Y+538
                 ;	control_time -> Y+534
                 ;	d_x -> Y+530
                 ;	d_y -> Y+526
                 ;	d_angular -> Y+522
                 ;	d_angular_circula -> Y+520
                 ;	goal_x -> Y+516
                 ;	goal_y -> Y+512
                 ;	goal_angular -> Y+508
                 ;	TIMER1_TIME -> Y+504
                 ;	TIMER0_TIME -> Y+500
                 ;	BUFF -> Y+0
                +
0003a2 e000     +LDI R16 , LOW ( 0 )
0003a3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003a4 e020     +LDI R18 , LOW ( 0 )
0003a5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0003a6 e040     +LDI R20 , LOW ( 0 )
0003a7 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0003a8 e0e7      	LDI  R30,LOW(7)
0003a9 e0f0      	LDI  R31,HIGH(7)
0003aa 93fa      	ST   -Y,R31
0003ab 93ea      	ST   -Y,R30
0003ac de0c      	RCALL _usart1_init
                 ; 0000 019B     usart0_init(bps_115200);
0003ad e0e7      	LDI  R30,LOW(7)
0003ae e0f0      	LDI  R31,HIGH(7)
0003af 93fa      	ST   -Y,R31
0003b0 93ea      	ST   -Y,R30
0003b1 de1f      	RCALL _usart0_init
                 ; 0000 019C     timer2_init();
0003b2 de34      	RCALL _timer2_init
                 ; 0000 019D     timer0_init();
0003b3 de39      	RCALL _timer0_init
                 ; 0000 019E     timer1_init();
0003b4 de3c      	RCALL _timer1_init
                 ; 0000 019F     SREG |= 0x80;
0003b5 9478      	BSET 7
                 ; 0000 01A0     DDRB.1 = 1;
0003b6 9ab9      	SBI  0x17,1
                 ; 0000 01A1     DDRB.2 = 1;
0003b7 9aba      	SBI  0x17,2
                 ; 0000 01A2     DDRB.3 = 1;
0003b8 9abb      	SBI  0x17,3
                 ; 0000 01A3     delay_ms(5000);
0003b9 e8e8      	LDI  R30,LOW(5000)
0003ba e1f3      	LDI  R31,HIGH(5000)
0003bb 940e 0d5f 	CALL SUBOPT_0x14
                 ; 0000 01A4     PORTB.1 = 0;
0003bd 98c1      	CBI  0x18,1
                 ; 0000 01A5     PORTB.2 = 1;
0003be 9ac2      	SBI  0x18,2
                 ; 0000 01A6 
                 ; 0000 01A7     TIMER0_OVERFLOW = 0;
0003bf 2466      	CLR  R6
0003c0 2477      	CLR  R7
                 ; 0000 01A8     TCNT0 = 0;
0003c1 e0e0      	LDI  R30,LOW(0)
0003c2 bfe2      	OUT  0x32,R30
                 ; 0000 01A9 
                 ; 0000 01AA     while(1)
                 _0x53:
                 ; 0000 01AB     {
                 ; 0000 01AC         if(CHECK_GETS)
0003c3 2088      	TST  R8
0003c4 f411      	BRNE PC+3
0003c5 940c 0459 	JMP _0x56
                 ; 0000 01AD         {
                 ; 0000 01AE             PORTB.1 = 1;
0003c7 9ac1      	SBI  0x18,1
                 ; 0000 01AF 
                 ; 0000 01B0             UCSR1B &= ~(1<<RXEN1);
0003c8 91e0 009a 	LDS  R30,154
0003ca 7eef      	ANDI R30,0xEF
0003cb 93e0 009a 	STS  154,R30
                 ; 0000 01B1             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
0003cd e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0003ce e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0003cf 93fa      	ST   -Y,R31
0003d0 93ea      	ST   -Y,R30
                +
0003d1 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0003d2 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0003d3 93fa      	ST   -Y,R31
0003d4 93ea      	ST   -Y,R30
0003d5 b7ed      	IN   R30,SPL
0003d6 b7fe      	IN   R31,SPH
0003d7 9731      	SBIW R30,1
0003d8 940e 114f 	CALL __PUTPARD1L
0003da 931f      	PUSH R17
0003db 930f      	PUSH R16
0003dc b7ed      	IN   R30,SPL
0003dd b7fe      	IN   R31,SPH
0003de 9731      	SBIW R30,1
0003df 940e 114f 	CALL __PUTPARD1L
0003e1 933f      	PUSH R19
0003e2 932f      	PUSH R18
0003e3 01fe      	MOVW R30,R28
0003e4 5ce2      	SUBI R30,LOW(-(574))
0003e5 4ffd      	SBCI R31,HIGH(-(574))
0003e6 2766      	CLR  R22
0003e7 2777      	CLR  R23
0003e8 940e 1151 	CALL __PUTPARD1
0003ea e08c      	LDI  R24,12
0003eb 940e 0ad3 	CALL _sscanf
0003ed 9660      	ADIW R28,16
0003ee 912f      	POP  R18
0003ef 913f      	POP  R19
0003f0 910f      	POP  R16
0003f1 911f      	POP  R17
                 ; 0000 01B2             // sscanf(VELOCITY_BUFF,"<%d,%d,%f,%f,%f>", &velocity, &angularV, &goal_x, &goal_y, goal_angular);
                 ; 0000 01B3 
                 ; 0000 01B4             if(!del_ms){
                +
0003f2 01fe     +MOVW R30 , R28
0003f3 5cee     +SUBI R30 , LOW ( - 562 )
0003f4 4ffd     +SBCI R31 , HIGH ( - 562 )
0003f5 9001     +LD R0 , Z +
0003f6 81f0     +LD R31 , Z
0003f7 2de0     +MOV R30 , R0
                 	__GETW1SX 562
0003f8 9730      	SBIW R30,0
0003f9 f4b1      	BRNE _0x59
                 ; 0000 01B5                 d_x = 0;
0003fa e0e0      	LDI  R30,LOW(0)
                +
0003fb 01de     +MOVW R26 , R28
0003fc 5eae     +SUBI R26 , LOW ( - 530 )
0003fd 4fbd     +SBCI R27 , HIGH ( - 530 )
0003fe 93ed     +ST X + , R30
0003ff 93ed     +ST X + , R30
000400 93ed     +ST X + , R30
000401 93ec     +ST X , R30
                 	__CLRD1SX 530
                 ; 0000 01B6                 d_y = 0;
                +
000402 01de     +MOVW R26 , R28
000403 5fa2     +SUBI R26 , LOW ( - 526 )
000404 4fbd     +SBCI R27 , HIGH ( - 526 )
000405 93ed     +ST X + , R30
000406 93ed     +ST X + , R30
000407 93ed     +ST X + , R30
000408 93ec     +ST X , R30
                 	__CLRD1SX 526
                 ; 0000 01B7                 d_angular = 0;
                +
000409 01de     +MOVW R26 , R28
00040a 5fa6     +SUBI R26 , LOW ( - 522 )
00040b 4fbd     +SBCI R27 , HIGH ( - 522 )
00040c 93ed     +ST X + , R30
00040d 93ed     +ST X + , R30
00040e 93ed     +ST X + , R30
00040f 93ec     +ST X , R30
                 	__CLRD1SX 522
                 ; 0000 01B8             }
                 ; 0000 01B9 
                 ; 0000 01BA             v_buff = (float)velocity/1000;
                 _0x59:
000410 01f8      	MOVW R30,R16
000411 940e 0d63 	CALL SUBOPT_0x15
                +
000413 01de     +MOVW R26 , R28
000414 5ca6     +SUBI R26 , LOW ( - 570 )
000415 4fbd     +SBCI R27 , HIGH ( - 570 )
000416 93ed     +ST X + , R30
000417 93fd     +ST X + , R31
000418 936d     +ST X + , R22
000419 937c     +ST X , R23
                 	__PUTD1SX 570
                 ; 0000 01BB             a_buff = (float)angularV/1000;
00041a 01f9      	MOVW R30,R18
00041b 940e 0d63 	CALL SUBOPT_0x15
                +
00041d 01de     +MOVW R26 , R28
00041e 5ca2     +SUBI R26 , LOW ( - 574 )
00041f 4fbd     +SBCI R27 , HIGH ( - 574 )
000420 93ed     +ST X + , R30
000421 93fd     +ST X + , R31
000422 936d     +ST X + , R22
000423 937c     +ST X , R23
                 	__PUTD1SX 574
                 ; 0000 01BC 
                 ; 0000 01BD             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000424 01fe      	MOVW R30,R28
000425 5ce6      	SUBI R30,LOW(-(570))
000426 4ffd      	SBCI R31,HIGH(-(570))
000427 93fa      	ST   -Y,R31
000428 93ea      	ST   -Y,R30
000429 01fe      	MOVW R30,R28
00042a 5ce0      	SUBI R30,LOW(-(576))
00042b 4ffd      	SBCI R31,HIGH(-(576))
00042c 93fa      	ST   -Y,R31
00042d 93ea      	ST   -Y,R30
00042e b7ed      	IN   R30,SPL
00042f b7fe      	IN   R31,SPH
000430 9731      	SBIW R30,1
000431 93fa      	ST   -Y,R31
000432 93ea      	ST   -Y,R30
000433 935f      	PUSH R21
000434 934f      	PUSH R20
000435 01fe      	MOVW R30,R28
000436 5ce2      	SUBI R30,LOW(-(574))
000437 4ffd      	SBCI R31,HIGH(-(574))
000438 93fa      	ST   -Y,R31
000439 93ea      	ST   -Y,R30
00043a de41      	RCALL _Make_MSPEED
00043b 914f      	POP  R20
00043c 915f      	POP  R21
                 ; 0000 01BE 
                 ; 0000 01BF             oper_Disapath(velocity_R, velocity_L);
00043d 935a      	ST   -Y,R21
00043e 934a      	ST   -Y,R20
                +
00043f 01fe     +MOVW R30 , R28
000440 5ce6     +SUBI R30 , LOW ( - 570 )
000441 4ffd     +SBCI R31 , HIGH ( - 570 )
000442 9001     +LD R0 , Z +
000443 81f0     +LD R31 , Z
000444 2de0     +MOV R30 , R0
                 	__GETW1SX 570
000445 93fa      	ST   -Y,R31
000446 93ea      	ST   -Y,R30
000447 deac      	RCALL _oper_Disapath
                 ; 0000 01C0 
                 ; 0000 01C1             TIMER1_TIME = 0;
000448 e0e0      	LDI  R30,LOW(0)
                +
000449 01de     +MOVW R26 , R28
00044a 50a8     +SUBI R26 , LOW ( - 504 )
00044b 4fbe     +SBCI R27 , HIGH ( - 504 )
00044c 93ed     +ST X + , R30
00044d 93ed     +ST X + , R30
00044e 93ed     +ST X + , R30
00044f 93ec     +ST X , R30
                 	__CLRD1SX 504
                 ; 0000 01C2             TIMER1_OVERFLOW = 0;
000450 24cc      	CLR  R12
000451 24dd      	CLR  R13
                 ; 0000 01C3             TCNT1L = 0;
000452 bdec      	OUT  0x2C,R30
                 ; 0000 01C4 
                 ; 0000 01C5             CHECK_GETS = 0;
000453 2488      	CLR  R8
                 ; 0000 01C6             UCSR1B |=(1<<RXEN1);
000454 91e0 009a 	LDS  R30,154
000456 61e0      	ORI  R30,0x10
000457 93e0 009a 	STS  154,R30
                 ; 0000 01C7             // PORTB.1 = 0;
                 ; 0000 01C8         }
                 ; 0000 01C9 
                 ; 0000 01CA         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0x56:
000459 01f6      	MOVW R30,R12
00045a efaf      	LDI  R26,LOW(255)
00045b e0b0      	LDI  R27,HIGH(255)
00045c 940e 10d5 	CALL __MULW12U
00045e 01df      	MOVW R26,R30
00045f b5ec      	IN   R30,0x2C
000460 940e 0d46 	CALL SUBOPT_0x10
000462 2766      	CLR  R22
000463 2777      	CLR  R23
000464 940e 0f73 	CALL __CDF1
                +
000466 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000467 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
000468 e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
000469 e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00046a 940e 0ffd 	CALL __MULF12
                +
00046c 01de     +MOVW R26 , R28
00046d 50a8     +SUBI R26 , LOW ( - 504 )
00046e 4fbe     +SBCI R27 , HIGH ( - 504 )
00046f 93ed     +ST X + , R30
000470 93fd     +ST X + , R31
000471 936d     +ST X + , R22
000472 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 01CB 
                 ; 0000 01CC         if(del_ms<TIMER1_TIME)
                +
000473 01de     +MOVW R26 , R28
000474 5cae     +SUBI R26 , LOW ( - 562 )
000475 4fbd     +SBCI R27 , HIGH ( - 562 )
000476 900d     +LD R0 , X +
000477 91bc     +LD R27 , X
000478 2da0     +MOV R26 , R0
                 	__GETW2SX 562
000479 940e 10d0 	CALL __CWD2
00047b 940e 1158 	CALL __CDF2
00047d 940e 1090 	CALL __CMPF12
00047f f4c0      	BRSH _0x5A
                 ; 0000 01CD         {
                 ; 0000 01CE             oper_Disapath(0,0);
000480 e0e0      	LDI  R30,LOW(0)
000481 e0f0      	LDI  R31,HIGH(0)
000482 93fa      	ST   -Y,R31
000483 93ea      	ST   -Y,R30
000484 93fa      	ST   -Y,R31
000485 93ea      	ST   -Y,R30
000486 de6d      	RCALL _oper_Disapath
                 ; 0000 01CF             TIMER1_OVERFLOW = 0;
000487 24cc      	CLR  R12
000488 24dd      	CLR  R13
                 ; 0000 01D0             v_buff = 0;
000489 e0e0      	LDI  R30,LOW(0)
                +
00048a 01de     +MOVW R26 , R28
00048b 5ca6     +SUBI R26 , LOW ( - 570 )
00048c 4fbd     +SBCI R27 , HIGH ( - 570 )
00048d 93ed     +ST X + , R30
00048e 93ed     +ST X + , R30
00048f 93ed     +ST X + , R30
000490 93ec     +ST X , R30
                 	__CLRD1SX 570
                 ; 0000 01D1             a_buff = 0;
                +
000491 01de     +MOVW R26 , R28
000492 5ca2     +SUBI R26 , LOW ( - 574 )
000493 4fbd     +SBCI R27 , HIGH ( - 574 )
000494 93ed     +ST X + , R30
000495 93ed     +ST X + , R30
000496 93ed     +ST X + , R30
000497 93ec     +ST X , R30
                 	__CLRD1SX 574
                 ; 0000 01D2         }
                 ; 0000 01D3 
                 ; 0000 01D4         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 _0x5A:
000498 e0e1      	LDI  R30,LOW(1)
000499 940e 0d70 	CALL SUBOPT_0x16
                 ; 0000 01D5         delay_ms(5);
                 ; 0000 01D6         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
00049b e0e0      	LDI  R30,LOW(_PACKET_BUFF)
00049c e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
00049d 93fa      	ST   -Y,R31
00049e 93ea      	ST   -Y,R30
00049f 924a      	ST   -Y,R4
0004a0 01fe      	MOVW R30,R28
0004a1 5de9      	SUBI R30,LOW(-(551))
0004a2 4ffd      	SBCI R31,HIGH(-(551))
0004a3 93fa      	ST   -Y,R31
0004a4 93ea      	ST   -Y,R30
0004a5 de6c      	RCALL _get_RPM
                +
0004a6 01de     +MOVW R26 , R28
0004a7 5da0     +SUBI R26 , LOW ( - 560 )
0004a8 4fbd     +SBCI R27 , HIGH ( - 560 )
0004a9 93ed     +ST X + , R30
0004aa 93fc     +ST X , R31
                 	__PUTW1SX 560
                 ; 0000 01D7         delay_ms(5);
0004ab e0e5      	LDI  R30,LOW(5)
0004ac e0f0      	LDI  R31,HIGH(5)
0004ad 940e 0d5f 	CALL SUBOPT_0x14
                 ; 0000 01D8         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0004af e0e2      	LDI  R30,LOW(2)
0004b0 940e 0d70 	CALL SUBOPT_0x16
                 ; 0000 01D9         delay_ms(5);
                 ; 0000 01DA         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
0004b2 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004b3 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004b4 93fa      	ST   -Y,R31
0004b5 93ea      	ST   -Y,R30
0004b6 924a      	ST   -Y,R4
0004b7 01fe      	MOVW R30,R28
0004b8 5deb      	SUBI R30,LOW(-(549))
0004b9 4ffd      	SBCI R31,HIGH(-(549))
0004ba 93fa      	ST   -Y,R31
0004bb 93ea      	ST   -Y,R30
0004bc de55      	RCALL _get_RPM
0004bd 940e 10b4 	CALL __ANEGW1
                +
0004bf 01de     +MOVW R26 , R28
0004c0 5da2     +SUBI R26 , LOW ( - 558 )
0004c1 4fbd     +SBCI R27 , HIGH ( - 558 )
0004c2 93ed     +ST X + , R30
0004c3 93fc     +ST X , R31
                 	__PUTW1SX 558
                 ; 0000 01DB         delay_ms(5);
0004c4 e0e5      	LDI  R30,LOW(5)
0004c5 e0f0      	LDI  R31,HIGH(5)
0004c6 940e 0d5f 	CALL SUBOPT_0x14
                 ; 0000 01DC 
                 ; 0000 01DD         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
                +
0004c8 01fe     +MOVW R30 , R28
0004c9 5de0     +SUBI R30 , LOW ( - 560 )
0004ca 4ffd     +SBCI R31 , HIGH ( - 560 )
0004cb 9001     +LD R0 , Z +
0004cc 81f0     +LD R31 , Z
0004cd 2de0     +MOV R30 , R0
                 	__GETW1SX 560
0004ce 940e 0d7c 	CALL SUBOPT_0x17
                +
0004d0 01de     +MOVW R26 , R28
0004d1 5da6     +SUBI R26 , LOW ( - 554 )
0004d2 4fbd     +SBCI R27 , HIGH ( - 554 )
0004d3 93ed     +ST X + , R30
0004d4 93fd     +ST X + , R31
0004d5 936d     +ST X + , R22
0004d6 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 01DE         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
0004d7 01fe     +MOVW R30 , R28
0004d8 5de2     +SUBI R30 , LOW ( - 558 )
0004d9 4ffd     +SBCI R31 , HIGH ( - 558 )
0004da 9001     +LD R0 , Z +
0004db 81f0     +LD R31 , Z
0004dc 2de0     +MOV R30 , R0
                 	__GETW1SX 558
0004dd 940e 0d7c 	CALL SUBOPT_0x17
                +
0004df 01de     +MOVW R26 , R28
0004e0 5daa     +SUBI R26 , LOW ( - 550 )
0004e1 4fbd     +SBCI R27 , HIGH ( - 550 )
0004e2 93ed     +ST X + , R30
0004e3 93fd     +ST X + , R31
0004e4 936d     +ST X + , R22
0004e5 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 01DF 
                 ; 0000 01E0         d_velocity = (currentV_R + currentV_L)/2;
0004e6 940e 0d89 	CALL SUBOPT_0x18
                +
0004e8 01de     +MOVW R26 , R28
0004e9 5da6     +SUBI R26 , LOW ( - 554 )
0004ea 4fbd     +SBCI R27 , HIGH ( - 554 )
0004eb 900d     +LD R0 , X +
0004ec 901d     +LD R1 , X +
0004ed 918d     +LD R24 , X +
0004ee 919c     +LD R25 , X
0004ef 01d0     +MOVW R26 , R0
                 	__GETD2SX 554
0004f0 940e 0fad 	CALL __ADDF12
0004f2 01df      	MOVW R26,R30
0004f3 01cb      	MOVW R24,R22
                +
0004f4 e0e0     +LDI R30 , LOW ( 0x40000000 )
0004f5 e0f0     +LDI R31 , HIGH ( 0x40000000 )
0004f6 e060     +LDI R22 , BYTE3 ( 0x40000000 )
0004f7 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0004f8 940e 104b 	CALL __DIVF21
                +
0004fa 01de     +MOVW R26 , R28
0004fb 5ea2     +SUBI R26 , LOW ( - 542 )
0004fc 4fbd     +SBCI R27 , HIGH ( - 542 )
0004fd 93ed     +ST X + , R30
0004fe 93fd     +ST X + , R31
0004ff 936d     +ST X + , R22
000500 937c     +ST X , R23
                 	__PUTD1SX 542
                 ; 0000 01E1         d_angularV = (2*(currentV_R-currentV_L))/Length;
                +
000501 01de     +MOVW R26 , R28
000502 5daa     +SUBI R26 , LOW ( - 550 )
000503 4fbd     +SBCI R27 , HIGH ( - 550 )
000504 900d     +LD R0 , X +
000505 901d     +LD R1 , X +
000506 918d     +LD R24 , X +
000507 919c     +LD R25 , X
000508 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
                +
000509 01fe     +MOVW R30 , R28
00050a 5de6     +SUBI R30 , LOW ( - 554 )
00050b 4ffd     +SBCI R31 , HIGH ( - 554 )
00050c 9001     +LD R0 , Z +
00050d 9011     +LD R1 , Z +
00050e 9161     +LD R22 , Z +
00050f 8170     +LD R23 , Z
000510 01f0     +MOVW R30 , R0
                 	__GETD1SX 554
000511 940e 0fa6 	CALL __SUBF12
                +
000513 e0a0     +LDI R26 , LOW ( 0x40000000 )
000514 e0b0     +LDI R27 , HIGH ( 0x40000000 )
000515 e080     +LDI R24 , BYTE3 ( 0x40000000 )
000516 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
000517 940e 0ffd 	CALL __MULF12
000519 01df      	MOVW R26,R30
00051a 01cb      	MOVW R24,R22
                +
00051b e3eb     +LDI R30 , LOW ( 0x3E8FDF3B )
00051c edff     +LDI R31 , HIGH ( 0x3E8FDF3B )
00051d e86f     +LDI R22 , BYTE3 ( 0x3E8FDF3B )
00051e e37e     +LDI R23 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD1N 0x3E8FDF3B
00051f 940e 104b 	CALL __DIVF21
                +
000521 01de     +MOVW R26 , R28
000522 5ea6     +SUBI R26 , LOW ( - 538 )
000523 4fbd     +SBCI R27 , HIGH ( - 538 )
000524 93ed     +ST X + , R30
000525 93fd     +ST X + , R31
000526 936d     +ST X + , R22
000527 937c     +ST X , R23
                 	__PUTD1SX 538
                 ; 0000 01E2 
                 ; 0000 01E3         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
000528 01f3      	MOVW R30,R6
000529 efaf      	LDI  R26,LOW(255)
00052a e0b0      	LDI  R27,HIGH(255)
00052b 940e 10d5 	CALL __MULW12U
00052d 01df      	MOVW R26,R30
00052e b7e2      	IN   R30,0x32
00052f 940e 0d46 	CALL SUBOPT_0x10
000531 2766      	CLR  R22
000532 2777      	CLR  R23
000533 940e 0f73 	CALL __CDF1
                +
000535 eaae     +LDI R26 , LOW ( 0x3891A2AE )
000536 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000537 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000538 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000539 940e 0ffd 	CALL __MULF12
                +
00053b 01de     +MOVW R26 , R28
00053c 5eaa     +SUBI R26 , LOW ( - 534 )
00053d 4fbd     +SBCI R27 , HIGH ( - 534 )
00053e 93ed     +ST X + , R30
00053f 93fd     +ST X + , R31
000540 936d     +ST X + , R22
000541 937c     +ST X , R23
                 	__PUTD1SX 534
                 ; 0000 01E4         TIMER0_OVERFLOW = 0;
000542 2466      	CLR  R6
000543 2477      	CLR  R7
                 ; 0000 01E5         TCNT0 = 0;
000544 e0e0      	LDI  R30,LOW(0)
000545 bfe2      	OUT  0x32,R30
                 ; 0000 01E6 
                 ; 0000 01E7         if((d_velocity!=0) ||(d_angularV!=0)){
000546 940e 0d92 	CALL SUBOPT_0x19
000548 940e 116c 	CALL __CPD02
00054a f461      	BRNE _0x5C
                +
00054b 01de     +MOVW R26 , R28
00054c 5ea6     +SUBI R26 , LOW ( - 538 )
00054d 4fbd     +SBCI R27 , HIGH ( - 538 )
00054e 900d     +LD R0 , X +
00054f 901d     +LD R1 , X +
000550 918d     +LD R24 , X +
000551 919c     +LD R25 , X
000552 01d0     +MOVW R26 , R0
                 	__GETD2SX 538
000553 940e 116c 	CALL __CPD02
000555 f409      	BRNE _0x5C
000556 c06e      	RJMP _0x5B
                 _0x5C:
                 ; 0000 01E8             d_x += d_velocity*control_time*cos(control_time*d_angularV);
000557 940e 0d9b 	CALL SUBOPT_0x1A
000559 937f      	PUSH R23
00055a 936f      	PUSH R22
00055b 93ff      	PUSH R31
00055c 93ef      	PUSH R30
00055d 940e 0da7 	CALL SUBOPT_0x1B
00055f 940e 0bce 	CALL _cos
000561 91af      	POP  R26
000562 91bf      	POP  R27
000563 918f      	POP  R24
000564 919f      	POP  R25
000565 940e 0ffd 	CALL __MULF12
                +
000567 01de     +MOVW R26 , R28
000568 5eae     +SUBI R26 , LOW ( - 530 )
000569 4fbd     +SBCI R27 , HIGH ( - 530 )
00056a 900d     +LD R0 , X +
00056b 901d     +LD R1 , X +
00056c 918d     +LD R24 , X +
00056d 919c     +LD R25 , X
00056e 01d0     +MOVW R26 , R0
                 	__GETD2SX 530
00056f 940e 0fad 	CALL __ADDF12
                +
000571 01de     +MOVW R26 , R28
000572 5eae     +SUBI R26 , LOW ( - 530 )
000573 4fbd     +SBCI R27 , HIGH ( - 530 )
000574 93ed     +ST X + , R30
000575 93fd     +ST X + , R31
000576 936d     +ST X + , R22
000577 937c     +ST X , R23
                 	__PUTD1SX 530
                 ; 0000 01E9             d_y += d_velocity*control_time*sin(control_time*d_angularV);
000578 940e 0d9b 	CALL SUBOPT_0x1A
00057a 937f      	PUSH R23
00057b 936f      	PUSH R22
00057c 93ff      	PUSH R31
00057d 93ef      	PUSH R30
00057e 940e 0da7 	CALL SUBOPT_0x1B
000580 940e 0b47 	CALL _sin
000582 91af      	POP  R26
000583 91bf      	POP  R27
000584 918f      	POP  R24
000585 919f      	POP  R25
000586 940e 0ffd 	CALL __MULF12
                +
000588 01de     +MOVW R26 , R28
000589 5fa2     +SUBI R26 , LOW ( - 526 )
00058a 4fbd     +SBCI R27 , HIGH ( - 526 )
00058b 900d     +LD R0 , X +
00058c 901d     +LD R1 , X +
00058d 918d     +LD R24 , X +
00058e 919c     +LD R25 , X
00058f 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
000590 940e 0fad 	CALL __ADDF12
                +
000592 01de     +MOVW R26 , R28
000593 5fa2     +SUBI R26 , LOW ( - 526 )
000594 4fbd     +SBCI R27 , HIGH ( - 526 )
000595 93ed     +ST X + , R30
000596 93fd     +ST X + , R31
000597 936d     +ST X + , R22
000598 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 01EA             d_angular += control_time*d_angularV;
                +
000599 01fe     +MOVW R30 , R28
00059a 5ee6     +SUBI R30 , LOW ( - 538 )
00059b 4ffd     +SBCI R31 , HIGH ( - 538 )
00059c 9001     +LD R0 , Z +
00059d 9011     +LD R1 , Z +
00059e 9161     +LD R22 , Z +
00059f 8170     +LD R23 , Z
0005a0 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
0005a1 01de     +MOVW R26 , R28
0005a2 5eaa     +SUBI R26 , LOW ( - 534 )
0005a3 4fbd     +SBCI R27 , HIGH ( - 534 )
0005a4 900d     +LD R0 , X +
0005a5 901d     +LD R1 , X +
0005a6 918d     +LD R24 , X +
0005a7 919c     +LD R25 , X
0005a8 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
0005a9 940e 0ffd 	CALL __MULF12
0005ab 940e 0dbc 	CALL SUBOPT_0x1C
0005ad 940e 0fad 	CALL __ADDF12
                +
0005af 01de     +MOVW R26 , R28
0005b0 5fa6     +SUBI R26 , LOW ( - 522 )
0005b1 4fbd     +SBCI R27 , HIGH ( - 522 )
0005b2 93ed     +ST X + , R30
0005b3 93fd     +ST X + , R31
0005b4 936d     +ST X + , R22
0005b5 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 01EB             d_angular_circula = (int)(d_angular*Circular);
0005b6 940e 0dbc 	CALL SUBOPT_0x1C
                +
0005b8 efe6     +LDI R30 , LOW ( 0x426528F6 )
0005b9 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
0005ba e665     +LDI R22 , BYTE3 ( 0x426528F6 )
0005bb e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
0005bc 940e 0ffd 	CALL __MULF12
0005be 940e 0f3c 	CALL __CFD1
                +
0005c0 01de     +MOVW R26 , R28
0005c1 5fa8     +SUBI R26 , LOW ( - 520 )
0005c2 4fbd     +SBCI R27 , HIGH ( - 520 )
0005c3 93ed     +ST X + , R30
0005c4 93fc     +ST X , R31
                 	__PUTW1SX 520
                 ; 0000 01EC         }
                 ; 0000 01ED 
                 ; 0000 01EE         TIMER0_TIME += control_time;
                 _0x5B:
                +
0005c5 01fe     +MOVW R30 , R28
0005c6 5eea     +SUBI R30 , LOW ( - 534 )
0005c7 4ffd     +SBCI R31 , HIGH ( - 534 )
0005c8 9001     +LD R0 , Z +
0005c9 9011     +LD R1 , Z +
0005ca 9161     +LD R22 , Z +
0005cb 8170     +LD R23 , Z
0005cc 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
0005cd 940e 0dc5 	CALL SUBOPT_0x1D
0005cf 940e 0fad 	CALL __ADDF12
                +
0005d1 01de     +MOVW R26 , R28
0005d2 50ac     +SUBI R26 , LOW ( - 500 )
0005d3 4fbe     +SBCI R27 , HIGH ( - 500 )
0005d4 93ed     +ST X + , R30
0005d5 93fd     +ST X + , R31
0005d6 936d     +ST X + , R22
0005d7 937c     +ST X , R23
                 	__PUTD1SX 500
                 ; 0000 01EF         if(TIMER0_TIME>0.05){
0005d8 940e 0dc5 	CALL SUBOPT_0x1D
                +
0005da eced     +LDI R30 , LOW ( 0x3D4CCCCD )
0005db ecfc     +LDI R31 , HIGH ( 0x3D4CCCCD )
0005dc e46c     +LDI R22 , BYTE3 ( 0x3D4CCCCD )
0005dd e37d     +LDI R23 , BYTE4 ( 0x3D4CCCCD )
                 	__GETD1N 0x3D4CCCCD
0005de 940e 1090 	CALL __CMPF12
0005e0 f009      	BREQ PC+2
0005e1 f410      	BRCC PC+3
0005e2 940c 061d 	JMP  _0x5E
                 ; 0000 01F0             sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
0005e4 01fe      	MOVW R30,R28
0005e5 93fa      	ST   -Y,R31
0005e6 93ea      	ST   -Y,R30
                +
0005e7 edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0005e8 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0005e9 93fa      	ST   -Y,R31
0005ea 93ea      	ST   -Y,R30
                +
0005eb 01fe     +MOVW R30 , R28
0005ec 5dee     +SUBI R30 , LOW ( - 546 )
0005ed 4ffd     +SBCI R31 , HIGH ( - 546 )
0005ee 9001     +LD R0 , Z +
0005ef 9011     +LD R1 , Z +
0005f0 9161     +LD R22 , Z +
0005f1 8170     +LD R23 , Z
0005f2 01f0     +MOVW R30 , R0
                 	__GETD1SX 546
0005f3 940e 1151 	CALL __PUTPARD1
                +
0005f5 01fe     +MOVW R30 , R28
0005f6 5bee     +SUBI R30 , LOW ( - 578 )
0005f7 4ffd     +SBCI R31 , HIGH ( - 578 )
0005f8 9001     +LD R0 , Z +
0005f9 9011     +LD R1 , Z +
0005fa 9161     +LD R22 , Z +
0005fb 8170     +LD R23 , Z
0005fc 01f0     +MOVW R30 , R0
                 	__GETD1SX 578
0005fd 940e 1151 	CALL __PUTPARD1
0005ff 940e 0d89 	CALL SUBOPT_0x18
000601 940e 1151 	CALL __PUTPARD1
                +
000603 01fe     +MOVW R30 , R28
000604 5be2     +SUBI R30 , LOW ( - 590 )
000605 4ffd     +SBCI R31 , HIGH ( - 590 )
000606 9001     +LD R0 , Z +
000607 9011     +LD R1 , Z +
000608 9161     +LD R22 , Z +
000609 8170     +LD R23 , Z
00060a 01f0     +MOVW R30 , R0
                 	__GETD1SX 590
00060b 940e 1151 	CALL __PUTPARD1
00060d e180      	LDI  R24,16
00060e 940e 0944 	CALL _sprintf
000610 9664      	ADIW R28,20
                 ; 0000 01F1             // sprintf(BUFF, "%f, %f\n", d_x, d_y,currentRPM_R, current);
                 ; 0000 01F2             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 01F3             // sprintf(BUFF, "%.3f, %.3f, %4d\n", d_x, d_y, d_angular_circula/2);
                 ; 0000 01F4             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 01F5             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 01F6             puts_USART1(BUFF);
000611 01fe      	MOVW R30,R28
000612 93fa      	ST   -Y,R31
000613 93ea      	ST   -Y,R30
000614 dbf2      	RCALL _puts_USART1
                 ; 0000 01F7              TIMER0_TIME = 0;
000615 e0e0      	LDI  R30,LOW(0)
                +
000616 01de     +MOVW R26 , R28
000617 50ac     +SUBI R26 , LOW ( - 500 )
000618 4fbe     +SBCI R27 , HIGH ( - 500 )
000619 93ed     +ST X + , R30
00061a 93ed     +ST X + , R30
00061b 93ed     +ST X + , R30
00061c 93ec     +ST X , R30
                 	__CLRD1SX 500
                 ; 0000 01F8         }
                 ; 0000 01F9 
                 ; 0000 01FA     }
                 _0x5E:
00061d cda5      	RJMP _0x53
                 ; 0000 01FB }
                 _0x5F:
00061e cfff      	RJMP _0x5F
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
00061f 931a      	ST   -Y,R17
000620 930a      	ST   -Y,R16
000621 81aa      	LDD  R26,Y+2
000622 81bb      	LDD  R27,Y+2+1
000623 9612      	ADIW R26,2
000624 940e 1131 	CALL __GETW1P
000626 9730      	SBIW R30,0
000627 f129      	BREQ _0x2000010
000628 81aa      	LDD  R26,Y+2
000629 81bb      	LDD  R27,Y+2+1
00062a 9614      	ADIW R26,4
00062b 940e 1131 	CALL __GETW1P
00062d 018f      	MOVW R16,R30
00062e 9730      	SBIW R30,0
00062f f061      	BREQ _0x2000012
                +
000630 3002     +CPI R16 , LOW ( 2 )
000631 e0e0     +LDI R30 , HIGH ( 2 )
000632 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000633 f0c0      	BRLO _0x2000013
000634 01f8      	MOVW R30,R16
000635 9731      	SBIW R30,1
000636 018f      	MOVW R16,R30
                +
000637 81aa     +LDD R26 , Y + 2
000638 81bb     +LDD R27 , Y + 2 + 1
000639 9614     +ADIW R26 , 4
00063a 93ed     +ST X + , R30
00063b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00063c 81aa      	LDD  R26,Y+2
00063d 81bb      	LDD  R27,Y+2+1
00063e 9612      	ADIW R26,2
00063f 940e 0dce 	CALL SUBOPT_0x1E
000641 9731      	SBIW R30,1
000642 81ac      	LDD  R26,Y+4
000643 83a0      	STD  Z+0,R26
000644 81aa      	LDD  R26,Y+2
000645 81bb      	LDD  R27,Y+2+1
000646 940e 1131 	CALL __GETW1P
000648 23ff      	TST  R31
000649 f012      	BRMI _0x2000014
00064a 940e 0dce 	CALL SUBOPT_0x1E
                 _0x2000014:
                 _0x2000013:
00064c c006      	RJMP _0x2000015
                 _0x2000010:
00064d 81aa      	LDD  R26,Y+2
00064e 81bb      	LDD  R27,Y+2+1
00064f efef      	LDI  R30,LOW(65535)
000650 efff      	LDI  R31,HIGH(65535)
000651 93ed      	ST   X+,R30
000652 93fc      	ST   X,R31
                 _0x2000015:
000653 8119      	LDD  R17,Y+1
000654 8108      	LDD  R16,Y+0
000655 c348      	RJMP _0x20A0007
                 __ftoe_G100:
000656 9724      	SBIW R28,4
000657 940e 0cf1 	CALL SUBOPT_0x4
000659 e8e0      	LDI  R30,LOW(128)
00065a 83ea      	STD  Y+2,R30
00065b e3ef      	LDI  R30,LOW(63)
00065c 83eb      	STD  Y+3,R30
00065d 940e 1174 	CALL __SAVELOCR4
00065f 85ee      	LDD  R30,Y+14
000660 85ff      	LDD  R31,Y+14+1
000661 3fef      	CPI  R30,LOW(0xFFFF)
000662 efaf      	LDI  R26,HIGH(0xFFFF)
000663 07fa      	CPC  R31,R26
000664 f449      	BRNE _0x2000019
000665 85e8      	LDD  R30,Y+8
000666 85f9      	LDD  R31,Y+8+1
000667 93fa      	ST   -Y,R31
000668 93ea      	ST   -Y,R30
                +
000669 eeec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00066a e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00066b 940e 0dd4 	CALL SUBOPT_0x1F
00066d c0b6      	RJMP _0x20A0009
                 _0x2000019:
00066e 3fef      	CPI  R30,LOW(0x7FFF)
00066f e7af      	LDI  R26,HIGH(0x7FFF)
000670 07fa      	CPC  R31,R26
000671 f449      	BRNE _0x2000018
000672 85e8      	LDD  R30,Y+8
000673 85f9      	LDD  R31,Y+8+1
000674 93fa      	ST   -Y,R31
000675 93ea      	ST   -Y,R30
                +
000676 eeed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000677 e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000678 940e 0dd4 	CALL SUBOPT_0x1F
00067a c0a9      	RJMP _0x20A0009
                 _0x2000018:
00067b 85ab      	LDD  R26,Y+11
00067c 30a7      	CPI  R26,LOW(0x7)
00067d f010      	BRLO _0x200001B
00067e e0e6      	LDI  R30,LOW(6)
00067f 87eb      	STD  Y+11,R30
                 _0x200001B:
000680 851b      	LDD  R17,Y+11
                 _0x200001C:
000681 2fe1      	MOV  R30,R17
000682 5011      	SUBI R17,1
000683 30e0      	CPI  R30,0
000684 f019      	BREQ _0x200001E
000685 940e 0dd8 	CALL SUBOPT_0x20
000687 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000688 85ec     +LDD R30 , Y + 12
000689 85fd     +LDD R31 , Y + 12 + 1
00068a 856e     +LDD R22 , Y + 12 + 2
00068b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00068c 940e 1168 	CALL __CPD10
00068e f421      	BRNE _0x200001F
00068f e030      	LDI  R19,LOW(0)
000690 940e 0dd8 	CALL SUBOPT_0x20
000692 c02e      	RJMP _0x2000020
                 _0x200001F:
000693 853b      	LDD  R19,Y+11
000694 940e 0de3 	CALL SUBOPT_0x21
000696 f009      	BREQ PC+2
000697 f410      	BRCC PC+3
000698 940c 06a5 	JMP  _0x2000021
00069a 940e 0dd8 	CALL SUBOPT_0x20
                 _0x2000022:
00069c 940e 0de3 	CALL SUBOPT_0x21
00069e f028      	BRLO _0x2000024
00069f 940e 0deb 	CALL SUBOPT_0x22
0006a1 940e 0df0 	CALL SUBOPT_0x23
0006a3 cff8      	RJMP _0x2000022
                 _0x2000024:
0006a4 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0006a5 940e 0de3 	CALL SUBOPT_0x21
0006a7 f440      	BRSH _0x2000028
0006a8 940e 0deb 	CALL SUBOPT_0x22
0006aa 940e 0dfc 	CALL SUBOPT_0x24
0006ac 940e 0e03 	CALL SUBOPT_0x25
0006ae 5031      	SUBI R19,LOW(1)
0006af cff5      	RJMP _0x2000026
                 _0x2000028:
0006b0 940e 0dd8 	CALL SUBOPT_0x20
                 _0x2000025:
                +
0006b2 85ec     +LDD R30 , Y + 12
0006b3 85fd     +LDD R31 , Y + 12 + 1
0006b4 856e     +LDD R22 , Y + 12 + 2
0006b5 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0006b6 940e 0e08 	CALL SUBOPT_0x26
0006b8 940e 0e03 	CALL SUBOPT_0x25
0006ba 940e 0de3 	CALL SUBOPT_0x21
0006bc f020      	BRLO _0x2000029
0006bd 940e 0deb 	CALL SUBOPT_0x22
0006bf 940e 0df0 	CALL SUBOPT_0x23
                 _0x2000029:
                 _0x2000020:
0006c1 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0006c2 85eb      	LDD  R30,Y+11
0006c3 17e1      	CP   R30,R17
0006c4 f198      	BRLO _0x200002C
                +
0006c5 81ac     +LDD R26 , Y + 4
0006c6 81bd     +LDD R27 , Y + 4 + 1
0006c7 818e     +LDD R24 , Y + 4 + 2
0006c8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006c9 940e 0e0f 	CALL SUBOPT_0x27
0006cb 940e 0e08 	CALL SUBOPT_0x26
0006cd 940e 0e16 	CALL SUBOPT_0x28
0006cf 940e 0d0e 	CALL SUBOPT_0x8
0006d1 940e 0d18 	CALL SUBOPT_0xA
0006d3 940e 0deb 	CALL SUBOPT_0x22
0006d5 940e 104b 	CALL __DIVF21
0006d7 940e 0f3a 	CALL __CFD1U
0006d9 2f0e      	MOV  R16,R30
0006da 940e 0e1a 	CALL SUBOPT_0x29
0006dc 940e 0e21 	CALL SUBOPT_0x2A
0006de 27ff      	CLR  R31
0006df 2766      	CLR  R22
0006e0 2777      	CLR  R23
0006e1 940e 0f73 	CALL __CDF1
                +
0006e3 81ac     +LDD R26 , Y + 4
0006e4 81bd     +LDD R27 , Y + 4 + 1
0006e5 818e     +LDD R24 , Y + 4 + 2
0006e6 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006e7 940e 0ffd 	CALL __MULF12
0006e9 940e 0deb 	CALL SUBOPT_0x22
0006eb 940e 0d13 	CALL SUBOPT_0x9
0006ed 940e 0e03 	CALL SUBOPT_0x25
0006ef 2fe1      	MOV  R30,R17
0006f0 5f1f      	SUBI R17,-1
0006f1 30e0      	CPI  R30,0
0006f2 f679      	BRNE _0x200002A
0006f3 940e 0e1a 	CALL SUBOPT_0x29
0006f5 e2ee      	LDI  R30,LOW(46)
0006f6 93ec      	ST   X,R30
0006f7 cfca      	RJMP _0x200002A
                 _0x200002C:
0006f8 940e 0e26 	CALL SUBOPT_0x2B
0006fa 9731      	SBIW R30,1
0006fb 85aa      	LDD  R26,Y+10
0006fc 83a0      	STD  Z+0,R26
0006fd 3030      	CPI  R19,0
0006fe f42c      	BRGE _0x200002E
0006ff 9531      	NEG  R19
000700 85a8      	LDD  R26,Y+8
000701 85b9      	LDD  R27,Y+8+1
000702 e2ed      	LDI  R30,LOW(45)
000703 c003      	RJMP _0x200010E
                 _0x200002E:
000704 85a8      	LDD  R26,Y+8
000705 85b9      	LDD  R27,Y+8+1
000706 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
000707 93ec      	ST   X,R30
000708 940e 0e26 	CALL SUBOPT_0x2B
00070a 940e 0e26 	CALL SUBOPT_0x2B
00070c 9731      	SBIW R30,1
00070d 01bf      	MOVW R22,R30
00070e 2fa3      	MOV  R26,R19
00070f e0ea      	LDI  R30,LOW(10)
000710 940e 10eb 	CALL __DIVB21
000712 5de0      	SUBI R30,-LOW(48)
000713 01db      	MOVW R26,R22
000714 93ec      	ST   X,R30
000715 940e 0e26 	CALL SUBOPT_0x2B
000717 9731      	SBIW R30,1
000718 01bf      	MOVW R22,R30
000719 2fa3      	MOV  R26,R19
00071a e0ea      	LDI  R30,LOW(10)
00071b 940e 1115 	CALL __MODB21
00071d 5de0      	SUBI R30,-LOW(48)
00071e 01db      	MOVW R26,R22
00071f 93ec      	ST   X,R30
000720 85a8      	LDD  R26,Y+8
000721 85b9      	LDD  R27,Y+8+1
000722 e0e0      	LDI  R30,LOW(0)
000723 93ec      	ST   X,R30
                 _0x20A0009:
000724 940e 117b 	CALL __LOADLOCR4
                 _0x20A000A:
000726 9660      	ADIW R28,16
000727 9508      	RET
                 __print_G100:
000728 97ef      	SBIW R28,63
000729 9761      	SBIW R28,17
00072a 940e 1172 	CALL __SAVELOCR6
00072c e010      	LDI  R17,0
                +
00072d 01fe     +MOVW R30 , R28
00072e 5ae8     +SUBI R30 , LOW ( - 88 )
00072f 4fff     +SBCI R31 , HIGH ( - 88 )
000730 9001     +LD R0 , Z +
000731 81f0     +LD R31 , Z
000732 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000733 87e8      	STD  Y+8,R30
000734 87f9      	STD  Y+8+1,R31
                +
000735 01fe     +MOVW R30 , R28
000736 5aea     +SUBI R30 , LOW ( - 86 )
000737 4fff     +SBCI R31 , HIGH ( - 86 )
000738 9001     +LD R0 , Z +
000739 81f0     +LD R31 , Z
00073a 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00073b 83ee      	STD  Y+6,R30
00073c 83ff      	STD  Y+6+1,R31
00073d 81ae      	LDD  R26,Y+6
00073e 81bf      	LDD  R27,Y+6+1
00073f 940e 0d2f 	CALL SUBOPT_0xD
                 _0x2000030:
000741 01de      	MOVW R26,R28
000742 5aa4      	SUBI R26,LOW(-(92))
000743 4fbf      	SBCI R27,HIGH(-(92))
000744 940e 0dce 	CALL SUBOPT_0x1E
000746 9731      	SBIW R30,1
000747 91e4      	LPM  R30,Z
000748 2f2e      	MOV  R18,R30
000749 30e0      	CPI  R30,0
00074a f411      	BRNE PC+3
00074b 940c 093b 	JMP _0x2000032
00074d 2fe1      	MOV  R30,R17
00074e 30e0      	CPI  R30,0
00074f f439      	BRNE _0x2000036
000750 3225      	CPI  R18,37
000751 f411      	BRNE _0x2000037
000752 e011      	LDI  R17,LOW(1)
000753 c002      	RJMP _0x2000038
                 _0x2000037:
000754 940e 0e2c 	CALL SUBOPT_0x2C
                 _0x2000038:
000756 c1e3      	RJMP _0x2000035
                 _0x2000036:
000757 30e1      	CPI  R30,LOW(0x1)
000758 f4c1      	BRNE _0x2000039
000759 3225      	CPI  R18,37
00075a f419      	BRNE _0x200003A
00075b 940e 0e2c 	CALL SUBOPT_0x2C
00075d c1db      	RJMP _0x200010F
                 _0x200003A:
00075e e012      	LDI  R17,LOW(2)
00075f e0e0      	LDI  R30,LOW(0)
000760 8bed      	STD  Y+21,R30
000761 e000      	LDI  R16,LOW(0)
000762 322d      	CPI  R18,45
000763 f411      	BRNE _0x200003B
000764 e001      	LDI  R16,LOW(1)
000765 c1d4      	RJMP _0x2000035
                 _0x200003B:
000766 322b      	CPI  R18,43
000767 f419      	BRNE _0x200003C
000768 e2eb      	LDI  R30,LOW(43)
000769 8bed      	STD  Y+21,R30
00076a c1cf      	RJMP _0x2000035
                 _0x200003C:
00076b 3220      	CPI  R18,32
00076c f419      	BRNE _0x200003D
00076d e2e0      	LDI  R30,LOW(32)
00076e 8bed      	STD  Y+21,R30
00076f c1ca      	RJMP _0x2000035
                 _0x200003D:
000770 c002      	RJMP _0x200003E
                 _0x2000039:
000771 30e2      	CPI  R30,LOW(0x2)
000772 f439      	BRNE _0x200003F
                 _0x200003E:
000773 e050      	LDI  R21,LOW(0)
000774 e013      	LDI  R17,LOW(3)
000775 3320      	CPI  R18,48
000776 f411      	BRNE _0x2000040
000777 6800      	ORI  R16,LOW(128)
000778 c1c1      	RJMP _0x2000035
                 _0x2000040:
000779 c002      	RJMP _0x2000041
                 _0x200003F:
00077a 30e3      	CPI  R30,LOW(0x3)
00077b f491      	BRNE _0x2000042
                 _0x2000041:
00077c 3320      	CPI  R18,48
00077d f010      	BRLO _0x2000044
00077e 332a      	CPI  R18,58
00077f f008      	BRLO _0x2000045
                 _0x2000044:
000780 c007      	RJMP _0x2000043
                 _0x2000045:
000781 e0aa      	LDI  R26,LOW(10)
000782 9f5a      	MUL  R21,R26
000783 2d50      	MOV  R21,R0
000784 2fe2      	MOV  R30,R18
000785 53e0      	SUBI R30,LOW(48)
000786 0f5e      	ADD  R21,R30
000787 c1b2      	RJMP _0x2000035
                 _0x2000043:
000788 e040      	LDI  R20,LOW(0)
000789 322e      	CPI  R18,46
00078a f411      	BRNE _0x2000046
00078b e014      	LDI  R17,LOW(4)
00078c c1ad      	RJMP _0x2000035
                 _0x2000046:
00078d c00f      	RJMP _0x2000047
                 _0x2000042:
00078e 30e4      	CPI  R30,LOW(0x4)
00078f f499      	BRNE _0x2000049
000790 3320      	CPI  R18,48
000791 f010      	BRLO _0x200004B
000792 332a      	CPI  R18,58
000793 f008      	BRLO _0x200004C
                 _0x200004B:
000794 c008      	RJMP _0x200004A
                 _0x200004C:
000795 6200      	ORI  R16,LOW(32)
000796 e0aa      	LDI  R26,LOW(10)
000797 9f4a      	MUL  R20,R26
000798 2d40      	MOV  R20,R0
000799 2fe2      	MOV  R30,R18
00079a 53e0      	SUBI R30,LOW(48)
00079b 0f4e      	ADD  R20,R30
00079c c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
00079d 362c      	CPI  R18,108
00079e f419      	BRNE _0x200004D
00079f 6002      	ORI  R16,LOW(2)
0007a0 e015      	LDI  R17,LOW(5)
0007a1 c198      	RJMP _0x2000035
                 _0x200004D:
0007a2 c004      	RJMP _0x200004E
                 _0x2000049:
0007a3 30e5      	CPI  R30,LOW(0x5)
0007a4 f011      	BREQ PC+3
0007a5 940c 093a 	JMP _0x2000035
                 _0x200004E:
0007a7 2fe2      	MOV  R30,R18
0007a8 36e3      	CPI  R30,LOW(0x63)
0007a9 f459      	BRNE _0x2000053
0007aa 940e 0e35 	CALL SUBOPT_0x2D
0007ac 940e 0e3c 	CALL SUBOPT_0x2E
0007ae 940e 0e35 	CALL SUBOPT_0x2D
0007b0 81a4      	LDD  R26,Z+4
0007b1 93aa      	ST   -Y,R26
0007b2 940e 0e43 	CALL SUBOPT_0x2F
0007b4 c184      	RJMP _0x2000054
                 _0x2000053:
0007b5 34e5      	CPI  R30,LOW(0x45)
0007b6 f011      	BREQ _0x2000057
0007b7 36e5      	CPI  R30,LOW(0x65)
0007b8 f409      	BRNE _0x2000058
                 _0x2000057:
0007b9 c004      	RJMP _0x2000059
                 _0x2000058:
0007ba 36e6      	CPI  R30,LOW(0x66)
0007bb f011      	BREQ PC+3
0007bc 940c 0808 	JMP _0x200005A
                 _0x2000059:
0007be 01fe      	MOVW R30,R28
0007bf 9676      	ADIW R30,22
0007c0 87ee      	STD  Y+14,R30
0007c1 87ff      	STD  Y+14+1,R31
0007c2 940e 0e4b 	CALL SUBOPT_0x30
0007c4 940e 1135 	CALL __GETD1P
0007c6 940e 0e52 	CALL SUBOPT_0x31
0007c8 940e 0e57 	CALL SUBOPT_0x32
0007ca 85ad      	LDD  R26,Y+13
0007cb 23aa      	TST  R26
0007cc f022      	BRMI _0x200005B
0007cd 89ad      	LDD  R26,Y+21
0007ce 32ab      	CPI  R26,LOW(0x2B)
0007cf f049      	BREQ _0x200005D
0007d0 c017      	RJMP _0x200005E
                 _0x200005B:
0007d1 940e 0e59 	CALL SUBOPT_0x33
0007d3 940e 0f07 	CALL __ANEGF1
0007d5 940e 0e52 	CALL SUBOPT_0x31
0007d7 e2ed      	LDI  R30,LOW(45)
0007d8 8bed      	STD  Y+21,R30
                 _0x200005D:
0007d9 ff07      	SBRS R16,7
0007da c005      	RJMP _0x200005F
0007db 89ed      	LDD  R30,Y+21
0007dc 93ea      	ST   -Y,R30
0007dd 940e 0e43 	CALL SUBOPT_0x2F
0007df c008      	RJMP _0x2000060
                 _0x200005F:
0007e0 85ee      	LDD  R30,Y+14
0007e1 85ff      	LDD  R31,Y+14+1
0007e2 9631      	ADIW R30,1
0007e3 87ee      	STD  Y+14,R30
0007e4 87ff      	STD  Y+14+1,R31
0007e5 9731      	SBIW R30,1
0007e6 89ad      	LDD  R26,Y+21
0007e7 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0007e8 ff05      	SBRS R16,5
0007e9 e046      	LDI  R20,LOW(6)
0007ea 3626      	CPI  R18,102
0007eb f461      	BRNE _0x2000062
0007ec 940e 0e59 	CALL SUBOPT_0x33
0007ee 940e 1151 	CALL __PUTPARD1
0007f0 934a      	ST   -Y,R20
0007f1 89eb      	LDD  R30,Y+19
0007f2 89fc      	LDD  R31,Y+19+1
0007f3 93fa      	ST   -Y,R31
0007f4 93ea      	ST   -Y,R30
0007f5 940e 0c1b 	CALL _ftoa
0007f7 c00b      	RJMP _0x2000063
                 _0x2000062:
0007f8 940e 0e59 	CALL SUBOPT_0x33
0007fa 940e 1151 	CALL __PUTPARD1
0007fc 934a      	ST   -Y,R20
0007fd 932a      	ST   -Y,R18
0007fe 89ec      	LDD  R30,Y+20
0007ff 89fd      	LDD  R31,Y+20+1
000800 93fa      	ST   -Y,R31
000801 93ea      	ST   -Y,R30
000802 de53      	RCALL __ftoe_G100
                 _0x2000063:
000803 01fe      	MOVW R30,R28
000804 9676      	ADIW R30,22
000805 940e 0e5e 	CALL SUBOPT_0x34
000807 c01e      	RJMP _0x2000064
                 _0x200005A:
000808 37e3      	CPI  R30,LOW(0x73)
000809 f439      	BRNE _0x2000066
00080a 940e 0e57 	CALL SUBOPT_0x32
00080c 940e 0e66 	CALL SUBOPT_0x35
00080e 940e 0e5e 	CALL SUBOPT_0x34
000810 c00e      	RJMP _0x2000067
                 _0x2000066:
000811 37e0      	CPI  R30,LOW(0x70)
000812 f4c1      	BRNE _0x2000069
000813 940e 0e57 	CALL SUBOPT_0x32
000815 940e 0e66 	CALL SUBOPT_0x35
000817 87ee      	STD  Y+14,R30
000818 87ff      	STD  Y+14+1,R31
000819 93fa      	ST   -Y,R31
00081a 93ea      	ST   -Y,R30
00081b 940e 0c10 	CALL _strlenf
00081d 2f1e      	MOV  R17,R30
00081e 6008      	ORI  R16,LOW(8)
                 _0x2000067:
00081f 770f      	ANDI R16,LOW(127)
000820 3040      	CPI  R20,0
000821 f011      	BREQ _0x200006B
000822 1741      	CP   R20,R17
000823 f008      	BRLO _0x200006C
                 _0x200006B:
000824 c001      	RJMP _0x200006A
                 _0x200006C:
000825 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000826 e040      	LDI  R20,LOW(0)
000827 e0e0      	LDI  R30,LOW(0)
000828 8bec      	STD  Y+20,R30
000829 e030      	LDI  R19,LOW(0)
00082a c06e      	RJMP _0x200006D
                 _0x2000069:
00082b 36e4      	CPI  R30,LOW(0x64)
00082c f011      	BREQ _0x2000070
00082d 36e9      	CPI  R30,LOW(0x69)
00082e f411      	BRNE _0x2000071
                 _0x2000070:
00082f 6004      	ORI  R16,LOW(4)
000830 c002      	RJMP _0x2000072
                 _0x2000071:
000831 37e5      	CPI  R30,LOW(0x75)
000832 f4a1      	BRNE _0x2000073
                 _0x2000072:
000833 e0ea      	LDI  R30,LOW(10)
000834 8bec      	STD  Y+20,R30
000835 ff01      	SBRS R16,1
000836 c008      	RJMP _0x2000074
                +
000837 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000838 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000839 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00083a e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00083b 940e 0e6b 	CALL SUBOPT_0x36
00083d e01a      	LDI  R17,LOW(10)
00083e c023      	RJMP _0x2000075
                 _0x2000074:
                +
00083f e1e0     +LDI R30 , LOW ( 0x2710 )
000840 e2f7     +LDI R31 , HIGH ( 0x2710 )
000841 e060     +LDI R22 , BYTE3 ( 0x2710 )
000842 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000843 940e 0e6b 	CALL SUBOPT_0x36
000845 e015      	LDI  R17,LOW(5)
000846 c01b      	RJMP _0x2000075
                 _0x2000073:
000847 35e8      	CPI  R30,LOW(0x58)
000848 f411      	BRNE _0x2000077
000849 6008      	ORI  R16,LOW(8)
00084a c004      	RJMP _0x2000078
                 _0x2000077:
00084b 37e8      	CPI  R30,LOW(0x78)
00084c f011      	BREQ PC+3
00084d 940c 0939 	JMP _0x20000B6
                 _0x2000078:
00084f e1e0      	LDI  R30,LOW(16)
000850 8bec      	STD  Y+20,R30
000851 ff01      	SBRS R16,1
000852 c008      	RJMP _0x200007A
                +
000853 e0e0     +LDI R30 , LOW ( 0x10000000 )
000854 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000855 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000856 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000857 940e 0e6b 	CALL SUBOPT_0x36
000859 e018      	LDI  R17,LOW(8)
00085a c007      	RJMP _0x2000075
                 _0x200007A:
                +
00085b e0e0     +LDI R30 , LOW ( 0x1000 )
00085c e1f0     +LDI R31 , HIGH ( 0x1000 )
00085d e060     +LDI R22 , BYTE3 ( 0x1000 )
00085e e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00085f 940e 0e6b 	CALL SUBOPT_0x36
000861 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000862 3040      	CPI  R20,0
000863 f011      	BREQ _0x200007B
000864 770f      	ANDI R16,LOW(127)
000865 c001      	RJMP _0x200007C
                 _0x200007B:
000866 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000867 ff01      	SBRS R16,1
000868 c008      	RJMP _0x200007D
000869 940e 0e57 	CALL SUBOPT_0x32
00086b 940e 0e4b 	CALL SUBOPT_0x30
00086d 9614      	ADIW R26,4
00086e 940e 1135 	CALL __GETD1P
000870 c00f      	RJMP _0x2000110
                 _0x200007D:
000871 ff02      	SBRS R16,2
000872 c007      	RJMP _0x200007F
000873 940e 0e57 	CALL SUBOPT_0x32
000875 940e 0e66 	CALL SUBOPT_0x35
000877 940e 10cb 	CALL __CWD1
000879 c006      	RJMP _0x2000110
                 _0x200007F:
00087a 940e 0e57 	CALL SUBOPT_0x32
00087c 940e 0e66 	CALL SUBOPT_0x35
00087e 2766      	CLR  R22
00087f 2777      	CLR  R23
                 _0x2000110:
                +
000880 87ea     +STD Y + 10 , R30
000881 87fb     +STD Y + 10 + 1 , R31
000882 876c     +STD Y + 10 + 2 , R22
000883 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000884 ff02      	SBRS R16,2
000885 c012      	RJMP _0x2000081
000886 85ad      	LDD  R26,Y+13
000887 23aa      	TST  R26
000888 f442      	BRPL _0x2000082
000889 940e 0e59 	CALL SUBOPT_0x33
00088b 940e 10b8 	CALL __ANEGD1
00088d 940e 0e52 	CALL SUBOPT_0x31
00088f e2ed      	LDI  R30,LOW(45)
000890 8bed      	STD  Y+21,R30
                 _0x2000082:
000891 89ed      	LDD  R30,Y+21
000892 30e0      	CPI  R30,0
000893 f019      	BREQ _0x2000083
000894 5f1f      	SUBI R17,-LOW(1)
000895 5f4f      	SUBI R20,-LOW(1)
000896 c001      	RJMP _0x2000084
                 _0x2000083:
000897 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000898 2f34      	MOV  R19,R20
                 _0x200006D:
000899 fd00      	SBRC R16,0
00089a c014      	RJMP _0x2000085
                 _0x2000086:
00089b 1715      	CP   R17,R21
00089c f410      	BRSH _0x2000089
00089d 1735      	CP   R19,R21
00089e f008      	BRLO _0x200008A
                 _0x2000089:
00089f c00f      	RJMP _0x2000088
                 _0x200008A:
0008a0 ff07      	SBRS R16,7
0008a1 c008      	RJMP _0x200008B
0008a2 ff02      	SBRS R16,2
0008a3 c004      	RJMP _0x200008C
0008a4 7f0b      	ANDI R16,LOW(251)
0008a5 892d      	LDD  R18,Y+21
0008a6 5011      	SUBI R17,LOW(1)
0008a7 c001      	RJMP _0x200008D
                 _0x200008C:
0008a8 e320      	LDI  R18,LOW(48)
                 _0x200008D:
0008a9 c001      	RJMP _0x200008E
                 _0x200008B:
0008aa e220      	LDI  R18,LOW(32)
                 _0x200008E:
0008ab 940e 0e2c 	CALL SUBOPT_0x2C
0008ad 5051      	SUBI R21,LOW(1)
0008ae cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0008af 1714      	CP   R17,R20
0008b0 f490      	BRSH _0x2000091
0008b1 6100      	ORI  R16,LOW(16)
0008b2 ff02      	SBRS R16,2
0008b3 c006      	RJMP _0x2000092
0008b4 940e 0e70 	CALL SUBOPT_0x37
0008b6 f009      	BREQ _0x2000093
0008b7 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0008b8 5011      	SUBI R17,LOW(1)
0008b9 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0008ba e3e0      	LDI  R30,LOW(48)
0008bb 93ea      	ST   -Y,R30
0008bc 940e 0e43 	CALL SUBOPT_0x2F
0008be 3050      	CPI  R21,0
0008bf f009      	BREQ _0x2000094
0008c0 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0008c1 5041      	SUBI R20,LOW(1)
0008c2 cfec      	RJMP _0x200008F
                 _0x2000091:
0008c3 2f31      	MOV  R19,R17
0008c4 89ec      	LDD  R30,Y+20
0008c5 30e0      	CPI  R30,0
0008c6 f4b9      	BRNE _0x2000095
                 _0x2000096:
0008c7 3030      	CPI  R19,0
0008c8 f0a1      	BREQ _0x2000098
0008c9 ff03      	SBRS R16,3
0008ca c006      	RJMP _0x2000099
0008cb 85ee      	LDD  R30,Y+14
0008cc 85ff      	LDD  R31,Y+14+1
0008cd 9125      	LPM  R18,Z+
0008ce 87ee      	STD  Y+14,R30
0008cf 87ff      	STD  Y+14+1,R31
0008d0 c005      	RJMP _0x200009A
                 _0x2000099:
0008d1 85ae      	LDD  R26,Y+14
0008d2 85bf      	LDD  R27,Y+14+1
0008d3 912d      	LD   R18,X+
0008d4 87ae      	STD  Y+14,R26
0008d5 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0008d6 940e 0e2c 	CALL SUBOPT_0x2C
0008d8 3050      	CPI  R21,0
0008d9 f009      	BREQ _0x200009B
0008da 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0008db 5031      	SUBI R19,LOW(1)
0008dc cfea      	RJMP _0x2000096
                 _0x2000098:
0008dd c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0008de 940e 0e84 	CALL SUBOPT_0x38
0008e0 940e 10f0 	CALL __DIVD21U
0008e2 2f2e      	MOV  R18,R30
0008e3 302a      	CPI  R18,10
0008e4 f030      	BRLO _0x20000A0
0008e5 ff03      	SBRS R16,3
0008e6 c002      	RJMP _0x20000A1
0008e7 5c29      	SUBI R18,-LOW(55)
0008e8 c001      	RJMP _0x20000A2
                 _0x20000A1:
0008e9 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0008ea c001      	RJMP _0x20000A3
                 _0x20000A0:
0008eb 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0008ec fd04      	SBRC R16,4
0008ed c021      	RJMP _0x20000A5
0008ee 3321      	CPI  R18,49
0008ef f460      	BRSH _0x20000A7
                +
0008f0 89a8     +LDD R26 , Y + 16
0008f1 89b9     +LDD R27 , Y + 16 + 1
0008f2 898a     +LDD R24 , Y + 16 + 2
0008f3 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0008f4 30a1     +CPI R26 , LOW ( 0x1 )
0008f5 e0e0     +LDI R30 , HIGH ( 0x1 )
0008f6 07be     +CPC R27 , R30
0008f7 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0008f8 078e     +CPC R24 , R30
0008f9 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0008fa 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0008fb f409      	BRNE _0x20000A6
                 _0x20000A7:
0008fc c00b      	RJMP _0x20000A9
                 _0x20000A6:
0008fd 1743      	CP   R20,R19
0008fe f440      	BRSH _0x2000111
0008ff 1753      	CP   R21,R19
000900 f010      	BRLO _0x20000AC
000901 ff00      	SBRS R16,0
000902 c001      	RJMP _0x20000AD
                 _0x20000AC:
000903 c010      	RJMP _0x20000AB
                 _0x20000AD:
000904 e220      	LDI  R18,LOW(32)
000905 ff07      	SBRS R16,7
000906 c008      	RJMP _0x20000AE
                 _0x2000111:
000907 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000908 6100      	ORI  R16,LOW(16)
000909 ff02      	SBRS R16,2
00090a c004      	RJMP _0x20000AF
00090b 940e 0e70 	CALL SUBOPT_0x37
00090d f009      	BREQ _0x20000B0
00090e 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
00090f 940e 0e2c 	CALL SUBOPT_0x2C
000911 3050      	CPI  R21,0
000912 f009      	BREQ _0x20000B1
000913 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000914 5031      	SUBI R19,LOW(1)
000915 940e 0e84 	CALL SUBOPT_0x38
000917 940e 1121 	CALL __MODD21U
000919 940e 0e52 	CALL SUBOPT_0x31
00091b 89ec      	LDD  R30,Y+20
                +
00091c 89a8     +LDD R26 , Y + 16
00091d 89b9     +LDD R27 , Y + 16 + 1
00091e 898a     +LDD R24 , Y + 16 + 2
00091f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000920 27ff      	CLR  R31
000921 2766      	CLR  R22
000922 2777      	CLR  R23
000923 940e 10f0 	CALL __DIVD21U
000925 940e 0e6b 	CALL SUBOPT_0x36
                +
000927 89e8     +LDD R30 , Y + 16
000928 89f9     +LDD R31 , Y + 16 + 1
000929 896a     +LDD R22 , Y + 16 + 2
00092a 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00092b 940e 1168 	CALL __CPD10
00092d f009      	BREQ _0x200009F
00092e cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
00092f ff00      	SBRS R16,0
000930 c008      	RJMP _0x20000B2
                 _0x20000B3:
000931 3050      	CPI  R21,0
000932 f031      	BREQ _0x20000B5
000933 5051      	SUBI R21,LOW(1)
000934 e2e0      	LDI  R30,LOW(32)
000935 93ea      	ST   -Y,R30
000936 940e 0e43 	CALL SUBOPT_0x2F
000938 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000939 e010      	LDI  R17,LOW(0)
                 _0x2000035:
00093a ce06      	RJMP _0x2000030
                 _0x2000032:
00093b 81ae      	LDD  R26,Y+6
00093c 81bf      	LDD  R27,Y+6+1
00093d 940e 1131 	CALL __GETW1P
00093f 940e 1179 	CALL __LOADLOCR6
000941 96ef      	ADIW R28,63
000942 966f      	ADIW R28,31
000943 9508      	RET
                 _sprintf:
000944 92ff      	PUSH R15
000945 2ef8      	MOV  R15,R24
000946 9726      	SBIW R28,6
000947 940e 1174 	CALL __SAVELOCR4
000949 940e 0e8d 	CALL SUBOPT_0x39
00094b 9730      	SBIW R30,0
00094c f419      	BRNE _0x20000B7
00094d efef      	LDI  R30,LOW(65535)
00094e efff      	LDI  R31,HIGH(65535)
00094f c023      	RJMP _0x20A0008
                 _0x20000B7:
000950 01de      	MOVW R26,R28
000951 9616      	ADIW R26,6
000952 940e 10b0 	CALL __ADDW2R15
000954 018d      	MOVW R16,R26
000955 940e 0e8d 	CALL SUBOPT_0x39
000957 83ee      	STD  Y+6,R30
000958 83ff      	STD  Y+6+1,R31
000959 e0e0      	LDI  R30,LOW(0)
00095a 87e8      	STD  Y+8,R30
00095b 87e9      	STD  Y+8+1,R30
00095c 01de      	MOVW R26,R28
00095d 961a      	ADIW R26,10
00095e 940e 0e94 	CALL SUBOPT_0x3A
000960 93fa      	ST   -Y,R31
000961 93ea      	ST   -Y,R30
000962 931a      	ST   -Y,R17
000963 930a      	ST   -Y,R16
000964 e1ef      	LDI  R30,LOW(_put_buff_G100)
000965 e0f6      	LDI  R31,HIGH(_put_buff_G100)
000966 93fa      	ST   -Y,R31
000967 93ea      	ST   -Y,R30
000968 01fe      	MOVW R30,R28
000969 963a      	ADIW R30,10
00096a 93fa      	ST   -Y,R31
00096b 93ea      	ST   -Y,R30
00096c ddbb      	RCALL __print_G100
00096d 019f      	MOVW R18,R30
00096e 81ae      	LDD  R26,Y+6
00096f 81bf      	LDD  R27,Y+6+1
000970 e0e0      	LDI  R30,LOW(0)
000971 93ec      	ST   X,R30
000972 01f9      	MOVW R30,R18
                 _0x20A0008:
000973 940e 117b 	CALL __LOADLOCR4
000975 962a      	ADIW R28,10
000976 90ff      	POP  R15
000977 9508      	RET
                 _get_buff_G100:
000978 931a      	ST   -Y,R17
000979 81a9      	LDD  R26,Y+1
00097a 81ba      	LDD  R27,Y+1+1
00097b e0e0      	LDI  R30,LOW(0)
00097c 93ec      	ST   X,R30
00097d 81ab      	LDD  R26,Y+3
00097e 81bc      	LDD  R27,Y+3+1
00097f 91ec      	LD   R30,X
000980 2f1e      	MOV  R17,R30
000981 30e0      	CPI  R30,0
000982 f019      	BREQ _0x20000BF
000983 e0e0      	LDI  R30,LOW(0)
000984 93ec      	ST   X,R30
000985 c016      	RJMP _0x20000C0
                 _0x20000BF:
000986 81a9      	LDD  R26,Y+1
000987 81ba      	LDD  R27,Y+1+1
000988 9611      	ADIW R26,1
000989 940e 1131 	CALL __GETW1P
00098b 9730      	SBIW R30,0
00098c f071      	BREQ _0x20000C1
00098d 81e9      	LDD  R30,Y+1
00098e 81fa      	LDD  R31,Y+1+1
00098f 81a1      	LDD  R26,Z+1
000990 81b2      	LDD  R27,Z+2
000991 91ec      	LD   R30,X
000992 2f1e      	MOV  R17,R30
000993 30e0      	CPI  R30,0
000994 f029      	BREQ _0x20000C2
000995 81a9      	LDD  R26,Y+1
000996 81ba      	LDD  R27,Y+1+1
000997 9611      	ADIW R26,1
000998 940e 0dce 	CALL SUBOPT_0x1E
                 _0x20000C2:
00099a c001      	RJMP _0x20000C3
                 _0x20000C1:
00099b e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
00099c 2fe1      	MOV  R30,R17
00099d 8118      	LDD  R17,Y+0
                 _0x20A0007:
00099e 9625      	ADIW R28,5
00099f 9508      	RET
                 __scanf_G100:
0009a0 9725      	SBIW R28,5
0009a1 940e 1172 	CALL __SAVELOCR6
0009a3 e0e0      	LDI  R30,LOW(0)
0009a4 e0f0      	LDI  R31,HIGH(0)
0009a5 87e8      	STD  Y+8,R30
0009a6 87f9      	STD  Y+8+1,R31
0009a7 2f4e      	MOV  R20,R30
                 _0x20000C4:
0009a8 89e9      	LDD  R30,Y+17
0009a9 89fa      	LDD  R31,Y+17+1
0009aa 9631      	ADIW R30,1
0009ab 8be9      	STD  Y+17,R30
0009ac 8bfa      	STD  Y+17+1,R31
0009ad 9731      	SBIW R30,1
0009ae 91e4      	LPM  R30,Z
0009af 2f3e      	MOV  R19,R30
0009b0 30e0      	CPI  R30,0
0009b1 f411      	BRNE PC+3
0009b2 940c 0acd 	JMP _0x20000C6
0009b4 940e 0e99 	CALL SUBOPT_0x3B
0009b6 f0c1      	BREQ _0x20000C7
                 _0x20000C8:
0009b7 b7ed      	IN   R30,SPL
0009b8 b7fe      	IN   R31,SPH
0009b9 93fa      	ST   -Y,R31
0009ba 93ea      	ST   -Y,R30
0009bb 934f      	PUSH R20
0009bc 940e 0e9e 	CALL SUBOPT_0x3C
0009be 914f      	POP  R20
0009bf 2f3e      	MOV  R19,R30
0009c0 30e0      	CPI  R30,0
0009c1 f019      	BREQ _0x20000CB
0009c2 940e 0e99 	CALL SUBOPT_0x3B
0009c4 f409      	BRNE _0x20000CC
                 _0x20000CB:
0009c5 c007      	RJMP _0x20000CA
                 _0x20000CC:
0009c6 940e 0ea6 	CALL SUBOPT_0x3D
0009c8 f41c      	BRGE _0x20000CD
0009c9 efef      	LDI  R30,LOW(65535)
0009ca efff      	LDI  R31,HIGH(65535)
0009cb c103      	RJMP _0x20A0005
                 _0x20000CD:
0009cc cfea      	RJMP _0x20000C8
                 _0x20000CA:
0009cd 2f43      	MOV  R20,R19
0009ce c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0009cf 3235      	CPI  R19,37
0009d0 f011      	BREQ PC+3
0009d1 940c 0ab4 	JMP _0x20000CF
0009d3 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0009d4 89e9      	LDD  R30,Y+17
0009d5 89fa      	LDD  R31,Y+17+1
0009d6 9135      	LPM  R19,Z+
0009d7 8be9      	STD  Y+17,R30
0009d8 8bfa      	STD  Y+17+1,R31
0009d9 3330      	CPI  R19,48
0009da f010      	BRLO _0x20000D4
0009db 333a      	CPI  R19,58
0009dc f008      	BRLO _0x20000D3
                 _0x20000D4:
0009dd c007      	RJMP _0x20000D2
                 _0x20000D3:
0009de e0aa      	LDI  R26,LOW(10)
0009df 9f5a      	MUL  R21,R26
0009e0 2d50      	MOV  R21,R0
0009e1 2fe3      	MOV  R30,R19
0009e2 53e0      	SUBI R30,LOW(48)
0009e3 0f5e      	ADD  R21,R30
0009e4 cfef      	RJMP _0x20000D0
                 _0x20000D2:
0009e5 3030      	CPI  R19,0
0009e6 f409      	BRNE _0x20000D6
0009e7 c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0009e8 b7ed      	IN   R30,SPL
0009e9 b7fe      	IN   R31,SPH
0009ea 93fa      	ST   -Y,R31
0009eb 93ea      	ST   -Y,R30
0009ec 934f      	PUSH R20
0009ed 940e 0e9e 	CALL SUBOPT_0x3C
0009ef 914f      	POP  R20
0009f0 2f2e      	MOV  R18,R30
0009f1 93ea      	ST   -Y,R30
0009f2 940e 0be3 	CALL _isspace
0009f4 30e0      	CPI  R30,0
0009f5 f039      	BREQ _0x20000D9
0009f6 940e 0ea6 	CALL SUBOPT_0x3D
0009f8 f41c      	BRGE _0x20000DA
0009f9 efef      	LDI  R30,LOW(65535)
0009fa efff      	LDI  R31,HIGH(65535)
0009fb c0d3      	RJMP _0x20A0005
                 _0x20000DA:
0009fc cfeb      	RJMP _0x20000D7
                 _0x20000D9:
0009fd 3020      	CPI  R18,0
0009fe f409      	BRNE _0x20000DB
0009ff c0c4      	RJMP _0x20000DC
                 _0x20000DB:
000a00 2f42      	MOV  R20,R18
000a01 3050      	CPI  R21,0
000a02 f409      	BRNE _0x20000DD
000a03 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000a04 2fe3      	MOV  R30,R19
000a05 36e3      	CPI  R30,LOW(0x63)
000a06 f499      	BRNE _0x20000E1
000a07 940e 0eab 	CALL SUBOPT_0x3E
000a09 b7ed      	IN   R30,SPL
000a0a b7fe      	IN   R31,SPH
000a0b 93fa      	ST   -Y,R31
000a0c 93ea      	ST   -Y,R30
000a0d 934f      	PUSH R20
000a0e 940e 0e9e 	CALL SUBOPT_0x3C
000a10 914f      	POP  R20
000a11 01d8      	MOVW R26,R16
000a12 93ec      	ST   X,R30
000a13 940e 0ea6 	CALL SUBOPT_0x3D
000a15 f41c      	BRGE _0x20000E2
000a16 efef      	LDI  R30,LOW(65535)
000a17 efff      	LDI  R31,HIGH(65535)
000a18 c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000a19 c097      	RJMP _0x20000E0
                 _0x20000E1:
000a1a 37e3      	CPI  R30,LOW(0x73)
000a1b f541      	BRNE _0x20000EB
000a1c 940e 0eab 	CALL SUBOPT_0x3E
                 _0x20000E4:
000a1e 2fe5      	MOV  R30,R21
000a1f 5051      	SUBI R21,1
000a20 30e0      	CPI  R30,0
000a21 f0f1      	BREQ _0x20000E6
000a22 b7ed      	IN   R30,SPL
000a23 b7fe      	IN   R31,SPH
000a24 93fa      	ST   -Y,R31
000a25 93ea      	ST   -Y,R30
000a26 934f      	PUSH R20
000a27 940e 0e9e 	CALL SUBOPT_0x3C
000a29 914f      	POP  R20
000a2a 2f3e      	MOV  R19,R30
000a2b 30e0      	CPI  R30,0
000a2c f019      	BREQ _0x20000E8
000a2d 940e 0e99 	CALL SUBOPT_0x3B
000a2f f039      	BREQ _0x20000E7
                 _0x20000E8:
000a30 940e 0ea6 	CALL SUBOPT_0x3D
000a32 f41c      	BRGE _0x20000EA
000a33 efef      	LDI  R30,LOW(65535)
000a34 efff      	LDI  R31,HIGH(65535)
000a35 c099      	RJMP _0x20A0005
                 _0x20000EA:
000a36 c009      	RJMP _0x20000E6
                 _0x20000E7:
000a37 931f      	PUSH R17
000a38 930f      	PUSH R16
                +
000a39 5f0f     +SUBI R16 , LOW ( - 1 )
000a3a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a3b 2fe3      	MOV  R30,R19
000a3c 91af      	POP  R26
000a3d 91bf      	POP  R27
000a3e 93ec      	ST   X,R30
000a3f cfde      	RJMP _0x20000E4
                 _0x20000E6:
000a40 01d8      	MOVW R26,R16
000a41 e0e0      	LDI  R30,LOW(0)
000a42 93ec      	ST   X,R30
000a43 c06d      	RJMP _0x20000E0
                 _0x20000EB:
000a44 e0e1      	LDI  R30,LOW(1)
000a45 87ea      	STD  Y+10,R30
000a46 2fe3      	MOV  R30,R19
000a47 36e4      	CPI  R30,LOW(0x64)
000a48 f011      	BREQ _0x20000F0
000a49 36e9      	CPI  R30,LOW(0x69)
000a4a f419      	BRNE _0x20000F1
                 _0x20000F0:
000a4b e0e0      	LDI  R30,LOW(0)
000a4c 87ea      	STD  Y+10,R30
000a4d c002      	RJMP _0x20000F2
                 _0x20000F1:
000a4e 37e5      	CPI  R30,LOW(0x75)
000a4f f411      	BRNE _0x20000F3
                 _0x20000F2:
000a50 e02a      	LDI  R18,LOW(10)
000a51 c008      	RJMP _0x20000EE
                 _0x20000F3:
000a52 37e8      	CPI  R30,LOW(0x78)
000a53 f411      	BRNE _0x20000F4
000a54 e120      	LDI  R18,LOW(16)
000a55 c004      	RJMP _0x20000EE
                 _0x20000F4:
000a56 32e5      	CPI  R30,LOW(0x25)
000a57 f409      	BRNE _0x20000F7
000a58 c05b      	RJMP _0x20000F6
                 _0x20000F7:
000a59 c073      	RJMP _0x20A0006
                 _0x20000EE:
000a5a e0e0      	LDI  R30,LOW(0)
000a5b 83ee      	STD  Y+6,R30
000a5c 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000a5d 2fe5      	MOV  R30,R21
000a5e 5051      	SUBI R21,1
000a5f 30e0      	CPI  R30,0
000a60 f411      	BRNE PC+3
000a61 940c 0aa4 	JMP _0x20000FA
000a63 b7ed      	IN   R30,SPL
000a64 b7fe      	IN   R31,SPH
000a65 93fa      	ST   -Y,R31
000a66 93ea      	ST   -Y,R30
000a67 934f      	PUSH R20
000a68 940e 0e9e 	CALL SUBOPT_0x3C
000a6a 914f      	POP  R20
000a6b 2f3e      	MOV  R19,R30
000a6c 32e1      	CPI  R30,LOW(0x21)
000a6d f438      	BRSH _0x20000FB
000a6e 940e 0ea6 	CALL SUBOPT_0x3D
000a70 f41c      	BRGE _0x20000FC
000a71 efef      	LDI  R30,LOW(65535)
000a72 efff      	LDI  R31,HIGH(65535)
000a73 c05b      	RJMP _0x20A0005
                 _0x20000FC:
000a74 c017      	RJMP _0x20000FD
                 _0x20000FB:
000a75 85ea      	LDD  R30,Y+10
000a76 30e0      	CPI  R30,0
000a77 f439      	BRNE _0x20000FE
000a78 323d      	CPI  R19,45
000a79 f419      	BRNE _0x20000FF
000a7a efef      	LDI  R30,LOW(255)
000a7b 87ea      	STD  Y+10,R30
000a7c cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000a7d e0e1      	LDI  R30,LOW(1)
000a7e 87ea      	STD  Y+10,R30
                 _0x20000FE:
000a7f 3120      	CPI  R18,16
000a80 f431      	BRNE _0x2000101
000a81 933a      	ST   -Y,R19
000a82 940e 0bed 	CALL _isxdigit
000a84 30e0      	CPI  R30,0
000a85 f031      	BREQ _0x20000FD
000a86 c007      	RJMP _0x2000103
                 _0x2000101:
000a87 933a      	ST   -Y,R19
000a88 940e 0bdb 	CALL _isdigit
000a8a 30e0      	CPI  R30,0
000a8b f411      	BRNE _0x2000104
                 _0x20000FD:
000a8c 2f43      	MOV  R20,R19
000a8d c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000a8e 3631      	CPI  R19,97
000a8f f010      	BRLO _0x2000105
000a90 5537      	SUBI R19,LOW(87)
000a91 c005      	RJMP _0x2000106
                 _0x2000105:
000a92 3431      	CPI  R19,65
000a93 f010      	BRLO _0x2000107
000a94 5337      	SUBI R19,LOW(55)
000a95 c001      	RJMP _0x2000108
                 _0x2000107:
000a96 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000a97 2fe2      	MOV  R30,R18
000a98 81ae      	LDD  R26,Y+6
000a99 81bf      	LDD  R27,Y+6+1
000a9a e0f0      	LDI  R31,0
000a9b 940e 10d5 	CALL __MULW12U
000a9d 01df      	MOVW R26,R30
000a9e 2fe3      	MOV  R30,R19
000a9f 940e 0d46 	CALL SUBOPT_0x10
000aa1 83ee      	STD  Y+6,R30
000aa2 83ff      	STD  Y+6+1,R31
000aa3 cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000aa4 940e 0eab 	CALL SUBOPT_0x3E
000aa6 85ea      	LDD  R30,Y+10
000aa7 81ae      	LDD  R26,Y+6
000aa8 81bf      	LDD  R27,Y+6+1
000aa9 e0f0      	LDI  R31,0
000aaa fde7      	SBRC R30,7
000aab efff      	SER  R31
000aac 940e 10d5 	CALL __MULW12U
000aae 01d8      	MOVW R26,R16
000aaf 93ed      	ST   X+,R30
000ab0 93fc      	ST   X,R31
                 _0x20000E0:
000ab1 940e 0e26 	CALL SUBOPT_0x2B
000ab3 c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000ab4 b7ed      	IN   R30,SPL
000ab5 b7fe      	IN   R31,SPH
000ab6 93fa      	ST   -Y,R31
000ab7 93ea      	ST   -Y,R30
000ab8 934f      	PUSH R20
000ab9 940e 0e9e 	CALL SUBOPT_0x3C
000abb 914f      	POP  R20
000abc 17e3      	CP   R30,R19
000abd f071      	BREQ _0x200010A
000abe 940e 0ea6 	CALL SUBOPT_0x3D
000ac0 f41c      	BRGE _0x200010B
000ac1 efef      	LDI  R30,LOW(65535)
000ac2 efff      	LDI  R31,HIGH(65535)
000ac3 c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000ac4 85e8      	LDD  R30,Y+8
000ac5 85f9      	LDD  R31,Y+8+1
000ac6 9730      	SBIW R30,0
000ac7 f419      	BRNE _0x200010C
000ac8 efef      	LDI  R30,LOW(65535)
000ac9 efff      	LDI  R31,HIGH(65535)
000aca c004      	RJMP _0x20A0005
                 _0x200010C:
000acb c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000acc cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000acd 85e8      	LDD  R30,Y+8
000ace 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000acf 940e 1179 	CALL __LOADLOCR6
000ad1 9663      	ADIW R28,19
000ad2 9508      	RET
                 _sscanf:
000ad3 92ff      	PUSH R15
000ad4 2ef8      	MOV  R15,R24
000ad5 9723      	SBIW R28,3
000ad6 931a      	ST   -Y,R17
000ad7 930a      	ST   -Y,R16
000ad8 01de      	MOVW R26,R28
000ad9 9617      	ADIW R26,7
000ada 940e 0e94 	CALL SUBOPT_0x3A
000adc 9730      	SBIW R30,0
000add f419      	BRNE _0x200010D
000ade efef      	LDI  R30,LOW(65535)
000adf efff      	LDI  R31,HIGH(65535)
000ae0 c01c      	RJMP _0x20A0004
                 _0x200010D:
000ae1 01de      	MOVW R26,R28
000ae2 9611      	ADIW R26,1
000ae3 940e 10b0 	CALL __ADDW2R15
000ae5 018d      	MOVW R16,R26
000ae6 01de      	MOVW R26,R28
000ae7 9617      	ADIW R26,7
000ae8 940e 0e94 	CALL SUBOPT_0x3A
000aea 83eb      	STD  Y+3,R30
000aeb 83fc      	STD  Y+3+1,R31
000aec 01de      	MOVW R26,R28
000aed 9615      	ADIW R26,5
000aee 940e 0e94 	CALL SUBOPT_0x3A
000af0 93fa      	ST   -Y,R31
000af1 93ea      	ST   -Y,R30
000af2 931a      	ST   -Y,R17
000af3 930a      	ST   -Y,R16
000af4 e7e8      	LDI  R30,LOW(_get_buff_G100)
000af5 e0f9      	LDI  R31,HIGH(_get_buff_G100)
000af6 93fa      	ST   -Y,R31
000af7 93ea      	ST   -Y,R30
000af8 01fe      	MOVW R30,R28
000af9 9638      	ADIW R30,8
000afa 93fa      	ST   -Y,R31
000afb 93ea      	ST   -Y,R30
000afc dea3      	RCALL __scanf_G100
                 _0x20A0004:
000afd 8119      	LDD  R17,Y+1
000afe 8108      	LDD  R16,Y+0
000aff 9625      	ADIW R28,5
000b00 90ff      	POP  R15
000b01 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000b02 817b         ldd  r23,y+3
000b03 816a         ldd  r22,y+2
000b04 81f9         ldd  r31,y+1
000b05 81e8         ld   r30,y
000b06 fb77         bst  r23,7
000b07 0f77         lsl  r23
000b08 fd67         sbrc r22,7
000b09 6071         sbr  r23,1
000b0a 2f97         mov  r25,r23
000b0b 579e         subi r25,0x7e
000b0c f081         breq __ftrunc0
000b0d f078         brcs __ftrunc0
000b0e 3198         cpi  r25,24
000b0f f490         brsh __ftrunc1
000b10 27aa         clr  r26
000b11 27bb         clr  r27
000b12 2788         clr  r24
                 __ftrunc2:
000b13 9408         sec
000b14 9587         ror  r24
000b15 95b7         ror  r27
000b16 95a7         ror  r26
000b17 959a         dec  r25
000b18 f7d1         brne __ftrunc2
000b19 23ea         and  r30,r26
000b1a 23fb         and  r31,r27
000b1b 2368         and  r22,r24
000b1c c005         rjmp __ftrunc1
                 __ftrunc0:
000b1d 94e8         clt
000b1e 2777         clr  r23
000b1f 27ee         clr  r30
000b20 27ff         clr  r31
000b21 2766         clr  r22
                 __ftrunc1:
000b22 776f         cbr  r22,0x80
000b23 9576         lsr  r23
000b24 f408         brcc __ftrunc3
000b25 6860         sbr  r22,0x80
                 __ftrunc3:
000b26 f977         bld  r23,7
000b27 91a9         ld   r26,y+
000b28 91b9         ld   r27,y+
000b29 9189         ld   r24,y+
000b2a 9199         ld   r25,y+
000b2b 17ea         cp   r30,r26
000b2c 07fb         cpc  r31,r27
000b2d 0768         cpc  r22,r24
000b2e 0779         cpc  r23,r25
000b2f fb97         bst  r25,7
000b30 9508         ret
                 _floor:
000b31 940e 0d2c 	CALL SUBOPT_0xC
000b33 940e 1151 	CALL __PUTPARD1
000b35 940e 0b02 	CALL _ftrunc
000b37 940e 114a 	CALL __PUTD1S0
000b39 f419          brne __floor1
                 __floor0:
000b3a 940e 0d2c 	CALL SUBOPT_0xC
000b3c c09c      	RJMP _0x20A0003
                 __floor1:
000b3d f7e6          brtc __floor0
000b3e 940e 0d2c 	CALL SUBOPT_0xC
                +
000b40 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b41 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b42 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b43 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b44 940e 0fa6 	CALL __SUBF12
000b46 c092      	RJMP _0x20A0003
                 _sin:
000b47 9724      	SBIW R28,4
000b48 931a      	ST   -Y,R17
000b49 e010      	LDI  R17,0
000b4a 940e 0eb6 	CALL SUBOPT_0x3F
                +
000b4c e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000b4d eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000b4e e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000b4f e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000b50 940e 0ffd 	CALL __MULF12
000b52 940e 0ebb 	CALL SUBOPT_0x40
000b54 940e 0ec0 	CALL SUBOPT_0x41
000b56 940e 0e16 	CALL SUBOPT_0x28
000b58 940e 0eb6 	CALL SUBOPT_0x3F
000b5a 940e 0d13 	CALL SUBOPT_0x9
000b5c 940e 0ebb 	CALL SUBOPT_0x40
000b5e 940e 0ec5 	CALL SUBOPT_0x42
000b60 940e 1090 	CALL __CMPF12
000b62 f009      	BREQ PC+2
000b63 f410      	BRCC PC+3
000b64 940c 0b71 	JMP  _0x2020017
000b66 940e 0ec0 	CALL SUBOPT_0x41
                +
000b68 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b69 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b6a e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b6b e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b6c 940e 0fa6 	CALL __SUBF12
000b6e 940e 0ebb 	CALL SUBOPT_0x40
000b70 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000b71 940e 0eb6 	CALL SUBOPT_0x3F
                +
000b73 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000b74 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000b75 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000b76 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000b77 940e 1090 	CALL __CMPF12
000b79 f009      	BREQ PC+2
000b7a f410      	BRCC PC+3
000b7b 940c 0b83 	JMP  _0x2020018
000b7d 940e 0ec5 	CALL SUBOPT_0x42
000b7f 940e 0fa6 	CALL __SUBF12
000b81 940e 0ebb 	CALL SUBOPT_0x40
                 _0x2020018:
000b83 3010      	CPI  R17,0
000b84 f031      	BREQ _0x2020019
000b85 940e 0ec0 	CALL SUBOPT_0x41
000b87 940e 0f07 	CALL __ANEGF1
000b89 940e 0ebb 	CALL SUBOPT_0x40
                 _0x2020019:
000b8b 940e 0ec0 	CALL SUBOPT_0x41
000b8d 940e 0eb6 	CALL SUBOPT_0x3F
000b8f 940e 0ffd 	CALL __MULF12
                +
000b91 83e9     +STD Y + 1 , R30
000b92 83fa     +STD Y + 1 + 1 , R31
000b93 836b     +STD Y + 1 + 2 , R22
000b94 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000b95 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000b96 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000b97 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000b98 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000b99 940e 0ffd 	CALL __MULF12
000b9b 01df      	MOVW R26,R30
000b9c 01cb      	MOVW R24,R22
                +
000b9d e1ed     +LDI R30 , LOW ( 0x422DE51D )
000b9e eef5     +LDI R31 , HIGH ( 0x422DE51D )
000b9f e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000ba0 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000ba1 940e 0d13 	CALL SUBOPT_0x9
000ba3 940e 0ecb 	CALL SUBOPT_0x43
                +
000ba5 e4ac     +LDI R26 , LOW ( 0x4104534C )
000ba6 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000ba7 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000ba8 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000ba9 940e 0fad 	CALL __ADDF12
000bab 940e 0eb6 	CALL SUBOPT_0x3F
000bad 940e 0ffd 	CALL __MULF12
000baf 937f      	PUSH R23
000bb0 936f      	PUSH R22
000bb1 93ff      	PUSH R31
000bb2 93ef      	PUSH R30
                +
000bb3 81e9     +LDD R30 , Y + 1
000bb4 81fa     +LDD R31 , Y + 1 + 1
000bb5 816b     +LDD R22 , Y + 1 + 2
000bb6 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000bb7 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000bb8 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000bb9 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000bba e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000bbb 940e 0fad 	CALL __ADDF12
000bbd 940e 0ecb 	CALL SUBOPT_0x43
                +
000bbf e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000bc0 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000bc1 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000bc2 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000bc3 940e 0fad 	CALL __ADDF12
000bc5 91af      	POP  R26
000bc6 91bf      	POP  R27
000bc7 918f      	POP  R24
000bc8 919f      	POP  R25
000bc9 940e 104b 	CALL __DIVF21
000bcb 8118      	LDD  R17,Y+0
000bcc 9629      	ADIW R28,9
000bcd 9508      	RET
                 _cos:
000bce 940e 1145 	CALL __GETD2S0
                +
000bd0 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000bd1 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000bd2 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000bd3 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000bd4 940e 0fa6 	CALL __SUBF12
000bd6 940e 1151 	CALL __PUTPARD1
000bd8 df6e      	RCALL _sin
                 _0x20A0003:
000bd9 9624      	ADIW R28,4
000bda 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000bdb e0e1          ldi  r30,1
000bdc 91f9          ld   r31,y+
000bdd 33f0          cpi  r31,'0'
000bde f010          brlo isdigit0
000bdf 33fa          cpi  r31,'9'+1
000be0 f008          brlo isdigit1
                 isdigit0:
000be1 27ee          clr  r30
                 isdigit1:
000be2 9508          ret
                 _isspace:
000be3 e0e1          ldi  r30,1
000be4 91f9          ld   r31,y+
000be5 32f0          cpi  r31,' '
000be6 f029          breq isspace1
000be7 30f9          cpi  r31,9
000be8 f010          brlo isspace0
000be9 30fe          cpi  r31,13+1
000bea f008          brlo isspace1
                 isspace0:
000beb 27ee          clr  r30
                 isspace1:
000bec 9508          ret
                 _isxdigit:
000bed e0e1          ldi  r30,1
000bee 91f9          ld   r31,y+
000bef 53f0          subi r31,0x30
000bf0 f040          brcs isxdigit0
000bf1 30fa          cpi  r31,10
000bf2 f038          brcs isxdigit1
000bf3 75ff          andi r31,0x5f
000bf4 50f7          subi r31,7
000bf5 30fa          cpi  r31,10
000bf6 f010          brcs isxdigit0
000bf7 31f0          cpi  r31,16
000bf8 f008          brcs isxdigit1
                 isxdigit0:
000bf9 27ee          clr  r30
                 isxdigit1:
000bfa 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000bfb 91e9          ld   r30,y+
000bfc 91f9          ld   r31,y+
000bfd 91a9          ld   r26,y+
000bfe 91b9          ld   r27,y+
000bff 01cd          movw r24,r26
                 strcpyf0:
000c00 9005      	lpm  r0,z+
000c01 920d          st   x+,r0
000c02 2000          tst  r0
000c03 f7e1          brne strcpyf0
000c04 01fc          movw r30,r24
000c05 9508          ret
                 _strlen:
000c06 91a9          ld   r26,y+
000c07 91b9          ld   r27,y+
000c08 27ee          clr  r30
000c09 27ff          clr  r31
                 strlen0:
000c0a 916d          ld   r22,x+
000c0b 2366          tst  r22
000c0c f011          breq strlen1
000c0d 9631          adiw r30,1
000c0e cffb          rjmp strlen0
                 strlen1:
000c0f 9508          ret
                 _strlenf:
000c10 27aa          clr  r26
000c11 27bb          clr  r27
000c12 91e9          ld   r30,y+
000c13 91f9          ld   r31,y+
                 strlenf0:
000c14 9005      	lpm  r0,z+
000c15 2000          tst  r0
000c16 f011          breq strlenf1
000c17 9611          adiw r26,1
000c18 cffb          rjmp strlenf0
                 strlenf1:
000c19 01fd          movw r30,r26
000c1a 9508          ret
                 
                 	.CSEG
                 _ftoa:
000c1b 9724      	SBIW R28,4
000c1c d0d4      	RCALL SUBOPT_0x4
000c1d e0e0      	LDI  R30,LOW(0)
000c1e 83ea      	STD  Y+2,R30
000c1f e3ef      	LDI  R30,LOW(63)
000c20 83eb      	STD  Y+3,R30
000c21 931a      	ST   -Y,R17
000c22 930a      	ST   -Y,R16
000c23 85eb      	LDD  R30,Y+11
000c24 85fc      	LDD  R31,Y+11+1
000c25 3fef      	CPI  R30,LOW(0xFFFF)
000c26 efaf      	LDI  R26,HIGH(0xFFFF)
000c27 07fa      	CPC  R31,R26
000c28 f429      	BRNE _0x208000D
000c29 d2a8      	RCALL SUBOPT_0x44
                +
000c2a efe4     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000c2b e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000c2c d1a7      	RCALL SUBOPT_0x1F
000c2d c085      	RJMP _0x20A0002
                 _0x208000D:
000c2e 3fef      	CPI  R30,LOW(0x7FFF)
000c2f e7af      	LDI  R26,HIGH(0x7FFF)
000c30 07fa      	CPC  R31,R26
000c31 f429      	BRNE _0x208000C
000c32 d29f      	RCALL SUBOPT_0x44
                +
000c33 efe5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000c34 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000c35 d19e      	RCALL SUBOPT_0x1F
000c36 c07c      	RJMP _0x20A0002
                 _0x208000C:
000c37 85ac      	LDD  R26,Y+12
000c38 23aa      	TST  R26
000c39 f452      	BRPL _0x208000F
                +
000c3a 85e9     +LDD R30 , Y + 9
000c3b 85fa     +LDD R31 , Y + 9 + 1
000c3c 856b     +LDD R22 , Y + 9 + 2
000c3d 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c3e 940e 0f07 	CALL __ANEGF1
000c40 d296      	RCALL SUBOPT_0x45
000c41 d29a      	RCALL SUBOPT_0x46
000c42 e2ed      	LDI  R30,LOW(45)
000c43 93ec      	ST   X,R30
                 _0x208000F:
000c44 85a8      	LDD  R26,Y+8
000c45 30a7      	CPI  R26,LOW(0x7)
000c46 f010      	BRLO _0x2080010
000c47 e0e6      	LDI  R30,LOW(6)
000c48 87e8      	STD  Y+8,R30
                 _0x2080010:
000c49 8518      	LDD  R17,Y+8
                 _0x2080011:
000c4a 2fe1      	MOV  R30,R17
000c4b 5011      	SUBI R17,1
000c4c 30e0      	CPI  R30,0
000c4d f021      	BREQ _0x2080013
000c4e d294      	RCALL SUBOPT_0x47
000c4f d1bf      	RCALL SUBOPT_0x27
000c50 d297      	RCALL SUBOPT_0x48
000c51 cff8      	RJMP _0x2080011
                 _0x2080013:
000c52 d29a      	RCALL SUBOPT_0x49
000c53 940e 0fad 	CALL __ADDF12
000c55 d281      	RCALL SUBOPT_0x45
000c56 e010      	LDI  R17,LOW(0)
                +
000c57 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c58 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c59 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c5a e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000c5b d28c      	RCALL SUBOPT_0x48
                 _0x2080014:
000c5c d290      	RCALL SUBOPT_0x49
000c5d 940e 1090 	CALL __CMPF12
000c5f f060      	BRLO _0x2080016
000c60 d282      	RCALL SUBOPT_0x47
000c61 d19a      	RCALL SUBOPT_0x24
000c62 d285      	RCALL SUBOPT_0x48
000c63 5f1f      	SUBI R17,-LOW(1)
000c64 3217      	CPI  R17,39
000c65 f028      	BRLO _0x2080017
000c66 d26b      	RCALL SUBOPT_0x44
                +
000c67 efe9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000c68 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000c69 d16a      	RCALL SUBOPT_0x1F
000c6a c048      	RJMP _0x20A0002
                 _0x2080017:
000c6b cff0      	RJMP _0x2080014
                 _0x2080016:
000c6c 3010      	CPI  R17,0
000c6d f421      	BRNE _0x2080018
000c6e d26d      	RCALL SUBOPT_0x46
000c6f e3e0      	LDI  R30,LOW(48)
000c70 93ec      	ST   X,R30
000c71 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000c72 2fe1      	MOV  R30,R17
000c73 5011      	SUBI R17,1
000c74 30e0      	CPI  R30,0
000c75 f0c9      	BREQ _0x208001C
000c76 d26c      	RCALL SUBOPT_0x47
000c77 d197      	RCALL SUBOPT_0x27
000c78 d18f      	RCALL SUBOPT_0x26
000c79 d19c      	RCALL SUBOPT_0x28
000c7a d26d      	RCALL SUBOPT_0x48
000c7b d271      	RCALL SUBOPT_0x49
000c7c 940e 104b 	CALL __DIVF21
000c7e 940e 0f3a 	CALL __CFD1U
000c80 2f0e      	MOV  R16,R30
000c81 d25a      	RCALL SUBOPT_0x46
000c82 d19e      	RCALL SUBOPT_0x2A
000c83 e0f0      	LDI  R31,0
000c84 d25e      	RCALL SUBOPT_0x47
000c85 940e 10cb 	CALL __CWD1
000c87 940e 0f73 	CALL __CDF1
000c89 940e 0ffd 	CALL __MULF12
000c8b d26a      	RCALL SUBOPT_0x4A
000c8c d086      	RCALL SUBOPT_0x9
000c8d d249      	RCALL SUBOPT_0x45
000c8e cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000c8f 85e8      	LDD  R30,Y+8
000c90 30e0      	CPI  R30,0
000c91 f0e9      	BREQ _0x20A0001
000c92 d249      	RCALL SUBOPT_0x46
000c93 e2ee      	LDI  R30,LOW(46)
000c94 93ec      	ST   X,R30
                 _0x208001E:
000c95 85e8      	LDD  R30,Y+8
000c96 50e1      	SUBI R30,LOW(1)
000c97 87e8      	STD  Y+8,R30
000c98 5fef      	SUBI R30,-LOW(1)
000c99 f0a9      	BREQ _0x2080020
000c9a d25b      	RCALL SUBOPT_0x4A
000c9b d160      	RCALL SUBOPT_0x24
000c9c d23a      	RCALL SUBOPT_0x45
                +
000c9d 85e9     +LDD R30 , Y + 9
000c9e 85fa     +LDD R31 , Y + 9 + 1
000c9f 856b     +LDD R22 , Y + 9 + 2
000ca0 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000ca1 940e 0f3a 	CALL __CFD1U
000ca3 2f0e      	MOV  R16,R30
000ca4 d237      	RCALL SUBOPT_0x46
000ca5 d17b      	RCALL SUBOPT_0x2A
000ca6 e0f0      	LDI  R31,0
000ca7 d24e      	RCALL SUBOPT_0x4A
000ca8 940e 10cb 	CALL __CWD1
000caa 940e 0f73 	CALL __CDF1
000cac d066      	RCALL SUBOPT_0x9
000cad d229      	RCALL SUBOPT_0x45
000cae cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000caf 81ae      	LDD  R26,Y+6
000cb0 81bf      	LDD  R27,Y+6+1
000cb1 e0e0      	LDI  R30,LOW(0)
000cb2 93ec      	ST   X,R30
                 _0x20A0002:
000cb3 8119      	LDD  R17,Y+1
000cb4 8108      	LDD  R16,Y+0
000cb5 962d      	ADIW R28,13
000cb6 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000cb7 81aa      	LDD  R26,Y+2
000cb8 81bb      	LDD  R27,Y+2+1
000cb9 27ee      	CLR  R30
000cba 0fa1      	ADD  R26,R17
000cbb 1fbe      	ADC  R27,R30
000cbc 91ec      	LD   R30,X
000cbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000cbe 9728      	SBIW R28,8
000cbf 940e 1174 	CALL __SAVELOCR4
                +
000cc1 e020     +LDI R18 , LOW ( 0 )
000cc2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000cc3 89e8      	LDD  R30,Y+16
000cc4 83ec      	STD  Y+4,R30
000cc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000cc6 83ed      	STD  Y+5,R30
000cc7 85ee      	LDD  R30,Y+14
000cc8 85ff      	LDD  R31,Y+14+1
000cc9 940e 10c0 	CALL __ASRW8
000ccb 83ee      	STD  Y+6,R30
000ccc 85ee      	LDD  R30,Y+14
000ccd 83ef      	STD  Y+7,R30
000cce 85ec      	LDD  R30,Y+12
000ccf 85fd      	LDD  R31,Y+12+1
000cd0 940e 10c0 	CALL __ASRW8
000cd2 87e8      	STD  Y+8,R30
000cd3 85ec      	LDD  R30,Y+12
000cd4 87e9      	STD  Y+9,R30
000cd5 e0e0      	LDI  R30,LOW(0)
000cd6 87ea      	STD  Y+10,R30
000cd7 87eb      	STD  Y+11,R30
000cd8 01fe      	MOVW R30,R28
000cd9 9634      	ADIW R30,4
000cda 93fa      	ST   -Y,R31
000cdb 93ea      	ST   -Y,R30
000cdc e0e6      	LDI  R30,LOW(6)
000cdd e0f0      	LDI  R31,HIGH(6)
000cde 93fa      	ST   -Y,R31
000cdf 93ea      	ST   -Y,R30
000ce0 940e 022c 	CALL _CRC16
000ce2 018f      	MOVW R16,R30
000ce3 01f8      	MOVW R30,R16
000ce4 87ea      	STD  Y+10,R30
                +
000ce5 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000ce6 e020     +LDI R18 , LOW ( 0 )
000ce7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000ce8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000ce9 01de      	MOVW R26,R28
000cea 9614      	ADIW R26,4
000ceb 0fa2      	ADD  R26,R18
000cec 1fb3      	ADC  R27,R19
000ced 91ec      	LD   R30,X
000cee 93ea      	ST   -Y,R30
000cef 940c 0226 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000cf1 e0e0      	LDI  R30,LOW(0)
000cf2 83e8      	ST   Y,R30
000cf3 83e9      	STD  Y+1,R30
000cf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000cf5 85ae      	LDD  R26,Y+14
000cf6 85bf      	LDD  R27,Y+14+1
000cf7 940e 1135 	CALL __GETD1P
000cf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000cfa 85ac      	LDD  R26,Y+12
000cfb 85bd      	LDD  R27,Y+12+1
000cfc 940e 1135 	CALL __GETD1P
000cfe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
000cff e3ab     +LDI R26 , LOW ( 0x3E8FDF3B )
000d00 edbf     +LDI R27 , HIGH ( 0x3E8FDF3B )
000d01 e88f     +LDI R24 , BYTE3 ( 0x3E8FDF3B )
000d02 e39e     +LDI R25 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD2N 0x3E8FDF3B
000d03 940e 0ffd 	CALL __MULF12
000d05 01df      	MOVW R26,R30
000d06 01cb      	MOVW R24,R22
                +
000d07 e0e0     +LDI R30 , LOW ( 0x40800000 )
000d08 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000d09 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000d0a e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000d0b 940e 104b 	CALL __DIVF21
000d0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
000d0e 83ec     +STD Y + 4 , R30
000d0f 83fd     +STD Y + 4 + 1 , R31
000d10 836e     +STD Y + 4 + 2 , R22
000d11 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000d12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000d13 940e 115b 	CALL __SWAPD12
000d15 940e 0fa6 	CALL __SUBF12
000d17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
000d18 81ec     +LDD R30 , Y + 4
000d19 81fd     +LDD R31 , Y + 4 + 1
000d1a 816e     +LDD R22 , Y + 4 + 2
000d1b 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000d1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
000d1d ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000d1e ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000d1f e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000d20 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000d21 940e 0ffd 	CALL __MULF12
                +
000d23 e0a0     +LDI R26 , LOW ( 0x41A00000 )
000d24 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000d25 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000d26 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000d27 940e 0ffd 	CALL __MULF12
000d29 940e 0f3c 	CALL __CFD1
000d2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000d2c 940e 1140 	CALL __GETD1S0
000d2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000d2f e0e0      	LDI  R30,LOW(0)
000d30 e0f0      	LDI  R31,HIGH(0)
000d31 93ed      	ST   X+,R30
000d32 93fc      	ST   X,R31
000d33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000d34 93fa      	ST   -Y,R31
000d35 93ea      	ST   -Y,R30
000d36 940e 025b 	CALL _RTU_WriteOperate0
000d38 e0e5      	LDI  R30,LOW(5)
000d39 e0f0      	LDI  R31,HIGH(5)
000d3a 93fa      	ST   -Y,R31
000d3b 93ea      	ST   -Y,R30
000d3c 940c 0efb 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000d3e 93ea      	ST   -Y,R30
000d3f e7e8      	LDI  R30,LOW(120)
000d40 e0f0      	LDI  R31,HIGH(120)
000d41 93fa      	ST   -Y,R31
000d42 93ea      	ST   -Y,R30
000d43 e0e1      	LDI  R30,LOW(1)
000d44 e0f0      	LDI  R31,HIGH(1)
000d45 cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000d46 e0f0      	LDI  R31,0
000d47 0fea      	ADD  R30,R26
000d48 1ffb      	ADC  R31,R27
000d49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000d4a 2da4      	MOV  R26,R4
000d4b e0b0      	LDI  R27,0
000d4c 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000d4d 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000d4e b1ec      	IN   R30,0xC
000d4f 93ec      	ST   X,R30
000d50 9443      	INC  R4
000d51 e0e0      	LDI  R30,LOW(0)
000d52 bde4      	OUT  0x24,R30
000d53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000d54 93ea      	ST   -Y,R30
000d55 93fa      	ST   -Y,R31
000d56 b7ef      	IN   R30,SREG
000d57 93ea      	ST   -Y,R30
000d58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000d59 e0f0      	LDI  R31,0
000d5a 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000d5b 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000d5c 8310      	ST   Z,R17
000d5d 9493      	INC  R9
000d5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
000d5f 93fa      	ST   -Y,R31
000d60 93ea      	ST   -Y,R30
000d61 940c 0efb 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
000d63 940e 10cb 	CALL __CWD1
000d65 940e 0f73 	CALL __CDF1
000d67 01df      	MOVW R26,R30
000d68 01cb      	MOVW R24,R22
                +
000d69 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000d6a e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000d6b e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000d6c e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000d6d 940e 104b 	CALL __DIVF21
000d6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x16:
000d70 93ea      	ST   -Y,R30
000d71 e0e2      	LDI  R30,LOW(2)
000d72 e0f0      	LDI  R31,HIGH(2)
000d73 93fa      	ST   -Y,R31
000d74 93ea      	ST   -Y,R30
000d75 93fa      	ST   -Y,R31
000d76 93ea      	ST   -Y,R30
000d77 940e 026a 	CALL _RTU_ReedOperate0
000d79 e0e5      	LDI  R30,LOW(5)
000d7a e0f0      	LDI  R31,HIGH(5)
000d7b cfe3      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x17:
000d7c 940e 10cb 	CALL __CWD1
000d7e 940e 0f73 	CALL __CDF1
000d80 01df      	MOVW R26,R30
000d81 01cb      	MOVW R24,R22
                +
000d82 e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000d83 effc     +LDI R31 , HIGH ( 0x453EFC29 )
000d84 e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000d85 e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000d86 940e 104b 	CALL __DIVF21
000d88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
                +
000d89 01fe     +MOVW R30 , R28
000d8a 5dea     +SUBI R30 , LOW ( - 550 )
000d8b 4ffd     +SBCI R31 , HIGH ( - 550 )
000d8c 9001     +LD R0 , Z +
000d8d 9011     +LD R1 , Z +
000d8e 9161     +LD R22 , Z +
000d8f 8170     +LD R23 , Z
000d90 01f0     +MOVW R30 , R0
                 	__GETD1SX 550
000d91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
                +
000d92 01de     +MOVW R26 , R28
000d93 5ea2     +SUBI R26 , LOW ( - 542 )
000d94 4fbd     +SBCI R27 , HIGH ( - 542 )
000d95 900d     +LD R0 , X +
000d96 901d     +LD R1 , X +
000d97 918d     +LD R24 , X +
000d98 919c     +LD R25 , X
000d99 01d0     +MOVW R26 , R0
                 	__GETD2SX 542
000d9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
                +
000d9b 01fe     +MOVW R30 , R28
000d9c 5eea     +SUBI R30 , LOW ( - 534 )
000d9d 4ffd     +SBCI R31 , HIGH ( - 534 )
000d9e 9001     +LD R0 , Z +
000d9f 9011     +LD R1 , Z +
000da0 9161     +LD R22 , Z +
000da1 8170     +LD R23 , Z
000da2 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
000da3 dfee      	RCALL SUBOPT_0x19
000da4 940e 0ffd 	CALL __MULF12
000da6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1B:
                +
000da7 01fe     +MOVW R30 , R28
000da8 5ee6     +SUBI R30 , LOW ( - 538 )
000da9 4ffd     +SBCI R31 , HIGH ( - 538 )
000daa 9001     +LD R0 , Z +
000dab 9011     +LD R1 , Z +
000dac 9161     +LD R22 , Z +
000dad 8170     +LD R23 , Z
000dae 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
000daf 01de     +MOVW R26 , R28
000db0 5eaa     +SUBI R26 , LOW ( - 534 )
000db1 4fbd     +SBCI R27 , HIGH ( - 534 )
000db2 900d     +LD R0 , X +
000db3 901d     +LD R1 , X +
000db4 918d     +LD R24 , X +
000db5 919c     +LD R25 , X
000db6 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
000db7 940e 0ffd 	CALL __MULF12
000db9 940e 1151 	CALL __PUTPARD1
000dbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
                +
000dbc 01de     +MOVW R26 , R28
000dbd 5fa6     +SUBI R26 , LOW ( - 522 )
000dbe 4fbd     +SBCI R27 , HIGH ( - 522 )
000dbf 900d     +LD R0 , X +
000dc0 901d     +LD R1 , X +
000dc1 918d     +LD R24 , X +
000dc2 919c     +LD R25 , X
000dc3 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
000dc4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000dc5 01de     +MOVW R26 , R28
000dc6 50ac     +SUBI R26 , LOW ( - 500 )
000dc7 4fbe     +SBCI R27 , HIGH ( - 500 )
000dc8 900d     +LD R0 , X +
000dc9 901d     +LD R1 , X +
000dca 918d     +LD R24 , X +
000dcb 919c     +LD R25 , X
000dcc 01d0     +MOVW R26 , R0
                 	__GETD2SX 500
000dcd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1E:
000dce 91ed      	LD   R30,X+
000dcf 91fd      	LD   R31,X+
000dd0 9631      	ADIW R30,1
000dd1 93fe      	ST   -X,R31
000dd2 93ee      	ST   -X,R30
000dd3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
000dd4 93fa      	ST   -Y,R31
000dd5 93ea      	ST   -Y,R30
000dd6 940c 0bfb 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x20:
                +
000dd8 81ac     +LDD R26 , Y + 4
000dd9 81bd     +LDD R27 , Y + 4 + 1
000dda 818e     +LDD R24 , Y + 4 + 2
000ddb 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000ddc e0e0     +LDI R30 , LOW ( 0x41200000 )
000ddd e0f0     +LDI R31 , HIGH ( 0x41200000 )
000dde e260     +LDI R22 , BYTE3 ( 0x41200000 )
000ddf e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000de0 940e 0ffd 	CALL __MULF12
000de2 cf2b      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x21:
000de3 df34      	RCALL SUBOPT_0xA
                +
000de4 85ac     +LDD R26 , Y + 12
000de5 85bd     +LDD R27 , Y + 12 + 1
000de6 858e     +LDD R24 , Y + 12 + 2
000de7 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000de8 940e 1090 	CALL __CMPF12
000dea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
000deb 85ac     +LDD R26 , Y + 12
000dec 85bd     +LDD R27 , Y + 12 + 1
000ded 858e     +LDD R24 , Y + 12 + 2
000dee 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000def 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x23:
                +
000df0 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000df1 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000df2 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000df3 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000df4 940e 0ffd 	CALL __MULF12
                +
000df6 87ec     +STD Y + 12 , R30
000df7 87fd     +STD Y + 12 + 1 , R31
000df8 876e     +STD Y + 12 + 2 , R22
000df9 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000dfa 5f3f      	SUBI R19,-LOW(1)
000dfb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
                +
000dfc e0e0     +LDI R30 , LOW ( 0x41200000 )
000dfd e0f0     +LDI R31 , HIGH ( 0x41200000 )
000dfe e260     +LDI R22 , BYTE3 ( 0x41200000 )
000dff e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000e00 940e 0ffd 	CALL __MULF12
000e02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
000e03 87ec     +STD Y + 12 , R30
000e04 87fd     +STD Y + 12 + 1 , R31
000e05 876e     +STD Y + 12 + 2 , R22
000e06 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000e07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
000e08 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000e09 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000e0a e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000e0b e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000e0c 940e 0fad 	CALL __ADDF12
000e0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
                +
000e0f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000e10 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000e11 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000e12 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000e13 940e 0ffd 	CALL __MULF12
000e15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000e16 940e 1151 	CALL __PUTPARD1
000e18 940c 0b31 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000e1a 85a8      	LDD  R26,Y+8
000e1b 85b9      	LDD  R27,Y+8+1
000e1c 9611      	ADIW R26,1
000e1d 87a8      	STD  Y+8,R26
000e1e 87b9      	STD  Y+8+1,R27
000e1f 9711      	SBIW R26,1
000e20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000e21 2fe0      	MOV  R30,R16
000e22 5de0      	SUBI R30,-LOW(48)
000e23 93ec      	ST   X,R30
000e24 2fe0      	MOV  R30,R16
000e25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
000e26 85e8      	LDD  R30,Y+8
000e27 85f9      	LDD  R31,Y+8+1
000e28 9631      	ADIW R30,1
000e29 87e8      	STD  Y+8,R30
000e2a 87f9      	STD  Y+8+1,R31
000e2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2C:
000e2c 932a      	ST   -Y,R18
000e2d 81ef      	LDD  R30,Y+7
000e2e 85f8      	LDD  R31,Y+7+1
000e2f 93fa      	ST   -Y,R31
000e30 93ea      	ST   -Y,R30
000e31 85eb      	LDD  R30,Y+11
000e32 85fc      	LDD  R31,Y+11+1
000e33 9509      	ICALL
000e34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2D:
                +
000e35 01fe     +MOVW R30 , R28
000e36 5ae6     +SUBI R30 , LOW ( - 90 )
000e37 4fff     +SBCI R31 , HIGH ( - 90 )
000e38 9001     +LD R0 , Z +
000e39 81f0     +LD R31 , Z
000e3a 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2E:
000e3c 9734      	SBIW R30,4
                +
000e3d 01de     +MOVW R26 , R28
000e3e 5aa6     +SUBI R26 , LOW ( - 90 )
000e3f 4fbf     +SBCI R27 , HIGH ( - 90 )
000e40 93ed     +ST X + , R30
000e41 93fc     +ST X , R31
                 	__PUTW1SX 90
000e42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2F:
000e43 81ef      	LDD  R30,Y+7
000e44 85f8      	LDD  R31,Y+7+1
000e45 93fa      	ST   -Y,R31
000e46 93ea      	ST   -Y,R30
000e47 85eb      	LDD  R30,Y+11
000e48 85fc      	LDD  R31,Y+11+1
000e49 9509      	ICALL
000e4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x30:
                +
000e4b 01de     +MOVW R26 , R28
000e4c 5aa6     +SUBI R26 , LOW ( - 90 )
000e4d 4fbf     +SBCI R27 , HIGH ( - 90 )
000e4e 900d     +LD R0 , X +
000e4f 91bc     +LD R27 , X
000e50 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
                +
000e52 87ea     +STD Y + 10 , R30
000e53 87fb     +STD Y + 10 + 1 , R31
000e54 876c     +STD Y + 10 + 2 , R22
000e55 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x32:
000e57 dfdd      	RCALL SUBOPT_0x2D
000e58 cfe3      	RJMP SUBOPT_0x2E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
                +
000e59 85ea     +LDD R30 , Y + 10
000e5a 85fb     +LDD R31 , Y + 10 + 1
000e5b 856c     +LDD R22 , Y + 10 + 2
000e5c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000e5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x34:
000e5e 87ee      	STD  Y+14,R30
000e5f 87ff      	STD  Y+14+1,R31
000e60 93fa      	ST   -Y,R31
000e61 93ea      	ST   -Y,R30
000e62 940e 0c06 	CALL _strlen
000e64 2f1e      	MOV  R17,R30
000e65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35:
000e66 dfe4      	RCALL SUBOPT_0x30
000e67 9614      	ADIW R26,4
000e68 940e 1131 	CALL __GETW1P
000e6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x36:
                +
000e6b 8be8     +STD Y + 16 , R30
000e6c 8bf9     +STD Y + 16 + 1 , R31
000e6d 8b6a     +STD Y + 16 + 2 , R22
000e6e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000e6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x37:
000e70 7f0b      	ANDI R16,LOW(251)
000e71 89ed      	LDD  R30,Y+21
000e72 93ea      	ST   -Y,R30
                +
000e73 01fe     +MOVW R30 , R28
000e74 5ae9     +SUBI R30 , LOW ( - 87 )
000e75 4fff     +SBCI R31 , HIGH ( - 87 )
000e76 9001     +LD R0 , Z +
000e77 81f0     +LD R31 , Z
000e78 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000e79 93fa      	ST   -Y,R31
000e7a 93ea      	ST   -Y,R30
                +
000e7b 01fe     +MOVW R30 , R28
000e7c 5ae5     +SUBI R30 , LOW ( - 91 )
000e7d 4fff     +SBCI R31 , HIGH ( - 91 )
000e7e 9001     +LD R0 , Z +
000e7f 81f0     +LD R31 , Z
000e80 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000e81 9509      	ICALL
000e82 3050      	CPI  R21,0
000e83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
                +
000e84 89e8     +LDD R30 , Y + 16
000e85 89f9     +LDD R31 , Y + 16 + 1
000e86 896a     +LDD R22 , Y + 16 + 2
000e87 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000e88 85aa     +LDD R26 , Y + 10
000e89 85bb     +LDD R27 , Y + 10 + 1
000e8a 858c     +LDD R24 , Y + 10 + 2
000e8b 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000e8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
000e8d 01de      	MOVW R26,R28
000e8e 961c      	ADIW R26,12
000e8f 940e 10b0 	CALL __ADDW2R15
000e91 940e 1131 	CALL __GETW1P
000e93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
000e94 940e 10b0 	CALL __ADDW2R15
000e96 940e 1131 	CALL __GETW1P
000e98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000e99 933a      	ST   -Y,R19
000e9a 940e 0be3 	CALL _isspace
000e9c 30e0      	CPI  R30,0
000e9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3C:
000e9e 85ed      	LDD  R30,Y+13
000e9f 85fe      	LDD  R31,Y+13+1
000ea0 93fa      	ST   -Y,R31
000ea1 93ea      	ST   -Y,R30
000ea2 89e9      	LDD  R30,Y+17
000ea3 89fa      	LDD  R31,Y+17+1
000ea4 9509      	ICALL
000ea5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D:
000ea6 85ab      	LDD  R26,Y+11
000ea7 85bc      	LDD  R27,Y+11+1
000ea8 91ac      	LD   R26,X
000ea9 30a0      	CPI  R26,0
000eaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3E:
000eab 85ef      	LDD  R30,Y+15
000eac 89f8      	LDD  R31,Y+15+1
000ead 9734      	SBIW R30,4
000eae 87ef      	STD  Y+15,R30
000eaf 8bf8      	STD  Y+15+1,R31
000eb0 85af      	LDD  R26,Y+15
000eb1 89b8      	LDD  R27,Y+15+1
000eb2 9614      	ADIW R26,4
000eb3 910d      	LD   R16,X+
000eb4 911c      	LD   R17,X
000eb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3F:
                +
000eb6 81ad     +LDD R26 , Y + 5
000eb7 81be     +LDD R27 , Y + 5 + 1
000eb8 818f     +LDD R24 , Y + 5 + 2
000eb9 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000eba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40:
                +
000ebb 83ed     +STD Y + 5 , R30
000ebc 83fe     +STD Y + 5 + 1 , R31
000ebd 836f     +STD Y + 5 + 2 , R22
000ebe 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000ebf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41:
                +
000ec0 81ed     +LDD R30 , Y + 5
000ec1 81fe     +LDD R31 , Y + 5 + 1
000ec2 816f     +LDD R22 , Y + 5 + 2
000ec3 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000ec4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
000ec5 dff0      	RCALL SUBOPT_0x3F
                +
000ec6 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000ec7 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000ec8 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000ec9 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000eca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
                +
000ecb 81a9     +LDD R26 , Y + 1
000ecc 81ba     +LDD R27 , Y + 1 + 1
000ecd 818b     +LDD R24 , Y + 1 + 2
000ece 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ecf 940e 0ffd 	CALL __MULF12
000ed1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000ed2 81ee      	LDD  R30,Y+6
000ed3 81ff      	LDD  R31,Y+6+1
000ed4 93fa      	ST   -Y,R31
000ed5 93ea      	ST   -Y,R30
000ed6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
                +
000ed7 87e9     +STD Y + 9 , R30
000ed8 87fa     +STD Y + 9 + 1 , R31
000ed9 876b     +STD Y + 9 + 2 , R22
000eda 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000edb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x46:
000edc 81ae      	LDD  R26,Y+6
000edd 81bf      	LDD  R27,Y+6+1
000ede 9611      	ADIW R26,1
000edf 83ae      	STD  Y+6,R26
000ee0 83bf      	STD  Y+6+1,R27
000ee1 9711      	SBIW R26,1
000ee2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x47:
                +
000ee3 81aa     +LDD R26 , Y + 2
000ee4 81bb     +LDD R27 , Y + 2 + 1
000ee5 818c     +LDD R24 , Y + 2 + 2
000ee6 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000ee7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x48:
                +
000ee8 83ea     +STD Y + 2 , R30
000ee9 83fb     +STD Y + 2 + 1 , R31
000eea 836c     +STD Y + 2 + 2 , R22
000eeb 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000eec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x49:
                +
000eed 81ea     +LDD R30 , Y + 2
000eee 81fb     +LDD R31 , Y + 2 + 1
000eef 816c     +LDD R22 , Y + 2 + 2
000ef0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000ef1 85a9     +LDD R26 , Y + 9
000ef2 85ba     +LDD R27 , Y + 9 + 1
000ef3 858b     +LDD R24 , Y + 9 + 2
000ef4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ef5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
                +
000ef6 85a9     +LDD R26 , Y + 9
000ef7 85ba     +LDD R27 , Y + 9 + 1
000ef8 858b     +LDD R24 , Y + 9 + 2
000ef9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000efa 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000efb 91e9      	ld   r30,y+
000efc 91f9      	ld   r31,y+
000efd 9630      	adiw r30,0
000efe f039      	breq __delay_ms1
                 __delay_ms0:
                +
000eff e686     +LDI R24 , LOW ( 0xE66 )
000f00 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000f01 9701     +SBIW R24 , 1
000f02 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000f03 95a8      	wdr
000f04 9731      	sbiw r30,1
000f05 f7c9      	brne __delay_ms0
                 __delay_ms1:
000f06 9508      	ret
                 
                 __ANEGF1:
000f07 9730      	SBIW R30,0
000f08 4060      	SBCI R22,0
000f09 4070      	SBCI R23,0
000f0a f009      	BREQ __ANEGF10
000f0b 5870      	SUBI R23,0x80
                 __ANEGF10:
000f0c 9508      	RET
                 
                 __ROUND_REPACK:
000f0d 2355      	TST  R21
000f0e f442      	BRPL __REPACK
000f0f 3850      	CPI  R21,0x80
000f10 f411      	BRNE __ROUND_REPACK0
000f11 ffe0      	SBRS R30,0
000f12 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000f13 9631      	ADIW R30,1
000f14 1f69      	ADC  R22,R25
000f15 1f79      	ADC  R23,R25
000f16 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000f17 e850      	LDI  R21,0x80
000f18 2757      	EOR  R21,R23
000f19 f411      	BRNE __REPACK0
000f1a 935f      	PUSH R21
000f1b c0cf      	RJMP __ZERORES
                 __REPACK0:
000f1c 3f5f      	CPI  R21,0xFF
000f1d f031      	BREQ __REPACK1
000f1e 0f66      	LSL  R22
000f1f 0c00      	LSL  R0
000f20 9557      	ROR  R21
000f21 9567      	ROR  R22
000f22 2f75      	MOV  R23,R21
000f23 9508      	RET
                 __REPACK1:
000f24 935f      	PUSH R21
000f25 2000      	TST  R0
000f26 f00a      	BRMI __REPACK2
000f27 c0cf      	RJMP __MAXRES
                 __REPACK2:
000f28 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000f29 e850      	LDI  R21,0x80
000f2a 2e19      	MOV  R1,R25
000f2b 2215      	AND  R1,R21
000f2c 0f88      	LSL  R24
000f2d 1f99      	ROL  R25
000f2e 2795      	EOR  R25,R21
000f2f 0f55      	LSL  R21
000f30 9587      	ROR  R24
                 
                 __UNPACK1:
000f31 e850      	LDI  R21,0x80
000f32 2e07      	MOV  R0,R23
000f33 2205      	AND  R0,R21
000f34 0f66      	LSL  R22
000f35 1f77      	ROL  R23
000f36 2775      	EOR  R23,R21
000f37 0f55      	LSL  R21
000f38 9567      	ROR  R22
000f39 9508      	RET
                 
                 __CFD1U:
000f3a 9468      	SET
000f3b c001      	RJMP __CFD1U0
                 __CFD1:
000f3c 94e8      	CLT
                 __CFD1U0:
000f3d 935f      	PUSH R21
000f3e dff2      	RCALL __UNPACK1
000f3f 3870      	CPI  R23,0x80
000f40 f018      	BRLO __CFD10
000f41 3f7f      	CPI  R23,0xFF
000f42 f408      	BRCC __CFD10
000f43 c0a7      	RJMP __ZERORES
                 __CFD10:
000f44 e156      	LDI  R21,22
000f45 1b57      	SUB  R21,R23
000f46 f4aa      	BRPL __CFD11
000f47 9551      	NEG  R21
000f48 3058      	CPI  R21,8
000f49 f40e      	BRTC __CFD19
000f4a 3059      	CPI  R21,9
                 __CFD19:
000f4b f030      	BRLO __CFD17
000f4c efef      	SER  R30
000f4d efff      	SER  R31
000f4e ef6f      	SER  R22
000f4f e77f      	LDI  R23,0x7F
000f50 f977      	BLD  R23,7
000f51 c01a      	RJMP __CFD15
                 __CFD17:
000f52 2777      	CLR  R23
000f53 2355      	TST  R21
000f54 f0b9      	BREQ __CFD15
                 __CFD18:
000f55 0fee      	LSL  R30
000f56 1fff      	ROL  R31
000f57 1f66      	ROL  R22
000f58 1f77      	ROL  R23
000f59 955a      	DEC  R21
000f5a f7d1      	BRNE __CFD18
000f5b c010      	RJMP __CFD15
                 __CFD11:
000f5c 2777      	CLR  R23
                 __CFD12:
000f5d 3058      	CPI  R21,8
000f5e f028      	BRLO __CFD13
000f5f 2fef      	MOV  R30,R31
000f60 2ff6      	MOV  R31,R22
000f61 2f67      	MOV  R22,R23
000f62 5058      	SUBI R21,8
000f63 cff9      	RJMP __CFD12
                 __CFD13:
000f64 2355      	TST  R21
000f65 f031      	BREQ __CFD15
                 __CFD14:
000f66 9576      	LSR  R23
000f67 9567      	ROR  R22
000f68 95f7      	ROR  R31
000f69 95e7      	ROR  R30
000f6a 955a      	DEC  R21
000f6b f7d1      	BRNE __CFD14
                 __CFD15:
000f6c 2000      	TST  R0
000f6d f40a      	BRPL __CFD16
000f6e d149      	RCALL __ANEGD1
                 __CFD16:
000f6f 915f      	POP  R21
000f70 9508      	RET
                 
                 __CDF1U:
000f71 9468      	SET
000f72 c001      	RJMP __CDF1U0
                 __CDF1:
000f73 94e8      	CLT
                 __CDF1U0:
000f74 9730      	SBIW R30,0
000f75 4060      	SBCI R22,0
000f76 4070      	SBCI R23,0
000f77 f0b1      	BREQ __CDF10
000f78 2400      	CLR  R0
000f79 f026      	BRTS __CDF11
000f7a 2377      	TST  R23
000f7b f412      	BRPL __CDF11
000f7c 9400      	COM  R0
000f7d d13a      	RCALL __ANEGD1
                 __CDF11:
000f7e 2e17      	MOV  R1,R23
000f7f e17e      	LDI  R23,30
000f80 2011      	TST  R1
                 __CDF12:
000f81 f032      	BRMI __CDF13
000f82 957a      	DEC  R23
000f83 0fee      	LSL  R30
000f84 1fff      	ROL  R31
000f85 1f66      	ROL  R22
000f86 1c11      	ROL  R1
000f87 cff9      	RJMP __CDF12
                 __CDF13:
000f88 2fef      	MOV  R30,R31
000f89 2ff6      	MOV  R31,R22
000f8a 2d61      	MOV  R22,R1
000f8b 935f      	PUSH R21
000f8c df8a      	RCALL __REPACK
000f8d 915f      	POP  R21
                 __CDF10:
000f8e 9508      	RET
                 
                 __SWAPACC:
000f8f 934f      	PUSH R20
000f90 01af      	MOVW R20,R30
000f91 01fd      	MOVW R30,R26
000f92 01da      	MOVW R26,R20
000f93 01ab      	MOVW R20,R22
000f94 01bc      	MOVW R22,R24
000f95 01ca      	MOVW R24,R20
000f96 2d40      	MOV  R20,R0
000f97 2c01      	MOV  R0,R1
000f98 2e14      	MOV  R1,R20
000f99 914f      	POP  R20
000f9a 9508      	RET
                 
                 __UADD12:
000f9b 0fea      	ADD  R30,R26
000f9c 1ffb      	ADC  R31,R27
000f9d 1f68      	ADC  R22,R24
000f9e 9508      	RET
                 
                 __NEGMAN1:
000f9f 95e0      	COM  R30
000fa0 95f0      	COM  R31
000fa1 9560      	COM  R22
000fa2 5fef      	SUBI R30,-1
000fa3 4fff      	SBCI R31,-1
000fa4 4f6f      	SBCI R22,-1
000fa5 9508      	RET
                 
                 __SUBF12:
000fa6 935f      	PUSH R21
000fa7 df81      	RCALL __UNPACK
000fa8 3890      	CPI  R25,0x80
000fa9 f171      	BREQ __ADDF129
000faa e850      	LDI  R21,0x80
000fab 2615      	EOR  R1,R21
                 
000fac c004      	RJMP __ADDF120
                 
                 __ADDF12:
000fad 935f      	PUSH R21
000fae df7a      	RCALL __UNPACK
000faf 3890      	CPI  R25,0x80
000fb0 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000fb1 3870      	CPI  R23,0x80
000fb2 f121      	BREQ __ADDF128
                 __ADDF121:
000fb3 2f57      	MOV  R21,R23
000fb4 1b59      	SUB  R21,R25
000fb5 f12b      	BRVS __ADDF1211
000fb6 f412      	BRPL __ADDF122
000fb7 dfd7      	RCALL __SWAPACC
000fb8 cffa      	RJMP __ADDF121
                 __ADDF122:
000fb9 3158      	CPI  R21,24
000fba f018      	BRLO __ADDF123
000fbb 27aa      	CLR  R26
000fbc 27bb      	CLR  R27
000fbd 2788      	CLR  R24
                 __ADDF123:
000fbe 3058      	CPI  R21,8
000fbf f028      	BRLO __ADDF124
000fc0 2fab      	MOV  R26,R27
000fc1 2fb8      	MOV  R27,R24
000fc2 2788      	CLR  R24
000fc3 5058      	SUBI R21,8
000fc4 cff9      	RJMP __ADDF123
                 __ADDF124:
000fc5 2355      	TST  R21
000fc6 f029      	BREQ __ADDF126
                 __ADDF125:
000fc7 9586      	LSR  R24
000fc8 95b7      	ROR  R27
000fc9 95a7      	ROR  R26
000fca 955a      	DEC  R21
000fcb f7d9      	BRNE __ADDF125
                 __ADDF126:
000fcc 2d50      	MOV  R21,R0
000fcd 2551      	EOR  R21,R1
000fce f072      	BRMI __ADDF127
000fcf dfcb      	RCALL __UADD12
000fd0 f438      	BRCC __ADDF129
000fd1 9567      	ROR  R22
000fd2 95f7      	ROR  R31
000fd3 95e7      	ROR  R30
000fd4 9573      	INC  R23
000fd5 f413      	BRVC __ADDF129
000fd6 c020      	RJMP __MAXRES
                 __ADDF128:
000fd7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000fd8 df3e      	RCALL __REPACK
000fd9 915f      	POP  R21
000fda 9508      	RET
                 __ADDF1211:
000fdb f7d8      	BRCC __ADDF128
000fdc cffb      	RJMP __ADDF129
                 __ADDF127:
000fdd 1bea      	SUB  R30,R26
000fde 0bfb      	SBC  R31,R27
000fdf 0b68      	SBC  R22,R24
000fe0 f051      	BREQ __ZERORES
000fe1 f410      	BRCC __ADDF1210
000fe2 9400      	COM  R0
000fe3 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000fe4 2366      	TST  R22
000fe5 f392      	BRMI __ADDF129
000fe6 0fee      	LSL  R30
000fe7 1fff      	ROL  R31
000fe8 1f66      	ROL  R22
000fe9 957a      	DEC  R23
000fea f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000feb 27ee      	CLR  R30
000fec 27ff      	CLR  R31
000fed 2766      	CLR  R22
000fee 2777      	CLR  R23
000fef 915f      	POP  R21
000ff0 9508      	RET
                 
                 __MINRES:
000ff1 efef      	SER  R30
000ff2 efff      	SER  R31
000ff3 e76f      	LDI  R22,0x7F
000ff4 ef7f      	SER  R23
000ff5 915f      	POP  R21
000ff6 9508      	RET
                 
                 __MAXRES:
000ff7 efef      	SER  R30
000ff8 efff      	SER  R31
000ff9 e76f      	LDI  R22,0x7F
000ffa e77f      	LDI  R23,0x7F
000ffb 915f      	POP  R21
000ffc 9508      	RET
                 
                 __MULF12:
000ffd 935f      	PUSH R21
000ffe df2a      	RCALL __UNPACK
000fff 3870      	CPI  R23,0x80
001000 f351      	BREQ __ZERORES
001001 3890      	CPI  R25,0x80
001002 f341      	BREQ __ZERORES
001003 2401      	EOR  R0,R1
001004 9408      	SEC
001005 1f79      	ADC  R23,R25
001006 f423      	BRVC __MULF124
001007 f31c      	BRLT __ZERORES
                 __MULF125:
001008 2000      	TST  R0
001009 f33a      	BRMI __MINRES
00100a cfec      	RJMP __MAXRES
                 __MULF124:
00100b 920f      	PUSH R0
00100c 931f      	PUSH R17
00100d 932f      	PUSH R18
00100e 933f      	PUSH R19
00100f 934f      	PUSH R20
001010 2711      	CLR  R17
001011 2722      	CLR  R18
001012 2799      	CLR  R25
001013 9f68      	MUL  R22,R24
001014 01a0      	MOVW R20,R0
001015 9f8f      	MUL  R24,R31
001016 2d30      	MOV  R19,R0
001017 0d41      	ADD  R20,R1
001018 1f59      	ADC  R21,R25
001019 9f6b      	MUL  R22,R27
00101a 0d30      	ADD  R19,R0
00101b 1d41      	ADC  R20,R1
00101c 1f59      	ADC  R21,R25
00101d 9f8e      	MUL  R24,R30
00101e d027      	RCALL __MULF126
00101f 9fbf      	MUL  R27,R31
001020 d025      	RCALL __MULF126
001021 9f6a      	MUL  R22,R26
001022 d023      	RCALL __MULF126
001023 9fbe      	MUL  R27,R30
001024 d01d      	RCALL __MULF127
001025 9faf      	MUL  R26,R31
001026 d01b      	RCALL __MULF127
001027 9fae      	MUL  R26,R30
001028 0d11      	ADD  R17,R1
001029 1f29      	ADC  R18,R25
00102a 1f39      	ADC  R19,R25
00102b 1f49      	ADC  R20,R25
00102c 1f59      	ADC  R21,R25
00102d 2fe3      	MOV  R30,R19
00102e 2ff4      	MOV  R31,R20
00102f 2f65      	MOV  R22,R21
001030 2f52      	MOV  R21,R18
001031 914f      	POP  R20
001032 913f      	POP  R19
001033 912f      	POP  R18
001034 911f      	POP  R17
001035 900f      	POP  R0
001036 2366      	TST  R22
001037 f02a      	BRMI __MULF122
001038 0f55      	LSL  R21
001039 1fee      	ROL  R30
00103a 1fff      	ROL  R31
00103b 1f66      	ROL  R22
00103c c002      	RJMP __MULF123
                 __MULF122:
00103d 9573      	INC  R23
00103e f24b      	BRVS __MULF125
                 __MULF123:
00103f decd      	RCALL __ROUND_REPACK
001040 915f      	POP  R21
001041 9508      	RET
                 
                 __MULF127:
001042 0d10      	ADD  R17,R0
001043 1d21      	ADC  R18,R1
001044 1f39      	ADC  R19,R25
001045 c002      	RJMP __MULF128
                 __MULF126:
001046 0d20      	ADD  R18,R0
001047 1d31      	ADC  R19,R1
                 __MULF128:
001048 1f49      	ADC  R20,R25
001049 1f59      	ADC  R21,R25
00104a 9508      	RET
                 
                 __DIVF21:
00104b 935f      	PUSH R21
00104c dedc      	RCALL __UNPACK
00104d 3870      	CPI  R23,0x80
00104e f421      	BRNE __DIVF210
00104f 2011      	TST  R1
                 __DIVF211:
001050 f40a      	BRPL __DIVF219
001051 cf9f      	RJMP __MINRES
                 __DIVF219:
001052 cfa4      	RJMP __MAXRES
                 __DIVF210:
001053 3890      	CPI  R25,0x80
001054 f409      	BRNE __DIVF218
                 __DIVF217:
001055 cf95      	RJMP __ZERORES
                 __DIVF218:
001056 2401      	EOR  R0,R1
001057 9408      	SEC
001058 0b97      	SBC  R25,R23
001059 f41b      	BRVC __DIVF216
00105a f3d4      	BRLT __DIVF217
00105b 2000      	TST  R0
00105c cff3      	RJMP __DIVF211
                 __DIVF216:
00105d 2f79      	MOV  R23,R25
00105e 931f      	PUSH R17
00105f 932f      	PUSH R18
001060 933f      	PUSH R19
001061 934f      	PUSH R20
001062 2411      	CLR  R1
001063 2711      	CLR  R17
001064 2722      	CLR  R18
001065 2733      	CLR  R19
001066 2744      	CLR  R20
001067 2755      	CLR  R21
001068 e290      	LDI  R25,32
                 __DIVF212:
001069 17ae      	CP   R26,R30
00106a 07bf      	CPC  R27,R31
00106b 0786      	CPC  R24,R22
00106c 0741      	CPC  R20,R17
00106d f030      	BRLO __DIVF213
00106e 1bae      	SUB  R26,R30
00106f 0bbf      	SBC  R27,R31
001070 0b86      	SBC  R24,R22
001071 0b41      	SBC  R20,R17
001072 9408      	SEC
001073 c001      	RJMP __DIVF214
                 __DIVF213:
001074 9488      	CLC
                 __DIVF214:
001075 1f55      	ROL  R21
001076 1f22      	ROL  R18
001077 1f33      	ROL  R19
001078 1c11      	ROL  R1
001079 1faa      	ROL  R26
00107a 1fbb      	ROL  R27
00107b 1f88      	ROL  R24
00107c 1f44      	ROL  R20
00107d 959a      	DEC  R25
00107e f751      	BRNE __DIVF212
00107f 01f9      	MOVW R30,R18
001080 2d61      	MOV  R22,R1
001081 914f      	POP  R20
001082 913f      	POP  R19
001083 912f      	POP  R18
001084 911f      	POP  R17
001085 2366      	TST  R22
001086 f032      	BRMI __DIVF215
001087 0f55      	LSL  R21
001088 1fee      	ROL  R30
001089 1fff      	ROL  R31
00108a 1f66      	ROL  R22
00108b 957a      	DEC  R23
00108c f243      	BRVS __DIVF217
                 __DIVF215:
00108d de7f      	RCALL __ROUND_REPACK
00108e 915f      	POP  R21
00108f 9508      	RET
                 
                 __CMPF12:
001090 2399      	TST  R25
001091 f09a      	BRMI __CMPF120
001092 2377      	TST  R23
001093 f042      	BRMI __CMPF121
001094 1797      	CP   R25,R23
001095 f048      	BRLO __CMPF122
001096 f429      	BRNE __CMPF121
001097 17ae      	CP   R26,R30
001098 07bf      	CPC  R27,R31
001099 0786      	CPC  R24,R22
00109a f020      	BRLO __CMPF122
00109b f031      	BREQ __CMPF123
                 __CMPF121:
00109c 9498      	CLZ
00109d 9488      	CLC
00109e 9508      	RET
                 __CMPF122:
00109f 9498      	CLZ
0010a0 9408      	SEC
0010a1 9508      	RET
                 __CMPF123:
0010a2 9418      	SEZ
0010a3 9488      	CLC
0010a4 9508      	RET
                 __CMPF120:
0010a5 2377      	TST  R23
0010a6 f7c2      	BRPL __CMPF122
0010a7 1797      	CP   R25,R23
0010a8 f398      	BRLO __CMPF121
0010a9 f7a9      	BRNE __CMPF122
0010aa 17ea      	CP   R30,R26
0010ab 07fb      	CPC  R31,R27
0010ac 0768      	CPC  R22,R24
0010ad f388      	BRLO __CMPF122
0010ae f399      	BREQ __CMPF123
0010af cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0010b0 2400      	CLR  R0
0010b1 0daf      	ADD  R26,R15
0010b2 1db0      	ADC  R27,R0
0010b3 9508      	RET
                 
                 __ANEGW1:
0010b4 95f1      	NEG  R31
0010b5 95e1      	NEG  R30
0010b6 40f0      	SBCI R31,0
0010b7 9508      	RET
                 
                 __ANEGD1:
0010b8 95f0      	COM  R31
0010b9 9560      	COM  R22
0010ba 9570      	COM  R23
0010bb 95e1      	NEG  R30
0010bc 4fff      	SBCI R31,-1
0010bd 4f6f      	SBCI R22,-1
0010be 4f7f      	SBCI R23,-1
0010bf 9508      	RET
                 
                 __ASRW8:
0010c0 2fef      	MOV  R30,R31
0010c1 27ff      	CLR  R31
0010c2 fde7      	SBRC R30,7
0010c3 efff      	SER  R31
0010c4 9508      	RET
                 
                 __CBD1:
0010c5 2ffe      	MOV  R31,R30
0010c6 0fff      	ADD  R31,R31
0010c7 0bff      	SBC  R31,R31
0010c8 2f6f      	MOV  R22,R31
0010c9 2f7f      	MOV  R23,R31
0010ca 9508      	RET
                 
                 __CWD1:
0010cb 2f6f      	MOV  R22,R31
0010cc 0f66      	ADD  R22,R22
0010cd 0b66      	SBC  R22,R22
0010ce 2f76      	MOV  R23,R22
0010cf 9508      	RET
                 
                 __CWD2:
0010d0 2f8b      	MOV  R24,R27
0010d1 0f88      	ADD  R24,R24
0010d2 0b88      	SBC  R24,R24
0010d3 2f98      	MOV  R25,R24
0010d4 9508      	RET
                 
                 __MULW12U:
0010d5 9ffa      	MUL  R31,R26
0010d6 2df0      	MOV  R31,R0
0010d7 9feb      	MUL  R30,R27
0010d8 0df0      	ADD  R31,R0
0010d9 9fea      	MUL  R30,R26
0010da 2de0      	MOV  R30,R0
0010db 0df1      	ADD  R31,R1
0010dc 9508      	RET
                 
                 __DIVB21U:
0010dd 2400      	CLR  R0
0010de e098      	LDI  R25,8
                 __DIVB21U1:
0010df 0faa      	LSL  R26
0010e0 1c00      	ROL  R0
0010e1 1a0e      	SUB  R0,R30
0010e2 f410      	BRCC __DIVB21U2
0010e3 0e0e      	ADD  R0,R30
0010e4 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0010e5 60a1      	SBR  R26,1
                 __DIVB21U3:
0010e6 959a      	DEC  R25
0010e7 f7b9      	BRNE __DIVB21U1
0010e8 2fea      	MOV  R30,R26
0010e9 2da0      	MOV  R26,R0
0010ea 9508      	RET
                 
                 __DIVB21:
0010eb d039      	RCALL __CHKSIGNB
0010ec dff0      	RCALL __DIVB21U
0010ed f40e      	BRTC __DIVB211
0010ee 95e1      	NEG  R30
                 __DIVB211:
0010ef 9508      	RET
                 
                 __DIVD21U:
0010f0 933f      	PUSH R19
0010f1 934f      	PUSH R20
0010f2 935f      	PUSH R21
0010f3 2400      	CLR  R0
0010f4 2411      	CLR  R1
0010f5 2744      	CLR  R20
0010f6 2755      	CLR  R21
0010f7 e230      	LDI  R19,32
                 __DIVD21U1:
0010f8 0faa      	LSL  R26
0010f9 1fbb      	ROL  R27
0010fa 1f88      	ROL  R24
0010fb 1f99      	ROL  R25
0010fc 1c00      	ROL  R0
0010fd 1c11      	ROL  R1
0010fe 1f44      	ROL  R20
0010ff 1f55      	ROL  R21
001100 1a0e      	SUB  R0,R30
001101 0a1f      	SBC  R1,R31
001102 0b46      	SBC  R20,R22
001103 0b57      	SBC  R21,R23
001104 f428      	BRCC __DIVD21U2
001105 0e0e      	ADD  R0,R30
001106 1e1f      	ADC  R1,R31
001107 1f46      	ADC  R20,R22
001108 1f57      	ADC  R21,R23
001109 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00110a 60a1      	SBR  R26,1
                 __DIVD21U3:
00110b 953a      	DEC  R19
00110c f759      	BRNE __DIVD21U1
00110d 01fd      	MOVW R30,R26
00110e 01bc      	MOVW R22,R24
00110f 01d0      	MOVW R26,R0
001110 01ca      	MOVW R24,R20
001111 915f      	POP  R21
001112 914f      	POP  R20
001113 913f      	POP  R19
001114 9508      	RET
                 
                 __MODB21:
001115 94e8      	CLT
001116 ffa7      	SBRS R26,7
001117 c002      	RJMP __MODB211
001118 95a1      	NEG  R26
001119 9468      	SET
                 __MODB211:
00111a fde7      	SBRC R30,7
00111b 95e1      	NEG  R30
00111c dfc0      	RCALL __DIVB21U
00111d 2fea      	MOV  R30,R26
00111e f40e      	BRTC __MODB212
00111f 95e1      	NEG  R30
                 __MODB212:
001120 9508      	RET
                 
                 __MODD21U:
001121 dfce      	RCALL __DIVD21U
001122 01fd      	MOVW R30,R26
001123 01bc      	MOVW R22,R24
001124 9508      	RET
                 
                 __CHKSIGNB:
001125 94e8      	CLT
001126 ffe7      	SBRS R30,7
001127 c002      	RJMP __CHKSB1
001128 95e1      	NEG  R30
001129 9468      	SET
                 __CHKSB1:
00112a ffa7      	SBRS R26,7
00112b c004      	RJMP __CHKSB2
00112c 95a1      	NEG  R26
00112d f800      	BLD  R0,0
00112e 9403      	INC  R0
00112f fa00      	BST  R0,0
                 __CHKSB2:
001130 9508      	RET
                 
                 __GETW1P:
001131 91ed      	LD   R30,X+
001132 91fc      	LD   R31,X
001133 9711      	SBIW R26,1
001134 9508      	RET
                 
                 __GETD1P:
001135 91ed      	LD   R30,X+
001136 91fd      	LD   R31,X+
001137 916d      	LD   R22,X+
001138 917c      	LD   R23,X
001139 9713      	SBIW R26,3
00113a 9508      	RET
                 
                 __PUTDP1:
00113b 93ed      	ST   X+,R30
00113c 93fd      	ST   X+,R31
00113d 936d      	ST   X+,R22
00113e 937c      	ST   X,R23
00113f 9508      	RET
                 
                 __GETD1S0:
001140 81e8      	LD   R30,Y
001141 81f9      	LDD  R31,Y+1
001142 816a      	LDD  R22,Y+2
001143 817b      	LDD  R23,Y+3
001144 9508      	RET
                 
                 __GETD2S0:
001145 81a8      	LD   R26,Y
001146 81b9      	LDD  R27,Y+1
001147 818a      	LDD  R24,Y+2
001148 819b      	LDD  R25,Y+3
001149 9508      	RET
                 
                 __PUTD1S0:
00114a 83e8      	ST   Y,R30
00114b 83f9      	STD  Y+1,R31
00114c 836a      	STD  Y+2,R22
00114d 837b      	STD  Y+3,R23
00114e 9508      	RET
                 
                 __PUTPARD1L:
00114f e060      	LDI  R22,0
001150 e070      	LDI  R23,0
                 __PUTPARD1:
001151 937a      	ST   -Y,R23
001152 936a      	ST   -Y,R22
001153 93fa      	ST   -Y,R31
001154 93ea      	ST   -Y,R30
001155 9508      	RET
                 
                 __CDF2U:
001156 9468      	SET
001157 c001      	RJMP __CDF2U0
                 __CDF2:
001158 94e8      	CLT
                 __CDF2U0:
001159 d001      	RCALL __SWAPD12
00115a de19      	RCALL __CDF1U0
                 
                 __SWAPD12:
00115b 2e18      	MOV  R1,R24
00115c 2f86      	MOV  R24,R22
00115d 2d61      	MOV  R22,R1
00115e 2e19      	MOV  R1,R25
00115f 2f97      	MOV  R25,R23
001160 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001161 2e1b      	MOV  R1,R27
001162 2fbf      	MOV  R27,R31
001163 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001164 2e1a      	MOV  R1,R26
001165 2fae      	MOV  R26,R30
001166 2de1      	MOV  R30,R1
001167 9508      	RET
                 
                 __CPD10:
001168 9730      	SBIW R30,0
001169 4060      	SBCI R22,0
00116a 4070      	SBCI R23,0
00116b 9508      	RET
                 
                 __CPD02:
00116c 2400      	CLR  R0
00116d 160a      	CP   R0,R26
00116e 060b      	CPC  R0,R27
00116f 0608      	CPC  R0,R24
001170 0609      	CPC  R0,R25
001171 9508      	RET
                 
                 __SAVELOCR6:
001172 935a      	ST   -Y,R21
                 __SAVELOCR5:
001173 934a      	ST   -Y,R20
                 __SAVELOCR4:
001174 933a      	ST   -Y,R19
                 __SAVELOCR3:
001175 932a      	ST   -Y,R18
                 __SAVELOCR2:
001176 931a      	ST   -Y,R17
001177 930a      	ST   -Y,R16
001178 9508      	RET
                 
                 __LOADLOCR6:
001179 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00117a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00117b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00117c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00117d 8119      	LDD  R17,Y+1
00117e 8108      	LD   R16,Y
00117f 9508      	RET
                 
                 __INITLOCW:
001180 0fac      	ADD  R26,R28
001181 1fbd      	ADC  R27,R29
                 __INITLOC0:
001182 9005      	LPM  R0,Z+
001183 920d      	ST   X+,R0
001184 9701      	SBIW R24,1
001185 f7e1      	BRNE __INITLOC0
001186 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 121 r1 :  54 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   6 r9 :   4 r10:   0 r11:   0 r12:   5 r13:   2 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  72 r21: 105 r22: 157 r23: 140 
r24: 103 r25:  89 r26: 321 r27: 165 r28: 107 r29:   3 r30: 852 r31: 368 
x  : 190 y  : 604 z  :  75 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  22 
adiw  :  54 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  69 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  79 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 359 
cbi   :   2 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  71 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  23 cpc   :  28 cpi   : 126 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  26 inc   :   6 jmp   :  54 ld    : 152 ldd   : 284 
ldi   : 425 lds   :  10 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 114 
movw  : 160 mul   :  15 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  30 pop   :  57 push  :  57 rcall :  88 
ret   : 135 reti  :   3 rjmp  : 195 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  78 sbi   :   6 sbic  :   0 sbis  :   2 sbiw  :  47 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 291 std   : 128 sts   :  13 sub   :   6 subi  : 115 
swap  :   0 tst   :  27 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00230e   8334    640   8974  131072   6.8%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 11 warnings
