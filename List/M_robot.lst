
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Tue Feb 18 10:46:52 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _CHECK_GETS=R8
                 	.DEF _CHECK_CONTROL=R11
                 	.DEF _TIMER1_OVERFLOW=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0181 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 037d 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0389 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0383 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 033c 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0357 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x49:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1184): warning: .cseg .db misalignment - padding zero byte
000162 0000      	.DB  0x0
                 _0x69:
000163 0000
000164 0000
000165 0000
000166 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000167 0000      	.DB  0x0,0x0
                 _0x0:
000168 2e25
000169 6633
00016a 202c
00016b 2e25      	.DB  0x25,0x2E,0x33,0x66,0x2C,0x20,0x25,0x2E
00016c 6633
00016d 202c
00016e 3425
00016f 0a64      	.DB  0x33,0x66,0x2C,0x20,0x25,0x34,0x64,0xA
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1191): warning: .cseg .db misalignment - padding zero byte
000170 0000      	.DB  0x0
                 _0x2000000:
000171 4e2d
000172 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1193): warning: .cseg .db misalignment - padding zero byte
000173 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1195): warning: .cseg .db misalignment - padding zero byte
000174 0001      	.DB  0x1
                 _0x2080000:
000175 4e2d
000176 4e41
000177 4900
000178 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1198): warning: .cseg .db misalignment - padding zero byte
000179 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00017a 000a      	.DW  0x0A
00017b 0004      	.DW  0x04
00017c 02c6      	.DW  _0x69*2
                 
00017d 0001      	.DW  0x01
00017e 0578      	.DW  __seed_G104
00017f 02e8      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000180 0000      	.DW  0
                 
                 __RESET:
000181 94f8      	CLI
000182 27ee      	CLR  R30
000183 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000184 e0f1      	LDI  R31,1
000185 bff5      	OUT  MCUCR,R31
000186 bfe5      	OUT  MCUCR,R30
000187 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
000189 e1f8      	LDI  R31,0x18
00018a bdf1      	OUT  WDTCR,R31
00018b bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00018c e08d      	LDI  R24,(14-2)+1
00018d e0a2      	LDI  R26,2
00018e 27bb      	CLR  R27
                 __CLEAR_REG:
00018f 93ed      	ST   X+,R30
000190 958a      	DEC  R24
000191 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000192 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000193 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000194 e0a0      	LDI  R26,LOW(__SRAM_START)
000195 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000196 93ed      	ST   X+,R30
000197 9701      	SBIW R24,1
000198 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000199 efe4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00019a e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00019b 9185      	LPM  R24,Z+
00019c 9195      	LPM  R25,Z+
00019d 9700      	SBIW R24,0
00019e f061      	BREQ __GLOBAL_INI_END
00019f 91a5      	LPM  R26,Z+
0001a0 91b5      	LPM  R27,Z+
0001a1 9005      	LPM  R0,Z+
0001a2 9015      	LPM  R1,Z+
0001a3 01bf      	MOVW R22,R30
0001a4 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001a5 9005      	LPM  R0,Z+
0001a6 920d      	ST   X+,R0
0001a7 9701      	SBIW R24,1
0001a8 f7e1      	BRNE __GLOBAL_INI_LOOP
0001a9 01fb      	MOVW R30,R22
0001aa cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001ab bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001ac efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001ad bfed      	OUT  SPL,R30
0001ae e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001af bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b0 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b1 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b2 940c 0396 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 25
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.281
                 ;#define Gearratio 20
                 ;
                 ;#define Circular 57.29                      // 180 / PI
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned char CHECK_CONTROL = 0;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0025 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0026     UCSR1A = 0x00;
                 ;	bps -> Y+0
0001b4 e0e0      	LDI  R30,LOW(0)
0001b5 93e0 009b 	STS  155,R30
                 ; 0000 0027     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0001b7 e9e8      	LDI  R30,LOW(152)
0001b8 93e0 009a 	STS  154,R30
                 ; 0000 0028     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0001ba e0e6      	LDI  R30,LOW(6)
0001bb 93e0 009d 	STS  157,R30
                 ; 0000 0029     UCSR1C &= ~(1<<UMSEL1);
0001bd 91e0 009d 	LDS  R30,157
0001bf 7bef      	ANDI R30,0xBF
0001c0 93e0 009d 	STS  157,R30
                 ; 0000 002A 
                 ; 0000 002B     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0001c2 81e8      	LD   R30,Y
0001c3 81f9      	LDD  R31,Y+1
0001c4 940e 0e97 	CALL __ASRW8
0001c6 93e0 0098 	STS  152,R30
                 ; 0000 002C     UBRR1L = (unsigned char)(bps & 0x00ff);
0001c8 81e8      	LD   R30,Y
0001c9 93e0 0099 	STS  153,R30
                 ; 0000 002D }
0001cb c014      	RJMP _0x20A000C
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 0030 {
                 _usart0_init:
                 ; 0000 0031     UCSR0A = 0x00;
                 ;	bps -> Y+0
0001cc e0e0      	LDI  R30,LOW(0)
0001cd b9eb      	OUT  0xB,R30
                 ; 0000 0032     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0001ce e9e8      	LDI  R30,LOW(152)
0001cf b9ea      	OUT  0xA,R30
                 ; 0000 0033     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0001d0 e0e6      	LDI  R30,LOW(6)
0001d1 93e0 0095 	STS  149,R30
                 ; 0000 0034     UCSR0C &= ~(1<<UMSEL0);
0001d3 91e0 0095 	LDS  R30,149
0001d5 7bef      	ANDI R30,0xBF
0001d6 93e0 0095 	STS  149,R30
                 ; 0000 0035 
                 ; 0000 0036     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0001d8 81e8      	LD   R30,Y
0001d9 81f9      	LDD  R31,Y+1
0001da 940e 0e97 	CALL __ASRW8
0001dc 93e0 0090 	STS  144,R30
                 ; 0000 0037     UBRR0L = (unsigned char)(bps & 0x00ff);
0001de 81e8      	LD   R30,Y
0001df b9e9      	OUT  0x9,R30
                 ; 0000 0038 }
                 _0x20A000C:
0001e0 9622      	ADIW R28,2
0001e1 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 003B {
                 _timer2_init:
                 ; 0000 003C     //TIMER2
                 ; 0000 003D     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0001e2 e0ed      	LDI  R30,LOW(13)
0001e3 bde5      	OUT  0x25,R30
                 ; 0000 003E 
                 ; 0000 003F     OCR2 = 40;
0001e4 e2e8      	LDI  R30,LOW(40)
0001e5 bde3      	OUT  0x23,R30
                 ; 0000 0040     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0001e6 e8e2      	LDI  R30,LOW(130)
0001e7 c010      	RJMP _0x20A000B
                 ; 0000 0041     //TIMSK = (1<<OCIE2);
                 ; 0000 0042 }
                 ;void timer0_init(void)
                 ; 0000 0044 {
                 _timer0_init:
                 ; 0000 0045     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0001e8 e0e7      	LDI  R30,LOW(7)
0001e9 bfe3      	OUT  0x33,R30
                 ; 0000 0046     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0001ea e8e1      	LDI  R30,LOW(129)
0001eb c00c      	RJMP _0x20A000B
                 ; 0000 0047 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 004A {
                 _timer1_init:
                 ; 0000 004B     // TCCR1A = (1<<COM1B0);
                 ; 0000 004C     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0001ec e1ed      	LDI  R30,LOW(29)
0001ed bdee      	OUT  0x2E,R30
                 ; 0000 004D 
                 ; 0000 004E     OCR1B = 255;
0001ee efef      	LDI  R30,LOW(255)
0001ef e0f0      	LDI  R31,HIGH(255)
0001f0 bdf9      	OUT  0x28+1,R31
0001f1 bde8      	OUT  0x28,R30
                 ; 0000 004F     ICR1 = 1200;
0001f2 ebe0      	LDI  R30,LOW(1200)
0001f3 e0f4      	LDI  R31,HIGH(1200)
0001f4 bdf7      	OUT  0x26+1,R31
0001f5 bde6      	OUT  0x26,R30
                 ; 0000 0050     TIMSK |= (1<<OCIE1B);
0001f6 b7e7      	IN   R30,0x37
0001f7 60e8      	ORI  R30,8
                 _0x20A000B:
0001f8 bfe7      	OUT  0x37,R30
                 ; 0000 0051 }
0001f9 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0000 0054 {
                 _putch_USART1:
                 ; 0000 0055     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
0001fa 91e0 009b 	LDS  R30,155
0001fc 72e0      	ANDI R30,LOW(0x20)
0001fd f3e1      	BREQ _0x3
                 ; 0000 0056     UDR1 = data;
0001fe 81e8      	LD   R30,Y
0001ff 93e0 009c 	STS  156,R30
                 ; 0000 0057 }
000201 c023      	RJMP _0x20A000A
                 ;
                 ;//USART 문자열 송신
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     for(i = 0;i<IDX;i++)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 006A {
                 _puts_USART1:
                 ; 0000 006B     unsigned char i = 0;
                 ; 0000 006C     unsigned char x = 0;
                 ; 0000 006D     for(i = 0; str[i] ;i++){
000202 931a      	ST   -Y,R17
000203 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000204 e010      	LDI  R17,0
000205 e000      	LDI  R16,0
000206 e010      	LDI  R17,LOW(0)
                 _0x7:
000207 940e 0a78 	CALL SUBOPT_0x0
000209 30e0      	CPI  R30,0
00020a f031      	BREQ _0x8
                 ; 0000 006E         putch_USART1(str[i]);
00020b 940e 0a78 	CALL SUBOPT_0x0
00020d 93ea      	ST   -Y,R30
00020e dfeb      	RCALL _putch_USART1
                 ; 0000 006F     }
00020f 5f1f      	SUBI R17,-1
000210 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 0070     for(x = 0; x<i; x++){
000211 e000      	LDI  R16,LOW(0)
                 _0xA:
000212 1701      	CP   R16,R17
000213 f450      	BRSH _0xB
                 ; 0000 0071         *(str++) = 0;
000214 81aa      	LDD  R26,Y+2
000215 81bb      	LDD  R27,Y+2+1
000216 9611      	ADIW R26,1
000217 83aa      	STD  Y+2,R26
000218 83bb      	STD  Y+2+1,R27
000219 9711      	SBIW R26,1
00021a e0e0      	LDI  R30,LOW(0)
00021b 93ec      	ST   X,R30
                 ; 0000 0072     }
00021c 5f0f      	SUBI R16,-1
00021d cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0073 }
00021e 8119      	LDD  R17,Y+1
00021f 8108      	LDD  R16,Y+0
000220 c0ea      	RJMP _0x20A0008
                 ;
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     while(*str != 0)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//         i++;
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0086 {
                 ; 0000 0087     unsigned char i = 0;
                 ; 0000 0088     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 0089     if(TIMER2_OVERFLOW>0)
                 ; 0000 008A     {
                 ; 0000 008B         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 008C for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 008D }
                 ; 0000 008E     UCSR0B |= (1<<RXEN0);
                 ; 0000 008F }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0092 {
                 _putch_USART0:
                 ; 0000 0093     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000221 9b5d      	SBIS 0xB,5
000222 cffe      	RJMP _0x13
                 ; 0000 0094     UDR0 = data;
000223 81e8      	LD   R30,Y
000224 b9ec      	OUT  0xC,R30
                 ; 0000 0095 }
                 _0x20A000A:
000225 9621      	ADIW R28,1
000226 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 0098 {
                 ; 0000 0099     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 009A     unsigned char i = 0;
                 ; 0000 009B     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009C     {
                 ; 0000 009D         putch_USART1(*(str+i));
                 ; 0000 009E     }
                 ; 0000 009F 
                 ; 0000 00A0     for(i = 0; i<IDX; i++)
                 ; 0000 00A1     {
                 ; 0000 00A2         *(str+i) = 0;
                 ; 0000 00A3     }
                 ; 0000 00A4 }
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00A7 {
                 _CRC16:
                 ; 0000 00A8     int i;
                 ; 0000 00A9     unsigned short crc, flag;
                 ; 0000 00AA     crc = 0xffff;
000227 940e 0f37 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
000229 ef2f     +LDI R18 , LOW ( - 1 )
00022a ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00AB 
                 ; 0000 00AC     while(usDataLen--){
                 _0x1C:
00022b 81ee      	LDD  R30,Y+6
00022c 81ff      	LDD  R31,Y+6+1
00022d 9731      	SBIW R30,1
00022e 83ee      	STD  Y+6,R30
00022f 83ff      	STD  Y+6+1,R31
000230 9631      	ADIW R30,1
000231 f0f9      	BREQ _0x1E
                 ; 0000 00AD         crc ^= *puchMsg++;
000232 85a8      	LDD  R26,Y+8
000233 85b9      	LDD  R27,Y+8+1
000234 91ed      	LD   R30,X+
000235 87a8      	STD  Y+8,R26
000236 87b9      	STD  Y+8+1,R27
000237 e0f0      	LDI  R31,0
                +
000238 272e     +EOR R18 , R30
000239 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00AE 
                 ; 0000 00AF         for (i=0; i<8; i++){
                +
00023a e000     +LDI R16 , LOW ( 0 )
00023b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
00023c 3008     +CPI R16 , LOW ( 8 )
00023d e0e0     +LDI R30 , HIGH ( 8 )
00023e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00023f f484      	BRGE _0x21
                 ; 0000 00B0             flag = crc & 0x0001;
000240 01f9      	MOVW R30,R18
000241 70e1      	ANDI R30,LOW(0x1)
000242 70f0      	ANDI R31,HIGH(0x1)
000243 01af      	MOVW R20,R30
                 ; 0000 00B1             crc >>= 1;
000244 9536      	LSR  R19
000245 9527      	ROR  R18
                 ; 0000 00B2             if(flag) crc ^= POLYNORMIAL;
000246 2e04      	MOV  R0,R20
000247 2a05      	OR   R0,R21
000248 f021      	BREQ _0x22
000249 e0e1      	LDI  R30,LOW(40961)
00024a eaf0      	LDI  R31,HIGH(40961)
                +
00024b 272e     +EOR R18 , R30
00024c 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B3         }
                 _0x22:
                +
00024d 5f0f     +SUBI R16 , LOW ( - 1 )
00024e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00024f cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     }
000250 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00B5     return crc;
000251 01f9      	MOVW R30,R18
000252 940e 0f3e 	CALL __LOADLOCR6
000254 962a      	ADIW R28,10
000255 9508      	RET
                 ; 0000 00B6 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00B9 {
                 _RTU_WriteOperate0:
                 ; 0000 00BA     char protocol[8];
                 ; 0000 00BB     unsigned short crc16;
                 ; 0000 00BC     int i=0;
                 ; 0000 00BD     //PACKET_BUFF_IDX = 0;
                 ; 0000 00BE 
                 ; 0000 00BF     protocol[0]=device_address;
000256 940e 0a7f 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00C0     protocol[1]=0x06;
000258 e0e6      	LDI  R30,LOW(6)
000259 940e 0a87 	CALL SUBOPT_0x2
                 ; 0000 00C1     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C2     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C3     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C4     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C5     protocol[6]=0;
                 ; 0000 00C6     protocol[7]=0;
                 ; 0000 00C7 
                 ; 0000 00C8     crc16 = CRC16(protocol, 6);
                 ; 0000 00C9 
                 ; 0000 00CA     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00CB     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00CC 
                 ; 0000 00CD 
                 ; 0000 00CE     for(i=0;i<8;i++)
                 _0x24:
                +
00025b 3028     +CPI R18 , LOW ( 8 )
00025c e0e0     +LDI R30 , HIGH ( 8 )
00025d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00025e f42c      	BRGE _0x25
                 ; 0000 00CF     {
                 ; 0000 00D0         putch_USART0(*(protocol+i));
00025f 940e 0aaa 	CALL SUBOPT_0x3
                 ; 0000 00D1     }
                +
000261 5f2f     +SUBI R18 , LOW ( - 1 )
000262 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000263 cff7      	RJMP _0x24
                 _0x25:
                 ; 0000 00D2 }
000264 c00e      	RJMP _0x20A0009
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00D5 {
                 ; 0000 00D6     char protocol[8];
                 ; 0000 00D7     unsigned short crc16;
                 ; 0000 00D8     int i=0;
                 ; 0000 00D9    // PACKET_BUFF_IDX = 0;
                 ; 0000 00DA 
                 ; 0000 00DB     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00DC     protocol[1]=0x06;
                 ; 0000 00DD     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00DE     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00DF     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00E0     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00E1     protocol[6]=0;
                 ; 0000 00E2     protocol[7]=0;
                 ; 0000 00E3 
                 ; 0000 00E4     crc16 = CRC16(protocol, 6);
                 ; 0000 00E5 
                 ; 0000 00E6     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00E7     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00E8 
                 ; 0000 00E9 
                 ; 0000 00EA     for(i=0;i<8;i++)
                 ; 0000 00EB     {
                 ; 0000 00EC         putch_USART1(*(protocol+i));
                 ; 0000 00ED     }
                 ; 0000 00EE }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00F1 {
                 _RTU_ReedOperate0:
                 ; 0000 00F2     char protocol[8];
                 ; 0000 00F3     unsigned short crc16;
                 ; 0000 00F4     int i=0;
                 ; 0000 00F5     //PACKET_BUFF_IDX = 0;
                 ; 0000 00F6 
                 ; 0000 00F7     protocol[0]=device_address;
000265 940e 0a7f 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00F8     protocol[1]=0x04;
000267 e0e4      	LDI  R30,LOW(4)
000268 940e 0a87 	CALL SUBOPT_0x2
                 ; 0000 00F9     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00FA     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00FB     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00FC     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00FD     protocol[6]=0;
                 ; 0000 00FE     protocol[7]=0;
                 ; 0000 00FF 
                 ; 0000 0100     crc16 = CRC16(protocol, 6);
                 ; 0000 0101 
                 ; 0000 0102     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 0103     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 0104 
                 ; 0000 0105 
                 ; 0000 0106     for(i=0;i<8;i++)
                 _0x2A:
                +
00026a 3028     +CPI R18 , LOW ( 8 )
00026b e0e0     +LDI R30 , HIGH ( 8 )
00026c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00026d f42c      	BRGE _0x2B
                 ; 0000 0107     {
                 ; 0000 0108         putch_USART0(*(protocol+i));
00026e 940e 0aaa 	CALL SUBOPT_0x3
                 ; 0000 0109     }
                +
000270 5f2f     +SUBI R18 , LOW ( - 1 )
000271 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000272 cff7      	RJMP _0x2A
                 _0x2B:
                 ; 0000 010A }
                 _0x20A0009:
000273 940e 0f40 	CALL __LOADLOCR4
000275 9661      	ADIW R28,17
000276 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 010D {
                 _Make_MSPEED:
                 ; 0000 010E     float VelocityR = 0;
                 ; 0000 010F     float VelocityL = 0;
                 ; 0000 0110 
                 ; 0000 0111     if(*_velocity>=0){
000277 9728      	SBIW R28,8
000278 940e 0ab2 	CALL SUBOPT_0x4
00027a e0e0      	LDI  R30,LOW(0)
00027b 83ea      	STD  Y+2,R30
00027c 83eb      	STD  Y+3,R30
00027d 83ec      	STD  Y+4,R30
00027e 83ed      	STD  Y+5,R30
00027f 83ee      	STD  Y+6,R30
000280 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
000281 940e 0ab6 	CALL SUBOPT_0x5
000283 2377      	TST  R23
000284 f042      	BRMI _0x2C
                 ; 0000 0112         *_angularV = -(*_angularV);
000285 940e 0abb 	CALL SUBOPT_0x6
000287 940e 0cde 	CALL __ANEGF1
000289 85ac      	LDD  R26,Y+12
00028a 85bd      	LDD  R27,Y+12+1
00028b 940e 0f0d 	CALL __PUTDP1
                 ; 0000 0113     }
                 ; 0000 0114 
                 ; 0000 0115     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x2C:
00028d 940e 0ab6 	CALL SUBOPT_0x5
00028f 937f      	PUSH R23
000290 936f      	PUSH R22
000291 93ff      	PUSH R31
000292 93ef      	PUSH R30
000293 940e 0abb 	CALL SUBOPT_0x6
000295 940e 0ac0 	CALL SUBOPT_0x7
000297 91af      	POP  R26
000298 91bf      	POP  R27
000299 918f      	POP  R24
00029a 919f      	POP  R25
00029b 940e 0d84 	CALL __ADDF12
00029d 940e 0acf 	CALL SUBOPT_0x8
                 ; 0000 0116     VelocityL = *_velocity-(*_angularV*Length)/2;
00029f 940e 0ab6 	CALL SUBOPT_0x5
0002a1 937f      	PUSH R23
0002a2 936f      	PUSH R22
0002a3 93ff      	PUSH R31
0002a4 93ef      	PUSH R30
0002a5 940e 0abb 	CALL SUBOPT_0x6
0002a7 940e 0ac0 	CALL SUBOPT_0x7
0002a9 91af      	POP  R26
0002aa 91bf      	POP  R27
0002ab 918f      	POP  R24
0002ac 919f      	POP  R25
0002ad 940e 0ad4 	CALL SUBOPT_0x9
0002af 940e 0f1c 	CALL __PUTD1S0
                 ; 0000 0117 
                 ; 0000 0118     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0002b1 940e 0ad9 	CALL SUBOPT_0xA
0002b3 940e 0ade 	CALL SUBOPT_0xB
0002b5 85aa      	LDD  R26,Y+10
0002b6 85bb      	LDD  R27,Y+10+1
0002b7 93ed      	ST   X+,R30
0002b8 93fc      	ST   X,R31
                 ; 0000 0119     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0002b9 940e 0aed 	CALL SUBOPT_0xC
0002bb 940e 0ade 	CALL SUBOPT_0xB
0002bd 85a8      	LDD  R26,Y+8
0002be 85b9      	LDD  R27,Y+8+1
0002bf 93ed      	ST   X+,R30
0002c0 93fc      	ST   X,R31
                 ; 0000 011A 
                 ; 0000 011B     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0002c1 85aa      	LDD  R26,Y+10
0002c2 85bb      	LDD  R27,Y+10+1
0002c3 940e 0f03 	CALL __GETW1P
0002c5 32ec      	CPI  R30,LOW(0x12C)
0002c6 e0a1      	LDI  R26,HIGH(0x12C)
0002c7 07fa      	CPC  R31,R26
0002c8 f434      	BRGE _0x2E
0002c9 01df      	MOVW R26,R30
0002ca ede4      	LDI  R30,LOW(65236)
0002cb effe      	LDI  R31,HIGH(65236)
0002cc 17ea      	CP   R30,R26
0002cd 07fb      	CPC  R31,R27
0002ce f00c      	BRLT _0x2F
                 _0x2E:
0002cf c014      	RJMP _0x30
                 _0x2F:
0002d0 85a8      	LDD  R26,Y+8
0002d1 85b9      	LDD  R27,Y+8+1
0002d2 940e 0f03 	CALL __GETW1P
0002d4 32ec      	CPI  R30,LOW(0x12C)
0002d5 e0a1      	LDI  R26,HIGH(0x12C)
0002d6 07fa      	CPC  R31,R26
0002d7 f454      	BRGE _0x31
0002d8 85a8      	LDD  R26,Y+8
0002d9 85b9      	LDD  R27,Y+8+1
0002da 940e 0f03 	CALL __GETW1P
0002dc 01df      	MOVW R26,R30
0002dd ede4      	LDI  R30,LOW(65236)
0002de effe      	LDI  R31,HIGH(65236)
0002df 17ea      	CP   R30,R26
0002e0 07fb      	CPC  R31,R27
0002e1 f00c      	BRLT _0x32
                 _0x31:
0002e2 c001      	RJMP _0x30
                 _0x32:
0002e3 c001      	RJMP _0x33
                 _0x30:
0002e4 c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 011C         *R_RPM = 0;
0002e5 85aa      	LDD  R26,Y+10
0002e6 85bb      	LDD  R27,Y+10+1
0002e7 940e 0af0 	CALL SUBOPT_0xD
                 ; 0000 011D         *L_RPM = 0;
0002e9 85a8      	LDD  R26,Y+8
0002ea 85b9      	LDD  R27,Y+8+1
0002eb 940e 0af0 	CALL SUBOPT_0xD
                 ; 0000 011E     }
                 ; 0000 011F }
                 _0x2D:
0002ed 940c 068f 	JMP  _0x20A0006
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 0122 {
                 _oper_Disapath:
                 ; 0000 0123     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0002ef e0e1      	LDI  R30,LOW(1)
0002f0 93ea      	ST   -Y,R30
0002f1 e7e9      	LDI  R30,LOW(121)
0002f2 e0f0      	LDI  R31,HIGH(121)
0002f3 93fa      	ST   -Y,R31
0002f4 93ea      	ST   -Y,R30
0002f5 81ed      	LDD  R30,Y+5
0002f6 81fe      	LDD  R31,Y+5+1
0002f7 940e 0af5 	CALL SUBOPT_0xE
                 ; 0000 0124     delay_ms(5);
                 ; 0000 0125 
                 ; 0000 0126     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0002f9 e0e2      	LDI  R30,LOW(2)
0002fa 93ea      	ST   -Y,R30
0002fb e7e9      	LDI  R30,LOW(121)
0002fc e0f0      	LDI  R31,HIGH(121)
0002fd 93fa      	ST   -Y,R31
0002fe 93ea      	ST   -Y,R30
0002ff 81eb      	LDD  R30,Y+3
000300 81fc      	LDD  R31,Y+3+1
000301 940e 0e8b 	CALL __ANEGW1
000303 940e 0af5 	CALL SUBOPT_0xE
                 ; 0000 0127     delay_ms(5);
                 ; 0000 0128 
                 ; 0000 0129     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
000305 e0e1      	LDI  R30,LOW(1)
000306 940e 0aff 	CALL SUBOPT_0xF
                 ; 0000 012A     delay_ms(5);
                 ; 0000 012B 
                 ; 0000 012C     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
000308 e0e2      	LDI  R30,LOW(2)
000309 940e 0aff 	CALL SUBOPT_0xF
                 ; 0000 012D     delay_ms(5);
                 ; 0000 012E }
                 _0x20A0008:
00030b 9624      	ADIW R28,4
00030c 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 0131 {
                 _get_RPM:
                 ; 0000 0132     unsigned char i = 0;
                 ; 0000 0133     unsigned int RPM = 0;
                 ; 0000 0134 
                 ; 0000 0135     if(PACKET_BUFF[1]!=0x07){
00030d 940e 0f39 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
00030f e010      	LDI  R17,0
                +
000310 e020     +LDI R18 , LOW ( 0 )
000311 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000312 91a0 0501+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
000314 30a7      	CPI  R26,LOW(0x7)
000315 f111      	BREQ _0x34
                 ; 0000 0136         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
000316 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
000318 e0a0      	LDI  R26,LOW(0)
                +
000319 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
00031b 940e 0b07 	CALL SUBOPT_0x10
00031d 019f      	MOVW R18,R30
                 ; 0000 0137         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
00031e 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
000320 e0a0      	LDI  R26,LOW(0)
                +
000321 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
000323 940e 0b07 	CALL SUBOPT_0x10
000325 81ac      	LDD  R26,Y+4
000326 81bd      	LDD  R27,Y+4+1
000327 93ed      	ST   X+,R30
000328 93fc      	ST   X,R31
                 ; 0000 0138         for(i = 0; i<IDX; i++) *(str+i) = 0;
000329 e010      	LDI  R17,LOW(0)
                 _0x36:
00032a 81ee      	LDD  R30,Y+6
00032b 171e      	CP   R17,R30
00032c f450      	BRSH _0x37
00032d 2fe1      	MOV  R30,R17
00032e e0f0      	LDI  R31,0
00032f 81af      	LDD  R26,Y+7
000330 85b8      	LDD  R27,Y+7+1
000331 0fae      	ADD  R26,R30
000332 1fbf      	ADC  R27,R31
000333 e0e0      	LDI  R30,LOW(0)
000334 93ec      	ST   X,R30
000335 5f1f      	SUBI R17,-1
000336 cff3      	RJMP _0x36
                 _0x37:
                 ; 0000 0139 return RPM;
000337 01f9      	MOVW R30,R18
                 ; 0000 013A     }
                 ; 0000 013B }
                 _0x34:
                 _0x20A0007:
000338 940e 0f40 	CALL __LOADLOCR4
00033a 9629      	ADIW R28,9
00033b 9508      	RET
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 013E {
                 _usart0_rxc:
00033c 93aa      	ST   -Y,R26
00033d 93ba      	ST   -Y,R27
00033e 93ea      	ST   -Y,R30
00033f b7ef      	IN   R30,SREG
000340 93ea      	ST   -Y,R30
                 ; 0000 013F     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000341 b5e4      	IN   R30,0x24
000342 31e9      	CPI  R30,LOW(0x19)
000343 f418      	BRSH _0x39
000344 e0e0      	LDI  R30,LOW(0)
000345 15e5      	CP   R30,R5
000346 f019      	BREQ _0x3B
                 _0x39:
000347 e0e0      	LDI  R30,LOW(0)
000348 15e4      	CP   R30,R4
000349 f419      	BRNE _0x38
                 _0x3B:
                 ; 0000 0140     {
                 ; 0000 0141         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034a 940e 0b0b 	CALL SUBOPT_0x11
                 ; 0000 0142         PACKET_BUFF_IDX++;
                 ; 0000 0143         TCNT2 = 0;
                 ; 0000 0144     }
                 ; 0000 0145     else {
00034c c004      	RJMP _0x3D
                 _0x38:
                 ; 0000 0146         PACKET_BUFF_IDX = 0;
00034d 2444      	CLR  R4
                 ; 0000 0147         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034e 940e 0b0b 	CALL SUBOPT_0x11
                 ; 0000 0148         PACKET_BUFF_IDX++;
                 ; 0000 0149         TCNT2 = 0;
                 ; 0000 014A         TIMER2_OVERFLOW = 0;
000350 2455      	CLR  R5
                 ; 0000 014B     }
                 _0x3D:
                 ; 0000 014C }
000351 91e9      	LD   R30,Y+
000352 bfef      	OUT  SREG,R30
000353 91e9      	LD   R30,Y+
000354 91b9      	LD   R27,Y+
000355 91a9      	LD   R26,Y+
000356 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 014F {
                 _usart1_rxc:
000357 940e 0b15 	CALL SUBOPT_0x12
                 ; 0000 0150     unsigned char i = 0;
                 ; 0000 0151     i = UDR1;
000359 931a      	ST   -Y,R17
                 ;	i -> R17
00035a e010      	LDI  R17,0
00035b 9110 009c 	LDS  R17,156
                 ; 0000 0152     if((i == '<') && (CHECK_GETS == 0)){
00035d 331c      	CPI  R17,60
00035e f419      	BRNE _0x3F
00035f e0e0      	LDI  R30,LOW(0)
000360 15e8      	CP   R30,R8
000361 f009      	BREQ _0x40
                 _0x3F:
000362 c007      	RJMP _0x3E
                 _0x40:
                 ; 0000 0153         PORTB.3 = ~PORTB.3;
000363 9bc3      	SBIS 0x18,3
000364 c002      	RJMP _0x41
000365 98c3      	CBI  0x18,3
000366 c001      	RJMP _0x42
                 _0x41:
000367 9ac3      	SBI  0x18,3
                 _0x42:
                 ; 0000 0154         VELOCITY_BUFF_IDX = 0;
000368 2499      	CLR  R9
                 ; 0000 0155         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000369 c00e      	RJMP _0x64
                 ; 0000 0156         VELOCITY_BUFF_IDX++;
                 ; 0000 0157     }
                 ; 0000 0158     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x3E:
00036a 331e      	CPI  R17,62
00036b f419      	BRNE _0x45
00036c e0e0      	LDI  R30,LOW(0)
00036d 15e8      	CP   R30,R8
00036e f009      	BREQ _0x46
                 _0x45:
00036f c006      	RJMP _0x44
                 _0x46:
                 ; 0000 0159         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000370 2de9      	MOV  R30,R9
000371 940e 0b1a 	CALL SUBOPT_0x13
                 ; 0000 015A         VELOCITY_BUFF_IDX++;
                 ; 0000 015B         CHECK_GETS = 1;
000373 e0e1      	LDI  R30,LOW(1)
000374 2e8e      	MOV  R8,R30
                 ; 0000 015C     }
                 ; 0000 015D     else if(CHECK_GETS == 0){
000375 c005      	RJMP _0x47
                 _0x44:
000376 2088      	TST  R8
000377 f419      	BRNE _0x48
                 ; 0000 015E         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x64:
000378 2de9      	MOV  R30,R9
000379 940e 0b1a 	CALL SUBOPT_0x13
                 ; 0000 015F         VELOCITY_BUFF_IDX++;
                 ; 0000 0160     }
                 ; 0000 0161 }
                 _0x48:
                 _0x47:
00037b 9119      	LD   R17,Y+
00037c c014      	RJMP _0x68
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 0164 {
                 _timer2_comp:
00037d 93ea      	ST   -Y,R30
00037e b7ef      	IN   R30,SREG
                 ; 0000 0165     TIMER2_OVERFLOW++;
00037f 9453      	INC  R5
                 ; 0000 0166 }
000380 bfef      	OUT  SREG,R30
000381 91e9      	LD   R30,Y+
000382 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 0169 {
                 _timer0_ovf:
000383 940e 0b15 	CALL SUBOPT_0x12
                 ; 0000 016A     TIMER0_OVERFLOW++;
000385 01f3      	MOVW R30,R6
000386 9631      	ADIW R30,1
000387 013f      	MOVW R6,R30
                 ; 0000 016B }
000388 c008      	RJMP _0x68
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0000 016F {
                 _timer0_comp:
000389 940e 0b15 	CALL SUBOPT_0x12
                 ; 0000 0170     TIMER1_OVERFLOW++;
00038b 01f6      	MOVW R30,R12
00038c 9631      	ADIW R30,1
00038d 016f      	MOVW R12,R30
                 ; 0000 0171     TCNT1H = 0x00;
00038e e0e0      	LDI  R30,LOW(0)
00038f bded      	OUT  0x2D,R30
                 ; 0000 0172     TCNT1L = 0x00;
000390 bdec      	OUT  0x2C,R30
                 ; 0000 0173 }
                 _0x68:
000391 91e9      	LD   R30,Y+
000392 bfef      	OUT  SREG,R30
000393 91f9      	LD   R31,Y+
000394 91e9      	LD   R30,Y+
000395 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 0176 {
                 _main:
                 ; 0000 0177     float a_buff;
                 ; 0000 0178     float v_buff;
                 ; 0000 0179 
                 ; 0000 017A     int velocity = 0;
                 ; 0000 017B     int angularV = 0;
                 ; 0000 017C     int velocity_R = 0;
                 ; 0000 017D     int velocity_L = 0;
                 ; 0000 017E     int past_velocity_R = 0;
                 ; 0000 017F     int past_velocity_L = 0;
                 ; 0000 0180     int del_ms = 0;
                 ; 0000 0181 
                 ; 0000 0182     int currentRPM_R = 0;
                 ; 0000 0183     int currentRPM_L = 0;
                 ; 0000 0184     float currentV_R = 0;
                 ; 0000 0185     float currentV_L = 0;
                 ; 0000 0186     int goal_current_R = 0;
                 ; 0000 0187     int goal_current_L = 0;
                 ; 0000 0188 
                 ; 0000 0189     float d_velocity = 0;
                 ; 0000 018A     float d_angularV = 0;
                 ; 0000 018B     float control_time = 0;
                 ; 0000 018C 
                 ; 0000 018D     float d_x = 0;
                 ; 0000 018E     float d_y = 0;
                 ; 0000 018F     float d_angular = 0;
                 ; 0000 0190     int d_angular_circula = 0;
                 ; 0000 0191 
                 ; 0000 0192     float goal_x = 0;
                 ; 0000 0193     float goal_y = 0;
                 ; 0000 0194     int goal_angular = 0;
                 ; 0000 0195 
                 ; 0000 0196     float TIMER1_TIME = 0;
                 ; 0000 0197     float TIMER0_TIME = 0;
                 ; 0000 0198 
                 ; 0000 0199     char rootine_test = 0;
                 ; 0000 019A 
                 ; 0000 019B     unsigned char BUFF[500] = {0,};
                 ; 0000 019C 
                 ; 0000 019D     usart1_init(bps_115200);
000396 97ef      	SBIW R28,63
000397 9722      	SBIW R28,2
000398 50d2      	SUBI R29,2
                +
000399 e389     +LDI R24 , LOW ( 569 )
00039a e092     +LDI R25 , HIGH ( 569 )
                 	__GETWRN 24,25,569
00039b e0a0      	LDI  R26,LOW(0)
00039c e0b0      	LDI  R27,HIGH(0)
00039d e8ec      	LDI  R30,LOW(_0x49*2)
00039e e0f0      	LDI  R31,HIGH(_0x49*2)
00039f 940e 0f45 	CALL __INITLOCW
                 ;	a_buff -> Y+573
                 ;	v_buff -> Y+569
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+567
                 ;	past_velocity_R -> Y+565
                 ;	past_velocity_L -> Y+563
                 ;	del_ms -> Y+561
                 ;	currentRPM_R -> Y+559
                 ;	currentRPM_L -> Y+557
                 ;	currentV_R -> Y+553
                 ;	currentV_L -> Y+549
                 ;	goal_current_R -> Y+547
                 ;	goal_current_L -> Y+545
                 ;	d_velocity -> Y+541
                 ;	d_angularV -> Y+537
                 ;	control_time -> Y+533
                 ;	d_x -> Y+529
                 ;	d_y -> Y+525
                 ;	d_angular -> Y+521
                 ;	d_angular_circula -> Y+519
                 ;	goal_x -> Y+515
                 ;	goal_y -> Y+511
                 ;	goal_angular -> Y+509
                 ;	TIMER1_TIME -> Y+505
                 ;	TIMER0_TIME -> Y+501
                 ;	rootine_test -> Y+500
                 ;	BUFF -> Y+0
                +
0003a1 e000     +LDI R16 , LOW ( 0 )
0003a2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003a3 e020     +LDI R18 , LOW ( 0 )
0003a4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0003a5 e040     +LDI R20 , LOW ( 0 )
0003a6 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0003a7 e0e7      	LDI  R30,LOW(7)
0003a8 e0f0      	LDI  R31,HIGH(7)
0003a9 93fa      	ST   -Y,R31
0003aa 93ea      	ST   -Y,R30
0003ab de08      	RCALL _usart1_init
                 ; 0000 019E     usart0_init(bps_115200);
0003ac e0e7      	LDI  R30,LOW(7)
0003ad e0f0      	LDI  R31,HIGH(7)
0003ae 93fa      	ST   -Y,R31
0003af 93ea      	ST   -Y,R30
0003b0 de1b      	RCALL _usart0_init
                 ; 0000 019F     timer2_init();
0003b1 de30      	RCALL _timer2_init
                 ; 0000 01A0     timer0_init();
0003b2 de35      	RCALL _timer0_init
                 ; 0000 01A1     timer1_init();
0003b3 de38      	RCALL _timer1_init
                 ; 0000 01A2     SREG |= 0x80;
0003b4 9478      	BSET 7
                 ; 0000 01A3     DDRB.1 = 1;
0003b5 9ab9      	SBI  0x17,1
                 ; 0000 01A4     DDRB.2 = 1;
0003b6 9aba      	SBI  0x17,2
                 ; 0000 01A5     DDRB.3 = 1;
0003b7 9abb      	SBI  0x17,3
                 ; 0000 01A6     delay_ms(5000);
0003b8 e8e8      	LDI  R30,LOW(5000)
0003b9 e1f3      	LDI  R31,HIGH(5000)
0003ba 940e 0b20 	CALL SUBOPT_0x14
                 ; 0000 01A7     PORTB.1 = 0;
0003bc 98c1      	CBI  0x18,1
                 ; 0000 01A8     PORTB.2 = 1;
0003bd 9ac2      	SBI  0x18,2
                 ; 0000 01A9 
                 ; 0000 01AA     TIMER0_OVERFLOW = 0;
0003be 2466      	CLR  R6
0003bf 2477      	CLR  R7
                 ; 0000 01AB     TCNT0 = 0;
0003c0 e0e0      	LDI  R30,LOW(0)
0003c1 bfe2      	OUT  0x32,R30
                 ; 0000 01AC 
                 ; 0000 01AD     while(1)
                 _0x54:
                 ; 0000 01AE     {
                 ; 0000 01AF         // if(CHECK_GETS)
                 ; 0000 01B0         // {
                 ; 0000 01B1         //     PORTB.1 = 1;
                 ; 0000 01B2 
                 ; 0000 01B3         //     UCSR1B &= ~(1<<RXEN1);
                 ; 0000 01B4         //     // sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
                 ; 0000 01B5         //     sscanf(VELOCITY_BUFF,"<%f,%f,%d>", &goal_x, &goal_y, &goal_angular);
                 ; 0000 01B6 
                 ; 0000 01B7         //     if(!del_ms){
                 ; 0000 01B8         //         d_x = 0;
                 ; 0000 01B9         //         d_y = 0;
                 ; 0000 01BA         //         d_angular = 0;
                 ; 0000 01BB         //     }
                 ; 0000 01BC 
                 ; 0000 01BD         //     v_buff = (float)velocity/1000;
                 ; 0000 01BE         //     a_buff = (float)angularV/1000;
                 ; 0000 01BF 
                 ; 0000 01C0         //     // Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 01C1 
                 ; 0000 01C2         //     // oper_Disapath(velocity_R, velocity_L);
                 ; 0000 01C3 
                 ; 0000 01C4         //     // TIMER1_TIME = 0;
                 ; 0000 01C5         //     // TIMER1_OVERFLOW = 0;
                 ; 0000 01C6         //     // TCNT1L = 0;
                 ; 0000 01C7 
                 ; 0000 01C8         //     rootine_test = 0;
                 ; 0000 01C9         //     CHECK_GETS = 0;
                 ; 0000 01CA         //     UCSR1B |=(1<<RXEN1);
                 ; 0000 01CB         //     // PORTB.1 = 0;
                 ; 0000 01CC         // }
                 ; 0000 01CD 
                 ; 0000 01CE         if(rootine_test == 0)
                +
0003c2 01fe     +MOVW R30 , R28
0003c3 50ec     +SUBI R30 , LOW ( - 500 )
0003c4 4ffe     +SBCI R31 , HIGH ( - 500 )
0003c5 81e0     +LD R30 , Z
                 	__GETB1SX 500
0003c6 30e0      	CPI  R30,0
0003c7 f4f1      	BRNE _0x57
                 ; 0000 01CF         {
                 ; 0000 01D0             v_buff = 0.15;
0003c8 940e 0b24 	CALL SUBOPT_0x15
                 ; 0000 01D1             a_buff = 0;
                 ; 0000 01D2             if(d_x<1)
0003ca 940e 0b38 	CALL SUBOPT_0x16
0003cc 940e 0b41 	CALL SUBOPT_0x17
0003ce f480      	BRSH _0x58
                 ; 0000 01D3             {
                 ; 0000 01D4                 Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
0003cf 940e 0b48 	CALL SUBOPT_0x18
0003d1 b7ed      	IN   R30,SPL
0003d2 b7fe      	IN   R31,SPH
0003d3 9731      	SBIW R30,1
0003d4 93fa      	ST   -Y,R31
0003d5 93ea      	ST   -Y,R30
0003d6 935f      	PUSH R21
0003d7 934f      	PUSH R20
0003d8 940e 0b53 	CALL SUBOPT_0x19
0003da 914f      	POP  R20
0003db 915f      	POP  R21
                 ; 0000 01D5                 oper_Disapath(velocity_R,velocity_L);
0003dc 940e 0b5a 	CALL SUBOPT_0x1A
0003de c003      	RJMP _0x65
                 ; 0000 01D6             }
                 ; 0000 01D7             else{
                 _0x58:
                 ; 0000 01D8                 rootine_test = 1;
0003df e0e1      	LDI  R30,LOW(1)
0003e0 940e 0b63 	CALL SUBOPT_0x1B
                 ; 0000 01D9                 oper_Disapath(0,0);
                 _0x65:
0003e2 93fa      	ST   -Y,R31
0003e3 93ea      	ST   -Y,R30
0003e4 df0a      	RCALL _oper_Disapath
                 ; 0000 01DA             }
                 ; 0000 01DB         }
                 ; 0000 01DC         else if(rootine_test == 1)
0003e5 c05d      	RJMP _0x5A
                 _0x57:
                +
0003e6 01de     +MOVW R26 , R28
0003e7 50ac     +SUBI R26 , LOW ( - 500 )
0003e8 4fbe     +SBCI R27 , HIGH ( - 500 )
0003e9 91ac     +LD R26 , X
                 	__GETB2SX 500
0003ea 30a1      	CPI  R26,LOW(0x1)
0003eb f5a1      	BRNE _0x5B
                 ; 0000 01DD         {
                 ; 0000 01DE             v_buff = 0;
0003ec e0e0      	LDI  R30,LOW(0)
                +
0003ed 01de     +MOVW R26 , R28
0003ee 5ca7     +SUBI R26 , LOW ( - 569 )
0003ef 4fbd     +SBCI R27 , HIGH ( - 569 )
0003f0 93ed     +ST X + , R30
0003f1 93ed     +ST X + , R30
0003f2 93ed     +ST X + , R30
0003f3 93ec     +ST X , R30
                 	__CLRD1SX 569
                 ; 0000 01DF             a_buff = -0.7;
                +
0003f4 e3e3     +LDI R30 , LOW ( 0xBF333333 )
0003f5 e3f3     +LDI R31 , HIGH ( 0xBF333333 )
0003f6 e363     +LDI R22 , BYTE3 ( 0xBF333333 )
0003f7 eb7f     +LDI R23 , BYTE4 ( 0xBF333333 )
                 	__GETD1N 0xBF333333
                +
0003f8 01de     +MOVW R26 , R28
0003f9 5ca3     +SUBI R26 , LOW ( - 573 )
0003fa 4fbd     +SBCI R27 , HIGH ( - 573 )
0003fb 93ed     +ST X + , R30
0003fc 93fd     +ST X + , R31
0003fd 936d     +ST X + , R22
0003fe 937c     +ST X , R23
                 	__PUTD1SX 573
                 ; 0000 01E0             if(d_angular_circula<90)
                +
0003ff 01de     +MOVW R26 , R28
000400 5fa9     +SUBI R26 , LOW ( - 519 )
000401 4fbd     +SBCI R27 , HIGH ( - 519 )
000402 900d     +LD R0 , X +
000403 91bc     +LD R27 , X
000404 2da0     +MOV R26 , R0
                 	__GETW2SX 519
000405 35aa      	CPI  R26,LOW(0x5A)
000406 e0e0      	LDI  R30,HIGH(0x5A)
000407 07be      	CPC  R27,R30
000408 f484      	BRGE _0x5C
                 ; 0000 01E1             {
                 ; 0000 01E2                 Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000409 940e 0b48 	CALL SUBOPT_0x18
00040b b7ed      	IN   R30,SPL
00040c b7fe      	IN   R31,SPH
00040d 9731      	SBIW R30,1
00040e 93fa      	ST   -Y,R31
00040f 93ea      	ST   -Y,R30
000410 935f      	PUSH R21
000411 934f      	PUSH R20
000412 940e 0b53 	CALL SUBOPT_0x19
000414 914f      	POP  R20
000415 915f      	POP  R21
                 ; 0000 01E3                 oper_Disapath(velocity_R,velocity_L);
000416 940e 0b5a 	CALL SUBOPT_0x1A
000418 c003      	RJMP _0x66
                 ; 0000 01E4             }
                 ; 0000 01E5             else{
                 _0x5C:
                 ; 0000 01E6                 rootine_test = 2;
000419 e0e2      	LDI  R30,LOW(2)
00041a 940e 0b63 	CALL SUBOPT_0x1B
                 ; 0000 01E7                 oper_Disapath(0,0);
                 _0x66:
00041c 93fa      	ST   -Y,R31
00041d 93ea      	ST   -Y,R30
00041e ded0      	RCALL _oper_Disapath
                 ; 0000 01E8             }
                 ; 0000 01E9         }
                 ; 0000 01EA         else if(rootine_test == 2)
00041f c023      	RJMP _0x5E
                 _0x5B:
                +
000420 01de     +MOVW R26 , R28
000421 50ac     +SUBI R26 , LOW ( - 500 )
000422 4fbe     +SBCI R27 , HIGH ( - 500 )
000423 91ac     +LD R26 , X
                 	__GETB2SX 500
000424 30a2      	CPI  R26,LOW(0x2)
000425 f4e9      	BRNE _0x5F
                 ; 0000 01EB         {
                 ; 0000 01EC             v_buff = 0.15;
000426 940e 0b24 	CALL SUBOPT_0x15
                 ; 0000 01ED             a_buff = 0;
                 ; 0000 01EE             if(d_y<1)
000428 940e 0b6c 	CALL SUBOPT_0x1C
00042a 940e 0b41 	CALL SUBOPT_0x17
00042c f480      	BRSH _0x60
                 ; 0000 01EF             {
                 ; 0000 01F0                 Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
00042d 940e 0b48 	CALL SUBOPT_0x18
00042f b7ed      	IN   R30,SPL
000430 b7fe      	IN   R31,SPH
000431 9731      	SBIW R30,1
000432 93fa      	ST   -Y,R31
000433 93ea      	ST   -Y,R30
000434 935f      	PUSH R21
000435 934f      	PUSH R20
000436 940e 0b53 	CALL SUBOPT_0x19
000438 914f      	POP  R20
000439 915f      	POP  R21
                 ; 0000 01F1                 oper_Disapath(velocity_R,velocity_L);
00043a 940e 0b5a 	CALL SUBOPT_0x1A
00043c c003      	RJMP _0x67
                 ; 0000 01F2             }
                 ; 0000 01F3             else{
                 _0x60:
                 ; 0000 01F4                 rootine_test = 3;
00043d e0e3      	LDI  R30,LOW(3)
00043e 940e 0b63 	CALL SUBOPT_0x1B
                 ; 0000 01F5                 oper_Disapath(0,0);
                 _0x67:
000440 93fa      	ST   -Y,R31
000441 93ea      	ST   -Y,R30
000442 deac      	RCALL _oper_Disapath
                 ; 0000 01F6             }
                 ; 0000 01F7         }
                 ; 0000 01F8 
                 ; 0000 01F9         // TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 ; 0000 01FA 
                 ; 0000 01FB         // if(del_ms<TIMER1_TIME)
                 ; 0000 01FC         // {
                 ; 0000 01FD         //     oper_Disapath(0,0);
                 ; 0000 01FE         //     TIMER1_OVERFLOW = 0;
                 ; 0000 01FF         //     v_buff = 0;
                 ; 0000 0200         //     a_buff = 0;
                 ; 0000 0201         // }
                 ; 0000 0202 
                 ; 0000 0203         delay_ms(5);
                 _0x5F:
                 _0x5E:
                 _0x5A:
000443 940e 0b75 	CALL SUBOPT_0x1D
                 ; 0000 0204         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
000445 e0e1      	LDI  R30,LOW(1)
000446 940e 0b78 	CALL SUBOPT_0x1E
                 ; 0000 0205         delay_ms(5);
                 ; 0000 0206         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
000448 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
000449 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
00044a 93fa      	ST   -Y,R31
00044b 93ea      	ST   -Y,R30
00044c 924a      	ST   -Y,R4
00044d 01fe      	MOVW R30,R28
00044e 5dea      	SUBI R30,LOW(-(550))
00044f 4ffd      	SBCI R31,HIGH(-(550))
000450 93fa      	ST   -Y,R31
000451 93ea      	ST   -Y,R30
000452 deba      	RCALL _get_RPM
                +
000453 01de     +MOVW R26 , R28
000454 5da1     +SUBI R26 , LOW ( - 559 )
000455 4fbd     +SBCI R27 , HIGH ( - 559 )
000456 93ed     +ST X + , R30
000457 93fc     +ST X , R31
                 	__PUTW1SX 559
                 ; 0000 0207         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
000458 e0e2      	LDI  R30,LOW(2)
000459 940e 0b78 	CALL SUBOPT_0x1E
                 ; 0000 0208         delay_ms(5);
                 ; 0000 0209         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
00045b e0e0      	LDI  R30,LOW(_PACKET_BUFF)
00045c e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
00045d 93fa      	ST   -Y,R31
00045e 93ea      	ST   -Y,R30
00045f 924a      	ST   -Y,R4
000460 01fe      	MOVW R30,R28
000461 5dec      	SUBI R30,LOW(-(548))
000462 4ffd      	SBCI R31,HIGH(-(548))
000463 93fa      	ST   -Y,R31
000464 93ea      	ST   -Y,R30
000465 dea7      	RCALL _get_RPM
000466 940e 0e8b 	CALL __ANEGW1
                +
000468 01de     +MOVW R26 , R28
000469 5da3     +SUBI R26 , LOW ( - 557 )
00046a 4fbd     +SBCI R27 , HIGH ( - 557 )
00046b 93ed     +ST X + , R30
00046c 93fc     +ST X , R31
                 	__PUTW1SX 557
                 ; 0000 020A 
                 ; 0000 020B         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
                +
00046d 01fe     +MOVW R30 , R28
00046e 5de1     +SUBI R30 , LOW ( - 559 )
00046f 4ffd     +SBCI R31 , HIGH ( - 559 )
000470 9001     +LD R0 , Z +
000471 81f0     +LD R31 , Z
000472 2de0     +MOV R30 , R0
                 	__GETW1SX 559
000473 940e 0b82 	CALL SUBOPT_0x1F
                +
000475 01de     +MOVW R26 , R28
000476 5da7     +SUBI R26 , LOW ( - 553 )
000477 4fbd     +SBCI R27 , HIGH ( - 553 )
000478 93ed     +ST X + , R30
000479 93fd     +ST X + , R31
00047a 936d     +ST X + , R22
00047b 937c     +ST X , R23
                 	__PUTD1SX 553
                 ; 0000 020C         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
00047c 01fe     +MOVW R30 , R28
00047d 5de3     +SUBI R30 , LOW ( - 557 )
00047e 4ffd     +SBCI R31 , HIGH ( - 557 )
00047f 9001     +LD R0 , Z +
000480 81f0     +LD R31 , Z
000481 2de0     +MOV R30 , R0
                 	__GETW1SX 557
000482 940e 0b82 	CALL SUBOPT_0x1F
                +
000484 01de     +MOVW R26 , R28
000485 5dab     +SUBI R26 , LOW ( - 549 )
000486 4fbd     +SBCI R27 , HIGH ( - 549 )
000487 93ed     +ST X + , R30
000488 93fd     +ST X + , R31
000489 936d     +ST X + , R22
00048a 937c     +ST X , R23
                 	__PUTD1SX 549
                 ; 0000 020D 
                 ; 0000 020E         d_velocity = (currentV_R + currentV_L)/2;
                +
00048b 01de     +MOVW R26 , R28
00048c 5da7     +SUBI R26 , LOW ( - 553 )
00048d 4fbd     +SBCI R27 , HIGH ( - 553 )
00048e 900d     +LD R0 , X +
00048f 901d     +LD R1 , X +
000490 918d     +LD R24 , X +
000491 919c     +LD R25 , X
000492 01d0     +MOVW R26 , R0
                 	__GETD2SX 553
000493 940e 0d84 	CALL __ADDF12
000495 01df      	MOVW R26,R30
000496 01cb      	MOVW R24,R22
                +
000497 e0e0     +LDI R30 , LOW ( 0x40000000 )
000498 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000499 e060     +LDI R22 , BYTE3 ( 0x40000000 )
00049a e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00049b 940e 0e22 	CALL __DIVF21
                +
00049d 01de     +MOVW R26 , R28
00049e 5ea3     +SUBI R26 , LOW ( - 541 )
00049f 4fbd     +SBCI R27 , HIGH ( - 541 )
0004a0 93ed     +ST X + , R30
0004a1 93fd     +ST X + , R31
0004a2 936d     +ST X + , R22
0004a3 937c     +ST X , R23
                 	__PUTD1SX 541
                 ; 0000 020F         d_angularV = (currentV_R-currentV_L)/Length;
                +
0004a4 01de     +MOVW R26 , R28
0004a5 5dab     +SUBI R26 , LOW ( - 549 )
0004a6 4fbd     +SBCI R27 , HIGH ( - 549 )
0004a7 900d     +LD R0 , X +
0004a8 901d     +LD R1 , X +
0004a9 918d     +LD R24 , X +
0004aa 919c     +LD R25 , X
0004ab 01d0     +MOVW R26 , R0
                 	__GETD2SX 549
                +
0004ac 01fe     +MOVW R30 , R28
0004ad 5de7     +SUBI R30 , LOW ( - 553 )
0004ae 4ffd     +SBCI R31 , HIGH ( - 553 )
0004af 9001     +LD R0 , Z +
0004b0 9011     +LD R1 , Z +
0004b1 9161     +LD R22 , Z +
0004b2 8170     +LD R23 , Z
0004b3 01f0     +MOVW R30 , R0
                 	__GETD1SX 553
0004b4 940e 0d7d 	CALL __SUBF12
0004b6 01df      	MOVW R26,R30
0004b7 01cb      	MOVW R24,R22
                +
0004b8 e3eb     +LDI R30 , LOW ( 0x3E8FDF3B )
0004b9 edff     +LDI R31 , HIGH ( 0x3E8FDF3B )
0004ba e86f     +LDI R22 , BYTE3 ( 0x3E8FDF3B )
0004bb e37e     +LDI R23 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD1N 0x3E8FDF3B
0004bc 940e 0e22 	CALL __DIVF21
                +
0004be 01de     +MOVW R26 , R28
0004bf 5ea7     +SUBI R26 , LOW ( - 537 )
0004c0 4fbd     +SBCI R27 , HIGH ( - 537 )
0004c1 93ed     +ST X + , R30
0004c2 93fd     +ST X + , R31
0004c3 936d     +ST X + , R22
0004c4 937c     +ST X , R23
                 	__PUTD1SX 537
                 ; 0000 0210 
                 ; 0000 0211         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
0004c5 01f3      	MOVW R30,R6
0004c6 efaf      	LDI  R26,LOW(255)
0004c7 e0b0      	LDI  R27,HIGH(255)
0004c8 940e 0ea7 	CALL __MULW12U
0004ca 01df      	MOVW R26,R30
0004cb b7e2      	IN   R30,0x32
0004cc 940e 0b07 	CALL SUBOPT_0x10
0004ce 2766      	CLR  R22
0004cf 2777      	CLR  R23
0004d0 940e 0d4a 	CALL __CDF1
                +
0004d2 eaae     +LDI R26 , LOW ( 0x3891A2AE )
0004d3 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
0004d4 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
0004d5 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
0004d6 940e 0dd4 	CALL __MULF12
                +
0004d8 01de     +MOVW R26 , R28
0004d9 5eab     +SUBI R26 , LOW ( - 533 )
0004da 4fbd     +SBCI R27 , HIGH ( - 533 )
0004db 93ed     +ST X + , R30
0004dc 93fd     +ST X + , R31
0004dd 936d     +ST X + , R22
0004de 937c     +ST X , R23
                 	__PUTD1SX 533
                 ; 0000 0212         TIMER0_OVERFLOW = 0;
0004df 2466      	CLR  R6
0004e0 2477      	CLR  R7
                 ; 0000 0213         TCNT0 = 0;
0004e1 e0e0      	LDI  R30,LOW(0)
0004e2 bfe2      	OUT  0x32,R30
                 ; 0000 0214 
                 ; 0000 0215         d_angular += control_time*d_angularV;
                +
0004e3 01fe     +MOVW R30 , R28
0004e4 5ee7     +SUBI R30 , LOW ( - 537 )
0004e5 4ffd     +SBCI R31 , HIGH ( - 537 )
0004e6 9001     +LD R0 , Z +
0004e7 9011     +LD R1 , Z +
0004e8 9161     +LD R22 , Z +
0004e9 8170     +LD R23 , Z
0004ea 01f0     +MOVW R30 , R0
                 	__GETD1SX 537
                +
0004eb 01de     +MOVW R26 , R28
0004ec 5eab     +SUBI R26 , LOW ( - 533 )
0004ed 4fbd     +SBCI R27 , HIGH ( - 533 )
0004ee 900d     +LD R0 , X +
0004ef 901d     +LD R1 , X +
0004f0 918d     +LD R24 , X +
0004f1 919c     +LD R25 , X
0004f2 01d0     +MOVW R26 , R0
                 	__GETD2SX 533
0004f3 940e 0dd4 	CALL __MULF12
0004f5 940e 0b8f 	CALL SUBOPT_0x20
0004f7 940e 0d84 	CALL __ADDF12
                +
0004f9 01de     +MOVW R26 , R28
0004fa 5fa7     +SUBI R26 , LOW ( - 521 )
0004fb 4fbd     +SBCI R27 , HIGH ( - 521 )
0004fc 93ed     +ST X + , R30
0004fd 93fd     +ST X + , R31
0004fe 936d     +ST X + , R22
0004ff 937c     +ST X , R23
                 	__PUTD1SX 521
                 ; 0000 0216         d_x += d_velocity*control_time*cos(d_angular);
000500 940e 0b98 	CALL SUBOPT_0x21
000502 937f      	PUSH R23
000503 936f      	PUSH R22
000504 93ff      	PUSH R31
000505 93ef      	PUSH R30
000506 940e 0bab 	CALL SUBOPT_0x22
000508 940e 09af 	CALL _cos
00050a 91af      	POP  R26
00050b 91bf      	POP  R27
00050c 918f      	POP  R24
00050d 919f      	POP  R25
00050e 940e 0dd4 	CALL __MULF12
000510 940e 0b38 	CALL SUBOPT_0x16
000512 940e 0d84 	CALL __ADDF12
                +
000514 01de     +MOVW R26 , R28
000515 5eaf     +SUBI R26 , LOW ( - 529 )
000516 4fbd     +SBCI R27 , HIGH ( - 529 )
000517 93ed     +ST X + , R30
000518 93fd     +ST X + , R31
000519 936d     +ST X + , R22
00051a 937c     +ST X , R23
                 	__PUTD1SX 529
                 ; 0000 0217         d_y += d_velocity*control_time*sin(d_angular);
00051b 940e 0b98 	CALL SUBOPT_0x21
00051d 937f      	PUSH R23
00051e 936f      	PUSH R22
00051f 93ff      	PUSH R31
000520 93ef      	PUSH R30
000521 940e 0bab 	CALL SUBOPT_0x22
000523 940e 0928 	CALL _sin
000525 91af      	POP  R26
000526 91bf      	POP  R27
000527 918f      	POP  R24
000528 919f      	POP  R25
000529 940e 0dd4 	CALL __MULF12
00052b 940e 0b6c 	CALL SUBOPT_0x1C
00052d 940e 0d84 	CALL __ADDF12
                +
00052f 01de     +MOVW R26 , R28
000530 5fa3     +SUBI R26 , LOW ( - 525 )
000531 4fbd     +SBCI R27 , HIGH ( - 525 )
000532 93ed     +ST X + , R30
000533 93fd     +ST X + , R31
000534 936d     +ST X + , R22
000535 937c     +ST X , R23
                 	__PUTD1SX 525
                 ; 0000 0218         d_angular_circula = (int)(d_angular*Circular);
000536 940e 0b8f 	CALL SUBOPT_0x20
                +
000538 efe6     +LDI R30 , LOW ( 0x426528F6 )
000539 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
00053a e665     +LDI R22 , BYTE3 ( 0x426528F6 )
00053b e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
00053c 940e 0dd4 	CALL __MULF12
00053e 940e 0d13 	CALL __CFD1
                +
000540 01de     +MOVW R26 , R28
000541 5fa9     +SUBI R26 , LOW ( - 519 )
000542 4fbd     +SBCI R27 , HIGH ( - 519 )
000543 93ed     +ST X + , R30
000544 93fc     +ST X , R31
                 	__PUTW1SX 519
                 ; 0000 0219 
                 ; 0000 021A 
                 ; 0000 021B         TIMER0_TIME += control_time;
000545 940e 0bb6 	CALL SUBOPT_0x23
000547 940e 0bbf 	CALL SUBOPT_0x24
000549 940e 0d84 	CALL __ADDF12
                +
00054b 01de     +MOVW R26 , R28
00054c 50ab     +SUBI R26 , LOW ( - 501 )
00054d 4fbe     +SBCI R27 , HIGH ( - 501 )
00054e 93ed     +ST X + , R30
00054f 93fd     +ST X + , R31
000550 936d     +ST X + , R22
000551 937c     +ST X , R23
                 	__PUTD1SX 501
                 ; 0000 021C         if(TIMER0_TIME>0.1){
000552 940e 0bbf 	CALL SUBOPT_0x24
000554 940e 0bc8 	CALL SUBOPT_0x25
000556 940e 0e67 	CALL __CMPF12
000558 f009      	BREQ PC+2
000559 f410      	BRCC PC+3
00055a 940c 0585 	JMP  _0x62
                 ; 0000 021D             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 021E             // sprintf(BUFF, "%f, %f\n", d_x, d_y,currentRPM_R, current);
                 ; 0000 021F             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 0220             sprintf(BUFF, "%.3f, %.3f, %4d\n", d_x, d_y, d_angular_circula);
00055c 01fe      	MOVW R30,R28
00055d 93fa      	ST   -Y,R31
00055e 93ea      	ST   -Y,R30
                +
00055f ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000560 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000561 93fa      	ST   -Y,R31
000562 93ea      	ST   -Y,R30
000563 940e 0bb6 	CALL SUBOPT_0x23
000565 940e 0f21 	CALL __PUTPARD1
000567 940e 0bb6 	CALL SUBOPT_0x23
000569 940e 0f21 	CALL __PUTPARD1
                +
00056b 01fe     +MOVW R30 , R28
00056c 5eed     +SUBI R30 , LOW ( - 531 )
00056d 4ffd     +SBCI R31 , HIGH ( - 531 )
00056e 9001     +LD R0 , Z +
00056f 81f0     +LD R31 , Z
000570 2de0     +MOV R30 , R0
                 	__GETW1SX 531
000571 940e 0ea2 	CALL __CWD1
000573 940e 0f21 	CALL __PUTPARD1
000575 e08c      	LDI  R24,12
000576 940e 08ad 	CALL _sprintf
000578 9660      	ADIW R28,16
                 ; 0000 0221             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 0222             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 0223             puts_USART1(BUFF);
000579 01fe      	MOVW R30,R28
00057a 93fa      	ST   -Y,R31
00057b 93ea      	ST   -Y,R30
00057c dc85      	RCALL _puts_USART1
                 ; 0000 0224              TIMER0_TIME = 0;
00057d e0e0      	LDI  R30,LOW(0)
                +
00057e 01de     +MOVW R26 , R28
00057f 50ab     +SUBI R26 , LOW ( - 501 )
000580 4fbe     +SBCI R27 , HIGH ( - 501 )
000581 93ed     +ST X + , R30
000582 93ed     +ST X + , R30
000583 93ed     +ST X + , R30
000584 93ec     +ST X , R30
                 	__CLRD1SX 501
                 ; 0000 0225         }
                 ; 0000 0226 
                 ; 0000 0227     }
                 _0x62:
000585 ce3c      	RJMP _0x54
                 ; 0000 0228 }
                 _0x63:
000586 cfff      	RJMP _0x63
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000587 931a      	ST   -Y,R17
000588 930a      	ST   -Y,R16
000589 81aa      	LDD  R26,Y+2
00058a 81bb      	LDD  R27,Y+2+1
00058b 9612      	ADIW R26,2
00058c 940e 0f03 	CALL __GETW1P
00058e 9730      	SBIW R30,0
00058f f129      	BREQ _0x2000010
000590 81aa      	LDD  R26,Y+2
000591 81bb      	LDD  R27,Y+2+1
000592 9614      	ADIW R26,4
000593 940e 0f03 	CALL __GETW1P
000595 018f      	MOVW R16,R30
000596 9730      	SBIW R30,0
000597 f061      	BREQ _0x2000012
                +
000598 3002     +CPI R16 , LOW ( 2 )
000599 e0e0     +LDI R30 , HIGH ( 2 )
00059a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00059b f0c0      	BRLO _0x2000013
00059c 01f8      	MOVW R30,R16
00059d 9731      	SBIW R30,1
00059e 018f      	MOVW R16,R30
                +
00059f 81aa     +LDD R26 , Y + 2
0005a0 81bb     +LDD R27 , Y + 2 + 1
0005a1 9614     +ADIW R26 , 4
0005a2 93ed     +ST X + , R30
0005a3 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0005a4 81aa      	LDD  R26,Y+2
0005a5 81bb      	LDD  R27,Y+2+1
0005a6 9612      	ADIW R26,2
0005a7 940e 0bcd 	CALL SUBOPT_0x26
0005a9 9731      	SBIW R30,1
0005aa 81ac      	LDD  R26,Y+4
0005ab 83a0      	STD  Z+0,R26
0005ac 81aa      	LDD  R26,Y+2
0005ad 81bb      	LDD  R27,Y+2+1
0005ae 940e 0f03 	CALL __GETW1P
0005b0 23ff      	TST  R31
0005b1 f012      	BRMI _0x2000014
0005b2 940e 0bcd 	CALL SUBOPT_0x26
                 _0x2000014:
                 _0x2000013:
0005b4 c006      	RJMP _0x2000015
                 _0x2000010:
0005b5 81aa      	LDD  R26,Y+2
0005b6 81bb      	LDD  R27,Y+2+1
0005b7 efef      	LDI  R30,LOW(65535)
0005b8 efff      	LDI  R31,HIGH(65535)
0005b9 93ed      	ST   X+,R30
0005ba 93fc      	ST   X,R31
                 _0x2000015:
0005bb 8119      	LDD  R17,Y+1
0005bc 8108      	LDD  R16,Y+0
0005bd 9625      	ADIW R28,5
0005be 9508      	RET
                 __ftoe_G100:
0005bf 9724      	SBIW R28,4
0005c0 940e 0ab2 	CALL SUBOPT_0x4
0005c2 e8e0      	LDI  R30,LOW(128)
0005c3 83ea      	STD  Y+2,R30
0005c4 e3ef      	LDI  R30,LOW(63)
0005c5 83eb      	STD  Y+3,R30
0005c6 940e 0f39 	CALL __SAVELOCR4
0005c8 85ee      	LDD  R30,Y+14
0005c9 85ff      	LDD  R31,Y+14+1
0005ca 3fef      	CPI  R30,LOW(0xFFFF)
0005cb efaf      	LDI  R26,HIGH(0xFFFF)
0005cc 07fa      	CPC  R31,R26
0005cd f449      	BRNE _0x2000019
0005ce 85e8      	LDD  R30,Y+8
0005cf 85f9      	LDD  R31,Y+8+1
0005d0 93fa      	ST   -Y,R31
0005d1 93ea      	ST   -Y,R30
                +
0005d2 eee2     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
0005d3 e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
0005d4 940e 0bd3 	CALL SUBOPT_0x27
0005d6 c0b6      	RJMP _0x20A0005
                 _0x2000019:
0005d7 3fef      	CPI  R30,LOW(0x7FFF)
0005d8 e7af      	LDI  R26,HIGH(0x7FFF)
0005d9 07fa      	CPC  R31,R26
0005da f449      	BRNE _0x2000018
0005db 85e8      	LDD  R30,Y+8
0005dc 85f9      	LDD  R31,Y+8+1
0005dd 93fa      	ST   -Y,R31
0005de 93ea      	ST   -Y,R30
                +
0005df eee3     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
0005e0 e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
0005e1 940e 0bd3 	CALL SUBOPT_0x27
0005e3 c0a9      	RJMP _0x20A0005
                 _0x2000018:
0005e4 85ab      	LDD  R26,Y+11
0005e5 30a7      	CPI  R26,LOW(0x7)
0005e6 f010      	BRLO _0x200001B
0005e7 e0e6      	LDI  R30,LOW(6)
0005e8 87eb      	STD  Y+11,R30
                 _0x200001B:
0005e9 851b      	LDD  R17,Y+11
                 _0x200001C:
0005ea 2fe1      	MOV  R30,R17
0005eb 5011      	SUBI R17,1
0005ec 30e0      	CPI  R30,0
0005ed f019      	BREQ _0x200001E
0005ee 940e 0bd7 	CALL SUBOPT_0x28
0005f0 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0005f1 85ec     +LDD R30 , Y + 12
0005f2 85fd     +LDD R31 , Y + 12 + 1
0005f3 856e     +LDD R22 , Y + 12 + 2
0005f4 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0005f5 940e 0f33 	CALL __CPD10
0005f7 f421      	BRNE _0x200001F
0005f8 e030      	LDI  R19,LOW(0)
0005f9 940e 0bd7 	CALL SUBOPT_0x28
0005fb c02e      	RJMP _0x2000020
                 _0x200001F:
0005fc 853b      	LDD  R19,Y+11
0005fd 940e 0be2 	CALL SUBOPT_0x29
0005ff f009      	BREQ PC+2
000600 f410      	BRCC PC+3
000601 940c 060e 	JMP  _0x2000021
000603 940e 0bd7 	CALL SUBOPT_0x28
                 _0x2000022:
000605 940e 0be2 	CALL SUBOPT_0x29
000607 f028      	BRLO _0x2000024
000608 940e 0bea 	CALL SUBOPT_0x2A
00060a 940e 0bef 	CALL SUBOPT_0x2B
00060c cff8      	RJMP _0x2000022
                 _0x2000024:
00060d c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00060e 940e 0be2 	CALL SUBOPT_0x29
000610 f440      	BRSH _0x2000028
000611 940e 0bea 	CALL SUBOPT_0x2A
000613 940e 0bf8 	CALL SUBOPT_0x2C
000615 940e 0bff 	CALL SUBOPT_0x2D
000617 5031      	SUBI R19,LOW(1)
000618 cff5      	RJMP _0x2000026
                 _0x2000028:
000619 940e 0bd7 	CALL SUBOPT_0x28
                 _0x2000025:
                +
00061b 85ec     +LDD R30 , Y + 12
00061c 85fd     +LDD R31 , Y + 12 + 1
00061d 856e     +LDD R22 , Y + 12 + 2
00061e 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00061f 940e 0c04 	CALL SUBOPT_0x2E
000621 940e 0bff 	CALL SUBOPT_0x2D
000623 940e 0be2 	CALL SUBOPT_0x29
000625 f020      	BRLO _0x2000029
000626 940e 0bea 	CALL SUBOPT_0x2A
000628 940e 0bef 	CALL SUBOPT_0x2B
                 _0x2000029:
                 _0x2000020:
00062a e010      	LDI  R17,LOW(0)
                 _0x200002A:
00062b 85eb      	LDD  R30,Y+11
00062c 17e1      	CP   R30,R17
00062d f198      	BRLO _0x200002C
                +
00062e 81ac     +LDD R26 , Y + 4
00062f 81bd     +LDD R27 , Y + 4 + 1
000630 818e     +LDD R24 , Y + 4 + 2
000631 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000632 940e 0c0b 	CALL SUBOPT_0x2F
000634 940e 0c04 	CALL SUBOPT_0x2E
000636 940e 0c0f 	CALL SUBOPT_0x30
000638 940e 0acf 	CALL SUBOPT_0x8
00063a 940e 0ad9 	CALL SUBOPT_0xA
00063c 940e 0bea 	CALL SUBOPT_0x2A
00063e 940e 0e22 	CALL __DIVF21
000640 940e 0d11 	CALL __CFD1U
000642 2f0e      	MOV  R16,R30
000643 940e 0c13 	CALL SUBOPT_0x31
000645 940e 0c1a 	CALL SUBOPT_0x32
000647 27ff      	CLR  R31
000648 2766      	CLR  R22
000649 2777      	CLR  R23
00064a 940e 0d4a 	CALL __CDF1
                +
00064c 81ac     +LDD R26 , Y + 4
00064d 81bd     +LDD R27 , Y + 4 + 1
00064e 818e     +LDD R24 , Y + 4 + 2
00064f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000650 940e 0dd4 	CALL __MULF12
000652 940e 0bea 	CALL SUBOPT_0x2A
000654 940e 0ad4 	CALL SUBOPT_0x9
000656 940e 0bff 	CALL SUBOPT_0x2D
000658 2fe1      	MOV  R30,R17
000659 5f1f      	SUBI R17,-1
00065a 30e0      	CPI  R30,0
00065b f679      	BRNE _0x200002A
00065c 940e 0c13 	CALL SUBOPT_0x31
00065e e2ee      	LDI  R30,LOW(46)
00065f 93ec      	ST   X,R30
000660 cfca      	RJMP _0x200002A
                 _0x200002C:
000661 940e 0c1f 	CALL SUBOPT_0x33
000663 9731      	SBIW R30,1
000664 85aa      	LDD  R26,Y+10
000665 83a0      	STD  Z+0,R26
000666 3030      	CPI  R19,0
000667 f42c      	BRGE _0x200002E
000668 9531      	NEG  R19
000669 85a8      	LDD  R26,Y+8
00066a 85b9      	LDD  R27,Y+8+1
00066b e2ed      	LDI  R30,LOW(45)
00066c c003      	RJMP _0x200010E
                 _0x200002E:
00066d 85a8      	LDD  R26,Y+8
00066e 85b9      	LDD  R27,Y+8+1
00066f e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
000670 93ec      	ST   X,R30
000671 940e 0c1f 	CALL SUBOPT_0x33
000673 940e 0c1f 	CALL SUBOPT_0x33
000675 9731      	SBIW R30,1
000676 01bf      	MOVW R22,R30
000677 2fa3      	MOV  R26,R19
000678 e0ea      	LDI  R30,LOW(10)
000679 940e 0ebd 	CALL __DIVB21
00067b 5de0      	SUBI R30,-LOW(48)
00067c 01db      	MOVW R26,R22
00067d 93ec      	ST   X,R30
00067e 940e 0c1f 	CALL SUBOPT_0x33
000680 9731      	SBIW R30,1
000681 01bf      	MOVW R22,R30
000682 2fa3      	MOV  R26,R19
000683 e0ea      	LDI  R30,LOW(10)
000684 940e 0ee7 	CALL __MODB21
000686 5de0      	SUBI R30,-LOW(48)
000687 01db      	MOVW R26,R22
000688 93ec      	ST   X,R30
000689 85a8      	LDD  R26,Y+8
00068a 85b9      	LDD  R27,Y+8+1
00068b e0e0      	LDI  R30,LOW(0)
00068c 93ec      	ST   X,R30
                 _0x20A0005:
00068d 940e 0f40 	CALL __LOADLOCR4
                 _0x20A0006:
00068f 9660      	ADIW R28,16
000690 9508      	RET
                 __print_G100:
000691 97ef      	SBIW R28,63
000692 9761      	SBIW R28,17
000693 940e 0f37 	CALL __SAVELOCR6
000695 e010      	LDI  R17,0
                +
000696 01fe     +MOVW R30 , R28
000697 5ae8     +SUBI R30 , LOW ( - 88 )
000698 4fff     +SBCI R31 , HIGH ( - 88 )
000699 9001     +LD R0 , Z +
00069a 81f0     +LD R31 , Z
00069b 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00069c 87e8      	STD  Y+8,R30
00069d 87f9      	STD  Y+8+1,R31
                +
00069e 01fe     +MOVW R30 , R28
00069f 5aea     +SUBI R30 , LOW ( - 86 )
0006a0 4fff     +SBCI R31 , HIGH ( - 86 )
0006a1 9001     +LD R0 , Z +
0006a2 81f0     +LD R31 , Z
0006a3 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0006a4 83ee      	STD  Y+6,R30
0006a5 83ff      	STD  Y+6+1,R31
0006a6 81ae      	LDD  R26,Y+6
0006a7 81bf      	LDD  R27,Y+6+1
0006a8 940e 0af0 	CALL SUBOPT_0xD
                 _0x2000030:
0006aa 01de      	MOVW R26,R28
0006ab 5aa4      	SUBI R26,LOW(-(92))
0006ac 4fbf      	SBCI R27,HIGH(-(92))
0006ad 940e 0bcd 	CALL SUBOPT_0x26
0006af 9731      	SBIW R30,1
0006b0 91e4      	LPM  R30,Z
0006b1 2f2e      	MOV  R18,R30
0006b2 30e0      	CPI  R30,0
0006b3 f411      	BRNE PC+3
0006b4 940c 08a4 	JMP _0x2000032
0006b6 2fe1      	MOV  R30,R17
0006b7 30e0      	CPI  R30,0
0006b8 f439      	BRNE _0x2000036
0006b9 3225      	CPI  R18,37
0006ba f411      	BRNE _0x2000037
0006bb e011      	LDI  R17,LOW(1)
0006bc c002      	RJMP _0x2000038
                 _0x2000037:
0006bd 940e 0c25 	CALL SUBOPT_0x34
                 _0x2000038:
0006bf c1e3      	RJMP _0x2000035
                 _0x2000036:
0006c0 30e1      	CPI  R30,LOW(0x1)
0006c1 f4c1      	BRNE _0x2000039
0006c2 3225      	CPI  R18,37
0006c3 f419      	BRNE _0x200003A
0006c4 940e 0c25 	CALL SUBOPT_0x34
0006c6 c1db      	RJMP _0x200010F
                 _0x200003A:
0006c7 e012      	LDI  R17,LOW(2)
0006c8 e0e0      	LDI  R30,LOW(0)
0006c9 8bed      	STD  Y+21,R30
0006ca e000      	LDI  R16,LOW(0)
0006cb 322d      	CPI  R18,45
0006cc f411      	BRNE _0x200003B
0006cd e001      	LDI  R16,LOW(1)
0006ce c1d4      	RJMP _0x2000035
                 _0x200003B:
0006cf 322b      	CPI  R18,43
0006d0 f419      	BRNE _0x200003C
0006d1 e2eb      	LDI  R30,LOW(43)
0006d2 8bed      	STD  Y+21,R30
0006d3 c1cf      	RJMP _0x2000035
                 _0x200003C:
0006d4 3220      	CPI  R18,32
0006d5 f419      	BRNE _0x200003D
0006d6 e2e0      	LDI  R30,LOW(32)
0006d7 8bed      	STD  Y+21,R30
0006d8 c1ca      	RJMP _0x2000035
                 _0x200003D:
0006d9 c002      	RJMP _0x200003E
                 _0x2000039:
0006da 30e2      	CPI  R30,LOW(0x2)
0006db f439      	BRNE _0x200003F
                 _0x200003E:
0006dc e050      	LDI  R21,LOW(0)
0006dd e013      	LDI  R17,LOW(3)
0006de 3320      	CPI  R18,48
0006df f411      	BRNE _0x2000040
0006e0 6800      	ORI  R16,LOW(128)
0006e1 c1c1      	RJMP _0x2000035
                 _0x2000040:
0006e2 c002      	RJMP _0x2000041
                 _0x200003F:
0006e3 30e3      	CPI  R30,LOW(0x3)
0006e4 f491      	BRNE _0x2000042
                 _0x2000041:
0006e5 3320      	CPI  R18,48
0006e6 f010      	BRLO _0x2000044
0006e7 332a      	CPI  R18,58
0006e8 f008      	BRLO _0x2000045
                 _0x2000044:
0006e9 c007      	RJMP _0x2000043
                 _0x2000045:
0006ea e0aa      	LDI  R26,LOW(10)
0006eb 9f5a      	MUL  R21,R26
0006ec 2d50      	MOV  R21,R0
0006ed 2fe2      	MOV  R30,R18
0006ee 53e0      	SUBI R30,LOW(48)
0006ef 0f5e      	ADD  R21,R30
0006f0 c1b2      	RJMP _0x2000035
                 _0x2000043:
0006f1 e040      	LDI  R20,LOW(0)
0006f2 322e      	CPI  R18,46
0006f3 f411      	BRNE _0x2000046
0006f4 e014      	LDI  R17,LOW(4)
0006f5 c1ad      	RJMP _0x2000035
                 _0x2000046:
0006f6 c00f      	RJMP _0x2000047
                 _0x2000042:
0006f7 30e4      	CPI  R30,LOW(0x4)
0006f8 f499      	BRNE _0x2000049
0006f9 3320      	CPI  R18,48
0006fa f010      	BRLO _0x200004B
0006fb 332a      	CPI  R18,58
0006fc f008      	BRLO _0x200004C
                 _0x200004B:
0006fd c008      	RJMP _0x200004A
                 _0x200004C:
0006fe 6200      	ORI  R16,LOW(32)
0006ff e0aa      	LDI  R26,LOW(10)
000700 9f4a      	MUL  R20,R26
000701 2d40      	MOV  R20,R0
000702 2fe2      	MOV  R30,R18
000703 53e0      	SUBI R30,LOW(48)
000704 0f4e      	ADD  R20,R30
000705 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000706 362c      	CPI  R18,108
000707 f419      	BRNE _0x200004D
000708 6002      	ORI  R16,LOW(2)
000709 e015      	LDI  R17,LOW(5)
00070a c198      	RJMP _0x2000035
                 _0x200004D:
00070b c004      	RJMP _0x200004E
                 _0x2000049:
00070c 30e5      	CPI  R30,LOW(0x5)
00070d f011      	BREQ PC+3
00070e 940c 08a3 	JMP _0x2000035
                 _0x200004E:
000710 2fe2      	MOV  R30,R18
000711 36e3      	CPI  R30,LOW(0x63)
000712 f459      	BRNE _0x2000053
000713 940e 0c2e 	CALL SUBOPT_0x35
000715 940e 0c35 	CALL SUBOPT_0x36
000717 940e 0c2e 	CALL SUBOPT_0x35
000719 81a4      	LDD  R26,Z+4
00071a 93aa      	ST   -Y,R26
00071b 940e 0c3c 	CALL SUBOPT_0x37
00071d c184      	RJMP _0x2000054
                 _0x2000053:
00071e 34e5      	CPI  R30,LOW(0x45)
00071f f011      	BREQ _0x2000057
000720 36e5      	CPI  R30,LOW(0x65)
000721 f409      	BRNE _0x2000058
                 _0x2000057:
000722 c004      	RJMP _0x2000059
                 _0x2000058:
000723 36e6      	CPI  R30,LOW(0x66)
000724 f011      	BREQ PC+3
000725 940c 0771 	JMP _0x200005A
                 _0x2000059:
000727 01fe      	MOVW R30,R28
000728 9676      	ADIW R30,22
000729 87ee      	STD  Y+14,R30
00072a 87ff      	STD  Y+14+1,R31
00072b 940e 0c44 	CALL SUBOPT_0x38
00072d 940e 0f07 	CALL __GETD1P
00072f 940e 0c4b 	CALL SUBOPT_0x39
000731 940e 0c50 	CALL SUBOPT_0x3A
000733 85ad      	LDD  R26,Y+13
000734 23aa      	TST  R26
000735 f022      	BRMI _0x200005B
000736 89ad      	LDD  R26,Y+21
000737 32ab      	CPI  R26,LOW(0x2B)
000738 f049      	BREQ _0x200005D
000739 c017      	RJMP _0x200005E
                 _0x200005B:
00073a 940e 0c52 	CALL SUBOPT_0x3B
00073c 940e 0cde 	CALL __ANEGF1
00073e 940e 0c4b 	CALL SUBOPT_0x39
000740 e2ed      	LDI  R30,LOW(45)
000741 8bed      	STD  Y+21,R30
                 _0x200005D:
000742 ff07      	SBRS R16,7
000743 c005      	RJMP _0x200005F
000744 89ed      	LDD  R30,Y+21
000745 93ea      	ST   -Y,R30
000746 940e 0c3c 	CALL SUBOPT_0x37
000748 c008      	RJMP _0x2000060
                 _0x200005F:
000749 85ee      	LDD  R30,Y+14
00074a 85ff      	LDD  R31,Y+14+1
00074b 9631      	ADIW R30,1
00074c 87ee      	STD  Y+14,R30
00074d 87ff      	STD  Y+14+1,R31
00074e 9731      	SBIW R30,1
00074f 89ad      	LDD  R26,Y+21
000750 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000751 ff05      	SBRS R16,5
000752 e046      	LDI  R20,LOW(6)
000753 3626      	CPI  R18,102
000754 f461      	BRNE _0x2000062
000755 940e 0c52 	CALL SUBOPT_0x3B
000757 940e 0f21 	CALL __PUTPARD1
000759 934a      	ST   -Y,R20
00075a 89eb      	LDD  R30,Y+19
00075b 89fc      	LDD  R31,Y+19+1
00075c 93fa      	ST   -Y,R31
00075d 93ea      	ST   -Y,R30
00075e 940e 09dc 	CALL _ftoa
000760 c00b      	RJMP _0x2000063
                 _0x2000062:
000761 940e 0c52 	CALL SUBOPT_0x3B
000763 940e 0f21 	CALL __PUTPARD1
000765 934a      	ST   -Y,R20
000766 932a      	ST   -Y,R18
000767 89ec      	LDD  R30,Y+20
000768 89fd      	LDD  R31,Y+20+1
000769 93fa      	ST   -Y,R31
00076a 93ea      	ST   -Y,R30
00076b de53      	RCALL __ftoe_G100
                 _0x2000063:
00076c 01fe      	MOVW R30,R28
00076d 9676      	ADIW R30,22
00076e 940e 0c57 	CALL SUBOPT_0x3C
000770 c01e      	RJMP _0x2000064
                 _0x200005A:
000771 37e3      	CPI  R30,LOW(0x73)
000772 f439      	BRNE _0x2000066
000773 940e 0c50 	CALL SUBOPT_0x3A
000775 940e 0c5f 	CALL SUBOPT_0x3D
000777 940e 0c57 	CALL SUBOPT_0x3C
000779 c00e      	RJMP _0x2000067
                 _0x2000066:
00077a 37e0      	CPI  R30,LOW(0x70)
00077b f4c1      	BRNE _0x2000069
00077c 940e 0c50 	CALL SUBOPT_0x3A
00077e 940e 0c5f 	CALL SUBOPT_0x3D
000780 87ee      	STD  Y+14,R30
000781 87ff      	STD  Y+14+1,R31
000782 93fa      	ST   -Y,R31
000783 93ea      	ST   -Y,R30
000784 940e 09d1 	CALL _strlenf
000786 2f1e      	MOV  R17,R30
000787 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000788 770f      	ANDI R16,LOW(127)
000789 3040      	CPI  R20,0
00078a f011      	BREQ _0x200006B
00078b 1741      	CP   R20,R17
00078c f008      	BRLO _0x200006C
                 _0x200006B:
00078d c001      	RJMP _0x200006A
                 _0x200006C:
00078e 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
00078f e040      	LDI  R20,LOW(0)
000790 e0e0      	LDI  R30,LOW(0)
000791 8bec      	STD  Y+20,R30
000792 e030      	LDI  R19,LOW(0)
000793 c06e      	RJMP _0x200006D
                 _0x2000069:
000794 36e4      	CPI  R30,LOW(0x64)
000795 f011      	BREQ _0x2000070
000796 36e9      	CPI  R30,LOW(0x69)
000797 f411      	BRNE _0x2000071
                 _0x2000070:
000798 6004      	ORI  R16,LOW(4)
000799 c002      	RJMP _0x2000072
                 _0x2000071:
00079a 37e5      	CPI  R30,LOW(0x75)
00079b f4a1      	BRNE _0x2000073
                 _0x2000072:
00079c e0ea      	LDI  R30,LOW(10)
00079d 8bec      	STD  Y+20,R30
00079e ff01      	SBRS R16,1
00079f c008      	RJMP _0x2000074
                +
0007a0 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0007a1 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0007a2 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0007a3 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0007a4 940e 0c64 	CALL SUBOPT_0x3E
0007a6 e01a      	LDI  R17,LOW(10)
0007a7 c023      	RJMP _0x2000075
                 _0x2000074:
                +
0007a8 e1e0     +LDI R30 , LOW ( 0x2710 )
0007a9 e2f7     +LDI R31 , HIGH ( 0x2710 )
0007aa e060     +LDI R22 , BYTE3 ( 0x2710 )
0007ab e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0007ac 940e 0c64 	CALL SUBOPT_0x3E
0007ae e015      	LDI  R17,LOW(5)
0007af c01b      	RJMP _0x2000075
                 _0x2000073:
0007b0 35e8      	CPI  R30,LOW(0x58)
0007b1 f411      	BRNE _0x2000077
0007b2 6008      	ORI  R16,LOW(8)
0007b3 c004      	RJMP _0x2000078
                 _0x2000077:
0007b4 37e8      	CPI  R30,LOW(0x78)
0007b5 f011      	BREQ PC+3
0007b6 940c 08a2 	JMP _0x20000B6
                 _0x2000078:
0007b8 e1e0      	LDI  R30,LOW(16)
0007b9 8bec      	STD  Y+20,R30
0007ba ff01      	SBRS R16,1
0007bb c008      	RJMP _0x200007A
                +
0007bc e0e0     +LDI R30 , LOW ( 0x10000000 )
0007bd e0f0     +LDI R31 , HIGH ( 0x10000000 )
0007be e060     +LDI R22 , BYTE3 ( 0x10000000 )
0007bf e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0007c0 940e 0c64 	CALL SUBOPT_0x3E
0007c2 e018      	LDI  R17,LOW(8)
0007c3 c007      	RJMP _0x2000075
                 _0x200007A:
                +
0007c4 e0e0     +LDI R30 , LOW ( 0x1000 )
0007c5 e1f0     +LDI R31 , HIGH ( 0x1000 )
0007c6 e060     +LDI R22 , BYTE3 ( 0x1000 )
0007c7 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0007c8 940e 0c64 	CALL SUBOPT_0x3E
0007ca e014      	LDI  R17,LOW(4)
                 _0x2000075:
0007cb 3040      	CPI  R20,0
0007cc f011      	BREQ _0x200007B
0007cd 770f      	ANDI R16,LOW(127)
0007ce c001      	RJMP _0x200007C
                 _0x200007B:
0007cf e041      	LDI  R20,LOW(1)
                 _0x200007C:
0007d0 ff01      	SBRS R16,1
0007d1 c008      	RJMP _0x200007D
0007d2 940e 0c50 	CALL SUBOPT_0x3A
0007d4 940e 0c44 	CALL SUBOPT_0x38
0007d6 9614      	ADIW R26,4
0007d7 940e 0f07 	CALL __GETD1P
0007d9 c00f      	RJMP _0x2000110
                 _0x200007D:
0007da ff02      	SBRS R16,2
0007db c007      	RJMP _0x200007F
0007dc 940e 0c50 	CALL SUBOPT_0x3A
0007de 940e 0c5f 	CALL SUBOPT_0x3D
0007e0 940e 0ea2 	CALL __CWD1
0007e2 c006      	RJMP _0x2000110
                 _0x200007F:
0007e3 940e 0c50 	CALL SUBOPT_0x3A
0007e5 940e 0c5f 	CALL SUBOPT_0x3D
0007e7 2766      	CLR  R22
0007e8 2777      	CLR  R23
                 _0x2000110:
                +
0007e9 87ea     +STD Y + 10 , R30
0007ea 87fb     +STD Y + 10 + 1 , R31
0007eb 876c     +STD Y + 10 + 2 , R22
0007ec 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007ed ff02      	SBRS R16,2
0007ee c012      	RJMP _0x2000081
0007ef 85ad      	LDD  R26,Y+13
0007f0 23aa      	TST  R26
0007f1 f442      	BRPL _0x2000082
0007f2 940e 0c52 	CALL SUBOPT_0x3B
0007f4 940e 0e8f 	CALL __ANEGD1
0007f6 940e 0c4b 	CALL SUBOPT_0x39
0007f8 e2ed      	LDI  R30,LOW(45)
0007f9 8bed      	STD  Y+21,R30
                 _0x2000082:
0007fa 89ed      	LDD  R30,Y+21
0007fb 30e0      	CPI  R30,0
0007fc f019      	BREQ _0x2000083
0007fd 5f1f      	SUBI R17,-LOW(1)
0007fe 5f4f      	SUBI R20,-LOW(1)
0007ff c001      	RJMP _0x2000084
                 _0x2000083:
000800 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000801 2f34      	MOV  R19,R20
                 _0x200006D:
000802 fd00      	SBRC R16,0
000803 c014      	RJMP _0x2000085
                 _0x2000086:
000804 1715      	CP   R17,R21
000805 f410      	BRSH _0x2000089
000806 1735      	CP   R19,R21
000807 f008      	BRLO _0x200008A
                 _0x2000089:
000808 c00f      	RJMP _0x2000088
                 _0x200008A:
000809 ff07      	SBRS R16,7
00080a c008      	RJMP _0x200008B
00080b ff02      	SBRS R16,2
00080c c004      	RJMP _0x200008C
00080d 7f0b      	ANDI R16,LOW(251)
00080e 892d      	LDD  R18,Y+21
00080f 5011      	SUBI R17,LOW(1)
000810 c001      	RJMP _0x200008D
                 _0x200008C:
000811 e320      	LDI  R18,LOW(48)
                 _0x200008D:
000812 c001      	RJMP _0x200008E
                 _0x200008B:
000813 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000814 940e 0c25 	CALL SUBOPT_0x34
000816 5051      	SUBI R21,LOW(1)
000817 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000818 1714      	CP   R17,R20
000819 f490      	BRSH _0x2000091
00081a 6100      	ORI  R16,LOW(16)
00081b ff02      	SBRS R16,2
00081c c006      	RJMP _0x2000092
00081d 940e 0c69 	CALL SUBOPT_0x3F
00081f f009      	BREQ _0x2000093
000820 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000821 5011      	SUBI R17,LOW(1)
000822 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000823 e3e0      	LDI  R30,LOW(48)
000824 93ea      	ST   -Y,R30
000825 940e 0c3c 	CALL SUBOPT_0x37
000827 3050      	CPI  R21,0
000828 f009      	BREQ _0x2000094
000829 5051      	SUBI R21,LOW(1)
                 _0x2000094:
00082a 5041      	SUBI R20,LOW(1)
00082b cfec      	RJMP _0x200008F
                 _0x2000091:
00082c 2f31      	MOV  R19,R17
00082d 89ec      	LDD  R30,Y+20
00082e 30e0      	CPI  R30,0
00082f f4b9      	BRNE _0x2000095
                 _0x2000096:
000830 3030      	CPI  R19,0
000831 f0a1      	BREQ _0x2000098
000832 ff03      	SBRS R16,3
000833 c006      	RJMP _0x2000099
000834 85ee      	LDD  R30,Y+14
000835 85ff      	LDD  R31,Y+14+1
000836 9125      	LPM  R18,Z+
000837 87ee      	STD  Y+14,R30
000838 87ff      	STD  Y+14+1,R31
000839 c005      	RJMP _0x200009A
                 _0x2000099:
00083a 85ae      	LDD  R26,Y+14
00083b 85bf      	LDD  R27,Y+14+1
00083c 912d      	LD   R18,X+
00083d 87ae      	STD  Y+14,R26
00083e 87bf      	STD  Y+14+1,R27
                 _0x200009A:
00083f 940e 0c25 	CALL SUBOPT_0x34
000841 3050      	CPI  R21,0
000842 f009      	BREQ _0x200009B
000843 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000844 5031      	SUBI R19,LOW(1)
000845 cfea      	RJMP _0x2000096
                 _0x2000098:
000846 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000847 940e 0c7d 	CALL SUBOPT_0x40
000849 940e 0ec2 	CALL __DIVD21U
00084b 2f2e      	MOV  R18,R30
00084c 302a      	CPI  R18,10
00084d f030      	BRLO _0x20000A0
00084e ff03      	SBRS R16,3
00084f c002      	RJMP _0x20000A1
000850 5c29      	SUBI R18,-LOW(55)
000851 c001      	RJMP _0x20000A2
                 _0x20000A1:
000852 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000853 c001      	RJMP _0x20000A3
                 _0x20000A0:
000854 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000855 fd04      	SBRC R16,4
000856 c021      	RJMP _0x20000A5
000857 3321      	CPI  R18,49
000858 f460      	BRSH _0x20000A7
                +
000859 89a8     +LDD R26 , Y + 16
00085a 89b9     +LDD R27 , Y + 16 + 1
00085b 898a     +LDD R24 , Y + 16 + 2
00085c 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00085d 30a1     +CPI R26 , LOW ( 0x1 )
00085e e0e0     +LDI R30 , HIGH ( 0x1 )
00085f 07be     +CPC R27 , R30
000860 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000861 078e     +CPC R24 , R30
000862 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000863 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000864 f409      	BRNE _0x20000A6
                 _0x20000A7:
000865 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000866 1743      	CP   R20,R19
000867 f440      	BRSH _0x2000111
000868 1753      	CP   R21,R19
000869 f010      	BRLO _0x20000AC
00086a ff00      	SBRS R16,0
00086b c001      	RJMP _0x20000AD
                 _0x20000AC:
00086c c010      	RJMP _0x20000AB
                 _0x20000AD:
00086d e220      	LDI  R18,LOW(32)
00086e ff07      	SBRS R16,7
00086f c008      	RJMP _0x20000AE
                 _0x2000111:
000870 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000871 6100      	ORI  R16,LOW(16)
000872 ff02      	SBRS R16,2
000873 c004      	RJMP _0x20000AF
000874 940e 0c69 	CALL SUBOPT_0x3F
000876 f009      	BREQ _0x20000B0
000877 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000878 940e 0c25 	CALL SUBOPT_0x34
00087a 3050      	CPI  R21,0
00087b f009      	BREQ _0x20000B1
00087c 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
00087d 5031      	SUBI R19,LOW(1)
00087e 940e 0c7d 	CALL SUBOPT_0x40
000880 940e 0ef3 	CALL __MODD21U
000882 940e 0c4b 	CALL SUBOPT_0x39
000884 89ec      	LDD  R30,Y+20
                +
000885 89a8     +LDD R26 , Y + 16
000886 89b9     +LDD R27 , Y + 16 + 1
000887 898a     +LDD R24 , Y + 16 + 2
000888 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000889 27ff      	CLR  R31
00088a 2766      	CLR  R22
00088b 2777      	CLR  R23
00088c 940e 0ec2 	CALL __DIVD21U
00088e 940e 0c64 	CALL SUBOPT_0x3E
                +
000890 89e8     +LDD R30 , Y + 16
000891 89f9     +LDD R31 , Y + 16 + 1
000892 896a     +LDD R22 , Y + 16 + 2
000893 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000894 940e 0f33 	CALL __CPD10
000896 f009      	BREQ _0x200009F
000897 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000898 ff00      	SBRS R16,0
000899 c008      	RJMP _0x20000B2
                 _0x20000B3:
00089a 3050      	CPI  R21,0
00089b f031      	BREQ _0x20000B5
00089c 5051      	SUBI R21,LOW(1)
00089d e2e0      	LDI  R30,LOW(32)
00089e 93ea      	ST   -Y,R30
00089f 940e 0c3c 	CALL SUBOPT_0x37
0008a1 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
0008a2 e010      	LDI  R17,LOW(0)
                 _0x2000035:
0008a3 ce06      	RJMP _0x2000030
                 _0x2000032:
0008a4 81ae      	LDD  R26,Y+6
0008a5 81bf      	LDD  R27,Y+6+1
0008a6 940e 0f03 	CALL __GETW1P
0008a8 940e 0f3e 	CALL __LOADLOCR6
0008aa 96ef      	ADIW R28,63
0008ab 966f      	ADIW R28,31
0008ac 9508      	RET
                 _sprintf:
0008ad 92ff      	PUSH R15
0008ae 2ef8      	MOV  R15,R24
0008af 9726      	SBIW R28,6
0008b0 940e 0f39 	CALL __SAVELOCR4
0008b2 940e 0c86 	CALL SUBOPT_0x41
0008b4 9730      	SBIW R30,0
0008b5 f419      	BRNE _0x20000B7
0008b6 efef      	LDI  R30,LOW(65535)
0008b7 efff      	LDI  R31,HIGH(65535)
0008b8 c025      	RJMP _0x20A0004
                 _0x20000B7:
0008b9 01de      	MOVW R26,R28
0008ba 9616      	ADIW R26,6
0008bb 940e 0e87 	CALL __ADDW2R15
0008bd 018d      	MOVW R16,R26
0008be 940e 0c86 	CALL SUBOPT_0x41
0008c0 83ee      	STD  Y+6,R30
0008c1 83ff      	STD  Y+6+1,R31
0008c2 e0e0      	LDI  R30,LOW(0)
0008c3 87e8      	STD  Y+8,R30
0008c4 87e9      	STD  Y+8+1,R30
0008c5 01de      	MOVW R26,R28
0008c6 961a      	ADIW R26,10
0008c7 940e 0e87 	CALL __ADDW2R15
0008c9 940e 0f03 	CALL __GETW1P
0008cb 93fa      	ST   -Y,R31
0008cc 93ea      	ST   -Y,R30
0008cd 931a      	ST   -Y,R17
0008ce 930a      	ST   -Y,R16
0008cf e8e7      	LDI  R30,LOW(_put_buff_G100)
0008d0 e0f5      	LDI  R31,HIGH(_put_buff_G100)
0008d1 93fa      	ST   -Y,R31
0008d2 93ea      	ST   -Y,R30
0008d3 01fe      	MOVW R30,R28
0008d4 963a      	ADIW R30,10
0008d5 93fa      	ST   -Y,R31
0008d6 93ea      	ST   -Y,R30
0008d7 ddb9      	RCALL __print_G100
0008d8 019f      	MOVW R18,R30
0008d9 81ae      	LDD  R26,Y+6
0008da 81bf      	LDD  R27,Y+6+1
0008db e0e0      	LDI  R30,LOW(0)
0008dc 93ec      	ST   X,R30
0008dd 01f9      	MOVW R30,R18
                 _0x20A0004:
0008de 940e 0f40 	CALL __LOADLOCR4
0008e0 962a      	ADIW R28,10
0008e1 90ff      	POP  R15
0008e2 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
0008e3 817b         ldd  r23,y+3
0008e4 816a         ldd  r22,y+2
0008e5 81f9         ldd  r31,y+1
0008e6 81e8         ld   r30,y
0008e7 fb77         bst  r23,7
0008e8 0f77         lsl  r23
0008e9 fd67         sbrc r22,7
0008ea 6071         sbr  r23,1
0008eb 2f97         mov  r25,r23
0008ec 579e         subi r25,0x7e
0008ed f081         breq __ftrunc0
0008ee f078         brcs __ftrunc0
0008ef 3198         cpi  r25,24
0008f0 f490         brsh __ftrunc1
0008f1 27aa         clr  r26
0008f2 27bb         clr  r27
0008f3 2788         clr  r24
                 __ftrunc2:
0008f4 9408         sec
0008f5 9587         ror  r24
0008f6 95b7         ror  r27
0008f7 95a7         ror  r26
0008f8 959a         dec  r25
0008f9 f7d1         brne __ftrunc2
0008fa 23ea         and  r30,r26
0008fb 23fb         and  r31,r27
0008fc 2368         and  r22,r24
0008fd c005         rjmp __ftrunc1
                 __ftrunc0:
0008fe 94e8         clt
0008ff 2777         clr  r23
000900 27ee         clr  r30
000901 27ff         clr  r31
000902 2766         clr  r22
                 __ftrunc1:
000903 776f         cbr  r22,0x80
000904 9576         lsr  r23
000905 f408         brcc __ftrunc3
000906 6860         sbr  r22,0x80
                 __ftrunc3:
000907 f977         bld  r23,7
000908 91a9         ld   r26,y+
000909 91b9         ld   r27,y+
00090a 9189         ld   r24,y+
00090b 9199         ld   r25,y+
00090c 17ea         cp   r30,r26
00090d 07fb         cpc  r31,r27
00090e 0768         cpc  r22,r24
00090f 0779         cpc  r23,r25
000910 fb97         bst  r25,7
000911 9508         ret
                 _floor:
000912 940e 0aed 	CALL SUBOPT_0xC
000914 940e 0f21 	CALL __PUTPARD1
000916 940e 08e3 	CALL _ftrunc
000918 940e 0f1c 	CALL __PUTD1S0
00091a f419          brne __floor1
                 __floor0:
00091b 940e 0aed 	CALL SUBOPT_0xC
00091d c09c      	RJMP _0x20A0003
                 __floor1:
00091e f7e6          brtc __floor0
00091f 940e 0aed 	CALL SUBOPT_0xC
                +
000921 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000922 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000923 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000924 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000925 940e 0d7d 	CALL __SUBF12
000927 c092      	RJMP _0x20A0003
                 _sin:
000928 9724      	SBIW R28,4
000929 931a      	ST   -Y,R17
00092a e010      	LDI  R17,0
00092b 940e 0c8d 	CALL SUBOPT_0x42
                +
00092d e8e3     +LDI R30 , LOW ( 0x3E22F983 )
00092e eff9     +LDI R31 , HIGH ( 0x3E22F983 )
00092f e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000930 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000931 940e 0dd4 	CALL __MULF12
000933 940e 0c92 	CALL SUBOPT_0x43
000935 940e 0c97 	CALL SUBOPT_0x44
000937 940e 0c0f 	CALL SUBOPT_0x30
000939 940e 0c8d 	CALL SUBOPT_0x42
00093b 940e 0ad4 	CALL SUBOPT_0x9
00093d 940e 0c92 	CALL SUBOPT_0x43
00093f 940e 0c9c 	CALL SUBOPT_0x45
000941 940e 0e67 	CALL __CMPF12
000943 f009      	BREQ PC+2
000944 f410      	BRCC PC+3
000945 940c 0952 	JMP  _0x2020017
000947 940e 0c97 	CALL SUBOPT_0x44
                +
000949 e0a0     +LDI R26 , LOW ( 0x3F000000 )
00094a e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00094b e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00094c e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00094d 940e 0d7d 	CALL __SUBF12
00094f 940e 0c92 	CALL SUBOPT_0x43
000951 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000952 940e 0c8d 	CALL SUBOPT_0x42
                +
000954 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000955 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000956 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000957 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000958 940e 0e67 	CALL __CMPF12
00095a f009      	BREQ PC+2
00095b f410      	BRCC PC+3
00095c 940c 0964 	JMP  _0x2020018
00095e 940e 0c9c 	CALL SUBOPT_0x45
000960 940e 0d7d 	CALL __SUBF12
000962 940e 0c92 	CALL SUBOPT_0x43
                 _0x2020018:
000964 3010      	CPI  R17,0
000965 f031      	BREQ _0x2020019
000966 940e 0c97 	CALL SUBOPT_0x44
000968 940e 0cde 	CALL __ANEGF1
00096a 940e 0c92 	CALL SUBOPT_0x43
                 _0x2020019:
00096c 940e 0c97 	CALL SUBOPT_0x44
00096e 940e 0c8d 	CALL SUBOPT_0x42
000970 940e 0dd4 	CALL __MULF12
                +
000972 83e9     +STD Y + 1 , R30
000973 83fa     +STD Y + 1 + 1 , R31
000974 836b     +STD Y + 1 + 2 , R22
000975 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000976 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000977 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000978 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000979 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
00097a 940e 0dd4 	CALL __MULF12
00097c 01df      	MOVW R26,R30
00097d 01cb      	MOVW R24,R22
                +
00097e e1ed     +LDI R30 , LOW ( 0x422DE51D )
00097f eef5     +LDI R31 , HIGH ( 0x422DE51D )
000980 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000981 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000982 940e 0ad4 	CALL SUBOPT_0x9
000984 940e 0ca2 	CALL SUBOPT_0x46
                +
000986 e4ac     +LDI R26 , LOW ( 0x4104534C )
000987 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000988 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000989 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
00098a 940e 0d84 	CALL __ADDF12
00098c 940e 0c8d 	CALL SUBOPT_0x42
00098e 940e 0dd4 	CALL __MULF12
000990 937f      	PUSH R23
000991 936f      	PUSH R22
000992 93ff      	PUSH R31
000993 93ef      	PUSH R30
                +
000994 81e9     +LDD R30 , Y + 1
000995 81fa     +LDD R31 , Y + 1 + 1
000996 816b     +LDD R22 , Y + 1 + 2
000997 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000998 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000999 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
00099a ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
00099b e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
00099c 940e 0d84 	CALL __ADDF12
00099e 940e 0ca2 	CALL SUBOPT_0x46
                +
0009a0 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
0009a1 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
0009a2 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
0009a3 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
0009a4 940e 0d84 	CALL __ADDF12
0009a6 91af      	POP  R26
0009a7 91bf      	POP  R27
0009a8 918f      	POP  R24
0009a9 919f      	POP  R25
0009aa 940e 0e22 	CALL __DIVF21
0009ac 8118      	LDD  R17,Y+0
0009ad 9629      	ADIW R28,9
0009ae 9508      	RET
                 _cos:
0009af 940e 0f17 	CALL __GETD2S0
                +
0009b1 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
0009b2 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
0009b3 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
0009b4 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
0009b5 940e 0d7d 	CALL __SUBF12
0009b7 940e 0f21 	CALL __PUTPARD1
0009b9 df6e      	RCALL _sin
                 _0x20A0003:
0009ba 9624      	ADIW R28,4
0009bb 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
0009bc 91e9          ld   r30,y+
0009bd 91f9          ld   r31,y+
0009be 91a9          ld   r26,y+
0009bf 91b9          ld   r27,y+
0009c0 01cd          movw r24,r26
                 strcpyf0:
0009c1 9005      	lpm  r0,z+
0009c2 920d          st   x+,r0
0009c3 2000          tst  r0
0009c4 f7e1          brne strcpyf0
0009c5 01fc          movw r30,r24
0009c6 9508          ret
                 _strlen:
0009c7 91a9          ld   r26,y+
0009c8 91b9          ld   r27,y+
0009c9 27ee          clr  r30
0009ca 27ff          clr  r31
                 strlen0:
0009cb 916d          ld   r22,x+
0009cc 2366          tst  r22
0009cd f011          breq strlen1
0009ce 9631          adiw r30,1
0009cf cffb          rjmp strlen0
                 strlen1:
0009d0 9508          ret
                 _strlenf:
0009d1 27aa          clr  r26
0009d2 27bb          clr  r27
0009d3 91e9          ld   r30,y+
0009d4 91f9          ld   r31,y+
                 strlenf0:
0009d5 9005      	lpm  r0,z+
0009d6 2000          tst  r0
0009d7 f011          breq strlenf1
0009d8 9611          adiw r26,1
0009d9 cffb          rjmp strlenf0
                 strlenf1:
0009da 01fd          movw r30,r26
0009db 9508          ret
                 
                 	.CSEG
                 _ftoa:
0009dc 9724      	SBIW R28,4
0009dd d0d4      	RCALL SUBOPT_0x4
0009de e0e0      	LDI  R30,LOW(0)
0009df 83ea      	STD  Y+2,R30
0009e0 e3ef      	LDI  R30,LOW(63)
0009e1 83eb      	STD  Y+3,R30
0009e2 931a      	ST   -Y,R17
0009e3 930a      	ST   -Y,R16
0009e4 85eb      	LDD  R30,Y+11
0009e5 85fc      	LDD  R31,Y+11+1
0009e6 3fef      	CPI  R30,LOW(0xFFFF)
0009e7 efaf      	LDI  R26,HIGH(0xFFFF)
0009e8 07fa      	CPC  R31,R26
0009e9 f429      	BRNE _0x208000D
0009ea d2be      	RCALL SUBOPT_0x47
                +
0009eb eeea     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
0009ec e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
0009ed d1e5      	RCALL SUBOPT_0x27
0009ee c085      	RJMP _0x20A0002
                 _0x208000D:
0009ef 3fef      	CPI  R30,LOW(0x7FFF)
0009f0 e7af      	LDI  R26,HIGH(0x7FFF)
0009f1 07fa      	CPC  R31,R26
0009f2 f429      	BRNE _0x208000C
0009f3 d2b5      	RCALL SUBOPT_0x47
                +
0009f4 eeeb     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
0009f5 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
0009f6 d1dc      	RCALL SUBOPT_0x27
0009f7 c07c      	RJMP _0x20A0002
                 _0x208000C:
0009f8 85ac      	LDD  R26,Y+12
0009f9 23aa      	TST  R26
0009fa f452      	BRPL _0x208000F
                +
0009fb 85e9     +LDD R30 , Y + 9
0009fc 85fa     +LDD R31 , Y + 9 + 1
0009fd 856b     +LDD R22 , Y + 9 + 2
0009fe 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0009ff 940e 0cde 	CALL __ANEGF1
000a01 d2ac      	RCALL SUBOPT_0x48
000a02 d2b0      	RCALL SUBOPT_0x49
000a03 e2ed      	LDI  R30,LOW(45)
000a04 93ec      	ST   X,R30
                 _0x208000F:
000a05 85a8      	LDD  R26,Y+8
000a06 30a7      	CPI  R26,LOW(0x7)
000a07 f010      	BRLO _0x2080010
000a08 e0e6      	LDI  R30,LOW(6)
000a09 87e8      	STD  Y+8,R30
                 _0x2080010:
000a0a 8518      	LDD  R17,Y+8
                 _0x2080011:
000a0b 2fe1      	MOV  R30,R17
000a0c 5011      	SUBI R17,1
000a0d 30e0      	CPI  R30,0
000a0e f021      	BREQ _0x2080013
000a0f d2aa      	RCALL SUBOPT_0x4A
000a10 d1fa      	RCALL SUBOPT_0x2F
000a11 d2ad      	RCALL SUBOPT_0x4B
000a12 cff8      	RJMP _0x2080011
                 _0x2080013:
000a13 d2b0      	RCALL SUBOPT_0x4C
000a14 940e 0d84 	CALL __ADDF12
000a16 d297      	RCALL SUBOPT_0x48
000a17 e010      	LDI  R17,LOW(0)
                +
000a18 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000a19 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000a1a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000a1b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000a1c d2a2      	RCALL SUBOPT_0x4B
                 _0x2080014:
000a1d d2a6      	RCALL SUBOPT_0x4C
000a1e 940e 0e67 	CALL __CMPF12
000a20 f060      	BRLO _0x2080016
000a21 d298      	RCALL SUBOPT_0x4A
000a22 d1d5      	RCALL SUBOPT_0x2C
000a23 d29b      	RCALL SUBOPT_0x4B
000a24 5f1f      	SUBI R17,-LOW(1)
000a25 3217      	CPI  R17,39
000a26 f028      	BRLO _0x2080017
000a27 d281      	RCALL SUBOPT_0x47
                +
000a28 eeef     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000a29 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000a2a d1a8      	RCALL SUBOPT_0x27
000a2b c048      	RJMP _0x20A0002
                 _0x2080017:
000a2c cff0      	RJMP _0x2080014
                 _0x2080016:
000a2d 3010      	CPI  R17,0
000a2e f421      	BRNE _0x2080018
000a2f d283      	RCALL SUBOPT_0x49
000a30 e3e0      	LDI  R30,LOW(48)
000a31 93ec      	ST   X,R30
000a32 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000a33 2fe1      	MOV  R30,R17
000a34 5011      	SUBI R17,1
000a35 30e0      	CPI  R30,0
000a36 f0c9      	BREQ _0x208001C
000a37 d282      	RCALL SUBOPT_0x4A
000a38 d1d2      	RCALL SUBOPT_0x2F
000a39 d1ca      	RCALL SUBOPT_0x2E
000a3a d1d4      	RCALL SUBOPT_0x30
000a3b d283      	RCALL SUBOPT_0x4B
000a3c d287      	RCALL SUBOPT_0x4C
000a3d 940e 0e22 	CALL __DIVF21
000a3f 940e 0d11 	CALL __CFD1U
000a41 2f0e      	MOV  R16,R30
000a42 d270      	RCALL SUBOPT_0x49
000a43 d1d6      	RCALL SUBOPT_0x32
000a44 e0f0      	LDI  R31,0
000a45 d274      	RCALL SUBOPT_0x4A
000a46 940e 0ea2 	CALL __CWD1
000a48 940e 0d4a 	CALL __CDF1
000a4a 940e 0dd4 	CALL __MULF12
000a4c d280      	RCALL SUBOPT_0x4D
000a4d d086      	RCALL SUBOPT_0x9
000a4e d25f      	RCALL SUBOPT_0x48
000a4f cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000a50 85e8      	LDD  R30,Y+8
000a51 30e0      	CPI  R30,0
000a52 f0e9      	BREQ _0x20A0001
000a53 d25f      	RCALL SUBOPT_0x49
000a54 e2ee      	LDI  R30,LOW(46)
000a55 93ec      	ST   X,R30
                 _0x208001E:
000a56 85e8      	LDD  R30,Y+8
000a57 50e1      	SUBI R30,LOW(1)
000a58 87e8      	STD  Y+8,R30
000a59 5fef      	SUBI R30,-LOW(1)
000a5a f0a9      	BREQ _0x2080020
000a5b d271      	RCALL SUBOPT_0x4D
000a5c d19b      	RCALL SUBOPT_0x2C
000a5d d250      	RCALL SUBOPT_0x48
                +
000a5e 85e9     +LDD R30 , Y + 9
000a5f 85fa     +LDD R31 , Y + 9 + 1
000a60 856b     +LDD R22 , Y + 9 + 2
000a61 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000a62 940e 0d11 	CALL __CFD1U
000a64 2f0e      	MOV  R16,R30
000a65 d24d      	RCALL SUBOPT_0x49
000a66 d1b3      	RCALL SUBOPT_0x32
000a67 e0f0      	LDI  R31,0
000a68 d264      	RCALL SUBOPT_0x4D
000a69 940e 0ea2 	CALL __CWD1
000a6b 940e 0d4a 	CALL __CDF1
000a6d d066      	RCALL SUBOPT_0x9
000a6e d23f      	RCALL SUBOPT_0x48
000a6f cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000a70 81ae      	LDD  R26,Y+6
000a71 81bf      	LDD  R27,Y+6+1
000a72 e0e0      	LDI  R30,LOW(0)
000a73 93ec      	ST   X,R30
                 _0x20A0002:
000a74 8119      	LDD  R17,Y+1
000a75 8108      	LDD  R16,Y+0
000a76 962d      	ADIW R28,13
000a77 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000a78 81aa      	LDD  R26,Y+2
000a79 81bb      	LDD  R27,Y+2+1
000a7a 27ee      	CLR  R30
000a7b 0fa1      	ADD  R26,R17
000a7c 1fbe      	ADC  R27,R30
000a7d 91ec      	LD   R30,X
000a7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000a7f 9728      	SBIW R28,8
000a80 940e 0f39 	CALL __SAVELOCR4
                +
000a82 e020     +LDI R18 , LOW ( 0 )
000a83 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000a84 89e8      	LDD  R30,Y+16
000a85 83ec      	STD  Y+4,R30
000a86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000a87 83ed      	STD  Y+5,R30
000a88 85ee      	LDD  R30,Y+14
000a89 85ff      	LDD  R31,Y+14+1
000a8a 940e 0e97 	CALL __ASRW8
000a8c 83ee      	STD  Y+6,R30
000a8d 85ee      	LDD  R30,Y+14
000a8e 83ef      	STD  Y+7,R30
000a8f 85ec      	LDD  R30,Y+12
000a90 85fd      	LDD  R31,Y+12+1
000a91 940e 0e97 	CALL __ASRW8
000a93 87e8      	STD  Y+8,R30
000a94 85ec      	LDD  R30,Y+12
000a95 87e9      	STD  Y+9,R30
000a96 e0e0      	LDI  R30,LOW(0)
000a97 87ea      	STD  Y+10,R30
000a98 87eb      	STD  Y+11,R30
000a99 01fe      	MOVW R30,R28
000a9a 9634      	ADIW R30,4
000a9b 93fa      	ST   -Y,R31
000a9c 93ea      	ST   -Y,R30
000a9d e0e6      	LDI  R30,LOW(6)
000a9e e0f0      	LDI  R31,HIGH(6)
000a9f 93fa      	ST   -Y,R31
000aa0 93ea      	ST   -Y,R30
000aa1 940e 0227 	CALL _CRC16
000aa3 018f      	MOVW R16,R30
000aa4 01f8      	MOVW R30,R16
000aa5 87ea      	STD  Y+10,R30
                +
000aa6 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000aa7 e020     +LDI R18 , LOW ( 0 )
000aa8 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000aa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000aaa 01de      	MOVW R26,R28
000aab 9614      	ADIW R26,4
000aac 0fa2      	ADD  R26,R18
000aad 1fb3      	ADC  R27,R19
000aae 91ec      	LD   R30,X
000aaf 93ea      	ST   -Y,R30
000ab0 940c 0221 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000ab2 e0e0      	LDI  R30,LOW(0)
000ab3 83e8      	ST   Y,R30
000ab4 83e9      	STD  Y+1,R30
000ab5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000ab6 85ae      	LDD  R26,Y+14
000ab7 85bf      	LDD  R27,Y+14+1
000ab8 940e 0f07 	CALL __GETD1P
000aba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000abb 85ac      	LDD  R26,Y+12
000abc 85bd      	LDD  R27,Y+12+1
000abd 940e 0f07 	CALL __GETD1P
000abf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
000ac0 e3ab     +LDI R26 , LOW ( 0x3E8FDF3B )
000ac1 edbf     +LDI R27 , HIGH ( 0x3E8FDF3B )
000ac2 e88f     +LDI R24 , BYTE3 ( 0x3E8FDF3B )
000ac3 e39e     +LDI R25 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD2N 0x3E8FDF3B
000ac4 940e 0dd4 	CALL __MULF12
000ac6 01df      	MOVW R26,R30
000ac7 01cb      	MOVW R24,R22
                +
000ac8 e0e0     +LDI R30 , LOW ( 0x40000000 )
000ac9 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000aca e060     +LDI R22 , BYTE3 ( 0x40000000 )
000acb e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000acc 940e 0e22 	CALL __DIVF21
000ace 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
000acf 83ec     +STD Y + 4 , R30
000ad0 83fd     +STD Y + 4 + 1 , R31
000ad1 836e     +STD Y + 4 + 2 , R22
000ad2 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000ad3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000ad4 940e 0f26 	CALL __SWAPD12
000ad6 940e 0d7d 	CALL __SUBF12
000ad8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
000ad9 81ec     +LDD R30 , Y + 4
000ada 81fd     +LDD R31 , Y + 4 + 1
000adb 816e     +LDD R22 , Y + 4 + 2
000adc 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000add 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
000ade ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000adf ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000ae0 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000ae1 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000ae2 940e 0dd4 	CALL __MULF12
                +
000ae4 e0a0     +LDI R26 , LOW ( 0x41A00000 )
000ae5 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000ae6 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000ae7 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000ae8 940e 0dd4 	CALL __MULF12
000aea 940e 0d13 	CALL __CFD1
000aec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000aed 940e 0f12 	CALL __GETD1S0
000aef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000af0 e0e0      	LDI  R30,LOW(0)
000af1 e0f0      	LDI  R31,HIGH(0)
000af2 93ed      	ST   X+,R30
000af3 93fc      	ST   X,R31
000af4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000af5 93fa      	ST   -Y,R31
000af6 93ea      	ST   -Y,R30
000af7 940e 0256 	CALL _RTU_WriteOperate0
000af9 e0e5      	LDI  R30,LOW(5)
000afa e0f0      	LDI  R31,HIGH(5)
000afb 93fa      	ST   -Y,R31
000afc 93ea      	ST   -Y,R30
000afd 940c 0cd2 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000aff 93ea      	ST   -Y,R30
000b00 e7e8      	LDI  R30,LOW(120)
000b01 e0f0      	LDI  R31,HIGH(120)
000b02 93fa      	ST   -Y,R31
000b03 93ea      	ST   -Y,R30
000b04 e0e1      	LDI  R30,LOW(1)
000b05 e0f0      	LDI  R31,HIGH(1)
000b06 cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
000b07 e0f0      	LDI  R31,0
000b08 0fea      	ADD  R30,R26
000b09 1ffb      	ADC  R31,R27
000b0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000b0b 2da4      	MOV  R26,R4
000b0c e0b0      	LDI  R27,0
000b0d 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000b0e 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000b0f b1ec      	IN   R30,0xC
000b10 93ec      	ST   X,R30
000b11 9443      	INC  R4
000b12 e0e0      	LDI  R30,LOW(0)
000b13 bde4      	OUT  0x24,R30
000b14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000b15 93ea      	ST   -Y,R30
000b16 93fa      	ST   -Y,R31
000b17 b7ef      	IN   R30,SREG
000b18 93ea      	ST   -Y,R30
000b19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000b1a e0f0      	LDI  R31,0
000b1b 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000b1c 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000b1d 8310      	ST   Z,R17
000b1e 9493      	INC  R9
000b1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000b20 93fa      	ST   -Y,R31
000b21 93ea      	ST   -Y,R30
000b22 940c 0cd2 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x15:
                +
000b24 e9ea     +LDI R30 , LOW ( 0x3E19999A )
000b25 e9f9     +LDI R31 , HIGH ( 0x3E19999A )
000b26 e169     +LDI R22 , BYTE3 ( 0x3E19999A )
000b27 e37e     +LDI R23 , BYTE4 ( 0x3E19999A )
                 	__GETD1N 0x3E19999A
                +
000b28 01de     +MOVW R26 , R28
000b29 5ca7     +SUBI R26 , LOW ( - 569 )
000b2a 4fbd     +SBCI R27 , HIGH ( - 569 )
000b2b 93ed     +ST X + , R30
000b2c 93fd     +ST X + , R31
000b2d 936d     +ST X + , R22
000b2e 937c     +ST X , R23
                 	__PUTD1SX 569
000b2f e0e0      	LDI  R30,LOW(0)
                +
000b30 01de     +MOVW R26 , R28
000b31 5ca3     +SUBI R26 , LOW ( - 573 )
000b32 4fbd     +SBCI R27 , HIGH ( - 573 )
000b33 93ed     +ST X + , R30
000b34 93ed     +ST X + , R30
000b35 93ed     +ST X + , R30
000b36 93ec     +ST X , R30
                 	__CLRD1SX 573
000b37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
                +
000b38 01de     +MOVW R26 , R28
000b39 5eaf     +SUBI R26 , LOW ( - 529 )
000b3a 4fbd     +SBCI R27 , HIGH ( - 529 )
000b3b 900d     +LD R0 , X +
000b3c 901d     +LD R1 , X +
000b3d 918d     +LD R24 , X +
000b3e 919c     +LD R25 , X
000b3f 01d0     +MOVW R26 , R0
                 	__GETD2SX 529
000b40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
                +
000b41 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000b42 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000b43 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000b44 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000b45 940e 0e67 	CALL __CMPF12
000b47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
000b48 01fe      	MOVW R30,R28
000b49 5ce7      	SUBI R30,LOW(-(569))
000b4a 4ffd      	SBCI R31,HIGH(-(569))
000b4b 93fa      	ST   -Y,R31
000b4c 93ea      	ST   -Y,R30
000b4d 01fe      	MOVW R30,R28
000b4e 5ce1      	SUBI R30,LOW(-(575))
000b4f 4ffd      	SBCI R31,HIGH(-(575))
000b50 93fa      	ST   -Y,R31
000b51 93ea      	ST   -Y,R30
000b52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
000b53 01fe      	MOVW R30,R28
000b54 5ce3      	SUBI R30,LOW(-(573))
000b55 4ffd      	SBCI R31,HIGH(-(573))
000b56 93fa      	ST   -Y,R31
000b57 93ea      	ST   -Y,R30
000b58 940c 0277 	JMP  _Make_MSPEED
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A:
000b5a 935a      	ST   -Y,R21
000b5b 934a      	ST   -Y,R20
                +
000b5c 01fe     +MOVW R30 , R28
000b5d 5ce7     +SUBI R30 , LOW ( - 569 )
000b5e 4ffd     +SBCI R31 , HIGH ( - 569 )
000b5f 9001     +LD R0 , Z +
000b60 81f0     +LD R31 , Z
000b61 2de0     +MOV R30 , R0
                 	__GETW1SX 569
000b62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1B:
                +
000b63 01de     +MOVW R26 , R28
000b64 50ac     +SUBI R26 , LOW ( - 500 )
000b65 4fbe     +SBCI R27 , HIGH ( - 500 )
000b66 93ec     +ST X , R30
                 	__PUTB1SX 500
000b67 e0e0      	LDI  R30,LOW(0)
000b68 e0f0      	LDI  R31,HIGH(0)
000b69 93fa      	ST   -Y,R31
000b6a 93ea      	ST   -Y,R30
000b6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
                +
000b6c 01de     +MOVW R26 , R28
000b6d 5fa3     +SUBI R26 , LOW ( - 525 )
000b6e 4fbd     +SBCI R27 , HIGH ( - 525 )
000b6f 900d     +LD R0 , X +
000b70 901d     +LD R1 , X +
000b71 918d     +LD R24 , X +
000b72 919c     +LD R25 , X
000b73 01d0     +MOVW R26 , R0
                 	__GETD2SX 525
000b74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000b75 e0e5      	LDI  R30,LOW(5)
000b76 e0f0      	LDI  R31,HIGH(5)
000b77 cfa8      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1E:
000b78 93ea      	ST   -Y,R30
000b79 e0e2      	LDI  R30,LOW(2)
000b7a e0f0      	LDI  R31,HIGH(2)
000b7b 93fa      	ST   -Y,R31
000b7c 93ea      	ST   -Y,R30
000b7d 93fa      	ST   -Y,R31
000b7e 93ea      	ST   -Y,R30
000b7f 940e 0265 	CALL _RTU_ReedOperate0
000b81 cff3      	RJMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1F:
000b82 940e 0ea2 	CALL __CWD1
000b84 940e 0d4a 	CALL __CDF1
000b86 01df      	MOVW R26,R30
000b87 01cb      	MOVW R24,R22
                +
000b88 e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000b89 effc     +LDI R31 , HIGH ( 0x453EFC29 )
000b8a e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000b8b e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000b8c 940e 0e22 	CALL __DIVF21
000b8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
                +
000b8f 01de     +MOVW R26 , R28
000b90 5fa7     +SUBI R26 , LOW ( - 521 )
000b91 4fbd     +SBCI R27 , HIGH ( - 521 )
000b92 900d     +LD R0 , X +
000b93 901d     +LD R1 , X +
000b94 918d     +LD R24 , X +
000b95 919c     +LD R25 , X
000b96 01d0     +MOVW R26 , R0
                 	__GETD2SX 521
000b97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21:
                +
000b98 01fe     +MOVW R30 , R28
000b99 5eeb     +SUBI R30 , LOW ( - 533 )
000b9a 4ffd     +SBCI R31 , HIGH ( - 533 )
000b9b 9001     +LD R0 , Z +
000b9c 9011     +LD R1 , Z +
000b9d 9161     +LD R22 , Z +
000b9e 8170     +LD R23 , Z
000b9f 01f0     +MOVW R30 , R0
                 	__GETD1SX 533
                +
000ba0 01de     +MOVW R26 , R28
000ba1 5ea3     +SUBI R26 , LOW ( - 541 )
000ba2 4fbd     +SBCI R27 , HIGH ( - 541 )
000ba3 900d     +LD R0 , X +
000ba4 901d     +LD R1 , X +
000ba5 918d     +LD R24 , X +
000ba6 919c     +LD R25 , X
000ba7 01d0     +MOVW R26 , R0
                 	__GETD2SX 541
000ba8 940e 0dd4 	CALL __MULF12
000baa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
000bab 01fe     +MOVW R30 , R28
000bac 5fe7     +SUBI R30 , LOW ( - 521 )
000bad 4ffd     +SBCI R31 , HIGH ( - 521 )
000bae 9001     +LD R0 , Z +
000baf 9011     +LD R1 , Z +
000bb0 9161     +LD R22 , Z +
000bb1 8170     +LD R23 , Z
000bb2 01f0     +MOVW R30 , R0
                 	__GETD1SX 521
000bb3 940e 0f21 	CALL __PUTPARD1
000bb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x23:
                +
000bb6 01fe     +MOVW R30 , R28
000bb7 5eeb     +SUBI R30 , LOW ( - 533 )
000bb8 4ffd     +SBCI R31 , HIGH ( - 533 )
000bb9 9001     +LD R0 , Z +
000bba 9011     +LD R1 , Z +
000bbb 9161     +LD R22 , Z +
000bbc 8170     +LD R23 , Z
000bbd 01f0     +MOVW R30 , R0
                 	__GETD1SX 533
000bbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
000bbf 01de     +MOVW R26 , R28
000bc0 50ab     +SUBI R26 , LOW ( - 501 )
000bc1 4fbe     +SBCI R27 , HIGH ( - 501 )
000bc2 900d     +LD R0 , X +
000bc3 901d     +LD R1 , X +
000bc4 918d     +LD R24 , X +
000bc5 919c     +LD R25 , X
000bc6 01d0     +MOVW R26 , R0
                 	__GETD2SX 501
000bc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x25:
                +
000bc8 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000bc9 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000bca ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000bcb e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000bcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
000bcd 91ed      	LD   R30,X+
000bce 91fd      	LD   R31,X+
000bcf 9631      	ADIW R30,1
000bd0 93fe      	ST   -X,R31
000bd1 93ee      	ST   -X,R30
000bd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
000bd3 93fa      	ST   -Y,R31
000bd4 93ea      	ST   -Y,R30
000bd5 940c 09bc 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x28:
                +
000bd7 81ac     +LDD R26 , Y + 4
000bd8 81bd     +LDD R27 , Y + 4 + 1
000bd9 818e     +LDD R24 , Y + 4 + 2
000bda 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000bdb e0e0     +LDI R30 , LOW ( 0x41200000 )
000bdc e0f0     +LDI R31 , HIGH ( 0x41200000 )
000bdd e260     +LDI R22 , BYTE3 ( 0x41200000 )
000bde e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000bdf 940e 0dd4 	CALL __MULF12
000be1 ceed      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x29:
000be2 def6      	RCALL SUBOPT_0xA
                +
000be3 85ac     +LDD R26 , Y + 12
000be4 85bd     +LDD R27 , Y + 12 + 1
000be5 858e     +LDD R24 , Y + 12 + 2
000be6 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000be7 940e 0e67 	CALL __CMPF12
000be9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A:
                +
000bea 85ac     +LDD R26 , Y + 12
000beb 85bd     +LDD R27 , Y + 12 + 1
000bec 858e     +LDD R24 , Y + 12 + 2
000bed 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000bee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2B:
000bef dfd8      	RCALL SUBOPT_0x25
000bf0 940e 0dd4 	CALL __MULF12
                +
000bf2 87ec     +STD Y + 12 , R30
000bf3 87fd     +STD Y + 12 + 1 , R31
000bf4 876e     +STD Y + 12 + 2 , R22
000bf5 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000bf6 5f3f      	SUBI R19,-LOW(1)
000bf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2C:
                +
000bf8 e0e0     +LDI R30 , LOW ( 0x41200000 )
000bf9 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000bfa e260     +LDI R22 , BYTE3 ( 0x41200000 )
000bfb e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000bfc 940e 0dd4 	CALL __MULF12
000bfe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
000bff 87ec     +STD Y + 12 , R30
000c00 87fd     +STD Y + 12 + 1 , R31
000c01 876e     +STD Y + 12 + 2 , R22
000c02 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000c03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E:
                +
000c04 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c05 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c06 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c07 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c08 940e 0d84 	CALL __ADDF12
000c0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
000c0b dfbc      	RCALL SUBOPT_0x25
000c0c 940e 0dd4 	CALL __MULF12
000c0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
000c0f 940e 0f21 	CALL __PUTPARD1
000c11 940c 0912 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000c13 85a8      	LDD  R26,Y+8
000c14 85b9      	LDD  R27,Y+8+1
000c15 9611      	ADIW R26,1
000c16 87a8      	STD  Y+8,R26
000c17 87b9      	STD  Y+8+1,R27
000c18 9711      	SBIW R26,1
000c19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000c1a 2fe0      	MOV  R30,R16
000c1b 5de0      	SUBI R30,-LOW(48)
000c1c 93ec      	ST   X,R30
000c1d 2fe0      	MOV  R30,R16
000c1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x33:
000c1f 85e8      	LDD  R30,Y+8
000c20 85f9      	LDD  R31,Y+8+1
000c21 9631      	ADIW R30,1
000c22 87e8      	STD  Y+8,R30
000c23 87f9      	STD  Y+8+1,R31
000c24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x34:
000c25 932a      	ST   -Y,R18
000c26 81ef      	LDD  R30,Y+7
000c27 85f8      	LDD  R31,Y+7+1
000c28 93fa      	ST   -Y,R31
000c29 93ea      	ST   -Y,R30
000c2a 85eb      	LDD  R30,Y+11
000c2b 85fc      	LDD  R31,Y+11+1
000c2c 9509      	ICALL
000c2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x35:
                +
000c2e 01fe     +MOVW R30 , R28
000c2f 5ae6     +SUBI R30 , LOW ( - 90 )
000c30 4fff     +SBCI R31 , HIGH ( - 90 )
000c31 9001     +LD R0 , Z +
000c32 81f0     +LD R31 , Z
000c33 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000c34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x36:
000c35 9734      	SBIW R30,4
                +
000c36 01de     +MOVW R26 , R28
000c37 5aa6     +SUBI R26 , LOW ( - 90 )
000c38 4fbf     +SBCI R27 , HIGH ( - 90 )
000c39 93ed     +ST X + , R30
000c3a 93fc     +ST X , R31
                 	__PUTW1SX 90
000c3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x37:
000c3c 81ef      	LDD  R30,Y+7
000c3d 85f8      	LDD  R31,Y+7+1
000c3e 93fa      	ST   -Y,R31
000c3f 93ea      	ST   -Y,R30
000c40 85eb      	LDD  R30,Y+11
000c41 85fc      	LDD  R31,Y+11+1
000c42 9509      	ICALL
000c43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x38:
                +
000c44 01de     +MOVW R26 , R28
000c45 5aa6     +SUBI R26 , LOW ( - 90 )
000c46 4fbf     +SBCI R27 , HIGH ( - 90 )
000c47 900d     +LD R0 , X +
000c48 91bc     +LD R27 , X
000c49 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000c4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39:
                +
000c4b 87ea     +STD Y + 10 , R30
000c4c 87fb     +STD Y + 10 + 1 , R31
000c4d 876c     +STD Y + 10 + 2 , R22
000c4e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000c4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3A:
000c50 dfdd      	RCALL SUBOPT_0x35
000c51 cfe3      	RJMP SUBOPT_0x36
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
                +
000c52 85ea     +LDD R30 , Y + 10
000c53 85fb     +LDD R31 , Y + 10 + 1
000c54 856c     +LDD R22 , Y + 10 + 2
000c55 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000c56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3C:
000c57 87ee      	STD  Y+14,R30
000c58 87ff      	STD  Y+14+1,R31
000c59 93fa      	ST   -Y,R31
000c5a 93ea      	ST   -Y,R30
000c5b 940e 09c7 	CALL _strlen
000c5d 2f1e      	MOV  R17,R30
000c5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3D:
000c5f dfe4      	RCALL SUBOPT_0x38
000c60 9614      	ADIW R26,4
000c61 940e 0f03 	CALL __GETW1P
000c63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
                +
000c64 8be8     +STD Y + 16 , R30
000c65 8bf9     +STD Y + 16 + 1 , R31
000c66 8b6a     +STD Y + 16 + 2 , R22
000c67 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000c68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x3F:
000c69 7f0b      	ANDI R16,LOW(251)
000c6a 89ed      	LDD  R30,Y+21
000c6b 93ea      	ST   -Y,R30
                +
000c6c 01fe     +MOVW R30 , R28
000c6d 5ae9     +SUBI R30 , LOW ( - 87 )
000c6e 4fff     +SBCI R31 , HIGH ( - 87 )
000c6f 9001     +LD R0 , Z +
000c70 81f0     +LD R31 , Z
000c71 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000c72 93fa      	ST   -Y,R31
000c73 93ea      	ST   -Y,R30
                +
000c74 01fe     +MOVW R30 , R28
000c75 5ae5     +SUBI R30 , LOW ( - 91 )
000c76 4fff     +SBCI R31 , HIGH ( - 91 )
000c77 9001     +LD R0 , Z +
000c78 81f0     +LD R31 , Z
000c79 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000c7a 9509      	ICALL
000c7b 3050      	CPI  R21,0
000c7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40:
                +
000c7d 89e8     +LDD R30 , Y + 16
000c7e 89f9     +LDD R31 , Y + 16 + 1
000c7f 896a     +LDD R22 , Y + 16 + 2
000c80 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000c81 85aa     +LDD R26 , Y + 10
000c82 85bb     +LDD R27 , Y + 10 + 1
000c83 858c     +LDD R24 , Y + 10 + 2
000c84 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000c85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
000c86 01de      	MOVW R26,R28
000c87 961c      	ADIW R26,12
000c88 940e 0e87 	CALL __ADDW2R15
000c8a 940e 0f03 	CALL __GETW1P
000c8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x42:
                +
000c8d 81ad     +LDD R26 , Y + 5
000c8e 81be     +LDD R27 , Y + 5 + 1
000c8f 818f     +LDD R24 , Y + 5 + 2
000c90 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000c91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x43:
                +
000c92 83ed     +STD Y + 5 , R30
000c93 83fe     +STD Y + 5 + 1 , R31
000c94 836f     +STD Y + 5 + 2 , R22
000c95 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000c96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
                +
000c97 81ed     +LDD R30 , Y + 5
000c98 81fe     +LDD R31 , Y + 5 + 1
000c99 816f     +LDD R22 , Y + 5 + 2
000c9a 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000c9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
000c9c dff0      	RCALL SUBOPT_0x42
                +
000c9d e0e0     +LDI R30 , LOW ( 0x3F000000 )
000c9e e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000c9f e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000ca0 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000ca1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
                +
000ca2 81a9     +LDD R26 , Y + 1
000ca3 81ba     +LDD R27 , Y + 1 + 1
000ca4 818b     +LDD R24 , Y + 1 + 2
000ca5 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ca6 940e 0dd4 	CALL __MULF12
000ca8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
000ca9 81ee      	LDD  R30,Y+6
000caa 81ff      	LDD  R31,Y+6+1
000cab 93fa      	ST   -Y,R31
000cac 93ea      	ST   -Y,R30
000cad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x48:
                +
000cae 87e9     +STD Y + 9 , R30
000caf 87fa     +STD Y + 9 + 1 , R31
000cb0 876b     +STD Y + 9 + 2 , R22
000cb1 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000cb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x49:
000cb3 81ae      	LDD  R26,Y+6
000cb4 81bf      	LDD  R27,Y+6+1
000cb5 9611      	ADIW R26,1
000cb6 83ae      	STD  Y+6,R26
000cb7 83bf      	STD  Y+6+1,R27
000cb8 9711      	SBIW R26,1
000cb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
000cba 81aa     +LDD R26 , Y + 2
000cbb 81bb     +LDD R27 , Y + 2 + 1
000cbc 818c     +LDD R24 , Y + 2 + 2
000cbd 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000cbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4B:
                +
000cbf 83ea     +STD Y + 2 , R30
000cc0 83fb     +STD Y + 2 + 1 , R31
000cc1 836c     +STD Y + 2 + 2 , R22
000cc2 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000cc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
                +
000cc4 81ea     +LDD R30 , Y + 2
000cc5 81fb     +LDD R31 , Y + 2 + 1
000cc6 816c     +LDD R22 , Y + 2 + 2
000cc7 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000cc8 85a9     +LDD R26 , Y + 9
000cc9 85ba     +LDD R27 , Y + 9 + 1
000cca 858b     +LDD R24 , Y + 9 + 2
000ccb 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ccc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4D:
                +
000ccd 85a9     +LDD R26 , Y + 9
000cce 85ba     +LDD R27 , Y + 9 + 1
000ccf 858b     +LDD R24 , Y + 9 + 2
000cd0 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000cd1 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000cd2 91e9      	ld   r30,y+
000cd3 91f9      	ld   r31,y+
000cd4 9630      	adiw r30,0
000cd5 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000cd6 e686     +LDI R24 , LOW ( 0xE66 )
000cd7 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000cd8 9701     +SBIW R24 , 1
000cd9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000cda 95a8      	wdr
000cdb 9731      	sbiw r30,1
000cdc f7c9      	brne __delay_ms0
                 __delay_ms1:
000cdd 9508      	ret
                 
                 __ANEGF1:
000cde 9730      	SBIW R30,0
000cdf 4060      	SBCI R22,0
000ce0 4070      	SBCI R23,0
000ce1 f009      	BREQ __ANEGF10
000ce2 5870      	SUBI R23,0x80
                 __ANEGF10:
000ce3 9508      	RET
                 
                 __ROUND_REPACK:
000ce4 2355      	TST  R21
000ce5 f442      	BRPL __REPACK
000ce6 3850      	CPI  R21,0x80
000ce7 f411      	BRNE __ROUND_REPACK0
000ce8 ffe0      	SBRS R30,0
000ce9 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000cea 9631      	ADIW R30,1
000ceb 1f69      	ADC  R22,R25
000cec 1f79      	ADC  R23,R25
000ced f06b      	BRVS __REPACK1
                 
                 __REPACK:
000cee e850      	LDI  R21,0x80
000cef 2757      	EOR  R21,R23
000cf0 f411      	BRNE __REPACK0
000cf1 935f      	PUSH R21
000cf2 c0cf      	RJMP __ZERORES
                 __REPACK0:
000cf3 3f5f      	CPI  R21,0xFF
000cf4 f031      	BREQ __REPACK1
000cf5 0f66      	LSL  R22
000cf6 0c00      	LSL  R0
000cf7 9557      	ROR  R21
000cf8 9567      	ROR  R22
000cf9 2f75      	MOV  R23,R21
000cfa 9508      	RET
                 __REPACK1:
000cfb 935f      	PUSH R21
000cfc 2000      	TST  R0
000cfd f00a      	BRMI __REPACK2
000cfe c0cf      	RJMP __MAXRES
                 __REPACK2:
000cff c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000d00 e850      	LDI  R21,0x80
000d01 2e19      	MOV  R1,R25
000d02 2215      	AND  R1,R21
000d03 0f88      	LSL  R24
000d04 1f99      	ROL  R25
000d05 2795      	EOR  R25,R21
000d06 0f55      	LSL  R21
000d07 9587      	ROR  R24
                 
                 __UNPACK1:
000d08 e850      	LDI  R21,0x80
000d09 2e07      	MOV  R0,R23
000d0a 2205      	AND  R0,R21
000d0b 0f66      	LSL  R22
000d0c 1f77      	ROL  R23
000d0d 2775      	EOR  R23,R21
000d0e 0f55      	LSL  R21
000d0f 9567      	ROR  R22
000d10 9508      	RET
                 
                 __CFD1U:
000d11 9468      	SET
000d12 c001      	RJMP __CFD1U0
                 __CFD1:
000d13 94e8      	CLT
                 __CFD1U0:
000d14 935f      	PUSH R21
000d15 dff2      	RCALL __UNPACK1
000d16 3870      	CPI  R23,0x80
000d17 f018      	BRLO __CFD10
000d18 3f7f      	CPI  R23,0xFF
000d19 f408      	BRCC __CFD10
000d1a c0a7      	RJMP __ZERORES
                 __CFD10:
000d1b e156      	LDI  R21,22
000d1c 1b57      	SUB  R21,R23
000d1d f4aa      	BRPL __CFD11
000d1e 9551      	NEG  R21
000d1f 3058      	CPI  R21,8
000d20 f40e      	BRTC __CFD19
000d21 3059      	CPI  R21,9
                 __CFD19:
000d22 f030      	BRLO __CFD17
000d23 efef      	SER  R30
000d24 efff      	SER  R31
000d25 ef6f      	SER  R22
000d26 e77f      	LDI  R23,0x7F
000d27 f977      	BLD  R23,7
000d28 c01a      	RJMP __CFD15
                 __CFD17:
000d29 2777      	CLR  R23
000d2a 2355      	TST  R21
000d2b f0b9      	BREQ __CFD15
                 __CFD18:
000d2c 0fee      	LSL  R30
000d2d 1fff      	ROL  R31
000d2e 1f66      	ROL  R22
000d2f 1f77      	ROL  R23
000d30 955a      	DEC  R21
000d31 f7d1      	BRNE __CFD18
000d32 c010      	RJMP __CFD15
                 __CFD11:
000d33 2777      	CLR  R23
                 __CFD12:
000d34 3058      	CPI  R21,8
000d35 f028      	BRLO __CFD13
000d36 2fef      	MOV  R30,R31
000d37 2ff6      	MOV  R31,R22
000d38 2f67      	MOV  R22,R23
000d39 5058      	SUBI R21,8
000d3a cff9      	RJMP __CFD12
                 __CFD13:
000d3b 2355      	TST  R21
000d3c f031      	BREQ __CFD15
                 __CFD14:
000d3d 9576      	LSR  R23
000d3e 9567      	ROR  R22
000d3f 95f7      	ROR  R31
000d40 95e7      	ROR  R30
000d41 955a      	DEC  R21
000d42 f7d1      	BRNE __CFD14
                 __CFD15:
000d43 2000      	TST  R0
000d44 f40a      	BRPL __CFD16
000d45 d149      	RCALL __ANEGD1
                 __CFD16:
000d46 915f      	POP  R21
000d47 9508      	RET
                 
                 __CDF1U:
000d48 9468      	SET
000d49 c001      	RJMP __CDF1U0
                 __CDF1:
000d4a 94e8      	CLT
                 __CDF1U0:
000d4b 9730      	SBIW R30,0
000d4c 4060      	SBCI R22,0
000d4d 4070      	SBCI R23,0
000d4e f0b1      	BREQ __CDF10
000d4f 2400      	CLR  R0
000d50 f026      	BRTS __CDF11
000d51 2377      	TST  R23
000d52 f412      	BRPL __CDF11
000d53 9400      	COM  R0
000d54 d13a      	RCALL __ANEGD1
                 __CDF11:
000d55 2e17      	MOV  R1,R23
000d56 e17e      	LDI  R23,30
000d57 2011      	TST  R1
                 __CDF12:
000d58 f032      	BRMI __CDF13
000d59 957a      	DEC  R23
000d5a 0fee      	LSL  R30
000d5b 1fff      	ROL  R31
000d5c 1f66      	ROL  R22
000d5d 1c11      	ROL  R1
000d5e cff9      	RJMP __CDF12
                 __CDF13:
000d5f 2fef      	MOV  R30,R31
000d60 2ff6      	MOV  R31,R22
000d61 2d61      	MOV  R22,R1
000d62 935f      	PUSH R21
000d63 df8a      	RCALL __REPACK
000d64 915f      	POP  R21
                 __CDF10:
000d65 9508      	RET
                 
                 __SWAPACC:
000d66 934f      	PUSH R20
000d67 01af      	MOVW R20,R30
000d68 01fd      	MOVW R30,R26
000d69 01da      	MOVW R26,R20
000d6a 01ab      	MOVW R20,R22
000d6b 01bc      	MOVW R22,R24
000d6c 01ca      	MOVW R24,R20
000d6d 2d40      	MOV  R20,R0
000d6e 2c01      	MOV  R0,R1
000d6f 2e14      	MOV  R1,R20
000d70 914f      	POP  R20
000d71 9508      	RET
                 
                 __UADD12:
000d72 0fea      	ADD  R30,R26
000d73 1ffb      	ADC  R31,R27
000d74 1f68      	ADC  R22,R24
000d75 9508      	RET
                 
                 __NEGMAN1:
000d76 95e0      	COM  R30
000d77 95f0      	COM  R31
000d78 9560      	COM  R22
000d79 5fef      	SUBI R30,-1
000d7a 4fff      	SBCI R31,-1
000d7b 4f6f      	SBCI R22,-1
000d7c 9508      	RET
                 
                 __SUBF12:
000d7d 935f      	PUSH R21
000d7e df81      	RCALL __UNPACK
000d7f 3890      	CPI  R25,0x80
000d80 f171      	BREQ __ADDF129
000d81 e850      	LDI  R21,0x80
000d82 2615      	EOR  R1,R21
                 
000d83 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000d84 935f      	PUSH R21
000d85 df7a      	RCALL __UNPACK
000d86 3890      	CPI  R25,0x80
000d87 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000d88 3870      	CPI  R23,0x80
000d89 f121      	BREQ __ADDF128
                 __ADDF121:
000d8a 2f57      	MOV  R21,R23
000d8b 1b59      	SUB  R21,R25
000d8c f12b      	BRVS __ADDF1211
000d8d f412      	BRPL __ADDF122
000d8e dfd7      	RCALL __SWAPACC
000d8f cffa      	RJMP __ADDF121
                 __ADDF122:
000d90 3158      	CPI  R21,24
000d91 f018      	BRLO __ADDF123
000d92 27aa      	CLR  R26
000d93 27bb      	CLR  R27
000d94 2788      	CLR  R24
                 __ADDF123:
000d95 3058      	CPI  R21,8
000d96 f028      	BRLO __ADDF124
000d97 2fab      	MOV  R26,R27
000d98 2fb8      	MOV  R27,R24
000d99 2788      	CLR  R24
000d9a 5058      	SUBI R21,8
000d9b cff9      	RJMP __ADDF123
                 __ADDF124:
000d9c 2355      	TST  R21
000d9d f029      	BREQ __ADDF126
                 __ADDF125:
000d9e 9586      	LSR  R24
000d9f 95b7      	ROR  R27
000da0 95a7      	ROR  R26
000da1 955a      	DEC  R21
000da2 f7d9      	BRNE __ADDF125
                 __ADDF126:
000da3 2d50      	MOV  R21,R0
000da4 2551      	EOR  R21,R1
000da5 f072      	BRMI __ADDF127
000da6 dfcb      	RCALL __UADD12
000da7 f438      	BRCC __ADDF129
000da8 9567      	ROR  R22
000da9 95f7      	ROR  R31
000daa 95e7      	ROR  R30
000dab 9573      	INC  R23
000dac f413      	BRVC __ADDF129
000dad c020      	RJMP __MAXRES
                 __ADDF128:
000dae dfb7      	RCALL __SWAPACC
                 __ADDF129:
000daf df3e      	RCALL __REPACK
000db0 915f      	POP  R21
000db1 9508      	RET
                 __ADDF1211:
000db2 f7d8      	BRCC __ADDF128
000db3 cffb      	RJMP __ADDF129
                 __ADDF127:
000db4 1bea      	SUB  R30,R26
000db5 0bfb      	SBC  R31,R27
000db6 0b68      	SBC  R22,R24
000db7 f051      	BREQ __ZERORES
000db8 f410      	BRCC __ADDF1210
000db9 9400      	COM  R0
000dba dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000dbb 2366      	TST  R22
000dbc f392      	BRMI __ADDF129
000dbd 0fee      	LSL  R30
000dbe 1fff      	ROL  R31
000dbf 1f66      	ROL  R22
000dc0 957a      	DEC  R23
000dc1 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000dc2 27ee      	CLR  R30
000dc3 27ff      	CLR  R31
000dc4 2766      	CLR  R22
000dc5 2777      	CLR  R23
000dc6 915f      	POP  R21
000dc7 9508      	RET
                 
                 __MINRES:
000dc8 efef      	SER  R30
000dc9 efff      	SER  R31
000dca e76f      	LDI  R22,0x7F
000dcb ef7f      	SER  R23
000dcc 915f      	POP  R21
000dcd 9508      	RET
                 
                 __MAXRES:
000dce efef      	SER  R30
000dcf efff      	SER  R31
000dd0 e76f      	LDI  R22,0x7F
000dd1 e77f      	LDI  R23,0x7F
000dd2 915f      	POP  R21
000dd3 9508      	RET
                 
                 __MULF12:
000dd4 935f      	PUSH R21
000dd5 df2a      	RCALL __UNPACK
000dd6 3870      	CPI  R23,0x80
000dd7 f351      	BREQ __ZERORES
000dd8 3890      	CPI  R25,0x80
000dd9 f341      	BREQ __ZERORES
000dda 2401      	EOR  R0,R1
000ddb 9408      	SEC
000ddc 1f79      	ADC  R23,R25
000ddd f423      	BRVC __MULF124
000dde f31c      	BRLT __ZERORES
                 __MULF125:
000ddf 2000      	TST  R0
000de0 f33a      	BRMI __MINRES
000de1 cfec      	RJMP __MAXRES
                 __MULF124:
000de2 920f      	PUSH R0
000de3 931f      	PUSH R17
000de4 932f      	PUSH R18
000de5 933f      	PUSH R19
000de6 934f      	PUSH R20
000de7 2711      	CLR  R17
000de8 2722      	CLR  R18
000de9 2799      	CLR  R25
000dea 9f68      	MUL  R22,R24
000deb 01a0      	MOVW R20,R0
000dec 9f8f      	MUL  R24,R31
000ded 2d30      	MOV  R19,R0
000dee 0d41      	ADD  R20,R1
000def 1f59      	ADC  R21,R25
000df0 9f6b      	MUL  R22,R27
000df1 0d30      	ADD  R19,R0
000df2 1d41      	ADC  R20,R1
000df3 1f59      	ADC  R21,R25
000df4 9f8e      	MUL  R24,R30
000df5 d027      	RCALL __MULF126
000df6 9fbf      	MUL  R27,R31
000df7 d025      	RCALL __MULF126
000df8 9f6a      	MUL  R22,R26
000df9 d023      	RCALL __MULF126
000dfa 9fbe      	MUL  R27,R30
000dfb d01d      	RCALL __MULF127
000dfc 9faf      	MUL  R26,R31
000dfd d01b      	RCALL __MULF127
000dfe 9fae      	MUL  R26,R30
000dff 0d11      	ADD  R17,R1
000e00 1f29      	ADC  R18,R25
000e01 1f39      	ADC  R19,R25
000e02 1f49      	ADC  R20,R25
000e03 1f59      	ADC  R21,R25
000e04 2fe3      	MOV  R30,R19
000e05 2ff4      	MOV  R31,R20
000e06 2f65      	MOV  R22,R21
000e07 2f52      	MOV  R21,R18
000e08 914f      	POP  R20
000e09 913f      	POP  R19
000e0a 912f      	POP  R18
000e0b 911f      	POP  R17
000e0c 900f      	POP  R0
000e0d 2366      	TST  R22
000e0e f02a      	BRMI __MULF122
000e0f 0f55      	LSL  R21
000e10 1fee      	ROL  R30
000e11 1fff      	ROL  R31
000e12 1f66      	ROL  R22
000e13 c002      	RJMP __MULF123
                 __MULF122:
000e14 9573      	INC  R23
000e15 f24b      	BRVS __MULF125
                 __MULF123:
000e16 decd      	RCALL __ROUND_REPACK
000e17 915f      	POP  R21
000e18 9508      	RET
                 
                 __MULF127:
000e19 0d10      	ADD  R17,R0
000e1a 1d21      	ADC  R18,R1
000e1b 1f39      	ADC  R19,R25
000e1c c002      	RJMP __MULF128
                 __MULF126:
000e1d 0d20      	ADD  R18,R0
000e1e 1d31      	ADC  R19,R1
                 __MULF128:
000e1f 1f49      	ADC  R20,R25
000e20 1f59      	ADC  R21,R25
000e21 9508      	RET
                 
                 __DIVF21:
000e22 935f      	PUSH R21
000e23 dedc      	RCALL __UNPACK
000e24 3870      	CPI  R23,0x80
000e25 f421      	BRNE __DIVF210
000e26 2011      	TST  R1
                 __DIVF211:
000e27 f40a      	BRPL __DIVF219
000e28 cf9f      	RJMP __MINRES
                 __DIVF219:
000e29 cfa4      	RJMP __MAXRES
                 __DIVF210:
000e2a 3890      	CPI  R25,0x80
000e2b f409      	BRNE __DIVF218
                 __DIVF217:
000e2c cf95      	RJMP __ZERORES
                 __DIVF218:
000e2d 2401      	EOR  R0,R1
000e2e 9408      	SEC
000e2f 0b97      	SBC  R25,R23
000e30 f41b      	BRVC __DIVF216
000e31 f3d4      	BRLT __DIVF217
000e32 2000      	TST  R0
000e33 cff3      	RJMP __DIVF211
                 __DIVF216:
000e34 2f79      	MOV  R23,R25
000e35 931f      	PUSH R17
000e36 932f      	PUSH R18
000e37 933f      	PUSH R19
000e38 934f      	PUSH R20
000e39 2411      	CLR  R1
000e3a 2711      	CLR  R17
000e3b 2722      	CLR  R18
000e3c 2733      	CLR  R19
000e3d 2744      	CLR  R20
000e3e 2755      	CLR  R21
000e3f e290      	LDI  R25,32
                 __DIVF212:
000e40 17ae      	CP   R26,R30
000e41 07bf      	CPC  R27,R31
000e42 0786      	CPC  R24,R22
000e43 0741      	CPC  R20,R17
000e44 f030      	BRLO __DIVF213
000e45 1bae      	SUB  R26,R30
000e46 0bbf      	SBC  R27,R31
000e47 0b86      	SBC  R24,R22
000e48 0b41      	SBC  R20,R17
000e49 9408      	SEC
000e4a c001      	RJMP __DIVF214
                 __DIVF213:
000e4b 9488      	CLC
                 __DIVF214:
000e4c 1f55      	ROL  R21
000e4d 1f22      	ROL  R18
000e4e 1f33      	ROL  R19
000e4f 1c11      	ROL  R1
000e50 1faa      	ROL  R26
000e51 1fbb      	ROL  R27
000e52 1f88      	ROL  R24
000e53 1f44      	ROL  R20
000e54 959a      	DEC  R25
000e55 f751      	BRNE __DIVF212
000e56 01f9      	MOVW R30,R18
000e57 2d61      	MOV  R22,R1
000e58 914f      	POP  R20
000e59 913f      	POP  R19
000e5a 912f      	POP  R18
000e5b 911f      	POP  R17
000e5c 2366      	TST  R22
000e5d f032      	BRMI __DIVF215
000e5e 0f55      	LSL  R21
000e5f 1fee      	ROL  R30
000e60 1fff      	ROL  R31
000e61 1f66      	ROL  R22
000e62 957a      	DEC  R23
000e63 f243      	BRVS __DIVF217
                 __DIVF215:
000e64 de7f      	RCALL __ROUND_REPACK
000e65 915f      	POP  R21
000e66 9508      	RET
                 
                 __CMPF12:
000e67 2399      	TST  R25
000e68 f09a      	BRMI __CMPF120
000e69 2377      	TST  R23
000e6a f042      	BRMI __CMPF121
000e6b 1797      	CP   R25,R23
000e6c f048      	BRLO __CMPF122
000e6d f429      	BRNE __CMPF121
000e6e 17ae      	CP   R26,R30
000e6f 07bf      	CPC  R27,R31
000e70 0786      	CPC  R24,R22
000e71 f020      	BRLO __CMPF122
000e72 f031      	BREQ __CMPF123
                 __CMPF121:
000e73 9498      	CLZ
000e74 9488      	CLC
000e75 9508      	RET
                 __CMPF122:
000e76 9498      	CLZ
000e77 9408      	SEC
000e78 9508      	RET
                 __CMPF123:
000e79 9418      	SEZ
000e7a 9488      	CLC
000e7b 9508      	RET
                 __CMPF120:
000e7c 2377      	TST  R23
000e7d f7c2      	BRPL __CMPF122
000e7e 1797      	CP   R25,R23
000e7f f398      	BRLO __CMPF121
000e80 f7a9      	BRNE __CMPF122
000e81 17ea      	CP   R30,R26
000e82 07fb      	CPC  R31,R27
000e83 0768      	CPC  R22,R24
000e84 f388      	BRLO __CMPF122
000e85 f399      	BREQ __CMPF123
000e86 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000e87 2400      	CLR  R0
000e88 0daf      	ADD  R26,R15
000e89 1db0      	ADC  R27,R0
000e8a 9508      	RET
                 
                 __ANEGW1:
000e8b 95f1      	NEG  R31
000e8c 95e1      	NEG  R30
000e8d 40f0      	SBCI R31,0
000e8e 9508      	RET
                 
                 __ANEGD1:
000e8f 95f0      	COM  R31
000e90 9560      	COM  R22
000e91 9570      	COM  R23
000e92 95e1      	NEG  R30
000e93 4fff      	SBCI R31,-1
000e94 4f6f      	SBCI R22,-1
000e95 4f7f      	SBCI R23,-1
000e96 9508      	RET
                 
                 __ASRW8:
000e97 2fef      	MOV  R30,R31
000e98 27ff      	CLR  R31
000e99 fde7      	SBRC R30,7
000e9a efff      	SER  R31
000e9b 9508      	RET
                 
                 __CBD1:
000e9c 2ffe      	MOV  R31,R30
000e9d 0fff      	ADD  R31,R31
000e9e 0bff      	SBC  R31,R31
000e9f 2f6f      	MOV  R22,R31
000ea0 2f7f      	MOV  R23,R31
000ea1 9508      	RET
                 
                 __CWD1:
000ea2 2f6f      	MOV  R22,R31
000ea3 0f66      	ADD  R22,R22
000ea4 0b66      	SBC  R22,R22
000ea5 2f76      	MOV  R23,R22
000ea6 9508      	RET
                 
                 __MULW12U:
000ea7 9ffa      	MUL  R31,R26
000ea8 2df0      	MOV  R31,R0
000ea9 9feb      	MUL  R30,R27
000eaa 0df0      	ADD  R31,R0
000eab 9fea      	MUL  R30,R26
000eac 2de0      	MOV  R30,R0
000ead 0df1      	ADD  R31,R1
000eae 9508      	RET
                 
                 __DIVB21U:
000eaf 2400      	CLR  R0
000eb0 e098      	LDI  R25,8
                 __DIVB21U1:
000eb1 0faa      	LSL  R26
000eb2 1c00      	ROL  R0
000eb3 1a0e      	SUB  R0,R30
000eb4 f410      	BRCC __DIVB21U2
000eb5 0e0e      	ADD  R0,R30
000eb6 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000eb7 60a1      	SBR  R26,1
                 __DIVB21U3:
000eb8 959a      	DEC  R25
000eb9 f7b9      	BRNE __DIVB21U1
000eba 2fea      	MOV  R30,R26
000ebb 2da0      	MOV  R26,R0
000ebc 9508      	RET
                 
                 __DIVB21:
000ebd d039      	RCALL __CHKSIGNB
000ebe dff0      	RCALL __DIVB21U
000ebf f40e      	BRTC __DIVB211
000ec0 95e1      	NEG  R30
                 __DIVB211:
000ec1 9508      	RET
                 
                 __DIVD21U:
000ec2 933f      	PUSH R19
000ec3 934f      	PUSH R20
000ec4 935f      	PUSH R21
000ec5 2400      	CLR  R0
000ec6 2411      	CLR  R1
000ec7 2744      	CLR  R20
000ec8 2755      	CLR  R21
000ec9 e230      	LDI  R19,32
                 __DIVD21U1:
000eca 0faa      	LSL  R26
000ecb 1fbb      	ROL  R27
000ecc 1f88      	ROL  R24
000ecd 1f99      	ROL  R25
000ece 1c00      	ROL  R0
000ecf 1c11      	ROL  R1
000ed0 1f44      	ROL  R20
000ed1 1f55      	ROL  R21
000ed2 1a0e      	SUB  R0,R30
000ed3 0a1f      	SBC  R1,R31
000ed4 0b46      	SBC  R20,R22
000ed5 0b57      	SBC  R21,R23
000ed6 f428      	BRCC __DIVD21U2
000ed7 0e0e      	ADD  R0,R30
000ed8 1e1f      	ADC  R1,R31
000ed9 1f46      	ADC  R20,R22
000eda 1f57      	ADC  R21,R23
000edb c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000edc 60a1      	SBR  R26,1
                 __DIVD21U3:
000edd 953a      	DEC  R19
000ede f759      	BRNE __DIVD21U1
000edf 01fd      	MOVW R30,R26
000ee0 01bc      	MOVW R22,R24
000ee1 01d0      	MOVW R26,R0
000ee2 01ca      	MOVW R24,R20
000ee3 915f      	POP  R21
000ee4 914f      	POP  R20
000ee5 913f      	POP  R19
000ee6 9508      	RET
                 
                 __MODB21:
000ee7 94e8      	CLT
000ee8 ffa7      	SBRS R26,7
000ee9 c002      	RJMP __MODB211
000eea 95a1      	NEG  R26
000eeb 9468      	SET
                 __MODB211:
000eec fde7      	SBRC R30,7
000eed 95e1      	NEG  R30
000eee dfc0      	RCALL __DIVB21U
000eef 2fea      	MOV  R30,R26
000ef0 f40e      	BRTC __MODB212
000ef1 95e1      	NEG  R30
                 __MODB212:
000ef2 9508      	RET
                 
                 __MODD21U:
000ef3 dfce      	RCALL __DIVD21U
000ef4 01fd      	MOVW R30,R26
000ef5 01bc      	MOVW R22,R24
000ef6 9508      	RET
                 
                 __CHKSIGNB:
000ef7 94e8      	CLT
000ef8 ffe7      	SBRS R30,7
000ef9 c002      	RJMP __CHKSB1
000efa 95e1      	NEG  R30
000efb 9468      	SET
                 __CHKSB1:
000efc ffa7      	SBRS R26,7
000efd c004      	RJMP __CHKSB2
000efe 95a1      	NEG  R26
000eff f800      	BLD  R0,0
000f00 9403      	INC  R0
000f01 fa00      	BST  R0,0
                 __CHKSB2:
000f02 9508      	RET
                 
                 __GETW1P:
000f03 91ed      	LD   R30,X+
000f04 91fc      	LD   R31,X
000f05 9711      	SBIW R26,1
000f06 9508      	RET
                 
                 __GETD1P:
000f07 91ed      	LD   R30,X+
000f08 91fd      	LD   R31,X+
000f09 916d      	LD   R22,X+
000f0a 917c      	LD   R23,X
000f0b 9713      	SBIW R26,3
000f0c 9508      	RET
                 
                 __PUTDP1:
000f0d 93ed      	ST   X+,R30
000f0e 93fd      	ST   X+,R31
000f0f 936d      	ST   X+,R22
000f10 937c      	ST   X,R23
000f11 9508      	RET
                 
                 __GETD1S0:
000f12 81e8      	LD   R30,Y
000f13 81f9      	LDD  R31,Y+1
000f14 816a      	LDD  R22,Y+2
000f15 817b      	LDD  R23,Y+3
000f16 9508      	RET
                 
                 __GETD2S0:
000f17 81a8      	LD   R26,Y
000f18 81b9      	LDD  R27,Y+1
000f19 818a      	LDD  R24,Y+2
000f1a 819b      	LDD  R25,Y+3
000f1b 9508      	RET
                 
                 __PUTD1S0:
000f1c 83e8      	ST   Y,R30
000f1d 83f9      	STD  Y+1,R31
000f1e 836a      	STD  Y+2,R22
000f1f 837b      	STD  Y+3,R23
000f20 9508      	RET
                 
                 __PUTPARD1:
000f21 937a      	ST   -Y,R23
000f22 936a      	ST   -Y,R22
000f23 93fa      	ST   -Y,R31
000f24 93ea      	ST   -Y,R30
000f25 9508      	RET
                 
                 __SWAPD12:
000f26 2e18      	MOV  R1,R24
000f27 2f86      	MOV  R24,R22
000f28 2d61      	MOV  R22,R1
000f29 2e19      	MOV  R1,R25
000f2a 2f97      	MOV  R25,R23
000f2b 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000f2c 2e1b      	MOV  R1,R27
000f2d 2fbf      	MOV  R27,R31
000f2e 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000f2f 2e1a      	MOV  R1,R26
000f30 2fae      	MOV  R26,R30
000f31 2de1      	MOV  R30,R1
000f32 9508      	RET
                 
                 __CPD10:
000f33 9730      	SBIW R30,0
000f34 4060      	SBCI R22,0
000f35 4070      	SBCI R23,0
000f36 9508      	RET
                 
                 __SAVELOCR6:
000f37 935a      	ST   -Y,R21
                 __SAVELOCR5:
000f38 934a      	ST   -Y,R20
                 __SAVELOCR4:
000f39 933a      	ST   -Y,R19
                 __SAVELOCR3:
000f3a 932a      	ST   -Y,R18
                 __SAVELOCR2:
000f3b 931a      	ST   -Y,R17
000f3c 930a      	ST   -Y,R16
000f3d 9508      	RET
                 
                 __LOADLOCR6:
000f3e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000f3f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000f40 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000f41 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000f42 8119      	LDD  R17,Y+1
000f43 8108      	LD   R16,Y
000f44 9508      	RET
                 
                 __INITLOCW:
000f45 0fac      	ADD  R26,R28
000f46 1fbd      	ADC  R27,R29
                 __INITLOC0:
000f47 9005      	LPM  R0,Z+
000f48 920d      	ST   X+,R0
000f49 9701      	SBIW R24,1
000f4a f7e1      	BRNE __INITLOC0
000f4b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 103 r1 :  48 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   4 r9 :   4 r10:   0 r11:   0 r12:   2 r13:   0 r14:   0 r15:   4 
r16:  62 r17:  85 r18:  65 r19:  48 r20:  60 r21:  99 r22: 148 r23: 132 
r24:  89 r25:  83 r26: 282 r27: 147 r28:  89 r29:   3 r30: 691 r31: 302 
x  : 153 y  : 519 z  :  56 
Registers used: 29 out of 35 (82.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  20 
adiw  :  42 and   :   5 andi  :  10 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   1 break :   0 breq  :  56 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  26 
brlt  :   4 brmi  :  12 brne  :  60 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 325 
cbi   :   2 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  58 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  21 cpc   :  26 cpi   :  92 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 
ijmp  :   0 in    :  13 inc   :   6 jmp   :  51 ld    : 123 ldd   : 245 
ldi   : 368 lds   :   9 lpm   :  13 lsl   :  14 lsr   :   4 mov   :  90 
movw  : 130 mul   :  14 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :   9 out   :  29 pop   :  48 push  :  48 rcall :  86 
ret   : 129 reti  :   3 rjmp  : 161 rol   :  32 ror   :  16 sbc   :  11 
sbci  :  69 sbi   :   5 sbic  :   0 sbis  :   2 sbiw  :  39 sbr   :   4 
sbrc  :   5 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 238 std   : 110 sts   :  11 sub   :   6 subi  :  98 
swap  :   0 tst   :  26 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001e98   7202    630   7832  131072   6.0%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 12 warnings
