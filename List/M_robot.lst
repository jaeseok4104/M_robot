
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Thu Feb 27 17:40:06 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01df 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 06b1 	JMP  _hall_sensor_detection1
00000c 940c 06bf 	JMP  _hall_sensor_detection2
00000e 940c 06cd 	JMP  _hall_sensor_detection3
000010 940c 06e2 	JMP  _hall_sensor_detection4
000012 940c 04ae 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 04cb 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 04ba 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 04f5 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0516 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 0000
000169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016a 0000
00016b 0000
00016c 0000
00016d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0000
000174 0000
000175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000176 0000
000177 0000
000178 0000
000179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017a 0000
00017b 0000
00017c 0000
00017d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017e 0000
00017f 0000
000180 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000181 253c
000182 3e64
000183 2500
000184 332e      	.DB  0x3C,0x25,0x64,0x3E,0x0,0x25,0x2E,0x33
000185 2c66
000186 2520
000187 332e
000188 0a66      	.DB  0x66,0x2C,0x20,0x25,0x2E,0x33,0x66,0xA
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1186): warning: .cseg .db misalignment - padding zero byte
000189 0000      	.DB  0x0
                 _0x80003:
00018a 0000
00018b 0000
00018c 0000
00018d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00018e 0000
00018f 0000
000190 0000
000191 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000192 0000
000193 0000
000194 0000
000195 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000196 0000
000197 0000
000198 0000
000199 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019a 0000
00019b 0000
00019c 0000
00019d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019e 0000
00019f 0000
0001a0 0000
0001a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a2 0000
0001a3 0000
0001a4 0000
0001a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a6 0000
0001a7 0000
0001a8 0000
0001a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001aa 0000
0001ab 0000
0001ac 0000
0001ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ae 0000
0001af 0000
0001b0 0000
0001b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b2 0000
0001b3 0000
0001b4 0000
0001b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b6 0000
0001b7 0000
0001b8 0000
0001b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ba 0000
0001bb 0000
0001bc 0000
0001bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001be 0000
0001bf 0000
0001c0 0000
0001c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c2 0000
0001c3 0000
0001c4 0000
0001c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c6 0000
0001c7 0000
0001c8 0000
0001c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ca 0000
0001cb 0000
0001cc 0000
0001cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ce 0000
0001cf 0000
0001d0 0000
0001d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001d2 4e2d
0001d3 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1207): warning: .cseg .db misalignment - padding zero byte
0001d4 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1209): warning: .cseg .db misalignment - padding zero byte
0001d5 0001      	.DB  0x1
                 _0x2080000:
0001d6 4e2d
0001d7 4e41
0001d8 4900
0001d9 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1212): warning: .cseg .db misalignment - padding zero byte
0001da 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001db 0001      	.DW  0x01
0001dc 058a      	.DW  __seed_G104
0001dd 03aa      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001de 0000      	.DW  0
                 
                 __RESET:
0001df 94f8      	CLI
0001e0 27ee      	CLR  R30
0001e1 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001e2 e0f1      	LDI  R31,1
0001e3 bff5      	OUT  MCUCR,R31
0001e4 bfe5      	OUT  MCUCR,R30
0001e5 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001e7 e1f8      	LDI  R31,0x18
0001e8 bdf1      	OUT  WDTCR,R31
0001e9 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001ea e08d      	LDI  R24,(14-2)+1
0001eb e0a2      	LDI  R26,2
0001ec 27bb      	CLR  R27
                 __CLEAR_REG:
0001ed 93ed      	ST   X+,R30
0001ee 958a      	DEC  R24
0001ef f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001f0 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001f1 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001f2 e0a0      	LDI  R26,LOW(__SRAM_START)
0001f3 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001f4 93ed      	ST   X+,R30
0001f5 9701      	SBIW R24,1
0001f6 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001f7 ebe6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001f8 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001f9 9185      	LPM  R24,Z+
0001fa 9195      	LPM  R25,Z+
0001fb 9700      	SBIW R24,0
0001fc f061      	BREQ __GLOBAL_INI_END
0001fd 91a5      	LPM  R26,Z+
0001fe 91b5      	LPM  R27,Z+
0001ff 9005      	LPM  R0,Z+
000200 9015      	LPM  R1,Z+
000201 01bf      	MOVW R22,R30
000202 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000203 9005      	LPM  R0,Z+
000204 920d      	ST   X+,R0
000205 9701      	SBIW R24,1
000206 f7e1      	BRNE __GLOBAL_INI_LOOP
000207 01fb      	MOVW R30,R22
000208 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000209 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00020a efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00020b bfed      	OUT  SPL,R30
00020c e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00020d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00020e e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00020f e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000210 940c 0212 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define PREDICTION 0.3
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;long int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; 0000 001B     float a_buff;
                 ; 0000 001C     float v_buff;
                 ; 0000 001D 
                 ; 0000 001E     int velocity = 0;
                 ; 0000 001F     int angularV = 0;
                 ; 0000 0020     int velocity_R = 0;
                 ; 0000 0021     int velocity_L = 0;
                 ; 0000 0022     int del_ms = 0;
                 ; 0000 0023     float del_s = 0;
                 ; 0000 0024     float diameter = 0;
                 ; 0000 0025     int d_diameter = 0;
                 ; 0000 0026 
                 ; 0000 0027     int currentRPM_R = 0;
                 ; 0000 0028     int currentRPM_L = 0;
                 ; 0000 0029     float currentV_R = 0;
                 ; 0000 002A     float currentV_L = 0;
                 ; 0000 002B     int goal_current_R = 0;
                 ; 0000 002C     int goal_current_L = 0;
                 ; 0000 002D     float goal_currentV_R = 0;
                 ; 0000 002E     float goal_currentV_L = 0;
                 ; 0000 002F 
                 ; 0000 0030 
                 ; 0000 0031     float d_velocity = 0;
                 ; 0000 0032     float d_angularV = 0;
                 ; 0000 0033     float control_time = 0;
                 ; 0000 0034     float g_velocity = 0;
                 ; 0000 0035     float g_angularV = 0;
                 ; 0000 0036 
                 ; 0000 0037     float d_x = 0;
                 ; 0000 0038     float d_y = 0;
                 ; 0000 0039     float d_angular = 0;
                 ; 0000 003A     int d_angular_circula = 0;
                 ; 0000 003B     float g_x = 0;
                 ; 0000 003C     float g_y = 0;
                 ; 0000 003D     float g_angular = 0;
                 ; 0000 003E     int g_angular_circula = 0;
                 ; 0000 003F 
                 ; 0000 0040     float TIMER1_TIME = 0;
                 ; 0000 0041     float TIMER0_TIME = 0;
                 ; 0000 0042     float TIMER0_TIME_print = 0;
                 ; 0000 0043 
                 ; 0000 0044     char rootine_test = 0;
                 ; 0000 0045     char STOP_FLAG = 0;
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048     float hall_x = 0;
                 ; 0000 0049     float hall_y = 0;
                 ; 0000 004A     float hall_angular = 0;
                 ; 0000 004B     int hall_angular_circula = 0;
                 ; 0000 004C     float hall_velocity = 0;
                 ; 0000 004D 
                 ; 0000 004E     float motorR_distance = 0;
                 ; 0000 004F     float motorL_distance = 0;
                 ; 0000 0050     float a = 0;
                 ; 0000 0051 
                 ; 0000 0052     unsigned char BUFF[500] = {0,};
                 ; 0000 0053 
                 ; 0000 0054     usart1_init(bps_115200);
000212 97ef      	SBIW R28,63
000213 97ef      	SBIW R28,63
000214 50d2      	SUBI R29,2
                +
000215 e786     +LDI R24 , LOW ( 630 )
000216 e092     +LDI R25 , HIGH ( 630 )
                 	__GETWRN 24,25,630
000217 e0a0      	LDI  R26,LOW(0)
000218 e0b0      	LDI  R27,HIGH(0)
000219 e8ec      	LDI  R30,LOW(_0x3*2)
00021a e0f0      	LDI  R31,HIGH(_0x3*2)
00021b 940e 12f0 	CALL __INITLOCW
                 ;	a_buff -> Y+634
                 ;	v_buff -> Y+630
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+628
                 ;	del_ms -> Y+626
                 ;	del_s -> Y+622
                 ;	diameter -> Y+618
                 ;	d_diameter -> Y+616
                 ;	currentRPM_R -> Y+614
                 ;	currentRPM_L -> Y+612
                 ;	currentV_R -> Y+608
                 ;	currentV_L -> Y+604
                 ;	goal_current_R -> Y+602
                 ;	goal_current_L -> Y+600
                 ;	goal_currentV_R -> Y+596
                 ;	goal_currentV_L -> Y+592
                 ;	d_velocity -> Y+588
                 ;	d_angularV -> Y+584
                 ;	control_time -> Y+580
                 ;	g_velocity -> Y+576
                 ;	g_angularV -> Y+572
                 ;	d_x -> Y+568
                 ;	d_y -> Y+564
                 ;	d_angular -> Y+560
                 ;	d_angular_circula -> Y+558
                 ;	g_x -> Y+554
                 ;	g_y -> Y+550
                 ;	g_angular -> Y+546
                 ;	g_angular_circula -> Y+544
                 ;	TIMER1_TIME -> Y+540
                 ;	TIMER0_TIME -> Y+536
                 ;	TIMER0_TIME_print -> Y+532
                 ;	rootine_test -> Y+531
                 ;	STOP_FLAG -> Y+530
                 ;	hall_x -> Y+526
                 ;	hall_y -> Y+522
                 ;	hall_angular -> Y+518
                 ;	hall_angular_circula -> Y+516
                 ;	hall_velocity -> Y+512
                 ;	motorR_distance -> Y+508
                 ;	motorL_distance -> Y+504
                 ;	a -> Y+500
                 ;	BUFF -> Y+0
                +
00021d e000     +LDI R16 , LOW ( 0 )
00021e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00021f e020     +LDI R18 , LOW ( 0 )
000220 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000221 e040     +LDI R20 , LOW ( 0 )
000222 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000223 e0e7      	LDI  R30,LOW(7)
000224 e0f0      	LDI  R31,HIGH(7)
000225 93fa      	ST   -Y,R31
000226 93ea      	ST   -Y,R30
000227 940e 054d 	CALL _usart1_init
                 ; 0000 0055     usart0_init(bps_115200);
000229 e0e7      	LDI  R30,LOW(7)
00022a e0f0      	LDI  R31,HIGH(7)
00022b 93fa      	ST   -Y,R31
00022c 93ea      	ST   -Y,R30
00022d 940e 0565 	CALL _usart0_init
                 ; 0000 0056     timer2_init();
00022f d2ad      	RCALL _timer2_init
                 ; 0000 0057     timer0_init();
000230 d2b2      	RCALL _timer0_init
                 ; 0000 0058     timer1_init();
000231 d2b5      	RCALL _timer1_init
                 ; 0000 0059     EXT_INT_init();
000232 940e 06a8 	CALL _EXT_INT_init
                 ; 0000 005A     SREG |= 0x80;
000234 9478      	BSET 7
                 ; 0000 005B     DDRB.1 = 1;
000235 9ab9      	SBI  0x17,1
                 ; 0000 005C     DDRB.2 = 1;
000236 9aba      	SBI  0x17,2
                 ; 0000 005D     DDRB.3 = 1;
000237 9abb      	SBI  0x17,3
                 ; 0000 005E     delay_ms(5000);
000238 e8e8      	LDI  R30,LOW(5000)
000239 e1f3      	LDI  R31,HIGH(5000)
00023a 940e 0d9a 	CALL SUBOPT_0x0
                 ; 0000 005F 
                 ; 0000 0060     TIMER0_OVERFLOW = 0;
00023c 940e 0d9e 	CALL SUBOPT_0x1
                 ; 0000 0061     TCNT0 = 0;
                 ; 0000 0062 
                 ; 0000 0063     while(1)
                 _0xA:
                 ; 0000 0064     {
                 ; 0000 0065         if(CHECK_GETS)
00023e 91e0 0581 	LDS  R30,_CHECK_GETS
000240 30e0      	CPI  R30,0
000241 f411      	BRNE PC+3
000242 940c 0320 	JMP _0xD
                 ; 0000 0066         {
                 ; 0000 0067             UCSR1B &= ~(1<<RXEN1);
000244 91e0 009a 	LDS  R30,154
000246 7eef      	ANDI R30,0xEF
000247 93e0 009a 	STS  154,R30
                 ; 0000 0068             // sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
                 ; 0000 0069             sscanf(VELOCITY_BUFF,"<%d>", &d_diameter);
000249 e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
00024a e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
00024b 93fa      	ST   -Y,R31
00024c 93ea      	ST   -Y,R30
                +
00024d e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00024e e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00024f 93fa      	ST   -Y,R31
000250 93ea      	ST   -Y,R30
000251 01fe      	MOVW R30,R28
000252 59e4      	SUBI R30,LOW(-(620))
000253 4ffd      	SBCI R31,HIGH(-(620))
000254 2766      	CLR  R22
000255 2777      	CLR  R23
000256 940e 12c3 	CALL __PUTPARD1
000258 e084      	LDI  R24,4
000259 940e 0bb8 	CALL _sscanf
00025b 9628      	ADIW R28,8
                 ; 0000 006A             if(!del_ms){
                +
00025c 01fe     +MOVW R30 , R28
00025d 58ee     +SUBI R30 , LOW ( - 626 )
00025e 4ffd     +SBCI R31 , HIGH ( - 626 )
00025f 9001     +LD R0 , Z +
000260 81f0     +LD R31 , Z
000261 2de0     +MOV R30 , R0
                 	__GETW1SX 626
000262 9730      	SBIW R30,0
000263 f4b1      	BRNE _0xE
                 ; 0000 006B                 d_x = 0;
000264 e0e0      	LDI  R30,LOW(0)
                +
000265 01de     +MOVW R26 , R28
000266 5ca8     +SUBI R26 , LOW ( - 568 )
000267 4fbd     +SBCI R27 , HIGH ( - 568 )
000268 93ed     +ST X + , R30
000269 93ed     +ST X + , R30
00026a 93ed     +ST X + , R30
00026b 93ec     +ST X , R30
                 	__CLRD1SX 568
                 ; 0000 006C                 d_y = 0;
                +
00026c 01de     +MOVW R26 , R28
00026d 5cac     +SUBI R26 , LOW ( - 564 )
00026e 4fbd     +SBCI R27 , HIGH ( - 564 )
00026f 93ed     +ST X + , R30
000270 93ed     +ST X + , R30
000271 93ed     +ST X + , R30
000272 93ec     +ST X , R30
                 	__CLRD1SX 564
                 ; 0000 006D                 d_angular = 0;
                +
000273 01de     +MOVW R26 , R28
000274 5da0     +SUBI R26 , LOW ( - 560 )
000275 4fbd     +SBCI R27 , HIGH ( - 560 )
000276 93ed     +ST X + , R30
000277 93ed     +ST X + , R30
000278 93ed     +ST X + , R30
000279 93ec     +ST X , R30
                 	__CLRD1SX 560
                 ; 0000 006E             }
                 ; 0000 006F 
                 ; 0000 0070             if(d_diameter>0){
                 _0xE:
                +
00027a 01de     +MOVW R26 , R28
00027b 59a8     +SUBI R26 , LOW ( - 616 )
00027c 4fbd     +SBCI R27 , HIGH ( - 616 )
00027d 900d     +LD R0 , X +
00027e 91bc     +LD R27 , X
00027f 2da0     +MOV R26 , R0
                 	__GETW2SX 616
000280 940e 12de 	CALL __CPW02
000282 f4d4      	BRGE _0xF
                 ; 0000 0071                 diameter = (float)(((float)d_diameter/100));
000283 940e 0da5 	CALL SUBOPT_0x2
                 ; 0000 0072                 if((float)(MOTOR_CONT_MAX_SPEED*MOTOR_DRIVE_CEL_TIME)<diameter)
000285 940e 0dbf 	CALL SUBOPT_0x3
000287 940e 11bf 	CALL __CMPF12
000289 f428      	BRSH _0x10
                 ; 0000 0073                 {
                 ; 0000 0074                     del_s = (float)((diameter + (MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED))/MOTOR_CONT_MAX_SPEED);
00028a 940e 0dc4 	CALL SUBOPT_0x4
00028c 940e 0dd8 	CALL SUBOPT_0x5
                 ; 0000 0075                     del_s -= MOTOR_DRIVE_CEL_TIME;
00028e c002      	RJMP _0x18
                 ; 0000 0076                 }
                 ; 0000 0077                 else del_s = (float)(((MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED)+diameter)/MOTOR_CONT_MAX_SPEED);
                 _0x10:
00028f 940e 0dc4 	CALL SUBOPT_0x4
                 _0x18:
                +
000291 01de     +MOVW R26 , R28
000292 59a2     +SUBI R26 , LOW ( - 622 )
000293 4fbd     +SBCI R27 , HIGH ( - 622 )
000294 93ed     +ST X + , R30
000295 93fd     +ST X + , R31
000296 936d     +ST X + , R22
000297 937c     +ST X , R23
                 	__PUTD1SX 622
                 ; 0000 0078                 del_ms = (int)(del_s*1000);
000298 940e 0de6 	CALL SUBOPT_0x6
                 ; 0000 0079                 v_buff = MOTOR_CONT_MAX_SPEED;
00029a 940e 0dfc 	CALL SUBOPT_0x7
00029c c024      	RJMP _0x19
                 ; 0000 007A 
                 ; 0000 007B                 // v_buff = (float)velocity/1000;
                 ; 0000 007C                 a_buff = (float)angularV/1000;
                 ; 0000 007D             }
                 ; 0000 007E             else{
                 _0xF:
                 ; 0000 007F                 diameter = (float)(((float)d_diameter/100));
00029d 940e 0da5 	CALL SUBOPT_0x2
                 ; 0000 0080                 diameter = -diameter;
00029f 940e 1036 	CALL __ANEGF1
                +
0002a1 01de     +MOVW R26 , R28
0002a2 59a6     +SUBI R26 , LOW ( - 618 )
0002a3 4fbd     +SBCI R27 , HIGH ( - 618 )
0002a4 93ed     +ST X + , R30
0002a5 93fd     +ST X + , R31
0002a6 936d     +ST X + , R22
0002a7 937c     +ST X , R23
                 	__PUTD1SX 618
                 ; 0000 0081                 if((float)(MOTOR_CONT_MAX_SPEED*MOTOR_DRIVE_CEL_TIME)<diameter)
0002a8 940e 0dbf 	CALL SUBOPT_0x3
0002aa 940e 11bf 	CALL __CMPF12
0002ac f428      	BRSH _0x13
                 ; 0000 0082                 {
                 ; 0000 0083                     del_s = (float)((diameter + (MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED))/MOTOR_CONT_MAX_SPEED);
0002ad 940e 0dc4 	CALL SUBOPT_0x4
0002af 940e 0dd8 	CALL SUBOPT_0x5
                 ; 0000 0084                     del_s -= MOTOR_DRIVE_CEL_TIME;
0002b1 c002      	RJMP _0x1A
                 ; 0000 0085                 }
                 ; 0000 0086                 else del_s = (float)(((MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED)+diameter)/MOTOR_CONT_MAX_SPEED);
                 _0x13:
0002b2 940e 0dc4 	CALL SUBOPT_0x4
                 _0x1A:
                +
0002b4 01de     +MOVW R26 , R28
0002b5 59a2     +SUBI R26 , LOW ( - 622 )
0002b6 4fbd     +SBCI R27 , HIGH ( - 622 )
0002b7 93ed     +ST X + , R30
0002b8 93fd     +ST X + , R31
0002b9 936d     +ST X + , R22
0002ba 937c     +ST X , R23
                 	__PUTD1SX 622
                 ; 0000 0087                 del_ms = (int)(del_s*1000);
0002bb 940e 0de6 	CALL SUBOPT_0x6
                 ; 0000 0088                 v_buff = -MOTOR_CONT_MAX_SPEED;
                +
0002bd e0e0     +LDI R30 , LOW ( 0xBF000000 )
0002be e0f0     +LDI R31 , HIGH ( 0xBF000000 )
0002bf e060     +LDI R22 , BYTE3 ( 0xBF000000 )
0002c0 eb7f     +LDI R23 , BYTE4 ( 0xBF000000 )
                 	__GETD1N 0xBF000000
                 _0x19:
                +
0002c1 01de     +MOVW R26 , R28
0002c2 58aa     +SUBI R26 , LOW ( - 630 )
0002c3 4fbd     +SBCI R27 , HIGH ( - 630 )
0002c4 93ed     +ST X + , R30
0002c5 93fd     +ST X + , R31
0002c6 936d     +ST X + , R22
0002c7 937c     +ST X , R23
                 	__PUTD1SX 630
                 ; 0000 0089 
                 ; 0000 008A                 // v_buff = (float)velocity/1000;
                 ; 0000 008B                 a_buff = (float)angularV/1000;
0002c8 01f9      	MOVW R30,R18
0002c9 940e 0e01 	CALL SUBOPT_0x8
0002cb 01df      	MOVW R26,R30
0002cc 01cb      	MOVW R24,R22
                +
0002cd e0e0     +LDI R30 , LOW ( 0x447A0000 )
0002ce e0f0     +LDI R31 , HIGH ( 0x447A0000 )
0002cf e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
0002d0 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
0002d1 940e 117a 	CALL __DIVF21
                +
0002d3 01de     +MOVW R26 , R28
0002d4 58a6     +SUBI R26 , LOW ( - 634 )
0002d5 4fbd     +SBCI R27 , HIGH ( - 634 )
0002d6 93ed     +ST X + , R30
0002d7 93fd     +ST X + , R31
0002d8 936d     +ST X + , R22
0002d9 937c     +ST X , R23
                 	__PUTD1SX 634
                 ; 0000 008C             }
                 ; 0000 008D 
                 ; 0000 008E             TIMER0_TIME_print = 0;
0002da e0e0      	LDI  R30,LOW(0)
                +
0002db 01de     +MOVW R26 , R28
0002dc 5eac     +SUBI R26 , LOW ( - 532 )
0002dd 4fbd     +SBCI R27 , HIGH ( - 532 )
0002de 93ed     +ST X + , R30
0002df 93ed     +ST X + , R30
0002e0 93ed     +ST X + , R30
0002e1 93ec     +ST X , R30
                 	__CLRD1SX 532
                 ; 0000 008F             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
0002e2 01fe      	MOVW R30,R28
0002e3 58ea      	SUBI R30,LOW(-(630))
0002e4 4ffd      	SBCI R31,HIGH(-(630))
0002e5 93fa      	ST   -Y,R31
0002e6 93ea      	ST   -Y,R30
0002e7 01fe      	MOVW R30,R28
0002e8 58e4      	SUBI R30,LOW(-(636))
0002e9 4ffd      	SBCI R31,HIGH(-(636))
0002ea 93fa      	ST   -Y,R31
0002eb 93ea      	ST   -Y,R30
0002ec b7ed      	IN   R30,SPL
0002ed b7fe      	IN   R31,SPH
0002ee 9731      	SBIW R30,1
0002ef 93fa      	ST   -Y,R31
0002f0 93ea      	ST   -Y,R30
0002f1 935f      	PUSH R21
0002f2 934f      	PUSH R20
0002f3 01fe      	MOVW R30,R28
0002f4 58e6      	SUBI R30,LOW(-(634))
0002f5 4ffd      	SBCI R31,HIGH(-(634))
0002f6 93fa      	ST   -Y,R31
0002f7 93ea      	ST   -Y,R30
0002f8 940e 0612 	CALL _Make_MSPEED
0002fa 914f      	POP  R20
0002fb 915f      	POP  R21
                 ; 0000 0090 
                 ; 0000 0091             oper_Disapath(velocity_R, velocity_L);
0002fc 935a      	ST   -Y,R21
0002fd 934a      	ST   -Y,R20
                +
0002fe 01fe     +MOVW R30 , R28
0002ff 58ea     +SUBI R30 , LOW ( - 630 )
000300 4ffd     +SBCI R31 , HIGH ( - 630 )
000301 9001     +LD R0 , Z +
000302 81f0     +LD R31 , Z
000303 2de0     +MOV R30 , R0
                 	__GETW1SX 630
000304 93fa      	ST   -Y,R31
000305 93ea      	ST   -Y,R30
000306 940e 068a 	CALL _oper_Disapath
                 ; 0000 0092 
                 ; 0000 0093             TIMER1_TIME = 0;
000308 e0e0      	LDI  R30,LOW(0)
                +
000309 01de     +MOVW R26 , R28
00030a 5ea4     +SUBI R26 , LOW ( - 540 )
00030b 4fbd     +SBCI R27 , HIGH ( - 540 )
00030c 93ed     +ST X + , R30
00030d 93ed     +ST X + , R30
00030e 93ed     +ST X + , R30
00030f 93ec     +ST X , R30
                 	__CLRD1SX 540
                 ; 0000 0094             TIMER1_OVERFLOW = 0;
000310 940e 0e06 	CALL SUBOPT_0x9
                 ; 0000 0095             TCNT1L = 0;
000312 bdec      	OUT  0x2C,R30
                 ; 0000 0096 
                 ; 0000 0097             // rootine_test = 1;
                 ; 0000 0098             STOP_FLAG = 1;
000313 e0e1      	LDI  R30,LOW(1)
                +
000314 01de     +MOVW R26 , R28
000315 5eae     +SUBI R26 , LOW ( - 530 )
000316 4fbd     +SBCI R27 , HIGH ( - 530 )
000317 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 0099             CHECK_GETS = 0;
000318 e0e0      	LDI  R30,LOW(0)
000319 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0000 009A             UCSR1B |=(1<<RXEN1);
00031b 91e0 009a 	LDS  R30,154
00031d 61e0      	ORI  R30,0x10
00031e 93e0 009a 	STS  154,R30
                 ; 0000 009B         }
                 ; 0000 009C 
                 ; 0000 009D         // if(rootine_test == 0)
                 ; 0000 009E         // {
                 ; 0000 009F         //     v_buff = 0.15;
                 ; 0000 00A0         //     a_buff = 0;
                 ; 0000 00A1         //     if(d_x<0.95)
                 ; 0000 00A2         //     {
                 ; 0000 00A3         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00A4         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00A5         //         STOP_FLAG = 1;
                 ; 0000 00A6         //     }
                 ; 0000 00A7         //     else{
                 ; 0000 00A8         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00A9         //         if(TIMER0_TIME_print > a+2) rootine_test = 1;
                 ; 0000 00AA         //         oper_Disapath(0,0);
                 ; 0000 00AB         //         STOP_FLAG = 0;
                 ; 0000 00AC         //     }
                 ; 0000 00AD         // }
                 ; 0000 00AE         // else if(rootine_test == 1)
                 ; 0000 00AF         // {
                 ; 0000 00B0         //     v_buff = 0;
                 ; 0000 00B1         //     a_buff = -0.7;
                 ; 0000 00B2         //     if(d_angular_circula<85)
                 ; 0000 00B3         //     {
                 ; 0000 00B4         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00B5         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00B6         //         STOP_FLAG = 1;
                 ; 0000 00B7         //     }
                 ; 0000 00B8         //     else{
                 ; 0000 00B9         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00BA         //         if(TIMER0_TIME_print > a+2) rootine_test = 2;
                 ; 0000 00BB         //         oper_Disapath(0,0);
                 ; 0000 00BC         //         STOP_FLAG = 0;
                 ; 0000 00BD         //     }
                 ; 0000 00BE         // }
                 ; 0000 00BF         // else if(rootine_test == 2)
                 ; 0000 00C0         // {
                 ; 0000 00C1         //     v_buff = 0.15;
                 ; 0000 00C2         //     a_buff = 0;
                 ; 0000 00C3         //     if(d_y<0.95)
                 ; 0000 00C4         //     {
                 ; 0000 00C5         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00C6         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00C7         //         STOP_FLAG = 1;
                 ; 0000 00C8         //     }
                 ; 0000 00C9         //     else{
                 ; 0000 00CA         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00CB         //         if(TIMER0_TIME_print > a+2) rootine_test = 3;
                 ; 0000 00CC         //         oper_Disapath(0,0);
                 ; 0000 00CD         //         STOP_FLAG = 0;
                 ; 0000 00CE         //     }
                 ; 0000 00CF         // }
                 ; 0000 00D0 
                 ; 0000 00D1         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
000320 91e0 0500 	LDS  R30,_TIMER1_OVERFLOW
000322 91f0 0501 	LDS  R31,_TIMER1_OVERFLOW+1
000324 9160 0502 	LDS  R22,_TIMER1_OVERFLOW+2
000326 9170 0503 	LDS  R23,_TIMER1_OVERFLOW+3
                +
000328 efaf     +LDI R26 , LOW ( 0xFF )
000329 e0b0     +LDI R27 , HIGH ( 0xFF )
00032a e080     +LDI R24 , BYTE3 ( 0xFF )
00032b e090     +LDI R25 , BYTE4 ( 0xFF )
                 	__GETD2N 0xFF
00032c 940e 122f 	CALL __MULD12
00032e 01df      	MOVW R26,R30
00032f 01cb      	MOVW R24,R22
000330 b5ec      	IN   R30,0x2C
000331 e0f0      	LDI  R31,0
000332 940e 11ff 	CALL __CWD1
000334 940e 11e3 	CALL __ADDD12
000336 940e 10a2 	CALL __CDF1
                +
000338 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000339 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00033a e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00033b e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00033c 940e 112c 	CALL __MULF12
                +
00033e 01de     +MOVW R26 , R28
00033f 5ea4     +SUBI R26 , LOW ( - 540 )
000340 4fbd     +SBCI R27 , HIGH ( - 540 )
000341 93ed     +ST X + , R30
000342 93fd     +ST X + , R31
000343 936d     +ST X + , R22
000344 937c     +ST X , R23
                 	__PUTD1SX 540
                 ; 0000 00D2 
                 ; 0000 00D3         if(del_ms<TIMER1_TIME)
                +
000345 01de     +MOVW R26 , R28
000346 58ae     +SUBI R26 , LOW ( - 626 )
000347 4fbd     +SBCI R27 , HIGH ( - 626 )
000348 900d     +LD R0 , X +
000349 91bc     +LD R27 , X
00034a 2da0     +MOV R26 , R0
                 	__GETW2SX 626
00034b 940e 1204 	CALL __CWD2
00034d 940e 12ca 	CALL __CDF2
00034f 940e 11bf 	CALL __CMPF12
000351 f4e8      	BRSH _0x15
                 ; 0000 00D4         {
                 ; 0000 00D5             oper_Disapath(0,0);
000352 e0e0      	LDI  R30,LOW(0)
000353 e0f0      	LDI  R31,HIGH(0)
000354 93fa      	ST   -Y,R31
000355 93ea      	ST   -Y,R30
000356 93fa      	ST   -Y,R31
000357 93ea      	ST   -Y,R30
000358 940e 068a 	CALL _oper_Disapath
                 ; 0000 00D6             TIMER1_OVERFLOW = 0;
00035a 940e 0e06 	CALL SUBOPT_0x9
                 ; 0000 00D7             v_buff = 0;
                +
00035c 01de     +MOVW R26 , R28
00035d 58aa     +SUBI R26 , LOW ( - 630 )
00035e 4fbd     +SBCI R27 , HIGH ( - 630 )
00035f 93ed     +ST X + , R30
000360 93ed     +ST X + , R30
000361 93ed     +ST X + , R30
000362 93ec     +ST X , R30
                 	__CLRD1SX 630
                 ; 0000 00D8             a_buff = 0;
000363 e0e0      	LDI  R30,LOW(0)
                +
000364 01de     +MOVW R26 , R28
000365 58a6     +SUBI R26 , LOW ( - 634 )
000366 4fbd     +SBCI R27 , HIGH ( - 634 )
000367 93ed     +ST X + , R30
000368 93ed     +ST X + , R30
000369 93ed     +ST X + , R30
00036a 93ec     +ST X , R30
                 	__CLRD1SX 634
                 ; 0000 00D9             STOP_FLAG = 0;
                +
00036b 01de     +MOVW R26 , R28
00036c 5eae     +SUBI R26 , LOW ( - 530 )
00036d 4fbd     +SBCI R27 , HIGH ( - 530 )
00036e 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00DA         }
                 ; 0000 00DB         // if(goal_currentV_R==0 && goal_currentV_L==0) TIMER0_TIME_print = 0;
                 ; 0000 00DC 
                 ; 0000 00DD         // delay_ms(5);
                 ; 0000 00DE         // RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 ; 0000 00DF         // delay_ms(5);
                 ; 0000 00E0         // currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
                 ; 0000 00E1         // RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
                 ; 0000 00E2         // delay_ms(5);
                 ; 0000 00E3         // currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
                 ; 0000 00E4 
                 ; 0000 00E5         // // currentV_R = (float)(currentRPM_R/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00E6         // // currentV_L = (float)(currentRPM_L/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00E7 
                 ; 0000 00E8         // // goal_currentV_R = (float)(goal_current_R/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00E9         // // goal_currentV_L = (float)(-goal_current_L/(60/(Pi*0.125)*Gearratio));
                 ; 0000 00EA 
                 ; 0000 00EB         // d_velocity = (currentV_R + currentV_L)/2;
                 ; 0000 00EC         // d_angularV = (currentV_R-currentV_L)/Length;
                 ; 0000 00ED         // g_velocity = (goal_currentV_R+goal_currentV_L)/2;
                 ; 0000 00EE         // g_angularV = (goal_currentV_R-goal_currentV_L)/Length;
                 ; 0000 00EF 
                 ; 0000 00F0         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
                 _0x15:
00036f 91a0 056a 	LDS  R26,_TIMER0_OVERFLOW
000371 91b0 056b 	LDS  R27,_TIMER0_OVERFLOW+1
000373 efef      	LDI  R30,LOW(255)
000374 940e 1229 	CALL __MULB1W2U
000376 01df      	MOVW R26,R30
000377 b7e2      	IN   R30,0x32
000378 e0f0      	LDI  R31,0
000379 0fea      	ADD  R30,R26
00037a 1ffb      	ADC  R31,R27
00037b 2766      	CLR  R22
00037c 2777      	CLR  R23
00037d 940e 10a2 	CALL __CDF1
                +
00037f eaae     +LDI R26 , LOW ( 0x3891A2AE )
000380 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000381 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000382 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000383 940e 112c 	CALL __MULF12
                +
000385 01de     +MOVW R26 , R28
000386 5bac     +SUBI R26 , LOW ( - 580 )
000387 4fbd     +SBCI R27 , HIGH ( - 580 )
000388 93ed     +ST X + , R30
000389 93fd     +ST X + , R31
00038a 936d     +ST X + , R22
00038b 937c     +ST X , R23
                 	__PUTD1SX 580
                 ; 0000 00F1         TIMER0_OVERFLOW = 0;
00038c 940e 0d9e 	CALL SUBOPT_0x1
                 ; 0000 00F2         TCNT0 = 0;
                 ; 0000 00F3 
                 ; 0000 00F4         // d_angular += control_time*d_angularV;
                 ; 0000 00F5         // d_x += d_velocity*control_time*cos(d_angular);
                 ; 0000 00F6         // d_y += d_velocity*control_time*sin(d_angular);
                 ; 0000 00F7         // d_angular_circula = (int)(d_angular*Circular);
                 ; 0000 00F8 
                 ; 0000 00F9         // g_angular += control_time*g_angularV;
                 ; 0000 00FA         // g_x += g_velocity*control_time*cos(g_angular);
                 ; 0000 00FB         // g_y += g_velocity*control_time*sin(g_angular);
                 ; 0000 00FC         // g_angular_circula = (int)(g_angular*Circular);
                 ; 0000 00FD 
                 ; 0000 00FE         // motorR_distance = (float)(MOTORR_HALL*0.1325*Pi/160);
                 ; 0000 00FF         // motorL_distance = (float)(MOTORL_HALL*0.1325*Pi/160);
                 ; 0000 0100         motorR_distance = (float)(MOTORR_HALL*0.4/160);
00038e 91e0 0582 	LDS  R30,_MOTORR_HALL
000390 91f0 0583 	LDS  R31,_MOTORR_HALL+1
000392 9160 0584 	LDS  R22,_MOTORR_HALL+2
000394 9170 0585 	LDS  R23,_MOTORR_HALL+3
000396 940e 0e10 	CALL SUBOPT_0xA
                +
000398 01de     +MOVW R26 , R28
000399 50a4     +SUBI R26 , LOW ( - 508 )
00039a 4fbe     +SBCI R27 , HIGH ( - 508 )
00039b 93ed     +ST X + , R30
00039c 93fd     +ST X + , R31
00039d 936d     +ST X + , R22
00039e 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 0101         motorL_distance = (float)(MOTORL_HALL*0.4/160);
00039f 91e0 0586 	LDS  R30,_MOTORL_HALL
0003a1 91f0 0587 	LDS  R31,_MOTORL_HALL+1
0003a3 9160 0588 	LDS  R22,_MOTORL_HALL+2
0003a5 9170 0589 	LDS  R23,_MOTORL_HALL+3
0003a7 940e 0e10 	CALL SUBOPT_0xA
                +
0003a9 01de     +MOVW R26 , R28
0003aa 50a8     +SUBI R26 , LOW ( - 504 )
0003ab 4fbe     +SBCI R27 , HIGH ( - 504 )
0003ac 93ed     +ST X + , R30
0003ad 93fd     +ST X + , R31
0003ae 936d     +ST X + , R22
0003af 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 0102 
                 ; 0000 0103         TIMER0_TIME += control_time;
                +
0003b0 01fe     +MOVW R30 , R28
0003b1 5bec     +SUBI R30 , LOW ( - 580 )
0003b2 4ffd     +SBCI R31 , HIGH ( - 580 )
0003b3 9001     +LD R0 , Z +
0003b4 9011     +LD R1 , Z +
0003b5 9161     +LD R22 , Z +
0003b6 8170     +LD R23 , Z
0003b7 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
0003b8 940e 0e21 	CALL SUBOPT_0xB
0003ba 940e 10dc 	CALL __ADDF12
                +
0003bc 01de     +MOVW R26 , R28
0003bd 5ea8     +SUBI R26 , LOW ( - 536 )
0003be 4fbd     +SBCI R27 , HIGH ( - 536 )
0003bf 93ed     +ST X + , R30
0003c0 93fd     +ST X + , R31
0003c1 936d     +ST X + , R22
0003c2 937c     +ST X , R23
                 	__PUTD1SX 536
                 ; 0000 0104         if(TIMER0_TIME>0.01){
0003c3 940e 0e21 	CALL SUBOPT_0xB
                +
0003c5 e0ea     +LDI R30 , LOW ( 0x3C23D70A )
0003c6 edf7     +LDI R31 , HIGH ( 0x3C23D70A )
0003c7 e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
0003c8 e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
0003c9 940e 11bf 	CALL __CMPF12
0003cb f009      	BREQ PC+2
0003cc f410      	BRCC PC+3
0003cd 940c 04ac 	JMP  _0x16
                 ; 0000 0105             TIMER0_TIME_print += TIMER0_TIME;
0003cf 940e 0e2a 	CALL SUBOPT_0xC
                +
0003d1 01de     +MOVW R26 , R28
0003d2 5eac     +SUBI R26 , LOW ( - 532 )
0003d3 4fbd     +SBCI R27 , HIGH ( - 532 )
0003d4 900d     +LD R0 , X +
0003d5 901d     +LD R1 , X +
0003d6 918d     +LD R24 , X +
0003d7 919c     +LD R25 , X
0003d8 01d0     +MOVW R26 , R0
                 	__GETD2SX 532
0003d9 940e 10dc 	CALL __ADDF12
                +
0003db 01de     +MOVW R26 , R28
0003dc 5eac     +SUBI R26 , LOW ( - 532 )
0003dd 4fbd     +SBCI R27 , HIGH ( - 532 )
0003de 93ed     +ST X + , R30
0003df 93fd     +ST X + , R31
0003e0 936d     +ST X + , R22
0003e1 937c     +ST X , R23
                 	__PUTD1SX 532
                 ; 0000 0106             MOTORR_HALL = 0;
0003e2 e0e0      	LDI  R30,LOW(0)
0003e3 93e0 0582 	STS  _MOTORR_HALL,R30
0003e5 93e0 0583 	STS  _MOTORR_HALL+1,R30
0003e7 93e0 0584 	STS  _MOTORR_HALL+2,R30
0003e9 93e0 0585 	STS  _MOTORR_HALL+3,R30
                 ; 0000 0107             MOTORL_HALL = 0;
0003eb 93e0 0586 	STS  _MOTORL_HALL,R30
0003ed 93e0 0587 	STS  _MOTORL_HALL+1,R30
0003ef 93e0 0588 	STS  _MOTORL_HALL+2,R30
0003f1 93e0 0589 	STS  _MOTORL_HALL+3,R30
                 ; 0000 0108 
                 ; 0000 0109             hall_velocity = (float)((motorR_distance+motorL_distance)/(2*TIMER0_TIME));
0003f3 940e 0e33 	CALL SUBOPT_0xD
0003f5 937f      	PUSH R23
0003f6 936f      	PUSH R22
0003f7 93ff      	PUSH R31
0003f8 93ef      	PUSH R30
0003f9 940e 0e2a 	CALL SUBOPT_0xC
                +
0003fb e0a0     +LDI R26 , LOW ( 0x40000000 )
0003fc e0b0     +LDI R27 , HIGH ( 0x40000000 )
0003fd e080     +LDI R24 , BYTE3 ( 0x40000000 )
0003fe e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0003ff 940e 112c 	CALL __MULF12
000401 91af      	POP  R26
000402 91bf      	POP  R27
000403 918f      	POP  R24
000404 919f      	POP  R25
000405 940e 117a 	CALL __DIVF21
                +
000407 01de     +MOVW R26 , R28
000408 50a0     +SUBI R26 , LOW ( - 512 )
000409 4fbe     +SBCI R27 , HIGH ( - 512 )
00040a 93ed     +ST X + , R30
00040b 93fd     +ST X + , R31
00040c 936d     +ST X + , R22
00040d 937c     +ST X , R23
                 	__PUTD1SX 512
                 ; 0000 010A             hall_angular += (float)((motorR_distance-motorL_distance)/Length);
                +
00040e 01de     +MOVW R26 , R28
00040f 50a8     +SUBI R26 , LOW ( - 504 )
000410 4fbe     +SBCI R27 , HIGH ( - 504 )
000411 900d     +LD R0 , X +
000412 901d     +LD R1 , X +
000413 918d     +LD R24 , X +
000414 919c     +LD R25 , X
000415 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
                +
000416 01fe     +MOVW R30 , R28
000417 50e4     +SUBI R30 , LOW ( - 508 )
000418 4ffe     +SBCI R31 , HIGH ( - 508 )
000419 9001     +LD R0 , Z +
00041a 9011     +LD R1 , Z +
00041b 9161     +LD R22 , Z +
00041c 8170     +LD R23 , Z
00041d 01f0     +MOVW R30 , R0
                 	__GETD1SX 508
00041e 940e 10d5 	CALL __SUBF12
000420 01df      	MOVW R26,R30
000421 01cb      	MOVW R24,R22
                +
000422 e1e7     +LDI R30 , LOW ( 0x3E8ED917 )
000423 edf9     +LDI R31 , HIGH ( 0x3E8ED917 )
000424 e86e     +LDI R22 , BYTE3 ( 0x3E8ED917 )
000425 e37e     +LDI R23 , BYTE4 ( 0x3E8ED917 )
                 	__GETD1N 0x3E8ED917
000426 940e 117a 	CALL __DIVF21
000428 940e 0e46 	CALL SUBOPT_0xE
00042a 940e 10dc 	CALL __ADDF12
                +
00042c 01de     +MOVW R26 , R28
00042d 5faa     +SUBI R26 , LOW ( - 518 )
00042e 4fbd     +SBCI R27 , HIGH ( - 518 )
00042f 93ed     +ST X + , R30
000430 93fd     +ST X + , R31
000431 936d     +ST X + , R22
000432 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 010B             hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
000433 940e 0e33 	CALL SUBOPT_0xD
000435 940e 0e4f 	CALL SUBOPT_0xF
000437 937f      	PUSH R23
000438 936f      	PUSH R22
000439 93ff      	PUSH R31
00043a 93ef      	PUSH R30
00043b 940e 0e58 	CALL SUBOPT_0x10
00043d 940e 0cb7 	CALL _cos
00043f 91af      	POP  R26
000440 91bf      	POP  R27
000441 918f      	POP  R24
000442 919f      	POP  R25
000443 940e 112c 	CALL __MULF12
                +
000445 01de     +MOVW R26 , R28
000446 5fa2     +SUBI R26 , LOW ( - 526 )
000447 4fbd     +SBCI R27 , HIGH ( - 526 )
000448 900d     +LD R0 , X +
000449 901d     +LD R1 , X +
00044a 918d     +LD R24 , X +
00044b 919c     +LD R25 , X
00044c 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
00044d 940e 10dc 	CALL __ADDF12
                +
00044f 01de     +MOVW R26 , R28
000450 5fa2     +SUBI R26 , LOW ( - 526 )
000451 4fbd     +SBCI R27 , HIGH ( - 526 )
000452 93ed     +ST X + , R30
000453 93fd     +ST X + , R31
000454 936d     +ST X + , R22
000455 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 010C             hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
000456 940e 0e33 	CALL SUBOPT_0xD
000458 940e 0e4f 	CALL SUBOPT_0xF
00045a 937f      	PUSH R23
00045b 936f      	PUSH R22
00045c 93ff      	PUSH R31
00045d 93ef      	PUSH R30
00045e 940e 0e58 	CALL SUBOPT_0x10
000460 940e 0c2c 	CALL _sin
000462 91af      	POP  R26
000463 91bf      	POP  R27
000464 918f      	POP  R24
000465 919f      	POP  R25
000466 940e 112c 	CALL __MULF12
                +
000468 01de     +MOVW R26 , R28
000469 5fa6     +SUBI R26 , LOW ( - 522 )
00046a 4fbd     +SBCI R27 , HIGH ( - 522 )
00046b 900d     +LD R0 , X +
00046c 901d     +LD R1 , X +
00046d 918d     +LD R24 , X +
00046e 919c     +LD R25 , X
00046f 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
000470 940e 10dc 	CALL __ADDF12
                +
000472 01de     +MOVW R26 , R28
000473 5fa6     +SUBI R26 , LOW ( - 522 )
000474 4fbd     +SBCI R27 , HIGH ( - 522 )
000475 93ed     +ST X + , R30
000476 93fd     +ST X + , R31
000477 936d     +ST X + , R22
000478 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 010D             hall_angular_circula = (int)(hall_angular*Circular);
000479 940e 0e46 	CALL SUBOPT_0xE
                +
00047b efe6     +LDI R30 , LOW ( 0x426528F6 )
00047c e2f8     +LDI R31 , HIGH ( 0x426528F6 )
00047d e665     +LDI R22 , BYTE3 ( 0x426528F6 )
00047e e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
00047f 940e 0e63 	CALL SUBOPT_0x11
                +
000481 01de     +MOVW R26 , R28
000482 5fac     +SUBI R26 , LOW ( - 516 )
000483 4fbd     +SBCI R27 , HIGH ( - 516 )
000484 93ed     +ST X + , R30
000485 93fc     +ST X , R31
                 	__PUTW1SX 516
                 ; 0000 010E             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 010F             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 0110             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 0111             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d, %d\n", TIMER0_TIME_print, d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 0112             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d, %.3f\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula, TIMER0_TIME_print);
                 ; 0000 0113             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f \n",TIMER0_TIME_print, g_velocity, d_velocity, hall_velocity);
                 ; 0000 0114             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d\n",TIMER0_TIME_print,g_velocity, hall_velocity, g_x, hall_x, del_ms);
                 ; 0000 0115             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n",TIMER0_TIME_print,g_velocity, d_velocity, hall_velocity,);
                 ; 0000 0116             // sprintf(BUFF, "%.3f, %d, %d\n", TIMER0_TIME_print, MOTORR_HALL, MOTORL_HALL);
                 ; 0000 0117             sprintf(BUFF, "%.3f, %.3f\n", TIMER0_TIME_print, hall_x);
000486 01fe      	MOVW R30,R28
000487 93fa      	ST   -Y,R31
000488 93ea      	ST   -Y,R30
                +
000489 e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
00048a e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
00048b 93fa      	ST   -Y,R31
00048c 93ea      	ST   -Y,R30
00048d 940e 0e2a 	CALL SUBOPT_0xC
00048f 940e 12c3 	CALL __PUTPARD1
                +
000491 01fe     +MOVW R30 , R28
000492 5eea     +SUBI R30 , LOW ( - 534 )
000493 4ffd     +SBCI R31 , HIGH ( - 534 )
000494 9001     +LD R0 , Z +
000495 9011     +LD R1 , Z +
000496 9161     +LD R22 , Z +
000497 8170     +LD R23 , Z
000498 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
000499 940e 12c3 	CALL __PUTPARD1
00049b e088      	LDI  R24,8
00049c 940e 0a22 	CALL _sprintf
00049e 962c      	ADIW R28,12
                 ; 0000 0118 
                 ; 0000 0119             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 011A             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 011B             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 011C             //                                                   d_velocity, g_velocity, d_x, g_x, TIMER0_TIME_print);
                 ; 0000 011D             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 011E             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -_buff);
                 ; 0000 011F             puts_USART1(BUFF);
00049f 01fe      	MOVW R30,R28
0004a0 93fa      	ST   -Y,R31
0004a1 93ea      	ST   -Y,R30
0004a2 940e 0583 	CALL _puts_USART1
                 ; 0000 0120             TIMER0_TIME = 0;
0004a4 e0e0      	LDI  R30,LOW(0)
                +
0004a5 01de     +MOVW R26 , R28
0004a6 5ea8     +SUBI R26 , LOW ( - 536 )
0004a7 4fbd     +SBCI R27 , HIGH ( - 536 )
0004a8 93ed     +ST X + , R30
0004a9 93ed     +ST X + , R30
0004aa 93ed     +ST X + , R30
0004ab 93ec     +ST X , R30
                 	__CLRD1SX 536
                 ; 0000 0121         }
                 ; 0000 0122     }
                 _0x16:
0004ac cd91      	RJMP _0xA
                 ; 0000 0123 }
                 _0x17:
0004ad cfff      	RJMP _0x17
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
0004ae 93ea      	ST   -Y,R30
0004af b7ef      	IN   R30,SREG
0004b0 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
0004b1 91e0 0504 	LDS  R30,_TIMER2_OVERFLOW
0004b3 5fef      	SUBI R30,-LOW(1)
0004b4 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
0004b6 91e9      	LD   R30,Y+
0004b7 bfef      	OUT  SREG,R30
0004b8 91e9      	LD   R30,Y+
0004b9 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
0004ba 93aa      	ST   -Y,R26
0004bb 93ba      	ST   -Y,R27
0004bc 93ea      	ST   -Y,R30
0004bd 93fa      	ST   -Y,R31
0004be b7ef      	IN   R30,SREG
0004bf 93ea      	ST   -Y,R30
                 ; 0001 0010     TIMER0_OVERFLOW++;
0004c0 e6aa      	LDI  R26,LOW(_TIMER0_OVERFLOW)
0004c1 e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
0004c2 940e 0e68 	CALL SUBOPT_0x12
                 ; 0001 0011 }
0004c4 91e9      	LD   R30,Y+
0004c5 bfef      	OUT  SREG,R30
0004c6 91f9      	LD   R31,Y+
0004c7 91e9      	LD   R30,Y+
0004c8 91b9      	LD   R27,Y+
0004c9 91a9      	LD   R26,Y+
0004ca 9518      	RETI
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
0004cb 940e 0e6e 	CALL SUBOPT_0x13
                 ; 0001 0016     TIMER1_OVERFLOW++;
0004cd e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
0004ce e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
0004cf 940e 0e77 	CALL SUBOPT_0x14
                 ; 0001 0017     TCNT1H = 0x00;
0004d1 e0e0      	LDI  R30,LOW(0)
0004d2 bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
0004d3 bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
0004d4 91e9      	LD   R30,Y+
0004d5 bfef      	OUT  SREG,R30
0004d6 91f9      	LD   R31,Y+
0004d7 91e9      	LD   R30,Y+
0004d8 91b9      	LD   R27,Y+
0004d9 91a9      	LD   R26,Y+
0004da 9179      	LD   R23,Y+
0004db 9169      	LD   R22,Y+
0004dc 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0004dd e0ed      	LDI  R30,LOW(13)
0004de bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
0004df e2e8      	LDI  R30,LOW(40)
0004e0 bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0004e1 e8e2      	LDI  R30,LOW(130)
0004e2 c010      	RJMP _0x20A000E
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0004e3 e0e7      	LDI  R30,LOW(7)
0004e4 bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0004e5 e8e1      	LDI  R30,LOW(129)
0004e6 c00c      	RJMP _0x20A000E
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0004e7 e1ed      	LDI  R30,LOW(29)
0004e8 bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
0004e9 efef      	LDI  R30,LOW(255)
0004ea e0f0      	LDI  R31,HIGH(255)
0004eb bdf9      	OUT  0x28+1,R31
0004ec bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
0004ed ebe0      	LDI  R30,LOW(1200)
0004ee e0f4      	LDI  R31,HIGH(1200)
0004ef bdf7      	OUT  0x26+1,R31
0004f0 bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
0004f1 b7e7      	IN   R30,0x37
0004f2 60e8      	ORI  R30,8
                 _0x20A000E:
0004f3 bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
0004f4 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
0004f5 93aa      	ST   -Y,R26
0004f6 93ba      	ST   -Y,R27
0004f7 93ea      	ST   -Y,R30
0004f8 b7ef      	IN   R30,SREG
0004f9 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
0004fa b5e4      	IN   R30,0x24
0004fb 31e9      	CPI  R30,LOW(0x19)
0004fc f420      	BRSH _0x40004
0004fd 91a0 0504 	LDS  R26,_TIMER2_OVERFLOW
0004ff 30a0      	CPI  R26,LOW(0x0)
000500 f021      	BREQ _0x40006
                 _0x40004:
000501 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
000503 30a0      	CPI  R26,LOW(0x0)
000504 f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000505 940e 0e80 	CALL SUBOPT_0x15
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
000507 c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
000508 e0e0      	LDI  R30,LOW(0)
000509 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00050b 940e 0e80 	CALL SUBOPT_0x15
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
00050d e0e0      	LDI  R30,LOW(0)
00050e 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
000510 91e9      	LD   R30,Y+
000511 bfef      	OUT  SREG,R30
000512 91e9      	LD   R30,Y+
000513 91b9      	LD   R27,Y+
000514 91a9      	LD   R26,Y+
000515 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
000516 93aa      	ST   -Y,R26
000517 93ea      	ST   -Y,R30
000518 93fa      	ST   -Y,R31
000519 b7ef      	IN   R30,SREG
00051a 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
00051b 931a      	ST   -Y,R17
                 ;	i -> R17
00051c e010      	LDI  R17,0
00051d 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
00051f 331c      	CPI  R17,60
000520 f421      	BRNE _0x4000A
000521 91a0 0581 	LDS  R26,_CHECK_GETS
000523 30a0      	CPI  R26,LOW(0x0)
000524 f009      	BREQ _0x4000B
                 _0x4000A:
000525 c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
000526 9bc3      	SBIS 0x18,3
000527 c002      	RJMP _0x4000C
000528 98c3      	CBI  0x18,3
000529 c001      	RJMP _0x4000D
                 _0x4000C:
00052a 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
00052b e0e0      	LDI  R30,LOW(0)
00052c 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00052e c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
00052f 331e      	CPI  R17,62
000530 f421      	BRNE _0x40010
000531 91a0 0581 	LDS  R26,_CHECK_GETS
000533 30a0      	CPI  R26,LOW(0x0)
000534 f009      	BREQ _0x40011
                 _0x40010:
000535 c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000536 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000538 940e 0e8f 	CALL SUBOPT_0x16
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
00053a e0e1      	LDI  R30,LOW(1)
00053b 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
00053d c008      	RJMP _0x40012
                 _0x4000F:
00053e 91e0 0581 	LDS  R30,_CHECK_GETS
000540 30e0      	CPI  R30,0
000541 f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
000542 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000544 940e 0e8f 	CALL SUBOPT_0x16
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
000546 9119      	LD   R17,Y+
000547 91e9      	LD   R30,Y+
000548 bfef      	OUT  SREG,R30
000549 91f9      	LD   R31,Y+
00054a 91e9      	LD   R30,Y+
00054b 91a9      	LD   R26,Y+
00054c 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
00054d e0e0      	LDI  R30,LOW(0)
00054e 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
000550 e9e8      	LDI  R30,LOW(152)
000551 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
000553 e0e6      	LDI  R30,LOW(6)
000554 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
000556 91e0 009d 	LDS  R30,157
000558 7bef      	ANDI R30,0xBF
000559 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
00055b 81e8      	LD   R30,Y
00055c 81f9      	LDD  R31,Y+1
00055d 940e 11f4 	CALL __ASRW8
00055f 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
000561 81e8      	LD   R30,Y
000562 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
000564 c014      	RJMP _0x20A000D
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
000565 e0e0      	LDI  R30,LOW(0)
000566 b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
000567 e9e8      	LDI  R30,LOW(152)
000568 b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
000569 e0e6      	LDI  R30,LOW(6)
00056a 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
00056c 91e0 0095 	LDS  R30,149
00056e 7bef      	ANDI R30,0xBF
00056f 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
000571 81e8      	LD   R30,Y
000572 81f9      	LDD  R31,Y+1
000573 940e 11f4 	CALL __ASRW8
000575 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
000577 81e8      	LD   R30,Y
000578 b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000D:
000579 9622      	ADIW R28,2
00057a 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
00057b 91e0 009b 	LDS  R30,155
00057d 72e0      	ANDI R30,LOW(0x20)
00057e f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
00057f 81e8      	LD   R30,Y
000580 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
000582 c023      	RJMP _0x20A000C
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
000583 931a      	ST   -Y,R17
000584 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000585 e010      	LDI  R17,0
000586 e000      	LDI  R16,0
000587 e010      	LDI  R17,LOW(0)
                 _0x40018:
000588 940e 0e99 	CALL SUBOPT_0x17
00058a 30e0      	CPI  R30,0
00058b f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
00058c 940e 0e99 	CALL SUBOPT_0x17
00058e 93ea      	ST   -Y,R30
00058f dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
000590 5f1f      	SUBI R17,-1
000591 cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
000592 e000      	LDI  R16,LOW(0)
                 _0x4001B:
000593 1701      	CP   R16,R17
000594 f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
000595 81aa      	LDD  R26,Y+2
000596 81bb      	LDD  R27,Y+2+1
000597 9611      	ADIW R26,1
000598 83aa      	STD  Y+2,R26
000599 83bb      	STD  Y+2+1,R27
00059a 9711      	SBIW R26,1
00059b e0e0      	LDI  R30,LOW(0)
00059c 93ec      	ST   X,R30
                 ; 0002 0054     }
00059d 5f0f      	SUBI R16,-1
00059e cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
00059f 8119      	LDD  R17,Y+1
0005a0 8108      	LDD  R16,Y+0
0005a1 c104      	RJMP _0x20A000B
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
0005a2 9b5d      	SBIS 0xB,5
0005a3 cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
0005a4 81e8      	LD   R30,Y
0005a5 b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000C:
0005a6 9621      	ADIW R28,1
0005a7 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
0005a8 940e 12e2 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
0005aa ef2f     +LDI R18 , LOW ( - 1 )
0005ab ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
0005ac 81ee      	LDD  R30,Y+6
0005ad 81ff      	LDD  R31,Y+6+1
0005ae 9731      	SBIW R30,1
0005af 83ee      	STD  Y+6,R30
0005b0 83ff      	STD  Y+6+1,R31
0005b1 9631      	ADIW R30,1
0005b2 f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
0005b3 85a8      	LDD  R26,Y+8
0005b4 85b9      	LDD  R27,Y+8+1
0005b5 91ed      	LD   R30,X+
0005b6 87a8      	STD  Y+8,R26
0005b7 87b9      	STD  Y+8+1,R27
0005b8 e0f0      	LDI  R31,0
                +
0005b9 272e     +EOR R18 , R30
0005ba 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
0005bb e000     +LDI R16 , LOW ( 0 )
0005bc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
0005bd 3008     +CPI R16 , LOW ( 8 )
0005be e0e0     +LDI R30 , HIGH ( 8 )
0005bf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0005c0 f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
0005c1 01f9      	MOVW R30,R18
0005c2 70e1      	ANDI R30,LOW(0x1)
0005c3 70f0      	ANDI R31,HIGH(0x1)
0005c4 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
0005c5 9536      	LSR  R19
0005c6 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
0005c7 2e04      	MOV  R0,R20
0005c8 2a05      	OR   R0,R21
0005c9 f021      	BREQ _0x4002D
0005ca e0e1      	LDI  R30,LOW(40961)
0005cb eaf0      	LDI  R31,HIGH(40961)
                +
0005cc 272e     +EOR R18 , R30
0005cd 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
0005ce 5f0f     +SUBI R16 , LOW ( - 1 )
0005cf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0005d0 cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
0005d1 cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
0005d2 01f9      	MOVW R30,R18
0005d3 940e 12e9 	CALL __LOADLOCR6
0005d5 962a      	ADIW R28,10
0005d6 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
0005d7 9728      	SBIW R28,8
0005d8 940e 12e4 	CALL __SAVELOCR4
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                +
0005da e020     +LDI R18 , LOW ( 0 )
0005db e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0005dc 89e8      	LDD  R30,Y+16
0005dd 83ec      	STD  Y+4,R30
                 ; 0002 0083     protocol[1]=0x06;
0005de e0e6      	LDI  R30,LOW(6)
0005df 83ed      	STD  Y+5,R30
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
0005e0 85ee      	LDD  R30,Y+14
0005e1 85ff      	LDD  R31,Y+14+1
0005e2 940e 11f4 	CALL __ASRW8
0005e4 83ee      	STD  Y+6,R30
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
0005e5 85ee      	LDD  R30,Y+14
0005e6 83ef      	STD  Y+7,R30
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
0005e7 85ec      	LDD  R30,Y+12
0005e8 85fd      	LDD  R31,Y+12+1
0005e9 940e 11f4 	CALL __ASRW8
0005eb 87e8      	STD  Y+8,R30
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
0005ec 85ec      	LDD  R30,Y+12
0005ed 87e9      	STD  Y+9,R30
                 ; 0002 0088     protocol[6]=0;
0005ee e0e0      	LDI  R30,LOW(0)
0005ef 87ea      	STD  Y+10,R30
                 ; 0002 0089     protocol[7]=0;
0005f0 87eb      	STD  Y+11,R30
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
0005f1 01fe      	MOVW R30,R28
0005f2 9634      	ADIW R30,4
0005f3 93fa      	ST   -Y,R31
0005f4 93ea      	ST   -Y,R30
0005f5 e0e6      	LDI  R30,LOW(6)
0005f6 e0f0      	LDI  R31,HIGH(6)
0005f7 93fa      	ST   -Y,R31
0005f8 93ea      	ST   -Y,R30
0005f9 dfae      	RCALL _CRC16
0005fa 018f      	MOVW R16,R30
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
0005fb 01f8      	MOVW R30,R16
0005fc 87ea      	STD  Y+10,R30
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                +
0005fd 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                +
0005fe e020     +LDI R18 , LOW ( 0 )
0005ff e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002F:
                +
000600 3028     +CPI R18 , LOW ( 8 )
000601 e0e0     +LDI R30 , HIGH ( 8 )
000602 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000603 f454      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
000604 01de      	MOVW R26,R28
000605 9614      	ADIW R26,4
000606 0fa2      	ADD  R26,R18
000607 1fb3      	ADC  R27,R19
000608 91ec      	LD   R30,X
000609 93ea      	ST   -Y,R30
00060a df97      	RCALL _putch_USART0
                 ; 0002 0094     }
                +
00060b 5f2f     +SUBI R18 , LOW ( - 1 )
00060c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00060d cff2      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
00060e 940e 12eb 	CALL __LOADLOCR4
000610 9661      	ADIW R28,17
000611 9508      	RET
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
                 ; 0002 00B0     }
                 ; 0002 00B1 }
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
000612 9728      	SBIW R28,8
000613 940e 0ea0 	CALL SUBOPT_0x18
000615 e0e0      	LDI  R30,LOW(0)
000616 83ea      	STD  Y+2,R30
000617 83eb      	STD  Y+3,R30
000618 83ec      	STD  Y+4,R30
000619 83ed      	STD  Y+5,R30
00061a 83ee      	STD  Y+6,R30
00061b 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
00061c 940e 0ea4 	CALL SUBOPT_0x19
00061e 2377      	TST  R23
00061f f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
000620 940e 0ea9 	CALL SUBOPT_0x1A
000622 940e 1036 	CALL __ANEGF1
000624 85ac      	LDD  R26,Y+12
000625 85bd      	LDD  R27,Y+12+1
000626 940e 12aa 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
000628 940e 0ea4 	CALL SUBOPT_0x19
00062a 937f      	PUSH R23
00062b 936f      	PUSH R22
00062c 93ff      	PUSH R31
00062d 93ef      	PUSH R30
00062e 940e 0ea9 	CALL SUBOPT_0x1A
000630 940e 0eae 	CALL SUBOPT_0x1B
000632 91af      	POP  R26
000633 91bf      	POP  R27
000634 918f      	POP  R24
000635 919f      	POP  R25
000636 940e 10dc 	CALL __ADDF12
000638 940e 0eb5 	CALL SUBOPT_0x1C
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
00063a 940e 0ea4 	CALL SUBOPT_0x19
00063c 937f      	PUSH R23
00063d 936f      	PUSH R22
00063e 93ff      	PUSH R31
00063f 93ef      	PUSH R30
000640 940e 0ea9 	CALL SUBOPT_0x1A
000642 940e 0eae 	CALL SUBOPT_0x1B
000644 91af      	POP  R26
000645 91bf      	POP  R27
000646 918f      	POP  R24
000647 919f      	POP  R25
000648 940e 0eba 	CALL SUBOPT_0x1D
00064a 940e 12be 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(VelocityR*(60/(0.4)*Gearratio));
00064c 940e 0ebf 	CALL SUBOPT_0x1E
00064e 940e 0ec4 	CALL SUBOPT_0x1F
000650 85aa      	LDD  R26,Y+10
000651 85bb      	LDD  R27,Y+10+1
000652 93ed      	ST   X+,R30
000653 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(VelocityL*(60/(0.4)*Gearratio));
000654 940e 12b9 	CALL __GETD2S0
000656 940e 0ec4 	CALL SUBOPT_0x1F
000658 85a8      	LDD  R26,Y+8
000659 85b9      	LDD  R27,Y+8+1
00065a 93ed      	ST   X+,R30
00065b 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
00065c 85aa      	LDD  R26,Y+10
00065d 85bb      	LDD  R27,Y+10+1
00065e 940e 129b 	CALL __GETW1P
000660 32ec      	CPI  R30,LOW(0x12C)
000661 e0a1      	LDI  R26,HIGH(0x12C)
000662 07fa      	CPC  R31,R26
000663 f434      	BRGE _0x40036
000664 01df      	MOVW R26,R30
000665 ede4      	LDI  R30,LOW(65236)
000666 effe      	LDI  R31,HIGH(65236)
000667 17ea      	CP   R30,R26
000668 07fb      	CPC  R31,R27
000669 f00c      	BRLT _0x40037
                 _0x40036:
00066a c014      	RJMP _0x40038
                 _0x40037:
00066b 85a8      	LDD  R26,Y+8
00066c 85b9      	LDD  R27,Y+8+1
00066d 940e 129b 	CALL __GETW1P
00066f 32ec      	CPI  R30,LOW(0x12C)
000670 e0a1      	LDI  R26,HIGH(0x12C)
000671 07fa      	CPC  R31,R26
000672 f454      	BRGE _0x40039
000673 85a8      	LDD  R26,Y+8
000674 85b9      	LDD  R27,Y+8+1
000675 940e 129b 	CALL __GETW1P
000677 01df      	MOVW R26,R30
000678 ede4      	LDI  R30,LOW(65236)
000679 effe      	LDI  R31,HIGH(65236)
00067a 17ea      	CP   R30,R26
00067b 07fb      	CPC  R31,R27
00067c f00c      	BRLT _0x4003A
                 _0x40039:
00067d c001      	RJMP _0x40038
                 _0x4003A:
00067e c001      	RJMP _0x4003B
                 _0x40038:
00067f c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
000680 85aa      	LDD  R26,Y+10
000681 85bb      	LDD  R27,Y+10+1
000682 940e 0ec9 	CALL SUBOPT_0x20
                 ; 0002 00C4         *L_RPM = 0;
000684 85a8      	LDD  R26,Y+8
000685 85b9      	LDD  R27,Y+8+1
000686 940e 0ec9 	CALL SUBOPT_0x20
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
000688 940c 0804 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
00068a e0e1      	LDI  R30,LOW(1)
00068b 93ea      	ST   -Y,R30
00068c e7e9      	LDI  R30,LOW(121)
00068d e0f0      	LDI  R31,HIGH(121)
00068e 93fa      	ST   -Y,R31
00068f 93ea      	ST   -Y,R30
000690 81ed      	LDD  R30,Y+5
000691 81fe      	LDD  R31,Y+5+1
000692 940e 0ece 	CALL SUBOPT_0x21
                 ; 0002 00CB     delay_ms(1);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
000694 e0e2      	LDI  R30,LOW(2)
000695 93ea      	ST   -Y,R30
000696 e7e9      	LDI  R30,LOW(121)
000697 e0f0      	LDI  R31,HIGH(121)
000698 93fa      	ST   -Y,R31
000699 93ea      	ST   -Y,R30
00069a 81eb      	LDD  R30,Y+3
00069b 81fc      	LDD  R31,Y+3+1
00069c 940e 11e8 	CALL __ANEGW1
00069e 940e 0ece 	CALL SUBOPT_0x21
                 ; 0002 00CE     delay_ms(1);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
0006a0 e0e1      	LDI  R30,LOW(1)
0006a1 940e 0ed5 	CALL SUBOPT_0x22
                 ; 0002 00D1     delay_ms(1);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
0006a3 e0e2      	LDI  R30,LOW(2)
0006a4 940e 0ed5 	CALL SUBOPT_0x22
                 ; 0002 00D4     delay_ms(1);
                 ; 0002 00D5 }
                 _0x20A000B:
0006a6 9624      	ADIW R28,4
0006a7 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
                 ; 0002 00E1         return RPM;
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
0006a8 e5e5      	LDI  R30,LOW(85)
0006a9 bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
0006aa efe0      	LDI  R30,LOW(240)
0006ab bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
0006ac 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
0006ad 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
0006ae 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
0006af 9817      	CBI  0x2,7
                 ; 0003 000C }
0006b0 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
0006b1 940e 0edd 	CALL SUBOPT_0x23
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
0006b3 f041      	BREQ _0x6000B
0006b4 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
0006b5 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
0006b6 940e 0e77 	CALL SUBOPT_0x14
0006b8 9731      	SBIW R30,1
0006b9 4060      	SBCI R22,0
0006ba 4070      	SBCI R23,0
                 ; 0003 0011     else MOTORR_HALL--;
0006bb c002      	RJMP _0x6000C
                 _0x6000B:
0006bc 940e 0ee6 	CALL SUBOPT_0x24
                 ; 0003 0012 }
                 _0x6000C:
0006be c037      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
0006bf 940e 0edd 	CALL SUBOPT_0x23
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
0006c1 f019      	BREQ _0x6000D
0006c2 940e 0ee6 	CALL SUBOPT_0x24
                 ; 0003 0017     else MOTORR_HALL++;
0006c4 c007      	RJMP _0x6000E
                 _0x6000D:
0006c5 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
0006c6 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
0006c7 940e 0e77 	CALL SUBOPT_0x14
0006c9 9731      	SBIW R30,1
0006ca 4060      	SBCI R22,0
0006cb 4070      	SBCI R23,0
                 ; 0003 0018 }
                 _0x6000E:
0006cc c029      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
0006cd 940e 0e6e 	CALL SUBOPT_0x13
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
0006cf e0a0      	LDI  R26,0
0006d0 990e      	SBIC 0x1,6
0006d1 e0a1      	LDI  R26,1
0006d2 e0e0      	LDI  R30,0
0006d3 990f      	SBIC 0x1,7
0006d4 e0e1      	LDI  R30,1
0006d5 17ea      	CP   R30,R26
0006d6 f019      	BREQ _0x6000F
0006d7 940e 0ef4 	CALL SUBOPT_0x25
                 ; 0003 001D     else MOTORL_HALL++;
0006d9 c007      	RJMP _0x60010
                 _0x6000F:
0006da e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0006db e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0006dc 940e 0e77 	CALL SUBOPT_0x14
0006de 9731      	SBIW R30,1
0006df 4060      	SBCI R22,0
0006e0 4070      	SBCI R23,0
                 ; 0003 001E }
                 _0x60010:
0006e1 c014      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
0006e2 940e 0e6e 	CALL SUBOPT_0x13
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
0006e4 e0a0      	LDI  R26,0
0006e5 990f      	SBIC 0x1,7
0006e6 e0a1      	LDI  R26,1
0006e7 e0e0      	LDI  R30,0
0006e8 990e      	SBIC 0x1,6
0006e9 e0e1      	LDI  R30,1
0006ea 17ea      	CP   R30,R26
0006eb f041      	BREQ _0x60011
0006ec e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0006ed e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0006ee 940e 0e77 	CALL SUBOPT_0x14
0006f0 9731      	SBIW R30,1
0006f1 4060      	SBCI R22,0
0006f2 4070      	SBCI R23,0
                 ; 0003 0023     else MOTORL_HALL--;
0006f3 c002      	RJMP _0x60012
                 _0x60011:
0006f4 940e 0ef4 	CALL SUBOPT_0x25
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
0006f6 91e9      	LD   R30,Y+
0006f7 bfef      	OUT  SREG,R30
0006f8 91f9      	LD   R31,Y+
0006f9 91e9      	LD   R30,Y+
0006fa 91b9      	LD   R27,Y+
0006fb 91a9      	LD   R26,Y+
0006fc 9179      	LD   R23,Y+
0006fd 9169      	LD   R22,Y+
0006fe 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0006ff 931a      	ST   -Y,R17
000700 930a      	ST   -Y,R16
000701 81aa      	LDD  R26,Y+2
000702 81bb      	LDD  R27,Y+2+1
000703 9612      	ADIW R26,2
000704 940e 129b 	CALL __GETW1P
000706 9730      	SBIW R30,0
000707 f129      	BREQ _0x2000010
000708 81aa      	LDD  R26,Y+2
000709 81bb      	LDD  R27,Y+2+1
00070a 9614      	ADIW R26,4
00070b 940e 129b 	CALL __GETW1P
00070d 018f      	MOVW R16,R30
00070e 9730      	SBIW R30,0
00070f f061      	BREQ _0x2000012
                +
000710 3002     +CPI R16 , LOW ( 2 )
000711 e0e0     +LDI R30 , HIGH ( 2 )
000712 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000713 f0c0      	BRLO _0x2000013
000714 01f8      	MOVW R30,R16
000715 9731      	SBIW R30,1
000716 018f      	MOVW R16,R30
                +
000717 81aa     +LDD R26 , Y + 2
000718 81bb     +LDD R27 , Y + 2 + 1
000719 9614     +ADIW R26 , 4
00071a 93ed     +ST X + , R30
00071b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00071c 81aa      	LDD  R26,Y+2
00071d 81bb      	LDD  R27,Y+2+1
00071e 9612      	ADIW R26,2
00071f 940e 0e68 	CALL SUBOPT_0x12
000721 9731      	SBIW R30,1
000722 81ac      	LDD  R26,Y+4
000723 83a0      	STD  Z+0,R26
000724 81aa      	LDD  R26,Y+2
000725 81bb      	LDD  R27,Y+2+1
000726 940e 129b 	CALL __GETW1P
000728 23ff      	TST  R31
000729 f012      	BRMI _0x2000014
00072a 940e 0e68 	CALL SUBOPT_0x12
                 _0x2000014:
                 _0x2000013:
00072c c006      	RJMP _0x2000015
                 _0x2000010:
00072d 81aa      	LDD  R26,Y+2
00072e 81bb      	LDD  R27,Y+2+1
00072f efef      	LDI  R30,LOW(65535)
000730 efff      	LDI  R31,HIGH(65535)
000731 93ed      	ST   X+,R30
000732 93fc      	ST   X,R31
                 _0x2000015:
000733 8119      	LDD  R17,Y+1
000734 8108      	LDD  R16,Y+0
000735 c346      	RJMP _0x20A0007
                 __ftoe_G100:
000736 9724      	SBIW R28,4
000737 940e 0ea0 	CALL SUBOPT_0x18
000739 e8e0      	LDI  R30,LOW(128)
00073a 83ea      	STD  Y+2,R30
00073b e3ef      	LDI  R30,LOW(63)
00073c 83eb      	STD  Y+3,R30
00073d 940e 12e4 	CALL __SAVELOCR4
00073f 85ee      	LDD  R30,Y+14
000740 85ff      	LDD  R31,Y+14+1
000741 3fef      	CPI  R30,LOW(0xFFFF)
000742 efaf      	LDI  R26,HIGH(0xFFFF)
000743 07fa      	CPC  R31,R26
000744 f449      	BRNE _0x2000019
000745 85e8      	LDD  R30,Y+8
000746 85f9      	LDD  R31,Y+8+1
000747 93fa      	ST   -Y,R31
000748 93ea      	ST   -Y,R30
                +
000749 eae4     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00074a e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00074b 940e 0f02 	CALL SUBOPT_0x26
00074d c0b4      	RJMP _0x20A0009
                 _0x2000019:
00074e 3fef      	CPI  R30,LOW(0x7FFF)
00074f e7af      	LDI  R26,HIGH(0x7FFF)
000750 07fa      	CPC  R31,R26
000751 f449      	BRNE _0x2000018
000752 85e8      	LDD  R30,Y+8
000753 85f9      	LDD  R31,Y+8+1
000754 93fa      	ST   -Y,R31
000755 93ea      	ST   -Y,R30
                +
000756 eae5     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000757 e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000758 940e 0f02 	CALL SUBOPT_0x26
00075a c0a7      	RJMP _0x20A0009
                 _0x2000018:
00075b 85ab      	LDD  R26,Y+11
00075c 30a7      	CPI  R26,LOW(0x7)
00075d f010      	BRLO _0x200001B
00075e e0e6      	LDI  R30,LOW(6)
00075f 87eb      	STD  Y+11,R30
                 _0x200001B:
000760 851b      	LDD  R17,Y+11
                 _0x200001C:
000761 2fe1      	MOV  R30,R17
000762 5011      	SUBI R17,1
000763 30e0      	CPI  R30,0
000764 f019      	BREQ _0x200001E
000765 940e 0f06 	CALL SUBOPT_0x27
000767 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000768 85ec     +LDD R30 , Y + 12
000769 85fd     +LDD R31 , Y + 12 + 1
00076a 856e     +LDD R22 , Y + 12 + 2
00076b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00076c 940e 12da 	CALL __CPD10
00076e f421      	BRNE _0x200001F
00076f e030      	LDI  R19,LOW(0)
000770 940e 0f06 	CALL SUBOPT_0x27
000772 c02e      	RJMP _0x2000020
                 _0x200001F:
000773 853b      	LDD  R19,Y+11
000774 940e 0f0e 	CALL SUBOPT_0x28
000776 f009      	BREQ PC+2
000777 f410      	BRCC PC+3
000778 940c 0785 	JMP  _0x2000021
00077a 940e 0f06 	CALL SUBOPT_0x27
                 _0x2000022:
00077c 940e 0f0e 	CALL SUBOPT_0x28
00077e f028      	BRLO _0x2000024
00077f 940e 0f19 	CALL SUBOPT_0x29
000781 940e 0f1e 	CALL SUBOPT_0x2A
000783 cff8      	RJMP _0x2000022
                 _0x2000024:
000784 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000785 940e 0f0e 	CALL SUBOPT_0x28
000787 f440      	BRSH _0x2000028
000788 940e 0f19 	CALL SUBOPT_0x29
00078a 940e 0f2a 	CALL SUBOPT_0x2B
00078c 940e 0f31 	CALL SUBOPT_0x2C
00078e 5031      	SUBI R19,LOW(1)
00078f cff5      	RJMP _0x2000026
                 _0x2000028:
000790 940e 0f06 	CALL SUBOPT_0x27
                 _0x2000025:
                +
000792 85ec     +LDD R30 , Y + 12
000793 85fd     +LDD R31 , Y + 12 + 1
000794 856e     +LDD R22 , Y + 12 + 2
000795 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000796 940e 0f36 	CALL SUBOPT_0x2D
000798 940e 0f31 	CALL SUBOPT_0x2C
00079a 940e 0f0e 	CALL SUBOPT_0x28
00079c f020      	BRLO _0x2000029
00079d 940e 0f19 	CALL SUBOPT_0x29
00079f 940e 0f1e 	CALL SUBOPT_0x2A
                 _0x2000029:
                 _0x2000020:
0007a1 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0007a2 85eb      	LDD  R30,Y+11
0007a3 17e1      	CP   R30,R17
0007a4 f188      	BRLO _0x200002C
0007a5 940e 0ebf 	CALL SUBOPT_0x1E
0007a7 940e 0f3d 	CALL SUBOPT_0x2E
0007a9 940e 0f36 	CALL SUBOPT_0x2D
0007ab 940e 0f44 	CALL SUBOPT_0x2F
0007ad 940e 0eb5 	CALL SUBOPT_0x1C
                +
0007af 81ec     +LDD R30 , Y + 4
0007b0 81fd     +LDD R31 , Y + 4 + 1
0007b1 816e     +LDD R22 , Y + 4 + 2
0007b2 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0007b3 940e 0f19 	CALL SUBOPT_0x29
0007b5 940e 117a 	CALL __DIVF21
0007b7 940e 1069 	CALL __CFD1U
0007b9 2f0e      	MOV  R16,R30
0007ba 940e 0f48 	CALL SUBOPT_0x30
0007bc 940e 0f4f 	CALL SUBOPT_0x31
0007be 27ff      	CLR  R31
0007bf 2766      	CLR  R22
0007c0 2777      	CLR  R23
0007c1 940e 10a2 	CALL __CDF1
0007c3 940e 0ebf 	CALL SUBOPT_0x1E
0007c5 940e 112c 	CALL __MULF12
0007c7 940e 0f19 	CALL SUBOPT_0x29
0007c9 940e 0eba 	CALL SUBOPT_0x1D
0007cb 940e 0f31 	CALL SUBOPT_0x2C
0007cd 2fe1      	MOV  R30,R17
0007ce 5f1f      	SUBI R17,-1
0007cf 30e0      	CPI  R30,0
0007d0 f689      	BRNE _0x200002A
0007d1 940e 0f48 	CALL SUBOPT_0x30
0007d3 e2ee      	LDI  R30,LOW(46)
0007d4 93ec      	ST   X,R30
0007d5 cfcc      	RJMP _0x200002A
                 _0x200002C:
0007d6 940e 0f54 	CALL SUBOPT_0x32
0007d8 9731      	SBIW R30,1
0007d9 85aa      	LDD  R26,Y+10
0007da 83a0      	STD  Z+0,R26
0007db 3030      	CPI  R19,0
0007dc f42c      	BRGE _0x200002E
0007dd 9531      	NEG  R19
0007de 85a8      	LDD  R26,Y+8
0007df 85b9      	LDD  R27,Y+8+1
0007e0 e2ed      	LDI  R30,LOW(45)
0007e1 c003      	RJMP _0x2000111
                 _0x200002E:
0007e2 85a8      	LDD  R26,Y+8
0007e3 85b9      	LDD  R27,Y+8+1
0007e4 e2eb      	LDI  R30,LOW(43)
                 _0x2000111:
0007e5 93ec      	ST   X,R30
0007e6 940e 0f54 	CALL SUBOPT_0x32
0007e8 940e 0f54 	CALL SUBOPT_0x32
0007ea 9731      	SBIW R30,1
0007eb 01bf      	MOVW R22,R30
0007ec 2fa3      	MOV  R26,R19
0007ed e0ea      	LDI  R30,LOW(10)
0007ee 940e 1242 	CALL __DIVB21
0007f0 5de0      	SUBI R30,-LOW(48)
0007f1 01db      	MOVW R26,R22
0007f2 93ec      	ST   X,R30
0007f3 940e 0f54 	CALL SUBOPT_0x32
0007f5 9731      	SBIW R30,1
0007f6 01bf      	MOVW R22,R30
0007f7 2fa3      	MOV  R26,R19
0007f8 e0ea      	LDI  R30,LOW(10)
0007f9 940e 126c 	CALL __MODB21
0007fb 5de0      	SUBI R30,-LOW(48)
0007fc 01db      	MOVW R26,R22
0007fd 93ec      	ST   X,R30
0007fe 85a8      	LDD  R26,Y+8
0007ff 85b9      	LDD  R27,Y+8+1
000800 e0e0      	LDI  R30,LOW(0)
000801 93ec      	ST   X,R30
                 _0x20A0009:
000802 940e 12eb 	CALL __LOADLOCR4
                 _0x20A000A:
000804 9660      	ADIW R28,16
000805 9508      	RET
                 __print_G100:
000806 97ef      	SBIW R28,63
000807 9761      	SBIW R28,17
000808 940e 12e2 	CALL __SAVELOCR6
00080a e010      	LDI  R17,0
                +
00080b 01fe     +MOVW R30 , R28
00080c 5ae8     +SUBI R30 , LOW ( - 88 )
00080d 4fff     +SBCI R31 , HIGH ( - 88 )
00080e 9001     +LD R0 , Z +
00080f 81f0     +LD R31 , Z
000810 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000811 87e8      	STD  Y+8,R30
000812 87f9      	STD  Y+8+1,R31
                +
000813 01fe     +MOVW R30 , R28
000814 5aea     +SUBI R30 , LOW ( - 86 )
000815 4fff     +SBCI R31 , HIGH ( - 86 )
000816 9001     +LD R0 , Z +
000817 81f0     +LD R31 , Z
000818 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000819 83ee      	STD  Y+6,R30
00081a 83ff      	STD  Y+6+1,R31
00081b 81ae      	LDD  R26,Y+6
00081c 81bf      	LDD  R27,Y+6+1
00081d 940e 0ec9 	CALL SUBOPT_0x20
                 _0x2000030:
00081f 01de      	MOVW R26,R28
000820 5aa4      	SUBI R26,LOW(-(92))
000821 4fbf      	SBCI R27,HIGH(-(92))
000822 940e 0e68 	CALL SUBOPT_0x12
000824 9731      	SBIW R30,1
000825 91e4      	LPM  R30,Z
000826 2f2e      	MOV  R18,R30
000827 30e0      	CPI  R30,0
000828 f411      	BRNE PC+3
000829 940c 0a19 	JMP _0x2000032
00082b 2fe1      	MOV  R30,R17
00082c 30e0      	CPI  R30,0
00082d f439      	BRNE _0x2000036
00082e 3225      	CPI  R18,37
00082f f411      	BRNE _0x2000037
000830 e011      	LDI  R17,LOW(1)
000831 c002      	RJMP _0x2000038
                 _0x2000037:
000832 940e 0f5a 	CALL SUBOPT_0x33
                 _0x2000038:
000834 c1e3      	RJMP _0x2000035
                 _0x2000036:
000835 30e1      	CPI  R30,LOW(0x1)
000836 f4c1      	BRNE _0x2000039
000837 3225      	CPI  R18,37
000838 f419      	BRNE _0x200003A
000839 940e 0f5a 	CALL SUBOPT_0x33
00083b c1db      	RJMP _0x2000112
                 _0x200003A:
00083c e012      	LDI  R17,LOW(2)
00083d e0e0      	LDI  R30,LOW(0)
00083e 8bed      	STD  Y+21,R30
00083f e000      	LDI  R16,LOW(0)
000840 322d      	CPI  R18,45
000841 f411      	BRNE _0x200003B
000842 e001      	LDI  R16,LOW(1)
000843 c1d4      	RJMP _0x2000035
                 _0x200003B:
000844 322b      	CPI  R18,43
000845 f419      	BRNE _0x200003C
000846 e2eb      	LDI  R30,LOW(43)
000847 8bed      	STD  Y+21,R30
000848 c1cf      	RJMP _0x2000035
                 _0x200003C:
000849 3220      	CPI  R18,32
00084a f419      	BRNE _0x200003D
00084b e2e0      	LDI  R30,LOW(32)
00084c 8bed      	STD  Y+21,R30
00084d c1ca      	RJMP _0x2000035
                 _0x200003D:
00084e c002      	RJMP _0x200003E
                 _0x2000039:
00084f 30e2      	CPI  R30,LOW(0x2)
000850 f439      	BRNE _0x200003F
                 _0x200003E:
000851 e050      	LDI  R21,LOW(0)
000852 e013      	LDI  R17,LOW(3)
000853 3320      	CPI  R18,48
000854 f411      	BRNE _0x2000040
000855 6800      	ORI  R16,LOW(128)
000856 c1c1      	RJMP _0x2000035
                 _0x2000040:
000857 c002      	RJMP _0x2000041
                 _0x200003F:
000858 30e3      	CPI  R30,LOW(0x3)
000859 f491      	BRNE _0x2000042
                 _0x2000041:
00085a 3320      	CPI  R18,48
00085b f010      	BRLO _0x2000044
00085c 332a      	CPI  R18,58
00085d f008      	BRLO _0x2000045
                 _0x2000044:
00085e c007      	RJMP _0x2000043
                 _0x2000045:
00085f e0aa      	LDI  R26,LOW(10)
000860 9f5a      	MUL  R21,R26
000861 2d50      	MOV  R21,R0
000862 2fe2      	MOV  R30,R18
000863 53e0      	SUBI R30,LOW(48)
000864 0f5e      	ADD  R21,R30
000865 c1b2      	RJMP _0x2000035
                 _0x2000043:
000866 e040      	LDI  R20,LOW(0)
000867 322e      	CPI  R18,46
000868 f411      	BRNE _0x2000046
000869 e014      	LDI  R17,LOW(4)
00086a c1ad      	RJMP _0x2000035
                 _0x2000046:
00086b c00f      	RJMP _0x2000047
                 _0x2000042:
00086c 30e4      	CPI  R30,LOW(0x4)
00086d f499      	BRNE _0x2000049
00086e 3320      	CPI  R18,48
00086f f010      	BRLO _0x200004B
000870 332a      	CPI  R18,58
000871 f008      	BRLO _0x200004C
                 _0x200004B:
000872 c008      	RJMP _0x200004A
                 _0x200004C:
000873 6200      	ORI  R16,LOW(32)
000874 e0aa      	LDI  R26,LOW(10)
000875 9f4a      	MUL  R20,R26
000876 2d40      	MOV  R20,R0
000877 2fe2      	MOV  R30,R18
000878 53e0      	SUBI R30,LOW(48)
000879 0f4e      	ADD  R20,R30
00087a c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
00087b 362c      	CPI  R18,108
00087c f419      	BRNE _0x200004D
00087d 6002      	ORI  R16,LOW(2)
00087e e015      	LDI  R17,LOW(5)
00087f c198      	RJMP _0x2000035
                 _0x200004D:
000880 c004      	RJMP _0x200004E
                 _0x2000049:
000881 30e5      	CPI  R30,LOW(0x5)
000882 f011      	BREQ PC+3
000883 940c 0a18 	JMP _0x2000035
                 _0x200004E:
000885 2fe2      	MOV  R30,R18
000886 36e3      	CPI  R30,LOW(0x63)
000887 f459      	BRNE _0x2000053
000888 940e 0f63 	CALL SUBOPT_0x34
00088a 940e 0f6a 	CALL SUBOPT_0x35
00088c 940e 0f63 	CALL SUBOPT_0x34
00088e 81a4      	LDD  R26,Z+4
00088f 93aa      	ST   -Y,R26
000890 940e 0f71 	CALL SUBOPT_0x36
000892 c184      	RJMP _0x2000054
                 _0x2000053:
000893 34e5      	CPI  R30,LOW(0x45)
000894 f011      	BREQ _0x2000057
000895 36e5      	CPI  R30,LOW(0x65)
000896 f409      	BRNE _0x2000058
                 _0x2000057:
000897 c004      	RJMP _0x2000059
                 _0x2000058:
000898 36e6      	CPI  R30,LOW(0x66)
000899 f011      	BREQ PC+3
00089a 940c 08e6 	JMP _0x200005A
                 _0x2000059:
00089c 01fe      	MOVW R30,R28
00089d 9676      	ADIW R30,22
00089e 87ee      	STD  Y+14,R30
00089f 87ff      	STD  Y+14+1,R31
0008a0 940e 0f79 	CALL SUBOPT_0x37
0008a2 940e 129f 	CALL __GETD1P
0008a4 940e 0f80 	CALL SUBOPT_0x38
0008a6 940e 0f85 	CALL SUBOPT_0x39
0008a8 85ad      	LDD  R26,Y+13
0008a9 23aa      	TST  R26
0008aa f022      	BRMI _0x200005B
0008ab 89ad      	LDD  R26,Y+21
0008ac 32ab      	CPI  R26,LOW(0x2B)
0008ad f049      	BREQ _0x200005D
0008ae c017      	RJMP _0x200005E
                 _0x200005B:
0008af 940e 0f87 	CALL SUBOPT_0x3A
0008b1 940e 1036 	CALL __ANEGF1
0008b3 940e 0f80 	CALL SUBOPT_0x38
0008b5 e2ed      	LDI  R30,LOW(45)
0008b6 8bed      	STD  Y+21,R30
                 _0x200005D:
0008b7 ff07      	SBRS R16,7
0008b8 c005      	RJMP _0x200005F
0008b9 89ed      	LDD  R30,Y+21
0008ba 93ea      	ST   -Y,R30
0008bb 940e 0f71 	CALL SUBOPT_0x36
0008bd c008      	RJMP _0x2000060
                 _0x200005F:
0008be 85ee      	LDD  R30,Y+14
0008bf 85ff      	LDD  R31,Y+14+1
0008c0 9631      	ADIW R30,1
0008c1 87ee      	STD  Y+14,R30
0008c2 87ff      	STD  Y+14+1,R31
0008c3 9731      	SBIW R30,1
0008c4 89ad      	LDD  R26,Y+21
0008c5 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0008c6 ff05      	SBRS R16,5
0008c7 e046      	LDI  R20,LOW(6)
0008c8 3626      	CPI  R18,102
0008c9 f461      	BRNE _0x2000062
0008ca 940e 0f87 	CALL SUBOPT_0x3A
0008cc 940e 12c3 	CALL __PUTPARD1
0008ce 934a      	ST   -Y,R20
0008cf 89eb      	LDD  R30,Y+19
0008d0 89fc      	LDD  R31,Y+19+1
0008d1 93fa      	ST   -Y,R31
0008d2 93ea      	ST   -Y,R30
0008d3 940e 0d04 	CALL _ftoa
0008d5 c00b      	RJMP _0x2000063
                 _0x2000062:
0008d6 940e 0f87 	CALL SUBOPT_0x3A
0008d8 940e 12c3 	CALL __PUTPARD1
0008da 934a      	ST   -Y,R20
0008db 932a      	ST   -Y,R18
0008dc 89ec      	LDD  R30,Y+20
0008dd 89fd      	LDD  R31,Y+20+1
0008de 93fa      	ST   -Y,R31
0008df 93ea      	ST   -Y,R30
0008e0 de55      	RCALL __ftoe_G100
                 _0x2000063:
0008e1 01fe      	MOVW R30,R28
0008e2 9676      	ADIW R30,22
0008e3 940e 0f8c 	CALL SUBOPT_0x3B
0008e5 c01e      	RJMP _0x2000064
                 _0x200005A:
0008e6 37e3      	CPI  R30,LOW(0x73)
0008e7 f439      	BRNE _0x2000066
0008e8 940e 0f85 	CALL SUBOPT_0x39
0008ea 940e 0f94 	CALL SUBOPT_0x3C
0008ec 940e 0f8c 	CALL SUBOPT_0x3B
0008ee c00e      	RJMP _0x2000067
                 _0x2000066:
0008ef 37e0      	CPI  R30,LOW(0x70)
0008f0 f4c1      	BRNE _0x2000069
0008f1 940e 0f85 	CALL SUBOPT_0x39
0008f3 940e 0f94 	CALL SUBOPT_0x3C
0008f5 87ee      	STD  Y+14,R30
0008f6 87ff      	STD  Y+14+1,R31
0008f7 93fa      	ST   -Y,R31
0008f8 93ea      	ST   -Y,R30
0008f9 940e 0cf9 	CALL _strlenf
0008fb 2f1e      	MOV  R17,R30
0008fc 6008      	ORI  R16,LOW(8)
                 _0x2000067:
0008fd 770f      	ANDI R16,LOW(127)
0008fe 3040      	CPI  R20,0
0008ff f011      	BREQ _0x200006B
000900 1741      	CP   R20,R17
000901 f008      	BRLO _0x200006C
                 _0x200006B:
000902 c001      	RJMP _0x200006A
                 _0x200006C:
000903 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000904 e040      	LDI  R20,LOW(0)
000905 e0e0      	LDI  R30,LOW(0)
000906 8bec      	STD  Y+20,R30
000907 e030      	LDI  R19,LOW(0)
000908 c06e      	RJMP _0x200006D
                 _0x2000069:
000909 36e4      	CPI  R30,LOW(0x64)
00090a f011      	BREQ _0x2000070
00090b 36e9      	CPI  R30,LOW(0x69)
00090c f411      	BRNE _0x2000071
                 _0x2000070:
00090d 6004      	ORI  R16,LOW(4)
00090e c002      	RJMP _0x2000072
                 _0x2000071:
00090f 37e5      	CPI  R30,LOW(0x75)
000910 f4a1      	BRNE _0x2000073
                 _0x2000072:
000911 e0ea      	LDI  R30,LOW(10)
000912 8bec      	STD  Y+20,R30
000913 ff01      	SBRS R16,1
000914 c008      	RJMP _0x2000074
                +
000915 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000916 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000917 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000918 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000919 940e 0f99 	CALL SUBOPT_0x3D
00091b e01a      	LDI  R17,LOW(10)
00091c c023      	RJMP _0x2000075
                 _0x2000074:
                +
00091d e1e0     +LDI R30 , LOW ( 0x2710 )
00091e e2f7     +LDI R31 , HIGH ( 0x2710 )
00091f e060     +LDI R22 , BYTE3 ( 0x2710 )
000920 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000921 940e 0f99 	CALL SUBOPT_0x3D
000923 e015      	LDI  R17,LOW(5)
000924 c01b      	RJMP _0x2000075
                 _0x2000073:
000925 35e8      	CPI  R30,LOW(0x58)
000926 f411      	BRNE _0x2000077
000927 6008      	ORI  R16,LOW(8)
000928 c004      	RJMP _0x2000078
                 _0x2000077:
000929 37e8      	CPI  R30,LOW(0x78)
00092a f011      	BREQ PC+3
00092b 940c 0a17 	JMP _0x20000B6
                 _0x2000078:
00092d e1e0      	LDI  R30,LOW(16)
00092e 8bec      	STD  Y+20,R30
00092f ff01      	SBRS R16,1
000930 c008      	RJMP _0x200007A
                +
000931 e0e0     +LDI R30 , LOW ( 0x10000000 )
000932 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000933 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000934 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000935 940e 0f99 	CALL SUBOPT_0x3D
000937 e018      	LDI  R17,LOW(8)
000938 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000939 e0e0     +LDI R30 , LOW ( 0x1000 )
00093a e1f0     +LDI R31 , HIGH ( 0x1000 )
00093b e060     +LDI R22 , BYTE3 ( 0x1000 )
00093c e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00093d 940e 0f99 	CALL SUBOPT_0x3D
00093f e014      	LDI  R17,LOW(4)
                 _0x2000075:
000940 3040      	CPI  R20,0
000941 f011      	BREQ _0x200007B
000942 770f      	ANDI R16,LOW(127)
000943 c001      	RJMP _0x200007C
                 _0x200007B:
000944 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000945 ff01      	SBRS R16,1
000946 c008      	RJMP _0x200007D
000947 940e 0f85 	CALL SUBOPT_0x39
000949 940e 0f79 	CALL SUBOPT_0x37
00094b 9614      	ADIW R26,4
00094c 940e 129f 	CALL __GETD1P
00094e c00f      	RJMP _0x2000113
                 _0x200007D:
00094f ff02      	SBRS R16,2
000950 c007      	RJMP _0x200007F
000951 940e 0f85 	CALL SUBOPT_0x39
000953 940e 0f94 	CALL SUBOPT_0x3C
000955 940e 11ff 	CALL __CWD1
000957 c006      	RJMP _0x2000113
                 _0x200007F:
000958 940e 0f85 	CALL SUBOPT_0x39
00095a 940e 0f94 	CALL SUBOPT_0x3C
00095c 2766      	CLR  R22
00095d 2777      	CLR  R23
                 _0x2000113:
                +
00095e 87ea     +STD Y + 10 , R30
00095f 87fb     +STD Y + 10 + 1 , R31
000960 876c     +STD Y + 10 + 2 , R22
000961 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000962 ff02      	SBRS R16,2
000963 c012      	RJMP _0x2000081
000964 85ad      	LDD  R26,Y+13
000965 23aa      	TST  R26
000966 f442      	BRPL _0x2000082
000967 940e 0f87 	CALL SUBOPT_0x3A
000969 940e 11ec 	CALL __ANEGD1
00096b 940e 0f80 	CALL SUBOPT_0x38
00096d e2ed      	LDI  R30,LOW(45)
00096e 8bed      	STD  Y+21,R30
                 _0x2000082:
00096f 89ed      	LDD  R30,Y+21
000970 30e0      	CPI  R30,0
000971 f019      	BREQ _0x2000083
000972 5f1f      	SUBI R17,-LOW(1)
000973 5f4f      	SUBI R20,-LOW(1)
000974 c001      	RJMP _0x2000084
                 _0x2000083:
000975 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000976 2f34      	MOV  R19,R20
                 _0x200006D:
000977 fd00      	SBRC R16,0
000978 c014      	RJMP _0x2000085
                 _0x2000086:
000979 1715      	CP   R17,R21
00097a f410      	BRSH _0x2000089
00097b 1735      	CP   R19,R21
00097c f008      	BRLO _0x200008A
                 _0x2000089:
00097d c00f      	RJMP _0x2000088
                 _0x200008A:
00097e ff07      	SBRS R16,7
00097f c008      	RJMP _0x200008B
000980 ff02      	SBRS R16,2
000981 c004      	RJMP _0x200008C
000982 7f0b      	ANDI R16,LOW(251)
000983 892d      	LDD  R18,Y+21
000984 5011      	SUBI R17,LOW(1)
000985 c001      	RJMP _0x200008D
                 _0x200008C:
000986 e320      	LDI  R18,LOW(48)
                 _0x200008D:
000987 c001      	RJMP _0x200008E
                 _0x200008B:
000988 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000989 940e 0f5a 	CALL SUBOPT_0x33
00098b 5051      	SUBI R21,LOW(1)
00098c cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
00098d 1714      	CP   R17,R20
00098e f490      	BRSH _0x2000091
00098f 6100      	ORI  R16,LOW(16)
000990 ff02      	SBRS R16,2
000991 c006      	RJMP _0x2000092
000992 940e 0f9e 	CALL SUBOPT_0x3E
000994 f009      	BREQ _0x2000093
000995 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000996 5011      	SUBI R17,LOW(1)
000997 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000998 e3e0      	LDI  R30,LOW(48)
000999 93ea      	ST   -Y,R30
00099a 940e 0f71 	CALL SUBOPT_0x36
00099c 3050      	CPI  R21,0
00099d f009      	BREQ _0x2000094
00099e 5051      	SUBI R21,LOW(1)
                 _0x2000094:
00099f 5041      	SUBI R20,LOW(1)
0009a0 cfec      	RJMP _0x200008F
                 _0x2000091:
0009a1 2f31      	MOV  R19,R17
0009a2 89ec      	LDD  R30,Y+20
0009a3 30e0      	CPI  R30,0
0009a4 f4b9      	BRNE _0x2000095
                 _0x2000096:
0009a5 3030      	CPI  R19,0
0009a6 f0a1      	BREQ _0x2000098
0009a7 ff03      	SBRS R16,3
0009a8 c006      	RJMP _0x2000099
0009a9 85ee      	LDD  R30,Y+14
0009aa 85ff      	LDD  R31,Y+14+1
0009ab 9125      	LPM  R18,Z+
0009ac 87ee      	STD  Y+14,R30
0009ad 87ff      	STD  Y+14+1,R31
0009ae c005      	RJMP _0x200009A
                 _0x2000099:
0009af 85ae      	LDD  R26,Y+14
0009b0 85bf      	LDD  R27,Y+14+1
0009b1 912d      	LD   R18,X+
0009b2 87ae      	STD  Y+14,R26
0009b3 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0009b4 940e 0f5a 	CALL SUBOPT_0x33
0009b6 3050      	CPI  R21,0
0009b7 f009      	BREQ _0x200009B
0009b8 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0009b9 5031      	SUBI R19,LOW(1)
0009ba cfea      	RJMP _0x2000096
                 _0x2000098:
0009bb c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0009bc 940e 0fb2 	CALL SUBOPT_0x3F
0009be 940e 1247 	CALL __DIVD21U
0009c0 2f2e      	MOV  R18,R30
0009c1 302a      	CPI  R18,10
0009c2 f030      	BRLO _0x20000A0
0009c3 ff03      	SBRS R16,3
0009c4 c002      	RJMP _0x20000A1
0009c5 5c29      	SUBI R18,-LOW(55)
0009c6 c001      	RJMP _0x20000A2
                 _0x20000A1:
0009c7 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0009c8 c001      	RJMP _0x20000A3
                 _0x20000A0:
0009c9 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0009ca fd04      	SBRC R16,4
0009cb c021      	RJMP _0x20000A5
0009cc 3321      	CPI  R18,49
0009cd f460      	BRSH _0x20000A7
                +
0009ce 89a8     +LDD R26 , Y + 16
0009cf 89b9     +LDD R27 , Y + 16 + 1
0009d0 898a     +LDD R24 , Y + 16 + 2
0009d1 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0009d2 30a1     +CPI R26 , LOW ( 0x1 )
0009d3 e0e0     +LDI R30 , HIGH ( 0x1 )
0009d4 07be     +CPC R27 , R30
0009d5 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0009d6 078e     +CPC R24 , R30
0009d7 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0009d8 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0009d9 f409      	BRNE _0x20000A6
                 _0x20000A7:
0009da c00b      	RJMP _0x20000A9
                 _0x20000A6:
0009db 1743      	CP   R20,R19
0009dc f440      	BRSH _0x2000114
0009dd 1753      	CP   R21,R19
0009de f010      	BRLO _0x20000AC
0009df ff00      	SBRS R16,0
0009e0 c001      	RJMP _0x20000AD
                 _0x20000AC:
0009e1 c010      	RJMP _0x20000AB
                 _0x20000AD:
0009e2 e220      	LDI  R18,LOW(32)
0009e3 ff07      	SBRS R16,7
0009e4 c008      	RJMP _0x20000AE
                 _0x2000114:
0009e5 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
0009e6 6100      	ORI  R16,LOW(16)
0009e7 ff02      	SBRS R16,2
0009e8 c004      	RJMP _0x20000AF
0009e9 940e 0f9e 	CALL SUBOPT_0x3E
0009eb f009      	BREQ _0x20000B0
0009ec 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
0009ed 940e 0f5a 	CALL SUBOPT_0x33
0009ef 3050      	CPI  R21,0
0009f0 f009      	BREQ _0x20000B1
0009f1 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
0009f2 5031      	SUBI R19,LOW(1)
0009f3 940e 0fb2 	CALL SUBOPT_0x3F
0009f5 940e 1278 	CALL __MODD21U
0009f7 940e 0f80 	CALL SUBOPT_0x38
0009f9 89ec      	LDD  R30,Y+20
                +
0009fa 89a8     +LDD R26 , Y + 16
0009fb 89b9     +LDD R27 , Y + 16 + 1
0009fc 898a     +LDD R24 , Y + 16 + 2
0009fd 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0009fe 27ff      	CLR  R31
0009ff 2766      	CLR  R22
000a00 2777      	CLR  R23
000a01 940e 1247 	CALL __DIVD21U
000a03 940e 0f99 	CALL SUBOPT_0x3D
                +
000a05 89e8     +LDD R30 , Y + 16
000a06 89f9     +LDD R31 , Y + 16 + 1
000a07 896a     +LDD R22 , Y + 16 + 2
000a08 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000a09 940e 12da 	CALL __CPD10
000a0b f009      	BREQ _0x200009F
000a0c cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000a0d ff00      	SBRS R16,0
000a0e c008      	RJMP _0x20000B2
                 _0x20000B3:
000a0f 3050      	CPI  R21,0
000a10 f031      	BREQ _0x20000B5
000a11 5051      	SUBI R21,LOW(1)
000a12 e2e0      	LDI  R30,LOW(32)
000a13 93ea      	ST   -Y,R30
000a14 940e 0f71 	CALL SUBOPT_0x36
000a16 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x2000112:
000a17 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000a18 ce06      	RJMP _0x2000030
                 _0x2000032:
000a19 81ae      	LDD  R26,Y+6
000a1a 81bf      	LDD  R27,Y+6+1
000a1b 940e 129b 	CALL __GETW1P
000a1d 940e 12e9 	CALL __LOADLOCR6
000a1f 96ef      	ADIW R28,63
000a20 966f      	ADIW R28,31
000a21 9508      	RET
                 _sprintf:
000a22 92ff      	PUSH R15
000a23 2ef8      	MOV  R15,R24
000a24 9726      	SBIW R28,6
000a25 940e 12e4 	CALL __SAVELOCR4
000a27 940e 0fbb 	CALL SUBOPT_0x40
000a29 9730      	SBIW R30,0
000a2a f419      	BRNE _0x20000B7
000a2b efef      	LDI  R30,LOW(65535)
000a2c efff      	LDI  R31,HIGH(65535)
000a2d c023      	RJMP _0x20A0008
                 _0x20000B7:
000a2e 01de      	MOVW R26,R28
000a2f 9616      	ADIW R26,6
000a30 940e 11df 	CALL __ADDW2R15
000a32 018d      	MOVW R16,R26
000a33 940e 0fbb 	CALL SUBOPT_0x40
000a35 83ee      	STD  Y+6,R30
000a36 83ff      	STD  Y+6+1,R31
000a37 e0e0      	LDI  R30,LOW(0)
000a38 87e8      	STD  Y+8,R30
000a39 87e9      	STD  Y+8+1,R30
000a3a 01de      	MOVW R26,R28
000a3b 961a      	ADIW R26,10
000a3c 940e 0fc2 	CALL SUBOPT_0x41
000a3e 93fa      	ST   -Y,R31
000a3f 93ea      	ST   -Y,R30
000a40 931a      	ST   -Y,R17
000a41 930a      	ST   -Y,R16
000a42 efef      	LDI  R30,LOW(_put_buff_G100)
000a43 e0f6      	LDI  R31,HIGH(_put_buff_G100)
000a44 93fa      	ST   -Y,R31
000a45 93ea      	ST   -Y,R30
000a46 01fe      	MOVW R30,R28
000a47 963a      	ADIW R30,10
000a48 93fa      	ST   -Y,R31
000a49 93ea      	ST   -Y,R30
000a4a ddbb      	RCALL __print_G100
000a4b 019f      	MOVW R18,R30
000a4c 81ae      	LDD  R26,Y+6
000a4d 81bf      	LDD  R27,Y+6+1
000a4e e0e0      	LDI  R30,LOW(0)
000a4f 93ec      	ST   X,R30
000a50 01f9      	MOVW R30,R18
                 _0x20A0008:
000a51 940e 12eb 	CALL __LOADLOCR4
000a53 962a      	ADIW R28,10
000a54 90ff      	POP  R15
000a55 9508      	RET
                 _get_buff_G100:
000a56 931a      	ST   -Y,R17
000a57 81a9      	LDD  R26,Y+1
000a58 81ba      	LDD  R27,Y+1+1
000a59 e0e0      	LDI  R30,LOW(0)
000a5a 93ec      	ST   X,R30
000a5b 81ab      	LDD  R26,Y+3
000a5c 81bc      	LDD  R27,Y+3+1
000a5d 91ec      	LD   R30,X
000a5e 2f1e      	MOV  R17,R30
000a5f 30e0      	CPI  R30,0
000a60 f019      	BREQ _0x20000BF
000a61 e0e0      	LDI  R30,LOW(0)
000a62 93ec      	ST   X,R30
000a63 c016      	RJMP _0x20000C0
                 _0x20000BF:
000a64 81a9      	LDD  R26,Y+1
000a65 81ba      	LDD  R27,Y+1+1
000a66 9611      	ADIW R26,1
000a67 940e 129b 	CALL __GETW1P
000a69 9730      	SBIW R30,0
000a6a f071      	BREQ _0x20000C1
000a6b 81e9      	LDD  R30,Y+1
000a6c 81fa      	LDD  R31,Y+1+1
000a6d 81a1      	LDD  R26,Z+1
000a6e 81b2      	LDD  R27,Z+2
000a6f 91ec      	LD   R30,X
000a70 2f1e      	MOV  R17,R30
000a71 30e0      	CPI  R30,0
000a72 f029      	BREQ _0x20000C2
000a73 81a9      	LDD  R26,Y+1
000a74 81ba      	LDD  R27,Y+1+1
000a75 9611      	ADIW R26,1
000a76 940e 0e68 	CALL SUBOPT_0x12
                 _0x20000C2:
000a78 c001      	RJMP _0x20000C3
                 _0x20000C1:
000a79 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000a7a 2fe1      	MOV  R30,R17
000a7b 8118      	LDD  R17,Y+0
                 _0x20A0007:
000a7c 9625      	ADIW R28,5
000a7d 9508      	RET
                 __scanf_G100:
000a7e 9728      	SBIW R28,8
000a7f 940e 12e2 	CALL __SAVELOCR6
000a81 e0e0      	LDI  R30,LOW(0)
000a82 e0f0      	LDI  R31,HIGH(0)
000a83 87ea      	STD  Y+10,R30
000a84 87fb      	STD  Y+10+1,R31
000a85 87ed      	STD  Y+13,R30
                 _0x20000C4:
000a86 89ec      	LDD  R30,Y+20
000a87 89fd      	LDD  R31,Y+20+1
000a88 9631      	ADIW R30,1
000a89 8bec      	STD  Y+20,R30
000a8a 8bfd      	STD  Y+20+1,R31
000a8b 9731      	SBIW R30,1
000a8c 91e4      	LPM  R30,Z
000a8d 2f3e      	MOV  R19,R30
000a8e 30e0      	CPI  R30,0
000a8f f411      	BRNE PC+3
000a90 940c 0bb2 	JMP _0x20000C6
000a92 940e 0fc7 	CALL SUBOPT_0x42
000a94 f091      	BREQ _0x20000C7
                 _0x20000C8:
000a95 940e 0fcc 	CALL SUBOPT_0x43
000a97 2f3e      	MOV  R19,R30
000a98 30e0      	CPI  R30,0
000a99 f019      	BREQ _0x20000CB
000a9a 940e 0fc7 	CALL SUBOPT_0x42
000a9c f409      	BRNE _0x20000CC
                 _0x20000CB:
000a9d c007      	RJMP _0x20000CA
                 _0x20000CC:
000a9e 940e 0fd8 	CALL SUBOPT_0x44
000aa0 f41c      	BRGE _0x20000CD
000aa1 efef      	LDI  R30,LOW(65535)
000aa2 efff      	LDI  R31,HIGH(65535)
000aa3 c110      	RJMP _0x20A0005
                 _0x20000CD:
000aa4 cff0      	RJMP _0x20000C8
                 _0x20000CA:
                +
000aa5 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000aa6 c10a      	RJMP _0x20000CE
                 _0x20000C7:
000aa7 3235      	CPI  R19,37
000aa8 f011      	BREQ PC+3
000aa9 940c 0b9f 	JMP _0x20000CF
000aab e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000aac 89ec      	LDD  R30,Y+20
000aad 89fd      	LDD  R31,Y+20+1
000aae 9135      	LPM  R19,Z+
000aaf 8bec      	STD  Y+20,R30
000ab0 8bfd      	STD  Y+20+1,R31
000ab1 3330      	CPI  R19,48
000ab2 f010      	BRLO _0x20000D4
000ab3 333a      	CPI  R19,58
000ab4 f008      	BRLO _0x20000D3
                 _0x20000D4:
000ab5 c007      	RJMP _0x20000D2
                 _0x20000D3:
000ab6 e0aa      	LDI  R26,LOW(10)
000ab7 9f5a      	MUL  R21,R26
000ab8 2d50      	MOV  R21,R0
000ab9 2fe3      	MOV  R30,R19
000aba 53e0      	SUBI R30,LOW(48)
000abb 0f5e      	ADD  R21,R30
000abc cfef      	RJMP _0x20000D0
                 _0x20000D2:
000abd 3030      	CPI  R19,0
000abe f409      	BRNE _0x20000D6
000abf c0f2      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000ac0 940e 0fcc 	CALL SUBOPT_0x43
000ac2 2f2e      	MOV  R18,R30
000ac3 93ea      	ST   -Y,R30
000ac4 940e 0ccc 	CALL _isspace
000ac6 30e0      	CPI  R30,0
000ac7 f039      	BREQ _0x20000D9
000ac8 940e 0fd8 	CALL SUBOPT_0x44
000aca f41c      	BRGE _0x20000DA
000acb efef      	LDI  R30,LOW(65535)
000acc efff      	LDI  R31,HIGH(65535)
000acd c0e6      	RJMP _0x20A0005
                 _0x20000DA:
000ace cff1      	RJMP _0x20000D7
                 _0x20000D9:
000acf 3020      	CPI  R18,0
000ad0 f409      	BRNE _0x20000DB
000ad1 c0d7      	RJMP _0x20000DC
                 _0x20000DB:
                +
000ad2 872d     +STD Y + 13 , R18
                 	__PUTBSR 18,13
000ad3 3050      	CPI  R21,0
000ad4 f409      	BRNE _0x20000DD
000ad5 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000ad6 e040      	LDI  R20,LOW(0)
000ad7 2fe3      	MOV  R30,R19
000ad8 36e3      	CPI  R30,LOW(0x63)
000ad9 f469      	BRNE _0x20000E1
000ada 940e 0fdd 	CALL SUBOPT_0x45
000adc 940e 0fcc 	CALL SUBOPT_0x43
000ade 01d8      	MOVW R26,R16
000adf 93ec      	ST   X,R30
000ae0 940e 0fd8 	CALL SUBOPT_0x44
000ae2 f41c      	BRGE _0x20000E2
000ae3 efef      	LDI  R30,LOW(65535)
000ae4 efff      	LDI  R31,HIGH(65535)
000ae5 c0ce      	RJMP _0x20A0005
                 _0x20000E2:
000ae6 c0b2      	RJMP _0x20000E0
                 _0x20000E1:
000ae7 37e3      	CPI  R30,LOW(0x73)
000ae8 f511      	BRNE _0x20000E3
000ae9 940e 0fdd 	CALL SUBOPT_0x45
                 _0x20000E4:
000aeb 2fe5      	MOV  R30,R21
000aec 5051      	SUBI R21,1
000aed 30e0      	CPI  R30,0
000aee f0c1      	BREQ _0x20000E6
000aef 940e 0fcc 	CALL SUBOPT_0x43
000af1 2f3e      	MOV  R19,R30
000af2 30e0      	CPI  R30,0
000af3 f019      	BREQ _0x20000E8
000af4 940e 0fc7 	CALL SUBOPT_0x42
000af6 f039      	BREQ _0x20000E7
                 _0x20000E8:
000af7 940e 0fd8 	CALL SUBOPT_0x44
000af9 f41c      	BRGE _0x20000EA
000afa efef      	LDI  R30,LOW(65535)
000afb efff      	LDI  R31,HIGH(65535)
000afc c0b7      	RJMP _0x20A0005
                 _0x20000EA:
000afd c009      	RJMP _0x20000E6
                 _0x20000E7:
000afe 931f      	PUSH R17
000aff 930f      	PUSH R16
                +
000b00 5f0f     +SUBI R16 , LOW ( - 1 )
000b01 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000b02 2fe3      	MOV  R30,R19
000b03 91af      	POP  R26
000b04 91bf      	POP  R27
000b05 93ec      	ST   X,R30
000b06 cfe4      	RJMP _0x20000E4
                 _0x20000E6:
000b07 01d8      	MOVW R26,R16
000b08 e0e0      	LDI  R30,LOW(0)
000b09 93ec      	ST   X,R30
000b0a c08e      	RJMP _0x20000E0
                 _0x20000E3:
000b0b 36ec      	CPI  R30,LOW(0x6C)
000b0c f431      	BRNE _0x20000EC
000b0d e041      	LDI  R20,LOW(1)
000b0e 89ec      	LDD  R30,Y+20
000b0f 89fd      	LDD  R31,Y+20+1
000b10 9135      	LPM  R19,Z+
000b11 8bec      	STD  Y+20,R30
000b12 8bfd      	STD  Y+20+1,R31
                 _0x20000EC:
000b13 e0e1      	LDI  R30,LOW(1)
000b14 87ec      	STD  Y+12,R30
000b15 2fe3      	MOV  R30,R19
000b16 36e4      	CPI  R30,LOW(0x64)
000b17 f011      	BREQ _0x20000F1
000b18 36e9      	CPI  R30,LOW(0x69)
000b19 f419      	BRNE _0x20000F2
                 _0x20000F1:
000b1a e0e0      	LDI  R30,LOW(0)
000b1b 87ec      	STD  Y+12,R30
000b1c c002      	RJMP _0x20000F3
                 _0x20000F2:
000b1d 37e5      	CPI  R30,LOW(0x75)
000b1e f411      	BRNE _0x20000F4
                 _0x20000F3:
000b1f e02a      	LDI  R18,LOW(10)
000b20 c008      	RJMP _0x20000EF
                 _0x20000F4:
000b21 37e8      	CPI  R30,LOW(0x78)
000b22 f411      	BRNE _0x20000F5
000b23 e120      	LDI  R18,LOW(16)
000b24 c004      	RJMP _0x20000EF
                 _0x20000F5:
000b25 32e5      	CPI  R30,LOW(0x25)
000b26 f409      	BRNE _0x20000F8
000b27 c077      	RJMP _0x20000F7
                 _0x20000F8:
000b28 c089      	RJMP _0x20A0006
                 _0x20000EF:
000b29 e0e0      	LDI  R30,LOW(0)
                +
000b2a 83ee     +STD Y + 6 , R30
000b2b 83ef     +STD Y + 6 + 1 , R30
000b2c 87e8     +STD Y + 6 + 2 , R30
000b2d 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
                 _0x20000F9:
000b2e 2fe5      	MOV  R30,R21
000b2f 5051      	SUBI R21,1
000b30 30e0      	CPI  R30,0
000b31 f411      	BRNE PC+3
000b32 940c 0b79 	JMP _0x20000FB
000b34 940e 0fcc 	CALL SUBOPT_0x43
000b36 2f3e      	MOV  R19,R30
000b37 32e1      	CPI  R30,LOW(0x21)
000b38 f438      	BRSH _0x20000FC
000b39 940e 0fd8 	CALL SUBOPT_0x44
000b3b f41c      	BRGE _0x20000FD
000b3c efef      	LDI  R30,LOW(65535)
000b3d efff      	LDI  R31,HIGH(65535)
000b3e c075      	RJMP _0x20A0005
                 _0x20000FD:
000b3f c017      	RJMP _0x20000FE
                 _0x20000FC:
000b40 85ec      	LDD  R30,Y+12
000b41 30e0      	CPI  R30,0
000b42 f439      	BRNE _0x20000FF
000b43 323d      	CPI  R19,45
000b44 f419      	BRNE _0x2000100
000b45 efef      	LDI  R30,LOW(255)
000b46 87ec      	STD  Y+12,R30
000b47 cfe6      	RJMP _0x20000F9
                 _0x2000100:
000b48 e0e1      	LDI  R30,LOW(1)
000b49 87ec      	STD  Y+12,R30
                 _0x20000FF:
000b4a 3120      	CPI  R18,16
000b4b f431      	BRNE _0x2000102
000b4c 933a      	ST   -Y,R19
000b4d 940e 0cd6 	CALL _isxdigit
000b4f 30e0      	CPI  R30,0
000b50 f031      	BREQ _0x20000FE
000b51 c007      	RJMP _0x2000104
                 _0x2000102:
000b52 933a      	ST   -Y,R19
000b53 940e 0cc4 	CALL _isdigit
000b55 30e0      	CPI  R30,0
000b56 f411      	BRNE _0x2000105
                 _0x20000FE:
                +
000b57 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000b58 c020      	RJMP _0x20000FB
                 _0x2000105:
                 _0x2000104:
000b59 3631      	CPI  R19,97
000b5a f010      	BRLO _0x2000106
000b5b 5537      	SUBI R19,LOW(87)
000b5c c005      	RJMP _0x2000107
                 _0x2000106:
000b5d 3431      	CPI  R19,65
000b5e f010      	BRLO _0x2000108
000b5f 5337      	SUBI R19,LOW(55)
000b60 c001      	RJMP _0x2000109
                 _0x2000108:
000b61 5330      	SUBI R19,LOW(48)
                 _0x2000109:
                 _0x2000107:
000b62 2fe2      	MOV  R30,R18
                +
000b63 81ae     +LDD R26 , Y + 6
000b64 81bf     +LDD R27 , Y + 6 + 1
000b65 8588     +LDD R24 , Y + 6 + 2
000b66 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000b67 27ff      	CLR  R31
000b68 2766      	CLR  R22
000b69 2777      	CLR  R23
000b6a 940e 1209 	CALL __MULD12U
000b6c 01df      	MOVW R26,R30
000b6d 01cb      	MOVW R24,R22
000b6e 2fe3      	MOV  R30,R19
000b6f 27ff      	CLR  R31
000b70 2766      	CLR  R22
000b71 2777      	CLR  R23
000b72 940e 11e3 	CALL __ADDD12
                +
000b74 83ee     +STD Y + 6 , R30
000b75 83ff     +STD Y + 6 + 1 , R31
000b76 8768     +STD Y + 6 + 2 , R22
000b77 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000b78 cfb5      	RJMP _0x20000F9
                 _0x20000FB:
000b79 85ec      	LDD  R30,Y+12
                +
000b7a 81ae     +LDD R26 , Y + 6
000b7b 81bf     +LDD R27 , Y + 6 + 1
000b7c 8588     +LDD R24 , Y + 6 + 2
000b7d 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000b7e 940e 11f9 	CALL __CBD1
000b80 940e 1209 	CALL __MULD12U
                +
000b82 83ee     +STD Y + 6 , R30
000b83 83ff     +STD Y + 6 + 1 , R31
000b84 8768     +STD Y + 6 + 2 , R22
000b85 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000b86 3040      	CPI  R20,0
000b87 f051      	BREQ _0x200010A
000b88 940e 0fdd 	CALL SUBOPT_0x45
                +
000b8a 81ee     +LDD R30 , Y + 6
000b8b 81ff     +LDD R31 , Y + 6 + 1
000b8c 8568     +LDD R22 , Y + 6 + 2
000b8d 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000b8e 01d8      	MOVW R26,R16
000b8f 940e 12aa 	CALL __PUTDP1
000b91 c007      	RJMP _0x200010B
                 _0x200010A:
000b92 940e 0fdd 	CALL SUBOPT_0x45
000b94 81ee      	LDD  R30,Y+6
000b95 81ff      	LDD  R31,Y+6+1
000b96 01d8      	MOVW R26,R16
000b97 93ed      	ST   X+,R30
000b98 93fc      	ST   X,R31
                 _0x200010B:
                 _0x20000E0:
000b99 85ea      	LDD  R30,Y+10
000b9a 85fb      	LDD  R31,Y+10+1
000b9b 9631      	ADIW R30,1
000b9c 87ea      	STD  Y+10,R30
000b9d 87fb      	STD  Y+10+1,R31
000b9e c012      	RJMP _0x200010C
                 _0x20000CF:
                 _0x20000F7:
000b9f 940e 0fcc 	CALL SUBOPT_0x43
000ba1 17e3      	CP   R30,R19
000ba2 f071      	BREQ _0x200010D
000ba3 940e 0fd8 	CALL SUBOPT_0x44
000ba5 f41c      	BRGE _0x200010E
000ba6 efef      	LDI  R30,LOW(65535)
000ba7 efff      	LDI  R31,HIGH(65535)
000ba8 c00b      	RJMP _0x20A0005
                 _0x200010E:
                 _0x20000DC:
000ba9 85ea      	LDD  R30,Y+10
000baa 85fb      	LDD  R31,Y+10+1
000bab 9730      	SBIW R30,0
000bac f419      	BRNE _0x200010F
000bad efef      	LDI  R30,LOW(65535)
000bae efff      	LDI  R31,HIGH(65535)
000baf c004      	RJMP _0x20A0005
                 _0x200010F:
000bb0 c001      	RJMP _0x20000C6
                 _0x200010D:
                 _0x200010C:
                 _0x20000CE:
000bb1 ced4      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000bb2 85ea      	LDD  R30,Y+10
000bb3 85fb      	LDD  R31,Y+10+1
                 _0x20A0005:
000bb4 940e 12e9 	CALL __LOADLOCR6
000bb6 9666      	ADIW R28,22
000bb7 9508      	RET
                 _sscanf:
000bb8 92ff      	PUSH R15
000bb9 2ef8      	MOV  R15,R24
000bba 9723      	SBIW R28,3
000bbb 931a      	ST   -Y,R17
000bbc 930a      	ST   -Y,R16
000bbd 01de      	MOVW R26,R28
000bbe 9617      	ADIW R26,7
000bbf 940e 0fc2 	CALL SUBOPT_0x41
000bc1 9730      	SBIW R30,0
000bc2 f419      	BRNE _0x2000110
000bc3 efef      	LDI  R30,LOW(65535)
000bc4 efff      	LDI  R31,HIGH(65535)
000bc5 c01c      	RJMP _0x20A0004
                 _0x2000110:
000bc6 01de      	MOVW R26,R28
000bc7 9611      	ADIW R26,1
000bc8 940e 11df 	CALL __ADDW2R15
000bca 018d      	MOVW R16,R26
000bcb 01de      	MOVW R26,R28
000bcc 9617      	ADIW R26,7
000bcd 940e 0fc2 	CALL SUBOPT_0x41
000bcf 83eb      	STD  Y+3,R30
000bd0 83fc      	STD  Y+3+1,R31
000bd1 01de      	MOVW R26,R28
000bd2 9615      	ADIW R26,5
000bd3 940e 0fc2 	CALL SUBOPT_0x41
000bd5 93fa      	ST   -Y,R31
000bd6 93ea      	ST   -Y,R30
000bd7 931a      	ST   -Y,R17
000bd8 930a      	ST   -Y,R16
000bd9 e5e6      	LDI  R30,LOW(_get_buff_G100)
000bda e0fa      	LDI  R31,HIGH(_get_buff_G100)
000bdb 93fa      	ST   -Y,R31
000bdc 93ea      	ST   -Y,R30
000bdd 01fe      	MOVW R30,R28
000bde 9638      	ADIW R30,8
000bdf 93fa      	ST   -Y,R31
000be0 93ea      	ST   -Y,R30
000be1 de9c      	RCALL __scanf_G100
                 _0x20A0004:
000be2 8119      	LDD  R17,Y+1
000be3 8108      	LDD  R16,Y+0
000be4 9625      	ADIW R28,5
000be5 90ff      	POP  R15
000be6 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000be7 817b         ldd  r23,y+3
000be8 816a         ldd  r22,y+2
000be9 81f9         ldd  r31,y+1
000bea 81e8         ld   r30,y
000beb fb77         bst  r23,7
000bec 0f77         lsl  r23
000bed fd67         sbrc r22,7
000bee 6071         sbr  r23,1
000bef 2f97         mov  r25,r23
000bf0 579e         subi r25,0x7e
000bf1 f081         breq __ftrunc0
000bf2 f078         brcs __ftrunc0
000bf3 3198         cpi  r25,24
000bf4 f490         brsh __ftrunc1
000bf5 27aa         clr  r26
000bf6 27bb         clr  r27
000bf7 2788         clr  r24
                 __ftrunc2:
000bf8 9408         sec
000bf9 9587         ror  r24
000bfa 95b7         ror  r27
000bfb 95a7         ror  r26
000bfc 959a         dec  r25
000bfd f7d1         brne __ftrunc2
000bfe 23ea         and  r30,r26
000bff 23fb         and  r31,r27
000c00 2368         and  r22,r24
000c01 c005         rjmp __ftrunc1
                 __ftrunc0:
000c02 94e8         clt
000c03 2777         clr  r23
000c04 27ee         clr  r30
000c05 27ff         clr  r31
000c06 2766         clr  r22
                 __ftrunc1:
000c07 776f         cbr  r22,0x80
000c08 9576         lsr  r23
000c09 f408         brcc __ftrunc3
000c0a 6860         sbr  r22,0x80
                 __ftrunc3:
000c0b f977         bld  r23,7
000c0c 91a9         ld   r26,y+
000c0d 91b9         ld   r27,y+
000c0e 9189         ld   r24,y+
000c0f 9199         ld   r25,y+
000c10 17ea         cp   r30,r26
000c11 07fb         cpc  r31,r27
000c12 0768         cpc  r22,r24
000c13 0779         cpc  r23,r25
000c14 fb97         bst  r25,7
000c15 9508         ret
                 _floor:
000c16 940e 0fe8 	CALL SUBOPT_0x46
000c18 940e 12c3 	CALL __PUTPARD1
000c1a 940e 0be7 	CALL _ftrunc
000c1c 940e 12be 	CALL __PUTD1S0
000c1e f419          brne __floor1
                 __floor0:
000c1f 940e 0fe8 	CALL SUBOPT_0x46
000c21 c0a0      	RJMP _0x20A0003
                 __floor1:
000c22 f7e6          brtc __floor0
000c23 940e 0fe8 	CALL SUBOPT_0x46
                +
000c25 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000c26 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000c27 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000c28 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000c29 940e 10d5 	CALL __SUBF12
000c2b c096      	RJMP _0x20A0003
                 _sin:
000c2c 9724      	SBIW R28,4
000c2d 931a      	ST   -Y,R17
000c2e e010      	LDI  R17,0
000c2f 940e 0feb 	CALL SUBOPT_0x47
                +
000c31 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000c32 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000c33 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000c34 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000c35 940e 112c 	CALL __MULF12
000c37 940e 0ff0 	CALL SUBOPT_0x48
000c39 940e 0ff5 	CALL SUBOPT_0x49
000c3b 940e 0f44 	CALL SUBOPT_0x2F
000c3d 940e 0feb 	CALL SUBOPT_0x47
000c3f 940e 0eba 	CALL SUBOPT_0x1D
000c41 940e 0ff0 	CALL SUBOPT_0x48
000c43 940e 0feb 	CALL SUBOPT_0x47
000c45 940e 0dfc 	CALL SUBOPT_0x7
000c47 940e 11bf 	CALL __CMPF12
000c49 f009      	BREQ PC+2
000c4a f410      	BRCC PC+3
000c4b 940c 0c58 	JMP  _0x2020017
000c4d 940e 0ff5 	CALL SUBOPT_0x49
                +
000c4f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c50 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c51 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c52 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c53 940e 10d5 	CALL __SUBF12
000c55 940e 0ff0 	CALL SUBOPT_0x48
000c57 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000c58 940e 0feb 	CALL SUBOPT_0x47
                +
000c5a e0e0     +LDI R30 , LOW ( 0x3E800000 )
000c5b e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000c5c e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000c5d e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000c5e 940e 11bf 	CALL __CMPF12
000c60 f009      	BREQ PC+2
000c61 f410      	BRCC PC+3
000c62 940c 0c6c 	JMP  _0x2020018
000c64 940e 0feb 	CALL SUBOPT_0x47
000c66 940e 0dfc 	CALL SUBOPT_0x7
000c68 940e 10d5 	CALL __SUBF12
000c6a 940e 0ff0 	CALL SUBOPT_0x48
                 _0x2020018:
000c6c 3010      	CPI  R17,0
000c6d f031      	BREQ _0x2020019
000c6e 940e 0ff5 	CALL SUBOPT_0x49
000c70 940e 1036 	CALL __ANEGF1
000c72 940e 0ff0 	CALL SUBOPT_0x48
                 _0x2020019:
000c74 940e 0ff5 	CALL SUBOPT_0x49
000c76 940e 0feb 	CALL SUBOPT_0x47
000c78 940e 112c 	CALL __MULF12
                +
000c7a 83e9     +STD Y + 1 , R30
000c7b 83fa     +STD Y + 1 + 1 , R31
000c7c 836b     +STD Y + 1 + 2 , R22
000c7d 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000c7e eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000c7f ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000c80 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000c81 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000c82 940e 112c 	CALL __MULF12
000c84 01df      	MOVW R26,R30
000c85 01cb      	MOVW R24,R22
                +
000c86 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000c87 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000c88 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000c89 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000c8a 940e 0eba 	CALL SUBOPT_0x1D
000c8c 940e 0ffa 	CALL SUBOPT_0x4A
                +
000c8e e4ac     +LDI R26 , LOW ( 0x4104534C )
000c8f e5b3     +LDI R27 , HIGH ( 0x4104534C )
000c90 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000c91 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000c92 940e 10dc 	CALL __ADDF12
000c94 940e 0feb 	CALL SUBOPT_0x47
000c96 940e 112c 	CALL __MULF12
000c98 937f      	PUSH R23
000c99 936f      	PUSH R22
000c9a 93ff      	PUSH R31
000c9b 93ef      	PUSH R30
                +
000c9c 81e9     +LDD R30 , Y + 1
000c9d 81fa     +LDD R31 , Y + 1 + 1
000c9e 816b     +LDD R22 , Y + 1 + 2
000c9f 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000ca0 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000ca1 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000ca2 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000ca3 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000ca4 940e 10dc 	CALL __ADDF12
000ca6 940e 0ffa 	CALL SUBOPT_0x4A
                +
000ca8 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000ca9 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000caa ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000cab e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000cac 940e 10dc 	CALL __ADDF12
000cae 91af      	POP  R26
000caf 91bf      	POP  R27
000cb0 918f      	POP  R24
000cb1 919f      	POP  R25
000cb2 940e 117a 	CALL __DIVF21
000cb4 8118      	LDD  R17,Y+0
000cb5 9629      	ADIW R28,9
000cb6 9508      	RET
                 _cos:
000cb7 940e 12b9 	CALL __GETD2S0
                +
000cb9 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000cba e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000cbb ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000cbc e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000cbd 940e 10d5 	CALL __SUBF12
000cbf 940e 12c3 	CALL __PUTPARD1
000cc1 df6a      	RCALL _sin
                 _0x20A0003:
000cc2 9624      	ADIW R28,4
000cc3 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000cc4 e0e1          ldi  r30,1
000cc5 91f9          ld   r31,y+
000cc6 33f0          cpi  r31,'0'
000cc7 f010          brlo isdigit0
000cc8 33fa          cpi  r31,'9'+1
000cc9 f008          brlo isdigit1
                 isdigit0:
000cca 27ee          clr  r30
                 isdigit1:
000ccb 9508          ret
                 _isspace:
000ccc e0e1          ldi  r30,1
000ccd 91f9          ld   r31,y+
000cce 32f0          cpi  r31,' '
000ccf f029          breq isspace1
000cd0 30f9          cpi  r31,9
000cd1 f010          brlo isspace0
000cd2 30fe          cpi  r31,13+1
000cd3 f008          brlo isspace1
                 isspace0:
000cd4 27ee          clr  r30
                 isspace1:
000cd5 9508          ret
                 _isxdigit:
000cd6 e0e1          ldi  r30,1
000cd7 91f9          ld   r31,y+
000cd8 53f0          subi r31,0x30
000cd9 f040          brcs isxdigit0
000cda 30fa          cpi  r31,10
000cdb f038          brcs isxdigit1
000cdc 75ff          andi r31,0x5f
000cdd 50f7          subi r31,7
000cde 30fa          cpi  r31,10
000cdf f010          brcs isxdigit0
000ce0 31f0          cpi  r31,16
000ce1 f008          brcs isxdigit1
                 isxdigit0:
000ce2 27ee          clr  r30
                 isxdigit1:
000ce3 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000ce4 91e9          ld   r30,y+
000ce5 91f9          ld   r31,y+
000ce6 91a9          ld   r26,y+
000ce7 91b9          ld   r27,y+
000ce8 01cd          movw r24,r26
                 strcpyf0:
000ce9 9005      	lpm  r0,z+
000cea 920d          st   x+,r0
000ceb 2000          tst  r0
000cec f7e1          brne strcpyf0
000ced 01fc          movw r30,r24
000cee 9508          ret
                 _strlen:
000cef 91a9          ld   r26,y+
000cf0 91b9          ld   r27,y+
000cf1 27ee          clr  r30
000cf2 27ff          clr  r31
                 strlen0:
000cf3 916d          ld   r22,x+
000cf4 2366          tst  r22
000cf5 f011          breq strlen1
000cf6 9631          adiw r30,1
000cf7 cffb          rjmp strlen0
                 strlen1:
000cf8 9508          ret
                 _strlenf:
000cf9 27aa          clr  r26
000cfa 27bb          clr  r27
000cfb 91e9          ld   r30,y+
000cfc 91f9          ld   r31,y+
                 strlenf0:
000cfd 9005      	lpm  r0,z+
000cfe 2000          tst  r0
000cff f011          breq strlenf1
000d00 9611          adiw r26,1
000d01 cffb          rjmp strlenf0
                 strlenf1:
000d02 01fd          movw r30,r26
000d03 9508          ret
                 
                 	.CSEG
                 _ftoa:
000d04 9724      	SBIW R28,4
000d05 d19a      	RCALL SUBOPT_0x18
000d06 e0e0      	LDI  R30,LOW(0)
000d07 83ea      	STD  Y+2,R30
000d08 e3ef      	LDI  R30,LOW(63)
000d09 83eb      	STD  Y+3,R30
000d0a 931a      	ST   -Y,R17
000d0b 930a      	ST   -Y,R16
000d0c 85eb      	LDD  R30,Y+11
000d0d 85fc      	LDD  R31,Y+11+1
000d0e 3fef      	CPI  R30,LOW(0xFFFF)
000d0f efaf      	LDI  R26,HIGH(0xFFFF)
000d10 07fa      	CPC  R31,R26
000d11 f429      	BRNE _0x208000D
000d12 d2ee      	RCALL SUBOPT_0x4B
                +
000d13 eaec     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000d14 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000d15 d1ec      	RCALL SUBOPT_0x26
000d16 c07f      	RJMP _0x20A0002
                 _0x208000D:
000d17 3fef      	CPI  R30,LOW(0x7FFF)
000d18 e7af      	LDI  R26,HIGH(0x7FFF)
000d19 07fa      	CPC  R31,R26
000d1a f429      	BRNE _0x208000C
000d1b d2e5      	RCALL SUBOPT_0x4B
                +
000d1c eaed     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000d1d e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000d1e d1e3      	RCALL SUBOPT_0x26
000d1f c076      	RJMP _0x20A0002
                 _0x208000C:
000d20 85ac      	LDD  R26,Y+12
000d21 23aa      	TST  R26
000d22 f452      	BRPL _0x208000F
                +
000d23 85e9     +LDD R30 , Y + 9
000d24 85fa     +LDD R31 , Y + 9 + 1
000d25 856b     +LDD R22 , Y + 9 + 2
000d26 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000d27 940e 1036 	CALL __ANEGF1
000d29 d2dc      	RCALL SUBOPT_0x4C
000d2a d2e0      	RCALL SUBOPT_0x4D
000d2b e2ed      	LDI  R30,LOW(45)
000d2c 93ec      	ST   X,R30
                 _0x208000F:
000d2d 85a8      	LDD  R26,Y+8
000d2e 30a7      	CPI  R26,LOW(0x7)
000d2f f010      	BRLO _0x2080010
000d30 e0e6      	LDI  R30,LOW(6)
000d31 87e8      	STD  Y+8,R30
                 _0x2080010:
000d32 8518      	LDD  R17,Y+8
                 _0x2080011:
000d33 2fe1      	MOV  R30,R17
000d34 5011      	SUBI R17,1
000d35 30e0      	CPI  R30,0
000d36 f021      	BREQ _0x2080013
000d37 d2da      	RCALL SUBOPT_0x4E
000d38 d204      	RCALL SUBOPT_0x2E
000d39 d2dd      	RCALL SUBOPT_0x4F
000d3a cff8      	RJMP _0x2080011
                 _0x2080013:
000d3b d2e0      	RCALL SUBOPT_0x50
000d3c 940e 10dc 	CALL __ADDF12
000d3e d2c7      	RCALL SUBOPT_0x4C
000d3f e010      	LDI  R17,LOW(0)
                +
000d40 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000d41 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000d42 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000d43 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000d44 d2d2      	RCALL SUBOPT_0x4F
                 _0x2080014:
000d45 d2d6      	RCALL SUBOPT_0x50
000d46 940e 11bf 	CALL __CMPF12
000d48 f060      	BRLO _0x2080016
000d49 d2c8      	RCALL SUBOPT_0x4E
000d4a d1df      	RCALL SUBOPT_0x2B
000d4b d2cb      	RCALL SUBOPT_0x4F
000d4c 5f1f      	SUBI R17,-LOW(1)
000d4d 3217      	CPI  R17,39
000d4e f028      	BRLO _0x2080017
000d4f d2b1      	RCALL SUBOPT_0x4B
                +
000d50 ebe1     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000d51 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000d52 d1af      	RCALL SUBOPT_0x26
000d53 c042      	RJMP _0x20A0002
                 _0x2080017:
000d54 cff0      	RJMP _0x2080014
                 _0x2080016:
000d55 3010      	CPI  R17,0
000d56 f421      	BRNE _0x2080018
000d57 d2b3      	RCALL SUBOPT_0x4D
000d58 e3e0      	LDI  R30,LOW(48)
000d59 93ec      	ST   X,R30
000d5a c01a      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000d5b 2fe1      	MOV  R30,R17
000d5c 5011      	SUBI R17,1
000d5d 30e0      	CPI  R30,0
000d5e f0b1      	BREQ _0x208001C
000d5f d2b2      	RCALL SUBOPT_0x4E
000d60 d1dc      	RCALL SUBOPT_0x2E
000d61 d1d4      	RCALL SUBOPT_0x2D
000d62 d1e1      	RCALL SUBOPT_0x2F
000d63 d2b3      	RCALL SUBOPT_0x4F
000d64 d2b7      	RCALL SUBOPT_0x50
000d65 940e 117a 	CALL __DIVF21
000d67 940e 1069 	CALL __CFD1U
000d69 2f0e      	MOV  R16,R30
000d6a d2a0      	RCALL SUBOPT_0x4D
000d6b d1e3      	RCALL SUBOPT_0x31
000d6c e0f0      	LDI  R31,0
000d6d d2a4      	RCALL SUBOPT_0x4E
000d6e d092      	RCALL SUBOPT_0x8
000d6f 940e 112c 	CALL __MULF12
000d71 d2b3      	RCALL SUBOPT_0x51
000d72 d147      	RCALL SUBOPT_0x1D
000d73 d292      	RCALL SUBOPT_0x4C
000d74 cfe6      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000d75 85e8      	LDD  R30,Y+8
000d76 30e0      	CPI  R30,0
000d77 f0d1      	BREQ _0x20A0001
000d78 d292      	RCALL SUBOPT_0x4D
000d79 e2ee      	LDI  R30,LOW(46)
000d7a 93ec      	ST   X,R30
                 _0x208001E:
000d7b 85e8      	LDD  R30,Y+8
000d7c 50e1      	SUBI R30,LOW(1)
000d7d 87e8      	STD  Y+8,R30
000d7e 5fef      	SUBI R30,-LOW(1)
000d7f f091      	BREQ _0x2080020
000d80 d2a4      	RCALL SUBOPT_0x51
000d81 d1a8      	RCALL SUBOPT_0x2B
000d82 d283      	RCALL SUBOPT_0x4C
                +
000d83 85e9     +LDD R30 , Y + 9
000d84 85fa     +LDD R31 , Y + 9 + 1
000d85 856b     +LDD R22 , Y + 9 + 2
000d86 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000d87 940e 1069 	CALL __CFD1U
000d89 2f0e      	MOV  R16,R30
000d8a d280      	RCALL SUBOPT_0x4D
000d8b d1c3      	RCALL SUBOPT_0x31
000d8c e0f0      	LDI  R31,0
000d8d d297      	RCALL SUBOPT_0x51
000d8e d072      	RCALL SUBOPT_0x8
000d8f d12a      	RCALL SUBOPT_0x1D
000d90 d275      	RCALL SUBOPT_0x4C
000d91 cfe9      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000d92 81ae      	LDD  R26,Y+6
000d93 81bf      	LDD  R27,Y+6+1
000d94 e0e0      	LDI  R30,LOW(0)
000d95 93ec      	ST   X,R30
                 _0x20A0002:
000d96 8119      	LDD  R17,Y+1
000d97 8108      	LDD  R16,Y+0
000d98 962d      	ADIW R28,13
000d99 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x4
                 _TIMER2_OVERFLOW:
000504           	.BYTE 0x1
                 _PACKET_BUFF:
000505           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000569           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
00056a           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056c           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
000580           	.BYTE 0x1
                 _CHECK_GETS:
000581           	.BYTE 0x1
                 _MOTORR_HALL:
000582           	.BYTE 0x4
                 _MOTORL_HALL:
000586           	.BYTE 0x4
                 __seed_G104:
00058a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000d9a 93fa      	ST   -Y,R31
000d9b 93ea      	ST   -Y,R30
000d9c 940c 102a 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000d9e e0e0      	LDI  R30,LOW(0)
000d9f 93e0 056a 	STS  _TIMER0_OVERFLOW,R30
000da1 93e0 056b 	STS  _TIMER0_OVERFLOW+1,R30
000da3 bfe2      	OUT  0x32,R30
000da4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x2:
                +
000da5 01fe     +MOVW R30 , R28
000da6 59e8     +SUBI R30 , LOW ( - 616 )
000da7 4ffd     +SBCI R31 , HIGH ( - 616 )
000da8 9001     +LD R0 , Z +
000da9 81f0     +LD R31 , Z
000daa 2de0     +MOV R30 , R0
                 	__GETW1SX 616
000dab 940e 11ff 	CALL __CWD1
000dad 940e 10a2 	CALL __CDF1
000daf 01df      	MOVW R26,R30
000db0 01cb      	MOVW R24,R22
                +
000db1 e0e0     +LDI R30 , LOW ( 0x42C80000 )
000db2 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000db3 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000db4 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000db5 940e 117a 	CALL __DIVF21
                +
000db7 01de     +MOVW R26 , R28
000db8 59a6     +SUBI R26 , LOW ( - 618 )
000db9 4fbd     +SBCI R27 , HIGH ( - 618 )
000dba 93ed     +ST X + , R30
000dbb 93fd     +ST X + , R31
000dbc 936d     +ST X + , R22
000dbd 937c     +ST X , R23
                 	__PUTD1SX 618
000dbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
                +
000dbf e0a0     +LDI R26 , LOW ( 0x3EC00000 )
000dc0 e0b0     +LDI R27 , HIGH ( 0x3EC00000 )
000dc1 ec80     +LDI R24 , BYTE3 ( 0x3EC00000 )
000dc2 e39e     +LDI R25 , BYTE4 ( 0x3EC00000 )
                 	__GETD2N 0x3EC00000
000dc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x4:
                +
000dc4 01fe     +MOVW R30 , R28
000dc5 59e6     +SUBI R30 , LOW ( - 618 )
000dc6 4ffd     +SBCI R31 , HIGH ( - 618 )
000dc7 9001     +LD R0 , Z +
000dc8 9011     +LD R1 , Z +
000dc9 9161     +LD R22 , Z +
000dca 8170     +LD R23 , Z
000dcb 01f0     +MOVW R30 , R0
                 	__GETD1SX 618
000dcc dff2      	RCALL SUBOPT_0x3
000dcd 940e 10dc 	CALL __ADDF12
000dcf 01df      	MOVW R26,R30
000dd0 01cb      	MOVW R24,R22
                +
000dd1 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000dd2 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000dd3 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000dd4 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000dd5 940e 117a 	CALL __DIVF21
000dd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x5:
                +
000dd8 01de     +MOVW R26 , R28
000dd9 59a2     +SUBI R26 , LOW ( - 622 )
000dda 4fbd     +SBCI R27 , HIGH ( - 622 )
000ddb 93ed     +ST X + , R30
000ddc 93fd     +ST X + , R31
000ddd 936d     +ST X + , R22
000dde 937c     +ST X , R23
                 	__PUTD1SX 622
                +
000ddf e0a0     +LDI R26 , LOW ( 0x3F400000 )
000de0 e0b0     +LDI R27 , HIGH ( 0x3F400000 )
000de1 e480     +LDI R24 , BYTE3 ( 0x3F400000 )
000de2 e39f     +LDI R25 , BYTE4 ( 0x3F400000 )
                 	__GETD2N 0x3F400000
000de3 940e 10d5 	CALL __SUBF12
000de5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x6:
                +
000de6 01de     +MOVW R26 , R28
000de7 59a2     +SUBI R26 , LOW ( - 622 )
000de8 4fbd     +SBCI R27 , HIGH ( - 622 )
000de9 900d     +LD R0 , X +
000dea 901d     +LD R1 , X +
000deb 918d     +LD R24 , X +
000dec 919c     +LD R25 , X
000ded 01d0     +MOVW R26 , R0
                 	__GETD2SX 622
                +
000dee e0e0     +LDI R30 , LOW ( 0x447A0000 )
000def e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000df0 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000df1 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000df2 940e 112c 	CALL __MULF12
000df4 940e 106b 	CALL __CFD1
                +
000df6 01de     +MOVW R26 , R28
000df7 58ae     +SUBI R26 , LOW ( - 626 )
000df8 4fbd     +SBCI R27 , HIGH ( - 626 )
000df9 93ed     +ST X + , R30
000dfa 93fc     +ST X , R31
                 	__PUTW1SX 626
000dfb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000dfc e0e0     +LDI R30 , LOW ( 0x3F000000 )
000dfd e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000dfe e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000dff e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000e00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000e01 940e 11ff 	CALL __CWD1
000e03 940e 10a2 	CALL __CDF1
000e05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
000e06 e0e0      	LDI  R30,LOW(0)
000e07 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000e09 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000e0b 93e0 0502 	STS  _TIMER1_OVERFLOW+2,R30
000e0d 93e0 0503 	STS  _TIMER1_OVERFLOW+3,R30
000e0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA:
000e10 940e 10a2 	CALL __CDF1
                +
000e12 ecad     +LDI R26 , LOW ( 0x3ECCCCCD )
000e13 ecbc     +LDI R27 , HIGH ( 0x3ECCCCCD )
000e14 ec8c     +LDI R24 , BYTE3 ( 0x3ECCCCCD )
000e15 e39e     +LDI R25 , BYTE4 ( 0x3ECCCCCD )
                 	__GETD2N 0x3ECCCCCD
000e16 940e 112c 	CALL __MULF12
000e18 01df      	MOVW R26,R30
000e19 01cb      	MOVW R24,R22
                +
000e1a e0e0     +LDI R30 , LOW ( 0x43200000 )
000e1b e0f0     +LDI R31 , HIGH ( 0x43200000 )
000e1c e260     +LDI R22 , BYTE3 ( 0x43200000 )
000e1d e473     +LDI R23 , BYTE4 ( 0x43200000 )
                 	__GETD1N 0x43200000
000e1e 940e 117a 	CALL __DIVF21
000e20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
                +
000e21 01de     +MOVW R26 , R28
000e22 5ea8     +SUBI R26 , LOW ( - 536 )
000e23 4fbd     +SBCI R27 , HIGH ( - 536 )
000e24 900d     +LD R0 , X +
000e25 901d     +LD R1 , X +
000e26 918d     +LD R24 , X +
000e27 919c     +LD R25 , X
000e28 01d0     +MOVW R26 , R0
                 	__GETD2SX 536
000e29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
                +
000e2a 01fe     +MOVW R30 , R28
000e2b 5ee8     +SUBI R30 , LOW ( - 536 )
000e2c 4ffd     +SBCI R31 , HIGH ( - 536 )
000e2d 9001     +LD R0 , Z +
000e2e 9011     +LD R1 , Z +
000e2f 9161     +LD R22 , Z +
000e30 8170     +LD R23 , Z
000e31 01f0     +MOVW R30 , R0
                 	__GETD1SX 536
000e32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0xD:
                +
000e33 01fe     +MOVW R30 , R28
000e34 50e8     +SUBI R30 , LOW ( - 504 )
000e35 4ffe     +SBCI R31 , HIGH ( - 504 )
000e36 9001     +LD R0 , Z +
000e37 9011     +LD R1 , Z +
000e38 9161     +LD R22 , Z +
000e39 8170     +LD R23 , Z
000e3a 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
                +
000e3b 01de     +MOVW R26 , R28
000e3c 50a4     +SUBI R26 , LOW ( - 508 )
000e3d 4fbe     +SBCI R27 , HIGH ( - 508 )
000e3e 900d     +LD R0 , X +
000e3f 901d     +LD R1 , X +
000e40 918d     +LD R24 , X +
000e41 919c     +LD R25 , X
000e42 01d0     +MOVW R26 , R0
                 	__GETD2SX 508
000e43 940e 10dc 	CALL __ADDF12
000e45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
                +
000e46 01de     +MOVW R26 , R28
000e47 5faa     +SUBI R26 , LOW ( - 518 )
000e48 4fbd     +SBCI R27 , HIGH ( - 518 )
000e49 900d     +LD R0 , X +
000e4a 901d     +LD R1 , X +
000e4b 918d     +LD R24 , X +
000e4c 919c     +LD R25 , X
000e4d 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
000e4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xF:
000e4f 01df      	MOVW R26,R30
000e50 01cb      	MOVW R24,R22
                +
000e51 e0e0     +LDI R30 , LOW ( 0x40000000 )
000e52 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000e53 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000e54 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000e55 940e 117a 	CALL __DIVF21
000e57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
000e58 01fe     +MOVW R30 , R28
000e59 5fea     +SUBI R30 , LOW ( - 518 )
000e5a 4ffd     +SBCI R31 , HIGH ( - 518 )
000e5b 9001     +LD R0 , Z +
000e5c 9011     +LD R1 , Z +
000e5d 9161     +LD R22 , Z +
000e5e 8170     +LD R23 , Z
000e5f 01f0     +MOVW R30 , R0
                 	__GETD1SX 518
000e60 940e 12c3 	CALL __PUTPARD1
000e62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000e63 940e 112c 	CALL __MULF12
000e65 940e 106b 	CALL __CFD1
000e67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
000e68 91ed      	LD   R30,X+
000e69 91fd      	LD   R31,X+
000e6a 9631      	ADIW R30,1
000e6b 93fe      	ST   -X,R31
000e6c 93ee      	ST   -X,R30
000e6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x13:
000e6e 936a      	ST   -Y,R22
000e6f 937a      	ST   -Y,R23
000e70 93aa      	ST   -Y,R26
000e71 93ba      	ST   -Y,R27
000e72 93ea      	ST   -Y,R30
000e73 93fa      	ST   -Y,R31
000e74 b7ef      	IN   R30,SREG
000e75 93ea      	ST   -Y,R30
000e76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x14:
000e77 940e 12a5 	CALL __GETD1P_INC
                +
000e79 5fef     +SUBI R30 , LOW ( - 1 )
000e7a 4fff     +SBCI R31 , HIGH ( - 1 )
000e7b 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000e7c 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000e7d 940e 12af 	CALL __PUTDP1_DEC
000e7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x15:
000e80 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
000e82 e0b0      	LDI  R27,0
000e83 5fab      	SUBI R26,LOW(-_PACKET_BUFF)
000e84 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
000e85 b1ec      	IN   R30,0xC
000e86 93ec      	ST   X,R30
000e87 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
000e89 5fef      	SUBI R30,-LOW(1)
000e8a 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
000e8c e0e0      	LDI  R30,LOW(0)
000e8d bde4      	OUT  0x24,R30
000e8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x16:
000e8f e0f0      	LDI  R31,0
000e90 59e4      	SUBI R30,LOW(-_VELOCITY_BUFF)
000e91 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000e92 8310      	ST   Z,R17
000e93 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000e95 5fef      	SUBI R30,-LOW(1)
000e96 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
000e98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000e99 81aa      	LDD  R26,Y+2
000e9a 81bb      	LDD  R27,Y+2+1
000e9b 27ee      	CLR  R30
000e9c 0fa1      	ADD  R26,R17
000e9d 1fbe      	ADC  R27,R30
000e9e 91ec      	LD   R30,X
000e9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000ea0 e0e0      	LDI  R30,LOW(0)
000ea1 83e8      	ST   Y,R30
000ea2 83e9      	STD  Y+1,R30
000ea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000ea4 85ae      	LDD  R26,Y+14
000ea5 85bf      	LDD  R27,Y+14+1
000ea6 940e 129f 	CALL __GETD1P
000ea8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000ea9 85ac      	LDD  R26,Y+12
000eaa 85bd      	LDD  R27,Y+12+1
000eab 940e 129f 	CALL __GETD1P
000ead 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
000eae e1a7     +LDI R26 , LOW ( 0x3E8ED917 )
000eaf edb9     +LDI R27 , HIGH ( 0x3E8ED917 )
000eb0 e88e     +LDI R24 , BYTE3 ( 0x3E8ED917 )
000eb1 e39e     +LDI R25 , BYTE4 ( 0x3E8ED917 )
                 	__GETD2N 0x3E8ED917
000eb2 940e 112c 	CALL __MULF12
000eb4 cf9a      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
                +
000eb5 83ec     +STD Y + 4 , R30
000eb6 83fd     +STD Y + 4 + 1 , R31
000eb7 836e     +STD Y + 4 + 2 , R22
000eb8 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000eb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D:
000eba 940e 12cd 	CALL __SWAPD12
000ebc 940e 10d5 	CALL __SUBF12
000ebe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E:
                +
000ebf 81ac     +LDD R26 , Y + 4
000ec0 81bd     +LDD R27 , Y + 4 + 1
000ec1 818e     +LDD R24 , Y + 4 + 2
000ec2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000ec3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
                +
000ec4 e0e0     +LDI R30 , LOW ( 0x453B8000 )
000ec5 e8f0     +LDI R31 , HIGH ( 0x453B8000 )
000ec6 e36b     +LDI R22 , BYTE3 ( 0x453B8000 )
000ec7 e475     +LDI R23 , BYTE4 ( 0x453B8000 )
                 	__GETD1N 0x453B8000
000ec8 cf9a      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000ec9 e0e0      	LDI  R30,LOW(0)
000eca e0f0      	LDI  R31,HIGH(0)
000ecb 93ed      	ST   X+,R30
000ecc 93fc      	ST   X,R31
000ecd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x21:
000ece 93fa      	ST   -Y,R31
000ecf 93ea      	ST   -Y,R30
000ed0 940e 05d7 	CALL _RTU_WriteOperate0
000ed2 e0e1      	LDI  R30,LOW(1)
000ed3 e0f0      	LDI  R31,HIGH(1)
000ed4 cec5      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x22:
000ed5 93ea      	ST   -Y,R30
000ed6 e7e8      	LDI  R30,LOW(120)
000ed7 e0f0      	LDI  R31,HIGH(120)
000ed8 93fa      	ST   -Y,R31
000ed9 93ea      	ST   -Y,R30
000eda e0e1      	LDI  R30,LOW(1)
000edb e0f0      	LDI  R31,HIGH(1)
000edc cff1      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x23:
000edd df90      	RCALL SUBOPT_0x13
000ede e0a0      	LDI  R26,0
000edf 990c      	SBIC 0x1,4
000ee0 e0a1      	LDI  R26,1
000ee1 e0e0      	LDI  R30,0
000ee2 990d      	SBIC 0x1,5
000ee3 e0e1      	LDI  R30,1
000ee4 17ea      	CP   R30,R26
000ee5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x24:
000ee6 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
000ee7 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
000ee8 940e 12a5 	CALL __GETD1P_INC
000eea 9731      	SBIW R30,1
000eeb 4060      	SBCI R22,0
000eec 4070      	SBCI R23,0
000eed 940e 12af 	CALL __PUTDP1_DEC
                +
000eef 5fef     +SUBI R30 , LOW ( - 1 )
000ef0 4fff     +SBCI R31 , HIGH ( - 1 )
000ef1 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000ef2 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000ef3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x25:
000ef4 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000ef5 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000ef6 940e 12a5 	CALL __GETD1P_INC
000ef8 9731      	SBIW R30,1
000ef9 4060      	SBCI R22,0
000efa 4070      	SBCI R23,0
000efb 940e 12af 	CALL __PUTDP1_DEC
                +
000efd 5fef     +SUBI R30 , LOW ( - 1 )
000efe 4fff     +SBCI R31 , HIGH ( - 1 )
000eff 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000f00 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000f01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
000f02 93fa      	ST   -Y,R31
000f03 93ea      	ST   -Y,R30
000f04 940c 0ce4 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x27:
000f06 dfb8      	RCALL SUBOPT_0x1E
                +
000f07 e0e0     +LDI R30 , LOW ( 0x41200000 )
000f08 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000f09 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000f0a e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000f0b 940e 112c 	CALL __MULF12
000f0d cfa7      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x28:
                +
000f0e 81ec     +LDD R30 , Y + 4
000f0f 81fd     +LDD R31 , Y + 4 + 1
000f10 816e     +LDD R22 , Y + 4 + 2
000f11 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000f12 85ac     +LDD R26 , Y + 12
000f13 85bd     +LDD R27 , Y + 12 + 1
000f14 858e     +LDD R24 , Y + 12 + 2
000f15 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000f16 940e 11bf 	CALL __CMPF12
000f18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
                +
000f19 85ac     +LDD R26 , Y + 12
000f1a 85bd     +LDD R27 , Y + 12 + 1
000f1b 858e     +LDD R24 , Y + 12 + 2
000f1c 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000f1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
                +
000f1e eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000f1f ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000f20 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000f21 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000f22 940e 112c 	CALL __MULF12
                +
000f24 87ec     +STD Y + 12 , R30
000f25 87fd     +STD Y + 12 + 1 , R31
000f26 876e     +STD Y + 12 + 2 , R22
000f27 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000f28 5f3f      	SUBI R19,-LOW(1)
000f29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
                +
000f2a e0e0     +LDI R30 , LOW ( 0x41200000 )
000f2b e0f0     +LDI R31 , HIGH ( 0x41200000 )
000f2c e260     +LDI R22 , BYTE3 ( 0x41200000 )
000f2d e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000f2e 940e 112c 	CALL __MULF12
000f30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
                +
000f31 87ec     +STD Y + 12 , R30
000f32 87fd     +STD Y + 12 + 1 , R31
000f33 876e     +STD Y + 12 + 2 , R22
000f34 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000f35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D:
                +
000f36 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000f37 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000f38 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000f39 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000f3a 940e 10dc 	CALL __ADDF12
000f3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E:
                +
000f3d eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000f3e ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000f3f ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000f40 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000f41 940e 112c 	CALL __MULF12
000f43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
000f44 940e 12c3 	CALL __PUTPARD1
000f46 940c 0c16 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
000f48 85a8      	LDD  R26,Y+8
000f49 85b9      	LDD  R27,Y+8+1
000f4a 9611      	ADIW R26,1
000f4b 87a8      	STD  Y+8,R26
000f4c 87b9      	STD  Y+8+1,R27
000f4d 9711      	SBIW R26,1
000f4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000f4f 2fe0      	MOV  R30,R16
000f50 5de0      	SUBI R30,-LOW(48)
000f51 93ec      	ST   X,R30
000f52 2fe0      	MOV  R30,R16
000f53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x32:
000f54 85e8      	LDD  R30,Y+8
000f55 85f9      	LDD  R31,Y+8+1
000f56 9631      	ADIW R30,1
000f57 87e8      	STD  Y+8,R30
000f58 87f9      	STD  Y+8+1,R31
000f59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x33:
000f5a 932a      	ST   -Y,R18
000f5b 81ef      	LDD  R30,Y+7
000f5c 85f8      	LDD  R31,Y+7+1
000f5d 93fa      	ST   -Y,R31
000f5e 93ea      	ST   -Y,R30
000f5f 85eb      	LDD  R30,Y+11
000f60 85fc      	LDD  R31,Y+11+1
000f61 9509      	ICALL
000f62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x34:
                +
000f63 01fe     +MOVW R30 , R28
000f64 5ae6     +SUBI R30 , LOW ( - 90 )
000f65 4fff     +SBCI R31 , HIGH ( - 90 )
000f66 9001     +LD R0 , Z +
000f67 81f0     +LD R31 , Z
000f68 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000f69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
000f6a 9734      	SBIW R30,4
                +
000f6b 01de     +MOVW R26 , R28
000f6c 5aa6     +SUBI R26 , LOW ( - 90 )
000f6d 4fbf     +SBCI R27 , HIGH ( - 90 )
000f6e 93ed     +ST X + , R30
000f6f 93fc     +ST X , R31
                 	__PUTW1SX 90
000f70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x36:
000f71 81ef      	LDD  R30,Y+7
000f72 85f8      	LDD  R31,Y+7+1
000f73 93fa      	ST   -Y,R31
000f74 93ea      	ST   -Y,R30
000f75 85eb      	LDD  R30,Y+11
000f76 85fc      	LDD  R31,Y+11+1
000f77 9509      	ICALL
000f78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x37:
                +
000f79 01de     +MOVW R26 , R28
000f7a 5aa6     +SUBI R26 , LOW ( - 90 )
000f7b 4fbf     +SBCI R27 , HIGH ( - 90 )
000f7c 900d     +LD R0 , X +
000f7d 91bc     +LD R27 , X
000f7e 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000f7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
                +
000f80 87ea     +STD Y + 10 , R30
000f81 87fb     +STD Y + 10 + 1 , R31
000f82 876c     +STD Y + 10 + 2 , R22
000f83 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000f84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x39:
000f85 dfdd      	RCALL SUBOPT_0x34
000f86 cfe3      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
                +
000f87 85ea     +LDD R30 , Y + 10
000f88 85fb     +LDD R31 , Y + 10 + 1
000f89 856c     +LDD R22 , Y + 10 + 2
000f8a 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000f8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3B:
000f8c 87ee      	STD  Y+14,R30
000f8d 87ff      	STD  Y+14+1,R31
000f8e 93fa      	ST   -Y,R31
000f8f 93ea      	ST   -Y,R30
000f90 940e 0cef 	CALL _strlen
000f92 2f1e      	MOV  R17,R30
000f93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3C:
000f94 dfe4      	RCALL SUBOPT_0x37
000f95 9614      	ADIW R26,4
000f96 940e 129b 	CALL __GETW1P
000f98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D:
                +
000f99 8be8     +STD Y + 16 , R30
000f9a 8bf9     +STD Y + 16 + 1 , R31
000f9b 8b6a     +STD Y + 16 + 2 , R22
000f9c 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000f9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x3E:
000f9e 7f0b      	ANDI R16,LOW(251)
000f9f 89ed      	LDD  R30,Y+21
000fa0 93ea      	ST   -Y,R30
                +
000fa1 01fe     +MOVW R30 , R28
000fa2 5ae9     +SUBI R30 , LOW ( - 87 )
000fa3 4fff     +SBCI R31 , HIGH ( - 87 )
000fa4 9001     +LD R0 , Z +
000fa5 81f0     +LD R31 , Z
000fa6 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000fa7 93fa      	ST   -Y,R31
000fa8 93ea      	ST   -Y,R30
                +
000fa9 01fe     +MOVW R30 , R28
000faa 5ae5     +SUBI R30 , LOW ( - 91 )
000fab 4fff     +SBCI R31 , HIGH ( - 91 )
000fac 9001     +LD R0 , Z +
000fad 81f0     +LD R31 , Z
000fae 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000faf 9509      	ICALL
000fb0 3050      	CPI  R21,0
000fb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F:
                +
000fb2 89e8     +LDD R30 , Y + 16
000fb3 89f9     +LDD R31 , Y + 16 + 1
000fb4 896a     +LDD R22 , Y + 16 + 2
000fb5 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000fb6 85aa     +LDD R26 , Y + 10
000fb7 85bb     +LDD R27 , Y + 10 + 1
000fb8 858c     +LDD R24 , Y + 10 + 2
000fb9 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000fba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
000fbb 01de      	MOVW R26,R28
000fbc 961c      	ADIW R26,12
000fbd 940e 11df 	CALL __ADDW2R15
000fbf 940e 129b 	CALL __GETW1P
000fc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41:
000fc2 940e 11df 	CALL __ADDW2R15
000fc4 940e 129b 	CALL __GETW1P
000fc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
000fc7 933a      	ST   -Y,R19
000fc8 940e 0ccc 	CALL _isspace
000fca 30e0      	CPI  R30,0
000fcb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x43:
000fcc 01fe      	MOVW R30,R28
000fcd 963d      	ADIW R30,13
000fce 93fa      	ST   -Y,R31
000fcf 93ea      	ST   -Y,R30
000fd0 89e8      	LDD  R30,Y+16
000fd1 89f9      	LDD  R31,Y+16+1
000fd2 93fa      	ST   -Y,R31
000fd3 93ea      	ST   -Y,R30
000fd4 89ec      	LDD  R30,Y+20
000fd5 89fd      	LDD  R31,Y+20+1
000fd6 9509      	ICALL
000fd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x44:
000fd8 85ae      	LDD  R26,Y+14
000fd9 85bf      	LDD  R27,Y+14+1
000fda 91ac      	LD   R26,X
000fdb 30a0      	CPI  R26,0
000fdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x45:
000fdd 89ea      	LDD  R30,Y+18
000fde 89fb      	LDD  R31,Y+18+1
000fdf 9734      	SBIW R30,4
000fe0 8bea      	STD  Y+18,R30
000fe1 8bfb      	STD  Y+18+1,R31
000fe2 89aa      	LDD  R26,Y+18
000fe3 89bb      	LDD  R27,Y+18+1
000fe4 9614      	ADIW R26,4
000fe5 910d      	LD   R16,X+
000fe6 911c      	LD   R17,X
000fe7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000fe8 940e 12b4 	CALL __GETD1S0
000fea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x47:
                +
000feb 81ad     +LDD R26 , Y + 5
000fec 81be     +LDD R27 , Y + 5 + 1
000fed 818f     +LDD R24 , Y + 5 + 2
000fee 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000fef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x48:
                +
000ff0 83ed     +STD Y + 5 , R30
000ff1 83fe     +STD Y + 5 + 1 , R31
000ff2 836f     +STD Y + 5 + 2 , R22
000ff3 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000ff4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
000ff5 81ed     +LDD R30 , Y + 5
000ff6 81fe     +LDD R31 , Y + 5 + 1
000ff7 816f     +LDD R22 , Y + 5 + 2
000ff8 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000ff9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
                +
000ffa 81a9     +LDD R26 , Y + 1
000ffb 81ba     +LDD R27 , Y + 1 + 1
000ffc 818b     +LDD R24 , Y + 1 + 2
000ffd 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ffe 940e 112c 	CALL __MULF12
001000 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
001001 81ee      	LDD  R30,Y+6
001002 81ff      	LDD  R31,Y+6+1
001003 93fa      	ST   -Y,R31
001004 93ea      	ST   -Y,R30
001005 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4C:
                +
001006 87e9     +STD Y + 9 , R30
001007 87fa     +STD Y + 9 + 1 , R31
001008 876b     +STD Y + 9 + 2 , R22
001009 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00100a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4D:
00100b 81ae      	LDD  R26,Y+6
00100c 81bf      	LDD  R27,Y+6+1
00100d 9611      	ADIW R26,1
00100e 83ae      	STD  Y+6,R26
00100f 83bf      	STD  Y+6+1,R27
001010 9711      	SBIW R26,1
001011 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4E:
                +
001012 81aa     +LDD R26 , Y + 2
001013 81bb     +LDD R27 , Y + 2 + 1
001014 818c     +LDD R24 , Y + 2 + 2
001015 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001016 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4F:
                +
001017 83ea     +STD Y + 2 , R30
001018 83fb     +STD Y + 2 + 1 , R31
001019 836c     +STD Y + 2 + 2 , R22
00101a 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00101b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x50:
                +
00101c 81ea     +LDD R30 , Y + 2
00101d 81fb     +LDD R31 , Y + 2 + 1
00101e 816c     +LDD R22 , Y + 2 + 2
00101f 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001020 85a9     +LDD R26 , Y + 9
001021 85ba     +LDD R27 , Y + 9 + 1
001022 858b     +LDD R24 , Y + 9 + 2
001023 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001024 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
                +
001025 85a9     +LDD R26 , Y + 9
001026 85ba     +LDD R27 , Y + 9 + 1
001027 858b     +LDD R24 , Y + 9 + 2
001028 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001029 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00102a 91e9      	ld   r30,y+
00102b 91f9      	ld   r31,y+
00102c 9630      	adiw r30,0
00102d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00102e e686     +LDI R24 , LOW ( 0xE66 )
00102f e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
001030 9701     +SBIW R24 , 1
001031 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
001032 95a8      	wdr
001033 9731      	sbiw r30,1
001034 f7c9      	brne __delay_ms0
                 __delay_ms1:
001035 9508      	ret
                 
                 __ANEGF1:
001036 9730      	SBIW R30,0
001037 4060      	SBCI R22,0
001038 4070      	SBCI R23,0
001039 f009      	BREQ __ANEGF10
00103a 5870      	SUBI R23,0x80
                 __ANEGF10:
00103b 9508      	RET
                 
                 __ROUND_REPACK:
00103c 2355      	TST  R21
00103d f442      	BRPL __REPACK
00103e 3850      	CPI  R21,0x80
00103f f411      	BRNE __ROUND_REPACK0
001040 ffe0      	SBRS R30,0
001041 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001042 9631      	ADIW R30,1
001043 1f69      	ADC  R22,R25
001044 1f79      	ADC  R23,R25
001045 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001046 e850      	LDI  R21,0x80
001047 2757      	EOR  R21,R23
001048 f411      	BRNE __REPACK0
001049 935f      	PUSH R21
00104a c0cf      	RJMP __ZERORES
                 __REPACK0:
00104b 3f5f      	CPI  R21,0xFF
00104c f031      	BREQ __REPACK1
00104d 0f66      	LSL  R22
00104e 0c00      	LSL  R0
00104f 9557      	ROR  R21
001050 9567      	ROR  R22
001051 2f75      	MOV  R23,R21
001052 9508      	RET
                 __REPACK1:
001053 935f      	PUSH R21
001054 2000      	TST  R0
001055 f00a      	BRMI __REPACK2
001056 c0cf      	RJMP __MAXRES
                 __REPACK2:
001057 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
001058 e850      	LDI  R21,0x80
001059 2e19      	MOV  R1,R25
00105a 2215      	AND  R1,R21
00105b 0f88      	LSL  R24
00105c 1f99      	ROL  R25
00105d 2795      	EOR  R25,R21
00105e 0f55      	LSL  R21
00105f 9587      	ROR  R24
                 
                 __UNPACK1:
001060 e850      	LDI  R21,0x80
001061 2e07      	MOV  R0,R23
001062 2205      	AND  R0,R21
001063 0f66      	LSL  R22
001064 1f77      	ROL  R23
001065 2775      	EOR  R23,R21
001066 0f55      	LSL  R21
001067 9567      	ROR  R22
001068 9508      	RET
                 
                 __CFD1U:
001069 9468      	SET
00106a c001      	RJMP __CFD1U0
                 __CFD1:
00106b 94e8      	CLT
                 __CFD1U0:
00106c 935f      	PUSH R21
00106d dff2      	RCALL __UNPACK1
00106e 3870      	CPI  R23,0x80
00106f f018      	BRLO __CFD10
001070 3f7f      	CPI  R23,0xFF
001071 f408      	BRCC __CFD10
001072 c0a7      	RJMP __ZERORES
                 __CFD10:
001073 e156      	LDI  R21,22
001074 1b57      	SUB  R21,R23
001075 f4aa      	BRPL __CFD11
001076 9551      	NEG  R21
001077 3058      	CPI  R21,8
001078 f40e      	BRTC __CFD19
001079 3059      	CPI  R21,9
                 __CFD19:
00107a f030      	BRLO __CFD17
00107b efef      	SER  R30
00107c efff      	SER  R31
00107d ef6f      	SER  R22
00107e e77f      	LDI  R23,0x7F
00107f f977      	BLD  R23,7
001080 c01a      	RJMP __CFD15
                 __CFD17:
001081 2777      	CLR  R23
001082 2355      	TST  R21
001083 f0b9      	BREQ __CFD15
                 __CFD18:
001084 0fee      	LSL  R30
001085 1fff      	ROL  R31
001086 1f66      	ROL  R22
001087 1f77      	ROL  R23
001088 955a      	DEC  R21
001089 f7d1      	BRNE __CFD18
00108a c010      	RJMP __CFD15
                 __CFD11:
00108b 2777      	CLR  R23
                 __CFD12:
00108c 3058      	CPI  R21,8
00108d f028      	BRLO __CFD13
00108e 2fef      	MOV  R30,R31
00108f 2ff6      	MOV  R31,R22
001090 2f67      	MOV  R22,R23
001091 5058      	SUBI R21,8
001092 cff9      	RJMP __CFD12
                 __CFD13:
001093 2355      	TST  R21
001094 f031      	BREQ __CFD15
                 __CFD14:
001095 9576      	LSR  R23
001096 9567      	ROR  R22
001097 95f7      	ROR  R31
001098 95e7      	ROR  R30
001099 955a      	DEC  R21
00109a f7d1      	BRNE __CFD14
                 __CFD15:
00109b 2000      	TST  R0
00109c f40a      	BRPL __CFD16
00109d d14e      	RCALL __ANEGD1
                 __CFD16:
00109e 915f      	POP  R21
00109f 9508      	RET
                 
                 __CDF1U:
0010a0 9468      	SET
0010a1 c001      	RJMP __CDF1U0
                 __CDF1:
0010a2 94e8      	CLT
                 __CDF1U0:
0010a3 9730      	SBIW R30,0
0010a4 4060      	SBCI R22,0
0010a5 4070      	SBCI R23,0
0010a6 f0b1      	BREQ __CDF10
0010a7 2400      	CLR  R0
0010a8 f026      	BRTS __CDF11
0010a9 2377      	TST  R23
0010aa f412      	BRPL __CDF11
0010ab 9400      	COM  R0
0010ac d13f      	RCALL __ANEGD1
                 __CDF11:
0010ad 2e17      	MOV  R1,R23
0010ae e17e      	LDI  R23,30
0010af 2011      	TST  R1
                 __CDF12:
0010b0 f032      	BRMI __CDF13
0010b1 957a      	DEC  R23
0010b2 0fee      	LSL  R30
0010b3 1fff      	ROL  R31
0010b4 1f66      	ROL  R22
0010b5 1c11      	ROL  R1
0010b6 cff9      	RJMP __CDF12
                 __CDF13:
0010b7 2fef      	MOV  R30,R31
0010b8 2ff6      	MOV  R31,R22
0010b9 2d61      	MOV  R22,R1
0010ba 935f      	PUSH R21
0010bb df8a      	RCALL __REPACK
0010bc 915f      	POP  R21
                 __CDF10:
0010bd 9508      	RET
                 
                 __SWAPACC:
0010be 934f      	PUSH R20
0010bf 01af      	MOVW R20,R30
0010c0 01fd      	MOVW R30,R26
0010c1 01da      	MOVW R26,R20
0010c2 01ab      	MOVW R20,R22
0010c3 01bc      	MOVW R22,R24
0010c4 01ca      	MOVW R24,R20
0010c5 2d40      	MOV  R20,R0
0010c6 2c01      	MOV  R0,R1
0010c7 2e14      	MOV  R1,R20
0010c8 914f      	POP  R20
0010c9 9508      	RET
                 
                 __UADD12:
0010ca 0fea      	ADD  R30,R26
0010cb 1ffb      	ADC  R31,R27
0010cc 1f68      	ADC  R22,R24
0010cd 9508      	RET
                 
                 __NEGMAN1:
0010ce 95e0      	COM  R30
0010cf 95f0      	COM  R31
0010d0 9560      	COM  R22
0010d1 5fef      	SUBI R30,-1
0010d2 4fff      	SBCI R31,-1
0010d3 4f6f      	SBCI R22,-1
0010d4 9508      	RET
                 
                 __SUBF12:
0010d5 935f      	PUSH R21
0010d6 df81      	RCALL __UNPACK
0010d7 3890      	CPI  R25,0x80
0010d8 f171      	BREQ __ADDF129
0010d9 e850      	LDI  R21,0x80
0010da 2615      	EOR  R1,R21
                 
0010db c004      	RJMP __ADDF120
                 
                 __ADDF12:
0010dc 935f      	PUSH R21
0010dd df7a      	RCALL __UNPACK
0010de 3890      	CPI  R25,0x80
0010df f139      	BREQ __ADDF129
                 
                 __ADDF120:
0010e0 3870      	CPI  R23,0x80
0010e1 f121      	BREQ __ADDF128
                 __ADDF121:
0010e2 2f57      	MOV  R21,R23
0010e3 1b59      	SUB  R21,R25
0010e4 f12b      	BRVS __ADDF1211
0010e5 f412      	BRPL __ADDF122
0010e6 dfd7      	RCALL __SWAPACC
0010e7 cffa      	RJMP __ADDF121
                 __ADDF122:
0010e8 3158      	CPI  R21,24
0010e9 f018      	BRLO __ADDF123
0010ea 27aa      	CLR  R26
0010eb 27bb      	CLR  R27
0010ec 2788      	CLR  R24
                 __ADDF123:
0010ed 3058      	CPI  R21,8
0010ee f028      	BRLO __ADDF124
0010ef 2fab      	MOV  R26,R27
0010f0 2fb8      	MOV  R27,R24
0010f1 2788      	CLR  R24
0010f2 5058      	SUBI R21,8
0010f3 cff9      	RJMP __ADDF123
                 __ADDF124:
0010f4 2355      	TST  R21
0010f5 f029      	BREQ __ADDF126
                 __ADDF125:
0010f6 9586      	LSR  R24
0010f7 95b7      	ROR  R27
0010f8 95a7      	ROR  R26
0010f9 955a      	DEC  R21
0010fa f7d9      	BRNE __ADDF125
                 __ADDF126:
0010fb 2d50      	MOV  R21,R0
0010fc 2551      	EOR  R21,R1
0010fd f072      	BRMI __ADDF127
0010fe dfcb      	RCALL __UADD12
0010ff f438      	BRCC __ADDF129
001100 9567      	ROR  R22
001101 95f7      	ROR  R31
001102 95e7      	ROR  R30
001103 9573      	INC  R23
001104 f413      	BRVC __ADDF129
001105 c020      	RJMP __MAXRES
                 __ADDF128:
001106 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001107 df3e      	RCALL __REPACK
001108 915f      	POP  R21
001109 9508      	RET
                 __ADDF1211:
00110a f7d8      	BRCC __ADDF128
00110b cffb      	RJMP __ADDF129
                 __ADDF127:
00110c 1bea      	SUB  R30,R26
00110d 0bfb      	SBC  R31,R27
00110e 0b68      	SBC  R22,R24
00110f f051      	BREQ __ZERORES
001110 f410      	BRCC __ADDF1210
001111 9400      	COM  R0
001112 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001113 2366      	TST  R22
001114 f392      	BRMI __ADDF129
001115 0fee      	LSL  R30
001116 1fff      	ROL  R31
001117 1f66      	ROL  R22
001118 957a      	DEC  R23
001119 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00111a 27ee      	CLR  R30
00111b 27ff      	CLR  R31
00111c 2766      	CLR  R22
00111d 2777      	CLR  R23
00111e 915f      	POP  R21
00111f 9508      	RET
                 
                 __MINRES:
001120 efef      	SER  R30
001121 efff      	SER  R31
001122 e76f      	LDI  R22,0x7F
001123 ef7f      	SER  R23
001124 915f      	POP  R21
001125 9508      	RET
                 
                 __MAXRES:
001126 efef      	SER  R30
001127 efff      	SER  R31
001128 e76f      	LDI  R22,0x7F
001129 e77f      	LDI  R23,0x7F
00112a 915f      	POP  R21
00112b 9508      	RET
                 
                 __MULF12:
00112c 935f      	PUSH R21
00112d df2a      	RCALL __UNPACK
00112e 3870      	CPI  R23,0x80
00112f f351      	BREQ __ZERORES
001130 3890      	CPI  R25,0x80
001131 f341      	BREQ __ZERORES
001132 2401      	EOR  R0,R1
001133 9408      	SEC
001134 1f79      	ADC  R23,R25
001135 f423      	BRVC __MULF124
001136 f31c      	BRLT __ZERORES
                 __MULF125:
001137 2000      	TST  R0
001138 f33a      	BRMI __MINRES
001139 cfec      	RJMP __MAXRES
                 __MULF124:
00113a 920f      	PUSH R0
00113b 931f      	PUSH R17
00113c 932f      	PUSH R18
00113d 933f      	PUSH R19
00113e 934f      	PUSH R20
00113f 2711      	CLR  R17
001140 2722      	CLR  R18
001141 2799      	CLR  R25
001142 9f68      	MUL  R22,R24
001143 01a0      	MOVW R20,R0
001144 9f8f      	MUL  R24,R31
001145 2d30      	MOV  R19,R0
001146 0d41      	ADD  R20,R1
001147 1f59      	ADC  R21,R25
001148 9f6b      	MUL  R22,R27
001149 0d30      	ADD  R19,R0
00114a 1d41      	ADC  R20,R1
00114b 1f59      	ADC  R21,R25
00114c 9f8e      	MUL  R24,R30
00114d d027      	RCALL __MULF126
00114e 9fbf      	MUL  R27,R31
00114f d025      	RCALL __MULF126
001150 9f6a      	MUL  R22,R26
001151 d023      	RCALL __MULF126
001152 9fbe      	MUL  R27,R30
001153 d01d      	RCALL __MULF127
001154 9faf      	MUL  R26,R31
001155 d01b      	RCALL __MULF127
001156 9fae      	MUL  R26,R30
001157 0d11      	ADD  R17,R1
001158 1f29      	ADC  R18,R25
001159 1f39      	ADC  R19,R25
00115a 1f49      	ADC  R20,R25
00115b 1f59      	ADC  R21,R25
00115c 2fe3      	MOV  R30,R19
00115d 2ff4      	MOV  R31,R20
00115e 2f65      	MOV  R22,R21
00115f 2f52      	MOV  R21,R18
001160 914f      	POP  R20
001161 913f      	POP  R19
001162 912f      	POP  R18
001163 911f      	POP  R17
001164 900f      	POP  R0
001165 2366      	TST  R22
001166 f02a      	BRMI __MULF122
001167 0f55      	LSL  R21
001168 1fee      	ROL  R30
001169 1fff      	ROL  R31
00116a 1f66      	ROL  R22
00116b c002      	RJMP __MULF123
                 __MULF122:
00116c 9573      	INC  R23
00116d f24b      	BRVS __MULF125
                 __MULF123:
00116e decd      	RCALL __ROUND_REPACK
00116f 915f      	POP  R21
001170 9508      	RET
                 
                 __MULF127:
001171 0d10      	ADD  R17,R0
001172 1d21      	ADC  R18,R1
001173 1f39      	ADC  R19,R25
001174 c002      	RJMP __MULF128
                 __MULF126:
001175 0d20      	ADD  R18,R0
001176 1d31      	ADC  R19,R1
                 __MULF128:
001177 1f49      	ADC  R20,R25
001178 1f59      	ADC  R21,R25
001179 9508      	RET
                 
                 __DIVF21:
00117a 935f      	PUSH R21
00117b dedc      	RCALL __UNPACK
00117c 3870      	CPI  R23,0x80
00117d f421      	BRNE __DIVF210
00117e 2011      	TST  R1
                 __DIVF211:
00117f f40a      	BRPL __DIVF219
001180 cf9f      	RJMP __MINRES
                 __DIVF219:
001181 cfa4      	RJMP __MAXRES
                 __DIVF210:
001182 3890      	CPI  R25,0x80
001183 f409      	BRNE __DIVF218
                 __DIVF217:
001184 cf95      	RJMP __ZERORES
                 __DIVF218:
001185 2401      	EOR  R0,R1
001186 9408      	SEC
001187 0b97      	SBC  R25,R23
001188 f41b      	BRVC __DIVF216
001189 f3d4      	BRLT __DIVF217
00118a 2000      	TST  R0
00118b cff3      	RJMP __DIVF211
                 __DIVF216:
00118c 2f79      	MOV  R23,R25
00118d 931f      	PUSH R17
00118e 932f      	PUSH R18
00118f 933f      	PUSH R19
001190 934f      	PUSH R20
001191 2411      	CLR  R1
001192 2711      	CLR  R17
001193 2722      	CLR  R18
001194 2733      	CLR  R19
001195 2744      	CLR  R20
001196 2755      	CLR  R21
001197 e290      	LDI  R25,32
                 __DIVF212:
001198 17ae      	CP   R26,R30
001199 07bf      	CPC  R27,R31
00119a 0786      	CPC  R24,R22
00119b 0741      	CPC  R20,R17
00119c f030      	BRLO __DIVF213
00119d 1bae      	SUB  R26,R30
00119e 0bbf      	SBC  R27,R31
00119f 0b86      	SBC  R24,R22
0011a0 0b41      	SBC  R20,R17
0011a1 9408      	SEC
0011a2 c001      	RJMP __DIVF214
                 __DIVF213:
0011a3 9488      	CLC
                 __DIVF214:
0011a4 1f55      	ROL  R21
0011a5 1f22      	ROL  R18
0011a6 1f33      	ROL  R19
0011a7 1c11      	ROL  R1
0011a8 1faa      	ROL  R26
0011a9 1fbb      	ROL  R27
0011aa 1f88      	ROL  R24
0011ab 1f44      	ROL  R20
0011ac 959a      	DEC  R25
0011ad f751      	BRNE __DIVF212
0011ae 01f9      	MOVW R30,R18
0011af 2d61      	MOV  R22,R1
0011b0 914f      	POP  R20
0011b1 913f      	POP  R19
0011b2 912f      	POP  R18
0011b3 911f      	POP  R17
0011b4 2366      	TST  R22
0011b5 f032      	BRMI __DIVF215
0011b6 0f55      	LSL  R21
0011b7 1fee      	ROL  R30
0011b8 1fff      	ROL  R31
0011b9 1f66      	ROL  R22
0011ba 957a      	DEC  R23
0011bb f243      	BRVS __DIVF217
                 __DIVF215:
0011bc de7f      	RCALL __ROUND_REPACK
0011bd 915f      	POP  R21
0011be 9508      	RET
                 
                 __CMPF12:
0011bf 2399      	TST  R25
0011c0 f09a      	BRMI __CMPF120
0011c1 2377      	TST  R23
0011c2 f042      	BRMI __CMPF121
0011c3 1797      	CP   R25,R23
0011c4 f048      	BRLO __CMPF122
0011c5 f429      	BRNE __CMPF121
0011c6 17ae      	CP   R26,R30
0011c7 07bf      	CPC  R27,R31
0011c8 0786      	CPC  R24,R22
0011c9 f020      	BRLO __CMPF122
0011ca f031      	BREQ __CMPF123
                 __CMPF121:
0011cb 9498      	CLZ
0011cc 9488      	CLC
0011cd 9508      	RET
                 __CMPF122:
0011ce 9498      	CLZ
0011cf 9408      	SEC
0011d0 9508      	RET
                 __CMPF123:
0011d1 9418      	SEZ
0011d2 9488      	CLC
0011d3 9508      	RET
                 __CMPF120:
0011d4 2377      	TST  R23
0011d5 f7c2      	BRPL __CMPF122
0011d6 1797      	CP   R25,R23
0011d7 f398      	BRLO __CMPF121
0011d8 f7a9      	BRNE __CMPF122
0011d9 17ea      	CP   R30,R26
0011da 07fb      	CPC  R31,R27
0011db 0768      	CPC  R22,R24
0011dc f388      	BRLO __CMPF122
0011dd f399      	BREQ __CMPF123
0011de cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0011df 2400      	CLR  R0
0011e0 0daf      	ADD  R26,R15
0011e1 1db0      	ADC  R27,R0
0011e2 9508      	RET
                 
                 __ADDD12:
0011e3 0fea      	ADD  R30,R26
0011e4 1ffb      	ADC  R31,R27
0011e5 1f68      	ADC  R22,R24
0011e6 1f79      	ADC  R23,R25
0011e7 9508      	RET
                 
                 __ANEGW1:
0011e8 95f1      	NEG  R31
0011e9 95e1      	NEG  R30
0011ea 40f0      	SBCI R31,0
0011eb 9508      	RET
                 
                 __ANEGD1:
0011ec 95f0      	COM  R31
0011ed 9560      	COM  R22
0011ee 9570      	COM  R23
0011ef 95e1      	NEG  R30
0011f0 4fff      	SBCI R31,-1
0011f1 4f6f      	SBCI R22,-1
0011f2 4f7f      	SBCI R23,-1
0011f3 9508      	RET
                 
                 __ASRW8:
0011f4 2fef      	MOV  R30,R31
0011f5 27ff      	CLR  R31
0011f6 fde7      	SBRC R30,7
0011f7 efff      	SER  R31
0011f8 9508      	RET
                 
                 __CBD1:
0011f9 2ffe      	MOV  R31,R30
0011fa 0fff      	ADD  R31,R31
0011fb 0bff      	SBC  R31,R31
0011fc 2f6f      	MOV  R22,R31
0011fd 2f7f      	MOV  R23,R31
0011fe 9508      	RET
                 
                 __CWD1:
0011ff 2f6f      	MOV  R22,R31
001200 0f66      	ADD  R22,R22
001201 0b66      	SBC  R22,R22
001202 2f76      	MOV  R23,R22
001203 9508      	RET
                 
                 __CWD2:
001204 2f8b      	MOV  R24,R27
001205 0f88      	ADD  R24,R24
001206 0b88      	SBC  R24,R24
001207 2f98      	MOV  R25,R24
001208 9508      	RET
                 
                 __MULD12U:
001209 9f7a      	MUL  R23,R26
00120a 2d70      	MOV  R23,R0
00120b 9f6b      	MUL  R22,R27
00120c 0d70      	ADD  R23,R0
00120d 9ff8      	MUL  R31,R24
00120e 0d70      	ADD  R23,R0
00120f 9fe9      	MUL  R30,R25
001210 0d70      	ADD  R23,R0
001211 9f6a      	MUL  R22,R26
001212 2d60      	MOV  R22,R0
001213 0d71      	ADD  R23,R1
001214 9ffb      	MUL  R31,R27
001215 0d60      	ADD  R22,R0
001216 1d71      	ADC  R23,R1
001217 9fe8      	MUL  R30,R24
001218 0d60      	ADD  R22,R0
001219 1d71      	ADC  R23,R1
00121a 2788      	CLR  R24
00121b 9ffa      	MUL  R31,R26
00121c 2df0      	MOV  R31,R0
00121d 0d61      	ADD  R22,R1
00121e 1f78      	ADC  R23,R24
00121f 9feb      	MUL  R30,R27
001220 0df0      	ADD  R31,R0
001221 1d61      	ADC  R22,R1
001222 1f78      	ADC  R23,R24
001223 9fea      	MUL  R30,R26
001224 2de0      	MOV  R30,R0
001225 0df1      	ADD  R31,R1
001226 1f68      	ADC  R22,R24
001227 1f78      	ADC  R23,R24
001228 9508      	RET
                 
                 __MULB1W2U:
001229 2f6e      	MOV  R22,R30
00122a 9f6a      	MUL  R22,R26
00122b 01f0      	MOVW R30,R0
00122c 9f6b      	MUL  R22,R27
00122d 0df0      	ADD  R31,R0
00122e 9508      	RET
                 
                 __MULD12:
00122f d058      	RCALL __CHKSIGND
001230 dfd8      	RCALL __MULD12U
001231 f40e      	BRTC __MULD121
001232 dfb9      	RCALL __ANEGD1
                 __MULD121:
001233 9508      	RET
                 
                 __DIVB21U:
001234 2400      	CLR  R0
001235 e098      	LDI  R25,8
                 __DIVB21U1:
001236 0faa      	LSL  R26
001237 1c00      	ROL  R0
001238 1a0e      	SUB  R0,R30
001239 f410      	BRCC __DIVB21U2
00123a 0e0e      	ADD  R0,R30
00123b c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00123c 60a1      	SBR  R26,1
                 __DIVB21U3:
00123d 959a      	DEC  R25
00123e f7b9      	BRNE __DIVB21U1
00123f 2fea      	MOV  R30,R26
001240 2da0      	MOV  R26,R0
001241 9508      	RET
                 
                 __DIVB21:
001242 d039      	RCALL __CHKSIGNB
001243 dff0      	RCALL __DIVB21U
001244 f40e      	BRTC __DIVB211
001245 95e1      	NEG  R30
                 __DIVB211:
001246 9508      	RET
                 
                 __DIVD21U:
001247 933f      	PUSH R19
001248 934f      	PUSH R20
001249 935f      	PUSH R21
00124a 2400      	CLR  R0
00124b 2411      	CLR  R1
00124c 2744      	CLR  R20
00124d 2755      	CLR  R21
00124e e230      	LDI  R19,32
                 __DIVD21U1:
00124f 0faa      	LSL  R26
001250 1fbb      	ROL  R27
001251 1f88      	ROL  R24
001252 1f99      	ROL  R25
001253 1c00      	ROL  R0
001254 1c11      	ROL  R1
001255 1f44      	ROL  R20
001256 1f55      	ROL  R21
001257 1a0e      	SUB  R0,R30
001258 0a1f      	SBC  R1,R31
001259 0b46      	SBC  R20,R22
00125a 0b57      	SBC  R21,R23
00125b f428      	BRCC __DIVD21U2
00125c 0e0e      	ADD  R0,R30
00125d 1e1f      	ADC  R1,R31
00125e 1f46      	ADC  R20,R22
00125f 1f57      	ADC  R21,R23
001260 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001261 60a1      	SBR  R26,1
                 __DIVD21U3:
001262 953a      	DEC  R19
001263 f759      	BRNE __DIVD21U1
001264 01fd      	MOVW R30,R26
001265 01bc      	MOVW R22,R24
001266 01d0      	MOVW R26,R0
001267 01ca      	MOVW R24,R20
001268 915f      	POP  R21
001269 914f      	POP  R20
00126a 913f      	POP  R19
00126b 9508      	RET
                 
                 __MODB21:
00126c 94e8      	CLT
00126d ffa7      	SBRS R26,7
00126e c002      	RJMP __MODB211
00126f 95a1      	NEG  R26
001270 9468      	SET
                 __MODB211:
001271 fde7      	SBRC R30,7
001272 95e1      	NEG  R30
001273 dfc0      	RCALL __DIVB21U
001274 2fea      	MOV  R30,R26
001275 f40e      	BRTC __MODB212
001276 95e1      	NEG  R30
                 __MODB212:
001277 9508      	RET
                 
                 __MODD21U:
001278 dfce      	RCALL __DIVD21U
001279 01fd      	MOVW R30,R26
00127a 01bc      	MOVW R22,R24
00127b 9508      	RET
                 
                 __CHKSIGNB:
00127c 94e8      	CLT
00127d ffe7      	SBRS R30,7
00127e c002      	RJMP __CHKSB1
00127f 95e1      	NEG  R30
001280 9468      	SET
                 __CHKSB1:
001281 ffa7      	SBRS R26,7
001282 c004      	RJMP __CHKSB2
001283 95a1      	NEG  R26
001284 f800      	BLD  R0,0
001285 9403      	INC  R0
001286 fa00      	BST  R0,0
                 __CHKSB2:
001287 9508      	RET
                 
                 __CHKSIGND:
001288 94e8      	CLT
001289 ff77      	SBRS R23,7
00128a c002      	RJMP __CHKSD1
00128b df60      	RCALL __ANEGD1
00128c 9468      	SET
                 __CHKSD1:
00128d ff97      	SBRS R25,7
00128e c00b      	RJMP __CHKSD2
00128f 2400      	CLR  R0
001290 95a0      	COM  R26
001291 95b0      	COM  R27
001292 9580      	COM  R24
001293 9590      	COM  R25
001294 9611      	ADIW R26,1
001295 1d80      	ADC  R24,R0
001296 1d90      	ADC  R25,R0
001297 f800      	BLD  R0,0
001298 9403      	INC  R0
001299 fa00      	BST  R0,0
                 __CHKSD2:
00129a 9508      	RET
                 
                 __GETW1P:
00129b 91ed      	LD   R30,X+
00129c 91fc      	LD   R31,X
00129d 9711      	SBIW R26,1
00129e 9508      	RET
                 
                 __GETD1P:
00129f 91ed      	LD   R30,X+
0012a0 91fd      	LD   R31,X+
0012a1 916d      	LD   R22,X+
0012a2 917c      	LD   R23,X
0012a3 9713      	SBIW R26,3
0012a4 9508      	RET
                 
                 __GETD1P_INC:
0012a5 91ed      	LD   R30,X+
0012a6 91fd      	LD   R31,X+
0012a7 916d      	LD   R22,X+
0012a8 917d      	LD   R23,X+
0012a9 9508      	RET
                 
                 __PUTDP1:
0012aa 93ed      	ST   X+,R30
0012ab 93fd      	ST   X+,R31
0012ac 936d      	ST   X+,R22
0012ad 937c      	ST   X,R23
0012ae 9508      	RET
                 
                 __PUTDP1_DEC:
0012af 937e      	ST   -X,R23
0012b0 936e      	ST   -X,R22
0012b1 93fe      	ST   -X,R31
0012b2 93ee      	ST   -X,R30
0012b3 9508      	RET
                 
                 __GETD1S0:
0012b4 81e8      	LD   R30,Y
0012b5 81f9      	LDD  R31,Y+1
0012b6 816a      	LDD  R22,Y+2
0012b7 817b      	LDD  R23,Y+3
0012b8 9508      	RET
                 
                 __GETD2S0:
0012b9 81a8      	LD   R26,Y
0012ba 81b9      	LDD  R27,Y+1
0012bb 818a      	LDD  R24,Y+2
0012bc 819b      	LDD  R25,Y+3
0012bd 9508      	RET
                 
                 __PUTD1S0:
0012be 83e8      	ST   Y,R30
0012bf 83f9      	STD  Y+1,R31
0012c0 836a      	STD  Y+2,R22
0012c1 837b      	STD  Y+3,R23
0012c2 9508      	RET
                 
                 __PUTPARD1:
0012c3 937a      	ST   -Y,R23
0012c4 936a      	ST   -Y,R22
0012c5 93fa      	ST   -Y,R31
0012c6 93ea      	ST   -Y,R30
0012c7 9508      	RET
                 
                 __CDF2U:
0012c8 9468      	SET
0012c9 c001      	RJMP __CDF2U0
                 __CDF2:
0012ca 94e8      	CLT
                 __CDF2U0:
0012cb d001      	RCALL __SWAPD12
0012cc ddd6      	RCALL __CDF1U0
                 
                 __SWAPD12:
0012cd 2e18      	MOV  R1,R24
0012ce 2f86      	MOV  R24,R22
0012cf 2d61      	MOV  R22,R1
0012d0 2e19      	MOV  R1,R25
0012d1 2f97      	MOV  R25,R23
0012d2 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0012d3 2e1b      	MOV  R1,R27
0012d4 2fbf      	MOV  R27,R31
0012d5 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0012d6 2e1a      	MOV  R1,R26
0012d7 2fae      	MOV  R26,R30
0012d8 2de1      	MOV  R30,R1
0012d9 9508      	RET
                 
                 __CPD10:
0012da 9730      	SBIW R30,0
0012db 4060      	SBCI R22,0
0012dc 4070      	SBCI R23,0
0012dd 9508      	RET
                 
                 __CPW02:
0012de 2400      	CLR  R0
0012df 160a      	CP   R0,R26
0012e0 060b      	CPC  R0,R27
0012e1 9508      	RET
                 
                 __SAVELOCR6:
0012e2 935a      	ST   -Y,R21
                 __SAVELOCR5:
0012e3 934a      	ST   -Y,R20
                 __SAVELOCR4:
0012e4 933a      	ST   -Y,R19
                 __SAVELOCR3:
0012e5 932a      	ST   -Y,R18
                 __SAVELOCR2:
0012e6 931a      	ST   -Y,R17
0012e7 930a      	ST   -Y,R16
0012e8 9508      	RET
                 
                 __LOADLOCR6:
0012e9 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0012ea 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0012eb 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0012ec 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0012ed 8119      	LDD  R17,Y+1
0012ee 8108      	LD   R16,Y
0012ef 9508      	RET
                 
                 __INITLOCW:
0012f0 0fac      	ADD  R26,R28
0012f1 1fbd      	ADC  R27,R29
                 __INITLOC0:
0012f2 9005      	LPM  R0,Z+
0012f3 920d      	ST   X+,R0
0012f4 9701      	SBIW R24,1
0012f5 f7e1      	BRNE __INITLOC0
0012f6 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 126 r1 :  55 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  73 r17:  92 r18:  68 r19:  72 r20:  59 r21: 105 r22: 201 r23: 182 
r24: 116 r25:  94 r26: 367 r27: 185 r28: 108 r29:   3 r30: 893 r31: 367 
x  : 213 y  : 633 z  :  66 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  37 add   :  30 
adiw  :  54 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  74 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  78 brpl  :   9 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   4 call  : 389 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  65 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  21 cpc   :  25 cpi   : 133 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  12 inc   :   4 jmp   :  52 ld    : 161 ldd   : 289 
ldi   : 454 lds   :  32 lpm   :  17 lsl   :  14 lsr   :   4 mov   : 108 
movw  : 155 mul   :  24 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  34 pop   :  51 push  :  51 rcall :  88 
ret   : 148 reti  :   6 rjmp  : 204 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  99 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  51 sbr   :   4 
sbrc  :   5 sbrs  :  22 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 303 std   : 144 sts   :  35 sub   :   6 subi  : 120 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0025ee   8892    818   9710  131072   7.4%
[.dseg] 0x000100 0x00058e      0    142    142    4351   3.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
