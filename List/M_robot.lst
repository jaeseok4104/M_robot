
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Thu Feb 27 14:43:10 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01e5 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0878 	JMP  _hall_sensor_detection1
00000c 940c 0886 	JMP  _hall_sensor_detection2
00000e 940c 0894 	JMP  _hall_sensor_detection3
000010 940c 08a9 	JMP  _hall_sensor_detection4
000012 940c 0659 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0676 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0665 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 06a0 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 06c1 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 0000
000169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016a 0000
00016b 0000
00016c 0000
00016d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0000
000174 0000
000175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000176 0000
000177 0000
000178 0000
000179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017a 0000
00017b 0000
00017c 0000
00017d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017e 0000
00017f 0000
000180 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000181 253c
000182 3e64
000183 2500
000184 332e      	.DB  0x3C,0x25,0x64,0x3E,0x0,0x25,0x2E,0x33
000185 2c66
000186 2520
000187 332e
000188 2c66      	.DB  0x66,0x2C,0x20,0x25,0x2E,0x33,0x66,0x2C
000189 2520
00018a 332e
00018b 2c66
00018c 2520      	.DB  0x20,0x25,0x2E,0x33,0x66,0x2C,0x20,0x25
00018d 332e
00018e 0a66
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1187): warning: .cseg .db misalignment - padding zero byte
00018f 0000      	.DB  0x2E,0x33,0x66,0xA,0x0
                 _0x80003:
000190 0000
000191 0000
000192 0000
000193 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000194 0000
000195 0000
000196 0000
000197 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000198 0000
000199 0000
00019a 0000
00019b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019c 0000
00019d 0000
00019e 0000
00019f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a0 0000
0001a1 0000
0001a2 0000
0001a3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a4 0000
0001a5 0000
0001a6 0000
0001a7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a8 0000
0001a9 0000
0001aa 0000
0001ab 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ac 0000
0001ad 0000
0001ae 0000
0001af 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b0 0000
0001b1 0000
0001b2 0000
0001b3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b4 0000
0001b5 0000
0001b6 0000
0001b7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b8 0000
0001b9 0000
0001ba 0000
0001bb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001bc 0000
0001bd 0000
0001be 0000
0001bf 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c0 0000
0001c1 0000
0001c2 0000
0001c3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c4 0000
0001c5 0000
0001c6 0000
0001c7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c8 0000
0001c9 0000
0001ca 0000
0001cb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001cc 0000
0001cd 0000
0001ce 0000
0001cf 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d0 0000
0001d1 0000
0001d2 0000
0001d3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d4 0000
0001d5 0000
0001d6 0000
0001d7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001d8 4e2d
0001d9 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1208): warning: .cseg .db misalignment - padding zero byte
0001da 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1210): warning: .cseg .db misalignment - padding zero byte
0001db 0001      	.DB  0x1
                 _0x2080000:
0001dc 4e2d
0001dd 4e41
0001de 4900
0001df 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1213): warning: .cseg .db misalignment - padding zero byte
0001e0 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001e1 0001      	.DW  0x01
0001e2 058a      	.DW  __seed_G104
0001e3 03b6      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001e4 0000      	.DW  0
                 
                 __RESET:
0001e5 94f8      	CLI
0001e6 27ee      	CLR  R30
0001e7 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001e8 e0f1      	LDI  R31,1
0001e9 bff5      	OUT  MCUCR,R31
0001ea bfe5      	OUT  MCUCR,R30
0001eb 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001ed e1f8      	LDI  R31,0x18
0001ee bdf1      	OUT  WDTCR,R31
0001ef bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001f0 e08d      	LDI  R24,(14-2)+1
0001f1 e0a2      	LDI  R26,2
0001f2 27bb      	CLR  R27
                 __CLEAR_REG:
0001f3 93ed      	ST   X+,R30
0001f4 958a      	DEC  R24
0001f5 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001f6 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001f7 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001f8 e0a0      	LDI  R26,LOW(__SRAM_START)
0001f9 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001fa 93ed      	ST   X+,R30
0001fb 9701      	SBIW R24,1
0001fc f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001fd ece2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001fe e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001ff 9185      	LPM  R24,Z+
000200 9195      	LPM  R25,Z+
000201 9700      	SBIW R24,0
000202 f061      	BREQ __GLOBAL_INI_END
000203 91a5      	LPM  R26,Z+
000204 91b5      	LPM  R27,Z+
000205 9005      	LPM  R0,Z+
000206 9015      	LPM  R1,Z+
000207 01bf      	MOVW R22,R30
000208 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000209 9005      	LPM  R0,Z+
00020a 920d      	ST   X+,R0
00020b 9701      	SBIW R24,1
00020c f7e1      	BRNE __GLOBAL_INI_LOOP
00020d 01fb      	MOVW R30,R22
00020e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00020f bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000210 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000211 bfed      	OUT  SPL,R30
000212 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000213 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000214 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000215 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000216 940c 0218 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define PREDICTION 0.3
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;long int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; 0000 001B     float a_buff;
                 ; 0000 001C     float v_buff;
                 ; 0000 001D 
                 ; 0000 001E     int velocity = 0;
                 ; 0000 001F     int angularV = 0;
                 ; 0000 0020     int velocity_R = 0;
                 ; 0000 0021     int velocity_L = 0;
                 ; 0000 0022     int del_ms = 0;
                 ; 0000 0023     float del_s = 0;
                 ; 0000 0024     float diameter = 0;
                 ; 0000 0025     int d_diameter = 0;
                 ; 0000 0026 
                 ; 0000 0027     int currentRPM_R = 0;
                 ; 0000 0028     int currentRPM_L = 0;
                 ; 0000 0029     float currentV_R = 0;
                 ; 0000 002A     float currentV_L = 0;
                 ; 0000 002B     int goal_current_R = 0;
                 ; 0000 002C     int goal_current_L = 0;
                 ; 0000 002D     float goal_currentV_R = 0;
                 ; 0000 002E     float goal_currentV_L = 0;
                 ; 0000 002F 
                 ; 0000 0030 
                 ; 0000 0031     float d_velocity = 0;
                 ; 0000 0032     float d_angularV = 0;
                 ; 0000 0033     float control_time = 0;
                 ; 0000 0034     float g_velocity = 0;
                 ; 0000 0035     float g_angularV = 0;
                 ; 0000 0036 
                 ; 0000 0037     float d_x = 0;
                 ; 0000 0038     float d_y = 0;
                 ; 0000 0039     float d_angular = 0;
                 ; 0000 003A     int d_angular_circula = 0;
                 ; 0000 003B     float g_x = 0;
                 ; 0000 003C     float g_y = 0;
                 ; 0000 003D     float g_angular = 0;
                 ; 0000 003E     int g_angular_circula = 0;
                 ; 0000 003F 
                 ; 0000 0040     float TIMER1_TIME = 0;
                 ; 0000 0041     float TIMER0_TIME = 0;
                 ; 0000 0042     float TIMER0_TIME_print = 0;
                 ; 0000 0043 
                 ; 0000 0044     char rootine_test = 0;
                 ; 0000 0045     char STOP_FLAG = 0;
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048     float hall_x = 0;
                 ; 0000 0049     float hall_y = 0;
                 ; 0000 004A     float hall_angular = 0;
                 ; 0000 004B     int hall_angular_circula = 0;
                 ; 0000 004C     float hall_velocity = 0;
                 ; 0000 004D 
                 ; 0000 004E     float motorR_distance = 0;
                 ; 0000 004F     float motorL_distance = 0;
                 ; 0000 0050     float a = 0;
                 ; 0000 0051 
                 ; 0000 0052     unsigned char BUFF[500] = {0,};
                 ; 0000 0053 
                 ; 0000 0054     usart1_init(bps_115200);
000218 97ef      	SBIW R28,63
000219 97ef      	SBIW R28,63
00021a 50d2      	SUBI R29,2
                +
00021b e786     +LDI R24 , LOW ( 630 )
00021c e092     +LDI R25 , HIGH ( 630 )
                 	__GETWRN 24,25,630
00021d e0a0      	LDI  R26,LOW(0)
00021e e0b0      	LDI  R27,HIGH(0)
00021f e8ec      	LDI  R30,LOW(_0x3*2)
000220 e0f0      	LDI  R31,HIGH(_0x3*2)
000221 940e 1543 	CALL __INITLOCW
                 ;	a_buff -> Y+634
                 ;	v_buff -> Y+630
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+628
                 ;	del_ms -> Y+626
                 ;	del_s -> Y+622
                 ;	diameter -> Y+618
                 ;	d_diameter -> Y+616
                 ;	currentRPM_R -> Y+614
                 ;	currentRPM_L -> Y+612
                 ;	currentV_R -> Y+608
                 ;	currentV_L -> Y+604
                 ;	goal_current_R -> Y+602
                 ;	goal_current_L -> Y+600
                 ;	goal_currentV_R -> Y+596
                 ;	goal_currentV_L -> Y+592
                 ;	d_velocity -> Y+588
                 ;	d_angularV -> Y+584
                 ;	control_time -> Y+580
                 ;	g_velocity -> Y+576
                 ;	g_angularV -> Y+572
                 ;	d_x -> Y+568
                 ;	d_y -> Y+564
                 ;	d_angular -> Y+560
                 ;	d_angular_circula -> Y+558
                 ;	g_x -> Y+554
                 ;	g_y -> Y+550
                 ;	g_angular -> Y+546
                 ;	g_angular_circula -> Y+544
                 ;	TIMER1_TIME -> Y+540
                 ;	TIMER0_TIME -> Y+536
                 ;	TIMER0_TIME_print -> Y+532
                 ;	rootine_test -> Y+531
                 ;	STOP_FLAG -> Y+530
                 ;	hall_x -> Y+526
                 ;	hall_y -> Y+522
                 ;	hall_angular -> Y+518
                 ;	hall_angular_circula -> Y+516
                 ;	hall_velocity -> Y+512
                 ;	motorR_distance -> Y+508
                 ;	motorL_distance -> Y+504
                 ;	a -> Y+500
                 ;	BUFF -> Y+0
                +
000223 e000     +LDI R16 , LOW ( 0 )
000224 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000225 e020     +LDI R18 , LOW ( 0 )
000226 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000227 e040     +LDI R20 , LOW ( 0 )
000228 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000229 e0e7      	LDI  R30,LOW(7)
00022a e0f0      	LDI  R31,HIGH(7)
00022b 93fa      	ST   -Y,R31
00022c 93ea      	ST   -Y,R30
00022d 940e 06f8 	CALL _usart1_init
                 ; 0000 0055     usart0_init(bps_115200);
00022f e0e7      	LDI  R30,LOW(7)
000230 e0f0      	LDI  R31,HIGH(7)
000231 93fa      	ST   -Y,R31
000232 93ea      	ST   -Y,R30
000233 940e 0710 	CALL _usart0_init
                 ; 0000 0056     timer2_init();
000235 940e 0688 	CALL _timer2_init
                 ; 0000 0057     timer0_init();
000237 940e 068e 	CALL _timer0_init
                 ; 0000 0058     timer1_init();
000239 940e 0692 	CALL _timer1_init
                 ; 0000 0059     EXT_INT_init();
00023b 940e 086f 	CALL _EXT_INT_init
                 ; 0000 005A     SREG |= 0x80;
00023d 9478      	BSET 7
                 ; 0000 005B     DDRB.1 = 1;
00023e 9ab9      	SBI  0x17,1
                 ; 0000 005C     DDRB.2 = 1;
00023f 9aba      	SBI  0x17,2
                 ; 0000 005D     DDRB.3 = 1;
000240 9abb      	SBI  0x17,3
                 ; 0000 005E     delay_ms(5000);
000241 e8e8      	LDI  R30,LOW(5000)
000242 e1f3      	LDI  R31,HIGH(5000)
000243 940e 0f67 	CALL SUBOPT_0x0
                 ; 0000 005F 
                 ; 0000 0060     TIMER0_OVERFLOW = 0;
000245 940e 0f6b 	CALL SUBOPT_0x1
                 ; 0000 0061     TCNT0 = 0;
                 ; 0000 0062 
                 ; 0000 0063     while(1)
                 _0xA:
                 ; 0000 0064     {
                 ; 0000 0065         if(CHECK_GETS)
000247 91e0 0581 	LDS  R30,_CHECK_GETS
000249 30e0      	CPI  R30,0
00024a f411      	BRNE PC+3
00024b 940c 0334 	JMP _0xD
                 ; 0000 0066         {
                 ; 0000 0067             UCSR1B &= ~(1<<RXEN1);
00024d 91e0 009a 	LDS  R30,154
00024f 7eef      	ANDI R30,0xEF
000250 93e0 009a 	STS  154,R30
                 ; 0000 0068             // sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
                 ; 0000 0069             sscanf(VELOCITY_BUFF,"<%d>", &d_diameter);
000252 e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
000253 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000254 93fa      	ST   -Y,R31
000255 93ea      	ST   -Y,R30
                +
000256 e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000257 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000258 93fa      	ST   -Y,R31
000259 93ea      	ST   -Y,R30
00025a 01fe      	MOVW R30,R28
00025b 59e4      	SUBI R30,LOW(-(620))
00025c 4ffd      	SBCI R31,HIGH(-(620))
00025d 2766      	CLR  R22
00025e 2777      	CLR  R23
00025f 940e 151a 	CALL __PUTPARD1
000261 e084      	LDI  R24,4
000262 940e 0d7f 	CALL _sscanf
000264 9628      	ADIW R28,8
                 ; 0000 006A             diameter = (float)(((float)d_diameter/100)-0.06);
                +
000265 01fe     +MOVW R30 , R28
000266 59e8     +SUBI R30 , LOW ( - 616 )
000267 4ffd     +SBCI R31 , HIGH ( - 616 )
000268 9001     +LD R0 , Z +
000269 81f0     +LD R31 , Z
00026a 2de0     +MOV R30 , R0
                 	__GETW1SX 616
00026b 940e 0f72 	CALL SUBOPT_0x2
                +
00026d e0e0     +LDI R30 , LOW ( 0x42C80000 )
00026e e0f0     +LDI R31 , HIGH ( 0x42C80000 )
00026f ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000270 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000271 940e 13d1 	CALL __DIVF21
000273 01df      	MOVW R26,R30
000274 01cb      	MOVW R24,R22
                +
000275 e8ef     +LDI R30 , LOW ( 0x3D75C28F )
000276 ecf2     +LDI R31 , HIGH ( 0x3D75C28F )
000277 e765     +LDI R22 , BYTE3 ( 0x3D75C28F )
000278 e37d     +LDI R23 , BYTE4 ( 0x3D75C28F )
                 	__GETD1N 0x3D75C28F
000279 940e 0f79 	CALL SUBOPT_0x3
                +
00027b 01de     +MOVW R26 , R28
00027c 59a6     +SUBI R26 , LOW ( - 618 )
00027d 4fbd     +SBCI R27 , HIGH ( - 618 )
00027e 93ed     +ST X + , R30
00027f 93fd     +ST X + , R31
000280 936d     +ST X + , R22
000281 937c     +ST X , R23
                 	__PUTD1SX 618
                 ; 0000 006B             if(!del_ms){
                +
000282 01fe     +MOVW R30 , R28
000283 58ee     +SUBI R30 , LOW ( - 626 )
000284 4ffd     +SBCI R31 , HIGH ( - 626 )
000285 9001     +LD R0 , Z +
000286 81f0     +LD R31 , Z
000287 2de0     +MOV R30 , R0
                 	__GETW1SX 626
000288 9730      	SBIW R30,0
000289 f4b1      	BRNE _0xE
                 ; 0000 006C                 d_x = 0;
00028a e0e0      	LDI  R30,LOW(0)
                +
00028b 01de     +MOVW R26 , R28
00028c 5ca8     +SUBI R26 , LOW ( - 568 )
00028d 4fbd     +SBCI R27 , HIGH ( - 568 )
00028e 93ed     +ST X + , R30
00028f 93ed     +ST X + , R30
000290 93ed     +ST X + , R30
000291 93ec     +ST X , R30
                 	__CLRD1SX 568
                 ; 0000 006D                 d_y = 0;
                +
000292 01de     +MOVW R26 , R28
000293 5cac     +SUBI R26 , LOW ( - 564 )
000294 4fbd     +SBCI R27 , HIGH ( - 564 )
000295 93ed     +ST X + , R30
000296 93ed     +ST X + , R30
000297 93ed     +ST X + , R30
000298 93ec     +ST X , R30
                 	__CLRD1SX 564
                 ; 0000 006E                 d_angular = 0;
                +
000299 01de     +MOVW R26 , R28
00029a 5da0     +SUBI R26 , LOW ( - 560 )
00029b 4fbd     +SBCI R27 , HIGH ( - 560 )
00029c 93ed     +ST X + , R30
00029d 93ed     +ST X + , R30
00029e 93ed     +ST X + , R30
00029f 93ec     +ST X , R30
                 	__CLRD1SX 560
                 ; 0000 006F             }
                 ; 0000 0070             if((float)(MOTOR_CONT_MAX_SPEED*MOTOR_DRIVE_CEL_TIME)<diameter)
                 _0xE:
0002a0 940e 0f7e 	CALL SUBOPT_0x4
0002a2 940e 1416 	CALL __CMPF12
0002a4 f490      	BRSH _0xF
                 ; 0000 0071             {
                 ; 0000 0072                 del_s = (float)((diameter + (MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED))/MOTOR_CONT_MAX_SPEED);
0002a5 940e 0f7e 	CALL SUBOPT_0x4
0002a7 940e 0f8b 	CALL SUBOPT_0x5
                +
0002a9 01de     +MOVW R26 , R28
0002aa 59a2     +SUBI R26 , LOW ( - 622 )
0002ab 4fbd     +SBCI R27 , HIGH ( - 622 )
0002ac 93ed     +ST X + , R30
0002ad 93fd     +ST X + , R31
0002ae 936d     +ST X + , R22
0002af 937c     +ST X , R23
                 	__PUTD1SX 622
                 ; 0000 0073                 del_s -= MOTOR_DRIVE_CEL_TIME;
                +
0002b0 e0a0     +LDI R26 , LOW ( 0x3F400000 )
0002b1 e0b0     +LDI R27 , HIGH ( 0x3F400000 )
0002b2 e480     +LDI R24 , BYTE3 ( 0x3F400000 )
0002b3 e39f     +LDI R25 , BYTE4 ( 0x3F400000 )
                 	__GETD2N 0x3F400000
0002b4 940e 132c 	CALL __SUBF12
0002b6 c004      	RJMP _0x14
                 ; 0000 0074             }
                 ; 0000 0075             else del_s = (float)(((MOTOR_DRIVE_CEL_TIME*MOTOR_CONT_MAX_SPEED)+diameter)/MOTOR_CONT_MAX_SPEED);
                 _0xF:
0002b7 940e 0f7e 	CALL SUBOPT_0x4
0002b9 940e 0f8b 	CALL SUBOPT_0x5
                 _0x14:
                +
0002bb 01de     +MOVW R26 , R28
0002bc 59a2     +SUBI R26 , LOW ( - 622 )
0002bd 4fbd     +SBCI R27 , HIGH ( - 622 )
0002be 93ed     +ST X + , R30
0002bf 93fd     +ST X + , R31
0002c0 936d     +ST X + , R22
0002c1 937c     +ST X , R23
                 	__PUTD1SX 622
                 ; 0000 0076             del_ms = (int)(del_s*1000);
                +
0002c2 01de     +MOVW R26 , R28
0002c3 59a2     +SUBI R26 , LOW ( - 622 )
0002c4 4fbd     +SBCI R27 , HIGH ( - 622 )
0002c5 900d     +LD R0 , X +
0002c6 901d     +LD R1 , X +
0002c7 918d     +LD R24 , X +
0002c8 919c     +LD R25 , X
0002c9 01d0     +MOVW R26 , R0
                 	__GETD2SX 622
                +
0002ca e0e0     +LDI R30 , LOW ( 0x447A0000 )
0002cb e0f0     +LDI R31 , HIGH ( 0x447A0000 )
0002cc e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
0002cd e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
0002ce 940e 0f96 	CALL SUBOPT_0x6
                +
0002d0 01de     +MOVW R26 , R28
0002d1 58ae     +SUBI R26 , LOW ( - 626 )
0002d2 4fbd     +SBCI R27 , HIGH ( - 626 )
0002d3 93ed     +ST X + , R30
0002d4 93fc     +ST X , R31
                 	__PUTW1SX 626
                 ; 0000 0077             v_buff = MOTOR_CONT_MAX_SPEED;
0002d5 940e 0f9b 	CALL SUBOPT_0x7
                +
0002d7 01de     +MOVW R26 , R28
0002d8 58aa     +SUBI R26 , LOW ( - 630 )
0002d9 4fbd     +SBCI R27 , HIGH ( - 630 )
0002da 93ed     +ST X + , R30
0002db 93fd     +ST X + , R31
0002dc 936d     +ST X + , R22
0002dd 937c     +ST X , R23
                 	__PUTD1SX 630
                 ; 0000 0078 
                 ; 0000 0079             // v_buff = (float)velocity/1000;
                 ; 0000 007A             a_buff = (float)angularV/1000;
0002de 01f9      	MOVW R30,R18
0002df 940e 0f72 	CALL SUBOPT_0x2
                +
0002e1 e0e0     +LDI R30 , LOW ( 0x447A0000 )
0002e2 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
0002e3 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
0002e4 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
0002e5 940e 13d1 	CALL __DIVF21
                +
0002e7 01de     +MOVW R26 , R28
0002e8 58a6     +SUBI R26 , LOW ( - 634 )
0002e9 4fbd     +SBCI R27 , HIGH ( - 634 )
0002ea 93ed     +ST X + , R30
0002eb 93fd     +ST X + , R31
0002ec 936d     +ST X + , R22
0002ed 937c     +ST X , R23
                 	__PUTD1SX 634
                 ; 0000 007B 
                 ; 0000 007C             TIMER0_TIME_print = 0;
0002ee e0e0      	LDI  R30,LOW(0)
                +
0002ef 01de     +MOVW R26 , R28
0002f0 5eac     +SUBI R26 , LOW ( - 532 )
0002f1 4fbd     +SBCI R27 , HIGH ( - 532 )
0002f2 93ed     +ST X + , R30
0002f3 93ed     +ST X + , R30
0002f4 93ed     +ST X + , R30
0002f5 93ec     +ST X , R30
                 	__CLRD1SX 532
                 ; 0000 007D             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
0002f6 01fe      	MOVW R30,R28
0002f7 58ea      	SUBI R30,LOW(-(630))
0002f8 4ffd      	SBCI R31,HIGH(-(630))
0002f9 93fa      	ST   -Y,R31
0002fa 93ea      	ST   -Y,R30
0002fb 01fe      	MOVW R30,R28
0002fc 58e4      	SUBI R30,LOW(-(636))
0002fd 4ffd      	SBCI R31,HIGH(-(636))
0002fe 93fa      	ST   -Y,R31
0002ff 93ea      	ST   -Y,R30
000300 b7ed      	IN   R30,SPL
000301 b7fe      	IN   R31,SPH
000302 9731      	SBIW R30,1
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
000305 935f      	PUSH R21
000306 934f      	PUSH R20
000307 01fe      	MOVW R30,R28
000308 58e6      	SUBI R30,LOW(-(634))
000309 4ffd      	SBCI R31,HIGH(-(634))
00030a 93fa      	ST   -Y,R31
00030b 93ea      	ST   -Y,R30
00030c 940e 07a3 	CALL _Make_MSPEED
00030e 914f      	POP  R20
00030f 915f      	POP  R21
                 ; 0000 007E 
                 ; 0000 007F             oper_Disapath(velocity_R, velocity_L);
000310 935a      	ST   -Y,R21
000311 934a      	ST   -Y,R20
                +
000312 01fe     +MOVW R30 , R28
000313 58ea     +SUBI R30 , LOW ( - 630 )
000314 4ffd     +SBCI R31 , HIGH ( - 630 )
000315 9001     +LD R0 , Z +
000316 81f0     +LD R31 , Z
000317 2de0     +MOV R30 , R0
                 	__GETW1SX 630
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
00031a 940e 081b 	CALL _oper_Disapath
                 ; 0000 0080 
                 ; 0000 0081             TIMER1_TIME = 0;
00031c e0e0      	LDI  R30,LOW(0)
                +
00031d 01de     +MOVW R26 , R28
00031e 5ea4     +SUBI R26 , LOW ( - 540 )
00031f 4fbd     +SBCI R27 , HIGH ( - 540 )
000320 93ed     +ST X + , R30
000321 93ed     +ST X + , R30
000322 93ed     +ST X + , R30
000323 93ec     +ST X , R30
                 	__CLRD1SX 540
                 ; 0000 0082             TIMER1_OVERFLOW = 0;
000324 940e 0fa0 	CALL SUBOPT_0x8
                 ; 0000 0083             TCNT1L = 0;
000326 bdec      	OUT  0x2C,R30
                 ; 0000 0084 
                 ; 0000 0085             // rootine_test = 1;
                 ; 0000 0086             STOP_FLAG = 1;
000327 e0e1      	LDI  R30,LOW(1)
                +
000328 01de     +MOVW R26 , R28
000329 5eae     +SUBI R26 , LOW ( - 530 )
00032a 4fbd     +SBCI R27 , HIGH ( - 530 )
00032b 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 0087             CHECK_GETS = 0;
00032c e0e0      	LDI  R30,LOW(0)
00032d 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0000 0088             UCSR1B |=(1<<RXEN1);
00032f 91e0 009a 	LDS  R30,154
000331 61e0      	ORI  R30,0x10
000332 93e0 009a 	STS  154,R30
                 ; 0000 0089         }
                 ; 0000 008A 
                 ; 0000 008B         // if(rootine_test == 0)
                 ; 0000 008C         // {
                 ; 0000 008D         //     v_buff = 0.15;
                 ; 0000 008E         //     a_buff = 0;
                 ; 0000 008F         //     if(d_x<0.95)
                 ; 0000 0090         //     {
                 ; 0000 0091         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 0092         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 0093         //         STOP_FLAG = 1;
                 ; 0000 0094         //     }
                 ; 0000 0095         //     else{
                 ; 0000 0096         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 0097         //         if(TIMER0_TIME_print > a+2) rootine_test = 1;
                 ; 0000 0098         //         oper_Disapath(0,0);
                 ; 0000 0099         //         STOP_FLAG = 0;
                 ; 0000 009A         //     }
                 ; 0000 009B         // }
                 ; 0000 009C         // else if(rootine_test == 1)
                 ; 0000 009D         // {
                 ; 0000 009E         //     v_buff = 0;
                 ; 0000 009F         //     a_buff = -0.7;
                 ; 0000 00A0         //     if(d_angular_circula<85)
                 ; 0000 00A1         //     {
                 ; 0000 00A2         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00A3         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00A4         //         STOP_FLAG = 1;
                 ; 0000 00A5         //     }
                 ; 0000 00A6         //     else{
                 ; 0000 00A7         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00A8         //         if(TIMER0_TIME_print > a+2) rootine_test = 2;
                 ; 0000 00A9         //         oper_Disapath(0,0);
                 ; 0000 00AA         //         STOP_FLAG = 0;
                 ; 0000 00AB         //     }
                 ; 0000 00AC         // }
                 ; 0000 00AD         // else if(rootine_test == 2)
                 ; 0000 00AE         // {
                 ; 0000 00AF         //     v_buff = 0.15;
                 ; 0000 00B0         //     a_buff = 0;
                 ; 0000 00B1         //     if(d_y<0.95)
                 ; 0000 00B2         //     {
                 ; 0000 00B3         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00B4         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00B5         //         STOP_FLAG = 1;
                 ; 0000 00B6         //     }
                 ; 0000 00B7         //     else{
                 ; 0000 00B8         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00B9         //         if(TIMER0_TIME_print > a+2) rootine_test = 3;
                 ; 0000 00BA         //         oper_Disapath(0,0);
                 ; 0000 00BB         //         STOP_FLAG = 0;
                 ; 0000 00BC         //     }
                 ; 0000 00BD         // }
                 ; 0000 00BE 
                 ; 0000 00BF         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
000334 91e0 0500 	LDS  R30,_TIMER1_OVERFLOW
000336 91f0 0501 	LDS  R31,_TIMER1_OVERFLOW+1
000338 9160 0502 	LDS  R22,_TIMER1_OVERFLOW+2
00033a 9170 0503 	LDS  R23,_TIMER1_OVERFLOW+3
                +
00033c efaf     +LDI R26 , LOW ( 0xFF )
00033d e0b0     +LDI R27 , HIGH ( 0xFF )
00033e e080     +LDI R24 , BYTE3 ( 0xFF )
00033f e090     +LDI R25 , BYTE4 ( 0xFF )
                 	__GETD2N 0xFF
000340 940e 1486 	CALL __MULD12
000342 01df      	MOVW R26,R30
000343 01cb      	MOVW R24,R22
000344 b5ec      	IN   R30,0x2C
000345 e0f0      	LDI  R31,0
000346 940e 1456 	CALL __CWD1
000348 940e 143a 	CALL __ADDD12
00034a 940e 12f9 	CALL __CDF1
                +
00034c edae     +LDI R26 , LOW ( 0x3D8E38DE )
00034d e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00034e e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00034f e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
000350 940e 1383 	CALL __MULF12
                +
000352 01de     +MOVW R26 , R28
000353 5ea4     +SUBI R26 , LOW ( - 540 )
000354 4fbd     +SBCI R27 , HIGH ( - 540 )
000355 93ed     +ST X + , R30
000356 93fd     +ST X + , R31
000357 936d     +ST X + , R22
000358 937c     +ST X , R23
                 	__PUTD1SX 540
                 ; 0000 00C0 
                 ; 0000 00C1         if(del_ms<TIMER1_TIME)
                +
000359 01de     +MOVW R26 , R28
00035a 58ae     +SUBI R26 , LOW ( - 626 )
00035b 4fbd     +SBCI R27 , HIGH ( - 626 )
00035c 900d     +LD R0 , X +
00035d 91bc     +LD R27 , X
00035e 2da0     +MOV R26 , R0
                 	__GETW2SX 626
00035f 940e 145b 	CALL __CWD2
000361 940e 1521 	CALL __CDF2
000363 940e 1416 	CALL __CMPF12
000365 f4e8      	BRSH _0x11
                 ; 0000 00C2         {
                 ; 0000 00C3             oper_Disapath(0,0);
000366 e0e0      	LDI  R30,LOW(0)
000367 e0f0      	LDI  R31,HIGH(0)
000368 93fa      	ST   -Y,R31
000369 93ea      	ST   -Y,R30
00036a 93fa      	ST   -Y,R31
00036b 93ea      	ST   -Y,R30
00036c 940e 081b 	CALL _oper_Disapath
                 ; 0000 00C4             TIMER1_OVERFLOW = 0;
00036e 940e 0fa0 	CALL SUBOPT_0x8
                 ; 0000 00C5             v_buff = 0;
                +
000370 01de     +MOVW R26 , R28
000371 58aa     +SUBI R26 , LOW ( - 630 )
000372 4fbd     +SBCI R27 , HIGH ( - 630 )
000373 93ed     +ST X + , R30
000374 93ed     +ST X + , R30
000375 93ed     +ST X + , R30
000376 93ec     +ST X , R30
                 	__CLRD1SX 630
                 ; 0000 00C6             a_buff = 0;
000377 e0e0      	LDI  R30,LOW(0)
                +
000378 01de     +MOVW R26 , R28
000379 58a6     +SUBI R26 , LOW ( - 634 )
00037a 4fbd     +SBCI R27 , HIGH ( - 634 )
00037b 93ed     +ST X + , R30
00037c 93ed     +ST X + , R30
00037d 93ed     +ST X + , R30
00037e 93ec     +ST X , R30
                 	__CLRD1SX 634
                 ; 0000 00C7             STOP_FLAG = 0;
                +
00037f 01de     +MOVW R26 , R28
000380 5eae     +SUBI R26 , LOW ( - 530 )
000381 4fbd     +SBCI R27 , HIGH ( - 530 )
000382 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00C8         }
                 ; 0000 00C9         // if(goal_currentV_R==0 && goal_currentV_L==0) TIMER0_TIME_print = 0;
                 ; 0000 00CA 
                 ; 0000 00CB         delay_ms(5);
                 _0x11:
000383 940e 0faa 	CALL SUBOPT_0x9
                 ; 0000 00CC         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
000385 e0e1      	LDI  R30,LOW(1)
000386 940e 0fad 	CALL SUBOPT_0xA
                 ; 0000 00CD         delay_ms(5);
                 ; 0000 00CE         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
000388 940e 0fb7 	CALL SUBOPT_0xB
00038a 01fe      	MOVW R30,R28
00038b 5ae3      	SUBI R30,LOW(-(605))
00038c 4ffd      	SBCI R31,HIGH(-(605))
00038d 93fa      	ST   -Y,R31
00038e 93ea      	ST   -Y,R30
00038f 940e 0839 	CALL _get_RPM
                +
000391 01de     +MOVW R26 , R28
000392 59aa     +SUBI R26 , LOW ( - 614 )
000393 4fbd     +SBCI R27 , HIGH ( - 614 )
000394 93ed     +ST X + , R30
000395 93fc     +ST X , R31
                 	__PUTW1SX 614
                 ; 0000 00CF         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
000396 e0e2      	LDI  R30,LOW(2)
000397 940e 0fad 	CALL SUBOPT_0xA
                 ; 0000 00D0         delay_ms(5);
                 ; 0000 00D1         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
000399 940e 0fb7 	CALL SUBOPT_0xB
00039b 01fe      	MOVW R30,R28
00039c 5ae5      	SUBI R30,LOW(-(603))
00039d 4ffd      	SBCI R31,HIGH(-(603))
00039e 93fa      	ST   -Y,R31
00039f 93ea      	ST   -Y,R30
0003a0 940e 0839 	CALL _get_RPM
0003a2 940e 143f 	CALL __ANEGW1
                +
0003a4 01de     +MOVW R26 , R28
0003a5 59ac     +SUBI R26 , LOW ( - 612 )
0003a6 4fbd     +SBCI R27 , HIGH ( - 612 )
0003a7 93ed     +ST X + , R30
0003a8 93fc     +ST X , R31
                 	__PUTW1SX 612
                 ; 0000 00D2 
                 ; 0000 00D3         currentV_R = (float)(currentRPM_R/(60/(Pi*0.125)*Gearratio));
                +
0003a9 01fe     +MOVW R30 , R28
0003aa 59ea     +SUBI R30 , LOW ( - 614 )
0003ab 4ffd     +SBCI R31 , HIGH ( - 614 )
0003ac 9001     +LD R0 , Z +
0003ad 81f0     +LD R31 , Z
0003ae 2de0     +MOV R30 , R0
                 	__GETW1SX 614
0003af 940e 0f72 	CALL SUBOPT_0x2
0003b1 940e 0fbf 	CALL SUBOPT_0xC
                +
0003b3 01de     +MOVW R26 , R28
0003b4 5aa0     +SUBI R26 , LOW ( - 608 )
0003b5 4fbd     +SBCI R27 , HIGH ( - 608 )
0003b6 93ed     +ST X + , R30
0003b7 93fd     +ST X + , R31
0003b8 936d     +ST X + , R22
0003b9 937c     +ST X , R23
                 	__PUTD1SX 608
                 ; 0000 00D4         currentV_L = (float)(currentRPM_L/(60/(Pi*0.125)*Gearratio));
                +
0003ba 01fe     +MOVW R30 , R28
0003bb 59ec     +SUBI R30 , LOW ( - 612 )
0003bc 4ffd     +SBCI R31 , HIGH ( - 612 )
0003bd 9001     +LD R0 , Z +
0003be 81f0     +LD R31 , Z
0003bf 2de0     +MOV R30 , R0
                 	__GETW1SX 612
0003c0 940e 0f72 	CALL SUBOPT_0x2
0003c2 940e 0fbf 	CALL SUBOPT_0xC
                +
0003c4 01de     +MOVW R26 , R28
0003c5 5aa4     +SUBI R26 , LOW ( - 604 )
0003c6 4fbd     +SBCI R27 , HIGH ( - 604 )
0003c7 93ed     +ST X + , R30
0003c8 93fd     +ST X + , R31
0003c9 936d     +ST X + , R22
0003ca 937c     +ST X , R23
                 	__PUTD1SX 604
                 ; 0000 00D5 
                 ; 0000 00D6         goal_currentV_R = (float)(goal_current_R/(60/(Pi*0.125)*Gearratio));
                +
0003cb 01fe     +MOVW R30 , R28
0003cc 5ae6     +SUBI R30 , LOW ( - 602 )
0003cd 4ffd     +SBCI R31 , HIGH ( - 602 )
0003ce 9001     +LD R0 , Z +
0003cf 81f0     +LD R31 , Z
0003d0 2de0     +MOV R30 , R0
                 	__GETW1SX 602
0003d1 940e 0f72 	CALL SUBOPT_0x2
0003d3 940e 0fbf 	CALL SUBOPT_0xC
                +
0003d5 01de     +MOVW R26 , R28
0003d6 5aac     +SUBI R26 , LOW ( - 596 )
0003d7 4fbd     +SBCI R27 , HIGH ( - 596 )
0003d8 93ed     +ST X + , R30
0003d9 93fd     +ST X + , R31
0003da 936d     +ST X + , R22
0003db 937c     +ST X , R23
                 	__PUTD1SX 596
                 ; 0000 00D7         goal_currentV_L = (float)(-goal_current_L/(60/(Pi*0.125)*Gearratio));
                +
0003dc 01fe     +MOVW R30 , R28
0003dd 5ae8     +SUBI R30 , LOW ( - 600 )
0003de 4ffd     +SBCI R31 , HIGH ( - 600 )
0003df 9001     +LD R0 , Z +
0003e0 81f0     +LD R31 , Z
0003e1 2de0     +MOV R30 , R0
                 	__GETW1SX 600
0003e2 940e 143f 	CALL __ANEGW1
0003e4 940e 0f72 	CALL SUBOPT_0x2
0003e6 940e 0fbf 	CALL SUBOPT_0xC
                +
0003e8 01de     +MOVW R26 , R28
0003e9 5ba0     +SUBI R26 , LOW ( - 592 )
0003ea 4fbd     +SBCI R27 , HIGH ( - 592 )
0003eb 93ed     +ST X + , R30
0003ec 93fd     +ST X + , R31
0003ed 936d     +ST X + , R22
0003ee 937c     +ST X , R23
                 	__PUTD1SX 592
                 ; 0000 00D8 
                 ; 0000 00D9         d_velocity = (currentV_R + currentV_L)/2;
                +
0003ef 01fe     +MOVW R30 , R28
0003f0 5ae4     +SUBI R30 , LOW ( - 604 )
0003f1 4ffd     +SBCI R31 , HIGH ( - 604 )
0003f2 9001     +LD R0 , Z +
0003f3 9011     +LD R1 , Z +
0003f4 9161     +LD R22 , Z +
0003f5 8170     +LD R23 , Z
0003f6 01f0     +MOVW R30 , R0
                 	__GETD1SX 604
                +
0003f7 01de     +MOVW R26 , R28
0003f8 5aa0     +SUBI R26 , LOW ( - 608 )
0003f9 4fbd     +SBCI R27 , HIGH ( - 608 )
0003fa 900d     +LD R0 , X +
0003fb 901d     +LD R1 , X +
0003fc 918d     +LD R24 , X +
0003fd 919c     +LD R25 , X
0003fe 01d0     +MOVW R26 , R0
                 	__GETD2SX 608
0003ff 940e 0fc6 	CALL SUBOPT_0xD
                +
000401 01de     +MOVW R26 , R28
000402 5ba4     +SUBI R26 , LOW ( - 588 )
000403 4fbd     +SBCI R27 , HIGH ( - 588 )
000404 93ed     +ST X + , R30
000405 93fd     +ST X + , R31
000406 936d     +ST X + , R22
000407 937c     +ST X , R23
                 	__PUTD1SX 588
                 ; 0000 00DA         d_angularV = (currentV_R-currentV_L)/Length;
                +
000408 01de     +MOVW R26 , R28
000409 5aa4     +SUBI R26 , LOW ( - 604 )
00040a 4fbd     +SBCI R27 , HIGH ( - 604 )
00040b 900d     +LD R0 , X +
00040c 901d     +LD R1 , X +
00040d 918d     +LD R24 , X +
00040e 919c     +LD R25 , X
00040f 01d0     +MOVW R26 , R0
                 	__GETD2SX 604
                +
000410 01fe     +MOVW R30 , R28
000411 5ae0     +SUBI R30 , LOW ( - 608 )
000412 4ffd     +SBCI R31 , HIGH ( - 608 )
000413 9001     +LD R0 , Z +
000414 9011     +LD R1 , Z +
000415 9161     +LD R22 , Z +
000416 8170     +LD R23 , Z
000417 01f0     +MOVW R30 , R0
                 	__GETD1SX 608
000418 940e 0fd1 	CALL SUBOPT_0xE
                +
00041a 01de     +MOVW R26 , R28
00041b 5ba8     +SUBI R26 , LOW ( - 584 )
00041c 4fbd     +SBCI R27 , HIGH ( - 584 )
00041d 93ed     +ST X + , R30
00041e 93fd     +ST X + , R31
00041f 936d     +ST X + , R22
000420 937c     +ST X , R23
                 	__PUTD1SX 584
                 ; 0000 00DB         g_velocity = (goal_currentV_R+goal_currentV_L)/2;
                +
000421 01fe     +MOVW R30 , R28
000422 5be0     +SUBI R30 , LOW ( - 592 )
000423 4ffd     +SBCI R31 , HIGH ( - 592 )
000424 9001     +LD R0 , Z +
000425 9011     +LD R1 , Z +
000426 9161     +LD R22 , Z +
000427 8170     +LD R23 , Z
000428 01f0     +MOVW R30 , R0
                 	__GETD1SX 592
                +
000429 01de     +MOVW R26 , R28
00042a 5aac     +SUBI R26 , LOW ( - 596 )
00042b 4fbd     +SBCI R27 , HIGH ( - 596 )
00042c 900d     +LD R0 , X +
00042d 901d     +LD R1 , X +
00042e 918d     +LD R24 , X +
00042f 919c     +LD R25 , X
000430 01d0     +MOVW R26 , R0
                 	__GETD2SX 596
000431 940e 0fc6 	CALL SUBOPT_0xD
                +
000433 01de     +MOVW R26 , R28
000434 5ca0     +SUBI R26 , LOW ( - 576 )
000435 4fbd     +SBCI R27 , HIGH ( - 576 )
000436 93ed     +ST X + , R30
000437 93fd     +ST X + , R31
000438 936d     +ST X + , R22
000439 937c     +ST X , R23
                 	__PUTD1SX 576
                 ; 0000 00DC         g_angularV = (goal_currentV_R-goal_currentV_L)/Length;
                +
00043a 01de     +MOVW R26 , R28
00043b 5ba0     +SUBI R26 , LOW ( - 592 )
00043c 4fbd     +SBCI R27 , HIGH ( - 592 )
00043d 900d     +LD R0 , X +
00043e 901d     +LD R1 , X +
00043f 918d     +LD R24 , X +
000440 919c     +LD R25 , X
000441 01d0     +MOVW R26 , R0
                 	__GETD2SX 592
                +
000442 01fe     +MOVW R30 , R28
000443 5aec     +SUBI R30 , LOW ( - 596 )
000444 4ffd     +SBCI R31 , HIGH ( - 596 )
000445 9001     +LD R0 , Z +
000446 9011     +LD R1 , Z +
000447 9161     +LD R22 , Z +
000448 8170     +LD R23 , Z
000449 01f0     +MOVW R30 , R0
                 	__GETD1SX 596
00044a 940e 0fd1 	CALL SUBOPT_0xE
                +
00044c 01de     +MOVW R26 , R28
00044d 5ca4     +SUBI R26 , LOW ( - 572 )
00044e 4fbd     +SBCI R27 , HIGH ( - 572 )
00044f 93ed     +ST X + , R30
000450 93fd     +ST X + , R31
000451 936d     +ST X + , R22
000452 937c     +ST X , R23
                 	__PUTD1SX 572
                 ; 0000 00DD 
                 ; 0000 00DE         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
000453 91a0 056a 	LDS  R26,_TIMER0_OVERFLOW
000455 91b0 056b 	LDS  R27,_TIMER0_OVERFLOW+1
000457 efef      	LDI  R30,LOW(255)
000458 940e 1480 	CALL __MULB1W2U
00045a 01df      	MOVW R26,R30
00045b b7e2      	IN   R30,0x32
00045c 940e 0fdc 	CALL SUBOPT_0xF
00045e 2766      	CLR  R22
00045f 2777      	CLR  R23
000460 940e 12f9 	CALL __CDF1
                +
000462 eaae     +LDI R26 , LOW ( 0x3891A2AE )
000463 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000464 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000465 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000466 940e 1383 	CALL __MULF12
                +
000468 01de     +MOVW R26 , R28
000469 5bac     +SUBI R26 , LOW ( - 580 )
00046a 4fbd     +SBCI R27 , HIGH ( - 580 )
00046b 93ed     +ST X + , R30
00046c 93fd     +ST X + , R31
00046d 936d     +ST X + , R22
00046e 937c     +ST X , R23
                 	__PUTD1SX 580
                 ; 0000 00DF         TIMER0_OVERFLOW = 0;
00046f 940e 0f6b 	CALL SUBOPT_0x1
                 ; 0000 00E0         TCNT0 = 0;
                 ; 0000 00E1 
                 ; 0000 00E2         d_angular += control_time*d_angularV;
                +
000471 01fe     +MOVW R30 , R28
000472 5be8     +SUBI R30 , LOW ( - 584 )
000473 4ffd     +SBCI R31 , HIGH ( - 584 )
000474 9001     +LD R0 , Z +
000475 9011     +LD R1 , Z +
000476 9161     +LD R22 , Z +
000477 8170     +LD R23 , Z
000478 01f0     +MOVW R30 , R0
                 	__GETD1SX 584
000479 940e 0fe0 	CALL SUBOPT_0x10
00047b 940e 0feb 	CALL SUBOPT_0x11
00047d 940e 1333 	CALL __ADDF12
                +
00047f 01de     +MOVW R26 , R28
000480 5da0     +SUBI R26 , LOW ( - 560 )
000481 4fbd     +SBCI R27 , HIGH ( - 560 )
000482 93ed     +ST X + , R30
000483 93fd     +ST X + , R31
000484 936d     +ST X + , R22
000485 937c     +ST X , R23
                 	__PUTD1SX 560
                 ; 0000 00E3         d_x += d_velocity*control_time*cos(d_angular);
000486 940e 0ff4 	CALL SUBOPT_0x12
000488 937f      	PUSH R23
000489 936f      	PUSH R22
00048a 93ff      	PUSH R31
00048b 93ef      	PUSH R30
00048c 940e 1007 	CALL SUBOPT_0x13
00048e 940e 0e7e 	CALL _cos
000490 91af      	POP  R26
000491 91bf      	POP  R27
000492 918f      	POP  R24
000493 919f      	POP  R25
000494 940e 1383 	CALL __MULF12
                +
000496 01de     +MOVW R26 , R28
000497 5ca8     +SUBI R26 , LOW ( - 568 )
000498 4fbd     +SBCI R27 , HIGH ( - 568 )
000499 900d     +LD R0 , X +
00049a 901d     +LD R1 , X +
00049b 918d     +LD R24 , X +
00049c 919c     +LD R25 , X
00049d 01d0     +MOVW R26 , R0
                 	__GETD2SX 568
00049e 940e 1333 	CALL __ADDF12
                +
0004a0 01de     +MOVW R26 , R28
0004a1 5ca8     +SUBI R26 , LOW ( - 568 )
0004a2 4fbd     +SBCI R27 , HIGH ( - 568 )
0004a3 93ed     +ST X + , R30
0004a4 93fd     +ST X + , R31
0004a5 936d     +ST X + , R22
0004a6 937c     +ST X , R23
                 	__PUTD1SX 568
                 ; 0000 00E4         d_y += d_velocity*control_time*sin(d_angular);
0004a7 940e 0ff4 	CALL SUBOPT_0x12
0004a9 937f      	PUSH R23
0004aa 936f      	PUSH R22
0004ab 93ff      	PUSH R31
0004ac 93ef      	PUSH R30
0004ad 940e 1007 	CALL SUBOPT_0x13
0004af 940e 0df3 	CALL _sin
0004b1 91af      	POP  R26
0004b2 91bf      	POP  R27
0004b3 918f      	POP  R24
0004b4 919f      	POP  R25
0004b5 940e 1383 	CALL __MULF12
                +
0004b7 01de     +MOVW R26 , R28
0004b8 5cac     +SUBI R26 , LOW ( - 564 )
0004b9 4fbd     +SBCI R27 , HIGH ( - 564 )
0004ba 900d     +LD R0 , X +
0004bb 901d     +LD R1 , X +
0004bc 918d     +LD R24 , X +
0004bd 919c     +LD R25 , X
0004be 01d0     +MOVW R26 , R0
                 	__GETD2SX 564
0004bf 940e 1333 	CALL __ADDF12
                +
0004c1 01de     +MOVW R26 , R28
0004c2 5cac     +SUBI R26 , LOW ( - 564 )
0004c3 4fbd     +SBCI R27 , HIGH ( - 564 )
0004c4 93ed     +ST X + , R30
0004c5 93fd     +ST X + , R31
0004c6 936d     +ST X + , R22
0004c7 937c     +ST X , R23
                 	__PUTD1SX 564
                 ; 0000 00E5         d_angular_circula = (int)(d_angular*Circular);
0004c8 940e 0feb 	CALL SUBOPT_0x11
0004ca 940e 1012 	CALL SUBOPT_0x14
                +
0004cc 01de     +MOVW R26 , R28
0004cd 5da2     +SUBI R26 , LOW ( - 558 )
0004ce 4fbd     +SBCI R27 , HIGH ( - 558 )
0004cf 93ed     +ST X + , R30
0004d0 93fc     +ST X , R31
                 	__PUTW1SX 558
                 ; 0000 00E6 
                 ; 0000 00E7         g_angular += control_time*g_angularV;
                +
0004d1 01fe     +MOVW R30 , R28
0004d2 5ce4     +SUBI R30 , LOW ( - 572 )
0004d3 4ffd     +SBCI R31 , HIGH ( - 572 )
0004d4 9001     +LD R0 , Z +
0004d5 9011     +LD R1 , Z +
0004d6 9161     +LD R22 , Z +
0004d7 8170     +LD R23 , Z
0004d8 01f0     +MOVW R30 , R0
                 	__GETD1SX 572
0004d9 940e 0fe0 	CALL SUBOPT_0x10
0004db 940e 1017 	CALL SUBOPT_0x15
0004dd 940e 1333 	CALL __ADDF12
                +
0004df 01de     +MOVW R26 , R28
0004e0 5dae     +SUBI R26 , LOW ( - 546 )
0004e1 4fbd     +SBCI R27 , HIGH ( - 546 )
0004e2 93ed     +ST X + , R30
0004e3 93fd     +ST X + , R31
0004e4 936d     +ST X + , R22
0004e5 937c     +ST X , R23
                 	__PUTD1SX 546
                 ; 0000 00E8         g_x += g_velocity*control_time*cos(g_angular);
0004e6 940e 1020 	CALL SUBOPT_0x16
0004e8 937f      	PUSH R23
0004e9 936f      	PUSH R22
0004ea 93ff      	PUSH R31
0004eb 93ef      	PUSH R30
0004ec 940e 1033 	CALL SUBOPT_0x17
0004ee 940e 0e7e 	CALL _cos
0004f0 91af      	POP  R26
0004f1 91bf      	POP  R27
0004f2 918f      	POP  R24
0004f3 919f      	POP  R25
0004f4 940e 1383 	CALL __MULF12
                +
0004f6 01de     +MOVW R26 , R28
0004f7 5da6     +SUBI R26 , LOW ( - 554 )
0004f8 4fbd     +SBCI R27 , HIGH ( - 554 )
0004f9 900d     +LD R0 , X +
0004fa 901d     +LD R1 , X +
0004fb 918d     +LD R24 , X +
0004fc 919c     +LD R25 , X
0004fd 01d0     +MOVW R26 , R0
                 	__GETD2SX 554
0004fe 940e 1333 	CALL __ADDF12
                +
000500 01de     +MOVW R26 , R28
000501 5da6     +SUBI R26 , LOW ( - 554 )
000502 4fbd     +SBCI R27 , HIGH ( - 554 )
000503 93ed     +ST X + , R30
000504 93fd     +ST X + , R31
000505 936d     +ST X + , R22
000506 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 00E9         g_y += g_velocity*control_time*sin(g_angular);
000507 940e 1020 	CALL SUBOPT_0x16
000509 937f      	PUSH R23
00050a 936f      	PUSH R22
00050b 93ff      	PUSH R31
00050c 93ef      	PUSH R30
00050d 940e 1033 	CALL SUBOPT_0x17
00050f 940e 0df3 	CALL _sin
000511 91af      	POP  R26
000512 91bf      	POP  R27
000513 918f      	POP  R24
000514 919f      	POP  R25
000515 940e 1383 	CALL __MULF12
                +
000517 01de     +MOVW R26 , R28
000518 5daa     +SUBI R26 , LOW ( - 550 )
000519 4fbd     +SBCI R27 , HIGH ( - 550 )
00051a 900d     +LD R0 , X +
00051b 901d     +LD R1 , X +
00051c 918d     +LD R24 , X +
00051d 919c     +LD R25 , X
00051e 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
00051f 940e 1333 	CALL __ADDF12
                +
000521 01de     +MOVW R26 , R28
000522 5daa     +SUBI R26 , LOW ( - 550 )
000523 4fbd     +SBCI R27 , HIGH ( - 550 )
000524 93ed     +ST X + , R30
000525 93fd     +ST X + , R31
000526 936d     +ST X + , R22
000527 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 00EA         g_angular_circula = (int)(g_angular*Circular);
000528 940e 1017 	CALL SUBOPT_0x15
00052a 940e 1012 	CALL SUBOPT_0x14
                +
00052c 01de     +MOVW R26 , R28
00052d 5ea0     +SUBI R26 , LOW ( - 544 )
00052e 4fbd     +SBCI R27 , HIGH ( - 544 )
00052f 93ed     +ST X + , R30
000530 93fc     +ST X , R31
                 	__PUTW1SX 544
                 ; 0000 00EB 
                 ; 0000 00EC         // motorR_distance = (float)(MOTORR_HALL*0.1325*Pi/160);
                 ; 0000 00ED         // motorL_distance = (float)(MOTORL_HALL*0.1325*Pi/160);
                 ; 0000 00EE         motorR_distance = (float)(MOTORR_HALL*0.125*Pi/160);
000531 91e0 0582 	LDS  R30,_MOTORR_HALL
000533 91f0 0583 	LDS  R31,_MOTORR_HALL+1
000535 9160 0584 	LDS  R22,_MOTORR_HALL+2
000537 9170 0585 	LDS  R23,_MOTORR_HALL+3
000539 940e 103e 	CALL SUBOPT_0x18
                +
00053b 01de     +MOVW R26 , R28
00053c 50a4     +SUBI R26 , LOW ( - 508 )
00053d 4fbe     +SBCI R27 , HIGH ( - 508 )
00053e 93ed     +ST X + , R30
00053f 93fd     +ST X + , R31
000540 936d     +ST X + , R22
000541 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 00EF         motorL_distance = (float)(MOTORL_HALL*0.125*Pi/160);
000542 91e0 0586 	LDS  R30,_MOTORL_HALL
000544 91f0 0587 	LDS  R31,_MOTORL_HALL+1
000546 9160 0588 	LDS  R22,_MOTORL_HALL+2
000548 9170 0589 	LDS  R23,_MOTORL_HALL+3
00054a 940e 103e 	CALL SUBOPT_0x18
                +
00054c 01de     +MOVW R26 , R28
00054d 50a8     +SUBI R26 , LOW ( - 504 )
00054e 4fbe     +SBCI R27 , HIGH ( - 504 )
00054f 93ed     +ST X + , R30
000550 93fd     +ST X + , R31
000551 936d     +ST X + , R22
000552 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 00F0 
                 ; 0000 00F1         TIMER0_TIME += control_time;
                +
000553 01fe     +MOVW R30 , R28
000554 5bec     +SUBI R30 , LOW ( - 580 )
000555 4ffd     +SBCI R31 , HIGH ( - 580 )
000556 9001     +LD R0 , Z +
000557 9011     +LD R1 , Z +
000558 9161     +LD R22 , Z +
000559 8170     +LD R23 , Z
00055a 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
00055b 940e 1055 	CALL SUBOPT_0x19
00055d 940e 1333 	CALL __ADDF12
                +
00055f 01de     +MOVW R26 , R28
000560 5ea8     +SUBI R26 , LOW ( - 536 )
000561 4fbd     +SBCI R27 , HIGH ( - 536 )
000562 93ed     +ST X + , R30
000563 93fd     +ST X + , R31
000564 936d     +ST X + , R22
000565 937c     +ST X , R23
                 	__PUTD1SX 536
                 ; 0000 00F2         if(TIMER0_TIME>0.1){
000566 940e 1055 	CALL SUBOPT_0x19
000568 940e 105e 	CALL SUBOPT_0x1A
00056a 940e 1416 	CALL __CMPF12
00056c f009      	BREQ PC+2
00056d f410      	BRCC PC+3
00056e 940c 0657 	JMP  _0x12
                 ; 0000 00F3             TIMER0_TIME_print += TIMER0_TIME;
000570 940e 1063 	CALL SUBOPT_0x1B
                +
000572 01de     +MOVW R26 , R28
000573 5eac     +SUBI R26 , LOW ( - 532 )
000574 4fbd     +SBCI R27 , HIGH ( - 532 )
000575 900d     +LD R0 , X +
000576 901d     +LD R1 , X +
000577 918d     +LD R24 , X +
000578 919c     +LD R25 , X
000579 01d0     +MOVW R26 , R0
                 	__GETD2SX 532
00057a 940e 1333 	CALL __ADDF12
                +
00057c 01de     +MOVW R26 , R28
00057d 5eac     +SUBI R26 , LOW ( - 532 )
00057e 4fbd     +SBCI R27 , HIGH ( - 532 )
00057f 93ed     +ST X + , R30
000580 93fd     +ST X + , R31
000581 936d     +ST X + , R22
000582 937c     +ST X , R23
                 	__PUTD1SX 532
                 ; 0000 00F4             MOTORR_HALL = 0;
000583 e0e0      	LDI  R30,LOW(0)
000584 93e0 0582 	STS  _MOTORR_HALL,R30
000586 93e0 0583 	STS  _MOTORR_HALL+1,R30
000588 93e0 0584 	STS  _MOTORR_HALL+2,R30
00058a 93e0 0585 	STS  _MOTORR_HALL+3,R30
                 ; 0000 00F5             MOTORL_HALL = 0;
00058c 93e0 0586 	STS  _MOTORL_HALL,R30
00058e 93e0 0587 	STS  _MOTORL_HALL+1,R30
000590 93e0 0588 	STS  _MOTORL_HALL+2,R30
000592 93e0 0589 	STS  _MOTORL_HALL+3,R30
                 ; 0000 00F6 
                 ; 0000 00F7             hall_velocity = (float)((motorR_distance+motorL_distance)/(2*TIMER0_TIME));
000594 940e 106c 	CALL SUBOPT_0x1C
000596 940e 1333 	CALL __ADDF12
000598 937f      	PUSH R23
000599 936f      	PUSH R22
00059a 93ff      	PUSH R31
00059b 93ef      	PUSH R30
00059c 940e 1063 	CALL SUBOPT_0x1B
                +
00059e e0a0     +LDI R26 , LOW ( 0x40000000 )
00059f e0b0     +LDI R27 , HIGH ( 0x40000000 )
0005a0 e080     +LDI R24 , BYTE3 ( 0x40000000 )
0005a1 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0005a2 940e 1383 	CALL __MULF12
0005a4 91af      	POP  R26
0005a5 91bf      	POP  R27
0005a6 918f      	POP  R24
0005a7 919f      	POP  R25
0005a8 940e 13d1 	CALL __DIVF21
                +
0005aa 01de     +MOVW R26 , R28
0005ab 50a0     +SUBI R26 , LOW ( - 512 )
0005ac 4fbe     +SBCI R27 , HIGH ( - 512 )
0005ad 93ed     +ST X + , R30
0005ae 93fd     +ST X + , R31
0005af 936d     +ST X + , R22
0005b0 937c     +ST X , R23
                 	__PUTD1SX 512
                 ; 0000 00F8             hall_angular += (float)((motorR_distance-motorL_distance)/Length);
                +
0005b1 01de     +MOVW R26 , R28
0005b2 50a8     +SUBI R26 , LOW ( - 504 )
0005b3 4fbe     +SBCI R27 , HIGH ( - 504 )
0005b4 900d     +LD R0 , X +
0005b5 901d     +LD R1 , X +
0005b6 918d     +LD R24 , X +
0005b7 919c     +LD R25 , X
0005b8 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
                +
0005b9 01fe     +MOVW R30 , R28
0005ba 50e4     +SUBI R30 , LOW ( - 508 )
0005bb 4ffe     +SBCI R31 , HIGH ( - 508 )
0005bc 9001     +LD R0 , Z +
0005bd 9011     +LD R1 , Z +
0005be 9161     +LD R22 , Z +
0005bf 8170     +LD R23 , Z
0005c0 01f0     +MOVW R30 , R0
                 	__GETD1SX 508
0005c1 940e 0fd1 	CALL SUBOPT_0xE
0005c3 940e 107d 	CALL SUBOPT_0x1D
0005c5 940e 1333 	CALL __ADDF12
                +
0005c7 01de     +MOVW R26 , R28
0005c8 5faa     +SUBI R26 , LOW ( - 518 )
0005c9 4fbd     +SBCI R27 , HIGH ( - 518 )
0005ca 93ed     +ST X + , R30
0005cb 93fd     +ST X + , R31
0005cc 936d     +ST X + , R22
0005cd 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 00F9             hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
0005ce 940e 106c 	CALL SUBOPT_0x1C
0005d0 940e 0fc6 	CALL SUBOPT_0xD
0005d2 937f      	PUSH R23
0005d3 936f      	PUSH R22
0005d4 93ff      	PUSH R31
0005d5 93ef      	PUSH R30
0005d6 940e 1086 	CALL SUBOPT_0x1E
0005d8 940e 0e7e 	CALL _cos
0005da 91af      	POP  R26
0005db 91bf      	POP  R27
0005dc 918f      	POP  R24
0005dd 919f      	POP  R25
0005de 940e 1383 	CALL __MULF12
                +
0005e0 01de     +MOVW R26 , R28
0005e1 5fa2     +SUBI R26 , LOW ( - 526 )
0005e2 4fbd     +SBCI R27 , HIGH ( - 526 )
0005e3 900d     +LD R0 , X +
0005e4 901d     +LD R1 , X +
0005e5 918d     +LD R24 , X +
0005e6 919c     +LD R25 , X
0005e7 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
0005e8 940e 1333 	CALL __ADDF12
                +
0005ea 01de     +MOVW R26 , R28
0005eb 5fa2     +SUBI R26 , LOW ( - 526 )
0005ec 4fbd     +SBCI R27 , HIGH ( - 526 )
0005ed 93ed     +ST X + , R30
0005ee 93fd     +ST X + , R31
0005ef 936d     +ST X + , R22
0005f0 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 00FA             hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
0005f1 940e 106c 	CALL SUBOPT_0x1C
0005f3 940e 0fc6 	CALL SUBOPT_0xD
0005f5 937f      	PUSH R23
0005f6 936f      	PUSH R22
0005f7 93ff      	PUSH R31
0005f8 93ef      	PUSH R30
0005f9 940e 1086 	CALL SUBOPT_0x1E
0005fb 940e 0df3 	CALL _sin
0005fd 91af      	POP  R26
0005fe 91bf      	POP  R27
0005ff 918f      	POP  R24
000600 919f      	POP  R25
000601 940e 1383 	CALL __MULF12
                +
000603 01de     +MOVW R26 , R28
000604 5fa6     +SUBI R26 , LOW ( - 522 )
000605 4fbd     +SBCI R27 , HIGH ( - 522 )
000606 900d     +LD R0 , X +
000607 901d     +LD R1 , X +
000608 918d     +LD R24 , X +
000609 919c     +LD R25 , X
00060a 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
00060b 940e 1333 	CALL __ADDF12
                +
00060d 01de     +MOVW R26 , R28
00060e 5fa6     +SUBI R26 , LOW ( - 522 )
00060f 4fbd     +SBCI R27 , HIGH ( - 522 )
000610 93ed     +ST X + , R30
000611 93fd     +ST X + , R31
000612 936d     +ST X + , R22
000613 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 00FB             hall_angular_circula = (int)(hall_angular*Circular);
000614 940e 107d 	CALL SUBOPT_0x1D
000616 940e 1012 	CALL SUBOPT_0x14
                +
000618 01de     +MOVW R26 , R28
000619 5fac     +SUBI R26 , LOW ( - 516 )
00061a 4fbd     +SBCI R27 , HIGH ( - 516 )
00061b 93ed     +ST X + , R30
00061c 93fc     +ST X , R31
                 	__PUTW1SX 516
                 ; 0000 00FC             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 00FD             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 00FE             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 00FF             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d, %d\n", TIMER0_TIME_print, d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 0100             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d, %.3f\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula, TIMER0_TIME_print);
                 ; 0000 0101             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f \n",TIMER0_TIME_print, g_velocity, d_velocity, hall_velocity);
                 ; 0000 0102             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d\n",TIMER0_TIME_print,g_velocity, hall_velocity, g_x, hall_x, del_ms);
                 ; 0000 0103             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n",TIMER0_TIME_print,g_velocity, d_velocity, hall_velocity,);
                 ; 0000 0104 
                 ; 0000 0105             sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", TIMER0_TIME_print, g_x, hall_x, diameter);
00061d 01fe      	MOVW R30,R28
00061e 93fa      	ST   -Y,R31
00061f 93ea      	ST   -Y,R30
                +
000620 e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
000621 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
000622 93fa      	ST   -Y,R31
000623 93ea      	ST   -Y,R30
000624 940e 1063 	CALL SUBOPT_0x1B
000626 940e 151a 	CALL __PUTPARD1
                +
000628 01fe     +MOVW R30 , R28
000629 5cee     +SUBI R30 , LOW ( - 562 )
00062a 4ffd     +SBCI R31 , HIGH ( - 562 )
00062b 9001     +LD R0 , Z +
00062c 9011     +LD R1 , Z +
00062d 9161     +LD R22 , Z +
00062e 8170     +LD R23 , Z
00062f 01f0     +MOVW R30 , R0
                 	__GETD1SX 562
000630 940e 151a 	CALL __PUTPARD1
                +
000632 01fe     +MOVW R30 , R28
000633 5ee6     +SUBI R30 , LOW ( - 538 )
000634 4ffd     +SBCI R31 , HIGH ( - 538 )
000635 9001     +LD R0 , Z +
000636 9011     +LD R1 , Z +
000637 9161     +LD R22 , Z +
000638 8170     +LD R23 , Z
000639 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
00063a 940e 151a 	CALL __PUTPARD1
                +
00063c 01fe     +MOVW R30 , R28
00063d 58e6     +SUBI R30 , LOW ( - 634 )
00063e 4ffd     +SBCI R31 , HIGH ( - 634 )
00063f 9001     +LD R0 , Z +
000640 9011     +LD R1 , Z +
000641 9161     +LD R22 , Z +
000642 8170     +LD R23 , Z
000643 01f0     +MOVW R30 , R0
                 	__GETD1SX 634
000644 940e 151a 	CALL __PUTPARD1
000646 e180      	LDI  R24,16
000647 940e 0be9 	CALL _sprintf
000649 9664      	ADIW R28,20
                 ; 0000 0106             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 0107             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 0108             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 0109             //                                                   d_velocity, g_velocity, d_x, g_x, TIMER0_TIME_print);
                 ; 0000 010A             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 010B             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -_buff);
                 ; 0000 010C             puts_USART1(BUFF);
00064a 01fe      	MOVW R30,R28
00064b 93fa      	ST   -Y,R31
00064c 93ea      	ST   -Y,R30
00064d 940e 072e 	CALL _puts_USART1
                 ; 0000 010D             TIMER0_TIME = 0;
00064f e0e0      	LDI  R30,LOW(0)
                +
000650 01de     +MOVW R26 , R28
000651 5ea8     +SUBI R26 , LOW ( - 536 )
000652 4fbd     +SBCI R27 , HIGH ( - 536 )
000653 93ed     +ST X + , R30
000654 93ed     +ST X + , R30
000655 93ed     +ST X + , R30
000656 93ec     +ST X , R30
                 	__CLRD1SX 536
                 ; 0000 010E         }
                 ; 0000 010F     }
                 _0x12:
000657 cbef      	RJMP _0xA
                 ; 0000 0110 }
                 _0x13:
000658 cfff      	RJMP _0x13
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
000659 93ea      	ST   -Y,R30
00065a b7ef      	IN   R30,SREG
00065b 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
00065c 91e0 0504 	LDS  R30,_TIMER2_OVERFLOW
00065e 5fef      	SUBI R30,-LOW(1)
00065f 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
000661 91e9      	LD   R30,Y+
000662 bfef      	OUT  SREG,R30
000663 91e9      	LD   R30,Y+
000664 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
000665 93aa      	ST   -Y,R26
000666 93ba      	ST   -Y,R27
000667 93ea      	ST   -Y,R30
000668 93fa      	ST   -Y,R31
000669 b7ef      	IN   R30,SREG
00066a 93ea      	ST   -Y,R30
                 ; 0001 0010     TIMER0_OVERFLOW++;
00066b e6aa      	LDI  R26,LOW(_TIMER0_OVERFLOW)
00066c e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
00066d 940e 1091 	CALL SUBOPT_0x1F
                 ; 0001 0011 }
00066f 91e9      	LD   R30,Y+
000670 bfef      	OUT  SREG,R30
000671 91f9      	LD   R31,Y+
000672 91e9      	LD   R30,Y+
000673 91b9      	LD   R27,Y+
000674 91a9      	LD   R26,Y+
000675 9518      	RETI
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
000676 940e 1097 	CALL SUBOPT_0x20
                 ; 0001 0016     TIMER1_OVERFLOW++;
000678 e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
000679 e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
00067a 940e 10a0 	CALL SUBOPT_0x21
                 ; 0001 0017     TCNT1H = 0x00;
00067c e0e0      	LDI  R30,LOW(0)
00067d bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
00067e bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
00067f 91e9      	LD   R30,Y+
000680 bfef      	OUT  SREG,R30
000681 91f9      	LD   R31,Y+
000682 91e9      	LD   R30,Y+
000683 91b9      	LD   R27,Y+
000684 91a9      	LD   R26,Y+
000685 9179      	LD   R23,Y+
000686 9169      	LD   R22,Y+
000687 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
000688 e0ed      	LDI  R30,LOW(13)
000689 bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
00068a e2e8      	LDI  R30,LOW(40)
00068b bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
00068c e8e2      	LDI  R30,LOW(130)
00068d c010      	RJMP _0x20A0010
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
00068e e0e7      	LDI  R30,LOW(7)
00068f bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
000690 e8e1      	LDI  R30,LOW(129)
000691 c00c      	RJMP _0x20A0010
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
000692 e1ed      	LDI  R30,LOW(29)
000693 bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
000694 efef      	LDI  R30,LOW(255)
000695 e0f0      	LDI  R31,HIGH(255)
000696 bdf9      	OUT  0x28+1,R31
000697 bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
000698 ebe0      	LDI  R30,LOW(1200)
000699 e0f4      	LDI  R31,HIGH(1200)
00069a bdf7      	OUT  0x26+1,R31
00069b bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
00069c b7e7      	IN   R30,0x37
00069d 60e8      	ORI  R30,8
                 _0x20A0010:
00069e bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
00069f 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
0006a0 93aa      	ST   -Y,R26
0006a1 93ba      	ST   -Y,R27
0006a2 93ea      	ST   -Y,R30
0006a3 b7ef      	IN   R30,SREG
0006a4 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
0006a5 b5e4      	IN   R30,0x24
0006a6 31e9      	CPI  R30,LOW(0x19)
0006a7 f420      	BRSH _0x40004
0006a8 91a0 0504 	LDS  R26,_TIMER2_OVERFLOW
0006aa 30a0      	CPI  R26,LOW(0x0)
0006ab f021      	BREQ _0x40006
                 _0x40004:
0006ac 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
0006ae 30a0      	CPI  R26,LOW(0x0)
0006af f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
0006b0 940e 10a9 	CALL SUBOPT_0x22
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
0006b2 c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
0006b3 e0e0      	LDI  R30,LOW(0)
0006b4 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
0006b6 940e 10a9 	CALL SUBOPT_0x22
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
0006b8 e0e0      	LDI  R30,LOW(0)
0006b9 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
0006bb 91e9      	LD   R30,Y+
0006bc bfef      	OUT  SREG,R30
0006bd 91e9      	LD   R30,Y+
0006be 91b9      	LD   R27,Y+
0006bf 91a9      	LD   R26,Y+
0006c0 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
0006c1 93aa      	ST   -Y,R26
0006c2 93ea      	ST   -Y,R30
0006c3 93fa      	ST   -Y,R31
0006c4 b7ef      	IN   R30,SREG
0006c5 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
0006c6 931a      	ST   -Y,R17
                 ;	i -> R17
0006c7 e010      	LDI  R17,0
0006c8 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
0006ca 331c      	CPI  R17,60
0006cb f421      	BRNE _0x4000A
0006cc 91a0 0581 	LDS  R26,_CHECK_GETS
0006ce 30a0      	CPI  R26,LOW(0x0)
0006cf f009      	BREQ _0x4000B
                 _0x4000A:
0006d0 c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
0006d1 9bc3      	SBIS 0x18,3
0006d2 c002      	RJMP _0x4000C
0006d3 98c3      	CBI  0x18,3
0006d4 c001      	RJMP _0x4000D
                 _0x4000C:
0006d5 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
0006d6 e0e0      	LDI  R30,LOW(0)
0006d7 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
0006d9 c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
0006da 331e      	CPI  R17,62
0006db f421      	BRNE _0x40010
0006dc 91a0 0581 	LDS  R26,_CHECK_GETS
0006de 30a0      	CPI  R26,LOW(0x0)
0006df f009      	BREQ _0x40011
                 _0x40010:
0006e0 c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
0006e1 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
0006e3 940e 10b8 	CALL SUBOPT_0x23
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
0006e5 e0e1      	LDI  R30,LOW(1)
0006e6 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
0006e8 c008      	RJMP _0x40012
                 _0x4000F:
0006e9 91e0 0581 	LDS  R30,_CHECK_GETS
0006eb 30e0      	CPI  R30,0
0006ec f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
0006ed 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
0006ef 940e 10b8 	CALL SUBOPT_0x23
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
0006f1 9119      	LD   R17,Y+
0006f2 91e9      	LD   R30,Y+
0006f3 bfef      	OUT  SREG,R30
0006f4 91f9      	LD   R31,Y+
0006f5 91e9      	LD   R30,Y+
0006f6 91a9      	LD   R26,Y+
0006f7 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
0006f8 e0e0      	LDI  R30,LOW(0)
0006f9 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0006fb e9e8      	LDI  R30,LOW(152)
0006fc 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0006fe e0e6      	LDI  R30,LOW(6)
0006ff 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
000701 91e0 009d 	LDS  R30,157
000703 7bef      	ANDI R30,0xBF
000704 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
000706 81e8      	LD   R30,Y
000707 81f9      	LDD  R31,Y+1
000708 940e 144b 	CALL __ASRW8
00070a 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
00070c 81e8      	LD   R30,Y
00070d 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
00070f c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
000710 e0e0      	LDI  R30,LOW(0)
000711 b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
000712 e9e8      	LDI  R30,LOW(152)
000713 b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
000714 e0e6      	LDI  R30,LOW(6)
000715 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
000717 91e0 0095 	LDS  R30,149
000719 7bef      	ANDI R30,0xBF
00071a 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
00071c 81e8      	LD   R30,Y
00071d 81f9      	LDD  R31,Y+1
00071e 940e 144b 	CALL __ASRW8
000720 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
000722 81e8      	LD   R30,Y
000723 b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000F:
000724 9622      	ADIW R28,2
000725 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
000726 91e0 009b 	LDS  R30,155
000728 72e0      	ANDI R30,LOW(0x20)
000729 f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
00072a 81e8      	LD   R30,Y
00072b 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
00072d c023      	RJMP _0x20A000E
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
00072e 931a      	ST   -Y,R17
00072f 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000730 e010      	LDI  R17,0
000731 e000      	LDI  R16,0
000732 e010      	LDI  R17,LOW(0)
                 _0x40018:
000733 940e 10c2 	CALL SUBOPT_0x24
000735 30e0      	CPI  R30,0
000736 f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
000737 940e 10c2 	CALL SUBOPT_0x24
000739 93ea      	ST   -Y,R30
00073a dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
00073b 5f1f      	SUBI R17,-1
00073c cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
00073d e000      	LDI  R16,LOW(0)
                 _0x4001B:
00073e 1701      	CP   R16,R17
00073f f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
000740 81aa      	LDD  R26,Y+2
000741 81bb      	LDD  R27,Y+2+1
000742 9611      	ADIW R26,1
000743 83aa      	STD  Y+2,R26
000744 83bb      	STD  Y+2+1,R27
000745 9711      	SBIW R26,1
000746 e0e0      	LDI  R30,LOW(0)
000747 93ec      	ST   X,R30
                 ; 0002 0054     }
000748 5f0f      	SUBI R16,-1
000749 cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
00074a 8119      	LDD  R17,Y+1
00074b 8108      	LDD  R16,Y+0
00074c c0ea      	RJMP _0x20A000C
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
00074d 9b5d      	SBIS 0xB,5
00074e cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
00074f 81e8      	LD   R30,Y
000750 b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000E:
000751 9621      	ADIW R28,1
000752 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
000753 940e 1535 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
000755 ef2f     +LDI R18 , LOW ( - 1 )
000756 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
000757 81ee      	LDD  R30,Y+6
000758 81ff      	LDD  R31,Y+6+1
000759 9731      	SBIW R30,1
00075a 83ee      	STD  Y+6,R30
00075b 83ff      	STD  Y+6+1,R31
00075c 9631      	ADIW R30,1
00075d f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
00075e 85a8      	LDD  R26,Y+8
00075f 85b9      	LDD  R27,Y+8+1
000760 91ed      	LD   R30,X+
000761 87a8      	STD  Y+8,R26
000762 87b9      	STD  Y+8+1,R27
000763 e0f0      	LDI  R31,0
                +
000764 272e     +EOR R18 , R30
000765 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
000766 e000     +LDI R16 , LOW ( 0 )
000767 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
000768 3008     +CPI R16 , LOW ( 8 )
000769 e0e0     +LDI R30 , HIGH ( 8 )
00076a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00076b f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
00076c 01f9      	MOVW R30,R18
00076d 70e1      	ANDI R30,LOW(0x1)
00076e 70f0      	ANDI R31,HIGH(0x1)
00076f 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
000770 9536      	LSR  R19
000771 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
000772 2e04      	MOV  R0,R20
000773 2a05      	OR   R0,R21
000774 f021      	BREQ _0x4002D
000775 e0e1      	LDI  R30,LOW(40961)
000776 eaf0      	LDI  R31,HIGH(40961)
                +
000777 272e     +EOR R18 , R30
000778 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
000779 5f0f     +SUBI R16 , LOW ( - 1 )
00077a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00077b cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
00077c cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
00077d 01f9      	MOVW R30,R18
00077e 940e 153c 	CALL __LOADLOCR6
000780 962a      	ADIW R28,10
000781 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
000782 940e 10c9 	CALL SUBOPT_0x25
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 0083     protocol[1]=0x06;
000784 e0e6      	LDI  R30,LOW(6)
000785 940e 10d1 	CALL SUBOPT_0x26
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 0088     protocol[6]=0;
                 ; 0002 0089     protocol[7]=0;
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                 _0x4002F:
                +
000787 3028     +CPI R18 , LOW ( 8 )
000788 e0e0     +LDI R30 , HIGH ( 8 )
000789 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00078a f42c      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
00078b 940e 10f4 	CALL SUBOPT_0x27
                 ; 0002 0094     }
                +
00078d 5f2f     +SUBI R18 , LOW ( - 1 )
00078e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00078f cff7      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
000790 c00e      	RJMP _0x20A000D
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 _RTU_ReedOperate0:
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
000791 940e 10c9 	CALL SUBOPT_0x25
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
000793 e0e4      	LDI  R30,LOW(4)
000794 940e 10d1 	CALL SUBOPT_0x26
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 _0x40032:
                +
000796 3028     +CPI R18 , LOW ( 8 )
000797 e0e0     +LDI R30 , HIGH ( 8 )
000798 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000799 f42c      	BRGE _0x40033
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
00079a 940e 10f4 	CALL SUBOPT_0x27
                 ; 0002 00B0     }
                +
00079c 5f2f     +SUBI R18 , LOW ( - 1 )
00079d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00079e cff7      	RJMP _0x40032
                 _0x40033:
                 ; 0002 00B1 }
                 _0x20A000D:
00079f 940e 153e 	CALL __LOADLOCR4
0007a1 9661      	ADIW R28,17
0007a2 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
0007a3 9728      	SBIW R28,8
0007a4 940e 10fc 	CALL SUBOPT_0x28
0007a6 e0e0      	LDI  R30,LOW(0)
0007a7 83ea      	STD  Y+2,R30
0007a8 83eb      	STD  Y+3,R30
0007a9 83ec      	STD  Y+4,R30
0007aa 83ed      	STD  Y+5,R30
0007ab 83ee      	STD  Y+6,R30
0007ac 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
0007ad 940e 1100 	CALL SUBOPT_0x29
0007af 2377      	TST  R23
0007b0 f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
0007b1 940e 1105 	CALL SUBOPT_0x2A
0007b3 940e 128d 	CALL __ANEGF1
0007b5 85ac      	LDD  R26,Y+12
0007b6 85bd      	LDD  R27,Y+12+1
0007b7 940e 1501 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
0007b9 940e 1100 	CALL SUBOPT_0x29
0007bb 937f      	PUSH R23
0007bc 936f      	PUSH R22
0007bd 93ff      	PUSH R31
0007be 93ef      	PUSH R30
0007bf 940e 1105 	CALL SUBOPT_0x2A
0007c1 940e 110a 	CALL SUBOPT_0x2B
0007c3 91af      	POP  R26
0007c4 91bf      	POP  R27
0007c5 918f      	POP  R24
0007c6 919f      	POP  R25
0007c7 940e 1333 	CALL __ADDF12
0007c9 940e 1119 	CALL SUBOPT_0x2C
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
0007cb 940e 1100 	CALL SUBOPT_0x29
0007cd 937f      	PUSH R23
0007ce 936f      	PUSH R22
0007cf 93ff      	PUSH R31
0007d0 93ef      	PUSH R30
0007d1 940e 1105 	CALL SUBOPT_0x2A
0007d3 940e 110a 	CALL SUBOPT_0x2B
0007d5 91af      	POP  R26
0007d6 91bf      	POP  R27
0007d7 918f      	POP  R24
0007d8 919f      	POP  R25
0007d9 940e 0f79 	CALL SUBOPT_0x3
0007db 940e 1515 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(VelocityR*(60/(Pi*0.125)*Gearratio));
0007dd 940e 111e 	CALL SUBOPT_0x2D
0007df 940e 1123 	CALL SUBOPT_0x2E
0007e1 85aa      	LDD  R26,Y+10
0007e2 85bb      	LDD  R27,Y+10+1
0007e3 93ed      	ST   X+,R30
0007e4 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(VelocityL*(60/(Pi*0.125)*Gearratio));
0007e5 940e 1510 	CALL __GETD2S0
0007e7 940e 1123 	CALL SUBOPT_0x2E
0007e9 85a8      	LDD  R26,Y+8
0007ea 85b9      	LDD  R27,Y+8+1
0007eb 93ed      	ST   X+,R30
0007ec 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0007ed 85aa      	LDD  R26,Y+10
0007ee 85bb      	LDD  R27,Y+10+1
0007ef 940e 14f2 	CALL __GETW1P
0007f1 32ec      	CPI  R30,LOW(0x12C)
0007f2 e0a1      	LDI  R26,HIGH(0x12C)
0007f3 07fa      	CPC  R31,R26
0007f4 f434      	BRGE _0x40036
0007f5 01df      	MOVW R26,R30
0007f6 ede4      	LDI  R30,LOW(65236)
0007f7 effe      	LDI  R31,HIGH(65236)
0007f8 17ea      	CP   R30,R26
0007f9 07fb      	CPC  R31,R27
0007fa f00c      	BRLT _0x40037
                 _0x40036:
0007fb c014      	RJMP _0x40038
                 _0x40037:
0007fc 85a8      	LDD  R26,Y+8
0007fd 85b9      	LDD  R27,Y+8+1
0007fe 940e 14f2 	CALL __GETW1P
000800 32ec      	CPI  R30,LOW(0x12C)
000801 e0a1      	LDI  R26,HIGH(0x12C)
000802 07fa      	CPC  R31,R26
000803 f454      	BRGE _0x40039
000804 85a8      	LDD  R26,Y+8
000805 85b9      	LDD  R27,Y+8+1
000806 940e 14f2 	CALL __GETW1P
000808 01df      	MOVW R26,R30
000809 ede4      	LDI  R30,LOW(65236)
00080a effe      	LDI  R31,HIGH(65236)
00080b 17ea      	CP   R30,R26
00080c 07fb      	CPC  R31,R27
00080d f00c      	BRLT _0x4003A
                 _0x40039:
00080e c001      	RJMP _0x40038
                 _0x4003A:
00080f c001      	RJMP _0x4003B
                 _0x40038:
000810 c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
000811 85aa      	LDD  R26,Y+10
000812 85bb      	LDD  R27,Y+10+1
000813 940e 1128 	CALL SUBOPT_0x2F
                 ; 0002 00C4         *L_RPM = 0;
000815 85a8      	LDD  R26,Y+8
000816 85b9      	LDD  R27,Y+8+1
000817 940e 1128 	CALL SUBOPT_0x2F
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
000819 940c 09cb 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
00081b e0e1      	LDI  R30,LOW(1)
00081c 93ea      	ST   -Y,R30
00081d e7e9      	LDI  R30,LOW(121)
00081e e0f0      	LDI  R31,HIGH(121)
00081f 93fa      	ST   -Y,R31
000820 93ea      	ST   -Y,R30
000821 81ed      	LDD  R30,Y+5
000822 81fe      	LDD  R31,Y+5+1
000823 940e 112d 	CALL SUBOPT_0x30
                 ; 0002 00CB     delay_ms(5);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
000825 e0e2      	LDI  R30,LOW(2)
000826 93ea      	ST   -Y,R30
000827 e7e9      	LDI  R30,LOW(121)
000828 e0f0      	LDI  R31,HIGH(121)
000829 93fa      	ST   -Y,R31
00082a 93ea      	ST   -Y,R30
00082b 81eb      	LDD  R30,Y+3
00082c 81fc      	LDD  R31,Y+3+1
00082d 940e 143f 	CALL __ANEGW1
00082f 940e 112d 	CALL SUBOPT_0x30
                 ; 0002 00CE     delay_ms(5);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
000831 e0e1      	LDI  R30,LOW(1)
000832 940e 1132 	CALL SUBOPT_0x31
                 ; 0002 00D1     delay_ms(5);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
000834 e0e2      	LDI  R30,LOW(2)
000835 940e 1132 	CALL SUBOPT_0x31
                 ; 0002 00D4     delay_ms(5);
                 ; 0002 00D5 }
                 _0x20A000C:
000837 9624      	ADIW R28,4
000838 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 _get_RPM:
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
000839 940e 1537 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
00083b e010      	LDI  R17,0
                +
00083c e020     +LDI R18 , LOW ( 0 )
00083d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00083e 91a0 0506+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
000840 30a7      	CPI  R26,LOW(0x7)
000841 f149      	BREQ _0x4003C
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
000842 91b0 050a+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
000844 e0a0      	LDI  R26,LOW(0)
                +
000845 91e0 050b+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
000847 940e 0fdc 	CALL SUBOPT_0xF
000849 019f      	MOVW R18,R30
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
00084a 91b0 0508+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
00084c e0a0      	LDI  R26,LOW(0)
                +
00084d 91e0 0509+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
00084f 940e 0fdc 	CALL SUBOPT_0xF
000851 81ac      	LDD  R26,Y+4
000852 81bd      	LDD  R27,Y+4+1
000853 93ed      	ST   X+,R30
000854 93fc      	ST   X,R31
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
000855 e010      	LDI  R17,LOW(0)
                 _0x4003E:
000856 81ee      	LDD  R30,Y+6
000857 171e      	CP   R17,R30
000858 f450      	BRSH _0x4003F
000859 2fe1      	MOV  R30,R17
00085a e0f0      	LDI  R31,0
00085b 81af      	LDD  R26,Y+7
00085c 85b8      	LDD  R27,Y+7+1
00085d 0fae      	ADD  R26,R30
00085e 1fbf      	ADC  R27,R31
00085f e0e0      	LDI  R30,LOW(0)
000860 93ec      	ST   X,R30
000861 5f1f      	SUBI R17,-1
000862 cff3      	RJMP _0x4003E
                 _0x4003F:
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
000863 efef      	LDI  R30,LOW(65535)
000864 efff      	LDI  R31,HIGH(65535)
000865 17e2      	CP   R30,R18
000866 07f3      	CPC  R31,R19
000867 f411      	BRNE _0x40040
                +
000868 e020     +LDI R18 , LOW ( 0 )
000869 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0002 00E1         return RPM;
                 _0x40040:
00086a 01f9      	MOVW R30,R18
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 _0x4003C:
                 _0x20A000B:
00086b 940e 153e 	CALL __LOADLOCR4
00086d 9629      	ADIW R28,9
00086e 9508      	RET
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
00086f e5e5      	LDI  R30,LOW(85)
000870 bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
000871 efe0      	LDI  R30,LOW(240)
000872 bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
000873 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
000874 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
000875 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
000876 9817      	CBI  0x2,7
                 ; 0003 000C }
000877 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
000878 940e 113a 	CALL SUBOPT_0x32
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
00087a f041      	BREQ _0x6000B
00087b e8a2      	LDI  R26,LOW(_MOTORR_HALL)
00087c e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
00087d 940e 10a0 	CALL SUBOPT_0x21
00087f 9731      	SBIW R30,1
000880 4060      	SBCI R22,0
000881 4070      	SBCI R23,0
                 ; 0003 0011     else MOTORR_HALL--;
000882 c002      	RJMP _0x6000C
                 _0x6000B:
000883 940e 1143 	CALL SUBOPT_0x33
                 ; 0003 0012 }
                 _0x6000C:
000885 c037      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
000886 940e 113a 	CALL SUBOPT_0x32
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
000888 f019      	BREQ _0x6000D
000889 940e 1143 	CALL SUBOPT_0x33
                 ; 0003 0017     else MOTORR_HALL++;
00088b c007      	RJMP _0x6000E
                 _0x6000D:
00088c e8a2      	LDI  R26,LOW(_MOTORR_HALL)
00088d e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
00088e 940e 10a0 	CALL SUBOPT_0x21
000890 9731      	SBIW R30,1
000891 4060      	SBCI R22,0
000892 4070      	SBCI R23,0
                 ; 0003 0018 }
                 _0x6000E:
000893 c029      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
000894 940e 1097 	CALL SUBOPT_0x20
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
000896 e0a0      	LDI  R26,0
000897 990e      	SBIC 0x1,6
000898 e0a1      	LDI  R26,1
000899 e0e0      	LDI  R30,0
00089a 990f      	SBIC 0x1,7
00089b e0e1      	LDI  R30,1
00089c 17ea      	CP   R30,R26
00089d f019      	BREQ _0x6000F
00089e 940e 1151 	CALL SUBOPT_0x34
                 ; 0003 001D     else MOTORL_HALL++;
0008a0 c007      	RJMP _0x60010
                 _0x6000F:
0008a1 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0008a2 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0008a3 940e 10a0 	CALL SUBOPT_0x21
0008a5 9731      	SBIW R30,1
0008a6 4060      	SBCI R22,0
0008a7 4070      	SBCI R23,0
                 ; 0003 001E }
                 _0x60010:
0008a8 c014      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
0008a9 940e 1097 	CALL SUBOPT_0x20
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
0008ab e0a0      	LDI  R26,0
0008ac 990f      	SBIC 0x1,7
0008ad e0a1      	LDI  R26,1
0008ae e0e0      	LDI  R30,0
0008af 990e      	SBIC 0x1,6
0008b0 e0e1      	LDI  R30,1
0008b1 17ea      	CP   R30,R26
0008b2 f041      	BREQ _0x60011
0008b3 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0008b4 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0008b5 940e 10a0 	CALL SUBOPT_0x21
0008b7 9731      	SBIW R30,1
0008b8 4060      	SBCI R22,0
0008b9 4070      	SBCI R23,0
                 ; 0003 0023     else MOTORL_HALL--;
0008ba c002      	RJMP _0x60012
                 _0x60011:
0008bb 940e 1151 	CALL SUBOPT_0x34
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
0008bd 91e9      	LD   R30,Y+
0008be bfef      	OUT  SREG,R30
0008bf 91f9      	LD   R31,Y+
0008c0 91e9      	LD   R30,Y+
0008c1 91b9      	LD   R27,Y+
0008c2 91a9      	LD   R26,Y+
0008c3 9179      	LD   R23,Y+
0008c4 9169      	LD   R22,Y+
0008c5 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0008c6 931a      	ST   -Y,R17
0008c7 930a      	ST   -Y,R16
0008c8 81aa      	LDD  R26,Y+2
0008c9 81bb      	LDD  R27,Y+2+1
0008ca 9612      	ADIW R26,2
0008cb 940e 14f2 	CALL __GETW1P
0008cd 9730      	SBIW R30,0
0008ce f129      	BREQ _0x2000010
0008cf 81aa      	LDD  R26,Y+2
0008d0 81bb      	LDD  R27,Y+2+1
0008d1 9614      	ADIW R26,4
0008d2 940e 14f2 	CALL __GETW1P
0008d4 018f      	MOVW R16,R30
0008d5 9730      	SBIW R30,0
0008d6 f061      	BREQ _0x2000012
                +
0008d7 3002     +CPI R16 , LOW ( 2 )
0008d8 e0e0     +LDI R30 , HIGH ( 2 )
0008d9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0008da f0c0      	BRLO _0x2000013
0008db 01f8      	MOVW R30,R16
0008dc 9731      	SBIW R30,1
0008dd 018f      	MOVW R16,R30
                +
0008de 81aa     +LDD R26 , Y + 2
0008df 81bb     +LDD R27 , Y + 2 + 1
0008e0 9614     +ADIW R26 , 4
0008e1 93ed     +ST X + , R30
0008e2 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0008e3 81aa      	LDD  R26,Y+2
0008e4 81bb      	LDD  R27,Y+2+1
0008e5 9612      	ADIW R26,2
0008e6 940e 1091 	CALL SUBOPT_0x1F
0008e8 9731      	SBIW R30,1
0008e9 81ac      	LDD  R26,Y+4
0008ea 83a0      	STD  Z+0,R26
0008eb 81aa      	LDD  R26,Y+2
0008ec 81bb      	LDD  R27,Y+2+1
0008ed 940e 14f2 	CALL __GETW1P
0008ef 23ff      	TST  R31
0008f0 f012      	BRMI _0x2000014
0008f1 940e 1091 	CALL SUBOPT_0x1F
                 _0x2000014:
                 _0x2000013:
0008f3 c006      	RJMP _0x2000015
                 _0x2000010:
0008f4 81aa      	LDD  R26,Y+2
0008f5 81bb      	LDD  R27,Y+2+1
0008f6 efef      	LDI  R30,LOW(65535)
0008f7 efff      	LDI  R31,HIGH(65535)
0008f8 93ed      	ST   X+,R30
0008f9 93fc      	ST   X,R31
                 _0x2000015:
0008fa 8119      	LDD  R17,Y+1
0008fb 8108      	LDD  R16,Y+0
0008fc c346      	RJMP _0x20A0007
                 __ftoe_G100:
0008fd 9724      	SBIW R28,4
0008fe 940e 10fc 	CALL SUBOPT_0x28
000900 e8e0      	LDI  R30,LOW(128)
000901 83ea      	STD  Y+2,R30
000902 e3ef      	LDI  R30,LOW(63)
000903 83eb      	STD  Y+3,R30
000904 940e 1537 	CALL __SAVELOCR4
000906 85ee      	LDD  R30,Y+14
000907 85ff      	LDD  R31,Y+14+1
000908 3fef      	CPI  R30,LOW(0xFFFF)
000909 efaf      	LDI  R26,HIGH(0xFFFF)
00090a 07fa      	CPC  R31,R26
00090b f449      	BRNE _0x2000019
00090c 85e8      	LDD  R30,Y+8
00090d 85f9      	LDD  R31,Y+8+1
00090e 93fa      	ST   -Y,R31
00090f 93ea      	ST   -Y,R30
                +
000910 ebe0     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000911 e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000912 940e 115f 	CALL SUBOPT_0x35
000914 c0b4      	RJMP _0x20A0009
                 _0x2000019:
000915 3fef      	CPI  R30,LOW(0x7FFF)
000916 e7af      	LDI  R26,HIGH(0x7FFF)
000917 07fa      	CPC  R31,R26
000918 f449      	BRNE _0x2000018
000919 85e8      	LDD  R30,Y+8
00091a 85f9      	LDD  R31,Y+8+1
00091b 93fa      	ST   -Y,R31
00091c 93ea      	ST   -Y,R30
                +
00091d ebe1     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00091e e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00091f 940e 115f 	CALL SUBOPT_0x35
000921 c0a7      	RJMP _0x20A0009
                 _0x2000018:
000922 85ab      	LDD  R26,Y+11
000923 30a7      	CPI  R26,LOW(0x7)
000924 f010      	BRLO _0x200001B
000925 e0e6      	LDI  R30,LOW(6)
000926 87eb      	STD  Y+11,R30
                 _0x200001B:
000927 851b      	LDD  R17,Y+11
                 _0x200001C:
000928 2fe1      	MOV  R30,R17
000929 5011      	SUBI R17,1
00092a 30e0      	CPI  R30,0
00092b f019      	BREQ _0x200001E
00092c 940e 1163 	CALL SUBOPT_0x36
00092e cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00092f 85ec     +LDD R30 , Y + 12
000930 85fd     +LDD R31 , Y + 12 + 1
000931 856e     +LDD R22 , Y + 12 + 2
000932 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000933 940e 1531 	CALL __CPD10
000935 f421      	BRNE _0x200001F
000936 e030      	LDI  R19,LOW(0)
000937 940e 1163 	CALL SUBOPT_0x36
000939 c02e      	RJMP _0x2000020
                 _0x200001F:
00093a 853b      	LDD  R19,Y+11
00093b 940e 116b 	CALL SUBOPT_0x37
00093d f009      	BREQ PC+2
00093e f410      	BRCC PC+3
00093f 940c 094c 	JMP  _0x2000021
000941 940e 1163 	CALL SUBOPT_0x36
                 _0x2000022:
000943 940e 116b 	CALL SUBOPT_0x37
000945 f028      	BRLO _0x2000024
000946 940e 1176 	CALL SUBOPT_0x38
000948 940e 117b 	CALL SUBOPT_0x39
00094a cff8      	RJMP _0x2000022
                 _0x2000024:
00094b c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00094c 940e 116b 	CALL SUBOPT_0x37
00094e f440      	BRSH _0x2000028
00094f 940e 1176 	CALL SUBOPT_0x38
000951 940e 1184 	CALL SUBOPT_0x3A
000953 940e 118b 	CALL SUBOPT_0x3B
000955 5031      	SUBI R19,LOW(1)
000956 cff5      	RJMP _0x2000026
                 _0x2000028:
000957 940e 1163 	CALL SUBOPT_0x36
                 _0x2000025:
                +
000959 85ec     +LDD R30 , Y + 12
00095a 85fd     +LDD R31 , Y + 12 + 1
00095b 856e     +LDD R22 , Y + 12 + 2
00095c 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00095d 940e 1190 	CALL SUBOPT_0x3C
00095f 940e 118b 	CALL SUBOPT_0x3B
000961 940e 116b 	CALL SUBOPT_0x37
000963 f020      	BRLO _0x2000029
000964 940e 1176 	CALL SUBOPT_0x38
000966 940e 117b 	CALL SUBOPT_0x39
                 _0x2000029:
                 _0x2000020:
000968 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000969 85eb      	LDD  R30,Y+11
00096a 17e1      	CP   R30,R17
00096b f188      	BRLO _0x200002C
00096c 940e 111e 	CALL SUBOPT_0x2D
00096e 940e 1197 	CALL SUBOPT_0x3D
000970 940e 1190 	CALL SUBOPT_0x3C
000972 940e 119b 	CALL SUBOPT_0x3E
000974 940e 1119 	CALL SUBOPT_0x2C
                +
000976 81ec     +LDD R30 , Y + 4
000977 81fd     +LDD R31 , Y + 4 + 1
000978 816e     +LDD R22 , Y + 4 + 2
000979 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00097a 940e 1176 	CALL SUBOPT_0x38
00097c 940e 13d1 	CALL __DIVF21
00097e 940e 12c0 	CALL __CFD1U
000980 2f0e      	MOV  R16,R30
000981 940e 119f 	CALL SUBOPT_0x3F
000983 940e 11a6 	CALL SUBOPT_0x40
000985 27ff      	CLR  R31
000986 2766      	CLR  R22
000987 2777      	CLR  R23
000988 940e 12f9 	CALL __CDF1
00098a 940e 111e 	CALL SUBOPT_0x2D
00098c 940e 1383 	CALL __MULF12
00098e 940e 1176 	CALL SUBOPT_0x38
000990 940e 0f79 	CALL SUBOPT_0x3
000992 940e 118b 	CALL SUBOPT_0x3B
000994 2fe1      	MOV  R30,R17
000995 5f1f      	SUBI R17,-1
000996 30e0      	CPI  R30,0
000997 f689      	BRNE _0x200002A
000998 940e 119f 	CALL SUBOPT_0x3F
00099a e2ee      	LDI  R30,LOW(46)
00099b 93ec      	ST   X,R30
00099c cfcc      	RJMP _0x200002A
                 _0x200002C:
00099d 940e 11ab 	CALL SUBOPT_0x41
00099f 9731      	SBIW R30,1
0009a0 85aa      	LDD  R26,Y+10
0009a1 83a0      	STD  Z+0,R26
0009a2 3030      	CPI  R19,0
0009a3 f42c      	BRGE _0x200002E
0009a4 9531      	NEG  R19
0009a5 85a8      	LDD  R26,Y+8
0009a6 85b9      	LDD  R27,Y+8+1
0009a7 e2ed      	LDI  R30,LOW(45)
0009a8 c003      	RJMP _0x2000111
                 _0x200002E:
0009a9 85a8      	LDD  R26,Y+8
0009aa 85b9      	LDD  R27,Y+8+1
0009ab e2eb      	LDI  R30,LOW(43)
                 _0x2000111:
0009ac 93ec      	ST   X,R30
0009ad 940e 11ab 	CALL SUBOPT_0x41
0009af 940e 11ab 	CALL SUBOPT_0x41
0009b1 9731      	SBIW R30,1
0009b2 01bf      	MOVW R22,R30
0009b3 2fa3      	MOV  R26,R19
0009b4 e0ea      	LDI  R30,LOW(10)
0009b5 940e 1499 	CALL __DIVB21
0009b7 5de0      	SUBI R30,-LOW(48)
0009b8 01db      	MOVW R26,R22
0009b9 93ec      	ST   X,R30
0009ba 940e 11ab 	CALL SUBOPT_0x41
0009bc 9731      	SBIW R30,1
0009bd 01bf      	MOVW R22,R30
0009be 2fa3      	MOV  R26,R19
0009bf e0ea      	LDI  R30,LOW(10)
0009c0 940e 14c3 	CALL __MODB21
0009c2 5de0      	SUBI R30,-LOW(48)
0009c3 01db      	MOVW R26,R22
0009c4 93ec      	ST   X,R30
0009c5 85a8      	LDD  R26,Y+8
0009c6 85b9      	LDD  R27,Y+8+1
0009c7 e0e0      	LDI  R30,LOW(0)
0009c8 93ec      	ST   X,R30
                 _0x20A0009:
0009c9 940e 153e 	CALL __LOADLOCR4
                 _0x20A000A:
0009cb 9660      	ADIW R28,16
0009cc 9508      	RET
                 __print_G100:
0009cd 97ef      	SBIW R28,63
0009ce 9761      	SBIW R28,17
0009cf 940e 1535 	CALL __SAVELOCR6
0009d1 e010      	LDI  R17,0
                +
0009d2 01fe     +MOVW R30 , R28
0009d3 5ae8     +SUBI R30 , LOW ( - 88 )
0009d4 4fff     +SBCI R31 , HIGH ( - 88 )
0009d5 9001     +LD R0 , Z +
0009d6 81f0     +LD R31 , Z
0009d7 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0009d8 87e8      	STD  Y+8,R30
0009d9 87f9      	STD  Y+8+1,R31
                +
0009da 01fe     +MOVW R30 , R28
0009db 5aea     +SUBI R30 , LOW ( - 86 )
0009dc 4fff     +SBCI R31 , HIGH ( - 86 )
0009dd 9001     +LD R0 , Z +
0009de 81f0     +LD R31 , Z
0009df 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0009e0 83ee      	STD  Y+6,R30
0009e1 83ff      	STD  Y+6+1,R31
0009e2 81ae      	LDD  R26,Y+6
0009e3 81bf      	LDD  R27,Y+6+1
0009e4 940e 1128 	CALL SUBOPT_0x2F
                 _0x2000030:
0009e6 01de      	MOVW R26,R28
0009e7 5aa4      	SUBI R26,LOW(-(92))
0009e8 4fbf      	SBCI R27,HIGH(-(92))
0009e9 940e 1091 	CALL SUBOPT_0x1F
0009eb 9731      	SBIW R30,1
0009ec 91e4      	LPM  R30,Z
0009ed 2f2e      	MOV  R18,R30
0009ee 30e0      	CPI  R30,0
0009ef f411      	BRNE PC+3
0009f0 940c 0be0 	JMP _0x2000032
0009f2 2fe1      	MOV  R30,R17
0009f3 30e0      	CPI  R30,0
0009f4 f439      	BRNE _0x2000036
0009f5 3225      	CPI  R18,37
0009f6 f411      	BRNE _0x2000037
0009f7 e011      	LDI  R17,LOW(1)
0009f8 c002      	RJMP _0x2000038
                 _0x2000037:
0009f9 940e 11b1 	CALL SUBOPT_0x42
                 _0x2000038:
0009fb c1e3      	RJMP _0x2000035
                 _0x2000036:
0009fc 30e1      	CPI  R30,LOW(0x1)
0009fd f4c1      	BRNE _0x2000039
0009fe 3225      	CPI  R18,37
0009ff f419      	BRNE _0x200003A
000a00 940e 11b1 	CALL SUBOPT_0x42
000a02 c1db      	RJMP _0x2000112
                 _0x200003A:
000a03 e012      	LDI  R17,LOW(2)
000a04 e0e0      	LDI  R30,LOW(0)
000a05 8bed      	STD  Y+21,R30
000a06 e000      	LDI  R16,LOW(0)
000a07 322d      	CPI  R18,45
000a08 f411      	BRNE _0x200003B
000a09 e001      	LDI  R16,LOW(1)
000a0a c1d4      	RJMP _0x2000035
                 _0x200003B:
000a0b 322b      	CPI  R18,43
000a0c f419      	BRNE _0x200003C
000a0d e2eb      	LDI  R30,LOW(43)
000a0e 8bed      	STD  Y+21,R30
000a0f c1cf      	RJMP _0x2000035
                 _0x200003C:
000a10 3220      	CPI  R18,32
000a11 f419      	BRNE _0x200003D
000a12 e2e0      	LDI  R30,LOW(32)
000a13 8bed      	STD  Y+21,R30
000a14 c1ca      	RJMP _0x2000035
                 _0x200003D:
000a15 c002      	RJMP _0x200003E
                 _0x2000039:
000a16 30e2      	CPI  R30,LOW(0x2)
000a17 f439      	BRNE _0x200003F
                 _0x200003E:
000a18 e050      	LDI  R21,LOW(0)
000a19 e013      	LDI  R17,LOW(3)
000a1a 3320      	CPI  R18,48
000a1b f411      	BRNE _0x2000040
000a1c 6800      	ORI  R16,LOW(128)
000a1d c1c1      	RJMP _0x2000035
                 _0x2000040:
000a1e c002      	RJMP _0x2000041
                 _0x200003F:
000a1f 30e3      	CPI  R30,LOW(0x3)
000a20 f491      	BRNE _0x2000042
                 _0x2000041:
000a21 3320      	CPI  R18,48
000a22 f010      	BRLO _0x2000044
000a23 332a      	CPI  R18,58
000a24 f008      	BRLO _0x2000045
                 _0x2000044:
000a25 c007      	RJMP _0x2000043
                 _0x2000045:
000a26 e0aa      	LDI  R26,LOW(10)
000a27 9f5a      	MUL  R21,R26
000a28 2d50      	MOV  R21,R0
000a29 2fe2      	MOV  R30,R18
000a2a 53e0      	SUBI R30,LOW(48)
000a2b 0f5e      	ADD  R21,R30
000a2c c1b2      	RJMP _0x2000035
                 _0x2000043:
000a2d e040      	LDI  R20,LOW(0)
000a2e 322e      	CPI  R18,46
000a2f f411      	BRNE _0x2000046
000a30 e014      	LDI  R17,LOW(4)
000a31 c1ad      	RJMP _0x2000035
                 _0x2000046:
000a32 c00f      	RJMP _0x2000047
                 _0x2000042:
000a33 30e4      	CPI  R30,LOW(0x4)
000a34 f499      	BRNE _0x2000049
000a35 3320      	CPI  R18,48
000a36 f010      	BRLO _0x200004B
000a37 332a      	CPI  R18,58
000a38 f008      	BRLO _0x200004C
                 _0x200004B:
000a39 c008      	RJMP _0x200004A
                 _0x200004C:
000a3a 6200      	ORI  R16,LOW(32)
000a3b e0aa      	LDI  R26,LOW(10)
000a3c 9f4a      	MUL  R20,R26
000a3d 2d40      	MOV  R20,R0
000a3e 2fe2      	MOV  R30,R18
000a3f 53e0      	SUBI R30,LOW(48)
000a40 0f4e      	ADD  R20,R30
000a41 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000a42 362c      	CPI  R18,108
000a43 f419      	BRNE _0x200004D
000a44 6002      	ORI  R16,LOW(2)
000a45 e015      	LDI  R17,LOW(5)
000a46 c198      	RJMP _0x2000035
                 _0x200004D:
000a47 c004      	RJMP _0x200004E
                 _0x2000049:
000a48 30e5      	CPI  R30,LOW(0x5)
000a49 f011      	BREQ PC+3
000a4a 940c 0bdf 	JMP _0x2000035
                 _0x200004E:
000a4c 2fe2      	MOV  R30,R18
000a4d 36e3      	CPI  R30,LOW(0x63)
000a4e f459      	BRNE _0x2000053
000a4f 940e 11ba 	CALL SUBOPT_0x43
000a51 940e 11c1 	CALL SUBOPT_0x44
000a53 940e 11ba 	CALL SUBOPT_0x43
000a55 81a4      	LDD  R26,Z+4
000a56 93aa      	ST   -Y,R26
000a57 940e 11c8 	CALL SUBOPT_0x45
000a59 c184      	RJMP _0x2000054
                 _0x2000053:
000a5a 34e5      	CPI  R30,LOW(0x45)
000a5b f011      	BREQ _0x2000057
000a5c 36e5      	CPI  R30,LOW(0x65)
000a5d f409      	BRNE _0x2000058
                 _0x2000057:
000a5e c004      	RJMP _0x2000059
                 _0x2000058:
000a5f 36e6      	CPI  R30,LOW(0x66)
000a60 f011      	BREQ PC+3
000a61 940c 0aad 	JMP _0x200005A
                 _0x2000059:
000a63 01fe      	MOVW R30,R28
000a64 9676      	ADIW R30,22
000a65 87ee      	STD  Y+14,R30
000a66 87ff      	STD  Y+14+1,R31
000a67 940e 11d0 	CALL SUBOPT_0x46
000a69 940e 14f6 	CALL __GETD1P
000a6b 940e 11d7 	CALL SUBOPT_0x47
000a6d 940e 11dc 	CALL SUBOPT_0x48
000a6f 85ad      	LDD  R26,Y+13
000a70 23aa      	TST  R26
000a71 f022      	BRMI _0x200005B
000a72 89ad      	LDD  R26,Y+21
000a73 32ab      	CPI  R26,LOW(0x2B)
000a74 f049      	BREQ _0x200005D
000a75 c017      	RJMP _0x200005E
                 _0x200005B:
000a76 940e 11de 	CALL SUBOPT_0x49
000a78 940e 128d 	CALL __ANEGF1
000a7a 940e 11d7 	CALL SUBOPT_0x47
000a7c e2ed      	LDI  R30,LOW(45)
000a7d 8bed      	STD  Y+21,R30
                 _0x200005D:
000a7e ff07      	SBRS R16,7
000a7f c005      	RJMP _0x200005F
000a80 89ed      	LDD  R30,Y+21
000a81 93ea      	ST   -Y,R30
000a82 940e 11c8 	CALL SUBOPT_0x45
000a84 c008      	RJMP _0x2000060
                 _0x200005F:
000a85 85ee      	LDD  R30,Y+14
000a86 85ff      	LDD  R31,Y+14+1
000a87 9631      	ADIW R30,1
000a88 87ee      	STD  Y+14,R30
000a89 87ff      	STD  Y+14+1,R31
000a8a 9731      	SBIW R30,1
000a8b 89ad      	LDD  R26,Y+21
000a8c 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000a8d ff05      	SBRS R16,5
000a8e e046      	LDI  R20,LOW(6)
000a8f 3626      	CPI  R18,102
000a90 f461      	BRNE _0x2000062
000a91 940e 11de 	CALL SUBOPT_0x49
000a93 940e 151a 	CALL __PUTPARD1
000a95 934a      	ST   -Y,R20
000a96 89eb      	LDD  R30,Y+19
000a97 89fc      	LDD  R31,Y+19+1
000a98 93fa      	ST   -Y,R31
000a99 93ea      	ST   -Y,R30
000a9a 940e 0ecb 	CALL _ftoa
000a9c c00b      	RJMP _0x2000063
                 _0x2000062:
000a9d 940e 11de 	CALL SUBOPT_0x49
000a9f 940e 151a 	CALL __PUTPARD1
000aa1 934a      	ST   -Y,R20
000aa2 932a      	ST   -Y,R18
000aa3 89ec      	LDD  R30,Y+20
000aa4 89fd      	LDD  R31,Y+20+1
000aa5 93fa      	ST   -Y,R31
000aa6 93ea      	ST   -Y,R30
000aa7 de55      	RCALL __ftoe_G100
                 _0x2000063:
000aa8 01fe      	MOVW R30,R28
000aa9 9676      	ADIW R30,22
000aaa 940e 11e3 	CALL SUBOPT_0x4A
000aac c01e      	RJMP _0x2000064
                 _0x200005A:
000aad 37e3      	CPI  R30,LOW(0x73)
000aae f439      	BRNE _0x2000066
000aaf 940e 11dc 	CALL SUBOPT_0x48
000ab1 940e 11eb 	CALL SUBOPT_0x4B
000ab3 940e 11e3 	CALL SUBOPT_0x4A
000ab5 c00e      	RJMP _0x2000067
                 _0x2000066:
000ab6 37e0      	CPI  R30,LOW(0x70)
000ab7 f4c1      	BRNE _0x2000069
000ab8 940e 11dc 	CALL SUBOPT_0x48
000aba 940e 11eb 	CALL SUBOPT_0x4B
000abc 87ee      	STD  Y+14,R30
000abd 87ff      	STD  Y+14+1,R31
000abe 93fa      	ST   -Y,R31
000abf 93ea      	ST   -Y,R30
000ac0 940e 0ec0 	CALL _strlenf
000ac2 2f1e      	MOV  R17,R30
000ac3 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000ac4 770f      	ANDI R16,LOW(127)
000ac5 3040      	CPI  R20,0
000ac6 f011      	BREQ _0x200006B
000ac7 1741      	CP   R20,R17
000ac8 f008      	BRLO _0x200006C
                 _0x200006B:
000ac9 c001      	RJMP _0x200006A
                 _0x200006C:
000aca 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000acb e040      	LDI  R20,LOW(0)
000acc e0e0      	LDI  R30,LOW(0)
000acd 8bec      	STD  Y+20,R30
000ace e030      	LDI  R19,LOW(0)
000acf c06e      	RJMP _0x200006D
                 _0x2000069:
000ad0 36e4      	CPI  R30,LOW(0x64)
000ad1 f011      	BREQ _0x2000070
000ad2 36e9      	CPI  R30,LOW(0x69)
000ad3 f411      	BRNE _0x2000071
                 _0x2000070:
000ad4 6004      	ORI  R16,LOW(4)
000ad5 c002      	RJMP _0x2000072
                 _0x2000071:
000ad6 37e5      	CPI  R30,LOW(0x75)
000ad7 f4a1      	BRNE _0x2000073
                 _0x2000072:
000ad8 e0ea      	LDI  R30,LOW(10)
000ad9 8bec      	STD  Y+20,R30
000ada ff01      	SBRS R16,1
000adb c008      	RJMP _0x2000074
                +
000adc e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000add ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000ade e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000adf e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000ae0 940e 11f0 	CALL SUBOPT_0x4C
000ae2 e01a      	LDI  R17,LOW(10)
000ae3 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000ae4 e1e0     +LDI R30 , LOW ( 0x2710 )
000ae5 e2f7     +LDI R31 , HIGH ( 0x2710 )
000ae6 e060     +LDI R22 , BYTE3 ( 0x2710 )
000ae7 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000ae8 940e 11f0 	CALL SUBOPT_0x4C
000aea e015      	LDI  R17,LOW(5)
000aeb c01b      	RJMP _0x2000075
                 _0x2000073:
000aec 35e8      	CPI  R30,LOW(0x58)
000aed f411      	BRNE _0x2000077
000aee 6008      	ORI  R16,LOW(8)
000aef c004      	RJMP _0x2000078
                 _0x2000077:
000af0 37e8      	CPI  R30,LOW(0x78)
000af1 f011      	BREQ PC+3
000af2 940c 0bde 	JMP _0x20000B6
                 _0x2000078:
000af4 e1e0      	LDI  R30,LOW(16)
000af5 8bec      	STD  Y+20,R30
000af6 ff01      	SBRS R16,1
000af7 c008      	RJMP _0x200007A
                +
000af8 e0e0     +LDI R30 , LOW ( 0x10000000 )
000af9 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000afa e060     +LDI R22 , BYTE3 ( 0x10000000 )
000afb e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000afc 940e 11f0 	CALL SUBOPT_0x4C
000afe e018      	LDI  R17,LOW(8)
000aff c007      	RJMP _0x2000075
                 _0x200007A:
                +
000b00 e0e0     +LDI R30 , LOW ( 0x1000 )
000b01 e1f0     +LDI R31 , HIGH ( 0x1000 )
000b02 e060     +LDI R22 , BYTE3 ( 0x1000 )
000b03 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000b04 940e 11f0 	CALL SUBOPT_0x4C
000b06 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000b07 3040      	CPI  R20,0
000b08 f011      	BREQ _0x200007B
000b09 770f      	ANDI R16,LOW(127)
000b0a c001      	RJMP _0x200007C
                 _0x200007B:
000b0b e041      	LDI  R20,LOW(1)
                 _0x200007C:
000b0c ff01      	SBRS R16,1
000b0d c008      	RJMP _0x200007D
000b0e 940e 11dc 	CALL SUBOPT_0x48
000b10 940e 11d0 	CALL SUBOPT_0x46
000b12 9614      	ADIW R26,4
000b13 940e 14f6 	CALL __GETD1P
000b15 c00f      	RJMP _0x2000113
                 _0x200007D:
000b16 ff02      	SBRS R16,2
000b17 c007      	RJMP _0x200007F
000b18 940e 11dc 	CALL SUBOPT_0x48
000b1a 940e 11eb 	CALL SUBOPT_0x4B
000b1c 940e 1456 	CALL __CWD1
000b1e c006      	RJMP _0x2000113
                 _0x200007F:
000b1f 940e 11dc 	CALL SUBOPT_0x48
000b21 940e 11eb 	CALL SUBOPT_0x4B
000b23 2766      	CLR  R22
000b24 2777      	CLR  R23
                 _0x2000113:
                +
000b25 87ea     +STD Y + 10 , R30
000b26 87fb     +STD Y + 10 + 1 , R31
000b27 876c     +STD Y + 10 + 2 , R22
000b28 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000b29 ff02      	SBRS R16,2
000b2a c012      	RJMP _0x2000081
000b2b 85ad      	LDD  R26,Y+13
000b2c 23aa      	TST  R26
000b2d f442      	BRPL _0x2000082
000b2e 940e 11de 	CALL SUBOPT_0x49
000b30 940e 1443 	CALL __ANEGD1
000b32 940e 11d7 	CALL SUBOPT_0x47
000b34 e2ed      	LDI  R30,LOW(45)
000b35 8bed      	STD  Y+21,R30
                 _0x2000082:
000b36 89ed      	LDD  R30,Y+21
000b37 30e0      	CPI  R30,0
000b38 f019      	BREQ _0x2000083
000b39 5f1f      	SUBI R17,-LOW(1)
000b3a 5f4f      	SUBI R20,-LOW(1)
000b3b c001      	RJMP _0x2000084
                 _0x2000083:
000b3c 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000b3d 2f34      	MOV  R19,R20
                 _0x200006D:
000b3e fd00      	SBRC R16,0
000b3f c014      	RJMP _0x2000085
                 _0x2000086:
000b40 1715      	CP   R17,R21
000b41 f410      	BRSH _0x2000089
000b42 1735      	CP   R19,R21
000b43 f008      	BRLO _0x200008A
                 _0x2000089:
000b44 c00f      	RJMP _0x2000088
                 _0x200008A:
000b45 ff07      	SBRS R16,7
000b46 c008      	RJMP _0x200008B
000b47 ff02      	SBRS R16,2
000b48 c004      	RJMP _0x200008C
000b49 7f0b      	ANDI R16,LOW(251)
000b4a 892d      	LDD  R18,Y+21
000b4b 5011      	SUBI R17,LOW(1)
000b4c c001      	RJMP _0x200008D
                 _0x200008C:
000b4d e320      	LDI  R18,LOW(48)
                 _0x200008D:
000b4e c001      	RJMP _0x200008E
                 _0x200008B:
000b4f e220      	LDI  R18,LOW(32)
                 _0x200008E:
000b50 940e 11b1 	CALL SUBOPT_0x42
000b52 5051      	SUBI R21,LOW(1)
000b53 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000b54 1714      	CP   R17,R20
000b55 f490      	BRSH _0x2000091
000b56 6100      	ORI  R16,LOW(16)
000b57 ff02      	SBRS R16,2
000b58 c006      	RJMP _0x2000092
000b59 940e 11f5 	CALL SUBOPT_0x4D
000b5b f009      	BREQ _0x2000093
000b5c 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000b5d 5011      	SUBI R17,LOW(1)
000b5e 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000b5f e3e0      	LDI  R30,LOW(48)
000b60 93ea      	ST   -Y,R30
000b61 940e 11c8 	CALL SUBOPT_0x45
000b63 3050      	CPI  R21,0
000b64 f009      	BREQ _0x2000094
000b65 5051      	SUBI R21,LOW(1)
                 _0x2000094:
000b66 5041      	SUBI R20,LOW(1)
000b67 cfec      	RJMP _0x200008F
                 _0x2000091:
000b68 2f31      	MOV  R19,R17
000b69 89ec      	LDD  R30,Y+20
000b6a 30e0      	CPI  R30,0
000b6b f4b9      	BRNE _0x2000095
                 _0x2000096:
000b6c 3030      	CPI  R19,0
000b6d f0a1      	BREQ _0x2000098
000b6e ff03      	SBRS R16,3
000b6f c006      	RJMP _0x2000099
000b70 85ee      	LDD  R30,Y+14
000b71 85ff      	LDD  R31,Y+14+1
000b72 9125      	LPM  R18,Z+
000b73 87ee      	STD  Y+14,R30
000b74 87ff      	STD  Y+14+1,R31
000b75 c005      	RJMP _0x200009A
                 _0x2000099:
000b76 85ae      	LDD  R26,Y+14
000b77 85bf      	LDD  R27,Y+14+1
000b78 912d      	LD   R18,X+
000b79 87ae      	STD  Y+14,R26
000b7a 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000b7b 940e 11b1 	CALL SUBOPT_0x42
000b7d 3050      	CPI  R21,0
000b7e f009      	BREQ _0x200009B
000b7f 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000b80 5031      	SUBI R19,LOW(1)
000b81 cfea      	RJMP _0x2000096
                 _0x2000098:
000b82 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000b83 940e 1209 	CALL SUBOPT_0x4E
000b85 940e 149e 	CALL __DIVD21U
000b87 2f2e      	MOV  R18,R30
000b88 302a      	CPI  R18,10
000b89 f030      	BRLO _0x20000A0
000b8a ff03      	SBRS R16,3
000b8b c002      	RJMP _0x20000A1
000b8c 5c29      	SUBI R18,-LOW(55)
000b8d c001      	RJMP _0x20000A2
                 _0x20000A1:
000b8e 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000b8f c001      	RJMP _0x20000A3
                 _0x20000A0:
000b90 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000b91 fd04      	SBRC R16,4
000b92 c021      	RJMP _0x20000A5
000b93 3321      	CPI  R18,49
000b94 f460      	BRSH _0x20000A7
                +
000b95 89a8     +LDD R26 , Y + 16
000b96 89b9     +LDD R27 , Y + 16 + 1
000b97 898a     +LDD R24 , Y + 16 + 2
000b98 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000b99 30a1     +CPI R26 , LOW ( 0x1 )
000b9a e0e0     +LDI R30 , HIGH ( 0x1 )
000b9b 07be     +CPC R27 , R30
000b9c e0e0     +LDI R30 , BYTE3 ( 0x1 )
000b9d 078e     +CPC R24 , R30
000b9e e0e0     +LDI R30 , BYTE4 ( 0x1 )
000b9f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000ba0 f409      	BRNE _0x20000A6
                 _0x20000A7:
000ba1 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000ba2 1743      	CP   R20,R19
000ba3 f440      	BRSH _0x2000114
000ba4 1753      	CP   R21,R19
000ba5 f010      	BRLO _0x20000AC
000ba6 ff00      	SBRS R16,0
000ba7 c001      	RJMP _0x20000AD
                 _0x20000AC:
000ba8 c010      	RJMP _0x20000AB
                 _0x20000AD:
000ba9 e220      	LDI  R18,LOW(32)
000baa ff07      	SBRS R16,7
000bab c008      	RJMP _0x20000AE
                 _0x2000114:
000bac e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000bad 6100      	ORI  R16,LOW(16)
000bae ff02      	SBRS R16,2
000baf c004      	RJMP _0x20000AF
000bb0 940e 11f5 	CALL SUBOPT_0x4D
000bb2 f009      	BREQ _0x20000B0
000bb3 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000bb4 940e 11b1 	CALL SUBOPT_0x42
000bb6 3050      	CPI  R21,0
000bb7 f009      	BREQ _0x20000B1
000bb8 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000bb9 5031      	SUBI R19,LOW(1)
000bba 940e 1209 	CALL SUBOPT_0x4E
000bbc 940e 14cf 	CALL __MODD21U
000bbe 940e 11d7 	CALL SUBOPT_0x47
000bc0 89ec      	LDD  R30,Y+20
                +
000bc1 89a8     +LDD R26 , Y + 16
000bc2 89b9     +LDD R27 , Y + 16 + 1
000bc3 898a     +LDD R24 , Y + 16 + 2
000bc4 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000bc5 27ff      	CLR  R31
000bc6 2766      	CLR  R22
000bc7 2777      	CLR  R23
000bc8 940e 149e 	CALL __DIVD21U
000bca 940e 11f0 	CALL SUBOPT_0x4C
                +
000bcc 89e8     +LDD R30 , Y + 16
000bcd 89f9     +LDD R31 , Y + 16 + 1
000bce 896a     +LDD R22 , Y + 16 + 2
000bcf 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000bd0 940e 1531 	CALL __CPD10
000bd2 f009      	BREQ _0x200009F
000bd3 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000bd4 ff00      	SBRS R16,0
000bd5 c008      	RJMP _0x20000B2
                 _0x20000B3:
000bd6 3050      	CPI  R21,0
000bd7 f031      	BREQ _0x20000B5
000bd8 5051      	SUBI R21,LOW(1)
000bd9 e2e0      	LDI  R30,LOW(32)
000bda 93ea      	ST   -Y,R30
000bdb 940e 11c8 	CALL SUBOPT_0x45
000bdd cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x2000112:
000bde e010      	LDI  R17,LOW(0)
                 _0x2000035:
000bdf ce06      	RJMP _0x2000030
                 _0x2000032:
000be0 81ae      	LDD  R26,Y+6
000be1 81bf      	LDD  R27,Y+6+1
000be2 940e 14f2 	CALL __GETW1P
000be4 940e 153c 	CALL __LOADLOCR6
000be6 96ef      	ADIW R28,63
000be7 966f      	ADIW R28,31
000be8 9508      	RET
                 _sprintf:
000be9 92ff      	PUSH R15
000bea 2ef8      	MOV  R15,R24
000beb 9726      	SBIW R28,6
000bec 940e 1537 	CALL __SAVELOCR4
000bee 940e 1212 	CALL SUBOPT_0x4F
000bf0 9730      	SBIW R30,0
000bf1 f419      	BRNE _0x20000B7
000bf2 efef      	LDI  R30,LOW(65535)
000bf3 efff      	LDI  R31,HIGH(65535)
000bf4 c023      	RJMP _0x20A0008
                 _0x20000B7:
000bf5 01de      	MOVW R26,R28
000bf6 9616      	ADIW R26,6
000bf7 940e 1436 	CALL __ADDW2R15
000bf9 018d      	MOVW R16,R26
000bfa 940e 1212 	CALL SUBOPT_0x4F
000bfc 83ee      	STD  Y+6,R30
000bfd 83ff      	STD  Y+6+1,R31
000bfe e0e0      	LDI  R30,LOW(0)
000bff 87e8      	STD  Y+8,R30
000c00 87e9      	STD  Y+8+1,R30
000c01 01de      	MOVW R26,R28
000c02 961a      	ADIW R26,10
000c03 940e 1219 	CALL SUBOPT_0x50
000c05 93fa      	ST   -Y,R31
000c06 93ea      	ST   -Y,R30
000c07 931a      	ST   -Y,R17
000c08 930a      	ST   -Y,R16
000c09 ece6      	LDI  R30,LOW(_put_buff_G100)
000c0a e0f8      	LDI  R31,HIGH(_put_buff_G100)
000c0b 93fa      	ST   -Y,R31
000c0c 93ea      	ST   -Y,R30
000c0d 01fe      	MOVW R30,R28
000c0e 963a      	ADIW R30,10
000c0f 93fa      	ST   -Y,R31
000c10 93ea      	ST   -Y,R30
000c11 ddbb      	RCALL __print_G100
000c12 019f      	MOVW R18,R30
000c13 81ae      	LDD  R26,Y+6
000c14 81bf      	LDD  R27,Y+6+1
000c15 e0e0      	LDI  R30,LOW(0)
000c16 93ec      	ST   X,R30
000c17 01f9      	MOVW R30,R18
                 _0x20A0008:
000c18 940e 153e 	CALL __LOADLOCR4
000c1a 962a      	ADIW R28,10
000c1b 90ff      	POP  R15
000c1c 9508      	RET
                 _get_buff_G100:
000c1d 931a      	ST   -Y,R17
000c1e 81a9      	LDD  R26,Y+1
000c1f 81ba      	LDD  R27,Y+1+1
000c20 e0e0      	LDI  R30,LOW(0)
000c21 93ec      	ST   X,R30
000c22 81ab      	LDD  R26,Y+3
000c23 81bc      	LDD  R27,Y+3+1
000c24 91ec      	LD   R30,X
000c25 2f1e      	MOV  R17,R30
000c26 30e0      	CPI  R30,0
000c27 f019      	BREQ _0x20000BF
000c28 e0e0      	LDI  R30,LOW(0)
000c29 93ec      	ST   X,R30
000c2a c016      	RJMP _0x20000C0
                 _0x20000BF:
000c2b 81a9      	LDD  R26,Y+1
000c2c 81ba      	LDD  R27,Y+1+1
000c2d 9611      	ADIW R26,1
000c2e 940e 14f2 	CALL __GETW1P
000c30 9730      	SBIW R30,0
000c31 f071      	BREQ _0x20000C1
000c32 81e9      	LDD  R30,Y+1
000c33 81fa      	LDD  R31,Y+1+1
000c34 81a1      	LDD  R26,Z+1
000c35 81b2      	LDD  R27,Z+2
000c36 91ec      	LD   R30,X
000c37 2f1e      	MOV  R17,R30
000c38 30e0      	CPI  R30,0
000c39 f029      	BREQ _0x20000C2
000c3a 81a9      	LDD  R26,Y+1
000c3b 81ba      	LDD  R27,Y+1+1
000c3c 9611      	ADIW R26,1
000c3d 940e 1091 	CALL SUBOPT_0x1F
                 _0x20000C2:
000c3f c001      	RJMP _0x20000C3
                 _0x20000C1:
000c40 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000c41 2fe1      	MOV  R30,R17
000c42 8118      	LDD  R17,Y+0
                 _0x20A0007:
000c43 9625      	ADIW R28,5
000c44 9508      	RET
                 __scanf_G100:
000c45 9728      	SBIW R28,8
000c46 940e 1535 	CALL __SAVELOCR6
000c48 e0e0      	LDI  R30,LOW(0)
000c49 e0f0      	LDI  R31,HIGH(0)
000c4a 87ea      	STD  Y+10,R30
000c4b 87fb      	STD  Y+10+1,R31
000c4c 87ed      	STD  Y+13,R30
                 _0x20000C4:
000c4d 89ec      	LDD  R30,Y+20
000c4e 89fd      	LDD  R31,Y+20+1
000c4f 9631      	ADIW R30,1
000c50 8bec      	STD  Y+20,R30
000c51 8bfd      	STD  Y+20+1,R31
000c52 9731      	SBIW R30,1
000c53 91e4      	LPM  R30,Z
000c54 2f3e      	MOV  R19,R30
000c55 30e0      	CPI  R30,0
000c56 f411      	BRNE PC+3
000c57 940c 0d79 	JMP _0x20000C6
000c59 940e 121e 	CALL SUBOPT_0x51
000c5b f091      	BREQ _0x20000C7
                 _0x20000C8:
000c5c 940e 1223 	CALL SUBOPT_0x52
000c5e 2f3e      	MOV  R19,R30
000c5f 30e0      	CPI  R30,0
000c60 f019      	BREQ _0x20000CB
000c61 940e 121e 	CALL SUBOPT_0x51
000c63 f409      	BRNE _0x20000CC
                 _0x20000CB:
000c64 c007      	RJMP _0x20000CA
                 _0x20000CC:
000c65 940e 122f 	CALL SUBOPT_0x53
000c67 f41c      	BRGE _0x20000CD
000c68 efef      	LDI  R30,LOW(65535)
000c69 efff      	LDI  R31,HIGH(65535)
000c6a c110      	RJMP _0x20A0005
                 _0x20000CD:
000c6b cff0      	RJMP _0x20000C8
                 _0x20000CA:
                +
000c6c 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000c6d c10a      	RJMP _0x20000CE
                 _0x20000C7:
000c6e 3235      	CPI  R19,37
000c6f f011      	BREQ PC+3
000c70 940c 0d66 	JMP _0x20000CF
000c72 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000c73 89ec      	LDD  R30,Y+20
000c74 89fd      	LDD  R31,Y+20+1
000c75 9135      	LPM  R19,Z+
000c76 8bec      	STD  Y+20,R30
000c77 8bfd      	STD  Y+20+1,R31
000c78 3330      	CPI  R19,48
000c79 f010      	BRLO _0x20000D4
000c7a 333a      	CPI  R19,58
000c7b f008      	BRLO _0x20000D3
                 _0x20000D4:
000c7c c007      	RJMP _0x20000D2
                 _0x20000D3:
000c7d e0aa      	LDI  R26,LOW(10)
000c7e 9f5a      	MUL  R21,R26
000c7f 2d50      	MOV  R21,R0
000c80 2fe3      	MOV  R30,R19
000c81 53e0      	SUBI R30,LOW(48)
000c82 0f5e      	ADD  R21,R30
000c83 cfef      	RJMP _0x20000D0
                 _0x20000D2:
000c84 3030      	CPI  R19,0
000c85 f409      	BRNE _0x20000D6
000c86 c0f2      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000c87 940e 1223 	CALL SUBOPT_0x52
000c89 2f2e      	MOV  R18,R30
000c8a 93ea      	ST   -Y,R30
000c8b 940e 0e93 	CALL _isspace
000c8d 30e0      	CPI  R30,0
000c8e f039      	BREQ _0x20000D9
000c8f 940e 122f 	CALL SUBOPT_0x53
000c91 f41c      	BRGE _0x20000DA
000c92 efef      	LDI  R30,LOW(65535)
000c93 efff      	LDI  R31,HIGH(65535)
000c94 c0e6      	RJMP _0x20A0005
                 _0x20000DA:
000c95 cff1      	RJMP _0x20000D7
                 _0x20000D9:
000c96 3020      	CPI  R18,0
000c97 f409      	BRNE _0x20000DB
000c98 c0d7      	RJMP _0x20000DC
                 _0x20000DB:
                +
000c99 872d     +STD Y + 13 , R18
                 	__PUTBSR 18,13
000c9a 3050      	CPI  R21,0
000c9b f409      	BRNE _0x20000DD
000c9c ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000c9d e040      	LDI  R20,LOW(0)
000c9e 2fe3      	MOV  R30,R19
000c9f 36e3      	CPI  R30,LOW(0x63)
000ca0 f469      	BRNE _0x20000E1
000ca1 940e 1234 	CALL SUBOPT_0x54
000ca3 940e 1223 	CALL SUBOPT_0x52
000ca5 01d8      	MOVW R26,R16
000ca6 93ec      	ST   X,R30
000ca7 940e 122f 	CALL SUBOPT_0x53
000ca9 f41c      	BRGE _0x20000E2
000caa efef      	LDI  R30,LOW(65535)
000cab efff      	LDI  R31,HIGH(65535)
000cac c0ce      	RJMP _0x20A0005
                 _0x20000E2:
000cad c0b2      	RJMP _0x20000E0
                 _0x20000E1:
000cae 37e3      	CPI  R30,LOW(0x73)
000caf f511      	BRNE _0x20000E3
000cb0 940e 1234 	CALL SUBOPT_0x54
                 _0x20000E4:
000cb2 2fe5      	MOV  R30,R21
000cb3 5051      	SUBI R21,1
000cb4 30e0      	CPI  R30,0
000cb5 f0c1      	BREQ _0x20000E6
000cb6 940e 1223 	CALL SUBOPT_0x52
000cb8 2f3e      	MOV  R19,R30
000cb9 30e0      	CPI  R30,0
000cba f019      	BREQ _0x20000E8
000cbb 940e 121e 	CALL SUBOPT_0x51
000cbd f039      	BREQ _0x20000E7
                 _0x20000E8:
000cbe 940e 122f 	CALL SUBOPT_0x53
000cc0 f41c      	BRGE _0x20000EA
000cc1 efef      	LDI  R30,LOW(65535)
000cc2 efff      	LDI  R31,HIGH(65535)
000cc3 c0b7      	RJMP _0x20A0005
                 _0x20000EA:
000cc4 c009      	RJMP _0x20000E6
                 _0x20000E7:
000cc5 931f      	PUSH R17
000cc6 930f      	PUSH R16
                +
000cc7 5f0f     +SUBI R16 , LOW ( - 1 )
000cc8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000cc9 2fe3      	MOV  R30,R19
000cca 91af      	POP  R26
000ccb 91bf      	POP  R27
000ccc 93ec      	ST   X,R30
000ccd cfe4      	RJMP _0x20000E4
                 _0x20000E6:
000cce 01d8      	MOVW R26,R16
000ccf e0e0      	LDI  R30,LOW(0)
000cd0 93ec      	ST   X,R30
000cd1 c08e      	RJMP _0x20000E0
                 _0x20000E3:
000cd2 36ec      	CPI  R30,LOW(0x6C)
000cd3 f431      	BRNE _0x20000EC
000cd4 e041      	LDI  R20,LOW(1)
000cd5 89ec      	LDD  R30,Y+20
000cd6 89fd      	LDD  R31,Y+20+1
000cd7 9135      	LPM  R19,Z+
000cd8 8bec      	STD  Y+20,R30
000cd9 8bfd      	STD  Y+20+1,R31
                 _0x20000EC:
000cda e0e1      	LDI  R30,LOW(1)
000cdb 87ec      	STD  Y+12,R30
000cdc 2fe3      	MOV  R30,R19
000cdd 36e4      	CPI  R30,LOW(0x64)
000cde f011      	BREQ _0x20000F1
000cdf 36e9      	CPI  R30,LOW(0x69)
000ce0 f419      	BRNE _0x20000F2
                 _0x20000F1:
000ce1 e0e0      	LDI  R30,LOW(0)
000ce2 87ec      	STD  Y+12,R30
000ce3 c002      	RJMP _0x20000F3
                 _0x20000F2:
000ce4 37e5      	CPI  R30,LOW(0x75)
000ce5 f411      	BRNE _0x20000F4
                 _0x20000F3:
000ce6 e02a      	LDI  R18,LOW(10)
000ce7 c008      	RJMP _0x20000EF
                 _0x20000F4:
000ce8 37e8      	CPI  R30,LOW(0x78)
000ce9 f411      	BRNE _0x20000F5
000cea e120      	LDI  R18,LOW(16)
000ceb c004      	RJMP _0x20000EF
                 _0x20000F5:
000cec 32e5      	CPI  R30,LOW(0x25)
000ced f409      	BRNE _0x20000F8
000cee c077      	RJMP _0x20000F7
                 _0x20000F8:
000cef c089      	RJMP _0x20A0006
                 _0x20000EF:
000cf0 e0e0      	LDI  R30,LOW(0)
                +
000cf1 83ee     +STD Y + 6 , R30
000cf2 83ef     +STD Y + 6 + 1 , R30
000cf3 87e8     +STD Y + 6 + 2 , R30
000cf4 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
                 _0x20000F9:
000cf5 2fe5      	MOV  R30,R21
000cf6 5051      	SUBI R21,1
000cf7 30e0      	CPI  R30,0
000cf8 f411      	BRNE PC+3
000cf9 940c 0d40 	JMP _0x20000FB
000cfb 940e 1223 	CALL SUBOPT_0x52
000cfd 2f3e      	MOV  R19,R30
000cfe 32e1      	CPI  R30,LOW(0x21)
000cff f438      	BRSH _0x20000FC
000d00 940e 122f 	CALL SUBOPT_0x53
000d02 f41c      	BRGE _0x20000FD
000d03 efef      	LDI  R30,LOW(65535)
000d04 efff      	LDI  R31,HIGH(65535)
000d05 c075      	RJMP _0x20A0005
                 _0x20000FD:
000d06 c017      	RJMP _0x20000FE
                 _0x20000FC:
000d07 85ec      	LDD  R30,Y+12
000d08 30e0      	CPI  R30,0
000d09 f439      	BRNE _0x20000FF
000d0a 323d      	CPI  R19,45
000d0b f419      	BRNE _0x2000100
000d0c efef      	LDI  R30,LOW(255)
000d0d 87ec      	STD  Y+12,R30
000d0e cfe6      	RJMP _0x20000F9
                 _0x2000100:
000d0f e0e1      	LDI  R30,LOW(1)
000d10 87ec      	STD  Y+12,R30
                 _0x20000FF:
000d11 3120      	CPI  R18,16
000d12 f431      	BRNE _0x2000102
000d13 933a      	ST   -Y,R19
000d14 940e 0e9d 	CALL _isxdigit
000d16 30e0      	CPI  R30,0
000d17 f031      	BREQ _0x20000FE
000d18 c007      	RJMP _0x2000104
                 _0x2000102:
000d19 933a      	ST   -Y,R19
000d1a 940e 0e8b 	CALL _isdigit
000d1c 30e0      	CPI  R30,0
000d1d f411      	BRNE _0x2000105
                 _0x20000FE:
                +
000d1e 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000d1f c020      	RJMP _0x20000FB
                 _0x2000105:
                 _0x2000104:
000d20 3631      	CPI  R19,97
000d21 f010      	BRLO _0x2000106
000d22 5537      	SUBI R19,LOW(87)
000d23 c005      	RJMP _0x2000107
                 _0x2000106:
000d24 3431      	CPI  R19,65
000d25 f010      	BRLO _0x2000108
000d26 5337      	SUBI R19,LOW(55)
000d27 c001      	RJMP _0x2000109
                 _0x2000108:
000d28 5330      	SUBI R19,LOW(48)
                 _0x2000109:
                 _0x2000107:
000d29 2fe2      	MOV  R30,R18
                +
000d2a 81ae     +LDD R26 , Y + 6
000d2b 81bf     +LDD R27 , Y + 6 + 1
000d2c 8588     +LDD R24 , Y + 6 + 2
000d2d 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000d2e 27ff      	CLR  R31
000d2f 2766      	CLR  R22
000d30 2777      	CLR  R23
000d31 940e 1460 	CALL __MULD12U
000d33 01df      	MOVW R26,R30
000d34 01cb      	MOVW R24,R22
000d35 2fe3      	MOV  R30,R19
000d36 27ff      	CLR  R31
000d37 2766      	CLR  R22
000d38 2777      	CLR  R23
000d39 940e 143a 	CALL __ADDD12
                +
000d3b 83ee     +STD Y + 6 , R30
000d3c 83ff     +STD Y + 6 + 1 , R31
000d3d 8768     +STD Y + 6 + 2 , R22
000d3e 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000d3f cfb5      	RJMP _0x20000F9
                 _0x20000FB:
000d40 85ec      	LDD  R30,Y+12
                +
000d41 81ae     +LDD R26 , Y + 6
000d42 81bf     +LDD R27 , Y + 6 + 1
000d43 8588     +LDD R24 , Y + 6 + 2
000d44 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000d45 940e 1450 	CALL __CBD1
000d47 940e 1460 	CALL __MULD12U
                +
000d49 83ee     +STD Y + 6 , R30
000d4a 83ff     +STD Y + 6 + 1 , R31
000d4b 8768     +STD Y + 6 + 2 , R22
000d4c 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000d4d 3040      	CPI  R20,0
000d4e f051      	BREQ _0x200010A
000d4f 940e 1234 	CALL SUBOPT_0x54
                +
000d51 81ee     +LDD R30 , Y + 6
000d52 81ff     +LDD R31 , Y + 6 + 1
000d53 8568     +LDD R22 , Y + 6 + 2
000d54 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000d55 01d8      	MOVW R26,R16
000d56 940e 1501 	CALL __PUTDP1
000d58 c007      	RJMP _0x200010B
                 _0x200010A:
000d59 940e 1234 	CALL SUBOPT_0x54
000d5b 81ee      	LDD  R30,Y+6
000d5c 81ff      	LDD  R31,Y+6+1
000d5d 01d8      	MOVW R26,R16
000d5e 93ed      	ST   X+,R30
000d5f 93fc      	ST   X,R31
                 _0x200010B:
                 _0x20000E0:
000d60 85ea      	LDD  R30,Y+10
000d61 85fb      	LDD  R31,Y+10+1
000d62 9631      	ADIW R30,1
000d63 87ea      	STD  Y+10,R30
000d64 87fb      	STD  Y+10+1,R31
000d65 c012      	RJMP _0x200010C
                 _0x20000CF:
                 _0x20000F7:
000d66 940e 1223 	CALL SUBOPT_0x52
000d68 17e3      	CP   R30,R19
000d69 f071      	BREQ _0x200010D
000d6a 940e 122f 	CALL SUBOPT_0x53
000d6c f41c      	BRGE _0x200010E
000d6d efef      	LDI  R30,LOW(65535)
000d6e efff      	LDI  R31,HIGH(65535)
000d6f c00b      	RJMP _0x20A0005
                 _0x200010E:
                 _0x20000DC:
000d70 85ea      	LDD  R30,Y+10
000d71 85fb      	LDD  R31,Y+10+1
000d72 9730      	SBIW R30,0
000d73 f419      	BRNE _0x200010F
000d74 efef      	LDI  R30,LOW(65535)
000d75 efff      	LDI  R31,HIGH(65535)
000d76 c004      	RJMP _0x20A0005
                 _0x200010F:
000d77 c001      	RJMP _0x20000C6
                 _0x200010D:
                 _0x200010C:
                 _0x20000CE:
000d78 ced4      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000d79 85ea      	LDD  R30,Y+10
000d7a 85fb      	LDD  R31,Y+10+1
                 _0x20A0005:
000d7b 940e 153c 	CALL __LOADLOCR6
000d7d 9666      	ADIW R28,22
000d7e 9508      	RET
                 _sscanf:
000d7f 92ff      	PUSH R15
000d80 2ef8      	MOV  R15,R24
000d81 9723      	SBIW R28,3
000d82 931a      	ST   -Y,R17
000d83 930a      	ST   -Y,R16
000d84 01de      	MOVW R26,R28
000d85 9617      	ADIW R26,7
000d86 940e 1219 	CALL SUBOPT_0x50
000d88 9730      	SBIW R30,0
000d89 f419      	BRNE _0x2000110
000d8a efef      	LDI  R30,LOW(65535)
000d8b efff      	LDI  R31,HIGH(65535)
000d8c c01c      	RJMP _0x20A0004
                 _0x2000110:
000d8d 01de      	MOVW R26,R28
000d8e 9611      	ADIW R26,1
000d8f 940e 1436 	CALL __ADDW2R15
000d91 018d      	MOVW R16,R26
000d92 01de      	MOVW R26,R28
000d93 9617      	ADIW R26,7
000d94 940e 1219 	CALL SUBOPT_0x50
000d96 83eb      	STD  Y+3,R30
000d97 83fc      	STD  Y+3+1,R31
000d98 01de      	MOVW R26,R28
000d99 9615      	ADIW R26,5
000d9a 940e 1219 	CALL SUBOPT_0x50
000d9c 93fa      	ST   -Y,R31
000d9d 93ea      	ST   -Y,R30
000d9e 931a      	ST   -Y,R17
000d9f 930a      	ST   -Y,R16
000da0 e1ed      	LDI  R30,LOW(_get_buff_G100)
000da1 e0fc      	LDI  R31,HIGH(_get_buff_G100)
000da2 93fa      	ST   -Y,R31
000da3 93ea      	ST   -Y,R30
000da4 01fe      	MOVW R30,R28
000da5 9638      	ADIW R30,8
000da6 93fa      	ST   -Y,R31
000da7 93ea      	ST   -Y,R30
000da8 de9c      	RCALL __scanf_G100
                 _0x20A0004:
000da9 8119      	LDD  R17,Y+1
000daa 8108      	LDD  R16,Y+0
000dab 9625      	ADIW R28,5
000dac 90ff      	POP  R15
000dad 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000dae 817b         ldd  r23,y+3
000daf 816a         ldd  r22,y+2
000db0 81f9         ldd  r31,y+1
000db1 81e8         ld   r30,y
000db2 fb77         bst  r23,7
000db3 0f77         lsl  r23
000db4 fd67         sbrc r22,7
000db5 6071         sbr  r23,1
000db6 2f97         mov  r25,r23
000db7 579e         subi r25,0x7e
000db8 f081         breq __ftrunc0
000db9 f078         brcs __ftrunc0
000dba 3198         cpi  r25,24
000dbb f490         brsh __ftrunc1
000dbc 27aa         clr  r26
000dbd 27bb         clr  r27
000dbe 2788         clr  r24
                 __ftrunc2:
000dbf 9408         sec
000dc0 9587         ror  r24
000dc1 95b7         ror  r27
000dc2 95a7         ror  r26
000dc3 959a         dec  r25
000dc4 f7d1         brne __ftrunc2
000dc5 23ea         and  r30,r26
000dc6 23fb         and  r31,r27
000dc7 2368         and  r22,r24
000dc8 c005         rjmp __ftrunc1
                 __ftrunc0:
000dc9 94e8         clt
000dca 2777         clr  r23
000dcb 27ee         clr  r30
000dcc 27ff         clr  r31
000dcd 2766         clr  r22
                 __ftrunc1:
000dce 776f         cbr  r22,0x80
000dcf 9576         lsr  r23
000dd0 f408         brcc __ftrunc3
000dd1 6860         sbr  r22,0x80
                 __ftrunc3:
000dd2 f977         bld  r23,7
000dd3 91a9         ld   r26,y+
000dd4 91b9         ld   r27,y+
000dd5 9189         ld   r24,y+
000dd6 9199         ld   r25,y+
000dd7 17ea         cp   r30,r26
000dd8 07fb         cpc  r31,r27
000dd9 0768         cpc  r22,r24
000dda 0779         cpc  r23,r25
000ddb fb97         bst  r25,7
000ddc 9508         ret
                 _floor:
000ddd 940e 123f 	CALL SUBOPT_0x55
000ddf 940e 151a 	CALL __PUTPARD1
000de1 940e 0dae 	CALL _ftrunc
000de3 940e 1515 	CALL __PUTD1S0
000de5 f419          brne __floor1
                 __floor0:
000de6 940e 123f 	CALL SUBOPT_0x55
000de8 c0a0      	RJMP _0x20A0003
                 __floor1:
000de9 f7e6          brtc __floor0
000dea 940e 123f 	CALL SUBOPT_0x55
                +
000dec e0a0     +LDI R26 , LOW ( 0x3F800000 )
000ded e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000dee e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000def e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000df0 940e 132c 	CALL __SUBF12
000df2 c096      	RJMP _0x20A0003
                 _sin:
000df3 9724      	SBIW R28,4
000df4 931a      	ST   -Y,R17
000df5 e010      	LDI  R17,0
000df6 940e 1242 	CALL SUBOPT_0x56
                +
000df8 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000df9 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000dfa e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000dfb e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000dfc 940e 1383 	CALL __MULF12
000dfe 940e 1247 	CALL SUBOPT_0x57
000e00 940e 124c 	CALL SUBOPT_0x58
000e02 940e 119b 	CALL SUBOPT_0x3E
000e04 940e 1242 	CALL SUBOPT_0x56
000e06 940e 0f79 	CALL SUBOPT_0x3
000e08 940e 1247 	CALL SUBOPT_0x57
000e0a 940e 1242 	CALL SUBOPT_0x56
000e0c 940e 0f9b 	CALL SUBOPT_0x7
000e0e 940e 1416 	CALL __CMPF12
000e10 f009      	BREQ PC+2
000e11 f410      	BRCC PC+3
000e12 940c 0e1f 	JMP  _0x2020017
000e14 940e 124c 	CALL SUBOPT_0x58
                +
000e16 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000e17 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000e18 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000e19 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000e1a 940e 132c 	CALL __SUBF12
000e1c 940e 1247 	CALL SUBOPT_0x57
000e1e e011      	LDI  R17,LOW(1)
                 _0x2020017:
000e1f 940e 1242 	CALL SUBOPT_0x56
                +
000e21 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000e22 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000e23 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000e24 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000e25 940e 1416 	CALL __CMPF12
000e27 f009      	BREQ PC+2
000e28 f410      	BRCC PC+3
000e29 940c 0e33 	JMP  _0x2020018
000e2b 940e 1242 	CALL SUBOPT_0x56
000e2d 940e 0f9b 	CALL SUBOPT_0x7
000e2f 940e 132c 	CALL __SUBF12
000e31 940e 1247 	CALL SUBOPT_0x57
                 _0x2020018:
000e33 3010      	CPI  R17,0
000e34 f031      	BREQ _0x2020019
000e35 940e 124c 	CALL SUBOPT_0x58
000e37 940e 128d 	CALL __ANEGF1
000e39 940e 1247 	CALL SUBOPT_0x57
                 _0x2020019:
000e3b 940e 124c 	CALL SUBOPT_0x58
000e3d 940e 1242 	CALL SUBOPT_0x56
000e3f 940e 1383 	CALL __MULF12
                +
000e41 83e9     +STD Y + 1 , R30
000e42 83fa     +STD Y + 1 + 1 , R31
000e43 836b     +STD Y + 1 + 2 , R22
000e44 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000e45 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000e46 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000e47 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000e48 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000e49 940e 1383 	CALL __MULF12
000e4b 01df      	MOVW R26,R30
000e4c 01cb      	MOVW R24,R22
                +
000e4d e1ed     +LDI R30 , LOW ( 0x422DE51D )
000e4e eef5     +LDI R31 , HIGH ( 0x422DE51D )
000e4f e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000e50 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000e51 940e 0f79 	CALL SUBOPT_0x3
000e53 940e 1251 	CALL SUBOPT_0x59
                +
000e55 e4ac     +LDI R26 , LOW ( 0x4104534C )
000e56 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000e57 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000e58 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000e59 940e 1333 	CALL __ADDF12
000e5b 940e 1242 	CALL SUBOPT_0x56
000e5d 940e 1383 	CALL __MULF12
000e5f 937f      	PUSH R23
000e60 936f      	PUSH R22
000e61 93ff      	PUSH R31
000e62 93ef      	PUSH R30
                +
000e63 81e9     +LDD R30 , Y + 1
000e64 81fa     +LDD R31 , Y + 1 + 1
000e65 816b     +LDD R22 , Y + 1 + 2
000e66 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000e67 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000e68 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000e69 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000e6a e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000e6b 940e 1333 	CALL __ADDF12
000e6d 940e 1251 	CALL SUBOPT_0x59
                +
000e6f e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000e70 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000e71 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000e72 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000e73 940e 1333 	CALL __ADDF12
000e75 91af      	POP  R26
000e76 91bf      	POP  R27
000e77 918f      	POP  R24
000e78 919f      	POP  R25
000e79 940e 13d1 	CALL __DIVF21
000e7b 8118      	LDD  R17,Y+0
000e7c 9629      	ADIW R28,9
000e7d 9508      	RET
                 _cos:
000e7e 940e 1510 	CALL __GETD2S0
                +
000e80 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000e81 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000e82 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000e83 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000e84 940e 132c 	CALL __SUBF12
000e86 940e 151a 	CALL __PUTPARD1
000e88 df6a      	RCALL _sin
                 _0x20A0003:
000e89 9624      	ADIW R28,4
000e8a 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000e8b e0e1          ldi  r30,1
000e8c 91f9          ld   r31,y+
000e8d 33f0          cpi  r31,'0'
000e8e f010          brlo isdigit0
000e8f 33fa          cpi  r31,'9'+1
000e90 f008          brlo isdigit1
                 isdigit0:
000e91 27ee          clr  r30
                 isdigit1:
000e92 9508          ret
                 _isspace:
000e93 e0e1          ldi  r30,1
000e94 91f9          ld   r31,y+
000e95 32f0          cpi  r31,' '
000e96 f029          breq isspace1
000e97 30f9          cpi  r31,9
000e98 f010          brlo isspace0
000e99 30fe          cpi  r31,13+1
000e9a f008          brlo isspace1
                 isspace0:
000e9b 27ee          clr  r30
                 isspace1:
000e9c 9508          ret
                 _isxdigit:
000e9d e0e1          ldi  r30,1
000e9e 91f9          ld   r31,y+
000e9f 53f0          subi r31,0x30
000ea0 f040          brcs isxdigit0
000ea1 30fa          cpi  r31,10
000ea2 f038          brcs isxdigit1
000ea3 75ff          andi r31,0x5f
000ea4 50f7          subi r31,7
000ea5 30fa          cpi  r31,10
000ea6 f010          brcs isxdigit0
000ea7 31f0          cpi  r31,16
000ea8 f008          brcs isxdigit1
                 isxdigit0:
000ea9 27ee          clr  r30
                 isxdigit1:
000eaa 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000eab 91e9          ld   r30,y+
000eac 91f9          ld   r31,y+
000ead 91a9          ld   r26,y+
000eae 91b9          ld   r27,y+
000eaf 01cd          movw r24,r26
                 strcpyf0:
000eb0 9005      	lpm  r0,z+
000eb1 920d          st   x+,r0
000eb2 2000          tst  r0
000eb3 f7e1          brne strcpyf0
000eb4 01fc          movw r30,r24
000eb5 9508          ret
                 _strlen:
000eb6 91a9          ld   r26,y+
000eb7 91b9          ld   r27,y+
000eb8 27ee          clr  r30
000eb9 27ff          clr  r31
                 strlen0:
000eba 916d          ld   r22,x+
000ebb 2366          tst  r22
000ebc f011          breq strlen1
000ebd 9631          adiw r30,1
000ebe cffb          rjmp strlen0
                 strlen1:
000ebf 9508          ret
                 _strlenf:
000ec0 27aa          clr  r26
000ec1 27bb          clr  r27
000ec2 91e9          ld   r30,y+
000ec3 91f9          ld   r31,y+
                 strlenf0:
000ec4 9005      	lpm  r0,z+
000ec5 2000          tst  r0
000ec6 f011          breq strlenf1
000ec7 9611          adiw r26,1
000ec8 cffb          rjmp strlenf0
                 strlenf1:
000ec9 01fd          movw r30,r26
000eca 9508          ret
                 
                 	.CSEG
                 _ftoa:
000ecb 9724      	SBIW R28,4
000ecc d22f      	RCALL SUBOPT_0x28
000ecd e0e0      	LDI  R30,LOW(0)
000ece 83ea      	STD  Y+2,R30
000ecf e3ef      	LDI  R30,LOW(63)
000ed0 83eb      	STD  Y+3,R30
000ed1 931a      	ST   -Y,R17
000ed2 930a      	ST   -Y,R16
000ed3 85eb      	LDD  R30,Y+11
000ed4 85fc      	LDD  R31,Y+11+1
000ed5 3fef      	CPI  R30,LOW(0xFFFF)
000ed6 efaf      	LDI  R26,HIGH(0xFFFF)
000ed7 07fa      	CPC  R31,R26
000ed8 f429      	BRNE _0x208000D
000ed9 d37e      	RCALL SUBOPT_0x5A
                +
000eda ebe8     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000edb e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000edc d282      	RCALL SUBOPT_0x35
000edd c085      	RJMP _0x20A0002
                 _0x208000D:
000ede 3fef      	CPI  R30,LOW(0x7FFF)
000edf e7af      	LDI  R26,HIGH(0x7FFF)
000ee0 07fa      	CPC  R31,R26
000ee1 f429      	BRNE _0x208000C
000ee2 d375      	RCALL SUBOPT_0x5A
                +
000ee3 ebe9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000ee4 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000ee5 d279      	RCALL SUBOPT_0x35
000ee6 c07c      	RJMP _0x20A0002
                 _0x208000C:
000ee7 85ac      	LDD  R26,Y+12
000ee8 23aa      	TST  R26
000ee9 f452      	BRPL _0x208000F
                +
000eea 85e9     +LDD R30 , Y + 9
000eeb 85fa     +LDD R31 , Y + 9 + 1
000eec 856b     +LDD R22 , Y + 9 + 2
000eed 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000eee 940e 128d 	CALL __ANEGF1
000ef0 d36c      	RCALL SUBOPT_0x5B
000ef1 d370      	RCALL SUBOPT_0x5C
000ef2 e2ed      	LDI  R30,LOW(45)
000ef3 93ec      	ST   X,R30
                 _0x208000F:
000ef4 85a8      	LDD  R26,Y+8
000ef5 30a7      	CPI  R26,LOW(0x7)
000ef6 f010      	BRLO _0x2080010
000ef7 e0e6      	LDI  R30,LOW(6)
000ef8 87e8      	STD  Y+8,R30
                 _0x2080010:
000ef9 8518      	LDD  R17,Y+8
                 _0x2080011:
000efa 2fe1      	MOV  R30,R17
000efb 5011      	SUBI R17,1
000efc 30e0      	CPI  R30,0
000efd f021      	BREQ _0x2080013
000efe d36a      	RCALL SUBOPT_0x5D
000eff d297      	RCALL SUBOPT_0x3D
000f00 d36d      	RCALL SUBOPT_0x5E
000f01 cff8      	RJMP _0x2080011
                 _0x2080013:
000f02 d370      	RCALL SUBOPT_0x5F
000f03 940e 1333 	CALL __ADDF12
000f05 d357      	RCALL SUBOPT_0x5B
000f06 e010      	LDI  R17,LOW(0)
                +
000f07 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000f08 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000f09 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000f0a e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000f0b d362      	RCALL SUBOPT_0x5E
                 _0x2080014:
000f0c d366      	RCALL SUBOPT_0x5F
000f0d 940e 1416 	CALL __CMPF12
000f0f f060      	BRLO _0x2080016
000f10 d358      	RCALL SUBOPT_0x5D
000f11 d272      	RCALL SUBOPT_0x3A
000f12 d35b      	RCALL SUBOPT_0x5E
000f13 5f1f      	SUBI R17,-LOW(1)
000f14 3217      	CPI  R17,39
000f15 f028      	BRLO _0x2080017
000f16 d341      	RCALL SUBOPT_0x5A
                +
000f17 ebed     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000f18 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000f19 d245      	RCALL SUBOPT_0x35
000f1a c048      	RJMP _0x20A0002
                 _0x2080017:
000f1b cff0      	RJMP _0x2080014
                 _0x2080016:
000f1c 3010      	CPI  R17,0
000f1d f421      	BRNE _0x2080018
000f1e d343      	RCALL SUBOPT_0x5C
000f1f e3e0      	LDI  R30,LOW(48)
000f20 93ec      	ST   X,R30
000f21 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000f22 2fe1      	MOV  R30,R17
000f23 5011      	SUBI R17,1
000f24 30e0      	CPI  R30,0
000f25 f0c9      	BREQ _0x208001C
000f26 d342      	RCALL SUBOPT_0x5D
000f27 d26f      	RCALL SUBOPT_0x3D
000f28 d267      	RCALL SUBOPT_0x3C
000f29 d271      	RCALL SUBOPT_0x3E
000f2a d343      	RCALL SUBOPT_0x5E
000f2b d347      	RCALL SUBOPT_0x5F
000f2c 940e 13d1 	CALL __DIVF21
000f2e 940e 12c0 	CALL __CFD1U
000f30 2f0e      	MOV  R16,R30
000f31 d330      	RCALL SUBOPT_0x5C
000f32 d273      	RCALL SUBOPT_0x40
000f33 e0f0      	LDI  R31,0
000f34 d334      	RCALL SUBOPT_0x5D
000f35 940e 1456 	CALL __CWD1
000f37 940e 12f9 	CALL __CDF1
000f39 940e 1383 	CALL __MULF12
000f3b d340      	RCALL SUBOPT_0x60
000f3c d03c      	RCALL SUBOPT_0x3
000f3d d31f      	RCALL SUBOPT_0x5B
000f3e cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000f3f 85e8      	LDD  R30,Y+8
000f40 30e0      	CPI  R30,0
000f41 f0e9      	BREQ _0x20A0001
000f42 d31f      	RCALL SUBOPT_0x5C
000f43 e2ee      	LDI  R30,LOW(46)
000f44 93ec      	ST   X,R30
                 _0x208001E:
000f45 85e8      	LDD  R30,Y+8
000f46 50e1      	SUBI R30,LOW(1)
000f47 87e8      	STD  Y+8,R30
000f48 5fef      	SUBI R30,-LOW(1)
000f49 f0a9      	BREQ _0x2080020
000f4a d331      	RCALL SUBOPT_0x60
000f4b d238      	RCALL SUBOPT_0x3A
000f4c d310      	RCALL SUBOPT_0x5B
                +
000f4d 85e9     +LDD R30 , Y + 9
000f4e 85fa     +LDD R31 , Y + 9 + 1
000f4f 856b     +LDD R22 , Y + 9 + 2
000f50 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000f51 940e 12c0 	CALL __CFD1U
000f53 2f0e      	MOV  R16,R30
000f54 d30d      	RCALL SUBOPT_0x5C
000f55 d250      	RCALL SUBOPT_0x40
000f56 e0f0      	LDI  R31,0
000f57 d324      	RCALL SUBOPT_0x60
000f58 940e 1456 	CALL __CWD1
000f5a 940e 12f9 	CALL __CDF1
000f5c d01c      	RCALL SUBOPT_0x3
000f5d d2ff      	RCALL SUBOPT_0x5B
000f5e cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000f5f 81ae      	LDD  R26,Y+6
000f60 81bf      	LDD  R27,Y+6+1
000f61 e0e0      	LDI  R30,LOW(0)
000f62 93ec      	ST   X,R30
                 _0x20A0002:
000f63 8119      	LDD  R17,Y+1
000f64 8108      	LDD  R16,Y+0
000f65 962d      	ADIW R28,13
000f66 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x4
                 _TIMER2_OVERFLOW:
000504           	.BYTE 0x1
                 _PACKET_BUFF:
000505           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000569           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
00056a           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056c           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
000580           	.BYTE 0x1
                 _CHECK_GETS:
000581           	.BYTE 0x1
                 _MOTORR_HALL:
000582           	.BYTE 0x4
                 _MOTORL_HALL:
000586           	.BYTE 0x4
                 __seed_G104:
00058a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x0:
000f67 93fa      	ST   -Y,R31
000f68 93ea      	ST   -Y,R30
000f69 940c 1281 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000f6b e0e0      	LDI  R30,LOW(0)
000f6c 93e0 056a 	STS  _TIMER0_OVERFLOW,R30
000f6e 93e0 056b 	STS  _TIMER0_OVERFLOW+1,R30
000f70 bfe2      	OUT  0x32,R30
000f71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2:
000f72 940e 1456 	CALL __CWD1
000f74 940e 12f9 	CALL __CDF1
000f76 01df      	MOVW R26,R30
000f77 01cb      	MOVW R24,R22
000f78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000f79 940e 1524 	CALL __SWAPD12
000f7b 940e 132c 	CALL __SUBF12
000f7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x4:
                +
000f7e 01fe     +MOVW R30 , R28
000f7f 59e6     +SUBI R30 , LOW ( - 618 )
000f80 4ffd     +SBCI R31 , HIGH ( - 618 )
000f81 9001     +LD R0 , Z +
000f82 9011     +LD R1 , Z +
000f83 9161     +LD R22 , Z +
000f84 8170     +LD R23 , Z
000f85 01f0     +MOVW R30 , R0
                 	__GETD1SX 618
                +
000f86 e0a0     +LDI R26 , LOW ( 0x3EC00000 )
000f87 e0b0     +LDI R27 , HIGH ( 0x3EC00000 )
000f88 ec80     +LDI R24 , BYTE3 ( 0x3EC00000 )
000f89 e39e     +LDI R25 , BYTE4 ( 0x3EC00000 )
                 	__GETD2N 0x3EC00000
000f8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
000f8b 940e 1333 	CALL __ADDF12
000f8d 01df      	MOVW R26,R30
000f8e 01cb      	MOVW R24,R22
                +
000f8f e0e0     +LDI R30 , LOW ( 0x3F000000 )
000f90 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000f91 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000f92 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000f93 940e 13d1 	CALL __DIVF21
000f95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6:
000f96 940e 1383 	CALL __MULF12
000f98 940e 12c2 	CALL __CFD1
000f9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000f9b e0e0     +LDI R30 , LOW ( 0x3F000000 )
000f9c e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000f9d e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000f9e e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000f9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
000fa0 e0e0      	LDI  R30,LOW(0)
000fa1 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000fa3 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000fa5 93e0 0502 	STS  _TIMER1_OVERFLOW+2,R30
000fa7 93e0 0503 	STS  _TIMER1_OVERFLOW+3,R30
000fa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
000faa e0e5      	LDI  R30,LOW(5)
000fab e0f0      	LDI  R31,HIGH(5)
000fac cfba      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xA:
000fad 93ea      	ST   -Y,R30
000fae e0e2      	LDI  R30,LOW(2)
000faf e0f0      	LDI  R31,HIGH(2)
000fb0 93fa      	ST   -Y,R31
000fb1 93ea      	ST   -Y,R30
000fb2 93fa      	ST   -Y,R31
000fb3 93ea      	ST   -Y,R30
000fb4 940e 0791 	CALL _RTU_ReedOperate0
000fb6 cff3      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB:
000fb7 e0e5      	LDI  R30,LOW(_PACKET_BUFF)
000fb8 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
000fb9 93fa      	ST   -Y,R31
000fba 93ea      	ST   -Y,R30
000fbb 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
000fbd 93ea      	ST   -Y,R30
000fbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
                +
000fbf e6e9     +LDI R30 , LOW ( 0x453EFC69 )
000fc0 effc     +LDI R31 , HIGH ( 0x453EFC69 )
000fc1 e36e     +LDI R22 , BYTE3 ( 0x453EFC69 )
000fc2 e475     +LDI R23 , BYTE4 ( 0x453EFC69 )
                 	__GETD1N 0x453EFC69
000fc3 940e 13d1 	CALL __DIVF21
000fc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xD:
000fc6 940e 1333 	CALL __ADDF12
000fc8 01df      	MOVW R26,R30
000fc9 01cb      	MOVW R24,R22
                +
000fca e0e0     +LDI R30 , LOW ( 0x40000000 )
000fcb e0f0     +LDI R31 , HIGH ( 0x40000000 )
000fcc e060     +LDI R22 , BYTE3 ( 0x40000000 )
000fcd e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000fce 940e 13d1 	CALL __DIVF21
000fd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xE:
000fd1 940e 132c 	CALL __SUBF12
000fd3 01df      	MOVW R26,R30
000fd4 01cb      	MOVW R24,R22
                +
000fd5 e1e7     +LDI R30 , LOW ( 0x3E8ED917 )
000fd6 edf9     +LDI R31 , HIGH ( 0x3E8ED917 )
000fd7 e86e     +LDI R22 , BYTE3 ( 0x3E8ED917 )
000fd8 e37e     +LDI R23 , BYTE4 ( 0x3E8ED917 )
                 	__GETD1N 0x3E8ED917
000fd9 940e 13d1 	CALL __DIVF21
000fdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000fdc e0f0      	LDI  R31,0
000fdd 0fea      	ADD  R30,R26
000fde 1ffb      	ADC  R31,R27
000fdf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
000fe0 01de     +MOVW R26 , R28
000fe1 5bac     +SUBI R26 , LOW ( - 580 )
000fe2 4fbd     +SBCI R27 , HIGH ( - 580 )
000fe3 900d     +LD R0 , X +
000fe4 901d     +LD R1 , X +
000fe5 918d     +LD R24 , X +
000fe6 919c     +LD R25 , X
000fe7 01d0     +MOVW R26 , R0
                 	__GETD2SX 580
000fe8 940e 1383 	CALL __MULF12
000fea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
                +
000feb 01de     +MOVW R26 , R28
000fec 5da0     +SUBI R26 , LOW ( - 560 )
000fed 4fbd     +SBCI R27 , HIGH ( - 560 )
000fee 900d     +LD R0 , X +
000fef 901d     +LD R1 , X +
000ff0 918d     +LD R24 , X +
000ff1 919c     +LD R25 , X
000ff2 01d0     +MOVW R26 , R0
                 	__GETD2SX 560
000ff3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
                +
000ff4 01fe     +MOVW R30 , R28
000ff5 5bec     +SUBI R30 , LOW ( - 580 )
000ff6 4ffd     +SBCI R31 , HIGH ( - 580 )
000ff7 9001     +LD R0 , Z +
000ff8 9011     +LD R1 , Z +
000ff9 9161     +LD R22 , Z +
000ffa 8170     +LD R23 , Z
000ffb 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
                +
000ffc 01de     +MOVW R26 , R28
000ffd 5ba4     +SUBI R26 , LOW ( - 588 )
000ffe 4fbd     +SBCI R27 , HIGH ( - 588 )
000fff 900d     +LD R0 , X +
001000 901d     +LD R1 , X +
001001 918d     +LD R24 , X +
001002 919c     +LD R25 , X
001003 01d0     +MOVW R26 , R0
                 	__GETD2SX 588
001004 940e 1383 	CALL __MULF12
001006 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
                +
001007 01fe     +MOVW R30 , R28
001008 5de0     +SUBI R30 , LOW ( - 560 )
001009 4ffd     +SBCI R31 , HIGH ( - 560 )
00100a 9001     +LD R0 , Z +
00100b 9011     +LD R1 , Z +
00100c 9161     +LD R22 , Z +
00100d 8170     +LD R23 , Z
00100e 01f0     +MOVW R30 , R0
                 	__GETD1SX 560
00100f 940e 151a 	CALL __PUTPARD1
001011 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
                +
001012 efe6     +LDI R30 , LOW ( 0x426528F6 )
001013 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
001014 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
001015 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
001016 cf7f      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
                +
001017 01de     +MOVW R26 , R28
001018 5dae     +SUBI R26 , LOW ( - 546 )
001019 4fbd     +SBCI R27 , HIGH ( - 546 )
00101a 900d     +LD R0 , X +
00101b 901d     +LD R1 , X +
00101c 918d     +LD R24 , X +
00101d 919c     +LD R25 , X
00101e 01d0     +MOVW R26 , R0
                 	__GETD2SX 546
00101f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x16:
                +
001020 01fe     +MOVW R30 , R28
001021 5bec     +SUBI R30 , LOW ( - 580 )
001022 4ffd     +SBCI R31 , HIGH ( - 580 )
001023 9001     +LD R0 , Z +
001024 9011     +LD R1 , Z +
001025 9161     +LD R22 , Z +
001026 8170     +LD R23 , Z
001027 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
                +
001028 01de     +MOVW R26 , R28
001029 5ca0     +SUBI R26 , LOW ( - 576 )
00102a 4fbd     +SBCI R27 , HIGH ( - 576 )
00102b 900d     +LD R0 , X +
00102c 901d     +LD R1 , X +
00102d 918d     +LD R24 , X +
00102e 919c     +LD R25 , X
00102f 01d0     +MOVW R26 , R0
                 	__GETD2SX 576
001030 940e 1383 	CALL __MULF12
001032 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17:
                +
001033 01fe     +MOVW R30 , R28
001034 5dee     +SUBI R30 , LOW ( - 546 )
001035 4ffd     +SBCI R31 , HIGH ( - 546 )
001036 9001     +LD R0 , Z +
001037 9011     +LD R1 , Z +
001038 9161     +LD R22 , Z +
001039 8170     +LD R23 , Z
00103a 01f0     +MOVW R30 , R0
                 	__GETD1SX 546
00103b 940e 151a 	CALL __PUTPARD1
00103d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x18:
00103e 940e 12f9 	CALL __CDF1
                +
001040 e0a0     +LDI R26 , LOW ( 0x3E000000 )
001041 e0b0     +LDI R27 , HIGH ( 0x3E000000 )
001042 e080     +LDI R24 , BYTE3 ( 0x3E000000 )
001043 e39e     +LDI R25 , BYTE4 ( 0x3E000000 )
                 	__GETD2N 0x3E000000
001044 940e 1383 	CALL __MULF12
                +
001046 eda8     +LDI R26 , LOW ( 0x40490FD8 )
001047 e0bf     +LDI R27 , HIGH ( 0x40490FD8 )
001048 e489     +LDI R24 , BYTE3 ( 0x40490FD8 )
001049 e490     +LDI R25 , BYTE4 ( 0x40490FD8 )
                 	__GETD2N 0x40490FD8
00104a 940e 1383 	CALL __MULF12
00104c 01df      	MOVW R26,R30
00104d 01cb      	MOVW R24,R22
                +
00104e e0e0     +LDI R30 , LOW ( 0x43200000 )
00104f e0f0     +LDI R31 , HIGH ( 0x43200000 )
001050 e260     +LDI R22 , BYTE3 ( 0x43200000 )
001051 e473     +LDI R23 , BYTE4 ( 0x43200000 )
                 	__GETD1N 0x43200000
001052 940e 13d1 	CALL __DIVF21
001054 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
                +
001055 01de     +MOVW R26 , R28
001056 5ea8     +SUBI R26 , LOW ( - 536 )
001057 4fbd     +SBCI R27 , HIGH ( - 536 )
001058 900d     +LD R0 , X +
001059 901d     +LD R1 , X +
00105a 918d     +LD R24 , X +
00105b 919c     +LD R25 , X
00105c 01d0     +MOVW R26 , R0
                 	__GETD2SX 536
00105d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
                +
00105e eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00105f ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001060 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001061 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001062 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
                +
001063 01fe     +MOVW R30 , R28
001064 5ee8     +SUBI R30 , LOW ( - 536 )
001065 4ffd     +SBCI R31 , HIGH ( - 536 )
001066 9001     +LD R0 , Z +
001067 9011     +LD R1 , Z +
001068 9161     +LD R22 , Z +
001069 8170     +LD R23 , Z
00106a 01f0     +MOVW R30 , R0
                 	__GETD1SX 536
00106b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1C:
                +
00106c 01fe     +MOVW R30 , R28
00106d 50e8     +SUBI R30 , LOW ( - 504 )
00106e 4ffe     +SBCI R31 , HIGH ( - 504 )
00106f 9001     +LD R0 , Z +
001070 9011     +LD R1 , Z +
001071 9161     +LD R22 , Z +
001072 8170     +LD R23 , Z
001073 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
                +
001074 01de     +MOVW R26 , R28
001075 50a4     +SUBI R26 , LOW ( - 508 )
001076 4fbe     +SBCI R27 , HIGH ( - 508 )
001077 900d     +LD R0 , X +
001078 901d     +LD R1 , X +
001079 918d     +LD R24 , X +
00107a 919c     +LD R25 , X
00107b 01d0     +MOVW R26 , R0
                 	__GETD2SX 508
00107c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
00107d 01de     +MOVW R26 , R28
00107e 5faa     +SUBI R26 , LOW ( - 518 )
00107f 4fbd     +SBCI R27 , HIGH ( - 518 )
001080 900d     +LD R0 , X +
001081 901d     +LD R1 , X +
001082 918d     +LD R24 , X +
001083 919c     +LD R25 , X
001084 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
001085 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
001086 01fe     +MOVW R30 , R28
001087 5fea     +SUBI R30 , LOW ( - 518 )
001088 4ffd     +SBCI R31 , HIGH ( - 518 )
001089 9001     +LD R0 , Z +
00108a 9011     +LD R1 , Z +
00108b 9161     +LD R22 , Z +
00108c 8170     +LD R23 , Z
00108d 01f0     +MOVW R30 , R0
                 	__GETD1SX 518
00108e 940e 151a 	CALL __PUTPARD1
001090 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1F:
001091 91ed      	LD   R30,X+
001092 91fd      	LD   R31,X+
001093 9631      	ADIW R30,1
001094 93fe      	ST   -X,R31
001095 93ee      	ST   -X,R30
001096 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x20:
001097 936a      	ST   -Y,R22
001098 937a      	ST   -Y,R23
001099 93aa      	ST   -Y,R26
00109a 93ba      	ST   -Y,R27
00109b 93ea      	ST   -Y,R30
00109c 93fa      	ST   -Y,R31
00109d b7ef      	IN   R30,SREG
00109e 93ea      	ST   -Y,R30
00109f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x21:
0010a0 940e 14fc 	CALL __GETD1P_INC
                +
0010a2 5fef     +SUBI R30 , LOW ( - 1 )
0010a3 4fff     +SBCI R31 , HIGH ( - 1 )
0010a4 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0010a5 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
0010a6 940e 1506 	CALL __PUTDP1_DEC
0010a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x22:
0010a9 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
0010ab e0b0      	LDI  R27,0
0010ac 5fab      	SUBI R26,LOW(-_PACKET_BUFF)
0010ad 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
0010ae b1ec      	IN   R30,0xC
0010af 93ec      	ST   X,R30
0010b0 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
0010b2 5fef      	SUBI R30,-LOW(1)
0010b3 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
0010b5 e0e0      	LDI  R30,LOW(0)
0010b6 bde4      	OUT  0x24,R30
0010b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x23:
0010b8 e0f0      	LDI  R31,0
0010b9 59e4      	SUBI R30,LOW(-_VELOCITY_BUFF)
0010ba 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
0010bb 8310      	ST   Z,R17
0010bc 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
0010be 5fef      	SUBI R30,-LOW(1)
0010bf 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
0010c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
0010c2 81aa      	LDD  R26,Y+2
0010c3 81bb      	LDD  R27,Y+2+1
0010c4 27ee      	CLR  R30
0010c5 0fa1      	ADD  R26,R17
0010c6 1fbe      	ADC  R27,R30
0010c7 91ec      	LD   R30,X
0010c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x25:
0010c9 9728      	SBIW R28,8
0010ca 940e 1537 	CALL __SAVELOCR4
                +
0010cc e020     +LDI R18 , LOW ( 0 )
0010cd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0010ce 89e8      	LDD  R30,Y+16
0010cf 83ec      	STD  Y+4,R30
0010d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x26:
0010d1 83ed      	STD  Y+5,R30
0010d2 85ee      	LDD  R30,Y+14
0010d3 85ff      	LDD  R31,Y+14+1
0010d4 940e 144b 	CALL __ASRW8
0010d6 83ee      	STD  Y+6,R30
0010d7 85ee      	LDD  R30,Y+14
0010d8 83ef      	STD  Y+7,R30
0010d9 85ec      	LDD  R30,Y+12
0010da 85fd      	LDD  R31,Y+12+1
0010db 940e 144b 	CALL __ASRW8
0010dd 87e8      	STD  Y+8,R30
0010de 85ec      	LDD  R30,Y+12
0010df 87e9      	STD  Y+9,R30
0010e0 e0e0      	LDI  R30,LOW(0)
0010e1 87ea      	STD  Y+10,R30
0010e2 87eb      	STD  Y+11,R30
0010e3 01fe      	MOVW R30,R28
0010e4 9634      	ADIW R30,4
0010e5 93fa      	ST   -Y,R31
0010e6 93ea      	ST   -Y,R30
0010e7 e0e6      	LDI  R30,LOW(6)
0010e8 e0f0      	LDI  R31,HIGH(6)
0010e9 93fa      	ST   -Y,R31
0010ea 93ea      	ST   -Y,R30
0010eb 940e 0753 	CALL _CRC16
0010ed 018f      	MOVW R16,R30
0010ee 01f8      	MOVW R30,R16
0010ef 87ea      	STD  Y+10,R30
                +
0010f0 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
0010f1 e020     +LDI R18 , LOW ( 0 )
0010f2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0010f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27:
0010f4 01de      	MOVW R26,R28
0010f5 9614      	ADIW R26,4
0010f6 0fa2      	ADD  R26,R18
0010f7 1fb3      	ADC  R27,R19
0010f8 91ec      	LD   R30,X
0010f9 93ea      	ST   -Y,R30
0010fa 940c 074d 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
0010fc e0e0      	LDI  R30,LOW(0)
0010fd 83e8      	ST   Y,R30
0010fe 83e9      	STD  Y+1,R30
0010ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
001100 85ae      	LDD  R26,Y+14
001101 85bf      	LDD  R27,Y+14+1
001102 940e 14f6 	CALL __GETD1P
001104 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
001105 85ac      	LDD  R26,Y+12
001106 85bd      	LDD  R27,Y+12+1
001107 940e 14f6 	CALL __GETD1P
001109 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
                +
00110a e1a7     +LDI R26 , LOW ( 0x3E8ED917 )
00110b edb9     +LDI R27 , HIGH ( 0x3E8ED917 )
00110c e88e     +LDI R24 , BYTE3 ( 0x3E8ED917 )
00110d e39e     +LDI R25 , BYTE4 ( 0x3E8ED917 )
                 	__GETD2N 0x3E8ED917
00110e 940e 1383 	CALL __MULF12
001110 01df      	MOVW R26,R30
001111 01cb      	MOVW R24,R22
                +
001112 e0e0     +LDI R30 , LOW ( 0x40000000 )
001113 e0f0     +LDI R31 , HIGH ( 0x40000000 )
001114 e060     +LDI R22 , BYTE3 ( 0x40000000 )
001115 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
001116 940e 13d1 	CALL __DIVF21
001118 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2C:
                +
001119 83ec     +STD Y + 4 , R30
00111a 83fd     +STD Y + 4 + 1 , R31
00111b 836e     +STD Y + 4 + 2 , R22
00111c 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00111d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D:
                +
00111e 81ac     +LDD R26 , Y + 4
00111f 81bd     +LDD R27 , Y + 4 + 1
001120 818e     +LDD R24 , Y + 4 + 2
001121 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
001122 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
                +
001123 e6e9     +LDI R30 , LOW ( 0x453EFC69 )
001124 effc     +LDI R31 , HIGH ( 0x453EFC69 )
001125 e36e     +LDI R22 , BYTE3 ( 0x453EFC69 )
001126 e475     +LDI R23 , BYTE4 ( 0x453EFC69 )
                 	__GETD1N 0x453EFC69
001127 ce6e      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
001128 e0e0      	LDI  R30,LOW(0)
001129 e0f0      	LDI  R31,HIGH(0)
00112a 93ed      	ST   X+,R30
00112b 93fc      	ST   X,R31
00112c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
00112d 93fa      	ST   -Y,R31
00112e 93ea      	ST   -Y,R30
00112f 940e 0782 	CALL _RTU_WriteOperate0
001131 ce78      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x31:
001132 93ea      	ST   -Y,R30
001133 e7e8      	LDI  R30,LOW(120)
001134 e0f0      	LDI  R31,HIGH(120)
001135 93fa      	ST   -Y,R31
001136 93ea      	ST   -Y,R30
001137 e0e1      	LDI  R30,LOW(1)
001138 e0f0      	LDI  R31,HIGH(1)
001139 cff3      	RJMP SUBOPT_0x30
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x32:
00113a df5c      	RCALL SUBOPT_0x20
00113b e0a0      	LDI  R26,0
00113c 990c      	SBIC 0x1,4
00113d e0a1      	LDI  R26,1
00113e e0e0      	LDI  R30,0
00113f 990d      	SBIC 0x1,5
001140 e0e1      	LDI  R30,1
001141 17ea      	CP   R30,R26
001142 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x33:
001143 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
001144 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
001145 940e 14fc 	CALL __GETD1P_INC
001147 9731      	SBIW R30,1
001148 4060      	SBCI R22,0
001149 4070      	SBCI R23,0
00114a 940e 1506 	CALL __PUTDP1_DEC
                +
00114c 5fef     +SUBI R30 , LOW ( - 1 )
00114d 4fff     +SBCI R31 , HIGH ( - 1 )
00114e 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00114f 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
001150 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x34:
001151 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
001152 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
001153 940e 14fc 	CALL __GETD1P_INC
001155 9731      	SBIW R30,1
001156 4060      	SBCI R22,0
001157 4070      	SBCI R23,0
001158 940e 1506 	CALL __PUTDP1_DEC
                +
00115a 5fef     +SUBI R30 , LOW ( - 1 )
00115b 4fff     +SBCI R31 , HIGH ( - 1 )
00115c 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00115d 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00115e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35:
00115f 93fa      	ST   -Y,R31
001160 93ea      	ST   -Y,R30
001161 940c 0eab 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x36:
001163 dfba      	RCALL SUBOPT_0x2D
                +
001164 e0e0     +LDI R30 , LOW ( 0x41200000 )
001165 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001166 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001167 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001168 940e 1383 	CALL __MULF12
00116a cfae      	RJMP SUBOPT_0x2C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x37:
                +
00116b 81ec     +LDD R30 , Y + 4
00116c 81fd     +LDD R31 , Y + 4 + 1
00116d 816e     +LDD R22 , Y + 4 + 2
00116e 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00116f 85ac     +LDD R26 , Y + 12
001170 85bd     +LDD R27 , Y + 12 + 1
001171 858e     +LDD R24 , Y + 12 + 2
001172 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001173 940e 1416 	CALL __CMPF12
001175 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
001176 85ac     +LDD R26 , Y + 12
001177 85bd     +LDD R27 , Y + 12 + 1
001178 858e     +LDD R24 , Y + 12 + 2
001179 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00117a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x39:
00117b dee2      	RCALL SUBOPT_0x1A
00117c 940e 1383 	CALL __MULF12
                +
00117e 87ec     +STD Y + 12 , R30
00117f 87fd     +STD Y + 12 + 1 , R31
001180 876e     +STD Y + 12 + 2 , R22
001181 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001182 5f3f      	SUBI R19,-LOW(1)
001183 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3A:
                +
001184 e0e0     +LDI R30 , LOW ( 0x41200000 )
001185 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001186 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001187 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001188 940e 1383 	CALL __MULF12
00118a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
                +
00118b 87ec     +STD Y + 12 , R30
00118c 87fd     +STD Y + 12 + 1 , R31
00118d 876e     +STD Y + 12 + 2 , R22
00118e 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00118f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C:
                +
001190 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001191 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001192 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
001193 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
001194 940e 1333 	CALL __ADDF12
001196 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
001197 dec6      	RCALL SUBOPT_0x1A
001198 940e 1383 	CALL __MULF12
00119a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
00119b 940e 151a 	CALL __PUTPARD1
00119d 940c 0ddd 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
00119f 85a8      	LDD  R26,Y+8
0011a0 85b9      	LDD  R27,Y+8+1
0011a1 9611      	ADIW R26,1
0011a2 87a8      	STD  Y+8,R26
0011a3 87b9      	STD  Y+8+1,R27
0011a4 9711      	SBIW R26,1
0011a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
0011a6 2fe0      	MOV  R30,R16
0011a7 5de0      	SUBI R30,-LOW(48)
0011a8 93ec      	ST   X,R30
0011a9 2fe0      	MOV  R30,R16
0011aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x41:
0011ab 85e8      	LDD  R30,Y+8
0011ac 85f9      	LDD  R31,Y+8+1
0011ad 9631      	ADIW R30,1
0011ae 87e8      	STD  Y+8,R30
0011af 87f9      	STD  Y+8+1,R31
0011b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x42:
0011b1 932a      	ST   -Y,R18
0011b2 81ef      	LDD  R30,Y+7
0011b3 85f8      	LDD  R31,Y+7+1
0011b4 93fa      	ST   -Y,R31
0011b5 93ea      	ST   -Y,R30
0011b6 85eb      	LDD  R30,Y+11
0011b7 85fc      	LDD  R31,Y+11+1
0011b8 9509      	ICALL
0011b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x43:
                +
0011ba 01fe     +MOVW R30 , R28
0011bb 5ae6     +SUBI R30 , LOW ( - 90 )
0011bc 4fff     +SBCI R31 , HIGH ( - 90 )
0011bd 9001     +LD R0 , Z +
0011be 81f0     +LD R31 , Z
0011bf 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0011c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x44:
0011c1 9734      	SBIW R30,4
                +
0011c2 01de     +MOVW R26 , R28
0011c3 5aa6     +SUBI R26 , LOW ( - 90 )
0011c4 4fbf     +SBCI R27 , HIGH ( - 90 )
0011c5 93ed     +ST X + , R30
0011c6 93fc     +ST X , R31
                 	__PUTW1SX 90
0011c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x45:
0011c8 81ef      	LDD  R30,Y+7
0011c9 85f8      	LDD  R31,Y+7+1
0011ca 93fa      	ST   -Y,R31
0011cb 93ea      	ST   -Y,R30
0011cc 85eb      	LDD  R30,Y+11
0011cd 85fc      	LDD  R31,Y+11+1
0011ce 9509      	ICALL
0011cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x46:
                +
0011d0 01de     +MOVW R26 , R28
0011d1 5aa6     +SUBI R26 , LOW ( - 90 )
0011d2 4fbf     +SBCI R27 , HIGH ( - 90 )
0011d3 900d     +LD R0 , X +
0011d4 91bc     +LD R27 , X
0011d5 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0011d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x47:
                +
0011d7 87ea     +STD Y + 10 , R30
0011d8 87fb     +STD Y + 10 + 1 , R31
0011d9 876c     +STD Y + 10 + 2 , R22
0011da 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0011db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
0011dc dfdd      	RCALL SUBOPT_0x43
0011dd cfe3      	RJMP SUBOPT_0x44
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
0011de 85ea     +LDD R30 , Y + 10
0011df 85fb     +LDD R31 , Y + 10 + 1
0011e0 856c     +LDD R22 , Y + 10 + 2
0011e1 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0011e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4A:
0011e3 87ee      	STD  Y+14,R30
0011e4 87ff      	STD  Y+14+1,R31
0011e5 93fa      	ST   -Y,R31
0011e6 93ea      	ST   -Y,R30
0011e7 940e 0eb6 	CALL _strlen
0011e9 2f1e      	MOV  R17,R30
0011ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4B:
0011eb dfe4      	RCALL SUBOPT_0x46
0011ec 9614      	ADIW R26,4
0011ed 940e 14f2 	CALL __GETW1P
0011ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4C:
                +
0011f0 8be8     +STD Y + 16 , R30
0011f1 8bf9     +STD Y + 16 + 1 , R31
0011f2 8b6a     +STD Y + 16 + 2 , R22
0011f3 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0011f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4D:
0011f5 7f0b      	ANDI R16,LOW(251)
0011f6 89ed      	LDD  R30,Y+21
0011f7 93ea      	ST   -Y,R30
                +
0011f8 01fe     +MOVW R30 , R28
0011f9 5ae9     +SUBI R30 , LOW ( - 87 )
0011fa 4fff     +SBCI R31 , HIGH ( - 87 )
0011fb 9001     +LD R0 , Z +
0011fc 81f0     +LD R31 , Z
0011fd 2de0     +MOV R30 , R0
                 	__GETW1SX 87
0011fe 93fa      	ST   -Y,R31
0011ff 93ea      	ST   -Y,R30
                +
001200 01fe     +MOVW R30 , R28
001201 5ae5     +SUBI R30 , LOW ( - 91 )
001202 4fff     +SBCI R31 , HIGH ( - 91 )
001203 9001     +LD R0 , Z +
001204 81f0     +LD R31 , Z
001205 2de0     +MOV R30 , R0
                 	__GETW1SX 91
001206 9509      	ICALL
001207 3050      	CPI  R21,0
001208 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4E:
                +
001209 89e8     +LDD R30 , Y + 16
00120a 89f9     +LDD R31 , Y + 16 + 1
00120b 896a     +LDD R22 , Y + 16 + 2
00120c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00120d 85aa     +LDD R26 , Y + 10
00120e 85bb     +LDD R27 , Y + 10 + 1
00120f 858c     +LDD R24 , Y + 10 + 2
001210 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
001211 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4F:
001212 01de      	MOVW R26,R28
001213 961c      	ADIW R26,12
001214 940e 1436 	CALL __ADDW2R15
001216 940e 14f2 	CALL __GETW1P
001218 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x50:
001219 940e 1436 	CALL __ADDW2R15
00121b 940e 14f2 	CALL __GETW1P
00121d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
00121e 933a      	ST   -Y,R19
00121f 940e 0e93 	CALL _isspace
001221 30e0      	CPI  R30,0
001222 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x52:
001223 01fe      	MOVW R30,R28
001224 963d      	ADIW R30,13
001225 93fa      	ST   -Y,R31
001226 93ea      	ST   -Y,R30
001227 89e8      	LDD  R30,Y+16
001228 89f9      	LDD  R31,Y+16+1
001229 93fa      	ST   -Y,R31
00122a 93ea      	ST   -Y,R30
00122b 89ec      	LDD  R30,Y+20
00122c 89fd      	LDD  R31,Y+20+1
00122d 9509      	ICALL
00122e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x53:
00122f 85ae      	LDD  R26,Y+14
001230 85bf      	LDD  R27,Y+14+1
001231 91ac      	LD   R26,X
001232 30a0      	CPI  R26,0
001233 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x54:
001234 89ea      	LDD  R30,Y+18
001235 89fb      	LDD  R31,Y+18+1
001236 9734      	SBIW R30,4
001237 8bea      	STD  Y+18,R30
001238 8bfb      	STD  Y+18+1,R31
001239 89aa      	LDD  R26,Y+18
00123a 89bb      	LDD  R27,Y+18+1
00123b 9614      	ADIW R26,4
00123c 910d      	LD   R16,X+
00123d 911c      	LD   R17,X
00123e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
00123f 940e 150b 	CALL __GETD1S0
001241 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x56:
                +
001242 81ad     +LDD R26 , Y + 5
001243 81be     +LDD R27 , Y + 5 + 1
001244 818f     +LDD R24 , Y + 5 + 2
001245 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001246 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x57:
                +
001247 83ed     +STD Y + 5 , R30
001248 83fe     +STD Y + 5 + 1 , R31
001249 836f     +STD Y + 5 + 2 , R22
00124a 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00124b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x58:
                +
00124c 81ed     +LDD R30 , Y + 5
00124d 81fe     +LDD R31 , Y + 5 + 1
00124e 816f     +LDD R22 , Y + 5 + 2
00124f 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
001250 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x59:
                +
001251 81a9     +LDD R26 , Y + 1
001252 81ba     +LDD R27 , Y + 1 + 1
001253 818b     +LDD R24 , Y + 1 + 2
001254 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001255 940e 1383 	CALL __MULF12
001257 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5A:
001258 81ee      	LDD  R30,Y+6
001259 81ff      	LDD  R31,Y+6+1
00125a 93fa      	ST   -Y,R31
00125b 93ea      	ST   -Y,R30
00125c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5B:
                +
00125d 87e9     +STD Y + 9 , R30
00125e 87fa     +STD Y + 9 + 1 , R31
00125f 876b     +STD Y + 9 + 2 , R22
001260 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
001261 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5C:
001262 81ae      	LDD  R26,Y+6
001263 81bf      	LDD  R27,Y+6+1
001264 9611      	ADIW R26,1
001265 83ae      	STD  Y+6,R26
001266 83bf      	STD  Y+6+1,R27
001267 9711      	SBIW R26,1
001268 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5D:
                +
001269 81aa     +LDD R26 , Y + 2
00126a 81bb     +LDD R27 , Y + 2 + 1
00126b 818c     +LDD R24 , Y + 2 + 2
00126c 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00126d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5E:
                +
00126e 83ea     +STD Y + 2 , R30
00126f 83fb     +STD Y + 2 + 1 , R31
001270 836c     +STD Y + 2 + 2 , R22
001271 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
001272 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5F:
                +
001273 81ea     +LDD R30 , Y + 2
001274 81fb     +LDD R31 , Y + 2 + 1
001275 816c     +LDD R22 , Y + 2 + 2
001276 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
001277 85a9     +LDD R26 , Y + 9
001278 85ba     +LDD R27 , Y + 9 + 1
001279 858b     +LDD R24 , Y + 9 + 2
00127a 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00127b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x60:
                +
00127c 85a9     +LDD R26 , Y + 9
00127d 85ba     +LDD R27 , Y + 9 + 1
00127e 858b     +LDD R24 , Y + 9 + 2
00127f 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001280 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001281 91e9      	ld   r30,y+
001282 91f9      	ld   r31,y+
001283 9630      	adiw r30,0
001284 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001285 e686     +LDI R24 , LOW ( 0xE66 )
001286 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
001287 9701     +SBIW R24 , 1
001288 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
001289 95a8      	wdr
00128a 9731      	sbiw r30,1
00128b f7c9      	brne __delay_ms0
                 __delay_ms1:
00128c 9508      	ret
                 
                 __ANEGF1:
00128d 9730      	SBIW R30,0
00128e 4060      	SBCI R22,0
00128f 4070      	SBCI R23,0
001290 f009      	BREQ __ANEGF10
001291 5870      	SUBI R23,0x80
                 __ANEGF10:
001292 9508      	RET
                 
                 __ROUND_REPACK:
001293 2355      	TST  R21
001294 f442      	BRPL __REPACK
001295 3850      	CPI  R21,0x80
001296 f411      	BRNE __ROUND_REPACK0
001297 ffe0      	SBRS R30,0
001298 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001299 9631      	ADIW R30,1
00129a 1f69      	ADC  R22,R25
00129b 1f79      	ADC  R23,R25
00129c f06b      	BRVS __REPACK1
                 
                 __REPACK:
00129d e850      	LDI  R21,0x80
00129e 2757      	EOR  R21,R23
00129f f411      	BRNE __REPACK0
0012a0 935f      	PUSH R21
0012a1 c0cf      	RJMP __ZERORES
                 __REPACK0:
0012a2 3f5f      	CPI  R21,0xFF
0012a3 f031      	BREQ __REPACK1
0012a4 0f66      	LSL  R22
0012a5 0c00      	LSL  R0
0012a6 9557      	ROR  R21
0012a7 9567      	ROR  R22
0012a8 2f75      	MOV  R23,R21
0012a9 9508      	RET
                 __REPACK1:
0012aa 935f      	PUSH R21
0012ab 2000      	TST  R0
0012ac f00a      	BRMI __REPACK2
0012ad c0cf      	RJMP __MAXRES
                 __REPACK2:
0012ae c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0012af e850      	LDI  R21,0x80
0012b0 2e19      	MOV  R1,R25
0012b1 2215      	AND  R1,R21
0012b2 0f88      	LSL  R24
0012b3 1f99      	ROL  R25
0012b4 2795      	EOR  R25,R21
0012b5 0f55      	LSL  R21
0012b6 9587      	ROR  R24
                 
                 __UNPACK1:
0012b7 e850      	LDI  R21,0x80
0012b8 2e07      	MOV  R0,R23
0012b9 2205      	AND  R0,R21
0012ba 0f66      	LSL  R22
0012bb 1f77      	ROL  R23
0012bc 2775      	EOR  R23,R21
0012bd 0f55      	LSL  R21
0012be 9567      	ROR  R22
0012bf 9508      	RET
                 
                 __CFD1U:
0012c0 9468      	SET
0012c1 c001      	RJMP __CFD1U0
                 __CFD1:
0012c2 94e8      	CLT
                 __CFD1U0:
0012c3 935f      	PUSH R21
0012c4 dff2      	RCALL __UNPACK1
0012c5 3870      	CPI  R23,0x80
0012c6 f018      	BRLO __CFD10
0012c7 3f7f      	CPI  R23,0xFF
0012c8 f408      	BRCC __CFD10
0012c9 c0a7      	RJMP __ZERORES
                 __CFD10:
0012ca e156      	LDI  R21,22
0012cb 1b57      	SUB  R21,R23
0012cc f4aa      	BRPL __CFD11
0012cd 9551      	NEG  R21
0012ce 3058      	CPI  R21,8
0012cf f40e      	BRTC __CFD19
0012d0 3059      	CPI  R21,9
                 __CFD19:
0012d1 f030      	BRLO __CFD17
0012d2 efef      	SER  R30
0012d3 efff      	SER  R31
0012d4 ef6f      	SER  R22
0012d5 e77f      	LDI  R23,0x7F
0012d6 f977      	BLD  R23,7
0012d7 c01a      	RJMP __CFD15
                 __CFD17:
0012d8 2777      	CLR  R23
0012d9 2355      	TST  R21
0012da f0b9      	BREQ __CFD15
                 __CFD18:
0012db 0fee      	LSL  R30
0012dc 1fff      	ROL  R31
0012dd 1f66      	ROL  R22
0012de 1f77      	ROL  R23
0012df 955a      	DEC  R21
0012e0 f7d1      	BRNE __CFD18
0012e1 c010      	RJMP __CFD15
                 __CFD11:
0012e2 2777      	CLR  R23
                 __CFD12:
0012e3 3058      	CPI  R21,8
0012e4 f028      	BRLO __CFD13
0012e5 2fef      	MOV  R30,R31
0012e6 2ff6      	MOV  R31,R22
0012e7 2f67      	MOV  R22,R23
0012e8 5058      	SUBI R21,8
0012e9 cff9      	RJMP __CFD12
                 __CFD13:
0012ea 2355      	TST  R21
0012eb f031      	BREQ __CFD15
                 __CFD14:
0012ec 9576      	LSR  R23
0012ed 9567      	ROR  R22
0012ee 95f7      	ROR  R31
0012ef 95e7      	ROR  R30
0012f0 955a      	DEC  R21
0012f1 f7d1      	BRNE __CFD14
                 __CFD15:
0012f2 2000      	TST  R0
0012f3 f40a      	BRPL __CFD16
0012f4 d14e      	RCALL __ANEGD1
                 __CFD16:
0012f5 915f      	POP  R21
0012f6 9508      	RET
                 
                 __CDF1U:
0012f7 9468      	SET
0012f8 c001      	RJMP __CDF1U0
                 __CDF1:
0012f9 94e8      	CLT
                 __CDF1U0:
0012fa 9730      	SBIW R30,0
0012fb 4060      	SBCI R22,0
0012fc 4070      	SBCI R23,0
0012fd f0b1      	BREQ __CDF10
0012fe 2400      	CLR  R0
0012ff f026      	BRTS __CDF11
001300 2377      	TST  R23
001301 f412      	BRPL __CDF11
001302 9400      	COM  R0
001303 d13f      	RCALL __ANEGD1
                 __CDF11:
001304 2e17      	MOV  R1,R23
001305 e17e      	LDI  R23,30
001306 2011      	TST  R1
                 __CDF12:
001307 f032      	BRMI __CDF13
001308 957a      	DEC  R23
001309 0fee      	LSL  R30
00130a 1fff      	ROL  R31
00130b 1f66      	ROL  R22
00130c 1c11      	ROL  R1
00130d cff9      	RJMP __CDF12
                 __CDF13:
00130e 2fef      	MOV  R30,R31
00130f 2ff6      	MOV  R31,R22
001310 2d61      	MOV  R22,R1
001311 935f      	PUSH R21
001312 df8a      	RCALL __REPACK
001313 915f      	POP  R21
                 __CDF10:
001314 9508      	RET
                 
                 __SWAPACC:
001315 934f      	PUSH R20
001316 01af      	MOVW R20,R30
001317 01fd      	MOVW R30,R26
001318 01da      	MOVW R26,R20
001319 01ab      	MOVW R20,R22
00131a 01bc      	MOVW R22,R24
00131b 01ca      	MOVW R24,R20
00131c 2d40      	MOV  R20,R0
00131d 2c01      	MOV  R0,R1
00131e 2e14      	MOV  R1,R20
00131f 914f      	POP  R20
001320 9508      	RET
                 
                 __UADD12:
001321 0fea      	ADD  R30,R26
001322 1ffb      	ADC  R31,R27
001323 1f68      	ADC  R22,R24
001324 9508      	RET
                 
                 __NEGMAN1:
001325 95e0      	COM  R30
001326 95f0      	COM  R31
001327 9560      	COM  R22
001328 5fef      	SUBI R30,-1
001329 4fff      	SBCI R31,-1
00132a 4f6f      	SBCI R22,-1
00132b 9508      	RET
                 
                 __SUBF12:
00132c 935f      	PUSH R21
00132d df81      	RCALL __UNPACK
00132e 3890      	CPI  R25,0x80
00132f f171      	BREQ __ADDF129
001330 e850      	LDI  R21,0x80
001331 2615      	EOR  R1,R21
                 
001332 c004      	RJMP __ADDF120
                 
                 __ADDF12:
001333 935f      	PUSH R21
001334 df7a      	RCALL __UNPACK
001335 3890      	CPI  R25,0x80
001336 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001337 3870      	CPI  R23,0x80
001338 f121      	BREQ __ADDF128
                 __ADDF121:
001339 2f57      	MOV  R21,R23
00133a 1b59      	SUB  R21,R25
00133b f12b      	BRVS __ADDF1211
00133c f412      	BRPL __ADDF122
00133d dfd7      	RCALL __SWAPACC
00133e cffa      	RJMP __ADDF121
                 __ADDF122:
00133f 3158      	CPI  R21,24
001340 f018      	BRLO __ADDF123
001341 27aa      	CLR  R26
001342 27bb      	CLR  R27
001343 2788      	CLR  R24
                 __ADDF123:
001344 3058      	CPI  R21,8
001345 f028      	BRLO __ADDF124
001346 2fab      	MOV  R26,R27
001347 2fb8      	MOV  R27,R24
001348 2788      	CLR  R24
001349 5058      	SUBI R21,8
00134a cff9      	RJMP __ADDF123
                 __ADDF124:
00134b 2355      	TST  R21
00134c f029      	BREQ __ADDF126
                 __ADDF125:
00134d 9586      	LSR  R24
00134e 95b7      	ROR  R27
00134f 95a7      	ROR  R26
001350 955a      	DEC  R21
001351 f7d9      	BRNE __ADDF125
                 __ADDF126:
001352 2d50      	MOV  R21,R0
001353 2551      	EOR  R21,R1
001354 f072      	BRMI __ADDF127
001355 dfcb      	RCALL __UADD12
001356 f438      	BRCC __ADDF129
001357 9567      	ROR  R22
001358 95f7      	ROR  R31
001359 95e7      	ROR  R30
00135a 9573      	INC  R23
00135b f413      	BRVC __ADDF129
00135c c020      	RJMP __MAXRES
                 __ADDF128:
00135d dfb7      	RCALL __SWAPACC
                 __ADDF129:
00135e df3e      	RCALL __REPACK
00135f 915f      	POP  R21
001360 9508      	RET
                 __ADDF1211:
001361 f7d8      	BRCC __ADDF128
001362 cffb      	RJMP __ADDF129
                 __ADDF127:
001363 1bea      	SUB  R30,R26
001364 0bfb      	SBC  R31,R27
001365 0b68      	SBC  R22,R24
001366 f051      	BREQ __ZERORES
001367 f410      	BRCC __ADDF1210
001368 9400      	COM  R0
001369 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00136a 2366      	TST  R22
00136b f392      	BRMI __ADDF129
00136c 0fee      	LSL  R30
00136d 1fff      	ROL  R31
00136e 1f66      	ROL  R22
00136f 957a      	DEC  R23
001370 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001371 27ee      	CLR  R30
001372 27ff      	CLR  R31
001373 2766      	CLR  R22
001374 2777      	CLR  R23
001375 915f      	POP  R21
001376 9508      	RET
                 
                 __MINRES:
001377 efef      	SER  R30
001378 efff      	SER  R31
001379 e76f      	LDI  R22,0x7F
00137a ef7f      	SER  R23
00137b 915f      	POP  R21
00137c 9508      	RET
                 
                 __MAXRES:
00137d efef      	SER  R30
00137e efff      	SER  R31
00137f e76f      	LDI  R22,0x7F
001380 e77f      	LDI  R23,0x7F
001381 915f      	POP  R21
001382 9508      	RET
                 
                 __MULF12:
001383 935f      	PUSH R21
001384 df2a      	RCALL __UNPACK
001385 3870      	CPI  R23,0x80
001386 f351      	BREQ __ZERORES
001387 3890      	CPI  R25,0x80
001388 f341      	BREQ __ZERORES
001389 2401      	EOR  R0,R1
00138a 9408      	SEC
00138b 1f79      	ADC  R23,R25
00138c f423      	BRVC __MULF124
00138d f31c      	BRLT __ZERORES
                 __MULF125:
00138e 2000      	TST  R0
00138f f33a      	BRMI __MINRES
001390 cfec      	RJMP __MAXRES
                 __MULF124:
001391 920f      	PUSH R0
001392 931f      	PUSH R17
001393 932f      	PUSH R18
001394 933f      	PUSH R19
001395 934f      	PUSH R20
001396 2711      	CLR  R17
001397 2722      	CLR  R18
001398 2799      	CLR  R25
001399 9f68      	MUL  R22,R24
00139a 01a0      	MOVW R20,R0
00139b 9f8f      	MUL  R24,R31
00139c 2d30      	MOV  R19,R0
00139d 0d41      	ADD  R20,R1
00139e 1f59      	ADC  R21,R25
00139f 9f6b      	MUL  R22,R27
0013a0 0d30      	ADD  R19,R0
0013a1 1d41      	ADC  R20,R1
0013a2 1f59      	ADC  R21,R25
0013a3 9f8e      	MUL  R24,R30
0013a4 d027      	RCALL __MULF126
0013a5 9fbf      	MUL  R27,R31
0013a6 d025      	RCALL __MULF126
0013a7 9f6a      	MUL  R22,R26
0013a8 d023      	RCALL __MULF126
0013a9 9fbe      	MUL  R27,R30
0013aa d01d      	RCALL __MULF127
0013ab 9faf      	MUL  R26,R31
0013ac d01b      	RCALL __MULF127
0013ad 9fae      	MUL  R26,R30
0013ae 0d11      	ADD  R17,R1
0013af 1f29      	ADC  R18,R25
0013b0 1f39      	ADC  R19,R25
0013b1 1f49      	ADC  R20,R25
0013b2 1f59      	ADC  R21,R25
0013b3 2fe3      	MOV  R30,R19
0013b4 2ff4      	MOV  R31,R20
0013b5 2f65      	MOV  R22,R21
0013b6 2f52      	MOV  R21,R18
0013b7 914f      	POP  R20
0013b8 913f      	POP  R19
0013b9 912f      	POP  R18
0013ba 911f      	POP  R17
0013bb 900f      	POP  R0
0013bc 2366      	TST  R22
0013bd f02a      	BRMI __MULF122
0013be 0f55      	LSL  R21
0013bf 1fee      	ROL  R30
0013c0 1fff      	ROL  R31
0013c1 1f66      	ROL  R22
0013c2 c002      	RJMP __MULF123
                 __MULF122:
0013c3 9573      	INC  R23
0013c4 f24b      	BRVS __MULF125
                 __MULF123:
0013c5 decd      	RCALL __ROUND_REPACK
0013c6 915f      	POP  R21
0013c7 9508      	RET
                 
                 __MULF127:
0013c8 0d10      	ADD  R17,R0
0013c9 1d21      	ADC  R18,R1
0013ca 1f39      	ADC  R19,R25
0013cb c002      	RJMP __MULF128
                 __MULF126:
0013cc 0d20      	ADD  R18,R0
0013cd 1d31      	ADC  R19,R1
                 __MULF128:
0013ce 1f49      	ADC  R20,R25
0013cf 1f59      	ADC  R21,R25
0013d0 9508      	RET
                 
                 __DIVF21:
0013d1 935f      	PUSH R21
0013d2 dedc      	RCALL __UNPACK
0013d3 3870      	CPI  R23,0x80
0013d4 f421      	BRNE __DIVF210
0013d5 2011      	TST  R1
                 __DIVF211:
0013d6 f40a      	BRPL __DIVF219
0013d7 cf9f      	RJMP __MINRES
                 __DIVF219:
0013d8 cfa4      	RJMP __MAXRES
                 __DIVF210:
0013d9 3890      	CPI  R25,0x80
0013da f409      	BRNE __DIVF218
                 __DIVF217:
0013db cf95      	RJMP __ZERORES
                 __DIVF218:
0013dc 2401      	EOR  R0,R1
0013dd 9408      	SEC
0013de 0b97      	SBC  R25,R23
0013df f41b      	BRVC __DIVF216
0013e0 f3d4      	BRLT __DIVF217
0013e1 2000      	TST  R0
0013e2 cff3      	RJMP __DIVF211
                 __DIVF216:
0013e3 2f79      	MOV  R23,R25
0013e4 931f      	PUSH R17
0013e5 932f      	PUSH R18
0013e6 933f      	PUSH R19
0013e7 934f      	PUSH R20
0013e8 2411      	CLR  R1
0013e9 2711      	CLR  R17
0013ea 2722      	CLR  R18
0013eb 2733      	CLR  R19
0013ec 2744      	CLR  R20
0013ed 2755      	CLR  R21
0013ee e290      	LDI  R25,32
                 __DIVF212:
0013ef 17ae      	CP   R26,R30
0013f0 07bf      	CPC  R27,R31
0013f1 0786      	CPC  R24,R22
0013f2 0741      	CPC  R20,R17
0013f3 f030      	BRLO __DIVF213
0013f4 1bae      	SUB  R26,R30
0013f5 0bbf      	SBC  R27,R31
0013f6 0b86      	SBC  R24,R22
0013f7 0b41      	SBC  R20,R17
0013f8 9408      	SEC
0013f9 c001      	RJMP __DIVF214
                 __DIVF213:
0013fa 9488      	CLC
                 __DIVF214:
0013fb 1f55      	ROL  R21
0013fc 1f22      	ROL  R18
0013fd 1f33      	ROL  R19
0013fe 1c11      	ROL  R1
0013ff 1faa      	ROL  R26
001400 1fbb      	ROL  R27
001401 1f88      	ROL  R24
001402 1f44      	ROL  R20
001403 959a      	DEC  R25
001404 f751      	BRNE __DIVF212
001405 01f9      	MOVW R30,R18
001406 2d61      	MOV  R22,R1
001407 914f      	POP  R20
001408 913f      	POP  R19
001409 912f      	POP  R18
00140a 911f      	POP  R17
00140b 2366      	TST  R22
00140c f032      	BRMI __DIVF215
00140d 0f55      	LSL  R21
00140e 1fee      	ROL  R30
00140f 1fff      	ROL  R31
001410 1f66      	ROL  R22
001411 957a      	DEC  R23
001412 f243      	BRVS __DIVF217
                 __DIVF215:
001413 de7f      	RCALL __ROUND_REPACK
001414 915f      	POP  R21
001415 9508      	RET
                 
                 __CMPF12:
001416 2399      	TST  R25
001417 f09a      	BRMI __CMPF120
001418 2377      	TST  R23
001419 f042      	BRMI __CMPF121
00141a 1797      	CP   R25,R23
00141b f048      	BRLO __CMPF122
00141c f429      	BRNE __CMPF121
00141d 17ae      	CP   R26,R30
00141e 07bf      	CPC  R27,R31
00141f 0786      	CPC  R24,R22
001420 f020      	BRLO __CMPF122
001421 f031      	BREQ __CMPF123
                 __CMPF121:
001422 9498      	CLZ
001423 9488      	CLC
001424 9508      	RET
                 __CMPF122:
001425 9498      	CLZ
001426 9408      	SEC
001427 9508      	RET
                 __CMPF123:
001428 9418      	SEZ
001429 9488      	CLC
00142a 9508      	RET
                 __CMPF120:
00142b 2377      	TST  R23
00142c f7c2      	BRPL __CMPF122
00142d 1797      	CP   R25,R23
00142e f398      	BRLO __CMPF121
00142f f7a9      	BRNE __CMPF122
001430 17ea      	CP   R30,R26
001431 07fb      	CPC  R31,R27
001432 0768      	CPC  R22,R24
001433 f388      	BRLO __CMPF122
001434 f399      	BREQ __CMPF123
001435 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
001436 2400      	CLR  R0
001437 0daf      	ADD  R26,R15
001438 1db0      	ADC  R27,R0
001439 9508      	RET
                 
                 __ADDD12:
00143a 0fea      	ADD  R30,R26
00143b 1ffb      	ADC  R31,R27
00143c 1f68      	ADC  R22,R24
00143d 1f79      	ADC  R23,R25
00143e 9508      	RET
                 
                 __ANEGW1:
00143f 95f1      	NEG  R31
001440 95e1      	NEG  R30
001441 40f0      	SBCI R31,0
001442 9508      	RET
                 
                 __ANEGD1:
001443 95f0      	COM  R31
001444 9560      	COM  R22
001445 9570      	COM  R23
001446 95e1      	NEG  R30
001447 4fff      	SBCI R31,-1
001448 4f6f      	SBCI R22,-1
001449 4f7f      	SBCI R23,-1
00144a 9508      	RET
                 
                 __ASRW8:
00144b 2fef      	MOV  R30,R31
00144c 27ff      	CLR  R31
00144d fde7      	SBRC R30,7
00144e efff      	SER  R31
00144f 9508      	RET
                 
                 __CBD1:
001450 2ffe      	MOV  R31,R30
001451 0fff      	ADD  R31,R31
001452 0bff      	SBC  R31,R31
001453 2f6f      	MOV  R22,R31
001454 2f7f      	MOV  R23,R31
001455 9508      	RET
                 
                 __CWD1:
001456 2f6f      	MOV  R22,R31
001457 0f66      	ADD  R22,R22
001458 0b66      	SBC  R22,R22
001459 2f76      	MOV  R23,R22
00145a 9508      	RET
                 
                 __CWD2:
00145b 2f8b      	MOV  R24,R27
00145c 0f88      	ADD  R24,R24
00145d 0b88      	SBC  R24,R24
00145e 2f98      	MOV  R25,R24
00145f 9508      	RET
                 
                 __MULD12U:
001460 9f7a      	MUL  R23,R26
001461 2d70      	MOV  R23,R0
001462 9f6b      	MUL  R22,R27
001463 0d70      	ADD  R23,R0
001464 9ff8      	MUL  R31,R24
001465 0d70      	ADD  R23,R0
001466 9fe9      	MUL  R30,R25
001467 0d70      	ADD  R23,R0
001468 9f6a      	MUL  R22,R26
001469 2d60      	MOV  R22,R0
00146a 0d71      	ADD  R23,R1
00146b 9ffb      	MUL  R31,R27
00146c 0d60      	ADD  R22,R0
00146d 1d71      	ADC  R23,R1
00146e 9fe8      	MUL  R30,R24
00146f 0d60      	ADD  R22,R0
001470 1d71      	ADC  R23,R1
001471 2788      	CLR  R24
001472 9ffa      	MUL  R31,R26
001473 2df0      	MOV  R31,R0
001474 0d61      	ADD  R22,R1
001475 1f78      	ADC  R23,R24
001476 9feb      	MUL  R30,R27
001477 0df0      	ADD  R31,R0
001478 1d61      	ADC  R22,R1
001479 1f78      	ADC  R23,R24
00147a 9fea      	MUL  R30,R26
00147b 2de0      	MOV  R30,R0
00147c 0df1      	ADD  R31,R1
00147d 1f68      	ADC  R22,R24
00147e 1f78      	ADC  R23,R24
00147f 9508      	RET
                 
                 __MULB1W2U:
001480 2f6e      	MOV  R22,R30
001481 9f6a      	MUL  R22,R26
001482 01f0      	MOVW R30,R0
001483 9f6b      	MUL  R22,R27
001484 0df0      	ADD  R31,R0
001485 9508      	RET
                 
                 __MULD12:
001486 d058      	RCALL __CHKSIGND
001487 dfd8      	RCALL __MULD12U
001488 f40e      	BRTC __MULD121
001489 dfb9      	RCALL __ANEGD1
                 __MULD121:
00148a 9508      	RET
                 
                 __DIVB21U:
00148b 2400      	CLR  R0
00148c e098      	LDI  R25,8
                 __DIVB21U1:
00148d 0faa      	LSL  R26
00148e 1c00      	ROL  R0
00148f 1a0e      	SUB  R0,R30
001490 f410      	BRCC __DIVB21U2
001491 0e0e      	ADD  R0,R30
001492 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
001493 60a1      	SBR  R26,1
                 __DIVB21U3:
001494 959a      	DEC  R25
001495 f7b9      	BRNE __DIVB21U1
001496 2fea      	MOV  R30,R26
001497 2da0      	MOV  R26,R0
001498 9508      	RET
                 
                 __DIVB21:
001499 d039      	RCALL __CHKSIGNB
00149a dff0      	RCALL __DIVB21U
00149b f40e      	BRTC __DIVB211
00149c 95e1      	NEG  R30
                 __DIVB211:
00149d 9508      	RET
                 
                 __DIVD21U:
00149e 933f      	PUSH R19
00149f 934f      	PUSH R20
0014a0 935f      	PUSH R21
0014a1 2400      	CLR  R0
0014a2 2411      	CLR  R1
0014a3 2744      	CLR  R20
0014a4 2755      	CLR  R21
0014a5 e230      	LDI  R19,32
                 __DIVD21U1:
0014a6 0faa      	LSL  R26
0014a7 1fbb      	ROL  R27
0014a8 1f88      	ROL  R24
0014a9 1f99      	ROL  R25
0014aa 1c00      	ROL  R0
0014ab 1c11      	ROL  R1
0014ac 1f44      	ROL  R20
0014ad 1f55      	ROL  R21
0014ae 1a0e      	SUB  R0,R30
0014af 0a1f      	SBC  R1,R31
0014b0 0b46      	SBC  R20,R22
0014b1 0b57      	SBC  R21,R23
0014b2 f428      	BRCC __DIVD21U2
0014b3 0e0e      	ADD  R0,R30
0014b4 1e1f      	ADC  R1,R31
0014b5 1f46      	ADC  R20,R22
0014b6 1f57      	ADC  R21,R23
0014b7 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0014b8 60a1      	SBR  R26,1
                 __DIVD21U3:
0014b9 953a      	DEC  R19
0014ba f759      	BRNE __DIVD21U1
0014bb 01fd      	MOVW R30,R26
0014bc 01bc      	MOVW R22,R24
0014bd 01d0      	MOVW R26,R0
0014be 01ca      	MOVW R24,R20
0014bf 915f      	POP  R21
0014c0 914f      	POP  R20
0014c1 913f      	POP  R19
0014c2 9508      	RET
                 
                 __MODB21:
0014c3 94e8      	CLT
0014c4 ffa7      	SBRS R26,7
0014c5 c002      	RJMP __MODB211
0014c6 95a1      	NEG  R26
0014c7 9468      	SET
                 __MODB211:
0014c8 fde7      	SBRC R30,7
0014c9 95e1      	NEG  R30
0014ca dfc0      	RCALL __DIVB21U
0014cb 2fea      	MOV  R30,R26
0014cc f40e      	BRTC __MODB212
0014cd 95e1      	NEG  R30
                 __MODB212:
0014ce 9508      	RET
                 
                 __MODD21U:
0014cf dfce      	RCALL __DIVD21U
0014d0 01fd      	MOVW R30,R26
0014d1 01bc      	MOVW R22,R24
0014d2 9508      	RET
                 
                 __CHKSIGNB:
0014d3 94e8      	CLT
0014d4 ffe7      	SBRS R30,7
0014d5 c002      	RJMP __CHKSB1
0014d6 95e1      	NEG  R30
0014d7 9468      	SET
                 __CHKSB1:
0014d8 ffa7      	SBRS R26,7
0014d9 c004      	RJMP __CHKSB2
0014da 95a1      	NEG  R26
0014db f800      	BLD  R0,0
0014dc 9403      	INC  R0
0014dd fa00      	BST  R0,0
                 __CHKSB2:
0014de 9508      	RET
                 
                 __CHKSIGND:
0014df 94e8      	CLT
0014e0 ff77      	SBRS R23,7
0014e1 c002      	RJMP __CHKSD1
0014e2 df60      	RCALL __ANEGD1
0014e3 9468      	SET
                 __CHKSD1:
0014e4 ff97      	SBRS R25,7
0014e5 c00b      	RJMP __CHKSD2
0014e6 2400      	CLR  R0
0014e7 95a0      	COM  R26
0014e8 95b0      	COM  R27
0014e9 9580      	COM  R24
0014ea 9590      	COM  R25
0014eb 9611      	ADIW R26,1
0014ec 1d80      	ADC  R24,R0
0014ed 1d90      	ADC  R25,R0
0014ee f800      	BLD  R0,0
0014ef 9403      	INC  R0
0014f0 fa00      	BST  R0,0
                 __CHKSD2:
0014f1 9508      	RET
                 
                 __GETW1P:
0014f2 91ed      	LD   R30,X+
0014f3 91fc      	LD   R31,X
0014f4 9711      	SBIW R26,1
0014f5 9508      	RET
                 
                 __GETD1P:
0014f6 91ed      	LD   R30,X+
0014f7 91fd      	LD   R31,X+
0014f8 916d      	LD   R22,X+
0014f9 917c      	LD   R23,X
0014fa 9713      	SBIW R26,3
0014fb 9508      	RET
                 
                 __GETD1P_INC:
0014fc 91ed      	LD   R30,X+
0014fd 91fd      	LD   R31,X+
0014fe 916d      	LD   R22,X+
0014ff 917d      	LD   R23,X+
001500 9508      	RET
                 
                 __PUTDP1:
001501 93ed      	ST   X+,R30
001502 93fd      	ST   X+,R31
001503 936d      	ST   X+,R22
001504 937c      	ST   X,R23
001505 9508      	RET
                 
                 __PUTDP1_DEC:
001506 937e      	ST   -X,R23
001507 936e      	ST   -X,R22
001508 93fe      	ST   -X,R31
001509 93ee      	ST   -X,R30
00150a 9508      	RET
                 
                 __GETD1S0:
00150b 81e8      	LD   R30,Y
00150c 81f9      	LDD  R31,Y+1
00150d 816a      	LDD  R22,Y+2
00150e 817b      	LDD  R23,Y+3
00150f 9508      	RET
                 
                 __GETD2S0:
001510 81a8      	LD   R26,Y
001511 81b9      	LDD  R27,Y+1
001512 818a      	LDD  R24,Y+2
001513 819b      	LDD  R25,Y+3
001514 9508      	RET
                 
                 __PUTD1S0:
001515 83e8      	ST   Y,R30
001516 83f9      	STD  Y+1,R31
001517 836a      	STD  Y+2,R22
001518 837b      	STD  Y+3,R23
001519 9508      	RET
                 
                 __PUTPARD1:
00151a 937a      	ST   -Y,R23
00151b 936a      	ST   -Y,R22
00151c 93fa      	ST   -Y,R31
00151d 93ea      	ST   -Y,R30
00151e 9508      	RET
                 
                 __CDF2U:
00151f 9468      	SET
001520 c001      	RJMP __CDF2U0
                 __CDF2:
001521 94e8      	CLT
                 __CDF2U0:
001522 d001      	RCALL __SWAPD12
001523 ddd6      	RCALL __CDF1U0
                 
                 __SWAPD12:
001524 2e18      	MOV  R1,R24
001525 2f86      	MOV  R24,R22
001526 2d61      	MOV  R22,R1
001527 2e19      	MOV  R1,R25
001528 2f97      	MOV  R25,R23
001529 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00152a 2e1b      	MOV  R1,R27
00152b 2fbf      	MOV  R27,R31
00152c 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00152d 2e1a      	MOV  R1,R26
00152e 2fae      	MOV  R26,R30
00152f 2de1      	MOV  R30,R1
001530 9508      	RET
                 
                 __CPD10:
001531 9730      	SBIW R30,0
001532 4060      	SBCI R22,0
001533 4070      	SBCI R23,0
001534 9508      	RET
                 
                 __SAVELOCR6:
001535 935a      	ST   -Y,R21
                 __SAVELOCR5:
001536 934a      	ST   -Y,R20
                 __SAVELOCR4:
001537 933a      	ST   -Y,R19
                 __SAVELOCR3:
001538 932a      	ST   -Y,R18
                 __SAVELOCR2:
001539 931a      	ST   -Y,R17
00153a 930a      	ST   -Y,R16
00153b 9508      	RET
                 
                 __LOADLOCR6:
00153c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00153d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00153e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00153f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001540 8119      	LDD  R17,Y+1
001541 8108      	LD   R16,Y
001542 9508      	RET
                 
                 __INITLOCW:
001543 0fac      	ADD  R26,R28
001544 1fbd      	ADC  R27,R29
                 __INITLOC0:
001545 9005      	LPM  R0,Z+
001546 920d      	ST   X+,R0
001547 9701      	SBIW R24,1
001548 f7e1      	BRNE __INITLOC0
001549 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 179 r1 :  80 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  73 r17:  97 r18:  75 r19:  77 r20:  59 r21: 105 r22: 230 r23: 210 
r24: 135 r25: 112 r26: 447 r27: 221 r28: 155 r29:   3 r30: 994 r31: 421 
x  : 322 y  : 650 z  : 122 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  38 add   :  31 
adiw  :  55 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  75 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  79 brpl  :   9 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   4 call  : 462 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  64 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  22 cpc   :  26 cpi   : 135 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  12 inc   :   4 jmp   :  53 ld    : 267 ldd   : 294 
ldi   : 478 lds   :  38 lpm   :  17 lsl   :  14 lsr   :   4 mov   : 112 
movw  : 230 mul   :  24 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  34 pop   :  67 push  :  67 rcall :  82 
ret   : 160 reti  :   6 rjmp  : 207 rol   :  32 ror   :  16 sbc   :  12 
sbci  : 146 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  51 sbr   :   4 
sbrc  :   5 sbrs  :  22 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 374 std   : 144 sts   :  35 sub   :   6 subi  : 168 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002a94  10070    830  10900  131072   8.3%
[.dseg] 0x000100 0x00058e      0    142    142    4351   3.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
