
<<<<<<< HEAD
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Mon Feb 17 17:41:01 2020
=======
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Mon Feb 17 17:56:53 2020
>>>>>>> merget

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r10 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1068): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _SRF02_CONVERTING_FLAG=R8
                 	.DEF _SRF02_WAIT_FLAG=R11
                 	.DEF _CHECK_GETS=R10
                 	.DEF _CHECK_CONTROL=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0187 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 037f 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0391 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0385 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 0345 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0357 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x74:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1185): warning: .cseg .db misalignment - padding zero byte
000163 0000      	.DB  0x0,0x0,0x0
                 _0x90:
000164 0000
000165 0000
000166 0000
000167 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000168 0000      	.DB  0x0,0x0
                 _0x0:
<<<<<<< HEAD
000169 253c
00016a 2c64
00016b 6425
00016c 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00016d 3e64
00016e 2500
00016f 2c64
000170 2520      	.DB  0x64,0x3E,0x0,0x25,0x64,0x2C,0x20,0x25
000171 2c64
000172 2520
000173 2c64
000174 2520      	.DB  0x64,0x2C,0x20,0x25,0x64,0x2C,0x20,0x25
000175 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1193): warning: .cseg .db misalignment - padding zero byte
000176 0000      	.DB  0x64,0xA,0x0
=======
000168 253c
000169 2c64
00016a 6425
00016b 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00016c 3e64
00016d 2500
00016e 2c64
00016f 2520      	.DB  0x64,0x3E,0x0,0x25,0x64,0x2C,0x20,0x25
000170 2c64
000171 2520
000172 2c64
000173 2520      	.DB  0x64,0x2C,0x20,0x25,0x64,0x2C,0x20,0x25
000174 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1192): warning: .cseg .db misalignment - padding zero byte
000175 0000      	.DB  0x64,0xA,0x0
>>>>>>> merget
                 _0x2000000:
000177 4e2d
000178 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1195): warning: .cseg .db misalignment - padding zero byte
000179 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1197): warning: .cseg .db misalignment - padding zero byte
00017a 0001      	.DB  0x1
                 _0x2080000:
00017b 4e2d
00017c 4e41
00017d 4900
00017e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1200): warning: .cseg .db misalignment - padding zero byte
00017f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000180 000a      	.DW  0x0A
000181 0004      	.DW  0x04
000182 02c8      	.DW  _0x90*2
                 
000183 0001      	.DW  0x01
000184 057a      	.DW  __seed_G104
000185 02f4      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000186 0000      	.DW  0
                 
                 __RESET:
000187 94f8      	CLI
000188 27ee      	CLR  R30
000189 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00018a e0f1      	LDI  R31,1
00018b bff5      	OUT  MCUCR,R31
00018c bfe5      	OUT  MCUCR,R30
00018d 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00018f e1f8      	LDI  R31,0x18
000190 bdf1      	OUT  WDTCR,R31
000191 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000192 e08d      	LDI  R24,(14-2)+1
000193 e0a2      	LDI  R26,2
000194 27bb      	CLR  R27
                 __CLEAR_REG:
000195 93ed      	ST   X+,R30
000196 958a      	DEC  R24
000197 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000198 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000199 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00019a e0a0      	LDI  R26,LOW(__SRAM_START)
00019b e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019c 93ed      	ST   X+,R30
00019d 9701      	SBIW R24,1
00019e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019f e0e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001a0 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a1 9185      	LPM  R24,Z+
0001a2 9195      	LPM  R25,Z+
0001a3 9700      	SBIW R24,0
0001a4 f061      	BREQ __GLOBAL_INI_END
0001a5 91a5      	LPM  R26,Z+
0001a6 91b5      	LPM  R27,Z+
0001a7 9005      	LPM  R0,Z+
0001a8 9015      	LPM  R1,Z+
0001a9 01bf      	MOVW R22,R30
0001aa 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001ab 9005      	LPM  R0,Z+
0001ac 920d      	ST   X+,R0
0001ad 9701      	SBIW R24,1
0001ae f7e1      	BRNE __GLOBAL_INI_LOOP
0001af 01fb      	MOVW R30,R22
0001b0 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b1 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b2 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b3 bfed      	OUT  SPL,R30
0001b4 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b6 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b7 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b8 940c 03a5 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 60 // 0.03msec
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.281
                 ;#define Gearratio 20
                 ;
                 ;#define Circular 57.29                      // 180 / PI
                 ;
                 ;
                 ;/////////////////////////TWI//////////////////////////
                 ;#define Inches 0x50
                 ;#define Centimeters 0x51
                 ;#define microSec 0x52
                 ;#define USID 0xE4
                 ;
                 ;#define CommandReg 0
                 ;#define Unused 1
                 ;#define RangeHighByte 2
                 ;#define RangeLowByte 3
                 ;
                 ;#define TWI_START 0x08
                 ;#define MT_REPEATED_START 0x10
                 ;#define MT_SLAW_ACK 0x18
                 ;#define MT_DATA_ACK 0x28
                 ;#define MT_SLAR_ACK 0x40
                 ;#define MT_DATA_NACK 0x58
                 ;
                 ;#define ts 0.070         /// 샘플링 시간
                 ;#define tau 0.1         /// 시정수
                 ;
                 ;//////////////////////integer////////////////
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;
                 ;///////////////FLAG//////////////////////
                 ;unsigned char SRF02_CONVERTING_FLAG = 0;
                 ;unsigned char SRF02_WAIT_FLAG = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned char CHECK_CONTROL = 0;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0040 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0041     UCSR1A = 0x00;
                 ;	bps -> Y+0
<<<<<<< HEAD
0001ba e0e0      	LDI  R30,LOW(0)
0001bb 93e0 009b 	STS  155,R30
                 ; 0000 0042     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0001bd e9e8      	LDI  R30,LOW(152)
0001be 93e0 009a 	STS  154,R30
                 ; 0000 0043     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0001c0 e0e6      	LDI  R30,LOW(6)
0001c1 93e0 009d 	STS  157,R30
                 ; 0000 0044     UCSR1C &= ~(1<<UMSEL1);
0001c3 91e0 009d 	LDS  R30,157
0001c5 7bef      	ANDI R30,0xBF
0001c6 93e0 009d 	STS  157,R30
                 ; 0000 0045 
                 ; 0000 0046     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0001c8 81e8      	LD   R30,Y
0001c9 81f9      	LDD  R31,Y+1
0001ca 940e 10c1 	CALL __ASRW8
0001cc 93e0 0098 	STS  152,R30
                 ; 0000 0047     UBRR1L = (unsigned char)(bps & 0x00ff);
0001ce 81e8      	LD   R30,Y
0001cf 93e0 0099 	STS  153,R30
                 ; 0000 0048 }
0001d1 c014      	RJMP _0x20A0010
=======
0001b9 e0e0      	LDI  R30,LOW(0)
0001ba 93e0 009b 	STS  155,R30
                 ; 0000 0027     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0001bc e9e8      	LDI  R30,LOW(152)
0001bd 93e0 009a 	STS  154,R30
                 ; 0000 0028     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0001bf e0e6      	LDI  R30,LOW(6)
0001c0 93e0 009d 	STS  157,R30
                 ; 0000 0029     UCSR1C &= ~(1<<UMSEL1);
0001c2 91e0 009d 	LDS  R30,157
0001c4 7bef      	ANDI R30,0xBF
0001c5 93e0 009d 	STS  157,R30
                 ; 0000 002A 
                 ; 0000 002B     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0001c7 81e8      	LD   R30,Y
0001c8 81f9      	LDD  R31,Y+1
0001c9 940e 10ae 	CALL __ASRW8
0001cb 93e0 0098 	STS  152,R30
                 ; 0000 002C     UBRR1L = (unsigned char)(bps & 0x00ff);
0001cd 81e8      	LD   R30,Y
0001ce 93e0 0099 	STS  153,R30
                 ; 0000 002D }
0001d0 c014      	RJMP _0x20A000F
>>>>>>> merget
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 004B {
                 _usart0_init:
                 ; 0000 004C     UCSR0A = 0x00;
                 ;	bps -> Y+0
<<<<<<< HEAD
0001d2 e0e0      	LDI  R30,LOW(0)
0001d3 b9eb      	OUT  0xB,R30
                 ; 0000 004D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0001d4 e9e8      	LDI  R30,LOW(152)
0001d5 b9ea      	OUT  0xA,R30
                 ; 0000 004E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0001d6 e0e6      	LDI  R30,LOW(6)
0001d7 93e0 0095 	STS  149,R30
                 ; 0000 004F     UCSR0C &= ~(1<<UMSEL0);
0001d9 91e0 0095 	LDS  R30,149
0001db 7bef      	ANDI R30,0xBF
0001dc 93e0 0095 	STS  149,R30
                 ; 0000 0050 
                 ; 0000 0051     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0001de 81e8      	LD   R30,Y
0001df 81f9      	LDD  R31,Y+1
0001e0 940e 10c1 	CALL __ASRW8
0001e2 93e0 0090 	STS  144,R30
                 ; 0000 0052     UBRR0L = (unsigned char)(bps & 0x00ff);
0001e4 81e8      	LD   R30,Y
0001e5 b9e9      	OUT  0x9,R30
                 ; 0000 0053 }
                 _0x20A0010:
0001e6 9622      	ADIW R28,2
0001e7 9508      	RET
=======
0001d1 e0e0      	LDI  R30,LOW(0)
0001d2 b9eb      	OUT  0xB,R30
                 ; 0000 0032     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0001d3 e9e8      	LDI  R30,LOW(152)
0001d4 b9ea      	OUT  0xA,R30
                 ; 0000 0033     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0001d5 e0e6      	LDI  R30,LOW(6)
0001d6 93e0 0095 	STS  149,R30
                 ; 0000 0034     UCSR0C &= ~(1<<UMSEL0);
0001d8 91e0 0095 	LDS  R30,149
0001da 7bef      	ANDI R30,0xBF
0001db 93e0 0095 	STS  149,R30
                 ; 0000 0035 
                 ; 0000 0036     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0001dd 81e8      	LD   R30,Y
0001de 81f9      	LDD  R31,Y+1
0001df 940e 10ae 	CALL __ASRW8
0001e1 93e0 0090 	STS  144,R30
                 ; 0000 0037     UBRR0L = (unsigned char)(bps & 0x00ff);
0001e3 81e8      	LD   R30,Y
0001e4 b9e9      	OUT  0x9,R30
                 ; 0000 0038 }
                 _0x20A000F:
0001e5 9622      	ADIW R28,2
0001e6 9508      	RET
>>>>>>> merget
                 ;
                 ;void timer2_init(void)
                 ; 0000 0056 {
                 _timer2_init:
                 ; 0000 0057     //TIMER2
                 ; 0000 0058     TCCR2 = (1<<WGM21)|(1<<CS21)|(1<<CS20);// CTC모드, 1분주
0001e8 e0eb      	LDI  R30,LOW(11)
0001e9 bde5      	OUT  0x25,R30
                 ; 0000 0059 
                 ; 0000 005A     OCR2 = 40;
0001ea e2e8      	LDI  R30,LOW(40)
0001eb bde3      	OUT  0x23,R30
                 ; 0000 005B     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0001ec e8e2      	LDI  R30,LOW(130)
0001ed c010      	RJMP _0x20A000F
                 ; 0000 005C     //TIMSK = (1<<OCIE2);
                 ; 0000 005D }
                 ;void timer0_init(void)
                 ; 0000 005F {
                 _timer0_init:
                 ; 0000 0060     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0001ee e0e7      	LDI  R30,LOW(7)
0001ef bfe3      	OUT  0x33,R30
                 ; 0000 0061     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0001f0 e8e1      	LDI  R30,LOW(129)
0001f1 c00c      	RJMP _0x20A000F
                 ; 0000 0062 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 0065 {
                 _timer1_init:
                 ; 0000 0066     // TCCR1A = (1<<COM1B0);
                 ; 0000 0067     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0001f2 e1ed      	LDI  R30,LOW(29)
0001f3 bdee      	OUT  0x2E,R30
                 ; 0000 0068 
                 ; 0000 0069     OCR1B = 255;
0001f4 efef      	LDI  R30,LOW(255)
0001f5 e0f0      	LDI  R31,HIGH(255)
0001f6 bdf9      	OUT  0x28+1,R31
0001f7 bde8      	OUT  0x28,R30
                 ; 0000 006A     ICR1 = 1200;
0001f8 ebe0      	LDI  R30,LOW(1200)
0001f9 e0f4      	LDI  R31,HIGH(1200)
0001fa bdf7      	OUT  0x26+1,R31
0001fb bde6      	OUT  0x26,R30
                 ; 0000 006B     TIMSK |= (1<<OCIE1B);
0001fc b7e7      	IN   R30,0x37
0001fd 60e8      	ORI  R30,8
                 _0x20A000F:
0001fe bfe7      	OUT  0x37,R30
                 ; 0000 006C }
0001ff 9508      	RET
                 ;
                 ;void TWI_Init(){
                 ; 0000 006E void TWI_Init(){
                 ; 0000 006F     TWBR = 10;
                 ; 0000 0070     TWSR = 0;
                 ; 0000 0071     TWCR = 0;
                 ; 0000 0072 }
                 ;
                 ;
                 ;////////////////////USART RTX/////////////////////////////////
                 ;void putch_USART1(char data)
                 ; 0000 0077 {
                 _putch_USART1:
                 ; 0000 0078     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
000200 91e0 009b 	LDS  R30,155
000202 72e0      	ANDI R30,LOW(0x20)
000203 f3e1      	BREQ _0x3
                 ; 0000 0079     UDR1 = data;
000204 81e8      	LD   R30,Y
000205 93e0 009c 	STS  156,R30
                 ; 0000 007A }
000207 c023      	RJMP _0x20A000E
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 007D {
                 _puts_USART1:
                 ; 0000 007E     unsigned char i = 0;
                 ; 0000 007F     unsigned char x = 0;
                 ; 0000 0080     for(i = 0; str[i] ;i++){
000208 931a      	ST   -Y,R17
000209 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
00020a e010      	LDI  R17,0
00020b e000      	LDI  R16,0
00020c e010      	LDI  R17,LOW(0)
                 _0x7:
<<<<<<< HEAD
00020d 940e 0cbe 	CALL SUBOPT_0x0
00020f 30e0      	CPI  R30,0
000210 f031      	BREQ _0x8
                 ; 0000 0081         putch_USART1(str[i]);
000211 940e 0cbe 	CALL SUBOPT_0x0
000213 93ea      	ST   -Y,R30
000214 dfeb      	RCALL _putch_USART1
                 ; 0000 0082     }
000215 5f1f      	SUBI R17,-1
000216 cff6      	RJMP _0x7
=======
00020c 940e 0c9b 	CALL SUBOPT_0x0
00020e 30e0      	CPI  R30,0
00020f f031      	BREQ _0x8
                 ; 0000 006E         putch_USART1(str[i]);
000210 940e 0c9b 	CALL SUBOPT_0x0
000212 93ea      	ST   -Y,R30
000213 dfeb      	RCALL _putch_USART1
                 ; 0000 006F     }
000214 5f1f      	SUBI R17,-1
000215 cff6      	RJMP _0x7
>>>>>>> merget
                 _0x8:
                 ; 0000 0083     for(x = 0; x<i; x++){
000217 e000      	LDI  R16,LOW(0)
                 _0xA:
000218 1701      	CP   R16,R17
000219 f450      	BRSH _0xB
                 ; 0000 0084         *(str++) = 0;
00021a 81aa      	LDD  R26,Y+2
00021b 81bb      	LDD  R27,Y+2+1
00021c 9611      	ADIW R26,1
00021d 83aa      	STD  Y+2,R26
00021e 83bb      	STD  Y+2+1,R27
00021f 9711      	SBIW R26,1
000220 e0e0      	LDI  R30,LOW(0)
000221 93ec      	ST   X,R30
                 ; 0000 0085     }
000222 5f0f      	SUBI R16,-1
000223 cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0086 }
000224 8119      	LDD  R17,Y+1
000225 8108      	LDD  R16,Y+0
000226 c0ea      	RJMP _0x20A000C
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0089 {
                 ; 0000 008A     unsigned char i = 0;
                 ; 0000 008B     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 008C     // if(TIMER2_OVERFLOW>0)
                 ; 0000 008D     // {
                 ; 0000 008E         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 008F for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 0091 UCSR0B |= (1<<4       );
                 ; 0000 0092 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0095 {
                 _putch_USART0:
                 ; 0000 0096     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x12:
000227 9b5d      	SBIS 0xB,5
000228 cffe      	RJMP _0x12
                 ; 0000 0097     UDR0 = data;
000229 81e8      	LD   R30,Y
00022a b9ec      	OUT  0xC,R30
                 ; 0000 0098 }
                 _0x20A000E:
00022b 9621      	ADIW R28,1
00022c 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 009B {
                 ; 0000 009C     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 009D     unsigned char i = 0;
                 ; 0000 009E     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009F     {
                 ; 0000 00A0         putch_USART1(*(str+i));
                 ; 0000 00A1     }
                 ; 0000 00A2 
                 ; 0000 00A3     for(i = 0; i<IDX; i++)
                 ; 0000 00A4     {
                 ; 0000 00A5         *(str+i) = 0;
                 ; 0000 00A6     }
                 ; 0000 00A7 }
                 ;
                 ;///////////////////////Modbus///////////////////////////////////////
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00AB {
                 _CRC16:
<<<<<<< HEAD
                 ; 0000 00AC     int i;
                 ; 0000 00AD     unsigned short crc, flag;
                 ; 0000 00AE     crc = 0xffff;
00022d 940e 1179 	CALL __SAVELOCR6
=======
                 ; 0000 00A8     int i;
                 ; 0000 00A9     unsigned short crc, flag;
                 ; 0000 00AA     crc = 0xffff;
00022c 940e 1160 	CALL __SAVELOCR6
>>>>>>> merget
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00022f ef2f     +LDI R18 , LOW ( - 1 )
000230 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00AF 
                 ; 0000 00B0     while(usDataLen--){
                 _0x1B:
000231 81ee      	LDD  R30,Y+6
000232 81ff      	LDD  R31,Y+6+1
000233 9731      	SBIW R30,1
000234 83ee      	STD  Y+6,R30
000235 83ff      	STD  Y+6+1,R31
000236 9631      	ADIW R30,1
000237 f0f9      	BREQ _0x1D
                 ; 0000 00B1         crc ^= *puchMsg++;
000238 85a8      	LDD  R26,Y+8
000239 85b9      	LDD  R27,Y+8+1
00023a 91ed      	LD   R30,X+
00023b 87a8      	STD  Y+8,R26
00023c 87b9      	STD  Y+8+1,R27
00023d e0f0      	LDI  R31,0
                +
00023e 272e     +EOR R18 , R30
00023f 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B2 
                 ; 0000 00B3         for (i=0; i<8; i++){
                +
000240 e000     +LDI R16 , LOW ( 0 )
000241 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1F:
                +
000242 3008     +CPI R16 , LOW ( 8 )
000243 e0e0     +LDI R30 , HIGH ( 8 )
000244 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000245 f484      	BRGE _0x20
                 ; 0000 00B4             flag = crc & 0x0001;
000246 01f9      	MOVW R30,R18
000247 70e1      	ANDI R30,LOW(0x1)
000248 70f0      	ANDI R31,HIGH(0x1)
000249 01af      	MOVW R20,R30
                 ; 0000 00B5             crc >>= 1;
00024a 9536      	LSR  R19
00024b 9527      	ROR  R18
                 ; 0000 00B6             if(flag) crc ^= POLYNORMIAL;
00024c 2e04      	MOV  R0,R20
00024d 2a05      	OR   R0,R21
00024e f021      	BREQ _0x21
00024f e0e1      	LDI  R30,LOW(40961)
000250 eaf0      	LDI  R31,HIGH(40961)
                +
000251 272e     +EOR R18 , R30
000252 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B7         }
                 _0x21:
                +
000253 5f0f     +SUBI R16 , LOW ( - 1 )
000254 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
<<<<<<< HEAD
000255 cfec      	RJMP _0x1F
                 _0x20:
                 ; 0000 00B8     }
000256 cfda      	RJMP _0x1B
                 _0x1D:
                 ; 0000 00B9     return crc;
000257 01f9      	MOVW R30,R18
000258 940e 1180 	CALL __LOADLOCR6
00025a 962a      	ADIW R28,10
00025b 9508      	RET
                 ; 0000 00BA }
=======
000254 cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00B4     }
000255 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00B5     return crc;
000256 01f9      	MOVW R30,R18
000257 940e 1167 	CALL __LOADLOCR6
000259 962a      	ADIW R28,10
00025a 9508      	RET
                 ; 0000 00B6 }
>>>>>>> merget
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00BD {
                 _RTU_WriteOperate0:
<<<<<<< HEAD
                 ; 0000 00BE     char protocol[8];
                 ; 0000 00BF     unsigned short crc16;
                 ; 0000 00C0     int i=0;
                 ; 0000 00C1     PACKET_BUFF_IDX = 0;
00025c 940e 0cc5 	CALL SUBOPT_0x1
=======
                 ; 0000 00BA     char protocol[8];
                 ; 0000 00BB     unsigned short crc16;
                 ; 0000 00BC     int i=0;
                 ; 0000 00BD     //PACKET_BUFF_IDX = 0;
                 ; 0000 00BE 
                 ; 0000 00BF     protocol[0]=device_address;
00025b 940e 0ca2 	CALL SUBOPT_0x1
>>>>>>> merget
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
<<<<<<< HEAD
                 ; 0000 00C2 
                 ; 0000 00C3     protocol[0]=device_address;
                 ; 0000 00C4     protocol[1]=0x06;
00025e e0e6      	LDI  R30,LOW(6)
00025f 940e 0cce 	CALL SUBOPT_0x2
                 ; 0000 00C5     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C6     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C7     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C8     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C9     protocol[6]=0;
                 ; 0000 00CA     protocol[7]=0;
                 ; 0000 00CB 
                 ; 0000 00CC     crc16 = CRC16(protocol, 6);
=======
                 ; 0000 00C0     protocol[1]=0x06;
00025d e0e6      	LDI  R30,LOW(6)
00025e 940e 0caa 	CALL SUBOPT_0x2
                 ; 0000 00C1     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C2     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C3     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C4     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C5     protocol[6]=0;
                 ; 0000 00C6     protocol[7]=0;
                 ; 0000 00C7 
                 ; 0000 00C8     crc16 = CRC16(protocol, 6);
                 ; 0000 00C9 
                 ; 0000 00CA     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00CB     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00CC 
>>>>>>> merget
                 ; 0000 00CD 
                 ; 0000 00CE     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00CF     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00D0 
                 ; 0000 00D1 
                 ; 0000 00D2     for(i=0;i<8;i++)
                 _0x23:
                +
000261 3028     +CPI R18 , LOW ( 8 )
000262 e0e0     +LDI R30 , HIGH ( 8 )
000263 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
<<<<<<< HEAD
000264 f42c      	BRGE _0x24
                 ; 0000 00D3     {
                 ; 0000 00D4         putch_USART0(*(protocol+i));
000265 940e 0cf1 	CALL SUBOPT_0x3
                 ; 0000 00D5     }
                +
000267 5f2f     +SUBI R18 , LOW ( - 1 )
000268 4f3f     +SBCI R19 , HIGH ( - 1 )
=======
000263 f42c      	BRGE _0x25
                 ; 0000 00CF     {
                 ; 0000 00D0         putch_USART0(*(protocol+i));
000264 940e 0ccd 	CALL SUBOPT_0x3
                 ; 0000 00D1     }
                +
000266 5f2f     +SUBI R18 , LOW ( - 1 )
000267 4f3f     +SBCI R19 , HIGH ( - 1 )
>>>>>>> merget
                 	__ADDWRN 18,19,1
000269 cff7      	RJMP _0x23
                 _0x24:
                 ; 0000 00D6 }
00026a c00e      	RJMP _0x20A000D
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00D9 {
                 _RTU_ReedOperate0:
<<<<<<< HEAD
                 ; 0000 00DA     char protocol[8];
                 ; 0000 00DB     unsigned short crc16;
                 ; 0000 00DC     int i=0;
                 ; 0000 00DD     PACKET_BUFF_IDX = 0;
00026b 940e 0cc5 	CALL SUBOPT_0x1
=======
                 ; 0000 00F2     char protocol[8];
                 ; 0000 00F3     unsigned short crc16;
                 ; 0000 00F4     int i=0;
                 ; 0000 00F5     //PACKET_BUFF_IDX = 0;
                 ; 0000 00F6 
                 ; 0000 00F7     protocol[0]=device_address;
00026a 940e 0ca2 	CALL SUBOPT_0x1
>>>>>>> merget
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
<<<<<<< HEAD
                 ; 0000 00DE 
                 ; 0000 00DF     protocol[0]=device_address;
                 ; 0000 00E0     protocol[1]=0x04;
00026d e0e4      	LDI  R30,LOW(4)
00026e 940e 0cce 	CALL SUBOPT_0x2
                 ; 0000 00E1     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00E2     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00E3     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00E4     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00E5     protocol[6]=0;
                 ; 0000 00E6     protocol[7]=0;
                 ; 0000 00E7 
                 ; 0000 00E8     crc16 = CRC16(protocol, 6);
                 ; 0000 00E9 
                 ; 0000 00EA     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00EB     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00EC 
                 ; 0000 00ED 
                 ; 0000 00EE     for(i=0;i<8;i++)
                 _0x26:
                +
000270 3028     +CPI R18 , LOW ( 8 )
000271 e0e0     +LDI R30 , HIGH ( 8 )
000272 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000273 f42c      	BRGE _0x27
                 ; 0000 00EF     {
                 ; 0000 00F0         putch_USART0(*(protocol+i));
000274 940e 0cf1 	CALL SUBOPT_0x3
                 ; 0000 00F1     }
                +
000276 5f2f     +SUBI R18 , LOW ( - 1 )
000277 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000278 cff7      	RJMP _0x26
                 _0x27:
                 ; 0000 00F2 }
                 _0x20A000D:
000279 940e 1182 	CALL __LOADLOCR4
00027b 9661      	ADIW R28,17
00027c 9508      	RET
=======
                 ; 0000 00F8     protocol[1]=0x04;
00026c e0e4      	LDI  R30,LOW(4)
00026d 940e 0caa 	CALL SUBOPT_0x2
                 ; 0000 00F9     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00FA     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00FB     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00FC     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00FD     protocol[6]=0;
                 ; 0000 00FE     protocol[7]=0;
                 ; 0000 00FF 
                 ; 0000 0100     crc16 = CRC16(protocol, 6);
                 ; 0000 0101 
                 ; 0000 0102     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 0103     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 0104 
                 ; 0000 0105 
                 ; 0000 0106     for(i=0;i<8;i++)
                 _0x2A:
                +
00026f 3028     +CPI R18 , LOW ( 8 )
000270 e0e0     +LDI R30 , HIGH ( 8 )
000271 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000272 f42c      	BRGE _0x2B
                 ; 0000 0107     {
                 ; 0000 0108         putch_USART0(*(protocol+i));
000273 940e 0ccd 	CALL SUBOPT_0x3
                 ; 0000 0109     }
                +
000275 5f2f     +SUBI R18 , LOW ( - 1 )
000276 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000277 cff7      	RJMP _0x2A
                 _0x2B:
                 ; 0000 010A }
                 _0x20A000C:
000278 940e 1169 	CALL __LOADLOCR4
00027a 9661      	ADIW R28,17
00027b 9508      	RET
>>>>>>> merget
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 00F5 {
                 _Make_MSPEED:
<<<<<<< HEAD
                 ; 0000 00F6     float VelocityR = 0;
                 ; 0000 00F7     float VelocityL = 0;
                 ; 0000 00F8 
                 ; 0000 00F9     if(*_velocity>=0){
00027d 9728      	SBIW R28,8
00027e 940e 0cf9 	CALL SUBOPT_0x4
000280 e0e0      	LDI  R30,LOW(0)
000281 83ea      	STD  Y+2,R30
000282 83eb      	STD  Y+3,R30
000283 83ec      	STD  Y+4,R30
000284 83ed      	STD  Y+5,R30
000285 83ee      	STD  Y+6,R30
000286 83ef      	STD  Y+7,R30
=======
                 ; 0000 010E     float VelocityR = 0;
                 ; 0000 010F     float VelocityL = 0;
                 ; 0000 0110 
                 ; 0000 0111     if(*_velocity>=0){
00027c 9728      	SBIW R28,8
00027d 940e 0cd5 	CALL SUBOPT_0x4
00027f e0e0      	LDI  R30,LOW(0)
000280 83ea      	STD  Y+2,R30
000281 83eb      	STD  Y+3,R30
000282 83ec      	STD  Y+4,R30
000283 83ed      	STD  Y+5,R30
000284 83ee      	STD  Y+6,R30
000285 83ef      	STD  Y+7,R30
>>>>>>> merget
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
<<<<<<< HEAD
000287 940e 0cfd 	CALL SUBOPT_0x5
000289 2377      	TST  R23
00028a f042      	BRMI _0x28
                 ; 0000 00FA         *_angularV = -(*_angularV);
00028b 940e 0d02 	CALL SUBOPT_0x6
00028d 940e 0f08 	CALL __ANEGF1
00028f 85ac      	LDD  R26,Y+12
000290 85bd      	LDD  R27,Y+12+1
000291 940e 1142 	CALL __PUTDP1
                 ; 0000 00FB     }
                 ; 0000 00FC 
                 ; 0000 00FD     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x28:
000293 940e 0cfd 	CALL SUBOPT_0x5
000295 937f      	PUSH R23
000296 936f      	PUSH R22
000297 93ff      	PUSH R31
000298 93ef      	PUSH R30
000299 940e 0d02 	CALL SUBOPT_0x6
00029b 940e 0d07 	CALL SUBOPT_0x7
00029d 91af      	POP  R26
00029e 91bf      	POP  R27
00029f 918f      	POP  R24
0002a0 919f      	POP  R25
0002a1 940e 0fae 	CALL __ADDF12
0002a3 940e 0d16 	CALL SUBOPT_0x8
                 ; 0000 00FE     // VelocityR = *_velocity+(*_angularV*Length)/4;
                 ; 0000 00FF     VelocityL = *_velocity-(*_angularV*Length)/2;
0002a5 940e 0cfd 	CALL SUBOPT_0x5
0002a7 937f      	PUSH R23
0002a8 936f      	PUSH R22
0002a9 93ff      	PUSH R31
0002aa 93ef      	PUSH R30
0002ab 940e 0d02 	CALL SUBOPT_0x6
0002ad 940e 0d07 	CALL SUBOPT_0x7
0002af 91af      	POP  R26
0002b0 91bf      	POP  R27
0002b1 918f      	POP  R24
0002b2 919f      	POP  R25
0002b3 940e 0d1b 	CALL SUBOPT_0x9
0002b5 940e 1151 	CALL __PUTD1S0
                 ; 0000 0100     // VelocityL = *_velocity-(*_angularV*Length)/4;
                 ; 0000 0101 
                 ; 0000 0102     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0002b7 940e 0d20 	CALL SUBOPT_0xA
0002b9 940e 0d25 	CALL SUBOPT_0xB
0002bb 85aa      	LDD  R26,Y+10
0002bc 85bb      	LDD  R27,Y+10+1
0002bd 93ed      	ST   X+,R30
0002be 93fc      	ST   X,R31
                 ; 0000 0103     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0002bf 940e 0d34 	CALL SUBOPT_0xC
0002c1 940e 0d25 	CALL SUBOPT_0xB
0002c3 85a8      	LDD  R26,Y+8
0002c4 85b9      	LDD  R27,Y+8+1
0002c5 93ed      	ST   X+,R30
0002c6 93fc      	ST   X,R31
                 ; 0000 0104 
                 ; 0000 0105     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0002c7 85aa      	LDD  R26,Y+10
0002c8 85bb      	LDD  R27,Y+10+1
0002c9 940e 1138 	CALL __GETW1P
0002cb 32ec      	CPI  R30,LOW(0x12C)
0002cc e0a1      	LDI  R26,HIGH(0x12C)
0002cd 07fa      	CPC  R31,R26
0002ce f434      	BRGE _0x2A
0002cf 01df      	MOVW R26,R30
0002d0 ede4      	LDI  R30,LOW(65236)
0002d1 effe      	LDI  R31,HIGH(65236)
0002d2 17ea      	CP   R30,R26
0002d3 07fb      	CPC  R31,R27
0002d4 f00c      	BRLT _0x2B
                 _0x2A:
0002d5 c014      	RJMP _0x2C
                 _0x2B:
0002d6 85a8      	LDD  R26,Y+8
0002d7 85b9      	LDD  R27,Y+8+1
0002d8 940e 1138 	CALL __GETW1P
0002da 32ec      	CPI  R30,LOW(0x12C)
0002db e0a1      	LDI  R26,HIGH(0x12C)
0002dc 07fa      	CPC  R31,R26
0002dd f454      	BRGE _0x2D
0002de 85a8      	LDD  R26,Y+8
0002df 85b9      	LDD  R27,Y+8+1
0002e0 940e 1138 	CALL __GETW1P
0002e2 01df      	MOVW R26,R30
0002e3 ede4      	LDI  R30,LOW(65236)
0002e4 effe      	LDI  R31,HIGH(65236)
0002e5 17ea      	CP   R30,R26
0002e6 07fb      	CPC  R31,R27
0002e7 f00c      	BRLT _0x2E
                 _0x2D:
0002e8 c001      	RJMP _0x2C
=======
000286 940e 0cd9 	CALL SUBOPT_0x5
000288 2377      	TST  R23
000289 f042      	BRMI _0x2C
                 ; 0000 0112         *_angularV = -(*_angularV);
00028a 940e 0cde 	CALL SUBOPT_0x6
00028c 940e 0ef5 	CALL __ANEGF1
00028e 85ac      	LDD  R26,Y+12
00028f 85bd      	LDD  R27,Y+12+1
000290 940e 1129 	CALL __PUTDP1
                 ; 0000 0113     }
                 ; 0000 0114 
                 ; 0000 0115     VelocityR = *_velocity+(*_angularV*Length)/4;
                 _0x2C:
000292 940e 0cd9 	CALL SUBOPT_0x5
000294 937f      	PUSH R23
000295 936f      	PUSH R22
000296 93ff      	PUSH R31
000297 93ef      	PUSH R30
000298 940e 0cde 	CALL SUBOPT_0x6
00029a 940e 0ce3 	CALL SUBOPT_0x7
00029c 91af      	POP  R26
00029d 91bf      	POP  R27
00029e 918f      	POP  R24
00029f 919f      	POP  R25
0002a0 940e 0f9b 	CALL __ADDF12
0002a2 940e 0cf2 	CALL SUBOPT_0x8
                 ; 0000 0116     VelocityL = *_velocity-(*_angularV*Length)/4;
0002a4 940e 0cd9 	CALL SUBOPT_0x5
0002a6 937f      	PUSH R23
0002a7 936f      	PUSH R22
0002a8 93ff      	PUSH R31
0002a9 93ef      	PUSH R30
0002aa 940e 0cde 	CALL SUBOPT_0x6
0002ac 940e 0ce3 	CALL SUBOPT_0x7
0002ae 91af      	POP  R26
0002af 91bf      	POP  R27
0002b0 918f      	POP  R24
0002b1 919f      	POP  R25
0002b2 940e 0cf7 	CALL SUBOPT_0x9
0002b4 940e 1138 	CALL __PUTD1S0
                 ; 0000 0117 
                 ; 0000 0118     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0002b6 940e 0cfc 	CALL SUBOPT_0xA
0002b8 940e 0d01 	CALL SUBOPT_0xB
0002ba 85aa      	LDD  R26,Y+10
0002bb 85bb      	LDD  R27,Y+10+1
0002bc 93ed      	ST   X+,R30
0002bd 93fc      	ST   X,R31
                 ; 0000 0119     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0002be 940e 0d10 	CALL SUBOPT_0xC
0002c0 940e 0d01 	CALL SUBOPT_0xB
0002c2 85a8      	LDD  R26,Y+8
0002c3 85b9      	LDD  R27,Y+8+1
0002c4 93ed      	ST   X+,R30
0002c5 93fc      	ST   X,R31
                 ; 0000 011A 
                 ; 0000 011B     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0002c6 85aa      	LDD  R26,Y+10
0002c7 85bb      	LDD  R27,Y+10+1
0002c8 940e 111f 	CALL __GETW1P
0002ca 32ec      	CPI  R30,LOW(0x12C)
0002cb e0a1      	LDI  R26,HIGH(0x12C)
0002cc 07fa      	CPC  R31,R26
0002cd f434      	BRGE _0x2E
0002ce 01df      	MOVW R26,R30
0002cf ede4      	LDI  R30,LOW(65236)
0002d0 effe      	LDI  R31,HIGH(65236)
0002d1 17ea      	CP   R30,R26
0002d2 07fb      	CPC  R31,R27
0002d3 f00c      	BRLT _0x2F
>>>>>>> merget
                 _0x2E:
0002e9 c001      	RJMP _0x2F
                 _0x2C:
0002ea c008      	RJMP _0x29
                 _0x2F:
<<<<<<< HEAD
                 ; 0000 0106         *R_RPM = 0;
0002eb 85aa      	LDD  R26,Y+10
0002ec 85bb      	LDD  R27,Y+10+1
0002ed 940e 0d37 	CALL SUBOPT_0xD
                 ; 0000 0107         *L_RPM = 0;
0002ef 85a8      	LDD  R26,Y+8
0002f0 85b9      	LDD  R27,Y+8+1
0002f1 940e 0d37 	CALL SUBOPT_0xD
                 ; 0000 0108     }
                 ; 0000 0109 }
                 _0x29:
0002f3 940c 072d 	JMP  _0x20A000A
=======
0002d5 85a8      	LDD  R26,Y+8
0002d6 85b9      	LDD  R27,Y+8+1
0002d7 940e 111f 	CALL __GETW1P
0002d9 32ec      	CPI  R30,LOW(0x12C)
0002da e0a1      	LDI  R26,HIGH(0x12C)
0002db 07fa      	CPC  R31,R26
0002dc f454      	BRGE _0x31
0002dd 85a8      	LDD  R26,Y+8
0002de 85b9      	LDD  R27,Y+8+1
0002df 940e 111f 	CALL __GETW1P
0002e1 01df      	MOVW R26,R30
0002e2 ede4      	LDI  R30,LOW(65236)
0002e3 effe      	LDI  R31,HIGH(65236)
0002e4 17ea      	CP   R30,R26
0002e5 07fb      	CPC  R31,R27
0002e6 f00c      	BRLT _0x32
                 _0x31:
0002e7 c001      	RJMP _0x30
                 _0x32:
0002e8 c001      	RJMP _0x33
                 _0x30:
0002e9 c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 011C         *R_RPM = 0;
0002ea 85aa      	LDD  R26,Y+10
0002eb 85bb      	LDD  R27,Y+10+1
0002ec 940e 0d13 	CALL SUBOPT_0xD
                 ; 0000 011D         *L_RPM = 0;
0002ee 85a8      	LDD  R26,Y+8
0002ef 85b9      	LDD  R27,Y+8+1
0002f0 940e 0d13 	CALL SUBOPT_0xD
                 ; 0000 011E     }
                 ; 0000 011F }
                 _0x2D:
0002f2 940c 070a 	JMP  _0x20A000A
>>>>>>> merget
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 010C {
                 _oper_Disapath:
                 ; 0000 010D     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
<<<<<<< HEAD
0002f5 e0e1      	LDI  R30,LOW(1)
0002f6 93ea      	ST   -Y,R30
0002f7 e7e9      	LDI  R30,LOW(121)
0002f8 e0f0      	LDI  R31,HIGH(121)
0002f9 93fa      	ST   -Y,R31
0002fa 93ea      	ST   -Y,R30
0002fb 81ed      	LDD  R30,Y+5
0002fc 81fe      	LDD  R31,Y+5+1
0002fd 940e 0d3c 	CALL SUBOPT_0xE
                 ; 0000 010E     delay_ms(1);
                 ; 0000 010F 
                 ; 0000 0110     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0002ff e0e2      	LDI  R30,LOW(2)
000300 93ea      	ST   -Y,R30
000301 e7e9      	LDI  R30,LOW(121)
000302 e0f0      	LDI  R31,HIGH(121)
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
000305 81eb      	LDD  R30,Y+3
000306 81fc      	LDD  R31,Y+3+1
000307 940e 10b5 	CALL __ANEGW1
000309 940e 0d3c 	CALL SUBOPT_0xE
                 ; 0000 0111     delay_ms(1);
                 ; 0000 0112 
                 ; 0000 0113     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00030b e0e1      	LDI  R30,LOW(1)
00030c 940e 0d46 	CALL SUBOPT_0xF
                 ; 0000 0114     delay_ms(1);
                 ; 0000 0115 
                 ; 0000 0116     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
00030e e0e2      	LDI  R30,LOW(2)
00030f 940e 0d46 	CALL SUBOPT_0xF
                 ; 0000 0117     delay_ms(1);
                 ; 0000 0118 }
                 _0x20A000C:
000311 9624      	ADIW R28,4
000312 9508      	RET
=======
0002f4 e0e1      	LDI  R30,LOW(1)
0002f5 93ea      	ST   -Y,R30
0002f6 e7e9      	LDI  R30,LOW(121)
0002f7 e0f0      	LDI  R31,HIGH(121)
0002f8 93fa      	ST   -Y,R31
0002f9 93ea      	ST   -Y,R30
0002fa 81ed      	LDD  R30,Y+5
0002fb 81fe      	LDD  R31,Y+5+1
0002fc 940e 0d18 	CALL SUBOPT_0xE
                 ; 0000 0124     delay_ms(5);
                 ; 0000 0125 
                 ; 0000 0126     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0002fe e0e2      	LDI  R30,LOW(2)
0002ff 93ea      	ST   -Y,R30
000300 e7e9      	LDI  R30,LOW(121)
000301 e0f0      	LDI  R31,HIGH(121)
000302 93fa      	ST   -Y,R31
000303 93ea      	ST   -Y,R30
000304 81eb      	LDD  R30,Y+3
000305 81fc      	LDD  R31,Y+3+1
000306 940e 10a2 	CALL __ANEGW1
000308 940e 0d18 	CALL SUBOPT_0xE
                 ; 0000 0127     delay_ms(5);
                 ; 0000 0128 
                 ; 0000 0129     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00030a e0e1      	LDI  R30,LOW(1)
00030b 940e 0d22 	CALL SUBOPT_0xF
                 ; 0000 012A     delay_ms(5);
                 ; 0000 012B 
                 ; 0000 012C     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
00030d e0e2      	LDI  R30,LOW(2)
00030e 940e 0d22 	CALL SUBOPT_0xF
                 ; 0000 012D     delay_ms(5);
                 ; 0000 012E }
                 _0x20A000B:
000310 9624      	ADIW R28,4
000311 9508      	RET
>>>>>>> merget
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 011B {
                 _get_RPM:
<<<<<<< HEAD
                 ; 0000 011C     unsigned char i = 0;
                 ; 0000 011D     unsigned int RPM = 0;
                 ; 0000 011E     if(PACKET_BUFF[1] == 0x04){
000313 940e 117b 	CALL __SAVELOCR4
=======
                 ; 0000 0132     unsigned char i = 0;
                 ; 0000 0133     unsigned int RPM = 0;
                 ; 0000 0134 
                 ; 0000 0135     RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
000312 940e 1162 	CALL __SAVELOCR4
>>>>>>> merget
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
000315 e010      	LDI  R17,0
                +
000316 e020     +LDI R18 , LOW ( 0 )
000317 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000318 91a0 0501+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
00031a 30a4      	CPI  R26,LOW(0x4)
00031b f519      	BRNE _0x30
                 ; 0000 011F         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
00031c 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
00031e e0a0      	LDI  R26,LOW(0)
                +
00031f 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
<<<<<<< HEAD
000321 940e 0d4e 	CALL SUBOPT_0x10
000323 019f      	MOVW R18,R30
                 ; 0000 0120         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
=======
00031c 940e 0d2a 	CALL SUBOPT_0x10
00031e 019f      	MOVW R18,R30
                 ; 0000 0136     *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
>>>>>>> merget
                +
000324 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
000326 e0a0      	LDI  R26,LOW(0)
                +
000327 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
<<<<<<< HEAD
000329 940e 0d4e 	CALL SUBOPT_0x10
00032b 81ac      	LDD  R26,Y+4
00032c 81bd      	LDD  R27,Y+4+1
00032d 93ed      	ST   X+,R30
00032e 93fc      	ST   X,R31
                 ; 0000 0121         for(i = 0; i<IDX; i++) *(str+i) = 0;
00032f e010      	LDI  R17,LOW(0)
                 _0x32:
000330 81ee      	LDD  R30,Y+6
000331 171e      	CP   R17,R30
000332 f450      	BRSH _0x33
000333 2fe1      	MOV  R30,R17
000334 e0f0      	LDI  R31,0
000335 81af      	LDD  R26,Y+7
000336 85b8      	LDD  R27,Y+7+1
000337 0fae      	ADD  R26,R30
000338 1fbf      	ADC  R27,R31
000339 e0e0      	LDI  R30,LOW(0)
00033a 93ec      	ST   X,R30
00033b 5f1f      	SUBI R17,-1
00033c cff3      	RJMP _0x32
                 _0x33:
                 ; 0000 0123 return RPM;
00033d 01f9      	MOVW R30,R18
00033e c002      	RJMP _0x20A000B
                 ; 0000 0124     }
                 ; 0000 0125     return -1;
                 _0x30:
00033f efef      	LDI  R30,LOW(65535)
000340 efff      	LDI  R31,HIGH(65535)
                 _0x20A000B:
000341 940e 1182 	CALL __LOADLOCR4
000343 9629      	ADIW R28,9
000344 9508      	RET
                 ; 0000 0126 }
                 ;
                 ;///////////////// TWI /////////////////////////////
                 ;unsigned char TWI_Read(unsigned char addr, unsigned char regAddr)
                 ; 0000 012A {
                 ; 0000 012B     unsigned char Data;
                 ; 0000 012C     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA));//Start조건 전송
                 ;	addr -> Y+2
                 ;	regAddr -> Y+1
                 ;	Data -> R17
                 ; 0000 012D     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=TWI_START));
                 ; 0000 012E 
                 ; 0000 012F     TWDR = addr&(~0x01);                //쓰기 위한 주소 전송
                 ; 0000 0130     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0131     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAW_ACK));
                 ; 0000 0132 
                 ; 0000 0133     TWDR = regAddr;                     //Reg주소 전송
                 ; 0000 0134     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0135     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_ACK));
                 ; 0000 0136 
                 ; 0000 0137     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA)); //Repeated start 전송
                 ; 0000 0138     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_REPEATED_START));
                 ; 0000 0139 
                 ; 0000 013A     TWDR = addr|0x01;                       //읽기 위한 주소 전송
                 ; 0000 013B     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 013C     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAR_ACK));
                 ; 0000 013D 
                 ; 0000 013E 
                 ; 0000 013F     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0140     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_NACK));
                 ; 0000 0141     Data = TWDR;                        //Data읽기
                 ; 0000 0142 
                 ; 0000 0143     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTO));
                 ; 0000 0144 
                 ; 0000 0145     return Data;
                 ; 0000 0146 }
                 ;
                 ;void TWI_Write(unsigned char addr, unsigned char Data[],int NumberOfData)
                 ; 0000 0149 {
                 ; 0000 014A     int i=0;
                 ; 0000 014B 
                 ; 0000 014C     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA));
                 ;	addr -> Y+6
                 ;	Data -> Y+4
                 ;	NumberOfData -> Y+2
                 ;	i -> R16,R17
                 ; 0000 014D     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=TWI_START));
                 ; 0000 014E 
                 ; 0000 014F     TWDR = addr&(~0x01);
                 ; 0000 0150     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0151     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAW_ACK));
                 ; 0000 0152 
                 ; 0000 0153     for(i=0;i<NumberOfData;i++){
                 ; 0000 0154         TWDR = Data[i];
                 ; 0000 0155         TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0156         while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_ACK));
                 ; 0000 0157     }
                 ; 0000 0158 
                 ; 0000 0159     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTO));
                 ; 0000 015A }
                 ;
                 ;
                 ;void Start_SRF02_Conv(unsigned char Adress, unsigned char mode){
                 ; 0000 015D void Start_SRF02_Conv(unsigned char Adress, unsigned char mode){
                 ; 0000 015E     unsigned char ConvMode[2] = {0x00,};
                 ; 0000 015F     ConvMode[1] = mode;
                 ;	Adress -> Y+3
                 ;	mode -> Y+2
                 ;	ConvMode -> Y+0
                 ; 0000 0160     TWI_Write(Adress,ConvMode,2);
                 ; 0000 0161 }
                 ;
                 ;void Change_SRF02_Adress(unsigned char nowAdress, unsigned char changeAdress)
                 ; 0000 0164 {
                 ; 0000 0165     unsigned char sequense1[2] = {0x00,0xA0};
                 ; 0000 0166     unsigned char sequense2[2] = {0x00,0xAA};
                 ; 0000 0167     unsigned char sequense3[2] = {0x00,0xA5};
                 ; 0000 0168     unsigned char sequense4[2] = {0x00,};
                 ; 0000 0169     sequense4[1] = changeAdress;
                 ;	nowAdress -> Y+9
                 ;	changeAdress -> Y+8
                 ;	sequense1 -> Y+6
                 ;	sequense2 -> Y+4
                 ;	sequense3 -> Y+2
                 ;	sequense4 -> Y+0
                 ; 0000 016A     TWI_Write(nowAdress,sequense1,2);
                 ; 0000 016B     delay_ms(1);
                 ; 0000 016C     TWI_Write(nowAdress,sequense2,2);
                 ; 0000 016D     delay_ms(1);
                 ; 0000 016E     TWI_Write(nowAdress,sequense3,2);
                 ; 0000 016F     delay_ms(1);
                 ; 0000 0170     TWI_Write(nowAdress,sequense4,2);
                 ; 0000 0171     delay_ms(1);
                 ; 0000 0172 }
                 ;
                 ;unsigned int Get_SRF02_Range(unsigned char Adress)
                 ; 0000 0175 {
                 ; 0000 0176     unsigned int range;
                 ; 0000 0177     unsigned char High = 0,Low = 0;
                 ; 0000 0178 
                 ; 0000 0179     High = TWI_Read(Adress, RangeHighByte);
                 ;	Adress -> Y+4
                 ;	range -> R16,R17
                 ;	High -> R19
                 ;	Low -> R18
                 ; 0000 017A     if(High == 0xFF){
                 ; 0000 017B 
                 ; 0000 017C         return 0;
                 ; 0000 017D     }
                 ; 0000 017E     Low = TWI_Read(Adress, RangeLowByte);
                 ; 0000 017F     range = (High<<8)+Low;
                 ; 0000 0180 
                 ; 0000 0181     return range;
                 ; 0000 0182 }
                 ;
                 ;void Start_SRF02_Conv_arr(unsigned char ID)
                 ; 0000 0185 {
                 ; 0000 0186     if(SRF02_WAIT_FLAG == 0){
                 ;	ID -> Y+0
                 ; 0000 0187         Start_SRF02_Conv(ID,Centimeters);
                 ; 0000 0188         TCNT1H = 0;
                 ; 0000 0189         TCNT1L = 0;
                 ; 0000 018A         SRF02_WAIT_FLAG = 1;
                 ; 0000 018B     }
                 ; 0000 018C }
                 ;
                 ;void Get_SRF02_Range_filter(unsigned char ID, unsigned int* range, unsigned int* pre_range, unsigned int *no_filter)
                 ; 0000 018F {
                 ; 0000 0190     if(SRF02_CONVERTING_FLAG == 1 && SRF02_WAIT_FLAG == 1){
                 ;	ID -> Y+6
                 ;	*range -> Y+4
                 ;	*pre_range -> Y+2
                 ;	*no_filter -> Y+0
                 ; 0000 0191         *no_filter = Get_SRF02_Range(ID);
                 ; 0000 0192 
                 ; 0000 0193         *range = ( tau * (*pre_range) + ts * (*no_filter) ) / (tau + ts) ; // low pass -filter
                 ; 0000 0194 
                 ; 0000 0195         // sprintf(char_buff, "%d,%d\n", *no_filter, *range);
                 ; 0000 0196         // puts_USART1(char_buff);
                 ; 0000 0197 
                 ; 0000 0198         *pre_range = *range;
                 ; 0000 0199         SRF02_CONVERTING_FLAG = 0;
                 ; 0000 019A         SRF02_WAIT_FLAG = 0;
                 ; 0000 019B 
                 ; 0000 019C     }
                 ; 0000 019D }
                 ;
                 ;/////////////////////ISR//////////////////////////////////
=======
000324 940e 0d2a 	CALL SUBOPT_0x10
000326 81ac      	LDD  R26,Y+4
000327 81bd      	LDD  R27,Y+4+1
000328 93ed      	ST   X+,R30
000329 93fc      	ST   X,R31
                 ; 0000 0137     for(i = 0; i<IDX; i++) *(str+i) = 0;
00032a e010      	LDI  R17,LOW(0)
                 _0x35:
00032b 81ee      	LDD  R30,Y+6
00032c 171e      	CP   R17,R30
00032d f450      	BRSH _0x36
00032e 2fe1      	MOV  R30,R17
00032f e0f0      	LDI  R31,0
000330 81af      	LDD  R26,Y+7
000331 85b8      	LDD  R27,Y+7+1
000332 0fae      	ADD  R26,R30
000333 1fbf      	ADC  R27,R31
000334 e0e0      	LDI  R30,LOW(0)
000335 93ec      	ST   X,R30
000336 5f1f      	SUBI R17,-1
000337 cff3      	RJMP _0x35
                 _0x36:
                 ; 0000 0139 return RPM;
000338 01f9      	MOVW R30,R18
000339 940e 1169 	CALL __LOADLOCR4
00033b 9629      	ADIW R28,9
00033c 9508      	RET
                 ; 0000 013A }
>>>>>>> merget
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 01A2 {
                 _usart0_rxc:
<<<<<<< HEAD
000345 93aa      	ST   -Y,R26
000346 93ba      	ST   -Y,R27
000347 93ea      	ST   -Y,R30
000348 b7ef      	IN   R30,SREG
000349 93ea      	ST   -Y,R30
                 ; 0000 01A3     // if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
                 ; 0000 01A4     // {
                 ; 0000 01A5         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034a 2da4      	MOV  R26,R4
00034b e0b0      	LDI  R27,0
00034c 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
00034d 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
00034e b1ec      	IN   R30,0xC
00034f 93ec      	ST   X,R30
                 ; 0000 01A6         PACKET_BUFF_IDX++;
000350 9443      	INC  R4
                 ; 0000 01A7         // TCNT2 = 0;
                 ; 0000 01A8     // }
                 ; 0000 01A9     // else {
                 ; 0000 01AA     //     PACKET_BUFF_IDX = 0;
                 ; 0000 01AB     //     PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
                 ; 0000 01AC     //     PACKET_BUFF_IDX++;
                 ; 0000 01AD     //     TCNT2 = 0;
                 ; 0000 01AE     //     TIMER2_OVERFLOW = 0;
                 ; 0000 01AF     // }
                 ; 0000 01B0 }
000351 91e9      	LD   R30,Y+
000352 bfef      	OUT  SREG,R30
000353 91e9      	LD   R30,Y+
000354 91b9      	LD   R27,Y+
000355 91a9      	LD   R26,Y+
000356 9518      	RETI
=======
00033d 93aa      	ST   -Y,R26
00033e 93ba      	ST   -Y,R27
00033f 93ea      	ST   -Y,R30
000340 b7ef      	IN   R30,SREG
000341 93ea      	ST   -Y,R30
                 ; 0000 013E     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000342 b5e4      	IN   R30,0x24
000343 31e9      	CPI  R30,LOW(0x19)
000344 f418      	BRSH _0x38
000345 e0e0      	LDI  R30,LOW(0)
000346 15e5      	CP   R30,R5
000347 f019      	BREQ _0x3A
                 _0x38:
000348 e0e0      	LDI  R30,LOW(0)
000349 15e4      	CP   R30,R4
00034a f419      	BRNE _0x37
                 _0x3A:
                 ; 0000 013F     {
                 ; 0000 0140         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034b 940e 0d2e 	CALL SUBOPT_0x11
                 ; 0000 0141         PACKET_BUFF_IDX++;
                 ; 0000 0142         TCNT2 = 0;
                 ; 0000 0143     }
                 ; 0000 0144     else {
00034d c004      	RJMP _0x3C
                 _0x37:
                 ; 0000 0145         PACKET_BUFF_IDX = 0;
00034e 2444      	CLR  R4
                 ; 0000 0146         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00034f 940e 0d2e 	CALL SUBOPT_0x11
                 ; 0000 0147         PACKET_BUFF_IDX++;
                 ; 0000 0148         TCNT2 = 0;
                 ; 0000 0149         TIMER2_OVERFLOW = 0;
000351 2455      	CLR  R5
                 ; 0000 014A     }
                 _0x3C:
                 ; 0000 014B }
000352 91e9      	LD   R30,Y+
000353 bfef      	OUT  SREG,R30
000354 91e9      	LD   R30,Y+
000355 91b9      	LD   R27,Y+
000356 91a9      	LD   R26,Y+
000357 9518      	RETI
>>>>>>> merget
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 01B3 {
                 _usart1_rxc:
<<<<<<< HEAD
000357 93ea      	ST   -Y,R30
000358 93fa      	ST   -Y,R31
000359 b7ef      	IN   R30,SREG
00035a 93ea      	ST   -Y,R30
                 ; 0000 01B4     unsigned char i = 0;
                 ; 0000 01B5     i = UDR1;
00035b 931a      	ST   -Y,R17
                 ;	i -> R17
00035c e010      	LDI  R17,0
00035d 9110 009c 	LDS  R17,156
                 ; 0000 01B6     if((i == '<') && (CHECK_GETS == 0)){
00035f 331c      	CPI  R17,60
000360 f419      	BRNE _0x6A
000361 e0e0      	LDI  R30,LOW(0)
000362 15ea      	CP   R30,R10
000363 f009      	BREQ _0x6B
                 _0x6A:
000364 c007      	RJMP _0x69
                 _0x6B:
                 ; 0000 01B7         PORTB.3 = ~PORTB.3;
000365 9bc3      	SBIS 0x18,3
000366 c002      	RJMP _0x6C
000367 98c3      	CBI  0x18,3
000368 c001      	RJMP _0x6D
                 _0x6C:
000369 9ac3      	SBI  0x18,3
                 _0x6D:
                 ; 0000 01B8         VELOCITY_BUFF_IDX = 0;
00036a 2499      	CLR  R9
                 ; 0000 01B9         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00036b c00e      	RJMP _0x8E
                 ; 0000 01BA         VELOCITY_BUFF_IDX++;
                 ; 0000 01BB     }
                 ; 0000 01BC     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x69:
00036c 331e      	CPI  R17,62
00036d f419      	BRNE _0x70
00036e e0e0      	LDI  R30,LOW(0)
00036f 15ea      	CP   R30,R10
000370 f009      	BREQ _0x71
                 _0x70:
000371 c006      	RJMP _0x6F
                 _0x71:
                 ; 0000 01BD         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000372 2de9      	MOV  R30,R9
000373 940e 0d52 	CALL SUBOPT_0x11
                 ; 0000 01BE         VELOCITY_BUFF_IDX++;
                 ; 0000 01BF         CHECK_GETS = 1;
000375 e0e1      	LDI  R30,LOW(1)
000376 2eae      	MOV  R10,R30
                 ; 0000 01C0     }
                 ; 0000 01C1     else if(CHECK_GETS == 0){
000377 c005      	RJMP _0x72
                 _0x6F:
000378 20aa      	TST  R10
000379 f419      	BRNE _0x73
                 ; 0000 01C2         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x8E:
00037a 2de9      	MOV  R30,R9
00037b 940e 0d52 	CALL SUBOPT_0x11
                 ; 0000 01C3         VELOCITY_BUFF_IDX++;
                 ; 0000 01C4     }
                 ; 0000 01C5 }
                 _0x73:
                 _0x72:
00037d 9119      	LD   R17,Y+
00037e c00d      	RJMP _0x8F
=======
000358 940e 0d38 	CALL SUBOPT_0x12
                 ; 0000 014F     unsigned char i = 0;
                 ; 0000 0150     i = UDR1;
00035a 931a      	ST   -Y,R17
                 ;	i -> R17
00035b e010      	LDI  R17,0
00035c 9110 009c 	LDS  R17,156
                 ; 0000 0151     if((i == '<') && (CHECK_GETS == 0)){
00035e 331c      	CPI  R17,60
00035f f419      	BRNE _0x3E
000360 e0e0      	LDI  R30,LOW(0)
000361 15e8      	CP   R30,R8
000362 f009      	BREQ _0x3F
                 _0x3E:
000363 c007      	RJMP _0x3D
                 _0x3F:
                 ; 0000 0152         PORTB.3 = ~PORTB.3;
000364 9bc3      	SBIS 0x18,3
000365 c002      	RJMP _0x40
000366 98c3      	CBI  0x18,3
000367 c001      	RJMP _0x41
                 _0x40:
000368 9ac3      	SBI  0x18,3
                 _0x41:
                 ; 0000 0153         VELOCITY_BUFF_IDX = 0;
000369 2499      	CLR  R9
                 ; 0000 0154         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00036a c00e      	RJMP _0x60
                 ; 0000 0155         VELOCITY_BUFF_IDX++;
                 ; 0000 0156     }
                 ; 0000 0157     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x3D:
00036b 331e      	CPI  R17,62
00036c f419      	BRNE _0x44
00036d e0e0      	LDI  R30,LOW(0)
00036e 15e8      	CP   R30,R8
00036f f009      	BREQ _0x45
                 _0x44:
000370 c006      	RJMP _0x43
                 _0x45:
                 ; 0000 0158         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000371 2de9      	MOV  R30,R9
000372 940e 0d3d 	CALL SUBOPT_0x13
                 ; 0000 0159         VELOCITY_BUFF_IDX++;
                 ; 0000 015A         CHECK_GETS = 1;
000374 e0e1      	LDI  R30,LOW(1)
000375 2e8e      	MOV  R8,R30
                 ; 0000 015B     }
                 ; 0000 015C     else if(CHECK_GETS == 0){
000376 c005      	RJMP _0x46
                 _0x43:
000377 2088      	TST  R8
000378 f419      	BRNE _0x47
                 ; 0000 015D         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x60:
000379 2de9      	MOV  R30,R9
00037a 940e 0d3d 	CALL SUBOPT_0x13
                 ; 0000 015E         VELOCITY_BUFF_IDX++;
                 ; 0000 015F     }
                 ; 0000 0160 }
                 _0x47:
                 _0x46:
00037c 9119      	LD   R17,Y+
00037d c014      	RJMP _0x61
>>>>>>> merget
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 01C8 {
                 _timer2_comp:
00037f 93ea      	ST   -Y,R30
000380 b7ef      	IN   R30,SREG
                 ; 0000 01C9     TIMER2_OVERFLOW++;
000381 9453      	INC  R5
                 ; 0000 01CA }
000382 bfef      	OUT  SREG,R30
000383 91e9      	LD   R30,Y+
000384 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 01CD {
                 _timer0_ovf:
<<<<<<< HEAD
000385 93ea      	ST   -Y,R30
000386 93fa      	ST   -Y,R31
000387 b7ef      	IN   R30,SREG
000388 93ea      	ST   -Y,R30
                 ; 0000 01CE     TIMER0_OVERFLOW++;
000389 01f3      	MOVW R30,R6
00038a 9631      	ADIW R30,1
00038b 013f      	MOVW R6,R30
                 ; 0000 01CF }
                 _0x8F:
00038c 91e9      	LD   R30,Y+
00038d bfef      	OUT  SREG,R30
00038e 91f9      	LD   R31,Y+
00038f 91e9      	LD   R30,Y+
000390 9518      	RETI
=======
000384 940e 0d38 	CALL SUBOPT_0x12
                 ; 0000 0169     TIMER0_OVERFLOW++;
000386 01f3      	MOVW R30,R6
000387 9631      	ADIW R30,1
000388 013f      	MOVW R6,R30
                 ; 0000 016A }
000389 c008      	RJMP _0x61
                 ;
>>>>>>> merget
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0000 01D2 {
                 _timer0_comp:
<<<<<<< HEAD
000391 93aa      	ST   -Y,R26
000392 93ba      	ST   -Y,R27
000393 93ea      	ST   -Y,R30
000394 93fa      	ST   -Y,R31
000395 b7ef      	IN   R30,SREG
000396 93ea      	ST   -Y,R30
                 ; 0000 01D3     TIMER1_OVERFLOW++;
000397 e7a8      	LDI  R26,LOW(_TIMER1_OVERFLOW)
000398 e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
000399 940e 0d58 	CALL SUBOPT_0x12
                 ; 0000 01D4     TCNT1H = 0x00;
00039b e0e0      	LDI  R30,LOW(0)
00039c bded      	OUT  0x2D,R30
                 ; 0000 01D5     TCNT1L = 0x00;
00039d bdec      	OUT  0x2C,R30
                 ; 0000 01D6 }
00039e 91e9      	LD   R30,Y+
00039f bfef      	OUT  SREG,R30
0003a0 91f9      	LD   R31,Y+
0003a1 91e9      	LD   R30,Y+
0003a2 91b9      	LD   R27,Y+
0003a3 91a9      	LD   R26,Y+
0003a4 9518      	RETI
=======
00038a 940e 0d38 	CALL SUBOPT_0x12
                 ; 0000 016F     TIMER1_OVERFLOW++;
00038c 01f6      	MOVW R30,R12
00038d 9631      	ADIW R30,1
00038e 016f      	MOVW R12,R30
                 ; 0000 0170     TCNT1H = 0x00;
00038f e0e0      	LDI  R30,LOW(0)
000390 bded      	OUT  0x2D,R30
                 ; 0000 0171     TCNT1L = 0x00;
000391 bdec      	OUT  0x2C,R30
                 ; 0000 0172 }
                 _0x61:
000392 91e9      	LD   R30,Y+
000393 bfef      	OUT  SREG,R30
000394 91f9      	LD   R31,Y+
000395 91e9      	LD   R30,Y+
000396 9518      	RETI
>>>>>>> merget
                 ;
                 ;void main(void)
                 ; 0000 01D9 {
                 _main:
<<<<<<< HEAD
                 ; 0000 01DA     float a_buff;
                 ; 0000 01DB     float v_buff;
                 ; 0000 01DC 
                 ; 0000 01DD     int velocity = 0;
                 ; 0000 01DE     int angularV = 0;
                 ; 0000 01DF     int velocity_R = 0;
                 ; 0000 01E0     int velocity_L = 0;
                 ; 0000 01E1     int past_velocity_R = 0;
                 ; 0000 01E2     int past_velocity_L = 0;
                 ; 0000 01E3     int del_ms = 0;
                 ; 0000 01E4     char del_ms_flags = 0;
                 ; 0000 01E5 
                 ; 0000 01E6     int currentRPM_R = 0;
                 ; 0000 01E7     int currentRPM_L = 0;
                 ; 0000 01E8     float currentV_R = 0;
                 ; 0000 01E9     float currentV_L = 0;
                 ; 0000 01EA     int goal_current_R = 0;
                 ; 0000 01EB     int goal_current_L = 0;
                 ; 0000 01EC 
                 ; 0000 01ED     float d_velocity = 0;
                 ; 0000 01EE     float d_angularV = 0;
                 ; 0000 01EF     float control_time = 0;
                 ; 0000 01F0 
                 ; 0000 01F1     float d_x = 0;
                 ; 0000 01F2     float d_y = 0;
                 ; 0000 01F3     float d_angular = 0;
                 ; 0000 01F4     int d_angular_circula = 0;
                 ; 0000 01F5 
                 ; 0000 01F6     float goal_x = 0;
                 ; 0000 01F7     float goal_y = 0;
                 ; 0000 01F8     float goal_angular = 0;
                 ; 0000 01F9 
                 ; 0000 01FA     float TIMER1_TIME = 0;
                 ; 0000 01FB     float TIMER0_TIME = 0;
                 ; 0000 01FC 
                 ; 0000 01FD     unsigned char BUFF[500] = {0,};
                 ; 0000 01FE 
                 ; 0000 01FF 
                 ; 0000 0200     usart1_init(bps_115200);
0003a5 97ef      	SBIW R28,63
0003a6 9724      	SBIW R28,4
0003a7 50d2      	SUBI R29,2
                +
0003a8 e38b     +LDI R24 , LOW ( 571 )
0003a9 e092     +LDI R25 , HIGH ( 571 )
                 	__GETWRN 24,25,571
0003aa e0a0      	LDI  R26,LOW(0)
0003ab e0b0      	LDI  R27,HIGH(0)
0003ac e8ec      	LDI  R30,LOW(_0x74*2)
0003ad e0f0      	LDI  R31,HIGH(_0x74*2)
0003ae 940e 1187 	CALL __INITLOCW
                 ;	a_buff -> Y+575
                 ;	v_buff -> Y+571
=======
                 ; 0000 0176     float a_buff;
                 ; 0000 0177     float v_buff;
                 ; 0000 0178 
                 ; 0000 0179     int velocity = 0;
                 ; 0000 017A     int angularV = 0;
                 ; 0000 017B     int velocity_R = 0;
                 ; 0000 017C     int velocity_L = 0;
                 ; 0000 017D     int past_velocity_R = 0;
                 ; 0000 017E     int past_velocity_L = 0;
                 ; 0000 017F     int del_ms = 0;
                 ; 0000 0180 
                 ; 0000 0181     int currentRPM_R = 0;
                 ; 0000 0182     int currentRPM_L = 0;
                 ; 0000 0183     float currentV_R = 0;
                 ; 0000 0184     float currentV_L = 0;
                 ; 0000 0185     int goal_current_R = 0;
                 ; 0000 0186     int goal_current_L = 0;
                 ; 0000 0187 
                 ; 0000 0188     float d_velocity = 0;
                 ; 0000 0189     float d_angularV = 0;
                 ; 0000 018A     float control_time = 0;
                 ; 0000 018B 
                 ; 0000 018C     float d_x = 0;
                 ; 0000 018D     float d_y = 0;
                 ; 0000 018E     float d_angular = 0;
                 ; 0000 018F     int d_angular_circula = 0;
                 ; 0000 0190 
                 ; 0000 0191     float goal_x = 0;
                 ; 0000 0192     float goal_y = 0;
                 ; 0000 0193     float goal_angular = 0;
                 ; 0000 0194 
                 ; 0000 0195     float TIMER1_TIME = 0;
                 ; 0000 0196     float TIMER0_TIME = 0;
                 ; 0000 0197 
                 ; 0000 0198     unsigned char BUFF[500] = {0,};
                 ; 0000 0199 
                 ; 0000 019A     usart1_init(bps_115200);
000397 97ef      	SBIW R28,63
000398 9723      	SBIW R28,3
000399 50d2      	SUBI R29,2
                +
00039a e38a     +LDI R24 , LOW ( 570 )
00039b e092     +LDI R25 , HIGH ( 570 )
                 	__GETWRN 24,25,570
00039c e0a0      	LDI  R26,LOW(0)
00039d e0b0      	LDI  R27,HIGH(0)
00039e e8ec      	LDI  R30,LOW(_0x48*2)
00039f e0f0      	LDI  R31,HIGH(_0x48*2)
0003a0 940e 116e 	CALL __INITLOCW
                 ;	a_buff -> Y+574
                 ;	v_buff -> Y+570
>>>>>>> merget
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+569
                 ;	past_velocity_R -> Y+567
                 ;	past_velocity_L -> Y+565
                 ;	del_ms -> Y+563
                 ;	del_ms_flags -> Y+562
                 ;	currentRPM_R -> Y+560
                 ;	currentRPM_L -> Y+558
                 ;	currentV_R -> Y+554
                 ;	currentV_L -> Y+550
                 ;	goal_current_R -> Y+548
                 ;	goal_current_L -> Y+546
                 ;	d_velocity -> Y+542
                 ;	d_angularV -> Y+538
                 ;	control_time -> Y+534
                 ;	d_x -> Y+530
                 ;	d_y -> Y+526
                 ;	d_angular -> Y+522
                 ;	d_angular_circula -> Y+520
                 ;	goal_x -> Y+516
                 ;	goal_y -> Y+512
                 ;	goal_angular -> Y+508
                 ;	TIMER1_TIME -> Y+504
                 ;	TIMER0_TIME -> Y+500
                 ;	BUFF -> Y+0
                +
0003b0 e000     +LDI R16 , LOW ( 0 )
0003b1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003b2 e020     +LDI R18 , LOW ( 0 )
0003b3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0003b4 e040     +LDI R20 , LOW ( 0 )
0003b5 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
<<<<<<< HEAD
0003b6 e0e7      	LDI  R30,LOW(7)
0003b7 e0f0      	LDI  R31,HIGH(7)
0003b8 93fa      	ST   -Y,R31
0003b9 93ea      	ST   -Y,R30
0003ba ddff      	RCALL _usart1_init
                 ; 0000 0201     usart0_init(bps_115200);
0003bb e0e7      	LDI  R30,LOW(7)
0003bc e0f0      	LDI  R31,HIGH(7)
0003bd 93fa      	ST   -Y,R31
0003be 93ea      	ST   -Y,R30
0003bf de12      	RCALL _usart0_init
                 ; 0000 0202     timer2_init();
0003c0 de27      	RCALL _timer2_init
                 ; 0000 0203     timer0_init();
0003c1 de2c      	RCALL _timer0_init
                 ; 0000 0204     timer1_init();
0003c2 de2f      	RCALL _timer1_init
                 ; 0000 0205     SREG |= 0x80;
0003c3 9478      	BSET 7
                 ; 0000 0206     DDRB.1 = 1;
0003c4 9ab9      	SBI  0x17,1
                 ; 0000 0207     DDRB.2 = 1;
0003c5 9aba      	SBI  0x17,2
                 ; 0000 0208     DDRB.3 = 1;
0003c6 9abb      	SBI  0x17,3
                 ; 0000 0209     delay_ms(5000);
0003c7 e8e8      	LDI  R30,LOW(5000)
0003c8 e1f3      	LDI  R31,HIGH(5000)
0003c9 940e 0d5e 	CALL SUBOPT_0x13
                 ; 0000 020A     PORTB.1 = 0;
0003cb 98c1      	CBI  0x18,1
                 ; 0000 020B     PORTB.2 = 1;
0003cc 9ac2      	SBI  0x18,2
                 ; 0000 020C 
                 ; 0000 020D     TIMER0_OVERFLOW = 0;
0003cd 2466      	CLR  R6
0003ce 2477      	CLR  R7
                 ; 0000 020E     TCNT0 = 0;
0003cf e0e0      	LDI  R30,LOW(0)
0003d0 bfe2      	OUT  0x32,R30
                 ; 0000 020F 
                 ; 0000 0210     while(1)
                 _0x7F:
                 ; 0000 0211     {
                 ; 0000 0212         if(CHECK_GETS)
0003d1 20aa      	TST  R10
0003d2 f411      	BRNE PC+3
0003d3 940c 046c 	JMP _0x82
                 ; 0000 0213         {
                 ; 0000 0214             PORTB.1 = 1;
0003d5 9ac1      	SBI  0x18,1
                 ; 0000 0215 
                 ; 0000 0216             UCSR1B &= ~(1<<RXEN1);
0003d6 91e0 009a 	LDS  R30,154
0003d8 7eef      	ANDI R30,0xEF
0003d9 93e0 009a 	STS  154,R30
                 ; 0000 0217             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
0003db e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0003dc e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0003dd 93fa      	ST   -Y,R31
0003de 93ea      	ST   -Y,R30
                +
0003df ede2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0003e0 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0003e1 93fa      	ST   -Y,R31
0003e2 93ea      	ST   -Y,R30
0003e3 b7ed      	IN   R30,SPL
0003e4 b7fe      	IN   R31,SPH
0003e5 9731      	SBIW R30,1
0003e6 940e 1156 	CALL __PUTPARD1L
0003e8 931f      	PUSH R17
0003e9 930f      	PUSH R16
0003ea b7ed      	IN   R30,SPL
0003eb b7fe      	IN   R31,SPH
0003ec 9731      	SBIW R30,1
0003ed 940e 1156 	CALL __PUTPARD1L
0003ef 933f      	PUSH R19
0003f0 932f      	PUSH R18
0003f1 01fe      	MOVW R30,R28
0003f2 5ce1      	SUBI R30,LOW(-(575))
0003f3 4ffd      	SBCI R31,HIGH(-(575))
0003f4 2766      	CLR  R22
0003f5 2777      	CLR  R23
0003f6 940e 1158 	CALL __PUTPARD1
0003f8 e08c      	LDI  R24,12
0003f9 940e 0ada 	CALL _sscanf
0003fb 9660      	ADIW R28,16
0003fc 912f      	POP  R18
0003fd 913f      	POP  R19
0003fe 910f      	POP  R16
0003ff 911f      	POP  R17
                 ; 0000 0218             // sscanf(VELOCITY_BUFF,"<%d,%d,%f,%f,%f>", &velocity, &angularV, &goal_x, &goal_y, goal_angular);
                 ; 0000 0219 
                 ; 0000 021A             if(!del_ms){
                +
000400 01fe     +MOVW R30 , R28
000401 5ced     +SUBI R30 , LOW ( - 563 )
000402 4ffd     +SBCI R31 , HIGH ( - 563 )
000403 9001     +LD R0 , Z +
000404 81f0     +LD R31 , Z
000405 2de0     +MOV R30 , R0
                 	__GETW1SX 563
000406 9730      	SBIW R30,0
000407 f4b1      	BRNE _0x85
                 ; 0000 021B                 d_x = 0;
000408 e0e0      	LDI  R30,LOW(0)
                +
000409 01de     +MOVW R26 , R28
00040a 5eae     +SUBI R26 , LOW ( - 530 )
00040b 4fbd     +SBCI R27 , HIGH ( - 530 )
00040c 93ed     +ST X + , R30
00040d 93ed     +ST X + , R30
00040e 93ed     +ST X + , R30
00040f 93ec     +ST X , R30
                 	__CLRD1SX 530
                 ; 0000 021C                 d_y = 0;
                +
000410 01de     +MOVW R26 , R28
000411 5fa2     +SUBI R26 , LOW ( - 526 )
000412 4fbd     +SBCI R27 , HIGH ( - 526 )
000413 93ed     +ST X + , R30
000414 93ed     +ST X + , R30
000415 93ed     +ST X + , R30
000416 93ec     +ST X , R30
                 	__CLRD1SX 526
                 ; 0000 021D                 d_angular = 0;
                +
000417 01de     +MOVW R26 , R28
000418 5fa6     +SUBI R26 , LOW ( - 522 )
000419 4fbd     +SBCI R27 , HIGH ( - 522 )
00041a 93ed     +ST X + , R30
00041b 93ed     +ST X + , R30
00041c 93ed     +ST X + , R30
00041d 93ec     +ST X , R30
                 	__CLRD1SX 522
                 ; 0000 021E             }
                 ; 0000 021F 
                 ; 0000 0220             v_buff = (float)velocity/1000;
                 _0x85:
00041e 01f8      	MOVW R30,R16
00041f 940e 0d62 	CALL SUBOPT_0x14
                +
000421 01de     +MOVW R26 , R28
000422 5ca5     +SUBI R26 , LOW ( - 571 )
000423 4fbd     +SBCI R27 , HIGH ( - 571 )
000424 93ed     +ST X + , R30
000425 93fd     +ST X + , R31
000426 936d     +ST X + , R22
000427 937c     +ST X , R23
                 	__PUTD1SX 571
                 ; 0000 0221             a_buff = (float)angularV/1000;
000428 01f9      	MOVW R30,R18
000429 940e 0d62 	CALL SUBOPT_0x14
                +
00042b 01de     +MOVW R26 , R28
00042c 5ca1     +SUBI R26 , LOW ( - 575 )
00042d 4fbd     +SBCI R27 , HIGH ( - 575 )
00042e 93ed     +ST X + , R30
00042f 93fd     +ST X + , R31
000430 936d     +ST X + , R22
000431 937c     +ST X , R23
                 	__PUTD1SX 575
                 ; 0000 0222 
                 ; 0000 0223             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000432 01fe      	MOVW R30,R28
000433 5ce5      	SUBI R30,LOW(-(571))
000434 4ffd      	SBCI R31,HIGH(-(571))
000435 93fa      	ST   -Y,R31
000436 93ea      	ST   -Y,R30
000437 01fe      	MOVW R30,R28
000438 5bef      	SUBI R30,LOW(-(577))
000439 4ffd      	SBCI R31,HIGH(-(577))
00043a 93fa      	ST   -Y,R31
00043b 93ea      	ST   -Y,R30
00043c b7ed      	IN   R30,SPL
00043d b7fe      	IN   R31,SPH
00043e 9731      	SBIW R30,1
00043f 93fa      	ST   -Y,R31
000440 93ea      	ST   -Y,R30
000441 935f      	PUSH R21
000442 934f      	PUSH R20
000443 01fe      	MOVW R30,R28
000444 5ce1      	SUBI R30,LOW(-(575))
000445 4ffd      	SBCI R31,HIGH(-(575))
000446 93fa      	ST   -Y,R31
000447 93ea      	ST   -Y,R30
000448 de34      	RCALL _Make_MSPEED
000449 914f      	POP  R20
00044a 915f      	POP  R21
                 ; 0000 0224 
                 ; 0000 0225             oper_Disapath(velocity_R, velocity_L);
00044b 935a      	ST   -Y,R21
00044c 934a      	ST   -Y,R20
                +
00044d 01fe     +MOVW R30 , R28
00044e 5ce5     +SUBI R30 , LOW ( - 571 )
00044f 4ffd     +SBCI R31 , HIGH ( - 571 )
000450 9001     +LD R0 , Z +
000451 81f0     +LD R31 , Z
000452 2de0     +MOV R30 , R0
                 	__GETW1SX 571
000453 93fa      	ST   -Y,R31
000454 93ea      	ST   -Y,R30
000455 de9f      	RCALL _oper_Disapath
                 ; 0000 0226 
                 ; 0000 0227             TIMER1_TIME = 0;
000456 e0e0      	LDI  R30,LOW(0)
                +
000457 01de     +MOVW R26 , R28
000458 50a8     +SUBI R26 , LOW ( - 504 )
000459 4fbe     +SBCI R27 , HIGH ( - 504 )
00045a 93ed     +ST X + , R30
00045b 93ed     +ST X + , R30
00045c 93ed     +ST X + , R30
00045d 93ec     +ST X , R30
                 	__CLRD1SX 504
                 ; 0000 0228             TIMER1_OVERFLOW = 0;
00045e 940e 0d6f 	CALL SUBOPT_0x15
                 ; 0000 0229             TCNT1L = 0;
000460 bdec      	OUT  0x2C,R30
                 ; 0000 022A 
                 ; 0000 022B             del_ms_flags = 0;
000461 e0e0      	LDI  R30,LOW(0)
                +
000462 01de     +MOVW R26 , R28
000463 5cae     +SUBI R26 , LOW ( - 562 )
000464 4fbd     +SBCI R27 , HIGH ( - 562 )
000465 93ec     +ST X , R30
                 	__PUTB1SX 562
                 ; 0000 022C             CHECK_GETS = 0;
000466 24aa      	CLR  R10
                 ; 0000 022D             UCSR1B |=(1<<RXEN1);
000467 91e0 009a 	LDS  R30,154
000469 61e0      	ORI  R30,0x10
00046a 93e0 009a 	STS  154,R30
                 ; 0000 022E             // PORTB.1 = 0;
                 ; 0000 022F         }
                 ; 0000 0230 
                 ; 0000 0231         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0x82:
00046c 91a0 0578 	LDS  R26,_TIMER1_OVERFLOW
00046e 91b0 0579 	LDS  R27,_TIMER1_OVERFLOW+1
000470 efef      	LDI  R30,LOW(255)
000471 940e 10de 	CALL __MULB1W2U
000473 01df      	MOVW R26,R30
000474 b5ec      	IN   R30,0x2C
000475 940e 0d4e 	CALL SUBOPT_0x10
000477 2766      	CLR  R22
000478 2777      	CLR  R23
000479 940e 0f74 	CALL __CDF1
                +
00047b edae     +LDI R26 , LOW ( 0x3D8E38DE )
00047c e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00047d e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00047e e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00047f 940e 0ffe 	CALL __MULF12
                +
000481 01de     +MOVW R26 , R28
000482 50a8     +SUBI R26 , LOW ( - 504 )
000483 4fbe     +SBCI R27 , HIGH ( - 504 )
000484 93ed     +ST X + , R30
000485 93fd     +ST X + , R31
000486 936d     +ST X + , R22
000487 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 0232 
                 ; 0000 0233         if(del_ms<TIMER1_TIME && del_ms_flags == 0)
                +
000488 01de     +MOVW R26 , R28
000489 5cad     +SUBI R26 , LOW ( - 563 )
00048a 4fbd     +SBCI R27 , HIGH ( - 563 )
00048b 900d     +LD R0 , X +
00048c 91bc     +LD R27 , X
00048d 2da0     +MOV R26 , R0
                 	__GETW2SX 563
00048e 940e 10d1 	CALL __CWD2
000490 940e 115f 	CALL __CDF2
000492 940e 1091 	CALL __CMPF12
000494 f430      	BRSH _0x87
                +
000495 01de     +MOVW R26 , R28
000496 5cae     +SUBI R26 , LOW ( - 562 )
000497 4fbd     +SBCI R27 , HIGH ( - 562 )
000498 91ac     +LD R26 , X
                 	__GETB2SX 562
000499 30a0      	CPI  R26,LOW(0x0)
00049a f009      	BREQ _0x88
                 _0x87:
00049b c01d      	RJMP _0x86
                 _0x88:
                 ; 0000 0234         {
                 ; 0000 0235             oper_Disapath(0,0);
00049c e0e0      	LDI  R30,LOW(0)
00049d e0f0      	LDI  R31,HIGH(0)
00049e 93fa      	ST   -Y,R31
00049f 93ea      	ST   -Y,R30
0004a0 93fa      	ST   -Y,R31
0004a1 93ea      	ST   -Y,R30
0004a2 de52      	RCALL _oper_Disapath
                 ; 0000 0236             TIMER1_OVERFLOW = 0;
0004a3 940e 0d6f 	CALL SUBOPT_0x15
                 ; 0000 0237             v_buff = 0;
                +
0004a5 01de     +MOVW R26 , R28
0004a6 5ca5     +SUBI R26 , LOW ( - 571 )
0004a7 4fbd     +SBCI R27 , HIGH ( - 571 )
0004a8 93ed     +ST X + , R30
0004a9 93ed     +ST X + , R30
0004aa 93ed     +ST X + , R30
0004ab 93ec     +ST X , R30
                 	__CLRD1SX 571
                 ; 0000 0238             a_buff = 0;
0004ac e0e0      	LDI  R30,LOW(0)
                +
0004ad 01de     +MOVW R26 , R28
0004ae 5ca1     +SUBI R26 , LOW ( - 575 )
0004af 4fbd     +SBCI R27 , HIGH ( - 575 )
0004b0 93ed     +ST X + , R30
0004b1 93ed     +ST X + , R30
0004b2 93ed     +ST X + , R30
0004b3 93ec     +ST X , R30
                 	__CLRD1SX 575
                 ; 0000 0239             del_ms_flags = 1;
0004b4 e0e1      	LDI  R30,LOW(1)
                +
0004b5 01de     +MOVW R26 , R28
0004b6 5cae     +SUBI R26 , LOW ( - 562 )
0004b7 4fbd     +SBCI R27 , HIGH ( - 562 )
0004b8 93ec     +ST X , R30
                 	__PUTB1SX 562
                 ; 0000 023A         }
                 ; 0000 023B 
                 ; 0000 023C         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 _0x86:
0004b9 e0e1      	LDI  R30,LOW(1)
0004ba 940e 0d75 	CALL SUBOPT_0x16
                 ; 0000 023D         delay_ms(5);
                 ; 0000 023E         // puts_Modbus1(PACKET_BUFF,PACKET_BUFF_IDX);
                 ; 0000 023F         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
0004bc e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004bd e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004be 93fa      	ST   -Y,R31
0004bf 93ea      	ST   -Y,R30
0004c0 924a      	ST   -Y,R4
0004c1 01fe      	MOVW R30,R28
0004c2 5de9      	SUBI R30,LOW(-(551))
0004c3 4ffd      	SBCI R31,HIGH(-(551))
0004c4 93fa      	ST   -Y,R31
0004c5 93ea      	ST   -Y,R30
0004c6 de4c      	RCALL _get_RPM
                +
0004c7 01de     +MOVW R26 , R28
0004c8 5da0     +SUBI R26 , LOW ( - 560 )
0004c9 4fbd     +SBCI R27 , HIGH ( - 560 )
0004ca 93ed     +ST X + , R30
0004cb 93fc     +ST X , R31
                 	__PUTW1SX 560
                 ; 0000 0240         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0004cc e0e2      	LDI  R30,LOW(2)
0004cd 940e 0d75 	CALL SUBOPT_0x16
                 ; 0000 0241         delay_ms(5);
                 ; 0000 0242         // puts_Modbus1(PACKET_BUFF,PACKET_BUFF_IDX);
                 ; 0000 0243         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
0004cf e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004d0 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004d1 93fa      	ST   -Y,R31
0004d2 93ea      	ST   -Y,R30
0004d3 924a      	ST   -Y,R4
0004d4 01fe      	MOVW R30,R28
0004d5 5deb      	SUBI R30,LOW(-(549))
0004d6 4ffd      	SBCI R31,HIGH(-(549))
0004d7 93fa      	ST   -Y,R31
0004d8 93ea      	ST   -Y,R30
0004d9 de39      	RCALL _get_RPM
0004da 940e 10b5 	CALL __ANEGW1
                +
0004dc 01de     +MOVW R26 , R28
0004dd 5da2     +SUBI R26 , LOW ( - 558 )
0004de 4fbd     +SBCI R27 , HIGH ( - 558 )
0004df 93ed     +ST X + , R30
0004e0 93fc     +ST X , R31
                 	__PUTW1SX 558
                 ; 0000 0244 
                 ; 0000 0245         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
0004e1 940e 0d81 	CALL SUBOPT_0x17
0004e3 940e 0d88 	CALL SUBOPT_0x18
                +
0004e5 01de     +MOVW R26 , R28
0004e6 5da6     +SUBI R26 , LOW ( - 554 )
0004e7 4fbd     +SBCI R27 , HIGH ( - 554 )
0004e8 93ed     +ST X + , R30
0004e9 93fd     +ST X + , R31
0004ea 936d     +ST X + , R22
0004eb 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 0246         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
0004ec 01fe     +MOVW R30 , R28
0004ed 5de2     +SUBI R30 , LOW ( - 558 )
0004ee 4ffd     +SBCI R31 , HIGH ( - 558 )
0004ef 9001     +LD R0 , Z +
0004f0 81f0     +LD R31 , Z
0004f1 2de0     +MOV R30 , R0
                 	__GETW1SX 558
0004f2 940e 0d88 	CALL SUBOPT_0x18
                +
0004f4 01de     +MOVW R26 , R28
0004f5 5daa     +SUBI R26 , LOW ( - 550 )
0004f6 4fbd     +SBCI R27 , HIGH ( - 550 )
0004f7 93ed     +ST X + , R30
0004f8 93fd     +ST X + , R31
0004f9 936d     +ST X + , R22
0004fa 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 0247 
                 ; 0000 0248         d_velocity = (currentV_R + currentV_L)/2;
                +
0004fb 01de     +MOVW R26 , R28
0004fc 5da6     +SUBI R26 , LOW ( - 554 )
0004fd 4fbd     +SBCI R27 , HIGH ( - 554 )
0004fe 900d     +LD R0 , X +
0004ff 901d     +LD R1 , X +
000500 918d     +LD R24 , X +
000501 919c     +LD R25 , X
000502 01d0     +MOVW R26 , R0
                 	__GETD2SX 554
000503 940e 0fae 	CALL __ADDF12
000505 01df      	MOVW R26,R30
000506 01cb      	MOVW R24,R22
                +
000507 e0e0     +LDI R30 , LOW ( 0x40000000 )
000508 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000509 e060     +LDI R22 , BYTE3 ( 0x40000000 )
00050a e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00050b 940e 104c 	CALL __DIVF21
                +
00050d 01de     +MOVW R26 , R28
00050e 5ea2     +SUBI R26 , LOW ( - 542 )
00050f 4fbd     +SBCI R27 , HIGH ( - 542 )
000510 93ed     +ST X + , R30
000511 93fd     +ST X + , R31
000512 936d     +ST X + , R22
000513 937c     +ST X , R23
                 	__PUTD1SX 542
                 ; 0000 0249         d_angularV = (currentV_R-currentV_L)/Length;
                +
000514 01de     +MOVW R26 , R28
000515 5daa     +SUBI R26 , LOW ( - 550 )
000516 4fbd     +SBCI R27 , HIGH ( - 550 )
000517 900d     +LD R0 , X +
000518 901d     +LD R1 , X +
000519 918d     +LD R24 , X +
00051a 919c     +LD R25 , X
00051b 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
                +
00051c 01fe     +MOVW R30 , R28
00051d 5de6     +SUBI R30 , LOW ( - 554 )
00051e 4ffd     +SBCI R31 , HIGH ( - 554 )
00051f 9001     +LD R0 , Z +
000520 9011     +LD R1 , Z +
000521 9161     +LD R22 , Z +
000522 8170     +LD R23 , Z
000523 01f0     +MOVW R30 , R0
                 	__GETD1SX 554
000524 940e 0fa7 	CALL __SUBF12
000526 01df      	MOVW R26,R30
000527 01cb      	MOVW R24,R22
                +
000528 e3eb     +LDI R30 , LOW ( 0x3E8FDF3B )
000529 edff     +LDI R31 , HIGH ( 0x3E8FDF3B )
00052a e86f     +LDI R22 , BYTE3 ( 0x3E8FDF3B )
00052b e37e     +LDI R23 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD1N 0x3E8FDF3B
00052c 940e 104c 	CALL __DIVF21
                +
00052e 01de     +MOVW R26 , R28
00052f 5ea6     +SUBI R26 , LOW ( - 538 )
000530 4fbd     +SBCI R27 , HIGH ( - 538 )
000531 93ed     +ST X + , R30
000532 93fd     +ST X + , R31
000533 936d     +ST X + , R22
000534 937c     +ST X , R23
                 	__PUTD1SX 538
                 ; 0000 024A 
                 ; 0000 024B         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
000535 01f3      	MOVW R30,R6
000536 efaf      	LDI  R26,LOW(255)
000537 e0b0      	LDI  R27,HIGH(255)
000538 940e 10d6 	CALL __MULW12U
00053a 01df      	MOVW R26,R30
00053b b7e2      	IN   R30,0x32
00053c 940e 0d4e 	CALL SUBOPT_0x10
00053e 2766      	CLR  R22
00053f 2777      	CLR  R23
000540 940e 0f74 	CALL __CDF1
                +
000542 eaae     +LDI R26 , LOW ( 0x3891A2AE )
000543 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000544 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000545 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000546 940e 0ffe 	CALL __MULF12
                +
000548 01de     +MOVW R26 , R28
000549 5eaa     +SUBI R26 , LOW ( - 534 )
00054a 4fbd     +SBCI R27 , HIGH ( - 534 )
00054b 93ed     +ST X + , R30
00054c 93fd     +ST X + , R31
00054d 936d     +ST X + , R22
00054e 937c     +ST X , R23
                 	__PUTD1SX 534
                 ; 0000 024C         TIMER0_OVERFLOW = 0;
00054f 2466      	CLR  R6
000550 2477      	CLR  R7
                 ; 0000 024D         TCNT0 = 0;
000551 e0e0      	LDI  R30,LOW(0)
000552 bfe2      	OUT  0x32,R30
                 ; 0000 024E 
                 ; 0000 024F         if((d_velocity!=0) ||(d_angularV!=0)){
000553 940e 0d95 	CALL SUBOPT_0x19
000555 940e 1173 	CALL __CPD02
000557 f461      	BRNE _0x8A
                +
000558 01de     +MOVW R26 , R28
000559 5ea6     +SUBI R26 , LOW ( - 538 )
00055a 4fbd     +SBCI R27 , HIGH ( - 538 )
00055b 900d     +LD R0 , X +
00055c 901d     +LD R1 , X +
00055d 918d     +LD R24 , X +
00055e 919c     +LD R25 , X
00055f 01d0     +MOVW R26 , R0
                 	__GETD2SX 538
000560 940e 1173 	CALL __CPD02
000562 f409      	BRNE _0x8A
000563 c06e      	RJMP _0x89
                 _0x8A:
                 ; 0000 0250             d_x += d_velocity*control_time*cos(control_time*d_angularV);
000564 940e 0d9e 	CALL SUBOPT_0x1A
000566 937f      	PUSH R23
000567 936f      	PUSH R22
000568 93ff      	PUSH R31
000569 93ef      	PUSH R30
00056a 940e 0daa 	CALL SUBOPT_0x1B
00056c 940e 0bd5 	CALL _cos
00056e 91af      	POP  R26
00056f 91bf      	POP  R27
000570 918f      	POP  R24
000571 919f      	POP  R25
000572 940e 0ffe 	CALL __MULF12
                +
000574 01de     +MOVW R26 , R28
000575 5eae     +SUBI R26 , LOW ( - 530 )
000576 4fbd     +SBCI R27 , HIGH ( - 530 )
000577 900d     +LD R0 , X +
000578 901d     +LD R1 , X +
000579 918d     +LD R24 , X +
00057a 919c     +LD R25 , X
00057b 01d0     +MOVW R26 , R0
                 	__GETD2SX 530
00057c 940e 0fae 	CALL __ADDF12
                +
00057e 01de     +MOVW R26 , R28
00057f 5eae     +SUBI R26 , LOW ( - 530 )
000580 4fbd     +SBCI R27 , HIGH ( - 530 )
000581 93ed     +ST X + , R30
000582 93fd     +ST X + , R31
000583 936d     +ST X + , R22
000584 937c     +ST X , R23
                 	__PUTD1SX 530
                 ; 0000 0251             d_y += d_velocity*control_time*sin(control_time*d_angularV);
000585 940e 0d9e 	CALL SUBOPT_0x1A
000587 937f      	PUSH R23
000588 936f      	PUSH R22
000589 93ff      	PUSH R31
00058a 93ef      	PUSH R30
00058b 940e 0daa 	CALL SUBOPT_0x1B
00058d 940e 0b4e 	CALL _sin
00058f 91af      	POP  R26
000590 91bf      	POP  R27
000591 918f      	POP  R24
000592 919f      	POP  R25
000593 940e 0ffe 	CALL __MULF12
                +
000595 01de     +MOVW R26 , R28
000596 5fa2     +SUBI R26 , LOW ( - 526 )
000597 4fbd     +SBCI R27 , HIGH ( - 526 )
000598 900d     +LD R0 , X +
000599 901d     +LD R1 , X +
00059a 918d     +LD R24 , X +
00059b 919c     +LD R25 , X
00059c 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
00059d 940e 0fae 	CALL __ADDF12
                +
00059f 01de     +MOVW R26 , R28
0005a0 5fa2     +SUBI R26 , LOW ( - 526 )
0005a1 4fbd     +SBCI R27 , HIGH ( - 526 )
0005a2 93ed     +ST X + , R30
0005a3 93fd     +ST X + , R31
0005a4 936d     +ST X + , R22
0005a5 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 0252             d_angular += control_time*d_angularV;
                +
0005a6 01fe     +MOVW R30 , R28
0005a7 5ee6     +SUBI R30 , LOW ( - 538 )
0005a8 4ffd     +SBCI R31 , HIGH ( - 538 )
0005a9 9001     +LD R0 , Z +
0005aa 9011     +LD R1 , Z +
0005ab 9161     +LD R22 , Z +
0005ac 8170     +LD R23 , Z
0005ad 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
0005ae 01de     +MOVW R26 , R28
0005af 5eaa     +SUBI R26 , LOW ( - 534 )
0005b0 4fbd     +SBCI R27 , HIGH ( - 534 )
0005b1 900d     +LD R0 , X +
0005b2 901d     +LD R1 , X +
0005b3 918d     +LD R24 , X +
0005b4 919c     +LD R25 , X
0005b5 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
0005b6 940e 0ffe 	CALL __MULF12
0005b8 940e 0dbf 	CALL SUBOPT_0x1C
0005ba 940e 0fae 	CALL __ADDF12
                +
0005bc 01de     +MOVW R26 , R28
0005bd 5fa6     +SUBI R26 , LOW ( - 522 )
0005be 4fbd     +SBCI R27 , HIGH ( - 522 )
0005bf 93ed     +ST X + , R30
0005c0 93fd     +ST X + , R31
0005c1 936d     +ST X + , R22
0005c2 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 0253             d_angular_circula = (int)(d_angular*Circular);
0005c3 940e 0dbf 	CALL SUBOPT_0x1C
                +
0005c5 efe6     +LDI R30 , LOW ( 0x426528F6 )
0005c6 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
0005c7 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
0005c8 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
0005c9 940e 0ffe 	CALL __MULF12
0005cb 940e 0f3d 	CALL __CFD1
                +
0005cd 01de     +MOVW R26 , R28
0005ce 5fa8     +SUBI R26 , LOW ( - 520 )
0005cf 4fbd     +SBCI R27 , HIGH ( - 520 )
0005d0 93ed     +ST X + , R30
0005d1 93fc     +ST X , R31
                 	__PUTW1SX 520
                 ; 0000 0254         }
                 ; 0000 0255 
                 ; 0000 0256         TIMER0_TIME += control_time;
                 _0x89:
                +
0005d2 01fe     +MOVW R30 , R28
0005d3 5eea     +SUBI R30 , LOW ( - 534 )
0005d4 4ffd     +SBCI R31 , HIGH ( - 534 )
0005d5 9001     +LD R0 , Z +
0005d6 9011     +LD R1 , Z +
0005d7 9161     +LD R22 , Z +
0005d8 8170     +LD R23 , Z
0005d9 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
0005da 940e 0dc8 	CALL SUBOPT_0x1D
0005dc 940e 0fae 	CALL __ADDF12
                +
0005de 01de     +MOVW R26 , R28
0005df 50ac     +SUBI R26 , LOW ( - 500 )
0005e0 4fbe     +SBCI R27 , HIGH ( - 500 )
0005e1 93ed     +ST X + , R30
0005e2 93fd     +ST X + , R31
0005e3 936d     +ST X + , R22
0005e4 937c     +ST X , R23
                 	__PUTD1SX 500
                 ; 0000 0257         if(TIMER0_TIME>0.1){
0005e5 940e 0dc8 	CALL SUBOPT_0x1D
0005e7 940e 0dd1 	CALL SUBOPT_0x1E
0005e9 940e 1091 	CALL __CMPF12
0005eb f009      	BREQ PC+2
0005ec f410      	BRCC PC+3
0005ed 940c 0624 	JMP  _0x8C
                 ; 0000 0258             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 0259             // sprintf(BUFF, "%f, %f\n", d_x, d_y,currentRPM_R, current);
                 ; 0000 025A             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 025B             // sprintf(BUFF, "%.3f, %.3f, %4d\n", d_x, d_y, d_angular_circula);
                 ; 0000 025C             sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, currentRPM_L, goal_current_R, -goal_current_L);
0005ef 01fe      	MOVW R30,R28
0005f0 93fa      	ST   -Y,R31
0005f1 93ea      	ST   -Y,R30
                +
0005f2 eded     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0005f3 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0005f4 93fa      	ST   -Y,R31
0005f5 93ea      	ST   -Y,R30
                +
0005f6 01fe     +MOVW R30 , R28
0005f7 5cec     +SUBI R30 , LOW ( - 564 )
0005f8 4ffd     +SBCI R31 , HIGH ( - 564 )
0005f9 9001     +LD R0 , Z +
0005fa 81f0     +LD R31 , Z
0005fb 2de0     +MOV R30 , R0
                 	__GETW1SX 564
0005fc 940e 0dd6 	CALL SUBOPT_0x1F
                +
0005fe 01fe     +MOVW R30 , R28
0005ff 5cea     +SUBI R30 , LOW ( - 566 )
000600 4ffd     +SBCI R31 , HIGH ( - 566 )
000601 9001     +LD R0 , Z +
000602 81f0     +LD R31 , Z
000603 2de0     +MOV R30 , R0
                 	__GETW1SX 566
000604 940e 0dd6 	CALL SUBOPT_0x1F
000606 940e 0d81 	CALL SUBOPT_0x17
000608 940e 0dd6 	CALL SUBOPT_0x1F
                +
00060a 01fe     +MOVW R30 , R28
00060b 5cee     +SUBI R30 , LOW ( - 562 )
00060c 4ffd     +SBCI R31 , HIGH ( - 562 )
00060d 9001     +LD R0 , Z +
00060e 81f0     +LD R31 , Z
00060f 2de0     +MOV R30 , R0
                 	__GETW1SX 562
000610 940e 10b5 	CALL __ANEGW1
000612 940e 0dd6 	CALL SUBOPT_0x1F
000614 e180      	LDI  R24,16
000615 940e 094b 	CALL _sprintf
000617 9664      	ADIW R28,20
                 ; 0000 025D             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 025E             puts_USART1(BUFF);
000618 01fe      	MOVW R30,R28
000619 93fa      	ST   -Y,R31
00061a 93ea      	ST   -Y,R30
00061b dbec      	RCALL _puts_USART1
                 ; 0000 025F             TIMER0_TIME = 0;
00061c e0e0      	LDI  R30,LOW(0)
                +
00061d 01de     +MOVW R26 , R28
00061e 50ac     +SUBI R26 , LOW ( - 500 )
00061f 4fbe     +SBCI R27 , HIGH ( - 500 )
000620 93ed     +ST X + , R30
000621 93ed     +ST X + , R30
000622 93ed     +ST X + , R30
000623 93ec     +ST X , R30
                 	__CLRD1SX 500
                 ; 0000 0260         }
                 ; 0000 0261 
                 ; 0000 0262     }
                 _0x8C:
000624 cdac      	RJMP _0x7F
                 ; 0000 0263 }
                 _0x8D:
000625 cfff      	RJMP _0x8D
=======
0003a8 e0e7      	LDI  R30,LOW(7)
0003a9 e0f0      	LDI  R31,HIGH(7)
0003aa 93fa      	ST   -Y,R31
0003ab 93ea      	ST   -Y,R30
0003ac de0c      	RCALL _usart1_init
                 ; 0000 019B     usart0_init(bps_115200);
0003ad e0e7      	LDI  R30,LOW(7)
0003ae e0f0      	LDI  R31,HIGH(7)
0003af 93fa      	ST   -Y,R31
0003b0 93ea      	ST   -Y,R30
0003b1 de1f      	RCALL _usart0_init
                 ; 0000 019C     timer2_init();
0003b2 de34      	RCALL _timer2_init
                 ; 0000 019D     timer0_init();
0003b3 de39      	RCALL _timer0_init
                 ; 0000 019E     timer1_init();
0003b4 de3c      	RCALL _timer1_init
                 ; 0000 019F     SREG |= 0x80;
0003b5 9478      	BSET 7
                 ; 0000 01A0     DDRB.1 = 1;
0003b6 9ab9      	SBI  0x17,1
                 ; 0000 01A1     DDRB.2 = 1;
0003b7 9aba      	SBI  0x17,2
                 ; 0000 01A2     DDRB.3 = 1;
0003b8 9abb      	SBI  0x17,3
                 ; 0000 01A3     delay_ms(5000);
0003b9 e8e8      	LDI  R30,LOW(5000)
0003ba e1f3      	LDI  R31,HIGH(5000)
0003bb 940e 0d43 	CALL SUBOPT_0x14
                 ; 0000 01A4     PORTB.1 = 0;
0003bd 98c1      	CBI  0x18,1
                 ; 0000 01A5     PORTB.2 = 1;
0003be 9ac2      	SBI  0x18,2
                 ; 0000 01A6 
                 ; 0000 01A7     TIMER0_OVERFLOW = 0;
0003bf 2466      	CLR  R6
0003c0 2477      	CLR  R7
                 ; 0000 01A8     TCNT0 = 0;
0003c1 e0e0      	LDI  R30,LOW(0)
0003c2 bfe2      	OUT  0x32,R30
                 ; 0000 01A9 
                 ; 0000 01AA     while(1)
                 _0x53:
                 ; 0000 01AB     {
                 ; 0000 01AC         if(CHECK_GETS)
0003c3 2088      	TST  R8
0003c4 f411      	BRNE PC+3
0003c5 940c 0455 	JMP _0x56
                 ; 0000 01AD         {
                 ; 0000 01AE             PORTB.1 = 1;
0003c7 9ac1      	SBI  0x18,1
                 ; 0000 01AF 
                 ; 0000 01B0             UCSR1B &= ~(1<<RXEN1);
0003c8 91e0 009a 	LDS  R30,154
0003ca 7eef      	ANDI R30,0xEF
0003cb 93e0 009a 	STS  154,R30
                 ; 0000 01B1             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
0003cd e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0003ce e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0003cf 93fa      	ST   -Y,R31
0003d0 93ea      	ST   -Y,R30
                +
0003d1 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0003d2 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0003d3 93fa      	ST   -Y,R31
0003d4 93ea      	ST   -Y,R30
0003d5 b7ed      	IN   R30,SPL
0003d6 b7fe      	IN   R31,SPH
0003d7 9731      	SBIW R30,1
0003d8 940e 113d 	CALL __PUTPARD1L
0003da 931f      	PUSH R17
0003db 930f      	PUSH R16
0003dc b7ed      	IN   R30,SPL
0003dd b7fe      	IN   R31,SPH
0003de 9731      	SBIW R30,1
0003df 940e 113d 	CALL __PUTPARD1L
0003e1 933f      	PUSH R19
0003e2 932f      	PUSH R18
0003e3 01fe      	MOVW R30,R28
0003e4 5ce2      	SUBI R30,LOW(-(574))
0003e5 4ffd      	SBCI R31,HIGH(-(574))
0003e6 2766      	CLR  R22
0003e7 2777      	CLR  R23
0003e8 940e 113f 	CALL __PUTPARD1
0003ea e08c      	LDI  R24,12
0003eb 940e 0ab7 	CALL _sscanf
0003ed 9660      	ADIW R28,16
0003ee 912f      	POP  R18
0003ef 913f      	POP  R19
0003f0 910f      	POP  R16
0003f1 911f      	POP  R17
                 ; 0000 01B2             // sscanf(VELOCITY_BUFF,"<%d,%d,%f,%f,%f>", &velocity, &angularV, &goal_x, &goal_y, goal_angular);
                 ; 0000 01B3 
                 ; 0000 01B4             if(!del_ms){
0003f2 940e 0d47 	CALL SUBOPT_0x15
0003f4 9730      	SBIW R30,0
0003f5 f4b1      	BRNE _0x59
                 ; 0000 01B5                 d_x = 0;
0003f6 e0e0      	LDI  R30,LOW(0)
                +
0003f7 01de     +MOVW R26 , R28
0003f8 5eae     +SUBI R26 , LOW ( - 530 )
0003f9 4fbd     +SBCI R27 , HIGH ( - 530 )
0003fa 93ed     +ST X + , R30
0003fb 93ed     +ST X + , R30
0003fc 93ed     +ST X + , R30
0003fd 93ec     +ST X , R30
                 	__CLRD1SX 530
                 ; 0000 01B6                 d_y = 0;
                +
0003fe 01de     +MOVW R26 , R28
0003ff 5fa2     +SUBI R26 , LOW ( - 526 )
000400 4fbd     +SBCI R27 , HIGH ( - 526 )
000401 93ed     +ST X + , R30
000402 93ed     +ST X + , R30
000403 93ed     +ST X + , R30
000404 93ec     +ST X , R30
                 	__CLRD1SX 526
                 ; 0000 01B7                 d_angular = 0;
                +
000405 01de     +MOVW R26 , R28
000406 5fa6     +SUBI R26 , LOW ( - 522 )
000407 4fbd     +SBCI R27 , HIGH ( - 522 )
000408 93ed     +ST X + , R30
000409 93ed     +ST X + , R30
00040a 93ed     +ST X + , R30
00040b 93ec     +ST X , R30
                 	__CLRD1SX 522
                 ; 0000 01B8             }
                 ; 0000 01B9 
                 ; 0000 01BA             v_buff = (float)velocity/1000;
                 _0x59:
00040c 01f8      	MOVW R30,R16
00040d 940e 0d4e 	CALL SUBOPT_0x16
                +
00040f 01de     +MOVW R26 , R28
000410 5ca6     +SUBI R26 , LOW ( - 570 )
000411 4fbd     +SBCI R27 , HIGH ( - 570 )
000412 93ed     +ST X + , R30
000413 93fd     +ST X + , R31
000414 936d     +ST X + , R22
000415 937c     +ST X , R23
                 	__PUTD1SX 570
                 ; 0000 01BB             a_buff = (float)angularV/1000;
000416 01f9      	MOVW R30,R18
000417 940e 0d4e 	CALL SUBOPT_0x16
                +
000419 01de     +MOVW R26 , R28
00041a 5ca2     +SUBI R26 , LOW ( - 574 )
00041b 4fbd     +SBCI R27 , HIGH ( - 574 )
00041c 93ed     +ST X + , R30
00041d 93fd     +ST X + , R31
00041e 936d     +ST X + , R22
00041f 937c     +ST X , R23
                 	__PUTD1SX 574
                 ; 0000 01BC 
                 ; 0000 01BD             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000420 01fe      	MOVW R30,R28
000421 5ce6      	SUBI R30,LOW(-(570))
000422 4ffd      	SBCI R31,HIGH(-(570))
000423 93fa      	ST   -Y,R31
000424 93ea      	ST   -Y,R30
000425 01fe      	MOVW R30,R28
000426 5ce0      	SUBI R30,LOW(-(576))
000427 4ffd      	SBCI R31,HIGH(-(576))
000428 93fa      	ST   -Y,R31
000429 93ea      	ST   -Y,R30
00042a b7ed      	IN   R30,SPL
00042b b7fe      	IN   R31,SPH
00042c 9731      	SBIW R30,1
00042d 93fa      	ST   -Y,R31
00042e 93ea      	ST   -Y,R30
00042f 935f      	PUSH R21
000430 934f      	PUSH R20
000431 01fe      	MOVW R30,R28
000432 5ce2      	SUBI R30,LOW(-(574))
000433 4ffd      	SBCI R31,HIGH(-(574))
000434 93fa      	ST   -Y,R31
000435 93ea      	ST   -Y,R30
000436 de45      	RCALL _Make_MSPEED
000437 914f      	POP  R20
000438 915f      	POP  R21
                 ; 0000 01BE 
                 ; 0000 01BF             oper_Disapath(velocity_R, velocity_L);
000439 935a      	ST   -Y,R21
00043a 934a      	ST   -Y,R20
                +
00043b 01fe     +MOVW R30 , R28
00043c 5ce6     +SUBI R30 , LOW ( - 570 )
00043d 4ffd     +SBCI R31 , HIGH ( - 570 )
00043e 9001     +LD R0 , Z +
00043f 81f0     +LD R31 , Z
000440 2de0     +MOV R30 , R0
                 	__GETW1SX 570
000441 93fa      	ST   -Y,R31
000442 93ea      	ST   -Y,R30
000443 deb0      	RCALL _oper_Disapath
                 ; 0000 01C0 
                 ; 0000 01C1             TIMER1_TIME = 0;
000444 e0e0      	LDI  R30,LOW(0)
                +
000445 01de     +MOVW R26 , R28
000446 50a8     +SUBI R26 , LOW ( - 504 )
000447 4fbe     +SBCI R27 , HIGH ( - 504 )
000448 93ed     +ST X + , R30
000449 93ed     +ST X + , R30
00044a 93ed     +ST X + , R30
00044b 93ec     +ST X , R30
                 	__CLRD1SX 504
                 ; 0000 01C2             TIMER1_OVERFLOW = 0;
00044c 24cc      	CLR  R12
00044d 24dd      	CLR  R13
                 ; 0000 01C3             TCNT1L = 0;
00044e bdec      	OUT  0x2C,R30
                 ; 0000 01C4 
                 ; 0000 01C5             CHECK_GETS = 0;
00044f 2488      	CLR  R8
                 ; 0000 01C6             UCSR1B |=(1<<RXEN1);
000450 91e0 009a 	LDS  R30,154
000452 61e0      	ORI  R30,0x10
000453 93e0 009a 	STS  154,R30
                 ; 0000 01C7             // PORTB.1 = 0;
                 ; 0000 01C8         }
                 ; 0000 01C9 
                 ; 0000 01CA         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0x56:
000455 01f6      	MOVW R30,R12
000456 efaf      	LDI  R26,LOW(255)
000457 e0b0      	LDI  R27,HIGH(255)
000458 940e 10c3 	CALL __MULW12U
00045a 01df      	MOVW R26,R30
00045b b5ec      	IN   R30,0x2C
00045c 940e 0d2a 	CALL SUBOPT_0x10
00045e 2766      	CLR  R22
00045f 2777      	CLR  R23
000460 940e 0f61 	CALL __CDF1
                +
000462 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000463 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
000464 e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
000465 e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
000466 940e 0feb 	CALL __MULF12
                +
000468 01de     +MOVW R26 , R28
000469 50a8     +SUBI R26 , LOW ( - 504 )
00046a 4fbe     +SBCI R27 , HIGH ( - 504 )
00046b 93ed     +ST X + , R30
00046c 93fd     +ST X + , R31
00046d 936d     +ST X + , R22
00046e 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 01CB 
                 ; 0000 01CC         if(del_ms<TIMER1_TIME)
                +
00046f 01de     +MOVW R26 , R28
000470 5cae     +SUBI R26 , LOW ( - 562 )
000471 4fbd     +SBCI R27 , HIGH ( - 562 )
000472 900d     +LD R0 , X +
000473 91bc     +LD R27 , X
000474 2da0     +MOV R26 , R0
                 	__GETW2SX 562
000475 940e 10be 	CALL __CWD2
000477 940e 1146 	CALL __CDF2
000479 940e 107e 	CALL __CMPF12
00047b f4c0      	BRSH _0x5A
                 ; 0000 01CD         {
                 ; 0000 01CE             oper_Disapath(0,0);
00047c e0e0      	LDI  R30,LOW(0)
00047d e0f0      	LDI  R31,HIGH(0)
00047e 93fa      	ST   -Y,R31
00047f 93ea      	ST   -Y,R30
000480 93fa      	ST   -Y,R31
000481 93ea      	ST   -Y,R30
000482 de71      	RCALL _oper_Disapath
                 ; 0000 01CF             TIMER1_OVERFLOW = 0;
000483 24cc      	CLR  R12
000484 24dd      	CLR  R13
                 ; 0000 01D0             v_buff = 0;
000485 e0e0      	LDI  R30,LOW(0)
                +
000486 01de     +MOVW R26 , R28
000487 5ca6     +SUBI R26 , LOW ( - 570 )
000488 4fbd     +SBCI R27 , HIGH ( - 570 )
000489 93ed     +ST X + , R30
00048a 93ed     +ST X + , R30
00048b 93ed     +ST X + , R30
00048c 93ec     +ST X , R30
                 	__CLRD1SX 570
                 ; 0000 01D1             a_buff = 0;
                +
00048d 01de     +MOVW R26 , R28
00048e 5ca2     +SUBI R26 , LOW ( - 574 )
00048f 4fbd     +SBCI R27 , HIGH ( - 574 )
000490 93ed     +ST X + , R30
000491 93ed     +ST X + , R30
000492 93ed     +ST X + , R30
000493 93ec     +ST X , R30
                 	__CLRD1SX 574
                 ; 0000 01D2         }
                 ; 0000 01D3 
                 ; 0000 01D4         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 _0x5A:
000494 e0e1      	LDI  R30,LOW(1)
000495 940e 0d5b 	CALL SUBOPT_0x17
                 ; 0000 01D5         delay_ms(5);
                 ; 0000 01D6         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
000497 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
000498 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
000499 93fa      	ST   -Y,R31
00049a 93ea      	ST   -Y,R30
00049b 924a      	ST   -Y,R4
00049c 01fe      	MOVW R30,R28
00049d 5de9      	SUBI R30,LOW(-(551))
00049e 4ffd      	SBCI R31,HIGH(-(551))
00049f 93fa      	ST   -Y,R31
0004a0 93ea      	ST   -Y,R30
0004a1 de70      	RCALL _get_RPM
                +
0004a2 01de     +MOVW R26 , R28
0004a3 5da0     +SUBI R26 , LOW ( - 560 )
0004a4 4fbd     +SBCI R27 , HIGH ( - 560 )
0004a5 93ed     +ST X + , R30
0004a6 93fc     +ST X , R31
                 	__PUTW1SX 560
                 ; 0000 01D7         // delay_ms(5);
                 ; 0000 01D8         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0004a7 e0e2      	LDI  R30,LOW(2)
0004a8 940e 0d5b 	CALL SUBOPT_0x17
                 ; 0000 01D9         delay_ms(5);
                 ; 0000 01DA         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
0004aa e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004ab e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004ac 93fa      	ST   -Y,R31
0004ad 93ea      	ST   -Y,R30
0004ae 924a      	ST   -Y,R4
0004af 01fe      	MOVW R30,R28
0004b0 5deb      	SUBI R30,LOW(-(549))
0004b1 4ffd      	SBCI R31,HIGH(-(549))
0004b2 93fa      	ST   -Y,R31
0004b3 93ea      	ST   -Y,R30
0004b4 de5d      	RCALL _get_RPM
0004b5 940e 10a2 	CALL __ANEGW1
                +
0004b7 01de     +MOVW R26 , R28
0004b8 5da2     +SUBI R26 , LOW ( - 558 )
0004b9 4fbd     +SBCI R27 , HIGH ( - 558 )
0004ba 93ed     +ST X + , R30
0004bb 93fc     +ST X , R31
                 	__PUTW1SX 558
                 ; 0000 01DB         // delay_ms(5);
                 ; 0000 01DC 
                 ; 0000 01DD         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
0004bc 940e 0d67 	CALL SUBOPT_0x18
0004be 940e 0d6e 	CALL SUBOPT_0x19
                +
0004c0 01de     +MOVW R26 , R28
0004c1 5da6     +SUBI R26 , LOW ( - 554 )
0004c2 4fbd     +SBCI R27 , HIGH ( - 554 )
0004c3 93ed     +ST X + , R30
0004c4 93fd     +ST X + , R31
0004c5 936d     +ST X + , R22
0004c6 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 01DE         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
0004c7 01fe     +MOVW R30 , R28
0004c8 5de2     +SUBI R30 , LOW ( - 558 )
0004c9 4ffd     +SBCI R31 , HIGH ( - 558 )
0004ca 9001     +LD R0 , Z +
0004cb 81f0     +LD R31 , Z
0004cc 2de0     +MOV R30 , R0
                 	__GETW1SX 558
0004cd 940e 0d6e 	CALL SUBOPT_0x19
                +
0004cf 01de     +MOVW R26 , R28
0004d0 5daa     +SUBI R26 , LOW ( - 550 )
0004d1 4fbd     +SBCI R27 , HIGH ( - 550 )
0004d2 93ed     +ST X + , R30
0004d3 93fd     +ST X + , R31
0004d4 936d     +ST X + , R22
0004d5 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 01DF 
                 ; 0000 01E0         d_velocity = (currentV_R + currentV_L)/2;
                +
0004d6 01de     +MOVW R26 , R28
0004d7 5da6     +SUBI R26 , LOW ( - 554 )
0004d8 4fbd     +SBCI R27 , HIGH ( - 554 )
0004d9 900d     +LD R0 , X +
0004da 901d     +LD R1 , X +
0004db 918d     +LD R24 , X +
0004dc 919c     +LD R25 , X
0004dd 01d0     +MOVW R26 , R0
                 	__GETD2SX 554
0004de 940e 0f9b 	CALL __ADDF12
0004e0 01df      	MOVW R26,R30
0004e1 01cb      	MOVW R24,R22
                +
0004e2 e0e0     +LDI R30 , LOW ( 0x40000000 )
0004e3 e0f0     +LDI R31 , HIGH ( 0x40000000 )
0004e4 e060     +LDI R22 , BYTE3 ( 0x40000000 )
0004e5 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0004e6 940e 1039 	CALL __DIVF21
                +
0004e8 01de     +MOVW R26 , R28
0004e9 5ea2     +SUBI R26 , LOW ( - 542 )
0004ea 4fbd     +SBCI R27 , HIGH ( - 542 )
0004eb 93ed     +ST X + , R30
0004ec 93fd     +ST X + , R31
0004ed 936d     +ST X + , R22
0004ee 937c     +ST X , R23
                 	__PUTD1SX 542
                 ; 0000 01E1         d_angularV = (2*(currentV_R-currentV_L))/Length;
                +
0004ef 01de     +MOVW R26 , R28
0004f0 5daa     +SUBI R26 , LOW ( - 550 )
0004f1 4fbd     +SBCI R27 , HIGH ( - 550 )
0004f2 900d     +LD R0 , X +
0004f3 901d     +LD R1 , X +
0004f4 918d     +LD R24 , X +
0004f5 919c     +LD R25 , X
0004f6 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
                +
0004f7 01fe     +MOVW R30 , R28
0004f8 5de6     +SUBI R30 , LOW ( - 554 )
0004f9 4ffd     +SBCI R31 , HIGH ( - 554 )
0004fa 9001     +LD R0 , Z +
0004fb 9011     +LD R1 , Z +
0004fc 9161     +LD R22 , Z +
0004fd 8170     +LD R23 , Z
0004fe 01f0     +MOVW R30 , R0
                 	__GETD1SX 554
0004ff 940e 0f94 	CALL __SUBF12
                +
000501 e0a0     +LDI R26 , LOW ( 0x40000000 )
000502 e0b0     +LDI R27 , HIGH ( 0x40000000 )
000503 e080     +LDI R24 , BYTE3 ( 0x40000000 )
000504 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
000505 940e 0feb 	CALL __MULF12
000507 01df      	MOVW R26,R30
000508 01cb      	MOVW R24,R22
                +
000509 e3eb     +LDI R30 , LOW ( 0x3E8FDF3B )
00050a edff     +LDI R31 , HIGH ( 0x3E8FDF3B )
00050b e86f     +LDI R22 , BYTE3 ( 0x3E8FDF3B )
00050c e37e     +LDI R23 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD1N 0x3E8FDF3B
00050d 940e 1039 	CALL __DIVF21
                +
00050f 01de     +MOVW R26 , R28
000510 5ea6     +SUBI R26 , LOW ( - 538 )
000511 4fbd     +SBCI R27 , HIGH ( - 538 )
000512 93ed     +ST X + , R30
000513 93fd     +ST X + , R31
000514 936d     +ST X + , R22
000515 937c     +ST X , R23
                 	__PUTD1SX 538
                 ; 0000 01E2 
                 ; 0000 01E3         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
000516 01f3      	MOVW R30,R6
000517 efaf      	LDI  R26,LOW(255)
000518 e0b0      	LDI  R27,HIGH(255)
000519 940e 10c3 	CALL __MULW12U
00051b 01df      	MOVW R26,R30
00051c b7e2      	IN   R30,0x32
00051d 940e 0d2a 	CALL SUBOPT_0x10
00051f 2766      	CLR  R22
000520 2777      	CLR  R23
000521 940e 0f61 	CALL __CDF1
                +
000523 eaae     +LDI R26 , LOW ( 0x3891A2AE )
000524 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000525 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000526 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000527 940e 0feb 	CALL __MULF12
                +
000529 01de     +MOVW R26 , R28
00052a 5eaa     +SUBI R26 , LOW ( - 534 )
00052b 4fbd     +SBCI R27 , HIGH ( - 534 )
00052c 93ed     +ST X + , R30
00052d 93fd     +ST X + , R31
00052e 936d     +ST X + , R22
00052f 937c     +ST X , R23
                 	__PUTD1SX 534
                 ; 0000 01E4         TIMER0_OVERFLOW = 0;
000530 2466      	CLR  R6
000531 2477      	CLR  R7
                 ; 0000 01E5         TCNT0 = 0;
000532 e0e0      	LDI  R30,LOW(0)
000533 bfe2      	OUT  0x32,R30
                 ; 0000 01E6 
                 ; 0000 01E7         if((d_velocity!=0) ||(d_angularV!=0)){
000534 940e 0d7b 	CALL SUBOPT_0x1A
000536 940e 115a 	CALL __CPD02
000538 f461      	BRNE _0x5C
                +
000539 01de     +MOVW R26 , R28
00053a 5ea6     +SUBI R26 , LOW ( - 538 )
00053b 4fbd     +SBCI R27 , HIGH ( - 538 )
00053c 900d     +LD R0 , X +
00053d 901d     +LD R1 , X +
00053e 918d     +LD R24 , X +
00053f 919c     +LD R25 , X
000540 01d0     +MOVW R26 , R0
                 	__GETD2SX 538
000541 940e 115a 	CALL __CPD02
000543 f409      	BRNE _0x5C
000544 c06e      	RJMP _0x5B
                 _0x5C:
                 ; 0000 01E8             d_x += d_velocity*control_time*cos(control_time*d_angularV);
000545 940e 0d84 	CALL SUBOPT_0x1B
000547 937f      	PUSH R23
000548 936f      	PUSH R22
000549 93ff      	PUSH R31
00054a 93ef      	PUSH R30
00054b 940e 0d90 	CALL SUBOPT_0x1C
00054d 940e 0bb2 	CALL _cos
00054f 91af      	POP  R26
000550 91bf      	POP  R27
000551 918f      	POP  R24
000552 919f      	POP  R25
000553 940e 0feb 	CALL __MULF12
                +
000555 01de     +MOVW R26 , R28
000556 5eae     +SUBI R26 , LOW ( - 530 )
000557 4fbd     +SBCI R27 , HIGH ( - 530 )
000558 900d     +LD R0 , X +
000559 901d     +LD R1 , X +
00055a 918d     +LD R24 , X +
00055b 919c     +LD R25 , X
00055c 01d0     +MOVW R26 , R0
                 	__GETD2SX 530
00055d 940e 0f9b 	CALL __ADDF12
                +
00055f 01de     +MOVW R26 , R28
000560 5eae     +SUBI R26 , LOW ( - 530 )
000561 4fbd     +SBCI R27 , HIGH ( - 530 )
000562 93ed     +ST X + , R30
000563 93fd     +ST X + , R31
000564 936d     +ST X + , R22
000565 937c     +ST X , R23
                 	__PUTD1SX 530
                 ; 0000 01E9             d_y += d_velocity*control_time*sin(control_time*d_angularV);
000566 940e 0d84 	CALL SUBOPT_0x1B
000568 937f      	PUSH R23
000569 936f      	PUSH R22
00056a 93ff      	PUSH R31
00056b 93ef      	PUSH R30
00056c 940e 0d90 	CALL SUBOPT_0x1C
00056e 940e 0b2b 	CALL _sin
000570 91af      	POP  R26
000571 91bf      	POP  R27
000572 918f      	POP  R24
000573 919f      	POP  R25
000574 940e 0feb 	CALL __MULF12
                +
000576 01de     +MOVW R26 , R28
000577 5fa2     +SUBI R26 , LOW ( - 526 )
000578 4fbd     +SBCI R27 , HIGH ( - 526 )
000579 900d     +LD R0 , X +
00057a 901d     +LD R1 , X +
00057b 918d     +LD R24 , X +
00057c 919c     +LD R25 , X
00057d 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
00057e 940e 0f9b 	CALL __ADDF12
                +
000580 01de     +MOVW R26 , R28
000581 5fa2     +SUBI R26 , LOW ( - 526 )
000582 4fbd     +SBCI R27 , HIGH ( - 526 )
000583 93ed     +ST X + , R30
000584 93fd     +ST X + , R31
000585 936d     +ST X + , R22
000586 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 01EA             d_angular += control_time*d_angularV;
                +
000587 01fe     +MOVW R30 , R28
000588 5ee6     +SUBI R30 , LOW ( - 538 )
000589 4ffd     +SBCI R31 , HIGH ( - 538 )
00058a 9001     +LD R0 , Z +
00058b 9011     +LD R1 , Z +
00058c 9161     +LD R22 , Z +
00058d 8170     +LD R23 , Z
00058e 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
00058f 01de     +MOVW R26 , R28
000590 5eaa     +SUBI R26 , LOW ( - 534 )
000591 4fbd     +SBCI R27 , HIGH ( - 534 )
000592 900d     +LD R0 , X +
000593 901d     +LD R1 , X +
000594 918d     +LD R24 , X +
000595 919c     +LD R25 , X
000596 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
000597 940e 0feb 	CALL __MULF12
000599 940e 0da5 	CALL SUBOPT_0x1D
00059b 940e 0f9b 	CALL __ADDF12
                +
00059d 01de     +MOVW R26 , R28
00059e 5fa6     +SUBI R26 , LOW ( - 522 )
00059f 4fbd     +SBCI R27 , HIGH ( - 522 )
0005a0 93ed     +ST X + , R30
0005a1 93fd     +ST X + , R31
0005a2 936d     +ST X + , R22
0005a3 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 01EB             d_angular_circula = (int)(d_angular*Circular);
0005a4 940e 0da5 	CALL SUBOPT_0x1D
                +
0005a6 efe6     +LDI R30 , LOW ( 0x426528F6 )
0005a7 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
0005a8 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
0005a9 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
0005aa 940e 0feb 	CALL __MULF12
0005ac 940e 0f2a 	CALL __CFD1
                +
0005ae 01de     +MOVW R26 , R28
0005af 5fa8     +SUBI R26 , LOW ( - 520 )
0005b0 4fbd     +SBCI R27 , HIGH ( - 520 )
0005b1 93ed     +ST X + , R30
0005b2 93fc     +ST X , R31
                 	__PUTW1SX 520
                 ; 0000 01EC         }
                 ; 0000 01ED 
                 ; 0000 01EE         TIMER0_TIME += control_time;
                 _0x5B:
                +
0005b3 01fe     +MOVW R30 , R28
0005b4 5eea     +SUBI R30 , LOW ( - 534 )
0005b5 4ffd     +SBCI R31 , HIGH ( - 534 )
0005b6 9001     +LD R0 , Z +
0005b7 9011     +LD R1 , Z +
0005b8 9161     +LD R22 , Z +
0005b9 8170     +LD R23 , Z
0005ba 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
0005bb 940e 0dae 	CALL SUBOPT_0x1E
0005bd 940e 0f9b 	CALL __ADDF12
                +
0005bf 01de     +MOVW R26 , R28
0005c0 50ac     +SUBI R26 , LOW ( - 500 )
0005c1 4fbe     +SBCI R27 , HIGH ( - 500 )
0005c2 93ed     +ST X + , R30
0005c3 93fd     +ST X + , R31
0005c4 936d     +ST X + , R22
0005c5 937c     +ST X , R23
                 	__PUTD1SX 500
                 ; 0000 01EF         if(TIMER0_TIME>0.05){
0005c6 940e 0dae 	CALL SUBOPT_0x1E
                +
0005c8 eced     +LDI R30 , LOW ( 0x3D4CCCCD )
0005c9 ecfc     +LDI R31 , HIGH ( 0x3D4CCCCD )
0005ca e46c     +LDI R22 , BYTE3 ( 0x3D4CCCCD )
0005cb e37d     +LDI R23 , BYTE4 ( 0x3D4CCCCD )
                 	__GETD1N 0x3D4CCCCD
0005cc 940e 107e 	CALL __CMPF12
0005ce f009      	BREQ PC+2
0005cf f410      	BRCC PC+3
0005d0 940c 0601 	JMP  _0x5E
                 ; 0000 01F0             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 01F1             // sprintf(BUFF, "%f, %f\n", d_x, d_y,currentRPM_R, current);
                 ; 0000 01F2             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 01F3             // sprintf(BUFF, "%.3f, %.3f, %4d\n", d_x, d_y, d_angular_circula/2);
                 ; 0000 01F4             sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, currentRPM_L, goal_current_R, goal_current_L);
0005d2 01fe      	MOVW R30,R28
0005d3 93fa      	ST   -Y,R31
0005d4 93ea      	ST   -Y,R30
                +
0005d5 edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0005d6 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0005d7 93fa      	ST   -Y,R31
0005d8 93ea      	ST   -Y,R30
                +
0005d9 01fe     +MOVW R30 , R28
0005da 5cec     +SUBI R30 , LOW ( - 564 )
0005db 4ffd     +SBCI R31 , HIGH ( - 564 )
0005dc 9001     +LD R0 , Z +
0005dd 81f0     +LD R31 , Z
0005de 2de0     +MOV R30 , R0
                 	__GETW1SX 564
0005df 940e 0db7 	CALL SUBOPT_0x1F
                +
0005e1 01fe     +MOVW R30 , R28
0005e2 5cea     +SUBI R30 , LOW ( - 566 )
0005e3 4ffd     +SBCI R31 , HIGH ( - 566 )
0005e4 9001     +LD R0 , Z +
0005e5 81f0     +LD R31 , Z
0005e6 2de0     +MOV R30 , R0
                 	__GETW1SX 566
0005e7 940e 0db7 	CALL SUBOPT_0x1F
0005e9 940e 0d67 	CALL SUBOPT_0x18
0005eb 940e 0db7 	CALL SUBOPT_0x1F
0005ed 940e 0d47 	CALL SUBOPT_0x15
0005ef 940e 0db7 	CALL SUBOPT_0x1F
0005f1 e180      	LDI  R24,16
0005f2 940e 0928 	CALL _sprintf
0005f4 9664      	ADIW R28,20
                 ; 0000 01F5             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 01F6             puts_USART1(BUFF);
0005f5 01fe      	MOVW R30,R28
0005f6 93fa      	ST   -Y,R31
0005f7 93ea      	ST   -Y,R30
0005f8 dc0e      	RCALL _puts_USART1
                 ; 0000 01F7              TIMER0_TIME = 0;
0005f9 e0e0      	LDI  R30,LOW(0)
                +
0005fa 01de     +MOVW R26 , R28
0005fb 50ac     +SUBI R26 , LOW ( - 500 )
0005fc 4fbe     +SBCI R27 , HIGH ( - 500 )
0005fd 93ed     +ST X + , R30
0005fe 93ed     +ST X + , R30
0005ff 93ed     +ST X + , R30
000600 93ec     +ST X , R30
                 	__CLRD1SX 500
                 ; 0000 01F8         }
                 ; 0000 01F9 
                 ; 0000 01FA     }
                 _0x5E:
000601 cdc1      	RJMP _0x53
                 ; 0000 01FB }
                 _0x5F:
000602 cfff      	RJMP _0x5F
>>>>>>> merget
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
<<<<<<< HEAD
000626 931a      	ST   -Y,R17
000627 930a      	ST   -Y,R16
000628 81aa      	LDD  R26,Y+2
000629 81bb      	LDD  R27,Y+2+1
00062a 9612      	ADIW R26,2
00062b 940e 1138 	CALL __GETW1P
00062d 9730      	SBIW R30,0
00062e f129      	BREQ _0x2000010
00062f 81aa      	LDD  R26,Y+2
000630 81bb      	LDD  R27,Y+2+1
000631 9614      	ADIW R26,4
000632 940e 1138 	CALL __GETW1P
000634 018f      	MOVW R16,R30
000635 9730      	SBIW R30,0
000636 f061      	BREQ _0x2000012
                +
000637 3002     +CPI R16 , LOW ( 2 )
000638 e0e0     +LDI R30 , HIGH ( 2 )
000639 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00063a f0c0      	BRLO _0x2000013
00063b 01f8      	MOVW R30,R16
00063c 9731      	SBIW R30,1
00063d 018f      	MOVW R16,R30
                +
00063e 81aa     +LDD R26 , Y + 2
00063f 81bb     +LDD R27 , Y + 2 + 1
000640 9614     +ADIW R26 , 4
000641 93ed     +ST X + , R30
000642 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000643 81aa      	LDD  R26,Y+2
000644 81bb      	LDD  R27,Y+2+1
000645 9612      	ADIW R26,2
000646 940e 0d58 	CALL SUBOPT_0x12
000648 9731      	SBIW R30,1
000649 81ac      	LDD  R26,Y+4
00064a 83a0      	STD  Z+0,R26
00064b 81aa      	LDD  R26,Y+2
00064c 81bb      	LDD  R27,Y+2+1
00064d 940e 1138 	CALL __GETW1P
00064f 23ff      	TST  R31
000650 f012      	BRMI _0x2000014
000651 940e 0d58 	CALL SUBOPT_0x12
                 _0x2000014:
                 _0x2000013:
000653 c006      	RJMP _0x2000015
                 _0x2000010:
000654 81aa      	LDD  R26,Y+2
000655 81bb      	LDD  R27,Y+2+1
000656 efef      	LDI  R30,LOW(65535)
000657 efff      	LDI  R31,HIGH(65535)
000658 93ed      	ST   X+,R30
000659 93fc      	ST   X,R31
                 _0x2000015:
00065a 8119      	LDD  R17,Y+1
00065b 8108      	LDD  R16,Y+0
00065c c348      	RJMP _0x20A0007
                 __ftoe_G100:
00065d 9724      	SBIW R28,4
00065e 940e 0cf9 	CALL SUBOPT_0x4
000660 e8e0      	LDI  R30,LOW(128)
000661 83ea      	STD  Y+2,R30
000662 e3ef      	LDI  R30,LOW(63)
000663 83eb      	STD  Y+3,R30
000664 940e 117b 	CALL __SAVELOCR4
000666 85ee      	LDD  R30,Y+14
000667 85ff      	LDD  R31,Y+14+1
000668 3fef      	CPI  R30,LOW(0xFFFF)
000669 efaf      	LDI  R26,HIGH(0xFFFF)
00066a 07fa      	CPC  R31,R26
00066b f449      	BRNE _0x2000019
00066c 85e8      	LDD  R30,Y+8
00066d 85f9      	LDD  R31,Y+8+1
00066e 93fa      	ST   -Y,R31
00066f 93ea      	ST   -Y,R30
                +
000670 eeee     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000671 e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000672 940e 0ddb 	CALL SUBOPT_0x20
000674 c0b6      	RJMP _0x20A0009
                 _0x2000019:
000675 3fef      	CPI  R30,LOW(0x7FFF)
000676 e7af      	LDI  R26,HIGH(0x7FFF)
000677 07fa      	CPC  R31,R26
000678 f449      	BRNE _0x2000018
000679 85e8      	LDD  R30,Y+8
00067a 85f9      	LDD  R31,Y+8+1
00067b 93fa      	ST   -Y,R31
00067c 93ea      	ST   -Y,R30
                +
00067d eeef     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00067e e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00067f 940e 0ddb 	CALL SUBOPT_0x20
000681 c0a9      	RJMP _0x20A0009
                 _0x2000018:
000682 85ab      	LDD  R26,Y+11
000683 30a7      	CPI  R26,LOW(0x7)
000684 f010      	BRLO _0x200001B
000685 e0e6      	LDI  R30,LOW(6)
000686 87eb      	STD  Y+11,R30
                 _0x200001B:
000687 851b      	LDD  R17,Y+11
                 _0x200001C:
000688 2fe1      	MOV  R30,R17
000689 5011      	SUBI R17,1
00068a 30e0      	CPI  R30,0
00068b f019      	BREQ _0x200001E
00068c 940e 0ddf 	CALL SUBOPT_0x21
00068e cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00068f 85ec     +LDD R30 , Y + 12
000690 85fd     +LDD R31 , Y + 12 + 1
000691 856e     +LDD R22 , Y + 12 + 2
000692 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000693 940e 116f 	CALL __CPD10
000695 f421      	BRNE _0x200001F
000696 e030      	LDI  R19,LOW(0)
000697 940e 0ddf 	CALL SUBOPT_0x21
000699 c02e      	RJMP _0x2000020
                 _0x200001F:
00069a 853b      	LDD  R19,Y+11
00069b 940e 0dea 	CALL SUBOPT_0x22
00069d f009      	BREQ PC+2
00069e f410      	BRCC PC+3
00069f 940c 06ac 	JMP  _0x2000021
0006a1 940e 0ddf 	CALL SUBOPT_0x21
                 _0x2000022:
0006a3 940e 0dea 	CALL SUBOPT_0x22
0006a5 f028      	BRLO _0x2000024
0006a6 940e 0df2 	CALL SUBOPT_0x23
0006a8 940e 0df7 	CALL SUBOPT_0x24
0006aa cff8      	RJMP _0x2000022
                 _0x2000024:
0006ab c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0006ac 940e 0dea 	CALL SUBOPT_0x22
0006ae f440      	BRSH _0x2000028
0006af 940e 0df2 	CALL SUBOPT_0x23
0006b1 940e 0e00 	CALL SUBOPT_0x25
0006b3 940e 0e07 	CALL SUBOPT_0x26
0006b5 5031      	SUBI R19,LOW(1)
0006b6 cff5      	RJMP _0x2000026
                 _0x2000028:
0006b7 940e 0ddf 	CALL SUBOPT_0x21
                 _0x2000025:
                +
0006b9 85ec     +LDD R30 , Y + 12
0006ba 85fd     +LDD R31 , Y + 12 + 1
0006bb 856e     +LDD R22 , Y + 12 + 2
0006bc 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0006bd 940e 0e0c 	CALL SUBOPT_0x27
0006bf 940e 0e07 	CALL SUBOPT_0x26
0006c1 940e 0dea 	CALL SUBOPT_0x22
0006c3 f020      	BRLO _0x2000029
0006c4 940e 0df2 	CALL SUBOPT_0x23
0006c6 940e 0df7 	CALL SUBOPT_0x24
                 _0x2000029:
                 _0x2000020:
0006c8 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0006c9 85eb      	LDD  R30,Y+11
0006ca 17e1      	CP   R30,R17
0006cb f198      	BRLO _0x200002C
                +
0006cc 81ac     +LDD R26 , Y + 4
0006cd 81bd     +LDD R27 , Y + 4 + 1
0006ce 818e     +LDD R24 , Y + 4 + 2
0006cf 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006d0 940e 0e13 	CALL SUBOPT_0x28
0006d2 940e 0e0c 	CALL SUBOPT_0x27
0006d4 940e 0e17 	CALL SUBOPT_0x29
0006d6 940e 0d16 	CALL SUBOPT_0x8
0006d8 940e 0d20 	CALL SUBOPT_0xA
0006da 940e 0df2 	CALL SUBOPT_0x23
0006dc 940e 104c 	CALL __DIVF21
0006de 940e 0f3b 	CALL __CFD1U
0006e0 2f0e      	MOV  R16,R30
0006e1 940e 0e1b 	CALL SUBOPT_0x2A
0006e3 940e 0e22 	CALL SUBOPT_0x2B
0006e5 27ff      	CLR  R31
0006e6 2766      	CLR  R22
0006e7 2777      	CLR  R23
0006e8 940e 0f74 	CALL __CDF1
                +
0006ea 81ac     +LDD R26 , Y + 4
0006eb 81bd     +LDD R27 , Y + 4 + 1
0006ec 818e     +LDD R24 , Y + 4 + 2
0006ed 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006ee 940e 0ffe 	CALL __MULF12
0006f0 940e 0df2 	CALL SUBOPT_0x23
0006f2 940e 0d1b 	CALL SUBOPT_0x9
0006f4 940e 0e07 	CALL SUBOPT_0x26
0006f6 2fe1      	MOV  R30,R17
0006f7 5f1f      	SUBI R17,-1
0006f8 30e0      	CPI  R30,0
0006f9 f679      	BRNE _0x200002A
0006fa 940e 0e1b 	CALL SUBOPT_0x2A
0006fc e2ee      	LDI  R30,LOW(46)
0006fd 93ec      	ST   X,R30
0006fe cfca      	RJMP _0x200002A
                 _0x200002C:
0006ff 940e 0e27 	CALL SUBOPT_0x2C
000701 9731      	SBIW R30,1
000702 85aa      	LDD  R26,Y+10
000703 83a0      	STD  Z+0,R26
000704 3030      	CPI  R19,0
000705 f42c      	BRGE _0x200002E
000706 9531      	NEG  R19
000707 85a8      	LDD  R26,Y+8
000708 85b9      	LDD  R27,Y+8+1
000709 e2ed      	LDI  R30,LOW(45)
00070a c003      	RJMP _0x200010E
                 _0x200002E:
00070b 85a8      	LDD  R26,Y+8
00070c 85b9      	LDD  R27,Y+8+1
00070d e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
00070e 93ec      	ST   X,R30
00070f 940e 0e27 	CALL SUBOPT_0x2C
000711 940e 0e27 	CALL SUBOPT_0x2C
000713 9731      	SBIW R30,1
000714 01bf      	MOVW R22,R30
000715 2fa3      	MOV  R26,R19
000716 e0ea      	LDI  R30,LOW(10)
000717 940e 10f2 	CALL __DIVB21
000719 5de0      	SUBI R30,-LOW(48)
00071a 01db      	MOVW R26,R22
00071b 93ec      	ST   X,R30
00071c 940e 0e27 	CALL SUBOPT_0x2C
00071e 9731      	SBIW R30,1
00071f 01bf      	MOVW R22,R30
000720 2fa3      	MOV  R26,R19
000721 e0ea      	LDI  R30,LOW(10)
000722 940e 111c 	CALL __MODB21
000724 5de0      	SUBI R30,-LOW(48)
000725 01db      	MOVW R26,R22
000726 93ec      	ST   X,R30
000727 85a8      	LDD  R26,Y+8
000728 85b9      	LDD  R27,Y+8+1
000729 e0e0      	LDI  R30,LOW(0)
00072a 93ec      	ST   X,R30
                 _0x20A0009:
00072b 940e 1182 	CALL __LOADLOCR4
                 _0x20A000A:
00072d 9660      	ADIW R28,16
00072e 9508      	RET
                 __print_G100:
00072f 97ef      	SBIW R28,63
000730 9761      	SBIW R28,17
000731 940e 1179 	CALL __SAVELOCR6
000733 e010      	LDI  R17,0
                +
000734 01fe     +MOVW R30 , R28
000735 5ae8     +SUBI R30 , LOW ( - 88 )
000736 4fff     +SBCI R31 , HIGH ( - 88 )
000737 9001     +LD R0 , Z +
000738 81f0     +LD R31 , Z
000739 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00073a 87e8      	STD  Y+8,R30
00073b 87f9      	STD  Y+8+1,R31
                +
00073c 01fe     +MOVW R30 , R28
00073d 5aea     +SUBI R30 , LOW ( - 86 )
00073e 4fff     +SBCI R31 , HIGH ( - 86 )
00073f 9001     +LD R0 , Z +
000740 81f0     +LD R31 , Z
000741 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000742 83ee      	STD  Y+6,R30
000743 83ff      	STD  Y+6+1,R31
000744 81ae      	LDD  R26,Y+6
000745 81bf      	LDD  R27,Y+6+1
000746 940e 0d37 	CALL SUBOPT_0xD
                 _0x2000030:
000748 01de      	MOVW R26,R28
000749 5aa4      	SUBI R26,LOW(-(92))
00074a 4fbf      	SBCI R27,HIGH(-(92))
00074b 940e 0d58 	CALL SUBOPT_0x12
00074d 9731      	SBIW R30,1
00074e 91e4      	LPM  R30,Z
00074f 2f2e      	MOV  R18,R30
000750 30e0      	CPI  R30,0
000751 f411      	BRNE PC+3
000752 940c 0942 	JMP _0x2000032
000754 2fe1      	MOV  R30,R17
000755 30e0      	CPI  R30,0
000756 f439      	BRNE _0x2000036
000757 3225      	CPI  R18,37
000758 f411      	BRNE _0x2000037
000759 e011      	LDI  R17,LOW(1)
00075a c002      	RJMP _0x2000038
                 _0x2000037:
00075b 940e 0e2d 	CALL SUBOPT_0x2D
                 _0x2000038:
00075d c1e3      	RJMP _0x2000035
                 _0x2000036:
00075e 30e1      	CPI  R30,LOW(0x1)
00075f f4c1      	BRNE _0x2000039
000760 3225      	CPI  R18,37
000761 f419      	BRNE _0x200003A
000762 940e 0e2d 	CALL SUBOPT_0x2D
000764 c1db      	RJMP _0x200010F
                 _0x200003A:
000765 e012      	LDI  R17,LOW(2)
000766 e0e0      	LDI  R30,LOW(0)
000767 8bed      	STD  Y+21,R30
000768 e000      	LDI  R16,LOW(0)
000769 322d      	CPI  R18,45
00076a f411      	BRNE _0x200003B
00076b e001      	LDI  R16,LOW(1)
00076c c1d4      	RJMP _0x2000035
                 _0x200003B:
00076d 322b      	CPI  R18,43
00076e f419      	BRNE _0x200003C
00076f e2eb      	LDI  R30,LOW(43)
000770 8bed      	STD  Y+21,R30
000771 c1cf      	RJMP _0x2000035
                 _0x200003C:
000772 3220      	CPI  R18,32
000773 f419      	BRNE _0x200003D
000774 e2e0      	LDI  R30,LOW(32)
000775 8bed      	STD  Y+21,R30
000776 c1ca      	RJMP _0x2000035
                 _0x200003D:
000777 c002      	RJMP _0x200003E
                 _0x2000039:
000778 30e2      	CPI  R30,LOW(0x2)
000779 f439      	BRNE _0x200003F
                 _0x200003E:
00077a e050      	LDI  R21,LOW(0)
00077b e013      	LDI  R17,LOW(3)
00077c 3320      	CPI  R18,48
00077d f411      	BRNE _0x2000040
00077e 6800      	ORI  R16,LOW(128)
00077f c1c1      	RJMP _0x2000035
                 _0x2000040:
000780 c002      	RJMP _0x2000041
                 _0x200003F:
000781 30e3      	CPI  R30,LOW(0x3)
000782 f491      	BRNE _0x2000042
                 _0x2000041:
000783 3320      	CPI  R18,48
000784 f010      	BRLO _0x2000044
000785 332a      	CPI  R18,58
000786 f008      	BRLO _0x2000045
                 _0x2000044:
000787 c007      	RJMP _0x2000043
                 _0x2000045:
000788 e0aa      	LDI  R26,LOW(10)
000789 9f5a      	MUL  R21,R26
00078a 2d50      	MOV  R21,R0
00078b 2fe2      	MOV  R30,R18
00078c 53e0      	SUBI R30,LOW(48)
00078d 0f5e      	ADD  R21,R30
00078e c1b2      	RJMP _0x2000035
                 _0x2000043:
00078f e040      	LDI  R20,LOW(0)
000790 322e      	CPI  R18,46
000791 f411      	BRNE _0x2000046
000792 e014      	LDI  R17,LOW(4)
000793 c1ad      	RJMP _0x2000035
                 _0x2000046:
000794 c00f      	RJMP _0x2000047
                 _0x2000042:
000795 30e4      	CPI  R30,LOW(0x4)
000796 f499      	BRNE _0x2000049
000797 3320      	CPI  R18,48
000798 f010      	BRLO _0x200004B
000799 332a      	CPI  R18,58
00079a f008      	BRLO _0x200004C
                 _0x200004B:
00079b c008      	RJMP _0x200004A
                 _0x200004C:
00079c 6200      	ORI  R16,LOW(32)
00079d e0aa      	LDI  R26,LOW(10)
00079e 9f4a      	MUL  R20,R26
00079f 2d40      	MOV  R20,R0
0007a0 2fe2      	MOV  R30,R18
0007a1 53e0      	SUBI R30,LOW(48)
0007a2 0f4e      	ADD  R20,R30
0007a3 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0007a4 362c      	CPI  R18,108
0007a5 f419      	BRNE _0x200004D
0007a6 6002      	ORI  R16,LOW(2)
0007a7 e015      	LDI  R17,LOW(5)
0007a8 c198      	RJMP _0x2000035
                 _0x200004D:
0007a9 c004      	RJMP _0x200004E
                 _0x2000049:
0007aa 30e5      	CPI  R30,LOW(0x5)
0007ab f011      	BREQ PC+3
0007ac 940c 0941 	JMP _0x2000035
                 _0x200004E:
0007ae 2fe2      	MOV  R30,R18
0007af 36e3      	CPI  R30,LOW(0x63)
0007b0 f459      	BRNE _0x2000053
0007b1 940e 0e36 	CALL SUBOPT_0x2E
0007b3 940e 0e3d 	CALL SUBOPT_0x2F
0007b5 940e 0e36 	CALL SUBOPT_0x2E
0007b7 81a4      	LDD  R26,Z+4
0007b8 93aa      	ST   -Y,R26
0007b9 940e 0e44 	CALL SUBOPT_0x30
0007bb c184      	RJMP _0x2000054
                 _0x2000053:
0007bc 34e5      	CPI  R30,LOW(0x45)
0007bd f011      	BREQ _0x2000057
0007be 36e5      	CPI  R30,LOW(0x65)
0007bf f409      	BRNE _0x2000058
                 _0x2000057:
0007c0 c004      	RJMP _0x2000059
                 _0x2000058:
0007c1 36e6      	CPI  R30,LOW(0x66)
0007c2 f011      	BREQ PC+3
0007c3 940c 080f 	JMP _0x200005A
                 _0x2000059:
0007c5 01fe      	MOVW R30,R28
0007c6 9676      	ADIW R30,22
0007c7 87ee      	STD  Y+14,R30
0007c8 87ff      	STD  Y+14+1,R31
0007c9 940e 0e4c 	CALL SUBOPT_0x31
0007cb 940e 113c 	CALL __GETD1P
0007cd 940e 0e53 	CALL SUBOPT_0x32
0007cf 940e 0e58 	CALL SUBOPT_0x33
0007d1 85ad      	LDD  R26,Y+13
0007d2 23aa      	TST  R26
0007d3 f022      	BRMI _0x200005B
0007d4 89ad      	LDD  R26,Y+21
0007d5 32ab      	CPI  R26,LOW(0x2B)
0007d6 f049      	BREQ _0x200005D
0007d7 c017      	RJMP _0x200005E
                 _0x200005B:
0007d8 940e 0e5a 	CALL SUBOPT_0x34
0007da 940e 0f08 	CALL __ANEGF1
0007dc 940e 0e53 	CALL SUBOPT_0x32
0007de e2ed      	LDI  R30,LOW(45)
0007df 8bed      	STD  Y+21,R30
                 _0x200005D:
0007e0 ff07      	SBRS R16,7
0007e1 c005      	RJMP _0x200005F
0007e2 89ed      	LDD  R30,Y+21
0007e3 93ea      	ST   -Y,R30
0007e4 940e 0e44 	CALL SUBOPT_0x30
0007e6 c008      	RJMP _0x2000060
                 _0x200005F:
0007e7 85ee      	LDD  R30,Y+14
0007e8 85ff      	LDD  R31,Y+14+1
0007e9 9631      	ADIW R30,1
0007ea 87ee      	STD  Y+14,R30
0007eb 87ff      	STD  Y+14+1,R31
0007ec 9731      	SBIW R30,1
0007ed 89ad      	LDD  R26,Y+21
0007ee 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0007ef ff05      	SBRS R16,5
0007f0 e046      	LDI  R20,LOW(6)
0007f1 3626      	CPI  R18,102
0007f2 f461      	BRNE _0x2000062
0007f3 940e 0e5a 	CALL SUBOPT_0x34
0007f5 940e 1158 	CALL __PUTPARD1
0007f7 934a      	ST   -Y,R20
0007f8 89eb      	LDD  R30,Y+19
0007f9 89fc      	LDD  R31,Y+19+1
0007fa 93fa      	ST   -Y,R31
0007fb 93ea      	ST   -Y,R30
0007fc 940e 0c22 	CALL _ftoa
0007fe c00b      	RJMP _0x2000063
                 _0x2000062:
0007ff 940e 0e5a 	CALL SUBOPT_0x34
000801 940e 1158 	CALL __PUTPARD1
000803 934a      	ST   -Y,R20
000804 932a      	ST   -Y,R18
000805 89ec      	LDD  R30,Y+20
000806 89fd      	LDD  R31,Y+20+1
000807 93fa      	ST   -Y,R31
000808 93ea      	ST   -Y,R30
000809 de53      	RCALL __ftoe_G100
                 _0x2000063:
00080a 01fe      	MOVW R30,R28
00080b 9676      	ADIW R30,22
00080c 940e 0e5f 	CALL SUBOPT_0x35
00080e c01e      	RJMP _0x2000064
                 _0x200005A:
00080f 37e3      	CPI  R30,LOW(0x73)
000810 f439      	BRNE _0x2000066
000811 940e 0e58 	CALL SUBOPT_0x33
000813 940e 0e67 	CALL SUBOPT_0x36
000815 940e 0e5f 	CALL SUBOPT_0x35
000817 c00e      	RJMP _0x2000067
                 _0x2000066:
000818 37e0      	CPI  R30,LOW(0x70)
000819 f4c1      	BRNE _0x2000069
00081a 940e 0e58 	CALL SUBOPT_0x33
00081c 940e 0e67 	CALL SUBOPT_0x36
00081e 87ee      	STD  Y+14,R30
00081f 87ff      	STD  Y+14+1,R31
000820 93fa      	ST   -Y,R31
000821 93ea      	ST   -Y,R30
000822 940e 0c17 	CALL _strlenf
000824 2f1e      	MOV  R17,R30
000825 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000826 770f      	ANDI R16,LOW(127)
000827 3040      	CPI  R20,0
000828 f011      	BREQ _0x200006B
000829 1741      	CP   R20,R17
00082a f008      	BRLO _0x200006C
                 _0x200006B:
00082b c001      	RJMP _0x200006A
                 _0x200006C:
00082c 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
00082d e040      	LDI  R20,LOW(0)
00082e e0e0      	LDI  R30,LOW(0)
00082f 8bec      	STD  Y+20,R30
000830 e030      	LDI  R19,LOW(0)
000831 c06e      	RJMP _0x200006D
                 _0x2000069:
000832 36e4      	CPI  R30,LOW(0x64)
000833 f011      	BREQ _0x2000070
000834 36e9      	CPI  R30,LOW(0x69)
000835 f411      	BRNE _0x2000071
                 _0x2000070:
000836 6004      	ORI  R16,LOW(4)
000837 c002      	RJMP _0x2000072
                 _0x2000071:
000838 37e5      	CPI  R30,LOW(0x75)
000839 f4a1      	BRNE _0x2000073
                 _0x2000072:
00083a e0ea      	LDI  R30,LOW(10)
00083b 8bec      	STD  Y+20,R30
00083c ff01      	SBRS R16,1
00083d c008      	RJMP _0x2000074
                +
00083e e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00083f ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000840 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000841 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000842 940e 0e6c 	CALL SUBOPT_0x37
000844 e01a      	LDI  R17,LOW(10)
000845 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000846 e1e0     +LDI R30 , LOW ( 0x2710 )
000847 e2f7     +LDI R31 , HIGH ( 0x2710 )
000848 e060     +LDI R22 , BYTE3 ( 0x2710 )
000849 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00084a 940e 0e6c 	CALL SUBOPT_0x37
00084c e015      	LDI  R17,LOW(5)
00084d c01b      	RJMP _0x2000075
                 _0x2000073:
00084e 35e8      	CPI  R30,LOW(0x58)
00084f f411      	BRNE _0x2000077
000850 6008      	ORI  R16,LOW(8)
000851 c004      	RJMP _0x2000078
                 _0x2000077:
000852 37e8      	CPI  R30,LOW(0x78)
000853 f011      	BREQ PC+3
000854 940c 0940 	JMP _0x20000B6
                 _0x2000078:
000856 e1e0      	LDI  R30,LOW(16)
000857 8bec      	STD  Y+20,R30
000858 ff01      	SBRS R16,1
000859 c008      	RJMP _0x200007A
                +
00085a e0e0     +LDI R30 , LOW ( 0x10000000 )
00085b e0f0     +LDI R31 , HIGH ( 0x10000000 )
00085c e060     +LDI R22 , BYTE3 ( 0x10000000 )
00085d e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00085e 940e 0e6c 	CALL SUBOPT_0x37
000860 e018      	LDI  R17,LOW(8)
000861 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000862 e0e0     +LDI R30 , LOW ( 0x1000 )
000863 e1f0     +LDI R31 , HIGH ( 0x1000 )
000864 e060     +LDI R22 , BYTE3 ( 0x1000 )
000865 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000866 940e 0e6c 	CALL SUBOPT_0x37
000868 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000869 3040      	CPI  R20,0
00086a f011      	BREQ _0x200007B
00086b 770f      	ANDI R16,LOW(127)
00086c c001      	RJMP _0x200007C
                 _0x200007B:
00086d e041      	LDI  R20,LOW(1)
                 _0x200007C:
00086e ff01      	SBRS R16,1
00086f c008      	RJMP _0x200007D
000870 940e 0e58 	CALL SUBOPT_0x33
000872 940e 0e4c 	CALL SUBOPT_0x31
000874 9614      	ADIW R26,4
000875 940e 113c 	CALL __GETD1P
000877 c00f      	RJMP _0x2000110
                 _0x200007D:
000878 ff02      	SBRS R16,2
000879 c007      	RJMP _0x200007F
00087a 940e 0e58 	CALL SUBOPT_0x33
00087c 940e 0e67 	CALL SUBOPT_0x36
00087e 940e 10cc 	CALL __CWD1
000880 c006      	RJMP _0x2000110
                 _0x200007F:
000881 940e 0e58 	CALL SUBOPT_0x33
000883 940e 0e67 	CALL SUBOPT_0x36
000885 2766      	CLR  R22
000886 2777      	CLR  R23
                 _0x2000110:
                +
000887 87ea     +STD Y + 10 , R30
000888 87fb     +STD Y + 10 + 1 , R31
000889 876c     +STD Y + 10 + 2 , R22
00088a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00088b ff02      	SBRS R16,2
00088c c012      	RJMP _0x2000081
00088d 85ad      	LDD  R26,Y+13
00088e 23aa      	TST  R26
00088f f442      	BRPL _0x2000082
000890 940e 0e5a 	CALL SUBOPT_0x34
000892 940e 10b9 	CALL __ANEGD1
000894 940e 0e53 	CALL SUBOPT_0x32
000896 e2ed      	LDI  R30,LOW(45)
000897 8bed      	STD  Y+21,R30
                 _0x2000082:
000898 89ed      	LDD  R30,Y+21
000899 30e0      	CPI  R30,0
00089a f019      	BREQ _0x2000083
00089b 5f1f      	SUBI R17,-LOW(1)
00089c 5f4f      	SUBI R20,-LOW(1)
00089d c001      	RJMP _0x2000084
                 _0x2000083:
00089e 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
00089f 2f34      	MOV  R19,R20
                 _0x200006D:
0008a0 fd00      	SBRC R16,0
0008a1 c014      	RJMP _0x2000085
                 _0x2000086:
0008a2 1715      	CP   R17,R21
0008a3 f410      	BRSH _0x2000089
0008a4 1735      	CP   R19,R21
0008a5 f008      	BRLO _0x200008A
                 _0x2000089:
0008a6 c00f      	RJMP _0x2000088
                 _0x200008A:
0008a7 ff07      	SBRS R16,7
0008a8 c008      	RJMP _0x200008B
0008a9 ff02      	SBRS R16,2
0008aa c004      	RJMP _0x200008C
0008ab 7f0b      	ANDI R16,LOW(251)
0008ac 892d      	LDD  R18,Y+21
0008ad 5011      	SUBI R17,LOW(1)
0008ae c001      	RJMP _0x200008D
                 _0x200008C:
0008af e320      	LDI  R18,LOW(48)
                 _0x200008D:
0008b0 c001      	RJMP _0x200008E
                 _0x200008B:
0008b1 e220      	LDI  R18,LOW(32)
                 _0x200008E:
0008b2 940e 0e2d 	CALL SUBOPT_0x2D
0008b4 5051      	SUBI R21,LOW(1)
0008b5 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0008b6 1714      	CP   R17,R20
0008b7 f490      	BRSH _0x2000091
0008b8 6100      	ORI  R16,LOW(16)
0008b9 ff02      	SBRS R16,2
0008ba c006      	RJMP _0x2000092
0008bb 940e 0e71 	CALL SUBOPT_0x38
0008bd f009      	BREQ _0x2000093
0008be 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0008bf 5011      	SUBI R17,LOW(1)
0008c0 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0008c1 e3e0      	LDI  R30,LOW(48)
0008c2 93ea      	ST   -Y,R30
0008c3 940e 0e44 	CALL SUBOPT_0x30
0008c5 3050      	CPI  R21,0
0008c6 f009      	BREQ _0x2000094
0008c7 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0008c8 5041      	SUBI R20,LOW(1)
0008c9 cfec      	RJMP _0x200008F
                 _0x2000091:
0008ca 2f31      	MOV  R19,R17
0008cb 89ec      	LDD  R30,Y+20
0008cc 30e0      	CPI  R30,0
0008cd f4b9      	BRNE _0x2000095
                 _0x2000096:
0008ce 3030      	CPI  R19,0
0008cf f0a1      	BREQ _0x2000098
0008d0 ff03      	SBRS R16,3
0008d1 c006      	RJMP _0x2000099
0008d2 85ee      	LDD  R30,Y+14
0008d3 85ff      	LDD  R31,Y+14+1
0008d4 9125      	LPM  R18,Z+
0008d5 87ee      	STD  Y+14,R30
0008d6 87ff      	STD  Y+14+1,R31
0008d7 c005      	RJMP _0x200009A
                 _0x2000099:
0008d8 85ae      	LDD  R26,Y+14
0008d9 85bf      	LDD  R27,Y+14+1
0008da 912d      	LD   R18,X+
0008db 87ae      	STD  Y+14,R26
0008dc 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0008dd 940e 0e2d 	CALL SUBOPT_0x2D
0008df 3050      	CPI  R21,0
0008e0 f009      	BREQ _0x200009B
0008e1 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0008e2 5031      	SUBI R19,LOW(1)
0008e3 cfea      	RJMP _0x2000096
                 _0x2000098:
0008e4 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0008e5 940e 0e85 	CALL SUBOPT_0x39
0008e7 940e 10f7 	CALL __DIVD21U
0008e9 2f2e      	MOV  R18,R30
0008ea 302a      	CPI  R18,10
0008eb f030      	BRLO _0x20000A0
0008ec ff03      	SBRS R16,3
0008ed c002      	RJMP _0x20000A1
0008ee 5c29      	SUBI R18,-LOW(55)
0008ef c001      	RJMP _0x20000A2
                 _0x20000A1:
0008f0 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0008f1 c001      	RJMP _0x20000A3
                 _0x20000A0:
0008f2 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0008f3 fd04      	SBRC R16,4
0008f4 c021      	RJMP _0x20000A5
0008f5 3321      	CPI  R18,49
0008f6 f460      	BRSH _0x20000A7
                +
0008f7 89a8     +LDD R26 , Y + 16
0008f8 89b9     +LDD R27 , Y + 16 + 1
0008f9 898a     +LDD R24 , Y + 16 + 2
0008fa 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0008fb 30a1     +CPI R26 , LOW ( 0x1 )
0008fc e0e0     +LDI R30 , HIGH ( 0x1 )
0008fd 07be     +CPC R27 , R30
0008fe e0e0     +LDI R30 , BYTE3 ( 0x1 )
0008ff 078e     +CPC R24 , R30
000900 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000901 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000902 f409      	BRNE _0x20000A6
                 _0x20000A7:
000903 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000904 1743      	CP   R20,R19
000905 f440      	BRSH _0x2000111
000906 1753      	CP   R21,R19
000907 f010      	BRLO _0x20000AC
000908 ff00      	SBRS R16,0
000909 c001      	RJMP _0x20000AD
                 _0x20000AC:
00090a c010      	RJMP _0x20000AB
                 _0x20000AD:
00090b e220      	LDI  R18,LOW(32)
00090c ff07      	SBRS R16,7
00090d c008      	RJMP _0x20000AE
                 _0x2000111:
00090e e320      	LDI  R18,LOW(48)
                 _0x20000A9:
00090f 6100      	ORI  R16,LOW(16)
000910 ff02      	SBRS R16,2
000911 c004      	RJMP _0x20000AF
000912 940e 0e71 	CALL SUBOPT_0x38
000914 f009      	BREQ _0x20000B0
000915 5051      	SUBI R21,LOW(1)
=======
000603 931a      	ST   -Y,R17
000604 930a      	ST   -Y,R16
000605 81aa      	LDD  R26,Y+2
000606 81bb      	LDD  R27,Y+2+1
000607 9612      	ADIW R26,2
000608 940e 111f 	CALL __GETW1P
00060a 9730      	SBIW R30,0
00060b f129      	BREQ _0x2000010
00060c 81aa      	LDD  R26,Y+2
00060d 81bb      	LDD  R27,Y+2+1
00060e 9614      	ADIW R26,4
00060f 940e 111f 	CALL __GETW1P
000611 018f      	MOVW R16,R30
000612 9730      	SBIW R30,0
000613 f061      	BREQ _0x2000012
                +
000614 3002     +CPI R16 , LOW ( 2 )
000615 e0e0     +LDI R30 , HIGH ( 2 )
000616 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000617 f0c0      	BRLO _0x2000013
000618 01f8      	MOVW R30,R16
000619 9731      	SBIW R30,1
00061a 018f      	MOVW R16,R30
                +
00061b 81aa     +LDD R26 , Y + 2
00061c 81bb     +LDD R27 , Y + 2 + 1
00061d 9614     +ADIW R26 , 4
00061e 93ed     +ST X + , R30
00061f 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000620 81aa      	LDD  R26,Y+2
000621 81bb      	LDD  R27,Y+2+1
000622 9612      	ADIW R26,2
000623 940e 0dbc 	CALL SUBOPT_0x20
000625 9731      	SBIW R30,1
000626 81ac      	LDD  R26,Y+4
000627 83a0      	STD  Z+0,R26
000628 81aa      	LDD  R26,Y+2
000629 81bb      	LDD  R27,Y+2+1
00062a 940e 111f 	CALL __GETW1P
00062c 23ff      	TST  R31
00062d f012      	BRMI _0x2000014
00062e 940e 0dbc 	CALL SUBOPT_0x20
                 _0x2000014:
                 _0x2000013:
000630 c006      	RJMP _0x2000015
                 _0x2000010:
000631 81aa      	LDD  R26,Y+2
000632 81bb      	LDD  R27,Y+2+1
000633 efef      	LDI  R30,LOW(65535)
000634 efff      	LDI  R31,HIGH(65535)
000635 93ed      	ST   X+,R30
000636 93fc      	ST   X,R31
                 _0x2000015:
000637 8119      	LDD  R17,Y+1
000638 8108      	LDD  R16,Y+0
000639 c348      	RJMP _0x20A0007
                 __ftoe_G100:
00063a 9724      	SBIW R28,4
00063b 940e 0cd5 	CALL SUBOPT_0x4
00063d e8e0      	LDI  R30,LOW(128)
00063e 83ea      	STD  Y+2,R30
00063f e3ef      	LDI  R30,LOW(63)
000640 83eb      	STD  Y+3,R30
000641 940e 1162 	CALL __SAVELOCR4
000643 85ee      	LDD  R30,Y+14
000644 85ff      	LDD  R31,Y+14+1
000645 3fef      	CPI  R30,LOW(0xFFFF)
000646 efaf      	LDI  R26,HIGH(0xFFFF)
000647 07fa      	CPC  R31,R26
000648 f449      	BRNE _0x2000019
000649 85e8      	LDD  R30,Y+8
00064a 85f9      	LDD  R31,Y+8+1
00064b 93fa      	ST   -Y,R31
00064c 93ea      	ST   -Y,R30
                +
00064d eeec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00064e e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00064f 940e 0dc2 	CALL SUBOPT_0x21
000651 c0b6      	RJMP _0x20A0009
                 _0x2000019:
000652 3fef      	CPI  R30,LOW(0x7FFF)
000653 e7af      	LDI  R26,HIGH(0x7FFF)
000654 07fa      	CPC  R31,R26
000655 f449      	BRNE _0x2000018
000656 85e8      	LDD  R30,Y+8
000657 85f9      	LDD  R31,Y+8+1
000658 93fa      	ST   -Y,R31
000659 93ea      	ST   -Y,R30
                +
00065a eeed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00065b e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00065c 940e 0dc2 	CALL SUBOPT_0x21
00065e c0a9      	RJMP _0x20A0009
                 _0x2000018:
00065f 85ab      	LDD  R26,Y+11
000660 30a7      	CPI  R26,LOW(0x7)
000661 f010      	BRLO _0x200001B
000662 e0e6      	LDI  R30,LOW(6)
000663 87eb      	STD  Y+11,R30
                 _0x200001B:
000664 851b      	LDD  R17,Y+11
                 _0x200001C:
000665 2fe1      	MOV  R30,R17
000666 5011      	SUBI R17,1
000667 30e0      	CPI  R30,0
000668 f019      	BREQ _0x200001E
000669 940e 0dc6 	CALL SUBOPT_0x22
00066b cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00066c 85ec     +LDD R30 , Y + 12
00066d 85fd     +LDD R31 , Y + 12 + 1
00066e 856e     +LDD R22 , Y + 12 + 2
00066f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000670 940e 1156 	CALL __CPD10
000672 f421      	BRNE _0x200001F
000673 e030      	LDI  R19,LOW(0)
000674 940e 0dc6 	CALL SUBOPT_0x22
000676 c02e      	RJMP _0x2000020
                 _0x200001F:
000677 853b      	LDD  R19,Y+11
000678 940e 0dd1 	CALL SUBOPT_0x23
00067a f009      	BREQ PC+2
00067b f410      	BRCC PC+3
00067c 940c 0689 	JMP  _0x2000021
00067e 940e 0dc6 	CALL SUBOPT_0x22
                 _0x2000022:
000680 940e 0dd1 	CALL SUBOPT_0x23
000682 f028      	BRLO _0x2000024
000683 940e 0dd9 	CALL SUBOPT_0x24
000685 940e 0dde 	CALL SUBOPT_0x25
000687 cff8      	RJMP _0x2000022
                 _0x2000024:
000688 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000689 940e 0dd1 	CALL SUBOPT_0x23
00068b f440      	BRSH _0x2000028
00068c 940e 0dd9 	CALL SUBOPT_0x24
00068e 940e 0dea 	CALL SUBOPT_0x26
000690 940e 0df1 	CALL SUBOPT_0x27
000692 5031      	SUBI R19,LOW(1)
000693 cff5      	RJMP _0x2000026
                 _0x2000028:
000694 940e 0dc6 	CALL SUBOPT_0x22
                 _0x2000025:
                +
000696 85ec     +LDD R30 , Y + 12
000697 85fd     +LDD R31 , Y + 12 + 1
000698 856e     +LDD R22 , Y + 12 + 2
000699 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00069a 940e 0df6 	CALL SUBOPT_0x28
00069c 940e 0df1 	CALL SUBOPT_0x27
00069e 940e 0dd1 	CALL SUBOPT_0x23
0006a0 f020      	BRLO _0x2000029
0006a1 940e 0dd9 	CALL SUBOPT_0x24
0006a3 940e 0dde 	CALL SUBOPT_0x25
                 _0x2000029:
                 _0x2000020:
0006a5 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0006a6 85eb      	LDD  R30,Y+11
0006a7 17e1      	CP   R30,R17
0006a8 f198      	BRLO _0x200002C
                +
0006a9 81ac     +LDD R26 , Y + 4
0006aa 81bd     +LDD R27 , Y + 4 + 1
0006ab 818e     +LDD R24 , Y + 4 + 2
0006ac 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006ad 940e 0dfd 	CALL SUBOPT_0x29
0006af 940e 0df6 	CALL SUBOPT_0x28
0006b1 940e 0e04 	CALL SUBOPT_0x2A
0006b3 940e 0cf2 	CALL SUBOPT_0x8
0006b5 940e 0cfc 	CALL SUBOPT_0xA
0006b7 940e 0dd9 	CALL SUBOPT_0x24
0006b9 940e 1039 	CALL __DIVF21
0006bb 940e 0f28 	CALL __CFD1U
0006bd 2f0e      	MOV  R16,R30
0006be 940e 0e08 	CALL SUBOPT_0x2B
0006c0 940e 0e0f 	CALL SUBOPT_0x2C
0006c2 27ff      	CLR  R31
0006c3 2766      	CLR  R22
0006c4 2777      	CLR  R23
0006c5 940e 0f61 	CALL __CDF1
                +
0006c7 81ac     +LDD R26 , Y + 4
0006c8 81bd     +LDD R27 , Y + 4 + 1
0006c9 818e     +LDD R24 , Y + 4 + 2
0006ca 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006cb 940e 0feb 	CALL __MULF12
0006cd 940e 0dd9 	CALL SUBOPT_0x24
0006cf 940e 0cf7 	CALL SUBOPT_0x9
0006d1 940e 0df1 	CALL SUBOPT_0x27
0006d3 2fe1      	MOV  R30,R17
0006d4 5f1f      	SUBI R17,-1
0006d5 30e0      	CPI  R30,0
0006d6 f679      	BRNE _0x200002A
0006d7 940e 0e08 	CALL SUBOPT_0x2B
0006d9 e2ee      	LDI  R30,LOW(46)
0006da 93ec      	ST   X,R30
0006db cfca      	RJMP _0x200002A
                 _0x200002C:
0006dc 940e 0e14 	CALL SUBOPT_0x2D
0006de 9731      	SBIW R30,1
0006df 85aa      	LDD  R26,Y+10
0006e0 83a0      	STD  Z+0,R26
0006e1 3030      	CPI  R19,0
0006e2 f42c      	BRGE _0x200002E
0006e3 9531      	NEG  R19
0006e4 85a8      	LDD  R26,Y+8
0006e5 85b9      	LDD  R27,Y+8+1
0006e6 e2ed      	LDI  R30,LOW(45)
0006e7 c003      	RJMP _0x200010E
                 _0x200002E:
0006e8 85a8      	LDD  R26,Y+8
0006e9 85b9      	LDD  R27,Y+8+1
0006ea e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
0006eb 93ec      	ST   X,R30
0006ec 940e 0e14 	CALL SUBOPT_0x2D
0006ee 940e 0e14 	CALL SUBOPT_0x2D
0006f0 9731      	SBIW R30,1
0006f1 01bf      	MOVW R22,R30
0006f2 2fa3      	MOV  R26,R19
0006f3 e0ea      	LDI  R30,LOW(10)
0006f4 940e 10d9 	CALL __DIVB21
0006f6 5de0      	SUBI R30,-LOW(48)
0006f7 01db      	MOVW R26,R22
0006f8 93ec      	ST   X,R30
0006f9 940e 0e14 	CALL SUBOPT_0x2D
0006fb 9731      	SBIW R30,1
0006fc 01bf      	MOVW R22,R30
0006fd 2fa3      	MOV  R26,R19
0006fe e0ea      	LDI  R30,LOW(10)
0006ff 940e 1103 	CALL __MODB21
000701 5de0      	SUBI R30,-LOW(48)
000702 01db      	MOVW R26,R22
000703 93ec      	ST   X,R30
000704 85a8      	LDD  R26,Y+8
000705 85b9      	LDD  R27,Y+8+1
000706 e0e0      	LDI  R30,LOW(0)
000707 93ec      	ST   X,R30
                 _0x20A0009:
000708 940e 1169 	CALL __LOADLOCR4
                 _0x20A000A:
00070a 9660      	ADIW R28,16
00070b 9508      	RET
                 __print_G100:
00070c 97ef      	SBIW R28,63
00070d 9761      	SBIW R28,17
00070e 940e 1160 	CALL __SAVELOCR6
000710 e010      	LDI  R17,0
                +
000711 01fe     +MOVW R30 , R28
000712 5ae8     +SUBI R30 , LOW ( - 88 )
000713 4fff     +SBCI R31 , HIGH ( - 88 )
000714 9001     +LD R0 , Z +
000715 81f0     +LD R31 , Z
000716 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000717 87e8      	STD  Y+8,R30
000718 87f9      	STD  Y+8+1,R31
                +
000719 01fe     +MOVW R30 , R28
00071a 5aea     +SUBI R30 , LOW ( - 86 )
00071b 4fff     +SBCI R31 , HIGH ( - 86 )
00071c 9001     +LD R0 , Z +
00071d 81f0     +LD R31 , Z
00071e 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00071f 83ee      	STD  Y+6,R30
000720 83ff      	STD  Y+6+1,R31
000721 81ae      	LDD  R26,Y+6
000722 81bf      	LDD  R27,Y+6+1
000723 940e 0d13 	CALL SUBOPT_0xD
                 _0x2000030:
000725 01de      	MOVW R26,R28
000726 5aa4      	SUBI R26,LOW(-(92))
000727 4fbf      	SBCI R27,HIGH(-(92))
000728 940e 0dbc 	CALL SUBOPT_0x20
00072a 9731      	SBIW R30,1
00072b 91e4      	LPM  R30,Z
00072c 2f2e      	MOV  R18,R30
00072d 30e0      	CPI  R30,0
00072e f411      	BRNE PC+3
00072f 940c 091f 	JMP _0x2000032
000731 2fe1      	MOV  R30,R17
000732 30e0      	CPI  R30,0
000733 f439      	BRNE _0x2000036
000734 3225      	CPI  R18,37
000735 f411      	BRNE _0x2000037
000736 e011      	LDI  R17,LOW(1)
000737 c002      	RJMP _0x2000038
                 _0x2000037:
000738 940e 0e1a 	CALL SUBOPT_0x2E
                 _0x2000038:
00073a c1e3      	RJMP _0x2000035
                 _0x2000036:
00073b 30e1      	CPI  R30,LOW(0x1)
00073c f4c1      	BRNE _0x2000039
00073d 3225      	CPI  R18,37
00073e f419      	BRNE _0x200003A
00073f 940e 0e1a 	CALL SUBOPT_0x2E
000741 c1db      	RJMP _0x200010F
                 _0x200003A:
000742 e012      	LDI  R17,LOW(2)
000743 e0e0      	LDI  R30,LOW(0)
000744 8bed      	STD  Y+21,R30
000745 e000      	LDI  R16,LOW(0)
000746 322d      	CPI  R18,45
000747 f411      	BRNE _0x200003B
000748 e001      	LDI  R16,LOW(1)
000749 c1d4      	RJMP _0x2000035
                 _0x200003B:
00074a 322b      	CPI  R18,43
00074b f419      	BRNE _0x200003C
00074c e2eb      	LDI  R30,LOW(43)
00074d 8bed      	STD  Y+21,R30
00074e c1cf      	RJMP _0x2000035
                 _0x200003C:
00074f 3220      	CPI  R18,32
000750 f419      	BRNE _0x200003D
000751 e2e0      	LDI  R30,LOW(32)
000752 8bed      	STD  Y+21,R30
000753 c1ca      	RJMP _0x2000035
                 _0x200003D:
000754 c002      	RJMP _0x200003E
                 _0x2000039:
000755 30e2      	CPI  R30,LOW(0x2)
000756 f439      	BRNE _0x200003F
                 _0x200003E:
000757 e050      	LDI  R21,LOW(0)
000758 e013      	LDI  R17,LOW(3)
000759 3320      	CPI  R18,48
00075a f411      	BRNE _0x2000040
00075b 6800      	ORI  R16,LOW(128)
00075c c1c1      	RJMP _0x2000035
                 _0x2000040:
00075d c002      	RJMP _0x2000041
                 _0x200003F:
00075e 30e3      	CPI  R30,LOW(0x3)
00075f f491      	BRNE _0x2000042
                 _0x2000041:
000760 3320      	CPI  R18,48
000761 f010      	BRLO _0x2000044
000762 332a      	CPI  R18,58
000763 f008      	BRLO _0x2000045
                 _0x2000044:
000764 c007      	RJMP _0x2000043
                 _0x2000045:
000765 e0aa      	LDI  R26,LOW(10)
000766 9f5a      	MUL  R21,R26
000767 2d50      	MOV  R21,R0
000768 2fe2      	MOV  R30,R18
000769 53e0      	SUBI R30,LOW(48)
00076a 0f5e      	ADD  R21,R30
00076b c1b2      	RJMP _0x2000035
                 _0x2000043:
00076c e040      	LDI  R20,LOW(0)
00076d 322e      	CPI  R18,46
00076e f411      	BRNE _0x2000046
00076f e014      	LDI  R17,LOW(4)
000770 c1ad      	RJMP _0x2000035
                 _0x2000046:
000771 c00f      	RJMP _0x2000047
                 _0x2000042:
000772 30e4      	CPI  R30,LOW(0x4)
000773 f499      	BRNE _0x2000049
000774 3320      	CPI  R18,48
000775 f010      	BRLO _0x200004B
000776 332a      	CPI  R18,58
000777 f008      	BRLO _0x200004C
                 _0x200004B:
000778 c008      	RJMP _0x200004A
                 _0x200004C:
000779 6200      	ORI  R16,LOW(32)
00077a e0aa      	LDI  R26,LOW(10)
00077b 9f4a      	MUL  R20,R26
00077c 2d40      	MOV  R20,R0
00077d 2fe2      	MOV  R30,R18
00077e 53e0      	SUBI R30,LOW(48)
00077f 0f4e      	ADD  R20,R30
000780 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000781 362c      	CPI  R18,108
000782 f419      	BRNE _0x200004D
000783 6002      	ORI  R16,LOW(2)
000784 e015      	LDI  R17,LOW(5)
000785 c198      	RJMP _0x2000035
                 _0x200004D:
000786 c004      	RJMP _0x200004E
                 _0x2000049:
000787 30e5      	CPI  R30,LOW(0x5)
000788 f011      	BREQ PC+3
000789 940c 091e 	JMP _0x2000035
                 _0x200004E:
00078b 2fe2      	MOV  R30,R18
00078c 36e3      	CPI  R30,LOW(0x63)
00078d f459      	BRNE _0x2000053
00078e 940e 0e23 	CALL SUBOPT_0x2F
000790 940e 0e2a 	CALL SUBOPT_0x30
000792 940e 0e23 	CALL SUBOPT_0x2F
000794 81a4      	LDD  R26,Z+4
000795 93aa      	ST   -Y,R26
000796 940e 0e31 	CALL SUBOPT_0x31
000798 c184      	RJMP _0x2000054
                 _0x2000053:
000799 34e5      	CPI  R30,LOW(0x45)
00079a f011      	BREQ _0x2000057
00079b 36e5      	CPI  R30,LOW(0x65)
00079c f409      	BRNE _0x2000058
                 _0x2000057:
00079d c004      	RJMP _0x2000059
                 _0x2000058:
00079e 36e6      	CPI  R30,LOW(0x66)
00079f f011      	BREQ PC+3
0007a0 940c 07ec 	JMP _0x200005A
                 _0x2000059:
0007a2 01fe      	MOVW R30,R28
0007a3 9676      	ADIW R30,22
0007a4 87ee      	STD  Y+14,R30
0007a5 87ff      	STD  Y+14+1,R31
0007a6 940e 0e39 	CALL SUBOPT_0x32
0007a8 940e 1123 	CALL __GETD1P
0007aa 940e 0e40 	CALL SUBOPT_0x33
0007ac 940e 0e45 	CALL SUBOPT_0x34
0007ae 85ad      	LDD  R26,Y+13
0007af 23aa      	TST  R26
0007b0 f022      	BRMI _0x200005B
0007b1 89ad      	LDD  R26,Y+21
0007b2 32ab      	CPI  R26,LOW(0x2B)
0007b3 f049      	BREQ _0x200005D
0007b4 c017      	RJMP _0x200005E
                 _0x200005B:
0007b5 940e 0e47 	CALL SUBOPT_0x35
0007b7 940e 0ef5 	CALL __ANEGF1
0007b9 940e 0e40 	CALL SUBOPT_0x33
0007bb e2ed      	LDI  R30,LOW(45)
0007bc 8bed      	STD  Y+21,R30
                 _0x200005D:
0007bd ff07      	SBRS R16,7
0007be c005      	RJMP _0x200005F
0007bf 89ed      	LDD  R30,Y+21
0007c0 93ea      	ST   -Y,R30
0007c1 940e 0e31 	CALL SUBOPT_0x31
0007c3 c008      	RJMP _0x2000060
                 _0x200005F:
0007c4 85ee      	LDD  R30,Y+14
0007c5 85ff      	LDD  R31,Y+14+1
0007c6 9631      	ADIW R30,1
0007c7 87ee      	STD  Y+14,R30
0007c8 87ff      	STD  Y+14+1,R31
0007c9 9731      	SBIW R30,1
0007ca 89ad      	LDD  R26,Y+21
0007cb 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0007cc ff05      	SBRS R16,5
0007cd e046      	LDI  R20,LOW(6)
0007ce 3626      	CPI  R18,102
0007cf f461      	BRNE _0x2000062
0007d0 940e 0e47 	CALL SUBOPT_0x35
0007d2 940e 113f 	CALL __PUTPARD1
0007d4 934a      	ST   -Y,R20
0007d5 89eb      	LDD  R30,Y+19
0007d6 89fc      	LDD  R31,Y+19+1
0007d7 93fa      	ST   -Y,R31
0007d8 93ea      	ST   -Y,R30
0007d9 940e 0bff 	CALL _ftoa
0007db c00b      	RJMP _0x2000063
                 _0x2000062:
0007dc 940e 0e47 	CALL SUBOPT_0x35
0007de 940e 113f 	CALL __PUTPARD1
0007e0 934a      	ST   -Y,R20
0007e1 932a      	ST   -Y,R18
0007e2 89ec      	LDD  R30,Y+20
0007e3 89fd      	LDD  R31,Y+20+1
0007e4 93fa      	ST   -Y,R31
0007e5 93ea      	ST   -Y,R30
0007e6 de53      	RCALL __ftoe_G100
                 _0x2000063:
0007e7 01fe      	MOVW R30,R28
0007e8 9676      	ADIW R30,22
0007e9 940e 0e4c 	CALL SUBOPT_0x36
0007eb c01e      	RJMP _0x2000064
                 _0x200005A:
0007ec 37e3      	CPI  R30,LOW(0x73)
0007ed f439      	BRNE _0x2000066
0007ee 940e 0e45 	CALL SUBOPT_0x34
0007f0 940e 0e54 	CALL SUBOPT_0x37
0007f2 940e 0e4c 	CALL SUBOPT_0x36
0007f4 c00e      	RJMP _0x2000067
                 _0x2000066:
0007f5 37e0      	CPI  R30,LOW(0x70)
0007f6 f4c1      	BRNE _0x2000069
0007f7 940e 0e45 	CALL SUBOPT_0x34
0007f9 940e 0e54 	CALL SUBOPT_0x37
0007fb 87ee      	STD  Y+14,R30
0007fc 87ff      	STD  Y+14+1,R31
0007fd 93fa      	ST   -Y,R31
0007fe 93ea      	ST   -Y,R30
0007ff 940e 0bf4 	CALL _strlenf
000801 2f1e      	MOV  R17,R30
000802 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000803 770f      	ANDI R16,LOW(127)
000804 3040      	CPI  R20,0
000805 f011      	BREQ _0x200006B
000806 1741      	CP   R20,R17
000807 f008      	BRLO _0x200006C
                 _0x200006B:
000808 c001      	RJMP _0x200006A
                 _0x200006C:
000809 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
00080a e040      	LDI  R20,LOW(0)
00080b e0e0      	LDI  R30,LOW(0)
00080c 8bec      	STD  Y+20,R30
00080d e030      	LDI  R19,LOW(0)
00080e c06e      	RJMP _0x200006D
                 _0x2000069:
00080f 36e4      	CPI  R30,LOW(0x64)
000810 f011      	BREQ _0x2000070
000811 36e9      	CPI  R30,LOW(0x69)
000812 f411      	BRNE _0x2000071
                 _0x2000070:
000813 6004      	ORI  R16,LOW(4)
000814 c002      	RJMP _0x2000072
                 _0x2000071:
000815 37e5      	CPI  R30,LOW(0x75)
000816 f4a1      	BRNE _0x2000073
                 _0x2000072:
000817 e0ea      	LDI  R30,LOW(10)
000818 8bec      	STD  Y+20,R30
000819 ff01      	SBRS R16,1
00081a c008      	RJMP _0x2000074
                +
00081b e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00081c ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00081d e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00081e e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00081f 940e 0e59 	CALL SUBOPT_0x38
000821 e01a      	LDI  R17,LOW(10)
000822 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000823 e1e0     +LDI R30 , LOW ( 0x2710 )
000824 e2f7     +LDI R31 , HIGH ( 0x2710 )
000825 e060     +LDI R22 , BYTE3 ( 0x2710 )
000826 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000827 940e 0e59 	CALL SUBOPT_0x38
000829 e015      	LDI  R17,LOW(5)
00082a c01b      	RJMP _0x2000075
                 _0x2000073:
00082b 35e8      	CPI  R30,LOW(0x58)
00082c f411      	BRNE _0x2000077
00082d 6008      	ORI  R16,LOW(8)
00082e c004      	RJMP _0x2000078
                 _0x2000077:
00082f 37e8      	CPI  R30,LOW(0x78)
000830 f011      	BREQ PC+3
000831 940c 091d 	JMP _0x20000B6
                 _0x2000078:
000833 e1e0      	LDI  R30,LOW(16)
000834 8bec      	STD  Y+20,R30
000835 ff01      	SBRS R16,1
000836 c008      	RJMP _0x200007A
                +
000837 e0e0     +LDI R30 , LOW ( 0x10000000 )
000838 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000839 e060     +LDI R22 , BYTE3 ( 0x10000000 )
00083a e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00083b 940e 0e59 	CALL SUBOPT_0x38
00083d e018      	LDI  R17,LOW(8)
00083e c007      	RJMP _0x2000075
                 _0x200007A:
                +
00083f e0e0     +LDI R30 , LOW ( 0x1000 )
000840 e1f0     +LDI R31 , HIGH ( 0x1000 )
000841 e060     +LDI R22 , BYTE3 ( 0x1000 )
000842 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000843 940e 0e59 	CALL SUBOPT_0x38
000845 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000846 3040      	CPI  R20,0
000847 f011      	BREQ _0x200007B
000848 770f      	ANDI R16,LOW(127)
000849 c001      	RJMP _0x200007C
                 _0x200007B:
00084a e041      	LDI  R20,LOW(1)
                 _0x200007C:
00084b ff01      	SBRS R16,1
00084c c008      	RJMP _0x200007D
00084d 940e 0e45 	CALL SUBOPT_0x34
00084f 940e 0e39 	CALL SUBOPT_0x32
000851 9614      	ADIW R26,4
000852 940e 1123 	CALL __GETD1P
000854 c00f      	RJMP _0x2000110
                 _0x200007D:
000855 ff02      	SBRS R16,2
000856 c007      	RJMP _0x200007F
000857 940e 0e45 	CALL SUBOPT_0x34
000859 940e 0e54 	CALL SUBOPT_0x37
00085b 940e 10b9 	CALL __CWD1
00085d c006      	RJMP _0x2000110
                 _0x200007F:
00085e 940e 0e45 	CALL SUBOPT_0x34
000860 940e 0e54 	CALL SUBOPT_0x37
000862 2766      	CLR  R22
000863 2777      	CLR  R23
                 _0x2000110:
                +
000864 87ea     +STD Y + 10 , R30
000865 87fb     +STD Y + 10 + 1 , R31
000866 876c     +STD Y + 10 + 2 , R22
000867 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000868 ff02      	SBRS R16,2
000869 c012      	RJMP _0x2000081
00086a 85ad      	LDD  R26,Y+13
00086b 23aa      	TST  R26
00086c f442      	BRPL _0x2000082
00086d 940e 0e47 	CALL SUBOPT_0x35
00086f 940e 10a6 	CALL __ANEGD1
000871 940e 0e40 	CALL SUBOPT_0x33
000873 e2ed      	LDI  R30,LOW(45)
000874 8bed      	STD  Y+21,R30
                 _0x2000082:
000875 89ed      	LDD  R30,Y+21
000876 30e0      	CPI  R30,0
000877 f019      	BREQ _0x2000083
000878 5f1f      	SUBI R17,-LOW(1)
000879 5f4f      	SUBI R20,-LOW(1)
00087a c001      	RJMP _0x2000084
                 _0x2000083:
00087b 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
00087c 2f34      	MOV  R19,R20
                 _0x200006D:
00087d fd00      	SBRC R16,0
00087e c014      	RJMP _0x2000085
                 _0x2000086:
00087f 1715      	CP   R17,R21
000880 f410      	BRSH _0x2000089
000881 1735      	CP   R19,R21
000882 f008      	BRLO _0x200008A
                 _0x2000089:
000883 c00f      	RJMP _0x2000088
                 _0x200008A:
000884 ff07      	SBRS R16,7
000885 c008      	RJMP _0x200008B
000886 ff02      	SBRS R16,2
000887 c004      	RJMP _0x200008C
000888 7f0b      	ANDI R16,LOW(251)
000889 892d      	LDD  R18,Y+21
00088a 5011      	SUBI R17,LOW(1)
00088b c001      	RJMP _0x200008D
                 _0x200008C:
00088c e320      	LDI  R18,LOW(48)
                 _0x200008D:
00088d c001      	RJMP _0x200008E
                 _0x200008B:
00088e e220      	LDI  R18,LOW(32)
                 _0x200008E:
00088f 940e 0e1a 	CALL SUBOPT_0x2E
000891 5051      	SUBI R21,LOW(1)
000892 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000893 1714      	CP   R17,R20
000894 f490      	BRSH _0x2000091
000895 6100      	ORI  R16,LOW(16)
000896 ff02      	SBRS R16,2
000897 c006      	RJMP _0x2000092
000898 940e 0e5e 	CALL SUBOPT_0x39
00089a f009      	BREQ _0x2000093
00089b 5051      	SUBI R21,LOW(1)
                 _0x2000093:
00089c 5011      	SUBI R17,LOW(1)
00089d 5041      	SUBI R20,LOW(1)
                 _0x2000092:
00089e e3e0      	LDI  R30,LOW(48)
00089f 93ea      	ST   -Y,R30
0008a0 940e 0e31 	CALL SUBOPT_0x31
0008a2 3050      	CPI  R21,0
0008a3 f009      	BREQ _0x2000094
0008a4 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0008a5 5041      	SUBI R20,LOW(1)
0008a6 cfec      	RJMP _0x200008F
                 _0x2000091:
0008a7 2f31      	MOV  R19,R17
0008a8 89ec      	LDD  R30,Y+20
0008a9 30e0      	CPI  R30,0
0008aa f4b9      	BRNE _0x2000095
                 _0x2000096:
0008ab 3030      	CPI  R19,0
0008ac f0a1      	BREQ _0x2000098
0008ad ff03      	SBRS R16,3
0008ae c006      	RJMP _0x2000099
0008af 85ee      	LDD  R30,Y+14
0008b0 85ff      	LDD  R31,Y+14+1
0008b1 9125      	LPM  R18,Z+
0008b2 87ee      	STD  Y+14,R30
0008b3 87ff      	STD  Y+14+1,R31
0008b4 c005      	RJMP _0x200009A
                 _0x2000099:
0008b5 85ae      	LDD  R26,Y+14
0008b6 85bf      	LDD  R27,Y+14+1
0008b7 912d      	LD   R18,X+
0008b8 87ae      	STD  Y+14,R26
0008b9 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0008ba 940e 0e1a 	CALL SUBOPT_0x2E
0008bc 3050      	CPI  R21,0
0008bd f009      	BREQ _0x200009B
0008be 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0008bf 5031      	SUBI R19,LOW(1)
0008c0 cfea      	RJMP _0x2000096
                 _0x2000098:
0008c1 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0008c2 940e 0e72 	CALL SUBOPT_0x3A
0008c4 940e 10de 	CALL __DIVD21U
0008c6 2f2e      	MOV  R18,R30
0008c7 302a      	CPI  R18,10
0008c8 f030      	BRLO _0x20000A0
0008c9 ff03      	SBRS R16,3
0008ca c002      	RJMP _0x20000A1
0008cb 5c29      	SUBI R18,-LOW(55)
0008cc c001      	RJMP _0x20000A2
                 _0x20000A1:
0008cd 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0008ce c001      	RJMP _0x20000A3
                 _0x20000A0:
0008cf 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0008d0 fd04      	SBRC R16,4
0008d1 c021      	RJMP _0x20000A5
0008d2 3321      	CPI  R18,49
0008d3 f460      	BRSH _0x20000A7
                +
0008d4 89a8     +LDD R26 , Y + 16
0008d5 89b9     +LDD R27 , Y + 16 + 1
0008d6 898a     +LDD R24 , Y + 16 + 2
0008d7 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0008d8 30a1     +CPI R26 , LOW ( 0x1 )
0008d9 e0e0     +LDI R30 , HIGH ( 0x1 )
0008da 07be     +CPC R27 , R30
0008db e0e0     +LDI R30 , BYTE3 ( 0x1 )
0008dc 078e     +CPC R24 , R30
0008dd e0e0     +LDI R30 , BYTE4 ( 0x1 )
0008de 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0008df f409      	BRNE _0x20000A6
                 _0x20000A7:
0008e0 c00b      	RJMP _0x20000A9
                 _0x20000A6:
0008e1 1743      	CP   R20,R19
0008e2 f440      	BRSH _0x2000111
0008e3 1753      	CP   R21,R19
0008e4 f010      	BRLO _0x20000AC
0008e5 ff00      	SBRS R16,0
0008e6 c001      	RJMP _0x20000AD
                 _0x20000AC:
0008e7 c010      	RJMP _0x20000AB
                 _0x20000AD:
0008e8 e220      	LDI  R18,LOW(32)
0008e9 ff07      	SBRS R16,7
0008ea c008      	RJMP _0x20000AE
                 _0x2000111:
0008eb e320      	LDI  R18,LOW(48)
                 _0x20000A9:
0008ec 6100      	ORI  R16,LOW(16)
0008ed ff02      	SBRS R16,2
0008ee c004      	RJMP _0x20000AF
0008ef 940e 0e5e 	CALL SUBOPT_0x39
0008f1 f009      	BREQ _0x20000B0
0008f2 5051      	SUBI R21,LOW(1)
>>>>>>> merget
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
<<<<<<< HEAD
000916 940e 0e2d 	CALL SUBOPT_0x2D
000918 3050      	CPI  R21,0
000919 f009      	BREQ _0x20000B1
00091a 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
00091b 5031      	SUBI R19,LOW(1)
00091c 940e 0e85 	CALL SUBOPT_0x39
00091e 940e 1128 	CALL __MODD21U
000920 940e 0e53 	CALL SUBOPT_0x32
000922 89ec      	LDD  R30,Y+20
                +
000923 89a8     +LDD R26 , Y + 16
000924 89b9     +LDD R27 , Y + 16 + 1
000925 898a     +LDD R24 , Y + 16 + 2
000926 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000927 27ff      	CLR  R31
000928 2766      	CLR  R22
000929 2777      	CLR  R23
00092a 940e 10f7 	CALL __DIVD21U
00092c 940e 0e6c 	CALL SUBOPT_0x37
                +
00092e 89e8     +LDD R30 , Y + 16
00092f 89f9     +LDD R31 , Y + 16 + 1
000930 896a     +LDD R22 , Y + 16 + 2
000931 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000932 940e 116f 	CALL __CPD10
000934 f009      	BREQ _0x200009F
000935 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000936 ff00      	SBRS R16,0
000937 c008      	RJMP _0x20000B2
                 _0x20000B3:
000938 3050      	CPI  R21,0
000939 f031      	BREQ _0x20000B5
00093a 5051      	SUBI R21,LOW(1)
00093b e2e0      	LDI  R30,LOW(32)
00093c 93ea      	ST   -Y,R30
00093d 940e 0e44 	CALL SUBOPT_0x30
00093f cff8      	RJMP _0x20000B3
=======
0008f3 940e 0e1a 	CALL SUBOPT_0x2E
0008f5 3050      	CPI  R21,0
0008f6 f009      	BREQ _0x20000B1
0008f7 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
0008f8 5031      	SUBI R19,LOW(1)
0008f9 940e 0e72 	CALL SUBOPT_0x3A
0008fb 940e 110f 	CALL __MODD21U
0008fd 940e 0e40 	CALL SUBOPT_0x33
0008ff 89ec      	LDD  R30,Y+20
                +
000900 89a8     +LDD R26 , Y + 16
000901 89b9     +LDD R27 , Y + 16 + 1
000902 898a     +LDD R24 , Y + 16 + 2
000903 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000904 27ff      	CLR  R31
000905 2766      	CLR  R22
000906 2777      	CLR  R23
000907 940e 10de 	CALL __DIVD21U
000909 940e 0e59 	CALL SUBOPT_0x38
                +
00090b 89e8     +LDD R30 , Y + 16
00090c 89f9     +LDD R31 , Y + 16 + 1
00090d 896a     +LDD R22 , Y + 16 + 2
00090e 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00090f 940e 1156 	CALL __CPD10
000911 f009      	BREQ _0x200009F
000912 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000913 ff00      	SBRS R16,0
000914 c008      	RJMP _0x20000B2
                 _0x20000B3:
000915 3050      	CPI  R21,0
000916 f031      	BREQ _0x20000B5
000917 5051      	SUBI R21,LOW(1)
000918 e2e0      	LDI  R30,LOW(32)
000919 93ea      	ST   -Y,R30
00091a 940e 0e31 	CALL SUBOPT_0x31
00091c cff8      	RJMP _0x20000B3
>>>>>>> merget
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
<<<<<<< HEAD
000940 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000941 ce06      	RJMP _0x2000030
                 _0x2000032:
000942 81ae      	LDD  R26,Y+6
000943 81bf      	LDD  R27,Y+6+1
000944 940e 1138 	CALL __GETW1P
000946 940e 1180 	CALL __LOADLOCR6
000948 96ef      	ADIW R28,63
000949 966f      	ADIW R28,31
00094a 9508      	RET
                 _sprintf:
00094b 92ff      	PUSH R15
00094c 2ef8      	MOV  R15,R24
00094d 9726      	SBIW R28,6
00094e 940e 117b 	CALL __SAVELOCR4
000950 940e 0e8e 	CALL SUBOPT_0x3A
000952 9730      	SBIW R30,0
000953 f419      	BRNE _0x20000B7
000954 efef      	LDI  R30,LOW(65535)
000955 efff      	LDI  R31,HIGH(65535)
000956 c023      	RJMP _0x20A0008
                 _0x20000B7:
000957 01de      	MOVW R26,R28
000958 9616      	ADIW R26,6
000959 940e 10b1 	CALL __ADDW2R15
00095b 018d      	MOVW R16,R26
00095c 940e 0e8e 	CALL SUBOPT_0x3A
00095e 83ee      	STD  Y+6,R30
00095f 83ff      	STD  Y+6+1,R31
000960 e0e0      	LDI  R30,LOW(0)
000961 87e8      	STD  Y+8,R30
000962 87e9      	STD  Y+8+1,R30
000963 01de      	MOVW R26,R28
000964 961a      	ADIW R26,10
000965 940e 0e95 	CALL SUBOPT_0x3B
000967 93fa      	ST   -Y,R31
000968 93ea      	ST   -Y,R30
000969 931a      	ST   -Y,R17
00096a 930a      	ST   -Y,R16
00096b e2e6      	LDI  R30,LOW(_put_buff_G100)
00096c e0f6      	LDI  R31,HIGH(_put_buff_G100)
00096d 93fa      	ST   -Y,R31
00096e 93ea      	ST   -Y,R30
00096f 01fe      	MOVW R30,R28
000970 963a      	ADIW R30,10
000971 93fa      	ST   -Y,R31
000972 93ea      	ST   -Y,R30
000973 ddbb      	RCALL __print_G100
000974 019f      	MOVW R18,R30
000975 81ae      	LDD  R26,Y+6
000976 81bf      	LDD  R27,Y+6+1
000977 e0e0      	LDI  R30,LOW(0)
000978 93ec      	ST   X,R30
000979 01f9      	MOVW R30,R18
                 _0x20A0008:
00097a 940e 1182 	CALL __LOADLOCR4
00097c 962a      	ADIW R28,10
00097d 90ff      	POP  R15
00097e 9508      	RET
                 _get_buff_G100:
00097f 931a      	ST   -Y,R17
000980 81a9      	LDD  R26,Y+1
000981 81ba      	LDD  R27,Y+1+1
000982 e0e0      	LDI  R30,LOW(0)
000983 93ec      	ST   X,R30
000984 81ab      	LDD  R26,Y+3
000985 81bc      	LDD  R27,Y+3+1
000986 91ec      	LD   R30,X
000987 2f1e      	MOV  R17,R30
000988 30e0      	CPI  R30,0
000989 f019      	BREQ _0x20000BF
00098a e0e0      	LDI  R30,LOW(0)
00098b 93ec      	ST   X,R30
00098c c016      	RJMP _0x20000C0
                 _0x20000BF:
00098d 81a9      	LDD  R26,Y+1
00098e 81ba      	LDD  R27,Y+1+1
00098f 9611      	ADIW R26,1
000990 940e 1138 	CALL __GETW1P
000992 9730      	SBIW R30,0
000993 f071      	BREQ _0x20000C1
000994 81e9      	LDD  R30,Y+1
000995 81fa      	LDD  R31,Y+1+1
000996 81a1      	LDD  R26,Z+1
000997 81b2      	LDD  R27,Z+2
000998 91ec      	LD   R30,X
000999 2f1e      	MOV  R17,R30
00099a 30e0      	CPI  R30,0
00099b f029      	BREQ _0x20000C2
00099c 81a9      	LDD  R26,Y+1
00099d 81ba      	LDD  R27,Y+1+1
00099e 9611      	ADIW R26,1
00099f 940e 0d58 	CALL SUBOPT_0x12
                 _0x20000C2:
0009a1 c001      	RJMP _0x20000C3
                 _0x20000C1:
0009a2 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
0009a3 2fe1      	MOV  R30,R17
0009a4 8118      	LDD  R17,Y+0
                 _0x20A0007:
0009a5 9625      	ADIW R28,5
0009a6 9508      	RET
                 __scanf_G100:
0009a7 9725      	SBIW R28,5
0009a8 940e 1179 	CALL __SAVELOCR6
0009aa e0e0      	LDI  R30,LOW(0)
0009ab e0f0      	LDI  R31,HIGH(0)
0009ac 87e8      	STD  Y+8,R30
0009ad 87f9      	STD  Y+8+1,R31
0009ae 2f4e      	MOV  R20,R30
                 _0x20000C4:
0009af 89e9      	LDD  R30,Y+17
0009b0 89fa      	LDD  R31,Y+17+1
0009b1 9631      	ADIW R30,1
0009b2 8be9      	STD  Y+17,R30
0009b3 8bfa      	STD  Y+17+1,R31
0009b4 9731      	SBIW R30,1
0009b5 91e4      	LPM  R30,Z
0009b6 2f3e      	MOV  R19,R30
0009b7 30e0      	CPI  R30,0
0009b8 f411      	BRNE PC+3
0009b9 940c 0ad4 	JMP _0x20000C6
0009bb 940e 0e9a 	CALL SUBOPT_0x3C
0009bd f0c1      	BREQ _0x20000C7
                 _0x20000C8:
0009be b7ed      	IN   R30,SPL
0009bf b7fe      	IN   R31,SPH
0009c0 93fa      	ST   -Y,R31
0009c1 93ea      	ST   -Y,R30
0009c2 934f      	PUSH R20
0009c3 940e 0e9f 	CALL SUBOPT_0x3D
0009c5 914f      	POP  R20
0009c6 2f3e      	MOV  R19,R30
0009c7 30e0      	CPI  R30,0
0009c8 f019      	BREQ _0x20000CB
0009c9 940e 0e9a 	CALL SUBOPT_0x3C
0009cb f409      	BRNE _0x20000CC
                 _0x20000CB:
0009cc c007      	RJMP _0x20000CA
                 _0x20000CC:
0009cd 940e 0ea7 	CALL SUBOPT_0x3E
0009cf f41c      	BRGE _0x20000CD
0009d0 efef      	LDI  R30,LOW(65535)
0009d1 efff      	LDI  R31,HIGH(65535)
0009d2 c103      	RJMP _0x20A0005
                 _0x20000CD:
0009d3 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0009d4 2f43      	MOV  R20,R19
0009d5 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0009d6 3235      	CPI  R19,37
0009d7 f011      	BREQ PC+3
0009d8 940c 0abb 	JMP _0x20000CF
0009da e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0009db 89e9      	LDD  R30,Y+17
0009dc 89fa      	LDD  R31,Y+17+1
0009dd 9135      	LPM  R19,Z+
0009de 8be9      	STD  Y+17,R30
0009df 8bfa      	STD  Y+17+1,R31
0009e0 3330      	CPI  R19,48
0009e1 f010      	BRLO _0x20000D4
0009e2 333a      	CPI  R19,58
0009e3 f008      	BRLO _0x20000D3
                 _0x20000D4:
0009e4 c007      	RJMP _0x20000D2
                 _0x20000D3:
0009e5 e0aa      	LDI  R26,LOW(10)
0009e6 9f5a      	MUL  R21,R26
0009e7 2d50      	MOV  R21,R0
0009e8 2fe3      	MOV  R30,R19
0009e9 53e0      	SUBI R30,LOW(48)
0009ea 0f5e      	ADD  R21,R30
0009eb cfef      	RJMP _0x20000D0
                 _0x20000D2:
0009ec 3030      	CPI  R19,0
0009ed f409      	BRNE _0x20000D6
0009ee c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0009ef b7ed      	IN   R30,SPL
0009f0 b7fe      	IN   R31,SPH
0009f1 93fa      	ST   -Y,R31
0009f2 93ea      	ST   -Y,R30
0009f3 934f      	PUSH R20
0009f4 940e 0e9f 	CALL SUBOPT_0x3D
0009f6 914f      	POP  R20
0009f7 2f2e      	MOV  R18,R30
0009f8 93ea      	ST   -Y,R30
0009f9 940e 0bea 	CALL _isspace
0009fb 30e0      	CPI  R30,0
0009fc f039      	BREQ _0x20000D9
0009fd 940e 0ea7 	CALL SUBOPT_0x3E
0009ff f41c      	BRGE _0x20000DA
000a00 efef      	LDI  R30,LOW(65535)
000a01 efff      	LDI  R31,HIGH(65535)
000a02 c0d3      	RJMP _0x20A0005
                 _0x20000DA:
000a03 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
000a04 3020      	CPI  R18,0
000a05 f409      	BRNE _0x20000DB
000a06 c0c4      	RJMP _0x20000DC
                 _0x20000DB:
000a07 2f42      	MOV  R20,R18
000a08 3050      	CPI  R21,0
000a09 f409      	BRNE _0x20000DD
000a0a ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000a0b 2fe3      	MOV  R30,R19
000a0c 36e3      	CPI  R30,LOW(0x63)
000a0d f499      	BRNE _0x20000E1
000a0e 940e 0eac 	CALL SUBOPT_0x3F
000a10 b7ed      	IN   R30,SPL
000a11 b7fe      	IN   R31,SPH
000a12 93fa      	ST   -Y,R31
000a13 93ea      	ST   -Y,R30
000a14 934f      	PUSH R20
000a15 940e 0e9f 	CALL SUBOPT_0x3D
000a17 914f      	POP  R20
000a18 01d8      	MOVW R26,R16
000a19 93ec      	ST   X,R30
000a1a 940e 0ea7 	CALL SUBOPT_0x3E
000a1c f41c      	BRGE _0x20000E2
000a1d efef      	LDI  R30,LOW(65535)
000a1e efff      	LDI  R31,HIGH(65535)
000a1f c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000a20 c097      	RJMP _0x20000E0
                 _0x20000E1:
000a21 37e3      	CPI  R30,LOW(0x73)
000a22 f541      	BRNE _0x20000EB
000a23 940e 0eac 	CALL SUBOPT_0x3F
                 _0x20000E4:
000a25 2fe5      	MOV  R30,R21
000a26 5051      	SUBI R21,1
000a27 30e0      	CPI  R30,0
000a28 f0f1      	BREQ _0x20000E6
000a29 b7ed      	IN   R30,SPL
000a2a b7fe      	IN   R31,SPH
000a2b 93fa      	ST   -Y,R31
000a2c 93ea      	ST   -Y,R30
000a2d 934f      	PUSH R20
000a2e 940e 0e9f 	CALL SUBOPT_0x3D
000a30 914f      	POP  R20
000a31 2f3e      	MOV  R19,R30
000a32 30e0      	CPI  R30,0
000a33 f019      	BREQ _0x20000E8
000a34 940e 0e9a 	CALL SUBOPT_0x3C
000a36 f039      	BREQ _0x20000E7
                 _0x20000E8:
000a37 940e 0ea7 	CALL SUBOPT_0x3E
000a39 f41c      	BRGE _0x20000EA
000a3a efef      	LDI  R30,LOW(65535)
000a3b efff      	LDI  R31,HIGH(65535)
000a3c c099      	RJMP _0x20A0005
                 _0x20000EA:
000a3d c009      	RJMP _0x20000E6
                 _0x20000E7:
000a3e 931f      	PUSH R17
000a3f 930f      	PUSH R16
                +
000a40 5f0f     +SUBI R16 , LOW ( - 1 )
000a41 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a42 2fe3      	MOV  R30,R19
000a43 91af      	POP  R26
000a44 91bf      	POP  R27
000a45 93ec      	ST   X,R30
000a46 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000a47 01d8      	MOVW R26,R16
000a48 e0e0      	LDI  R30,LOW(0)
000a49 93ec      	ST   X,R30
000a4a c06d      	RJMP _0x20000E0
                 _0x20000EB:
000a4b e0e1      	LDI  R30,LOW(1)
000a4c 87ea      	STD  Y+10,R30
000a4d 2fe3      	MOV  R30,R19
000a4e 36e4      	CPI  R30,LOW(0x64)
000a4f f011      	BREQ _0x20000F0
000a50 36e9      	CPI  R30,LOW(0x69)
000a51 f419      	BRNE _0x20000F1
                 _0x20000F0:
000a52 e0e0      	LDI  R30,LOW(0)
000a53 87ea      	STD  Y+10,R30
000a54 c002      	RJMP _0x20000F2
                 _0x20000F1:
000a55 37e5      	CPI  R30,LOW(0x75)
000a56 f411      	BRNE _0x20000F3
                 _0x20000F2:
000a57 e02a      	LDI  R18,LOW(10)
000a58 c008      	RJMP _0x20000EE
                 _0x20000F3:
000a59 37e8      	CPI  R30,LOW(0x78)
000a5a f411      	BRNE _0x20000F4
000a5b e120      	LDI  R18,LOW(16)
000a5c c004      	RJMP _0x20000EE
                 _0x20000F4:
000a5d 32e5      	CPI  R30,LOW(0x25)
000a5e f409      	BRNE _0x20000F7
000a5f c05b      	RJMP _0x20000F6
                 _0x20000F7:
000a60 c073      	RJMP _0x20A0006
                 _0x20000EE:
000a61 e0e0      	LDI  R30,LOW(0)
000a62 83ee      	STD  Y+6,R30
000a63 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000a64 2fe5      	MOV  R30,R21
000a65 5051      	SUBI R21,1
000a66 30e0      	CPI  R30,0
000a67 f411      	BRNE PC+3
000a68 940c 0aab 	JMP _0x20000FA
000a6a b7ed      	IN   R30,SPL
000a6b b7fe      	IN   R31,SPH
000a6c 93fa      	ST   -Y,R31
000a6d 93ea      	ST   -Y,R30
000a6e 934f      	PUSH R20
000a6f 940e 0e9f 	CALL SUBOPT_0x3D
000a71 914f      	POP  R20
000a72 2f3e      	MOV  R19,R30
000a73 32e1      	CPI  R30,LOW(0x21)
000a74 f438      	BRSH _0x20000FB
000a75 940e 0ea7 	CALL SUBOPT_0x3E
000a77 f41c      	BRGE _0x20000FC
000a78 efef      	LDI  R30,LOW(65535)
000a79 efff      	LDI  R31,HIGH(65535)
000a7a c05b      	RJMP _0x20A0005
                 _0x20000FC:
000a7b c017      	RJMP _0x20000FD
                 _0x20000FB:
000a7c 85ea      	LDD  R30,Y+10
000a7d 30e0      	CPI  R30,0
000a7e f439      	BRNE _0x20000FE
000a7f 323d      	CPI  R19,45
000a80 f419      	BRNE _0x20000FF
000a81 efef      	LDI  R30,LOW(255)
000a82 87ea      	STD  Y+10,R30
000a83 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000a84 e0e1      	LDI  R30,LOW(1)
000a85 87ea      	STD  Y+10,R30
                 _0x20000FE:
000a86 3120      	CPI  R18,16
000a87 f431      	BRNE _0x2000101
000a88 933a      	ST   -Y,R19
000a89 940e 0bf4 	CALL _isxdigit
000a8b 30e0      	CPI  R30,0
000a8c f031      	BREQ _0x20000FD
000a8d c007      	RJMP _0x2000103
                 _0x2000101:
000a8e 933a      	ST   -Y,R19
000a8f 940e 0be2 	CALL _isdigit
000a91 30e0      	CPI  R30,0
000a92 f411      	BRNE _0x2000104
                 _0x20000FD:
000a93 2f43      	MOV  R20,R19
000a94 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000a95 3631      	CPI  R19,97
000a96 f010      	BRLO _0x2000105
000a97 5537      	SUBI R19,LOW(87)
000a98 c005      	RJMP _0x2000106
                 _0x2000105:
000a99 3431      	CPI  R19,65
000a9a f010      	BRLO _0x2000107
000a9b 5337      	SUBI R19,LOW(55)
000a9c c001      	RJMP _0x2000108
                 _0x2000107:
000a9d 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000a9e 2fe2      	MOV  R30,R18
000a9f 81ae      	LDD  R26,Y+6
000aa0 81bf      	LDD  R27,Y+6+1
000aa1 e0f0      	LDI  R31,0
000aa2 940e 10d6 	CALL __MULW12U
000aa4 01df      	MOVW R26,R30
000aa5 2fe3      	MOV  R30,R19
000aa6 940e 0d4e 	CALL SUBOPT_0x10
000aa8 83ee      	STD  Y+6,R30
000aa9 83ff      	STD  Y+6+1,R31
000aaa cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000aab 940e 0eac 	CALL SUBOPT_0x3F
000aad 85ea      	LDD  R30,Y+10
000aae 81ae      	LDD  R26,Y+6
000aaf 81bf      	LDD  R27,Y+6+1
000ab0 e0f0      	LDI  R31,0
000ab1 fde7      	SBRC R30,7
000ab2 efff      	SER  R31
000ab3 940e 10d6 	CALL __MULW12U
000ab5 01d8      	MOVW R26,R16
000ab6 93ed      	ST   X+,R30
000ab7 93fc      	ST   X,R31
                 _0x20000E0:
000ab8 940e 0e27 	CALL SUBOPT_0x2C
000aba c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000abb b7ed      	IN   R30,SPL
000abc b7fe      	IN   R31,SPH
000abd 93fa      	ST   -Y,R31
000abe 93ea      	ST   -Y,R30
000abf 934f      	PUSH R20
000ac0 940e 0e9f 	CALL SUBOPT_0x3D
000ac2 914f      	POP  R20
000ac3 17e3      	CP   R30,R19
000ac4 f071      	BREQ _0x200010A
000ac5 940e 0ea7 	CALL SUBOPT_0x3E
000ac7 f41c      	BRGE _0x200010B
000ac8 efef      	LDI  R30,LOW(65535)
000ac9 efff      	LDI  R31,HIGH(65535)
000aca c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000acb 85e8      	LDD  R30,Y+8
000acc 85f9      	LDD  R31,Y+8+1
000acd 9730      	SBIW R30,0
000ace f419      	BRNE _0x200010C
000acf efef      	LDI  R30,LOW(65535)
000ad0 efff      	LDI  R31,HIGH(65535)
000ad1 c004      	RJMP _0x20A0005
                 _0x200010C:
000ad2 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000ad3 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000ad4 85e8      	LDD  R30,Y+8
000ad5 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000ad6 940e 1180 	CALL __LOADLOCR6
000ad8 9663      	ADIW R28,19
000ad9 9508      	RET
                 _sscanf:
000ada 92ff      	PUSH R15
000adb 2ef8      	MOV  R15,R24
000adc 9723      	SBIW R28,3
000add 931a      	ST   -Y,R17
000ade 930a      	ST   -Y,R16
000adf 01de      	MOVW R26,R28
000ae0 9617      	ADIW R26,7
000ae1 940e 0e95 	CALL SUBOPT_0x3B
000ae3 9730      	SBIW R30,0
000ae4 f419      	BRNE _0x200010D
000ae5 efef      	LDI  R30,LOW(65535)
000ae6 efff      	LDI  R31,HIGH(65535)
000ae7 c01c      	RJMP _0x20A0004
                 _0x200010D:
000ae8 01de      	MOVW R26,R28
000ae9 9611      	ADIW R26,1
000aea 940e 10b1 	CALL __ADDW2R15
000aec 018d      	MOVW R16,R26
000aed 01de      	MOVW R26,R28
000aee 9617      	ADIW R26,7
000aef 940e 0e95 	CALL SUBOPT_0x3B
000af1 83eb      	STD  Y+3,R30
000af2 83fc      	STD  Y+3+1,R31
000af3 01de      	MOVW R26,R28
000af4 9615      	ADIW R26,5
000af5 940e 0e95 	CALL SUBOPT_0x3B
000af7 93fa      	ST   -Y,R31
000af8 93ea      	ST   -Y,R30
000af9 931a      	ST   -Y,R17
000afa 930a      	ST   -Y,R16
000afb e7ef      	LDI  R30,LOW(_get_buff_G100)
000afc e0f9      	LDI  R31,HIGH(_get_buff_G100)
000afd 93fa      	ST   -Y,R31
000afe 93ea      	ST   -Y,R30
000aff 01fe      	MOVW R30,R28
000b00 9638      	ADIW R30,8
000b01 93fa      	ST   -Y,R31
000b02 93ea      	ST   -Y,R30
000b03 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000b04 8119      	LDD  R17,Y+1
000b05 8108      	LDD  R16,Y+0
000b06 9625      	ADIW R28,5
000b07 90ff      	POP  R15
000b08 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000b09 817b         ldd  r23,y+3
000b0a 816a         ldd  r22,y+2
000b0b 81f9         ldd  r31,y+1
000b0c 81e8         ld   r30,y
000b0d fb77         bst  r23,7
000b0e 0f77         lsl  r23
000b0f fd67         sbrc r22,7
000b10 6071         sbr  r23,1
000b11 2f97         mov  r25,r23
000b12 579e         subi r25,0x7e
000b13 f081         breq __ftrunc0
000b14 f078         brcs __ftrunc0
000b15 3198         cpi  r25,24
000b16 f490         brsh __ftrunc1
000b17 27aa         clr  r26
000b18 27bb         clr  r27
000b19 2788         clr  r24
                 __ftrunc2:
000b1a 9408         sec
000b1b 9587         ror  r24
000b1c 95b7         ror  r27
000b1d 95a7         ror  r26
000b1e 959a         dec  r25
000b1f f7d1         brne __ftrunc2
000b20 23ea         and  r30,r26
000b21 23fb         and  r31,r27
000b22 2368         and  r22,r24
000b23 c005         rjmp __ftrunc1
                 __ftrunc0:
000b24 94e8         clt
000b25 2777         clr  r23
000b26 27ee         clr  r30
000b27 27ff         clr  r31
000b28 2766         clr  r22
                 __ftrunc1:
000b29 776f         cbr  r22,0x80
000b2a 9576         lsr  r23
000b2b f408         brcc __ftrunc3
000b2c 6860         sbr  r22,0x80
                 __ftrunc3:
000b2d f977         bld  r23,7
000b2e 91a9         ld   r26,y+
000b2f 91b9         ld   r27,y+
000b30 9189         ld   r24,y+
000b31 9199         ld   r25,y+
000b32 17ea         cp   r30,r26
000b33 07fb         cpc  r31,r27
000b34 0768         cpc  r22,r24
000b35 0779         cpc  r23,r25
000b36 fb97         bst  r25,7
000b37 9508         ret
                 _floor:
000b38 940e 0d34 	CALL SUBOPT_0xC
000b3a 940e 1158 	CALL __PUTPARD1
000b3c 940e 0b09 	CALL _ftrunc
000b3e 940e 1151 	CALL __PUTD1S0
000b40 f419          brne __floor1
                 __floor0:
000b41 940e 0d34 	CALL SUBOPT_0xC
000b43 c09c      	RJMP _0x20A0003
                 __floor1:
000b44 f7e6          brtc __floor0
000b45 940e 0d34 	CALL SUBOPT_0xC
                +
000b47 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b48 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b49 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b4a e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b4b 940e 0fa7 	CALL __SUBF12
000b4d c092      	RJMP _0x20A0003
                 _sin:
000b4e 9724      	SBIW R28,4
000b4f 931a      	ST   -Y,R17
000b50 e010      	LDI  R17,0
000b51 940e 0eb7 	CALL SUBOPT_0x40
                +
000b53 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000b54 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000b55 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000b56 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000b57 940e 0ffe 	CALL __MULF12
000b59 940e 0ebc 	CALL SUBOPT_0x41
000b5b 940e 0ec1 	CALL SUBOPT_0x42
000b5d 940e 0e17 	CALL SUBOPT_0x29
000b5f 940e 0eb7 	CALL SUBOPT_0x40
000b61 940e 0d1b 	CALL SUBOPT_0x9
000b63 940e 0ebc 	CALL SUBOPT_0x41
000b65 940e 0ec6 	CALL SUBOPT_0x43
000b67 940e 1091 	CALL __CMPF12
000b69 f009      	BREQ PC+2
000b6a f410      	BRCC PC+3
000b6b 940c 0b78 	JMP  _0x2020017
000b6d 940e 0ec1 	CALL SUBOPT_0x42
                +
000b6f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b70 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b71 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b72 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b73 940e 0fa7 	CALL __SUBF12
000b75 940e 0ebc 	CALL SUBOPT_0x41
000b77 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000b78 940e 0eb7 	CALL SUBOPT_0x40
                +
000b7a e0e0     +LDI R30 , LOW ( 0x3E800000 )
000b7b e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000b7c e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000b7d e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000b7e 940e 1091 	CALL __CMPF12
000b80 f009      	BREQ PC+2
000b81 f410      	BRCC PC+3
000b82 940c 0b8a 	JMP  _0x2020018
000b84 940e 0ec6 	CALL SUBOPT_0x43
000b86 940e 0fa7 	CALL __SUBF12
000b88 940e 0ebc 	CALL SUBOPT_0x41
                 _0x2020018:
000b8a 3010      	CPI  R17,0
000b8b f031      	BREQ _0x2020019
000b8c 940e 0ec1 	CALL SUBOPT_0x42
000b8e 940e 0f08 	CALL __ANEGF1
000b90 940e 0ebc 	CALL SUBOPT_0x41
                 _0x2020019:
000b92 940e 0ec1 	CALL SUBOPT_0x42
000b94 940e 0eb7 	CALL SUBOPT_0x40
000b96 940e 0ffe 	CALL __MULF12
                +
000b98 83e9     +STD Y + 1 , R30
000b99 83fa     +STD Y + 1 + 1 , R31
000b9a 836b     +STD Y + 1 + 2 , R22
000b9b 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000b9c eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000b9d ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000b9e e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000b9f e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000ba0 940e 0ffe 	CALL __MULF12
000ba2 01df      	MOVW R26,R30
000ba3 01cb      	MOVW R24,R22
                +
000ba4 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000ba5 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000ba6 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000ba7 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000ba8 940e 0d1b 	CALL SUBOPT_0x9
000baa 940e 0ecc 	CALL SUBOPT_0x44
                +
000bac e4ac     +LDI R26 , LOW ( 0x4104534C )
000bad e5b3     +LDI R27 , HIGH ( 0x4104534C )
000bae e084     +LDI R24 , BYTE3 ( 0x4104534C )
000baf e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000bb0 940e 0fae 	CALL __ADDF12
000bb2 940e 0eb7 	CALL SUBOPT_0x40
000bb4 940e 0ffe 	CALL __MULF12
000bb6 937f      	PUSH R23
000bb7 936f      	PUSH R22
000bb8 93ff      	PUSH R31
000bb9 93ef      	PUSH R30
                +
000bba 81e9     +LDD R30 , Y + 1
000bbb 81fa     +LDD R31 , Y + 1 + 1
000bbc 816b     +LDD R22 , Y + 1 + 2
000bbd 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000bbe e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000bbf eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000bc0 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000bc1 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000bc2 940e 0fae 	CALL __ADDF12
000bc4 940e 0ecc 	CALL SUBOPT_0x44
                +
000bc6 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000bc7 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000bc8 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000bc9 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000bca 940e 0fae 	CALL __ADDF12
000bcc 91af      	POP  R26
000bcd 91bf      	POP  R27
000bce 918f      	POP  R24
000bcf 919f      	POP  R25
000bd0 940e 104c 	CALL __DIVF21
000bd2 8118      	LDD  R17,Y+0
000bd3 9629      	ADIW R28,9
000bd4 9508      	RET
                 _cos:
000bd5 940e 114c 	CALL __GETD2S0
                +
000bd7 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000bd8 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000bd9 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000bda e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000bdb 940e 0fa7 	CALL __SUBF12
000bdd 940e 1158 	CALL __PUTPARD1
000bdf df6e      	RCALL _sin
                 _0x20A0003:
000be0 9624      	ADIW R28,4
000be1 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000be2 e0e1          ldi  r30,1
000be3 91f9          ld   r31,y+
000be4 33f0          cpi  r31,'0'
000be5 f010          brlo isdigit0
000be6 33fa          cpi  r31,'9'+1
000be7 f008          brlo isdigit1
                 isdigit0:
000be8 27ee          clr  r30
                 isdigit1:
000be9 9508          ret
                 _isspace:
000bea e0e1          ldi  r30,1
000beb 91f9          ld   r31,y+
000bec 32f0          cpi  r31,' '
000bed f029          breq isspace1
000bee 30f9          cpi  r31,9
000bef f010          brlo isspace0
000bf0 30fe          cpi  r31,13+1
000bf1 f008          brlo isspace1
                 isspace0:
000bf2 27ee          clr  r30
                 isspace1:
000bf3 9508          ret
                 _isxdigit:
000bf4 e0e1          ldi  r30,1
000bf5 91f9          ld   r31,y+
000bf6 53f0          subi r31,0x30
000bf7 f040          brcs isxdigit0
000bf8 30fa          cpi  r31,10
000bf9 f038          brcs isxdigit1
000bfa 75ff          andi r31,0x5f
000bfb 50f7          subi r31,7
000bfc 30fa          cpi  r31,10
000bfd f010          brcs isxdigit0
000bfe 31f0          cpi  r31,16
000bff f008          brcs isxdigit1
                 isxdigit0:
000c00 27ee          clr  r30
                 isxdigit1:
000c01 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000c02 91e9          ld   r30,y+
000c03 91f9          ld   r31,y+
000c04 91a9          ld   r26,y+
000c05 91b9          ld   r27,y+
000c06 01cd          movw r24,r26
                 strcpyf0:
000c07 9005      	lpm  r0,z+
000c08 920d          st   x+,r0
000c09 2000          tst  r0
000c0a f7e1          brne strcpyf0
000c0b 01fc          movw r30,r24
000c0c 9508          ret
                 _strlen:
000c0d 91a9          ld   r26,y+
000c0e 91b9          ld   r27,y+
000c0f 27ee          clr  r30
000c10 27ff          clr  r31
                 strlen0:
000c11 916d          ld   r22,x+
000c12 2366          tst  r22
000c13 f011          breq strlen1
000c14 9631          adiw r30,1
000c15 cffb          rjmp strlen0
                 strlen1:
000c16 9508          ret
                 _strlenf:
000c17 27aa          clr  r26
000c18 27bb          clr  r27
000c19 91e9          ld   r30,y+
000c1a 91f9          ld   r31,y+
                 strlenf0:
000c1b 9005      	lpm  r0,z+
000c1c 2000          tst  r0
000c1d f011          breq strlenf1
000c1e 9611          adiw r26,1
000c1f cffb          rjmp strlenf0
                 strlenf1:
000c20 01fd          movw r30,r26
000c21 9508          ret
                 
                 	.CSEG
                 _ftoa:
000c22 9724      	SBIW R28,4
000c23 d0d5      	RCALL SUBOPT_0x4
000c24 e0e0      	LDI  R30,LOW(0)
000c25 83ea      	STD  Y+2,R30
000c26 e3ef      	LDI  R30,LOW(63)
000c27 83eb      	STD  Y+3,R30
000c28 931a      	ST   -Y,R17
000c29 930a      	ST   -Y,R16
000c2a 85eb      	LDD  R30,Y+11
000c2b 85fc      	LDD  R31,Y+11+1
000c2c 3fef      	CPI  R30,LOW(0xFFFF)
000c2d efaf      	LDI  R26,HIGH(0xFFFF)
000c2e 07fa      	CPC  R31,R26
000c2f f429      	BRNE _0x208000D
000c30 d2a2      	RCALL SUBOPT_0x45
                +
000c31 efe6     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000c32 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000c33 d1a7      	RCALL SUBOPT_0x20
000c34 c085      	RJMP _0x20A0002
                 _0x208000D:
000c35 3fef      	CPI  R30,LOW(0x7FFF)
000c36 e7af      	LDI  R26,HIGH(0x7FFF)
000c37 07fa      	CPC  R31,R26
000c38 f429      	BRNE _0x208000C
000c39 d299      	RCALL SUBOPT_0x45
                +
000c3a efe7     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000c3b e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000c3c d19e      	RCALL SUBOPT_0x20
000c3d c07c      	RJMP _0x20A0002
                 _0x208000C:
000c3e 85ac      	LDD  R26,Y+12
000c3f 23aa      	TST  R26
000c40 f452      	BRPL _0x208000F
                +
000c41 85e9     +LDD R30 , Y + 9
000c42 85fa     +LDD R31 , Y + 9 + 1
000c43 856b     +LDD R22 , Y + 9 + 2
000c44 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c45 940e 0f08 	CALL __ANEGF1
000c47 d290      	RCALL SUBOPT_0x46
000c48 d294      	RCALL SUBOPT_0x47
000c49 e2ed      	LDI  R30,LOW(45)
000c4a 93ec      	ST   X,R30
                 _0x208000F:
000c4b 85a8      	LDD  R26,Y+8
000c4c 30a7      	CPI  R26,LOW(0x7)
000c4d f010      	BRLO _0x2080010
000c4e e0e6      	LDI  R30,LOW(6)
000c4f 87e8      	STD  Y+8,R30
                 _0x2080010:
000c50 8518      	LDD  R17,Y+8
                 _0x2080011:
000c51 2fe1      	MOV  R30,R17
000c52 5011      	SUBI R17,1
000c53 30e0      	CPI  R30,0
000c54 f021      	BREQ _0x2080013
000c55 d28e      	RCALL SUBOPT_0x48
000c56 d1bc      	RCALL SUBOPT_0x28
000c57 d291      	RCALL SUBOPT_0x49
000c58 cff8      	RJMP _0x2080011
                 _0x2080013:
000c59 d294      	RCALL SUBOPT_0x4A
000c5a 940e 0fae 	CALL __ADDF12
000c5c d27b      	RCALL SUBOPT_0x46
000c5d e010      	LDI  R17,LOW(0)
                +
000c5e e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c5f e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c60 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c61 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000c62 d286      	RCALL SUBOPT_0x49
                 _0x2080014:
000c63 d28a      	RCALL SUBOPT_0x4A
000c64 940e 1091 	CALL __CMPF12
000c66 f060      	BRLO _0x2080016
000c67 d27c      	RCALL SUBOPT_0x48
000c68 d197      	RCALL SUBOPT_0x25
000c69 d27f      	RCALL SUBOPT_0x49
000c6a 5f1f      	SUBI R17,-LOW(1)
000c6b 3217      	CPI  R17,39
000c6c f028      	BRLO _0x2080017
000c6d d265      	RCALL SUBOPT_0x45
                +
000c6e efeb     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000c6f e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000c70 d16a      	RCALL SUBOPT_0x20
000c71 c048      	RJMP _0x20A0002
                 _0x2080017:
000c72 cff0      	RJMP _0x2080014
                 _0x2080016:
000c73 3010      	CPI  R17,0
000c74 f421      	BRNE _0x2080018
000c75 d267      	RCALL SUBOPT_0x47
000c76 e3e0      	LDI  R30,LOW(48)
000c77 93ec      	ST   X,R30
000c78 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000c79 2fe1      	MOV  R30,R17
000c7a 5011      	SUBI R17,1
000c7b 30e0      	CPI  R30,0
000c7c f0c9      	BREQ _0x208001C
000c7d d266      	RCALL SUBOPT_0x48
000c7e d194      	RCALL SUBOPT_0x28
000c7f d18c      	RCALL SUBOPT_0x27
000c80 d196      	RCALL SUBOPT_0x29
000c81 d267      	RCALL SUBOPT_0x49
000c82 d26b      	RCALL SUBOPT_0x4A
000c83 940e 104c 	CALL __DIVF21
000c85 940e 0f3b 	CALL __CFD1U
000c87 2f0e      	MOV  R16,R30
000c88 d254      	RCALL SUBOPT_0x47
000c89 d198      	RCALL SUBOPT_0x2B
000c8a e0f0      	LDI  R31,0
000c8b d258      	RCALL SUBOPT_0x48
000c8c 940e 10cc 	CALL __CWD1
000c8e 940e 0f74 	CALL __CDF1
000c90 940e 0ffe 	CALL __MULF12
000c92 d264      	RCALL SUBOPT_0x4B
000c93 d087      	RCALL SUBOPT_0x9
000c94 d243      	RCALL SUBOPT_0x46
000c95 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000c96 85e8      	LDD  R30,Y+8
000c97 30e0      	CPI  R30,0
000c98 f0e9      	BREQ _0x20A0001
000c99 d243      	RCALL SUBOPT_0x47
000c9a e2ee      	LDI  R30,LOW(46)
000c9b 93ec      	ST   X,R30
                 _0x208001E:
000c9c 85e8      	LDD  R30,Y+8
000c9d 50e1      	SUBI R30,LOW(1)
000c9e 87e8      	STD  Y+8,R30
000c9f 5fef      	SUBI R30,-LOW(1)
000ca0 f0a9      	BREQ _0x2080020
000ca1 d255      	RCALL SUBOPT_0x4B
000ca2 d15d      	RCALL SUBOPT_0x25
000ca3 d234      	RCALL SUBOPT_0x46
                +
000ca4 85e9     +LDD R30 , Y + 9
000ca5 85fa     +LDD R31 , Y + 9 + 1
000ca6 856b     +LDD R22 , Y + 9 + 2
000ca7 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000ca8 940e 0f3b 	CALL __CFD1U
000caa 2f0e      	MOV  R16,R30
000cab d231      	RCALL SUBOPT_0x47
000cac d175      	RCALL SUBOPT_0x2B
000cad e0f0      	LDI  R31,0
000cae d248      	RCALL SUBOPT_0x4B
000caf 940e 10cc 	CALL __CWD1
000cb1 940e 0f74 	CALL __CDF1
000cb3 d067      	RCALL SUBOPT_0x9
000cb4 d223      	RCALL SUBOPT_0x46
000cb5 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000cb6 81ae      	LDD  R26,Y+6
000cb7 81bf      	LDD  R27,Y+6+1
000cb8 e0e0      	LDI  R30,LOW(0)
000cb9 93ec      	ST   X,R30
                 _0x20A0002:
000cba 8119      	LDD  R17,Y+1
000cbb 8108      	LDD  R16,Y+0
000cbc 962d      	ADIW R28,13
000cbd 9508      	RET
=======
00091d e010      	LDI  R17,LOW(0)
                 _0x2000035:
00091e ce06      	RJMP _0x2000030
                 _0x2000032:
00091f 81ae      	LDD  R26,Y+6
000920 81bf      	LDD  R27,Y+6+1
000921 940e 111f 	CALL __GETW1P
000923 940e 1167 	CALL __LOADLOCR6
000925 96ef      	ADIW R28,63
000926 966f      	ADIW R28,31
000927 9508      	RET
                 _sprintf:
000928 92ff      	PUSH R15
000929 2ef8      	MOV  R15,R24
00092a 9726      	SBIW R28,6
00092b 940e 1162 	CALL __SAVELOCR4
00092d 940e 0e7b 	CALL SUBOPT_0x3B
00092f 9730      	SBIW R30,0
000930 f419      	BRNE _0x20000B7
000931 efef      	LDI  R30,LOW(65535)
000932 efff      	LDI  R31,HIGH(65535)
000933 c023      	RJMP _0x20A0008
                 _0x20000B7:
000934 01de      	MOVW R26,R28
000935 9616      	ADIW R26,6
000936 940e 109e 	CALL __ADDW2R15
000938 018d      	MOVW R16,R26
000939 940e 0e7b 	CALL SUBOPT_0x3B
00093b 83ee      	STD  Y+6,R30
00093c 83ff      	STD  Y+6+1,R31
00093d e0e0      	LDI  R30,LOW(0)
00093e 87e8      	STD  Y+8,R30
00093f 87e9      	STD  Y+8+1,R30
000940 01de      	MOVW R26,R28
000941 961a      	ADIW R26,10
000942 940e 0e82 	CALL SUBOPT_0x3C
000944 93fa      	ST   -Y,R31
000945 93ea      	ST   -Y,R30
000946 931a      	ST   -Y,R17
000947 930a      	ST   -Y,R16
000948 e0e3      	LDI  R30,LOW(_put_buff_G100)
000949 e0f6      	LDI  R31,HIGH(_put_buff_G100)
00094a 93fa      	ST   -Y,R31
00094b 93ea      	ST   -Y,R30
00094c 01fe      	MOVW R30,R28
00094d 963a      	ADIW R30,10
00094e 93fa      	ST   -Y,R31
00094f 93ea      	ST   -Y,R30
000950 ddbb      	RCALL __print_G100
000951 019f      	MOVW R18,R30
000952 81ae      	LDD  R26,Y+6
000953 81bf      	LDD  R27,Y+6+1
000954 e0e0      	LDI  R30,LOW(0)
000955 93ec      	ST   X,R30
000956 01f9      	MOVW R30,R18
                 _0x20A0008:
000957 940e 1169 	CALL __LOADLOCR4
000959 962a      	ADIW R28,10
00095a 90ff      	POP  R15
00095b 9508      	RET
                 _get_buff_G100:
00095c 931a      	ST   -Y,R17
00095d 81a9      	LDD  R26,Y+1
00095e 81ba      	LDD  R27,Y+1+1
00095f e0e0      	LDI  R30,LOW(0)
000960 93ec      	ST   X,R30
000961 81ab      	LDD  R26,Y+3
000962 81bc      	LDD  R27,Y+3+1
000963 91ec      	LD   R30,X
000964 2f1e      	MOV  R17,R30
000965 30e0      	CPI  R30,0
000966 f019      	BREQ _0x20000BF
000967 e0e0      	LDI  R30,LOW(0)
000968 93ec      	ST   X,R30
000969 c016      	RJMP _0x20000C0
                 _0x20000BF:
00096a 81a9      	LDD  R26,Y+1
00096b 81ba      	LDD  R27,Y+1+1
00096c 9611      	ADIW R26,1
00096d 940e 111f 	CALL __GETW1P
00096f 9730      	SBIW R30,0
000970 f071      	BREQ _0x20000C1
000971 81e9      	LDD  R30,Y+1
000972 81fa      	LDD  R31,Y+1+1
000973 81a1      	LDD  R26,Z+1
000974 81b2      	LDD  R27,Z+2
000975 91ec      	LD   R30,X
000976 2f1e      	MOV  R17,R30
000977 30e0      	CPI  R30,0
000978 f029      	BREQ _0x20000C2
000979 81a9      	LDD  R26,Y+1
00097a 81ba      	LDD  R27,Y+1+1
00097b 9611      	ADIW R26,1
00097c 940e 0dbc 	CALL SUBOPT_0x20
                 _0x20000C2:
00097e c001      	RJMP _0x20000C3
                 _0x20000C1:
00097f e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000980 2fe1      	MOV  R30,R17
000981 8118      	LDD  R17,Y+0
                 _0x20A0007:
000982 9625      	ADIW R28,5
000983 9508      	RET
                 __scanf_G100:
000984 9725      	SBIW R28,5
000985 940e 1160 	CALL __SAVELOCR6
000987 e0e0      	LDI  R30,LOW(0)
000988 e0f0      	LDI  R31,HIGH(0)
000989 87e8      	STD  Y+8,R30
00098a 87f9      	STD  Y+8+1,R31
00098b 2f4e      	MOV  R20,R30
                 _0x20000C4:
00098c 89e9      	LDD  R30,Y+17
00098d 89fa      	LDD  R31,Y+17+1
00098e 9631      	ADIW R30,1
00098f 8be9      	STD  Y+17,R30
000990 8bfa      	STD  Y+17+1,R31
000991 9731      	SBIW R30,1
000992 91e4      	LPM  R30,Z
000993 2f3e      	MOV  R19,R30
000994 30e0      	CPI  R30,0
000995 f411      	BRNE PC+3
000996 940c 0ab1 	JMP _0x20000C6
000998 940e 0e87 	CALL SUBOPT_0x3D
00099a f0c1      	BREQ _0x20000C7
                 _0x20000C8:
00099b b7ed      	IN   R30,SPL
00099c b7fe      	IN   R31,SPH
00099d 93fa      	ST   -Y,R31
00099e 93ea      	ST   -Y,R30
00099f 934f      	PUSH R20
0009a0 940e 0e8c 	CALL SUBOPT_0x3E
0009a2 914f      	POP  R20
0009a3 2f3e      	MOV  R19,R30
0009a4 30e0      	CPI  R30,0
0009a5 f019      	BREQ _0x20000CB
0009a6 940e 0e87 	CALL SUBOPT_0x3D
0009a8 f409      	BRNE _0x20000CC
                 _0x20000CB:
0009a9 c007      	RJMP _0x20000CA
                 _0x20000CC:
0009aa 940e 0e94 	CALL SUBOPT_0x3F
0009ac f41c      	BRGE _0x20000CD
0009ad efef      	LDI  R30,LOW(65535)
0009ae efff      	LDI  R31,HIGH(65535)
0009af c103      	RJMP _0x20A0005
                 _0x20000CD:
0009b0 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0009b1 2f43      	MOV  R20,R19
0009b2 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0009b3 3235      	CPI  R19,37
0009b4 f011      	BREQ PC+3
0009b5 940c 0a98 	JMP _0x20000CF
0009b7 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0009b8 89e9      	LDD  R30,Y+17
0009b9 89fa      	LDD  R31,Y+17+1
0009ba 9135      	LPM  R19,Z+
0009bb 8be9      	STD  Y+17,R30
0009bc 8bfa      	STD  Y+17+1,R31
0009bd 3330      	CPI  R19,48
0009be f010      	BRLO _0x20000D4
0009bf 333a      	CPI  R19,58
0009c0 f008      	BRLO _0x20000D3
                 _0x20000D4:
0009c1 c007      	RJMP _0x20000D2
                 _0x20000D3:
0009c2 e0aa      	LDI  R26,LOW(10)
0009c3 9f5a      	MUL  R21,R26
0009c4 2d50      	MOV  R21,R0
0009c5 2fe3      	MOV  R30,R19
0009c6 53e0      	SUBI R30,LOW(48)
0009c7 0f5e      	ADD  R21,R30
0009c8 cfef      	RJMP _0x20000D0
                 _0x20000D2:
0009c9 3030      	CPI  R19,0
0009ca f409      	BRNE _0x20000D6
0009cb c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0009cc b7ed      	IN   R30,SPL
0009cd b7fe      	IN   R31,SPH
0009ce 93fa      	ST   -Y,R31
0009cf 93ea      	ST   -Y,R30
0009d0 934f      	PUSH R20
0009d1 940e 0e8c 	CALL SUBOPT_0x3E
0009d3 914f      	POP  R20
0009d4 2f2e      	MOV  R18,R30
0009d5 93ea      	ST   -Y,R30
0009d6 940e 0bc7 	CALL _isspace
0009d8 30e0      	CPI  R30,0
0009d9 f039      	BREQ _0x20000D9
0009da 940e 0e94 	CALL SUBOPT_0x3F
0009dc f41c      	BRGE _0x20000DA
0009dd efef      	LDI  R30,LOW(65535)
0009de efff      	LDI  R31,HIGH(65535)
0009df c0d3      	RJMP _0x20A0005
                 _0x20000DA:
0009e0 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
0009e1 3020      	CPI  R18,0
0009e2 f409      	BRNE _0x20000DB
0009e3 c0c4      	RJMP _0x20000DC
                 _0x20000DB:
0009e4 2f42      	MOV  R20,R18
0009e5 3050      	CPI  R21,0
0009e6 f409      	BRNE _0x20000DD
0009e7 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
0009e8 2fe3      	MOV  R30,R19
0009e9 36e3      	CPI  R30,LOW(0x63)
0009ea f499      	BRNE _0x20000E1
0009eb 940e 0e99 	CALL SUBOPT_0x40
0009ed b7ed      	IN   R30,SPL
0009ee b7fe      	IN   R31,SPH
0009ef 93fa      	ST   -Y,R31
0009f0 93ea      	ST   -Y,R30
0009f1 934f      	PUSH R20
0009f2 940e 0e8c 	CALL SUBOPT_0x3E
0009f4 914f      	POP  R20
0009f5 01d8      	MOVW R26,R16
0009f6 93ec      	ST   X,R30
0009f7 940e 0e94 	CALL SUBOPT_0x3F
0009f9 f41c      	BRGE _0x20000E2
0009fa efef      	LDI  R30,LOW(65535)
0009fb efff      	LDI  R31,HIGH(65535)
0009fc c0b6      	RJMP _0x20A0005
                 _0x20000E2:
0009fd c097      	RJMP _0x20000E0
                 _0x20000E1:
0009fe 37e3      	CPI  R30,LOW(0x73)
0009ff f541      	BRNE _0x20000EB
000a00 940e 0e99 	CALL SUBOPT_0x40
                 _0x20000E4:
000a02 2fe5      	MOV  R30,R21
000a03 5051      	SUBI R21,1
000a04 30e0      	CPI  R30,0
000a05 f0f1      	BREQ _0x20000E6
000a06 b7ed      	IN   R30,SPL
000a07 b7fe      	IN   R31,SPH
000a08 93fa      	ST   -Y,R31
000a09 93ea      	ST   -Y,R30
000a0a 934f      	PUSH R20
000a0b 940e 0e8c 	CALL SUBOPT_0x3E
000a0d 914f      	POP  R20
000a0e 2f3e      	MOV  R19,R30
000a0f 30e0      	CPI  R30,0
000a10 f019      	BREQ _0x20000E8
000a11 940e 0e87 	CALL SUBOPT_0x3D
000a13 f039      	BREQ _0x20000E7
                 _0x20000E8:
000a14 940e 0e94 	CALL SUBOPT_0x3F
000a16 f41c      	BRGE _0x20000EA
000a17 efef      	LDI  R30,LOW(65535)
000a18 efff      	LDI  R31,HIGH(65535)
000a19 c099      	RJMP _0x20A0005
                 _0x20000EA:
000a1a c009      	RJMP _0x20000E6
                 _0x20000E7:
000a1b 931f      	PUSH R17
000a1c 930f      	PUSH R16
                +
000a1d 5f0f     +SUBI R16 , LOW ( - 1 )
000a1e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a1f 2fe3      	MOV  R30,R19
000a20 91af      	POP  R26
000a21 91bf      	POP  R27
000a22 93ec      	ST   X,R30
000a23 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000a24 01d8      	MOVW R26,R16
000a25 e0e0      	LDI  R30,LOW(0)
000a26 93ec      	ST   X,R30
000a27 c06d      	RJMP _0x20000E0
                 _0x20000EB:
000a28 e0e1      	LDI  R30,LOW(1)
000a29 87ea      	STD  Y+10,R30
000a2a 2fe3      	MOV  R30,R19
000a2b 36e4      	CPI  R30,LOW(0x64)
000a2c f011      	BREQ _0x20000F0
000a2d 36e9      	CPI  R30,LOW(0x69)
000a2e f419      	BRNE _0x20000F1
                 _0x20000F0:
000a2f e0e0      	LDI  R30,LOW(0)
000a30 87ea      	STD  Y+10,R30
000a31 c002      	RJMP _0x20000F2
                 _0x20000F1:
000a32 37e5      	CPI  R30,LOW(0x75)
000a33 f411      	BRNE _0x20000F3
                 _0x20000F2:
000a34 e02a      	LDI  R18,LOW(10)
000a35 c008      	RJMP _0x20000EE
                 _0x20000F3:
000a36 37e8      	CPI  R30,LOW(0x78)
000a37 f411      	BRNE _0x20000F4
000a38 e120      	LDI  R18,LOW(16)
000a39 c004      	RJMP _0x20000EE
                 _0x20000F4:
000a3a 32e5      	CPI  R30,LOW(0x25)
000a3b f409      	BRNE _0x20000F7
000a3c c05b      	RJMP _0x20000F6
                 _0x20000F7:
000a3d c073      	RJMP _0x20A0006
                 _0x20000EE:
000a3e e0e0      	LDI  R30,LOW(0)
000a3f 83ee      	STD  Y+6,R30
000a40 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000a41 2fe5      	MOV  R30,R21
000a42 5051      	SUBI R21,1
000a43 30e0      	CPI  R30,0
000a44 f411      	BRNE PC+3
000a45 940c 0a88 	JMP _0x20000FA
000a47 b7ed      	IN   R30,SPL
000a48 b7fe      	IN   R31,SPH
000a49 93fa      	ST   -Y,R31
000a4a 93ea      	ST   -Y,R30
000a4b 934f      	PUSH R20
000a4c 940e 0e8c 	CALL SUBOPT_0x3E
000a4e 914f      	POP  R20
000a4f 2f3e      	MOV  R19,R30
000a50 32e1      	CPI  R30,LOW(0x21)
000a51 f438      	BRSH _0x20000FB
000a52 940e 0e94 	CALL SUBOPT_0x3F
000a54 f41c      	BRGE _0x20000FC
000a55 efef      	LDI  R30,LOW(65535)
000a56 efff      	LDI  R31,HIGH(65535)
000a57 c05b      	RJMP _0x20A0005
                 _0x20000FC:
000a58 c017      	RJMP _0x20000FD
                 _0x20000FB:
000a59 85ea      	LDD  R30,Y+10
000a5a 30e0      	CPI  R30,0
000a5b f439      	BRNE _0x20000FE
000a5c 323d      	CPI  R19,45
000a5d f419      	BRNE _0x20000FF
000a5e efef      	LDI  R30,LOW(255)
000a5f 87ea      	STD  Y+10,R30
000a60 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000a61 e0e1      	LDI  R30,LOW(1)
000a62 87ea      	STD  Y+10,R30
                 _0x20000FE:
000a63 3120      	CPI  R18,16
000a64 f431      	BRNE _0x2000101
000a65 933a      	ST   -Y,R19
000a66 940e 0bd1 	CALL _isxdigit
000a68 30e0      	CPI  R30,0
000a69 f031      	BREQ _0x20000FD
000a6a c007      	RJMP _0x2000103
                 _0x2000101:
000a6b 933a      	ST   -Y,R19
000a6c 940e 0bbf 	CALL _isdigit
000a6e 30e0      	CPI  R30,0
000a6f f411      	BRNE _0x2000104
                 _0x20000FD:
000a70 2f43      	MOV  R20,R19
000a71 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000a72 3631      	CPI  R19,97
000a73 f010      	BRLO _0x2000105
000a74 5537      	SUBI R19,LOW(87)
000a75 c005      	RJMP _0x2000106
                 _0x2000105:
000a76 3431      	CPI  R19,65
000a77 f010      	BRLO _0x2000107
000a78 5337      	SUBI R19,LOW(55)
000a79 c001      	RJMP _0x2000108
                 _0x2000107:
000a7a 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000a7b 2fe2      	MOV  R30,R18
000a7c 81ae      	LDD  R26,Y+6
000a7d 81bf      	LDD  R27,Y+6+1
000a7e e0f0      	LDI  R31,0
000a7f 940e 10c3 	CALL __MULW12U
000a81 01df      	MOVW R26,R30
000a82 2fe3      	MOV  R30,R19
000a83 940e 0d2a 	CALL SUBOPT_0x10
000a85 83ee      	STD  Y+6,R30
000a86 83ff      	STD  Y+6+1,R31
000a87 cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000a88 940e 0e99 	CALL SUBOPT_0x40
000a8a 85ea      	LDD  R30,Y+10
000a8b 81ae      	LDD  R26,Y+6
000a8c 81bf      	LDD  R27,Y+6+1
000a8d e0f0      	LDI  R31,0
000a8e fde7      	SBRC R30,7
000a8f efff      	SER  R31
000a90 940e 10c3 	CALL __MULW12U
000a92 01d8      	MOVW R26,R16
000a93 93ed      	ST   X+,R30
000a94 93fc      	ST   X,R31
                 _0x20000E0:
000a95 940e 0e14 	CALL SUBOPT_0x2D
000a97 c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000a98 b7ed      	IN   R30,SPL
000a99 b7fe      	IN   R31,SPH
000a9a 93fa      	ST   -Y,R31
000a9b 93ea      	ST   -Y,R30
000a9c 934f      	PUSH R20
000a9d 940e 0e8c 	CALL SUBOPT_0x3E
000a9f 914f      	POP  R20
000aa0 17e3      	CP   R30,R19
000aa1 f071      	BREQ _0x200010A
000aa2 940e 0e94 	CALL SUBOPT_0x3F
000aa4 f41c      	BRGE _0x200010B
000aa5 efef      	LDI  R30,LOW(65535)
000aa6 efff      	LDI  R31,HIGH(65535)
000aa7 c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000aa8 85e8      	LDD  R30,Y+8
000aa9 85f9      	LDD  R31,Y+8+1
000aaa 9730      	SBIW R30,0
000aab f419      	BRNE _0x200010C
000aac efef      	LDI  R30,LOW(65535)
000aad efff      	LDI  R31,HIGH(65535)
000aae c004      	RJMP _0x20A0005
                 _0x200010C:
000aaf c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000ab0 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000ab1 85e8      	LDD  R30,Y+8
000ab2 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000ab3 940e 1167 	CALL __LOADLOCR6
000ab5 9663      	ADIW R28,19
000ab6 9508      	RET
                 _sscanf:
000ab7 92ff      	PUSH R15
000ab8 2ef8      	MOV  R15,R24
000ab9 9723      	SBIW R28,3
000aba 931a      	ST   -Y,R17
000abb 930a      	ST   -Y,R16
000abc 01de      	MOVW R26,R28
000abd 9617      	ADIW R26,7
000abe 940e 0e82 	CALL SUBOPT_0x3C
000ac0 9730      	SBIW R30,0
000ac1 f419      	BRNE _0x200010D
000ac2 efef      	LDI  R30,LOW(65535)
000ac3 efff      	LDI  R31,HIGH(65535)
000ac4 c01c      	RJMP _0x20A0004
                 _0x200010D:
000ac5 01de      	MOVW R26,R28
000ac6 9611      	ADIW R26,1
000ac7 940e 109e 	CALL __ADDW2R15
000ac9 018d      	MOVW R16,R26
000aca 01de      	MOVW R26,R28
000acb 9617      	ADIW R26,7
000acc 940e 0e82 	CALL SUBOPT_0x3C
000ace 83eb      	STD  Y+3,R30
000acf 83fc      	STD  Y+3+1,R31
000ad0 01de      	MOVW R26,R28
000ad1 9615      	ADIW R26,5
000ad2 940e 0e82 	CALL SUBOPT_0x3C
000ad4 93fa      	ST   -Y,R31
000ad5 93ea      	ST   -Y,R30
000ad6 931a      	ST   -Y,R17
000ad7 930a      	ST   -Y,R16
000ad8 e5ec      	LDI  R30,LOW(_get_buff_G100)
000ad9 e0f9      	LDI  R31,HIGH(_get_buff_G100)
000ada 93fa      	ST   -Y,R31
000adb 93ea      	ST   -Y,R30
000adc 01fe      	MOVW R30,R28
000add 9638      	ADIW R30,8
000ade 93fa      	ST   -Y,R31
000adf 93ea      	ST   -Y,R30
000ae0 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000ae1 8119      	LDD  R17,Y+1
000ae2 8108      	LDD  R16,Y+0
000ae3 9625      	ADIW R28,5
000ae4 90ff      	POP  R15
000ae5 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000ae6 817b         ldd  r23,y+3
000ae7 816a         ldd  r22,y+2
000ae8 81f9         ldd  r31,y+1
000ae9 81e8         ld   r30,y
000aea fb77         bst  r23,7
000aeb 0f77         lsl  r23
000aec fd67         sbrc r22,7
000aed 6071         sbr  r23,1
000aee 2f97         mov  r25,r23
000aef 579e         subi r25,0x7e
000af0 f081         breq __ftrunc0
000af1 f078         brcs __ftrunc0
000af2 3198         cpi  r25,24
000af3 f490         brsh __ftrunc1
000af4 27aa         clr  r26
000af5 27bb         clr  r27
000af6 2788         clr  r24
                 __ftrunc2:
000af7 9408         sec
000af8 9587         ror  r24
000af9 95b7         ror  r27
000afa 95a7         ror  r26
000afb 959a         dec  r25
000afc f7d1         brne __ftrunc2
000afd 23ea         and  r30,r26
000afe 23fb         and  r31,r27
000aff 2368         and  r22,r24
000b00 c005         rjmp __ftrunc1
                 __ftrunc0:
000b01 94e8         clt
000b02 2777         clr  r23
000b03 27ee         clr  r30
000b04 27ff         clr  r31
000b05 2766         clr  r22
                 __ftrunc1:
000b06 776f         cbr  r22,0x80
000b07 9576         lsr  r23
000b08 f408         brcc __ftrunc3
000b09 6860         sbr  r22,0x80
                 __ftrunc3:
000b0a f977         bld  r23,7
000b0b 91a9         ld   r26,y+
000b0c 91b9         ld   r27,y+
000b0d 9189         ld   r24,y+
000b0e 9199         ld   r25,y+
000b0f 17ea         cp   r30,r26
000b10 07fb         cpc  r31,r27
000b11 0768         cpc  r22,r24
000b12 0779         cpc  r23,r25
000b13 fb97         bst  r25,7
000b14 9508         ret
                 _floor:
000b15 940e 0d10 	CALL SUBOPT_0xC
000b17 940e 113f 	CALL __PUTPARD1
000b19 940e 0ae6 	CALL _ftrunc
000b1b 940e 1138 	CALL __PUTD1S0
000b1d f419          brne __floor1
                 __floor0:
000b1e 940e 0d10 	CALL SUBOPT_0xC
000b20 c09c      	RJMP _0x20A0003
                 __floor1:
000b21 f7e6          brtc __floor0
000b22 940e 0d10 	CALL SUBOPT_0xC
                +
000b24 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b25 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b26 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b27 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b28 940e 0f94 	CALL __SUBF12
000b2a c092      	RJMP _0x20A0003
                 _sin:
000b2b 9724      	SBIW R28,4
000b2c 931a      	ST   -Y,R17
000b2d e010      	LDI  R17,0
000b2e 940e 0ea4 	CALL SUBOPT_0x41
                +
000b30 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000b31 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000b32 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000b33 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000b34 940e 0feb 	CALL __MULF12
000b36 940e 0ea9 	CALL SUBOPT_0x42
000b38 940e 0eae 	CALL SUBOPT_0x43
000b3a 940e 0e04 	CALL SUBOPT_0x2A
000b3c 940e 0ea4 	CALL SUBOPT_0x41
000b3e 940e 0cf7 	CALL SUBOPT_0x9
000b40 940e 0ea9 	CALL SUBOPT_0x42
000b42 940e 0eb3 	CALL SUBOPT_0x44
000b44 940e 107e 	CALL __CMPF12
000b46 f009      	BREQ PC+2
000b47 f410      	BRCC PC+3
000b48 940c 0b55 	JMP  _0x2020017
000b4a 940e 0eae 	CALL SUBOPT_0x43
                +
000b4c e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b4d e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b4e e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b4f e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b50 940e 0f94 	CALL __SUBF12
000b52 940e 0ea9 	CALL SUBOPT_0x42
000b54 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000b55 940e 0ea4 	CALL SUBOPT_0x41
                +
000b57 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000b58 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000b59 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000b5a e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000b5b 940e 107e 	CALL __CMPF12
000b5d f009      	BREQ PC+2
000b5e f410      	BRCC PC+3
000b5f 940c 0b67 	JMP  _0x2020018
000b61 940e 0eb3 	CALL SUBOPT_0x44
000b63 940e 0f94 	CALL __SUBF12
000b65 940e 0ea9 	CALL SUBOPT_0x42
                 _0x2020018:
000b67 3010      	CPI  R17,0
000b68 f031      	BREQ _0x2020019
000b69 940e 0eae 	CALL SUBOPT_0x43
000b6b 940e 0ef5 	CALL __ANEGF1
000b6d 940e 0ea9 	CALL SUBOPT_0x42
                 _0x2020019:
000b6f 940e 0eae 	CALL SUBOPT_0x43
000b71 940e 0ea4 	CALL SUBOPT_0x41
000b73 940e 0feb 	CALL __MULF12
                +
000b75 83e9     +STD Y + 1 , R30
000b76 83fa     +STD Y + 1 + 1 , R31
000b77 836b     +STD Y + 1 + 2 , R22
000b78 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000b79 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000b7a ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000b7b e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000b7c e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000b7d 940e 0feb 	CALL __MULF12
000b7f 01df      	MOVW R26,R30
000b80 01cb      	MOVW R24,R22
                +
000b81 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000b82 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000b83 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000b84 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000b85 940e 0cf7 	CALL SUBOPT_0x9
000b87 940e 0eb9 	CALL SUBOPT_0x45
                +
000b89 e4ac     +LDI R26 , LOW ( 0x4104534C )
000b8a e5b3     +LDI R27 , HIGH ( 0x4104534C )
000b8b e084     +LDI R24 , BYTE3 ( 0x4104534C )
000b8c e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000b8d 940e 0f9b 	CALL __ADDF12
000b8f 940e 0ea4 	CALL SUBOPT_0x41
000b91 940e 0feb 	CALL __MULF12
000b93 937f      	PUSH R23
000b94 936f      	PUSH R22
000b95 93ff      	PUSH R31
000b96 93ef      	PUSH R30
                +
000b97 81e9     +LDD R30 , Y + 1
000b98 81fa     +LDD R31 , Y + 1 + 1
000b99 816b     +LDD R22 , Y + 1 + 2
000b9a 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000b9b e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000b9c eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000b9d ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000b9e e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000b9f 940e 0f9b 	CALL __ADDF12
000ba1 940e 0eb9 	CALL SUBOPT_0x45
                +
000ba3 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000ba4 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000ba5 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000ba6 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000ba7 940e 0f9b 	CALL __ADDF12
000ba9 91af      	POP  R26
000baa 91bf      	POP  R27
000bab 918f      	POP  R24
000bac 919f      	POP  R25
000bad 940e 1039 	CALL __DIVF21
000baf 8118      	LDD  R17,Y+0
000bb0 9629      	ADIW R28,9
000bb1 9508      	RET
                 _cos:
000bb2 940e 1133 	CALL __GETD2S0
                +
000bb4 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000bb5 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000bb6 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000bb7 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000bb8 940e 0f94 	CALL __SUBF12
000bba 940e 113f 	CALL __PUTPARD1
000bbc df6e      	RCALL _sin
                 _0x20A0003:
000bbd 9624      	ADIW R28,4
000bbe 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000bbf e0e1          ldi  r30,1
000bc0 91f9          ld   r31,y+
000bc1 33f0          cpi  r31,'0'
000bc2 f010          brlo isdigit0
000bc3 33fa          cpi  r31,'9'+1
000bc4 f008          brlo isdigit1
                 isdigit0:
000bc5 27ee          clr  r30
                 isdigit1:
000bc6 9508          ret
                 _isspace:
000bc7 e0e1          ldi  r30,1
000bc8 91f9          ld   r31,y+
000bc9 32f0          cpi  r31,' '
000bca f029          breq isspace1
000bcb 30f9          cpi  r31,9
000bcc f010          brlo isspace0
000bcd 30fe          cpi  r31,13+1
000bce f008          brlo isspace1
                 isspace0:
000bcf 27ee          clr  r30
                 isspace1:
000bd0 9508          ret
                 _isxdigit:
000bd1 e0e1          ldi  r30,1
000bd2 91f9          ld   r31,y+
000bd3 53f0          subi r31,0x30
000bd4 f040          brcs isxdigit0
000bd5 30fa          cpi  r31,10
000bd6 f038          brcs isxdigit1
000bd7 75ff          andi r31,0x5f
000bd8 50f7          subi r31,7
000bd9 30fa          cpi  r31,10
000bda f010          brcs isxdigit0
000bdb 31f0          cpi  r31,16
000bdc f008          brcs isxdigit1
                 isxdigit0:
000bdd 27ee          clr  r30
                 isxdigit1:
000bde 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000bdf 91e9          ld   r30,y+
000be0 91f9          ld   r31,y+
000be1 91a9          ld   r26,y+
000be2 91b9          ld   r27,y+
000be3 01cd          movw r24,r26
                 strcpyf0:
000be4 9005      	lpm  r0,z+
000be5 920d          st   x+,r0
000be6 2000          tst  r0
000be7 f7e1          brne strcpyf0
000be8 01fc          movw r30,r24
000be9 9508          ret
                 _strlen:
000bea 91a9          ld   r26,y+
000beb 91b9          ld   r27,y+
000bec 27ee          clr  r30
000bed 27ff          clr  r31
                 strlen0:
000bee 916d          ld   r22,x+
000bef 2366          tst  r22
000bf0 f011          breq strlen1
000bf1 9631          adiw r30,1
000bf2 cffb          rjmp strlen0
                 strlen1:
000bf3 9508          ret
                 _strlenf:
000bf4 27aa          clr  r26
000bf5 27bb          clr  r27
000bf6 91e9          ld   r30,y+
000bf7 91f9          ld   r31,y+
                 strlenf0:
000bf8 9005      	lpm  r0,z+
000bf9 2000          tst  r0
000bfa f011          breq strlenf1
000bfb 9611          adiw r26,1
000bfc cffb          rjmp strlenf0
                 strlenf1:
000bfd 01fd          movw r30,r26
000bfe 9508          ret
                 
                 	.CSEG
                 _ftoa:
000bff 9724      	SBIW R28,4
000c00 d0d4      	RCALL SUBOPT_0x4
000c01 e0e0      	LDI  R30,LOW(0)
000c02 83ea      	STD  Y+2,R30
000c03 e3ef      	LDI  R30,LOW(63)
000c04 83eb      	STD  Y+3,R30
000c05 931a      	ST   -Y,R17
000c06 930a      	ST   -Y,R16
000c07 85eb      	LDD  R30,Y+11
000c08 85fc      	LDD  R31,Y+11+1
000c09 3fef      	CPI  R30,LOW(0xFFFF)
000c0a efaf      	LDI  R26,HIGH(0xFFFF)
000c0b 07fa      	CPC  R31,R26
000c0c f429      	BRNE _0x208000D
000c0d d2b2      	RCALL SUBOPT_0x46
                +
000c0e efe4     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000c0f e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000c10 d1b1      	RCALL SUBOPT_0x21
000c11 c085      	RJMP _0x20A0002
                 _0x208000D:
000c12 3fef      	CPI  R30,LOW(0x7FFF)
000c13 e7af      	LDI  R26,HIGH(0x7FFF)
000c14 07fa      	CPC  R31,R26
000c15 f429      	BRNE _0x208000C
000c16 d2a9      	RCALL SUBOPT_0x46
                +
000c17 efe5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000c18 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000c19 d1a8      	RCALL SUBOPT_0x21
000c1a c07c      	RJMP _0x20A0002
                 _0x208000C:
000c1b 85ac      	LDD  R26,Y+12
000c1c 23aa      	TST  R26
000c1d f452      	BRPL _0x208000F
                +
000c1e 85e9     +LDD R30 , Y + 9
000c1f 85fa     +LDD R31 , Y + 9 + 1
000c20 856b     +LDD R22 , Y + 9 + 2
000c21 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c22 940e 0ef5 	CALL __ANEGF1
000c24 d2a0      	RCALL SUBOPT_0x47
000c25 d2a4      	RCALL SUBOPT_0x48
000c26 e2ed      	LDI  R30,LOW(45)
000c27 93ec      	ST   X,R30
                 _0x208000F:
000c28 85a8      	LDD  R26,Y+8
000c29 30a7      	CPI  R26,LOW(0x7)
000c2a f010      	BRLO _0x2080010
000c2b e0e6      	LDI  R30,LOW(6)
000c2c 87e8      	STD  Y+8,R30
                 _0x2080010:
000c2d 8518      	LDD  R17,Y+8
                 _0x2080011:
000c2e 2fe1      	MOV  R30,R17
000c2f 5011      	SUBI R17,1
000c30 30e0      	CPI  R30,0
000c31 f021      	BREQ _0x2080013
000c32 d29e      	RCALL SUBOPT_0x49
000c33 d1c9      	RCALL SUBOPT_0x29
000c34 d2a1      	RCALL SUBOPT_0x4A
000c35 cff8      	RJMP _0x2080011
                 _0x2080013:
000c36 d2a4      	RCALL SUBOPT_0x4B
000c37 940e 0f9b 	CALL __ADDF12
000c39 d28b      	RCALL SUBOPT_0x47
000c3a e010      	LDI  R17,LOW(0)
                +
000c3b e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c3c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c3d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c3e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000c3f d296      	RCALL SUBOPT_0x4A
                 _0x2080014:
000c40 d29a      	RCALL SUBOPT_0x4B
000c41 940e 107e 	CALL __CMPF12
000c43 f060      	BRLO _0x2080016
000c44 d28c      	RCALL SUBOPT_0x49
000c45 d1a4      	RCALL SUBOPT_0x26
000c46 d28f      	RCALL SUBOPT_0x4A
000c47 5f1f      	SUBI R17,-LOW(1)
000c48 3217      	CPI  R17,39
000c49 f028      	BRLO _0x2080017
000c4a d275      	RCALL SUBOPT_0x46
                +
000c4b efe9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000c4c e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000c4d d174      	RCALL SUBOPT_0x21
000c4e c048      	RJMP _0x20A0002
                 _0x2080017:
000c4f cff0      	RJMP _0x2080014
                 _0x2080016:
000c50 3010      	CPI  R17,0
000c51 f421      	BRNE _0x2080018
000c52 d277      	RCALL SUBOPT_0x48
000c53 e3e0      	LDI  R30,LOW(48)
000c54 93ec      	ST   X,R30
000c55 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000c56 2fe1      	MOV  R30,R17
000c57 5011      	SUBI R17,1
000c58 30e0      	CPI  R30,0
000c59 f0c9      	BREQ _0x208001C
000c5a d276      	RCALL SUBOPT_0x49
000c5b d1a1      	RCALL SUBOPT_0x29
000c5c d199      	RCALL SUBOPT_0x28
000c5d d1a6      	RCALL SUBOPT_0x2A
000c5e d277      	RCALL SUBOPT_0x4A
000c5f d27b      	RCALL SUBOPT_0x4B
000c60 940e 1039 	CALL __DIVF21
000c62 940e 0f28 	CALL __CFD1U
000c64 2f0e      	MOV  R16,R30
000c65 d264      	RCALL SUBOPT_0x48
000c66 d1a8      	RCALL SUBOPT_0x2C
000c67 e0f0      	LDI  R31,0
000c68 d268      	RCALL SUBOPT_0x49
000c69 940e 10b9 	CALL __CWD1
000c6b 940e 0f61 	CALL __CDF1
000c6d 940e 0feb 	CALL __MULF12
000c6f d274      	RCALL SUBOPT_0x4C
000c70 d086      	RCALL SUBOPT_0x9
000c71 d253      	RCALL SUBOPT_0x47
000c72 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000c73 85e8      	LDD  R30,Y+8
000c74 30e0      	CPI  R30,0
000c75 f0e9      	BREQ _0x20A0001
000c76 d253      	RCALL SUBOPT_0x48
000c77 e2ee      	LDI  R30,LOW(46)
000c78 93ec      	ST   X,R30
                 _0x208001E:
000c79 85e8      	LDD  R30,Y+8
000c7a 50e1      	SUBI R30,LOW(1)
000c7b 87e8      	STD  Y+8,R30
000c7c 5fef      	SUBI R30,-LOW(1)
000c7d f0a9      	BREQ _0x2080020
000c7e d265      	RCALL SUBOPT_0x4C
000c7f d16a      	RCALL SUBOPT_0x26
000c80 d244      	RCALL SUBOPT_0x47
                +
000c81 85e9     +LDD R30 , Y + 9
000c82 85fa     +LDD R31 , Y + 9 + 1
000c83 856b     +LDD R22 , Y + 9 + 2
000c84 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c85 940e 0f28 	CALL __CFD1U
000c87 2f0e      	MOV  R16,R30
000c88 d241      	RCALL SUBOPT_0x48
000c89 d185      	RCALL SUBOPT_0x2C
000c8a e0f0      	LDI  R31,0
000c8b d258      	RCALL SUBOPT_0x4C
000c8c 940e 10b9 	CALL __CWD1
000c8e 940e 0f61 	CALL __CDF1
000c90 d066      	RCALL SUBOPT_0x9
000c91 d233      	RCALL SUBOPT_0x47
000c92 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000c93 81ae      	LDD  R26,Y+6
000c94 81bf      	LDD  R27,Y+6+1
000c95 e0e0      	LDI  R30,LOW(0)
000c96 93ec      	ST   X,R30
                 _0x20A0002:
000c97 8119      	LDD  R17,Y+1
000c98 8108      	LDD  R16,Y+0
000c99 962d      	ADIW R28,13
000c9a 9508      	RET
>>>>>>> merget
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 _TIMER1_OVERFLOW:
000578           	.BYTE 0x2
                 __seed_G104:
00057a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
<<<<<<< HEAD
000cbe 81aa      	LDD  R26,Y+2
000cbf 81bb      	LDD  R27,Y+2+1
000cc0 27ee      	CLR  R30
000cc1 0fa1      	ADD  R26,R17
000cc2 1fbe      	ADC  R27,R30
000cc3 91ec      	LD   R30,X
000cc4 9508      	RET
=======
000c9b 81aa      	LDD  R26,Y+2
000c9c 81bb      	LDD  R27,Y+2+1
000c9d 27ee      	CLR  R30
000c9e 0fa1      	ADD  R26,R17
000c9f 1fbe      	ADC  R27,R30
000ca0 91ec      	LD   R30,X
000ca1 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
<<<<<<< HEAD
000cc5 9728      	SBIW R28,8
000cc6 940e 117b 	CALL __SAVELOCR4
                +
000cc8 e020     +LDI R18 , LOW ( 0 )
000cc9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000cca 2444      	CLR  R4
000ccb 89e8      	LDD  R30,Y+16
000ccc 83ec      	STD  Y+4,R30
000ccd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000cce 83ed      	STD  Y+5,R30
000ccf 85ee      	LDD  R30,Y+14
000cd0 85ff      	LDD  R31,Y+14+1
000cd1 940e 10c1 	CALL __ASRW8
000cd3 83ee      	STD  Y+6,R30
000cd4 85ee      	LDD  R30,Y+14
000cd5 83ef      	STD  Y+7,R30
000cd6 85ec      	LDD  R30,Y+12
000cd7 85fd      	LDD  R31,Y+12+1
000cd8 940e 10c1 	CALL __ASRW8
000cda 87e8      	STD  Y+8,R30
000cdb 85ec      	LDD  R30,Y+12
000cdc 87e9      	STD  Y+9,R30
000cdd e0e0      	LDI  R30,LOW(0)
000cde 87ea      	STD  Y+10,R30
000cdf 87eb      	STD  Y+11,R30
000ce0 01fe      	MOVW R30,R28
000ce1 9634      	ADIW R30,4
000ce2 93fa      	ST   -Y,R31
000ce3 93ea      	ST   -Y,R30
000ce4 e0e6      	LDI  R30,LOW(6)
000ce5 e0f0      	LDI  R31,HIGH(6)
000ce6 93fa      	ST   -Y,R31
000ce7 93ea      	ST   -Y,R30
000ce8 940e 022d 	CALL _CRC16
000cea 018f      	MOVW R16,R30
000ceb 01f8      	MOVW R30,R16
000cec 87ea      	STD  Y+10,R30
                +
000ced 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000cee e020     +LDI R18 , LOW ( 0 )
000cef e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000cf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000cf1 01de      	MOVW R26,R28
000cf2 9614      	ADIW R26,4
000cf3 0fa2      	ADD  R26,R18
000cf4 1fb3      	ADC  R27,R19
000cf5 91ec      	LD   R30,X
000cf6 93ea      	ST   -Y,R30
000cf7 940c 0227 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000cf9 e0e0      	LDI  R30,LOW(0)
000cfa 83e8      	ST   Y,R30
000cfb 83e9      	STD  Y+1,R30
000cfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000cfd 85ae      	LDD  R26,Y+14
000cfe 85bf      	LDD  R27,Y+14+1
000cff 940e 113c 	CALL __GETD1P
000d01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000d02 85ac      	LDD  R26,Y+12
000d03 85bd      	LDD  R27,Y+12+1
000d04 940e 113c 	CALL __GETD1P
000d06 9508      	RET
=======
000ca2 9728      	SBIW R28,8
000ca3 940e 1162 	CALL __SAVELOCR4
                +
000ca5 e020     +LDI R18 , LOW ( 0 )
000ca6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000ca7 89e8      	LDD  R30,Y+16
000ca8 83ec      	STD  Y+4,R30
000ca9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000caa 83ed      	STD  Y+5,R30
000cab 85ee      	LDD  R30,Y+14
000cac 85ff      	LDD  R31,Y+14+1
000cad 940e 10ae 	CALL __ASRW8
000caf 83ee      	STD  Y+6,R30
000cb0 85ee      	LDD  R30,Y+14
000cb1 83ef      	STD  Y+7,R30
000cb2 85ec      	LDD  R30,Y+12
000cb3 85fd      	LDD  R31,Y+12+1
000cb4 940e 10ae 	CALL __ASRW8
000cb6 87e8      	STD  Y+8,R30
000cb7 85ec      	LDD  R30,Y+12
000cb8 87e9      	STD  Y+9,R30
000cb9 e0e0      	LDI  R30,LOW(0)
000cba 87ea      	STD  Y+10,R30
000cbb 87eb      	STD  Y+11,R30
000cbc 01fe      	MOVW R30,R28
000cbd 9634      	ADIW R30,4
000cbe 93fa      	ST   -Y,R31
000cbf 93ea      	ST   -Y,R30
000cc0 e0e6      	LDI  R30,LOW(6)
000cc1 e0f0      	LDI  R31,HIGH(6)
000cc2 93fa      	ST   -Y,R31
000cc3 93ea      	ST   -Y,R30
000cc4 940e 022c 	CALL _CRC16
000cc6 018f      	MOVW R16,R30
000cc7 01f8      	MOVW R30,R16
000cc8 87ea      	STD  Y+10,R30
                +
000cc9 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000cca e020     +LDI R18 , LOW ( 0 )
000ccb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000ccc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000ccd 01de      	MOVW R26,R28
000cce 9614      	ADIW R26,4
000ccf 0fa2      	ADD  R26,R18
000cd0 1fb3      	ADC  R27,R19
000cd1 91ec      	LD   R30,X
000cd2 93ea      	ST   -Y,R30
000cd3 940c 0226 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000cd5 e0e0      	LDI  R30,LOW(0)
000cd6 83e8      	ST   Y,R30
000cd7 83e9      	STD  Y+1,R30
000cd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000cd9 85ae      	LDD  R26,Y+14
000cda 85bf      	LDD  R27,Y+14+1
000cdb 940e 1123 	CALL __GETD1P
000cdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000cde 85ac      	LDD  R26,Y+12
000cdf 85bd      	LDD  R27,Y+12+1
000ce0 940e 1123 	CALL __GETD1P
000ce2 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
<<<<<<< HEAD
000d07 e3ab     +LDI R26 , LOW ( 0x3E8FDF3B )
000d08 edbf     +LDI R27 , HIGH ( 0x3E8FDF3B )
000d09 e88f     +LDI R24 , BYTE3 ( 0x3E8FDF3B )
000d0a e39e     +LDI R25 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD2N 0x3E8FDF3B
000d0b 940e 0ffe 	CALL __MULF12
000d0d 01df      	MOVW R26,R30
000d0e 01cb      	MOVW R24,R22
                +
000d0f e0e0     +LDI R30 , LOW ( 0x40000000 )
000d10 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000d11 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000d12 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000d13 940e 104c 	CALL __DIVF21
000d15 9508      	RET
=======
000ce3 e3ab     +LDI R26 , LOW ( 0x3E8FDF3B )
000ce4 edbf     +LDI R27 , HIGH ( 0x3E8FDF3B )
000ce5 e88f     +LDI R24 , BYTE3 ( 0x3E8FDF3B )
000ce6 e39e     +LDI R25 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD2N 0x3E8FDF3B
000ce7 940e 0feb 	CALL __MULF12
000ce9 01df      	MOVW R26,R30
000cea 01cb      	MOVW R24,R22
                +
000ceb e0e0     +LDI R30 , LOW ( 0x40800000 )
000cec e0f0     +LDI R31 , HIGH ( 0x40800000 )
000ced e860     +LDI R22 , BYTE3 ( 0x40800000 )
000cee e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000cef 940e 1039 	CALL __DIVF21
000cf1 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
<<<<<<< HEAD
000d16 83ec     +STD Y + 4 , R30
000d17 83fd     +STD Y + 4 + 1 , R31
000d18 836e     +STD Y + 4 + 2 , R22
000d19 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000d1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000d1b 940e 1162 	CALL __SWAPD12
000d1d 940e 0fa7 	CALL __SUBF12
000d1f 9508      	RET
=======
000cf2 83ec     +STD Y + 4 , R30
000cf3 83fd     +STD Y + 4 + 1 , R31
000cf4 836e     +STD Y + 4 + 2 , R22
000cf5 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000cf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000cf7 940e 1149 	CALL __SWAPD12
000cf9 940e 0f94 	CALL __SUBF12
000cfb 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
<<<<<<< HEAD
000d20 81ec     +LDD R30 , Y + 4
000d21 81fd     +LDD R31 , Y + 4 + 1
000d22 816e     +LDD R22 , Y + 4 + 2
000d23 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000d24 9508      	RET
=======
000cfc 81ec     +LDD R30 , Y + 4
000cfd 81fd     +LDD R31 , Y + 4 + 1
000cfe 816e     +LDD R22 , Y + 4 + 2
000cff 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000d00 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
<<<<<<< HEAD
000d25 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000d26 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000d27 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000d28 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000d29 940e 0ffe 	CALL __MULF12
                +
000d2b e0a0     +LDI R26 , LOW ( 0x41A00000 )
000d2c e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000d2d ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000d2e e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000d2f 940e 0ffe 	CALL __MULF12
000d31 940e 0f3d 	CALL __CFD1
000d33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000d34 940e 1147 	CALL __GETD1S0
000d36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000d37 e0e0      	LDI  R30,LOW(0)
000d38 e0f0      	LDI  R31,HIGH(0)
000d39 93ed      	ST   X+,R30
000d3a 93fc      	ST   X,R31
000d3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000d3c 93fa      	ST   -Y,R31
000d3d 93ea      	ST   -Y,R30
000d3e 940e 025c 	CALL _RTU_WriteOperate0
000d40 e0e1      	LDI  R30,LOW(1)
000d41 e0f0      	LDI  R31,HIGH(1)
000d42 93fa      	ST   -Y,R31
000d43 93ea      	ST   -Y,R30
000d44 940c 0efc 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000d46 93ea      	ST   -Y,R30
000d47 e7e8      	LDI  R30,LOW(120)
000d48 e0f0      	LDI  R31,HIGH(120)
000d49 93fa      	ST   -Y,R31
000d4a 93ea      	ST   -Y,R30
000d4b e0e1      	LDI  R30,LOW(1)
000d4c e0f0      	LDI  R31,HIGH(1)
000d4d cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000d4e e0f0      	LDI  R31,0
000d4f 0fea      	ADD  R30,R26
000d50 1ffb      	ADC  R31,R27
000d51 9508      	RET
=======
000d01 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000d02 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000d03 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000d04 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000d05 940e 0feb 	CALL __MULF12
                +
000d07 e0a0     +LDI R26 , LOW ( 0x41A00000 )
000d08 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000d09 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000d0a e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000d0b 940e 0feb 	CALL __MULF12
000d0d 940e 0f2a 	CALL __CFD1
000d0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000d10 940e 112e 	CALL __GETD1S0
000d12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000d13 e0e0      	LDI  R30,LOW(0)
000d14 e0f0      	LDI  R31,HIGH(0)
000d15 93ed      	ST   X+,R30
000d16 93fc      	ST   X,R31
000d17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000d18 93fa      	ST   -Y,R31
000d19 93ea      	ST   -Y,R30
000d1a 940e 025b 	CALL _RTU_WriteOperate0
000d1c e0e5      	LDI  R30,LOW(5)
000d1d e0f0      	LDI  R31,HIGH(5)
000d1e 93fa      	ST   -Y,R31
000d1f 93ea      	ST   -Y,R30
000d20 940c 0ee9 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000d22 93ea      	ST   -Y,R30
000d23 e7e8      	LDI  R30,LOW(120)
000d24 e0f0      	LDI  R31,HIGH(120)
000d25 93fa      	ST   -Y,R31
000d26 93ea      	ST   -Y,R30
000d27 e0e1      	LDI  R30,LOW(1)
000d28 e0f0      	LDI  R31,HIGH(1)
000d29 cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000d2a e0f0      	LDI  R31,0
000d2b 0fea      	ADD  R30,R26
000d2c 1ffb      	ADC  R31,R27
000d2d 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11:
<<<<<<< HEAD
000d52 e0f0      	LDI  R31,0
000d53 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000d54 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000d55 8310      	ST   Z,R17
000d56 9493      	INC  R9
000d57 9508      	RET
=======
000d2e 2da4      	MOV  R26,R4
000d2f e0b0      	LDI  R27,0
000d30 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000d31 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000d32 b1ec      	IN   R30,0xC
000d33 93ec      	ST   X,R30
000d34 9443      	INC  R4
000d35 e0e0      	LDI  R30,LOW(0)
000d36 bde4      	OUT  0x24,R30
000d37 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
<<<<<<< HEAD
000d58 91ed      	LD   R30,X+
000d59 91fd      	LD   R31,X+
000d5a 9631      	ADIW R30,1
000d5b 93fe      	ST   -X,R31
000d5c 93ee      	ST   -X,R30
000d5d 9508      	RET
=======
000d38 93ea      	ST   -Y,R30
000d39 93fa      	ST   -Y,R31
000d3a b7ef      	IN   R30,SREG
000d3b 93ea      	ST   -Y,R30
000d3c 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
<<<<<<< HEAD
000d5e 93fa      	ST   -Y,R31
000d5f 93ea      	ST   -Y,R30
000d60 940c 0efc 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
000d62 940e 10cc 	CALL __CWD1
000d64 940e 0f74 	CALL __CDF1
000d66 01df      	MOVW R26,R30
000d67 01cb      	MOVW R24,R22
                +
000d68 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000d69 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000d6a e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000d6b e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000d6c 940e 104c 	CALL __DIVF21
000d6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000d6f e0e0      	LDI  R30,LOW(0)
000d70 93e0 0578 	STS  _TIMER1_OVERFLOW,R30
000d72 93e0 0579 	STS  _TIMER1_OVERFLOW+1,R30
000d74 9508      	RET
=======
000d3d e0f0      	LDI  R31,0
000d3e 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000d3f 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000d40 8310      	ST   Z,R17
000d41 9493      	INC  R9
000d42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000d43 93fa      	ST   -Y,R31
000d44 93ea      	ST   -Y,R30
000d45 940c 0ee9 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
                +
000d47 01fe     +MOVW R30 , R28
000d48 5cee     +SUBI R30 , LOW ( - 562 )
000d49 4ffd     +SBCI R31 , HIGH ( - 562 )
000d4a 9001     +LD R0 , Z +
000d4b 81f0     +LD R31 , Z
000d4c 2de0     +MOV R30 , R0
                 	__GETW1SX 562
000d4d 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
<<<<<<< HEAD
000d75 93ea      	ST   -Y,R30
000d76 e0e2      	LDI  R30,LOW(2)
000d77 e0f0      	LDI  R31,HIGH(2)
000d78 93fa      	ST   -Y,R31
000d79 93ea      	ST   -Y,R30
000d7a 93fa      	ST   -Y,R31
000d7b 93ea      	ST   -Y,R30
000d7c 940e 026b 	CALL _RTU_ReedOperate0
000d7e e0e5      	LDI  R30,LOW(5)
000d7f e0f0      	LDI  R31,HIGH(5)
000d80 cfdd      	RJMP SUBOPT_0x13
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
                +
000d81 01fe     +MOVW R30 , R28
000d82 5de0     +SUBI R30 , LOW ( - 560 )
000d83 4ffd     +SBCI R31 , HIGH ( - 560 )
000d84 9001     +LD R0 , Z +
000d85 81f0     +LD R31 , Z
000d86 2de0     +MOV R30 , R0
                 	__GETW1SX 560
000d87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x18:
000d88 940e 10cc 	CALL __CWD1
000d8a 940e 0f74 	CALL __CDF1
000d8c 01df      	MOVW R26,R30
000d8d 01cb      	MOVW R24,R22
                +
000d8e e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000d8f effc     +LDI R31 , HIGH ( 0x453EFC29 )
000d90 e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000d91 e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000d92 940e 104c 	CALL __DIVF21
000d94 9508      	RET
=======
000d4e 940e 10b9 	CALL __CWD1
000d50 940e 0f61 	CALL __CDF1
000d52 01df      	MOVW R26,R30
000d53 01cb      	MOVW R24,R22
                +
000d54 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000d55 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000d56 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000d57 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000d58 940e 1039 	CALL __DIVF21
000d5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x17:
000d5b 93ea      	ST   -Y,R30
000d5c e0e2      	LDI  R30,LOW(2)
000d5d e0f0      	LDI  R31,HIGH(2)
000d5e 93fa      	ST   -Y,R31
000d5f 93ea      	ST   -Y,R30
000d60 93fa      	ST   -Y,R31
000d61 93ea      	ST   -Y,R30
000d62 940e 026a 	CALL _RTU_ReedOperate0
000d64 e0e5      	LDI  R30,LOW(5)
000d65 e0f0      	LDI  R31,HIGH(5)
000d66 cfdc      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
                +
000d67 01fe     +MOVW R30 , R28
000d68 5de0     +SUBI R30 , LOW ( - 560 )
000d69 4ffd     +SBCI R31 , HIGH ( - 560 )
000d6a 9001     +LD R0 , Z +
000d6b 81f0     +LD R31 , Z
000d6c 2de0     +MOV R30 , R0
                 	__GETW1SX 560
000d6d 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
000d6e 940e 10b9 	CALL __CWD1
000d70 940e 0f61 	CALL __CDF1
000d72 01df      	MOVW R26,R30
000d73 01cb      	MOVW R24,R22
                +
000d74 e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000d75 effc     +LDI R31 , HIGH ( 0x453EFC29 )
000d76 e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000d77 e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000d78 940e 1039 	CALL __DIVF21
000d7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A:
                +
<<<<<<< HEAD
000d95 01de     +MOVW R26 , R28
000d96 5ea2     +SUBI R26 , LOW ( - 542 )
000d97 4fbd     +SBCI R27 , HIGH ( - 542 )
000d98 900d     +LD R0 , X +
000d99 901d     +LD R1 , X +
000d9a 918d     +LD R24 , X +
000d9b 919c     +LD R25 , X
000d9c 01d0     +MOVW R26 , R0
                 	__GETD2SX 542
000d9d 9508      	RET
=======
000d7b 01de     +MOVW R26 , R28
000d7c 5ea2     +SUBI R26 , LOW ( - 542 )
000d7d 4fbd     +SBCI R27 , HIGH ( - 542 )
000d7e 900d     +LD R0 , X +
000d7f 901d     +LD R1 , X +
000d80 918d     +LD R24 , X +
000d81 919c     +LD R25 , X
000d82 01d0     +MOVW R26 , R0
                 	__GETD2SX 542
000d83 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1B:
                +
<<<<<<< HEAD
000d9e 01fe     +MOVW R30 , R28
000d9f 5eea     +SUBI R30 , LOW ( - 534 )
000da0 4ffd     +SBCI R31 , HIGH ( - 534 )
000da1 9001     +LD R0 , Z +
000da2 9011     +LD R1 , Z +
000da3 9161     +LD R22 , Z +
000da4 8170     +LD R23 , Z
000da5 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
000da6 dfee      	RCALL SUBOPT_0x19
000da7 940e 0ffe 	CALL __MULF12
000da9 9508      	RET
=======
000d84 01fe     +MOVW R30 , R28
000d85 5eea     +SUBI R30 , LOW ( - 534 )
000d86 4ffd     +SBCI R31 , HIGH ( - 534 )
000d87 9001     +LD R0 , Z +
000d88 9011     +LD R1 , Z +
000d89 9161     +LD R22 , Z +
000d8a 8170     +LD R23 , Z
000d8b 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
000d8c dfee      	RCALL SUBOPT_0x1A
000d8d 940e 0feb 	CALL __MULF12
000d8f 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1C:
                +
<<<<<<< HEAD
000daa 01fe     +MOVW R30 , R28
000dab 5ee6     +SUBI R30 , LOW ( - 538 )
000dac 4ffd     +SBCI R31 , HIGH ( - 538 )
000dad 9001     +LD R0 , Z +
000dae 9011     +LD R1 , Z +
000daf 9161     +LD R22 , Z +
000db0 8170     +LD R23 , Z
000db1 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
000db2 01de     +MOVW R26 , R28
000db3 5eaa     +SUBI R26 , LOW ( - 534 )
000db4 4fbd     +SBCI R27 , HIGH ( - 534 )
000db5 900d     +LD R0 , X +
000db6 901d     +LD R1 , X +
000db7 918d     +LD R24 , X +
000db8 919c     +LD R25 , X
000db9 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
000dba 940e 0ffe 	CALL __MULF12
000dbc 940e 1158 	CALL __PUTPARD1
000dbe 9508      	RET
=======
000d90 01fe     +MOVW R30 , R28
000d91 5ee6     +SUBI R30 , LOW ( - 538 )
000d92 4ffd     +SBCI R31 , HIGH ( - 538 )
000d93 9001     +LD R0 , Z +
000d94 9011     +LD R1 , Z +
000d95 9161     +LD R22 , Z +
000d96 8170     +LD R23 , Z
000d97 01f0     +MOVW R30 , R0
                 	__GETD1SX 538
                +
000d98 01de     +MOVW R26 , R28
000d99 5eaa     +SUBI R26 , LOW ( - 534 )
000d9a 4fbd     +SBCI R27 , HIGH ( - 534 )
000d9b 900d     +LD R0 , X +
000d9c 901d     +LD R1 , X +
000d9d 918d     +LD R24 , X +
000d9e 919c     +LD R25 , X
000d9f 01d0     +MOVW R26 , R0
                 	__GETD2SX 534
000da0 940e 0feb 	CALL __MULF12
000da2 940e 113f 	CALL __PUTPARD1
000da4 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
<<<<<<< HEAD
000dbf 01de     +MOVW R26 , R28
000dc0 5fa6     +SUBI R26 , LOW ( - 522 )
000dc1 4fbd     +SBCI R27 , HIGH ( - 522 )
000dc2 900d     +LD R0 , X +
000dc3 901d     +LD R1 , X +
000dc4 918d     +LD R24 , X +
000dc5 919c     +LD R25 , X
000dc6 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
000dc7 9508      	RET
=======
000da5 01de     +MOVW R26 , R28
000da6 5fa6     +SUBI R26 , LOW ( - 522 )
000da7 4fbd     +SBCI R27 , HIGH ( - 522 )
000da8 900d     +LD R0 , X +
000da9 901d     +LD R1 , X +
000daa 918d     +LD R24 , X +
000dab 919c     +LD R25 , X
000dac 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
000dad 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
                +
<<<<<<< HEAD
000dc8 01de     +MOVW R26 , R28
000dc9 50ac     +SUBI R26 , LOW ( - 500 )
000dca 4fbe     +SBCI R27 , HIGH ( - 500 )
000dcb 900d     +LD R0 , X +
000dcc 901d     +LD R1 , X +
000dcd 918d     +LD R24 , X +
000dce 919c     +LD R25 , X
000dcf 01d0     +MOVW R26 , R0
                 	__GETD2SX 500
000dd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
                +
000dd1 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000dd2 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000dd3 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000dd4 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000dd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000dd6 940e 10cc 	CALL __CWD1
000dd8 940e 1158 	CALL __PUTPARD1
000dda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
000ddb 93fa      	ST   -Y,R31
000ddc 93ea      	ST   -Y,R30
000ddd 940c 0c02 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x21:
                +
000ddf 81ac     +LDD R26 , Y + 4
000de0 81bd     +LDD R27 , Y + 4 + 1
000de1 818e     +LDD R24 , Y + 4 + 2
000de2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000de3 e0e0     +LDI R30 , LOW ( 0x41200000 )
000de4 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000de5 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000de6 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000de7 940e 0ffe 	CALL __MULF12
000de9 cf2c      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x22:
000dea df35      	RCALL SUBOPT_0xA
=======
000dae 01de     +MOVW R26 , R28
000daf 50ac     +SUBI R26 , LOW ( - 500 )
000db0 4fbe     +SBCI R27 , HIGH ( - 500 )
000db1 900d     +LD R0 , X +
000db2 901d     +LD R1 , X +
000db3 918d     +LD R24 , X +
000db4 919c     +LD R25 , X
000db5 01d0     +MOVW R26 , R0
                 	__GETD2SX 500
000db6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000db7 940e 10b9 	CALL __CWD1
000db9 940e 113f 	CALL __PUTPARD1
000dbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x20:
000dbc 91ed      	LD   R30,X+
000dbd 91fd      	LD   R31,X+
000dbe 9631      	ADIW R30,1
000dbf 93fe      	ST   -X,R31
000dc0 93ee      	ST   -X,R30
000dc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
000dc2 93fa      	ST   -Y,R31
000dc3 93ea      	ST   -Y,R30
000dc4 940c 0bdf 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x22:
                +
000dc6 81ac     +LDD R26 , Y + 4
000dc7 81bd     +LDD R27 , Y + 4 + 1
000dc8 818e     +LDD R24 , Y + 4 + 2
000dc9 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000dca e0e0     +LDI R30 , LOW ( 0x41200000 )
000dcb e0f0     +LDI R31 , HIGH ( 0x41200000 )
000dcc e260     +LDI R22 , BYTE3 ( 0x41200000 )
000dcd e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000dce 940e 0feb 	CALL __MULF12
000dd0 cf21      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x23:
000dd1 df2a      	RCALL SUBOPT_0xA
                +
000dd2 85ac     +LDD R26 , Y + 12
000dd3 85bd     +LDD R27 , Y + 12 + 1
000dd4 858e     +LDD R24 , Y + 12 + 2
000dd5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000dd6 940e 107e 	CALL __CMPF12
000dd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
>>>>>>> merget
                +
000dd9 85ac     +LDD R26 , Y + 12
000dda 85bd     +LDD R27 , Y + 12 + 1
000ddb 858e     +LDD R24 , Y + 12 + 2
000ddc 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
<<<<<<< HEAD
000def 940e 1091 	CALL __CMPF12
000df1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
                +
000df2 85ac     +LDD R26 , Y + 12
000df3 85bd     +LDD R27 , Y + 12 + 1
000df4 858e     +LDD R24 , Y + 12 + 2
000df5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000df6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x24:
000df7 dfd9      	RCALL SUBOPT_0x1E
000df8 940e 0ffe 	CALL __MULF12
                +
000dfa 87ec     +STD Y + 12 , R30
000dfb 87fd     +STD Y + 12 + 1 , R31
000dfc 876e     +STD Y + 12 + 2 , R22
000dfd 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000dfe 5f3f      	SUBI R19,-LOW(1)
000dff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
000e00 e0e0     +LDI R30 , LOW ( 0x41200000 )
000e01 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000e02 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000e03 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000e04 940e 0ffe 	CALL __MULF12
000e06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
                +
000e07 87ec     +STD Y + 12 , R30
000e08 87fd     +STD Y + 12 + 1 , R31
000e09 876e     +STD Y + 12 + 2 , R22
000e0a 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000e0b 9508      	RET
=======
000ddd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
                +
000dde eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000ddf ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000de0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000de1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000de2 940e 0feb 	CALL __MULF12
                +
000de4 87ec     +STD Y + 12 , R30
000de5 87fd     +STD Y + 12 + 1 , R31
000de6 876e     +STD Y + 12 + 2 , R22
000de7 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000de8 5f3f      	SUBI R19,-LOW(1)
000de9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
000dea e0e0     +LDI R30 , LOW ( 0x41200000 )
000deb e0f0     +LDI R31 , HIGH ( 0x41200000 )
000dec e260     +LDI R22 , BYTE3 ( 0x41200000 )
000ded e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000dee 940e 0feb 	CALL __MULF12
000df0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
                +
000df1 87ec     +STD Y + 12 , R30
000df2 87fd     +STD Y + 12 + 1 , R31
000df3 876e     +STD Y + 12 + 2 , R22
000df4 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000df5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
                +
000df6 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000df7 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000df8 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000df9 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000dfa 940e 0f9b 	CALL __ADDF12
000dfc 9508      	RET
>>>>>>> merget
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
                +
<<<<<<< HEAD
000e0c e0a0     +LDI R26 , LOW ( 0x3F000000 )
000e0d e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000e0e e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000e0f e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000e10 940e 0fae 	CALL __ADDF12
000e12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000e13 dfbd      	RCALL SUBOPT_0x1E
000e14 940e 0ffe 	CALL __MULF12
000e16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000e17 940e 1158 	CALL __PUTPARD1
000e19 940c 0b38 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000e1b 85a8      	LDD  R26,Y+8
000e1c 85b9      	LDD  R27,Y+8+1
000e1d 9611      	ADIW R26,1
000e1e 87a8      	STD  Y+8,R26
000e1f 87b9      	STD  Y+8+1,R27
000e20 9711      	SBIW R26,1
000e21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000e22 2fe0      	MOV  R30,R16
000e23 5de0      	SUBI R30,-LOW(48)
000e24 93ec      	ST   X,R30
000e25 2fe0      	MOV  R30,R16
000e26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C:
000e27 85e8      	LDD  R30,Y+8
000e28 85f9      	LDD  R31,Y+8+1
000e29 9631      	ADIW R30,1
000e2a 87e8      	STD  Y+8,R30
000e2b 87f9      	STD  Y+8+1,R31
000e2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2D:
000e2d 932a      	ST   -Y,R18
000e2e 81ef      	LDD  R30,Y+7
000e2f 85f8      	LDD  R31,Y+7+1
000e30 93fa      	ST   -Y,R31
000e31 93ea      	ST   -Y,R30
000e32 85eb      	LDD  R30,Y+11
000e33 85fc      	LDD  R31,Y+11+1
000e34 9509      	ICALL
000e35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2E:
                +
000e36 01fe     +MOVW R30 , R28
000e37 5ae6     +SUBI R30 , LOW ( - 90 )
000e38 4fff     +SBCI R31 , HIGH ( - 90 )
000e39 9001     +LD R0 , Z +
000e3a 81f0     +LD R31 , Z
000e3b 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2F:
000e3d 9734      	SBIW R30,4
                +
000e3e 01de     +MOVW R26 , R28
000e3f 5aa6     +SUBI R26 , LOW ( - 90 )
000e40 4fbf     +SBCI R27 , HIGH ( - 90 )
000e41 93ed     +ST X + , R30
000e42 93fc     +ST X , R31
                 	__PUTW1SX 90
000e43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x30:
000e44 81ef      	LDD  R30,Y+7
000e45 85f8      	LDD  R31,Y+7+1
000e46 93fa      	ST   -Y,R31
000e47 93ea      	ST   -Y,R30
000e48 85eb      	LDD  R30,Y+11
000e49 85fc      	LDD  R31,Y+11+1
000e4a 9509      	ICALL
000e4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x31:
                +
000e4c 01de     +MOVW R26 , R28
000e4d 5aa6     +SUBI R26 , LOW ( - 90 )
000e4e 4fbf     +SBCI R27 , HIGH ( - 90 )
000e4f 900d     +LD R0 , X +
000e50 91bc     +LD R27 , X
000e51 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32:
                +
000e53 87ea     +STD Y + 10 , R30
000e54 87fb     +STD Y + 10 + 1 , R31
000e55 876c     +STD Y + 10 + 2 , R22
000e56 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x33:
000e58 dfdd      	RCALL SUBOPT_0x2E
000e59 cfe3      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34:
                +
000e5a 85ea     +LDD R30 , Y + 10
000e5b 85fb     +LDD R31 , Y + 10 + 1
000e5c 856c     +LDD R22 , Y + 10 + 2
000e5d 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000e5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x35:
000e5f 87ee      	STD  Y+14,R30
000e60 87ff      	STD  Y+14+1,R31
000e61 93fa      	ST   -Y,R31
000e62 93ea      	ST   -Y,R30
000e63 940e 0c0d 	CALL _strlen
000e65 2f1e      	MOV  R17,R30
000e66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x36:
000e67 dfe4      	RCALL SUBOPT_0x31
000e68 9614      	ADIW R26,4
000e69 940e 1138 	CALL __GETW1P
000e6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x37:
                +
000e6c 8be8     +STD Y + 16 , R30
000e6d 8bf9     +STD Y + 16 + 1 , R31
000e6e 8b6a     +STD Y + 16 + 2 , R22
000e6f 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000e70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x38:
000e71 7f0b      	ANDI R16,LOW(251)
000e72 89ed      	LDD  R30,Y+21
000e73 93ea      	ST   -Y,R30
                +
000e74 01fe     +MOVW R30 , R28
000e75 5ae9     +SUBI R30 , LOW ( - 87 )
000e76 4fff     +SBCI R31 , HIGH ( - 87 )
000e77 9001     +LD R0 , Z +
000e78 81f0     +LD R31 , Z
000e79 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000e7a 93fa      	ST   -Y,R31
000e7b 93ea      	ST   -Y,R30
                +
000e7c 01fe     +MOVW R30 , R28
000e7d 5ae5     +SUBI R30 , LOW ( - 91 )
000e7e 4fff     +SBCI R31 , HIGH ( - 91 )
000e7f 9001     +LD R0 , Z +
000e80 81f0     +LD R31 , Z
000e81 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000e82 9509      	ICALL
000e83 3050      	CPI  R21,0
000e84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39:
                +
000e85 89e8     +LDD R30 , Y + 16
000e86 89f9     +LDD R31 , Y + 16 + 1
000e87 896a     +LDD R22 , Y + 16 + 2
000e88 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000e89 85aa     +LDD R26 , Y + 10
000e8a 85bb     +LDD R27 , Y + 10 + 1
000e8b 858c     +LDD R24 , Y + 10 + 2
000e8c 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000e8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
000e8e 01de      	MOVW R26,R28
000e8f 961c      	ADIW R26,12
000e90 940e 10b1 	CALL __ADDW2R15
000e92 940e 1138 	CALL __GETW1P
000e94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
000e95 940e 10b1 	CALL __ADDW2R15
000e97 940e 1138 	CALL __GETW1P
000e99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
000e9a 933a      	ST   -Y,R19
000e9b 940e 0bea 	CALL _isspace
000e9d 30e0      	CPI  R30,0
000e9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3D:
000e9f 85ed      	LDD  R30,Y+13
000ea0 85fe      	LDD  R31,Y+13+1
000ea1 93fa      	ST   -Y,R31
000ea2 93ea      	ST   -Y,R30
000ea3 89e9      	LDD  R30,Y+17
000ea4 89fa      	LDD  R31,Y+17+1
000ea5 9509      	ICALL
000ea6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3E:
000ea7 85ab      	LDD  R26,Y+11
000ea8 85bc      	LDD  R27,Y+11+1
000ea9 91ac      	LD   R26,X
000eaa 30a0      	CPI  R26,0
000eab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3F:
000eac 85ef      	LDD  R30,Y+15
000ead 89f8      	LDD  R31,Y+15+1
000eae 9734      	SBIW R30,4
000eaf 87ef      	STD  Y+15,R30
000eb0 8bf8      	STD  Y+15+1,R31
000eb1 85af      	LDD  R26,Y+15
000eb2 89b8      	LDD  R27,Y+15+1
000eb3 9614      	ADIW R26,4
000eb4 910d      	LD   R16,X+
000eb5 911c      	LD   R17,X
000eb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x40:
                +
000eb7 81ad     +LDD R26 , Y + 5
000eb8 81be     +LDD R27 , Y + 5 + 1
000eb9 818f     +LDD R24 , Y + 5 + 2
000eba 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000ebb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x41:
                +
000ebc 83ed     +STD Y + 5 , R30
000ebd 83fe     +STD Y + 5 + 1 , R31
000ebe 836f     +STD Y + 5 + 2 , R22
000ebf 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000ec0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x42:
                +
000ec1 81ed     +LDD R30 , Y + 5
000ec2 81fe     +LDD R31 , Y + 5 + 1
000ec3 816f     +LDD R22 , Y + 5 + 2
000ec4 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000ec5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000ec6 dff0      	RCALL SUBOPT_0x40
                +
000ec7 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000ec8 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000ec9 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000eca e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000ecb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
                +
000ecc 81a9     +LDD R26 , Y + 1
000ecd 81ba     +LDD R27 , Y + 1 + 1
000ece 818b     +LDD R24 , Y + 1 + 2
000ecf 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ed0 940e 0ffe 	CALL __MULF12
000ed2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
000ed3 81ee      	LDD  R30,Y+6
000ed4 81ff      	LDD  R31,Y+6+1
000ed5 93fa      	ST   -Y,R31
000ed6 93ea      	ST   -Y,R30
000ed7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x46:
                +
000ed8 87e9     +STD Y + 9 , R30
000ed9 87fa     +STD Y + 9 + 1 , R31
000eda 876b     +STD Y + 9 + 2 , R22
000edb 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000edc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x47:
000edd 81ae      	LDD  R26,Y+6
000ede 81bf      	LDD  R27,Y+6+1
000edf 9611      	ADIW R26,1
000ee0 83ae      	STD  Y+6,R26
000ee1 83bf      	STD  Y+6+1,R27
000ee2 9711      	SBIW R26,1
000ee3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x48:
                +
000ee4 81aa     +LDD R26 , Y + 2
000ee5 81bb     +LDD R27 , Y + 2 + 1
000ee6 818c     +LDD R24 , Y + 2 + 2
000ee7 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000ee8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
000ee9 83ea     +STD Y + 2 , R30
000eea 83fb     +STD Y + 2 + 1 , R31
000eeb 836c     +STD Y + 2 + 2 , R22
000eec 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000eed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4A:
                +
000eee 81ea     +LDD R30 , Y + 2
000eef 81fb     +LDD R31 , Y + 2 + 1
000ef0 816c     +LDD R22 , Y + 2 + 2
000ef1 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000ef2 85a9     +LDD R26 , Y + 9
000ef3 85ba     +LDD R27 , Y + 9 + 1
000ef4 858b     +LDD R24 , Y + 9 + 2
000ef5 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ef6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
                +
000ef7 85a9     +LDD R26 , Y + 9
000ef8 85ba     +LDD R27 , Y + 9 + 1
000ef9 858b     +LDD R24 , Y + 9 + 2
000efa 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000efb 9508      	RET
=======
000dfd eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000dfe ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000dff ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000e00 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000e01 940e 0feb 	CALL __MULF12
000e03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000e04 940e 113f 	CALL __PUTPARD1
000e06 940c 0b15 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000e08 85a8      	LDD  R26,Y+8
000e09 85b9      	LDD  R27,Y+8+1
000e0a 9611      	ADIW R26,1
000e0b 87a8      	STD  Y+8,R26
000e0c 87b9      	STD  Y+8+1,R27
000e0d 9711      	SBIW R26,1
000e0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000e0f 2fe0      	MOV  R30,R16
000e10 5de0      	SUBI R30,-LOW(48)
000e11 93ec      	ST   X,R30
000e12 2fe0      	MOV  R30,R16
000e13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D:
000e14 85e8      	LDD  R30,Y+8
000e15 85f9      	LDD  R31,Y+8+1
000e16 9631      	ADIW R30,1
000e17 87e8      	STD  Y+8,R30
000e18 87f9      	STD  Y+8+1,R31
000e19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2E:
000e1a 932a      	ST   -Y,R18
000e1b 81ef      	LDD  R30,Y+7
000e1c 85f8      	LDD  R31,Y+7+1
000e1d 93fa      	ST   -Y,R31
000e1e 93ea      	ST   -Y,R30
000e1f 85eb      	LDD  R30,Y+11
000e20 85fc      	LDD  R31,Y+11+1
000e21 9509      	ICALL
000e22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F:
                +
000e23 01fe     +MOVW R30 , R28
000e24 5ae6     +SUBI R30 , LOW ( - 90 )
000e25 4fff     +SBCI R31 , HIGH ( - 90 )
000e26 9001     +LD R0 , Z +
000e27 81f0     +LD R31 , Z
000e28 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x30:
000e2a 9734      	SBIW R30,4
                +
000e2b 01de     +MOVW R26 , R28
000e2c 5aa6     +SUBI R26 , LOW ( - 90 )
000e2d 4fbf     +SBCI R27 , HIGH ( - 90 )
000e2e 93ed     +ST X + , R30
000e2f 93fc     +ST X , R31
                 	__PUTW1SX 90
000e30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x31:
000e31 81ef      	LDD  R30,Y+7
000e32 85f8      	LDD  R31,Y+7+1
000e33 93fa      	ST   -Y,R31
000e34 93ea      	ST   -Y,R30
000e35 85eb      	LDD  R30,Y+11
000e36 85fc      	LDD  R31,Y+11+1
000e37 9509      	ICALL
000e38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x32:
                +
000e39 01de     +MOVW R26 , R28
000e3a 5aa6     +SUBI R26 , LOW ( - 90 )
000e3b 4fbf     +SBCI R27 , HIGH ( - 90 )
000e3c 900d     +LD R0 , X +
000e3d 91bc     +LD R27 , X
000e3e 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
                +
000e40 87ea     +STD Y + 10 , R30
000e41 87fb     +STD Y + 10 + 1 , R31
000e42 876c     +STD Y + 10 + 2 , R22
000e43 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34:
000e45 dfdd      	RCALL SUBOPT_0x2F
000e46 cfe3      	RJMP SUBOPT_0x30
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35:
                +
000e47 85ea     +LDD R30 , Y + 10
000e48 85fb     +LDD R31 , Y + 10 + 1
000e49 856c     +LDD R22 , Y + 10 + 2
000e4a 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000e4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x36:
000e4c 87ee      	STD  Y+14,R30
000e4d 87ff      	STD  Y+14+1,R31
000e4e 93fa      	ST   -Y,R31
000e4f 93ea      	ST   -Y,R30
000e50 940e 0bea 	CALL _strlen
000e52 2f1e      	MOV  R17,R30
000e53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x37:
000e54 dfe4      	RCALL SUBOPT_0x32
000e55 9614      	ADIW R26,4
000e56 940e 111f 	CALL __GETW1P
000e58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
000e59 8be8     +STD Y + 16 , R30
000e5a 8bf9     +STD Y + 16 + 1 , R31
000e5b 8b6a     +STD Y + 16 + 2 , R22
000e5c 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000e5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x39:
000e5e 7f0b      	ANDI R16,LOW(251)
000e5f 89ed      	LDD  R30,Y+21
000e60 93ea      	ST   -Y,R30
                +
000e61 01fe     +MOVW R30 , R28
000e62 5ae9     +SUBI R30 , LOW ( - 87 )
000e63 4fff     +SBCI R31 , HIGH ( - 87 )
000e64 9001     +LD R0 , Z +
000e65 81f0     +LD R31 , Z
000e66 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000e67 93fa      	ST   -Y,R31
000e68 93ea      	ST   -Y,R30
                +
000e69 01fe     +MOVW R30 , R28
000e6a 5ae5     +SUBI R30 , LOW ( - 91 )
000e6b 4fff     +SBCI R31 , HIGH ( - 91 )
000e6c 9001     +LD R0 , Z +
000e6d 81f0     +LD R31 , Z
000e6e 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000e6f 9509      	ICALL
000e70 3050      	CPI  R21,0
000e71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
                +
000e72 89e8     +LDD R30 , Y + 16
000e73 89f9     +LDD R31 , Y + 16 + 1
000e74 896a     +LDD R22 , Y + 16 + 2
000e75 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000e76 85aa     +LDD R26 , Y + 10
000e77 85bb     +LDD R27 , Y + 10 + 1
000e78 858c     +LDD R24 , Y + 10 + 2
000e79 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000e7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000e7b 01de      	MOVW R26,R28
000e7c 961c      	ADIW R26,12
000e7d 940e 109e 	CALL __ADDW2R15
000e7f 940e 111f 	CALL __GETW1P
000e81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
000e82 940e 109e 	CALL __ADDW2R15
000e84 940e 111f 	CALL __GETW1P
000e86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
000e87 933a      	ST   -Y,R19
000e88 940e 0bc7 	CALL _isspace
000e8a 30e0      	CPI  R30,0
000e8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3E:
000e8c 85ed      	LDD  R30,Y+13
000e8d 85fe      	LDD  R31,Y+13+1
000e8e 93fa      	ST   -Y,R31
000e8f 93ea      	ST   -Y,R30
000e90 89e9      	LDD  R30,Y+17
000e91 89fa      	LDD  R31,Y+17+1
000e92 9509      	ICALL
000e93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3F:
000e94 85ab      	LDD  R26,Y+11
000e95 85bc      	LDD  R27,Y+11+1
000e96 91ac      	LD   R26,X
000e97 30a0      	CPI  R26,0
000e98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x40:
000e99 85ef      	LDD  R30,Y+15
000e9a 89f8      	LDD  R31,Y+15+1
000e9b 9734      	SBIW R30,4
000e9c 87ef      	STD  Y+15,R30
000e9d 8bf8      	STD  Y+15+1,R31
000e9e 85af      	LDD  R26,Y+15
000e9f 89b8      	LDD  R27,Y+15+1
000ea0 9614      	ADIW R26,4
000ea1 910d      	LD   R16,X+
000ea2 911c      	LD   R17,X
000ea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x41:
                +
000ea4 81ad     +LDD R26 , Y + 5
000ea5 81be     +LDD R27 , Y + 5 + 1
000ea6 818f     +LDD R24 , Y + 5 + 2
000ea7 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000ea8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x42:
                +
000ea9 83ed     +STD Y + 5 , R30
000eaa 83fe     +STD Y + 5 + 1 , R31
000eab 836f     +STD Y + 5 + 2 , R22
000eac 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000ead 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x43:
                +
000eae 81ed     +LDD R30 , Y + 5
000eaf 81fe     +LDD R31 , Y + 5 + 1
000eb0 816f     +LDD R22 , Y + 5 + 2
000eb1 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000eb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000eb3 dff0      	RCALL SUBOPT_0x41
                +
000eb4 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000eb5 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000eb6 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000eb7 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000eb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
                +
000eb9 81a9     +LDD R26 , Y + 1
000eba 81ba     +LDD R27 , Y + 1 + 1
000ebb 818b     +LDD R24 , Y + 1 + 2
000ebc 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ebd 940e 0feb 	CALL __MULF12
000ebf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000ec0 81ee      	LDD  R30,Y+6
000ec1 81ff      	LDD  R31,Y+6+1
000ec2 93fa      	ST   -Y,R31
000ec3 93ea      	ST   -Y,R30
000ec4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x47:
                +
000ec5 87e9     +STD Y + 9 , R30
000ec6 87fa     +STD Y + 9 + 1 , R31
000ec7 876b     +STD Y + 9 + 2 , R22
000ec8 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000ec9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x48:
000eca 81ae      	LDD  R26,Y+6
000ecb 81bf      	LDD  R27,Y+6+1
000ecc 9611      	ADIW R26,1
000ecd 83ae      	STD  Y+6,R26
000ece 83bf      	STD  Y+6+1,R27
000ecf 9711      	SBIW R26,1
000ed0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
000ed1 81aa     +LDD R26 , Y + 2
000ed2 81bb     +LDD R27 , Y + 2 + 1
000ed3 818c     +LDD R24 , Y + 2 + 2
000ed4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000ed5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
000ed6 83ea     +STD Y + 2 , R30
000ed7 83fb     +STD Y + 2 + 1 , R31
000ed8 836c     +STD Y + 2 + 2 , R22
000ed9 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000eda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4B:
                +
000edb 81ea     +LDD R30 , Y + 2
000edc 81fb     +LDD R31 , Y + 2 + 1
000edd 816c     +LDD R22 , Y + 2 + 2
000ede 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000edf 85a9     +LDD R26 , Y + 9
000ee0 85ba     +LDD R27 , Y + 9 + 1
000ee1 858b     +LDD R24 , Y + 9 + 2
000ee2 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ee3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4C:
                +
000ee4 85a9     +LDD R26 , Y + 9
000ee5 85ba     +LDD R27 , Y + 9 + 1
000ee6 858b     +LDD R24 , Y + 9 + 2
000ee7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ee8 9508      	RET
>>>>>>> merget
                 
                 
                 	.CSEG
                 _delay_ms:
<<<<<<< HEAD
000efc 91e9      	ld   r30,y+
000efd 91f9      	ld   r31,y+
000efe 9630      	adiw r30,0
000eff f039      	breq __delay_ms1
                 __delay_ms0:
                +
000f00 e686     +LDI R24 , LOW ( 0xE66 )
000f01 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000f02 9701     +SBIW R24 , 1
000f03 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000f04 95a8      	wdr
000f05 9731      	sbiw r30,1
000f06 f7c9      	brne __delay_ms0
                 __delay_ms1:
000f07 9508      	ret
                 
                 __ANEGF1:
000f08 9730      	SBIW R30,0
000f09 4060      	SBCI R22,0
000f0a 4070      	SBCI R23,0
000f0b f009      	BREQ __ANEGF10
000f0c 5870      	SUBI R23,0x80
                 __ANEGF10:
000f0d 9508      	RET
                 
                 __ROUND_REPACK:
000f0e 2355      	TST  R21
000f0f f442      	BRPL __REPACK
000f10 3850      	CPI  R21,0x80
000f11 f411      	BRNE __ROUND_REPACK0
000f12 ffe0      	SBRS R30,0
000f13 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000f14 9631      	ADIW R30,1
000f15 1f69      	ADC  R22,R25
000f16 1f79      	ADC  R23,R25
000f17 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000f18 e850      	LDI  R21,0x80
000f19 2757      	EOR  R21,R23
000f1a f411      	BRNE __REPACK0
000f1b 935f      	PUSH R21
000f1c c0cf      	RJMP __ZERORES
                 __REPACK0:
000f1d 3f5f      	CPI  R21,0xFF
000f1e f031      	BREQ __REPACK1
000f1f 0f66      	LSL  R22
000f20 0c00      	LSL  R0
000f21 9557      	ROR  R21
000f22 9567      	ROR  R22
000f23 2f75      	MOV  R23,R21
000f24 9508      	RET
                 __REPACK1:
000f25 935f      	PUSH R21
000f26 2000      	TST  R0
000f27 f00a      	BRMI __REPACK2
000f28 c0cf      	RJMP __MAXRES
                 __REPACK2:
000f29 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000f2a e850      	LDI  R21,0x80
000f2b 2e19      	MOV  R1,R25
000f2c 2215      	AND  R1,R21
000f2d 0f88      	LSL  R24
000f2e 1f99      	ROL  R25
000f2f 2795      	EOR  R25,R21
000f30 0f55      	LSL  R21
000f31 9587      	ROR  R24
                 
                 __UNPACK1:
000f32 e850      	LDI  R21,0x80
000f33 2e07      	MOV  R0,R23
000f34 2205      	AND  R0,R21
000f35 0f66      	LSL  R22
000f36 1f77      	ROL  R23
000f37 2775      	EOR  R23,R21
000f38 0f55      	LSL  R21
000f39 9567      	ROR  R22
000f3a 9508      	RET
                 
                 __CFD1U:
000f3b 9468      	SET
000f3c c001      	RJMP __CFD1U0
                 __CFD1:
000f3d 94e8      	CLT
                 __CFD1U0:
000f3e 935f      	PUSH R21
000f3f dff2      	RCALL __UNPACK1
000f40 3870      	CPI  R23,0x80
000f41 f018      	BRLO __CFD10
000f42 3f7f      	CPI  R23,0xFF
000f43 f408      	BRCC __CFD10
000f44 c0a7      	RJMP __ZERORES
                 __CFD10:
000f45 e156      	LDI  R21,22
000f46 1b57      	SUB  R21,R23
000f47 f4aa      	BRPL __CFD11
000f48 9551      	NEG  R21
000f49 3058      	CPI  R21,8
000f4a f40e      	BRTC __CFD19
000f4b 3059      	CPI  R21,9
                 __CFD19:
000f4c f030      	BRLO __CFD17
000f4d efef      	SER  R30
000f4e efff      	SER  R31
000f4f ef6f      	SER  R22
000f50 e77f      	LDI  R23,0x7F
000f51 f977      	BLD  R23,7
000f52 c01a      	RJMP __CFD15
                 __CFD17:
000f53 2777      	CLR  R23
000f54 2355      	TST  R21
000f55 f0b9      	BREQ __CFD15
                 __CFD18:
000f56 0fee      	LSL  R30
000f57 1fff      	ROL  R31
000f58 1f66      	ROL  R22
000f59 1f77      	ROL  R23
000f5a 955a      	DEC  R21
000f5b f7d1      	BRNE __CFD18
000f5c c010      	RJMP __CFD15
                 __CFD11:
000f5d 2777      	CLR  R23
                 __CFD12:
000f5e 3058      	CPI  R21,8
000f5f f028      	BRLO __CFD13
000f60 2fef      	MOV  R30,R31
000f61 2ff6      	MOV  R31,R22
000f62 2f67      	MOV  R22,R23
000f63 5058      	SUBI R21,8
000f64 cff9      	RJMP __CFD12
                 __CFD13:
000f65 2355      	TST  R21
000f66 f031      	BREQ __CFD15
                 __CFD14:
000f67 9576      	LSR  R23
000f68 9567      	ROR  R22
000f69 95f7      	ROR  R31
000f6a 95e7      	ROR  R30
000f6b 955a      	DEC  R21
000f6c f7d1      	BRNE __CFD14
                 __CFD15:
000f6d 2000      	TST  R0
000f6e f40a      	BRPL __CFD16
000f6f d149      	RCALL __ANEGD1
                 __CFD16:
000f70 915f      	POP  R21
000f71 9508      	RET
                 
                 __CDF1U:
000f72 9468      	SET
000f73 c001      	RJMP __CDF1U0
                 __CDF1:
000f74 94e8      	CLT
                 __CDF1U0:
000f75 9730      	SBIW R30,0
000f76 4060      	SBCI R22,0
000f77 4070      	SBCI R23,0
000f78 f0b1      	BREQ __CDF10
000f79 2400      	CLR  R0
000f7a f026      	BRTS __CDF11
000f7b 2377      	TST  R23
000f7c f412      	BRPL __CDF11
000f7d 9400      	COM  R0
000f7e d13a      	RCALL __ANEGD1
                 __CDF11:
000f7f 2e17      	MOV  R1,R23
000f80 e17e      	LDI  R23,30
000f81 2011      	TST  R1
                 __CDF12:
000f82 f032      	BRMI __CDF13
000f83 957a      	DEC  R23
000f84 0fee      	LSL  R30
000f85 1fff      	ROL  R31
000f86 1f66      	ROL  R22
000f87 1c11      	ROL  R1
000f88 cff9      	RJMP __CDF12
                 __CDF13:
000f89 2fef      	MOV  R30,R31
000f8a 2ff6      	MOV  R31,R22
000f8b 2d61      	MOV  R22,R1
000f8c 935f      	PUSH R21
000f8d df8a      	RCALL __REPACK
000f8e 915f      	POP  R21
                 __CDF10:
000f8f 9508      	RET
                 
                 __SWAPACC:
000f90 934f      	PUSH R20
000f91 01af      	MOVW R20,R30
000f92 01fd      	MOVW R30,R26
000f93 01da      	MOVW R26,R20
000f94 01ab      	MOVW R20,R22
000f95 01bc      	MOVW R22,R24
000f96 01ca      	MOVW R24,R20
000f97 2d40      	MOV  R20,R0
000f98 2c01      	MOV  R0,R1
000f99 2e14      	MOV  R1,R20
000f9a 914f      	POP  R20
000f9b 9508      	RET
                 
                 __UADD12:
000f9c 0fea      	ADD  R30,R26
000f9d 1ffb      	ADC  R31,R27
000f9e 1f68      	ADC  R22,R24
000f9f 9508      	RET
                 
                 __NEGMAN1:
000fa0 95e0      	COM  R30
000fa1 95f0      	COM  R31
000fa2 9560      	COM  R22
000fa3 5fef      	SUBI R30,-1
000fa4 4fff      	SBCI R31,-1
000fa5 4f6f      	SBCI R22,-1
000fa6 9508      	RET
                 
                 __SUBF12:
000fa7 935f      	PUSH R21
000fa8 df81      	RCALL __UNPACK
000fa9 3890      	CPI  R25,0x80
000faa f171      	BREQ __ADDF129
000fab e850      	LDI  R21,0x80
000fac 2615      	EOR  R1,R21
                 
000fad c004      	RJMP __ADDF120
                 
                 __ADDF12:
000fae 935f      	PUSH R21
000faf df7a      	RCALL __UNPACK
000fb0 3890      	CPI  R25,0x80
000fb1 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000fb2 3870      	CPI  R23,0x80
000fb3 f121      	BREQ __ADDF128
                 __ADDF121:
000fb4 2f57      	MOV  R21,R23
000fb5 1b59      	SUB  R21,R25
000fb6 f12b      	BRVS __ADDF1211
000fb7 f412      	BRPL __ADDF122
000fb8 dfd7      	RCALL __SWAPACC
000fb9 cffa      	RJMP __ADDF121
                 __ADDF122:
000fba 3158      	CPI  R21,24
000fbb f018      	BRLO __ADDF123
000fbc 27aa      	CLR  R26
000fbd 27bb      	CLR  R27
000fbe 2788      	CLR  R24
                 __ADDF123:
000fbf 3058      	CPI  R21,8
000fc0 f028      	BRLO __ADDF124
000fc1 2fab      	MOV  R26,R27
000fc2 2fb8      	MOV  R27,R24
000fc3 2788      	CLR  R24
000fc4 5058      	SUBI R21,8
000fc5 cff9      	RJMP __ADDF123
                 __ADDF124:
000fc6 2355      	TST  R21
000fc7 f029      	BREQ __ADDF126
                 __ADDF125:
000fc8 9586      	LSR  R24
000fc9 95b7      	ROR  R27
000fca 95a7      	ROR  R26
000fcb 955a      	DEC  R21
000fcc f7d9      	BRNE __ADDF125
                 __ADDF126:
000fcd 2d50      	MOV  R21,R0
000fce 2551      	EOR  R21,R1
000fcf f072      	BRMI __ADDF127
000fd0 dfcb      	RCALL __UADD12
000fd1 f438      	BRCC __ADDF129
000fd2 9567      	ROR  R22
000fd3 95f7      	ROR  R31
000fd4 95e7      	ROR  R30
000fd5 9573      	INC  R23
000fd6 f413      	BRVC __ADDF129
000fd7 c020      	RJMP __MAXRES
                 __ADDF128:
000fd8 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000fd9 df3e      	RCALL __REPACK
000fda 915f      	POP  R21
000fdb 9508      	RET
                 __ADDF1211:
000fdc f7d8      	BRCC __ADDF128
000fdd cffb      	RJMP __ADDF129
                 __ADDF127:
000fde 1bea      	SUB  R30,R26
000fdf 0bfb      	SBC  R31,R27
000fe0 0b68      	SBC  R22,R24
000fe1 f051      	BREQ __ZERORES
000fe2 f410      	BRCC __ADDF1210
000fe3 9400      	COM  R0
000fe4 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000fe5 2366      	TST  R22
000fe6 f392      	BRMI __ADDF129
000fe7 0fee      	LSL  R30
000fe8 1fff      	ROL  R31
000fe9 1f66      	ROL  R22
000fea 957a      	DEC  R23
000feb f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000fec 27ee      	CLR  R30
000fed 27ff      	CLR  R31
000fee 2766      	CLR  R22
000fef 2777      	CLR  R23
000ff0 915f      	POP  R21
000ff1 9508      	RET
                 
                 __MINRES:
000ff2 efef      	SER  R30
000ff3 efff      	SER  R31
000ff4 e76f      	LDI  R22,0x7F
000ff5 ef7f      	SER  R23
000ff6 915f      	POP  R21
000ff7 9508      	RET
                 
                 __MAXRES:
000ff8 efef      	SER  R30
000ff9 efff      	SER  R31
000ffa e76f      	LDI  R22,0x7F
000ffb e77f      	LDI  R23,0x7F
000ffc 915f      	POP  R21
000ffd 9508      	RET
                 
                 __MULF12:
000ffe 935f      	PUSH R21
000fff df2a      	RCALL __UNPACK
001000 3870      	CPI  R23,0x80
001001 f351      	BREQ __ZERORES
001002 3890      	CPI  R25,0x80
001003 f341      	BREQ __ZERORES
001004 2401      	EOR  R0,R1
001005 9408      	SEC
001006 1f79      	ADC  R23,R25
001007 f423      	BRVC __MULF124
001008 f31c      	BRLT __ZERORES
                 __MULF125:
001009 2000      	TST  R0
00100a f33a      	BRMI __MINRES
00100b cfec      	RJMP __MAXRES
                 __MULF124:
00100c 920f      	PUSH R0
00100d 931f      	PUSH R17
00100e 932f      	PUSH R18
00100f 933f      	PUSH R19
001010 934f      	PUSH R20
001011 2711      	CLR  R17
001012 2722      	CLR  R18
001013 2799      	CLR  R25
001014 9f68      	MUL  R22,R24
001015 01a0      	MOVW R20,R0
001016 9f8f      	MUL  R24,R31
001017 2d30      	MOV  R19,R0
001018 0d41      	ADD  R20,R1
001019 1f59      	ADC  R21,R25
00101a 9f6b      	MUL  R22,R27
00101b 0d30      	ADD  R19,R0
00101c 1d41      	ADC  R20,R1
00101d 1f59      	ADC  R21,R25
00101e 9f8e      	MUL  R24,R30
00101f d027      	RCALL __MULF126
001020 9fbf      	MUL  R27,R31
001021 d025      	RCALL __MULF126
001022 9f6a      	MUL  R22,R26
001023 d023      	RCALL __MULF126
001024 9fbe      	MUL  R27,R30
001025 d01d      	RCALL __MULF127
001026 9faf      	MUL  R26,R31
001027 d01b      	RCALL __MULF127
001028 9fae      	MUL  R26,R30
001029 0d11      	ADD  R17,R1
00102a 1f29      	ADC  R18,R25
00102b 1f39      	ADC  R19,R25
00102c 1f49      	ADC  R20,R25
00102d 1f59      	ADC  R21,R25
00102e 2fe3      	MOV  R30,R19
00102f 2ff4      	MOV  R31,R20
001030 2f65      	MOV  R22,R21
001031 2f52      	MOV  R21,R18
001032 914f      	POP  R20
001033 913f      	POP  R19
001034 912f      	POP  R18
001035 911f      	POP  R17
001036 900f      	POP  R0
001037 2366      	TST  R22
001038 f02a      	BRMI __MULF122
001039 0f55      	LSL  R21
00103a 1fee      	ROL  R30
00103b 1fff      	ROL  R31
00103c 1f66      	ROL  R22
00103d c002      	RJMP __MULF123
                 __MULF122:
00103e 9573      	INC  R23
00103f f24b      	BRVS __MULF125
                 __MULF123:
001040 decd      	RCALL __ROUND_REPACK
001041 915f      	POP  R21
001042 9508      	RET
                 
                 __MULF127:
001043 0d10      	ADD  R17,R0
001044 1d21      	ADC  R18,R1
001045 1f39      	ADC  R19,R25
001046 c002      	RJMP __MULF128
                 __MULF126:
001047 0d20      	ADD  R18,R0
001048 1d31      	ADC  R19,R1
                 __MULF128:
001049 1f49      	ADC  R20,R25
00104a 1f59      	ADC  R21,R25
00104b 9508      	RET
                 
                 __DIVF21:
00104c 935f      	PUSH R21
00104d dedc      	RCALL __UNPACK
00104e 3870      	CPI  R23,0x80
00104f f421      	BRNE __DIVF210
001050 2011      	TST  R1
                 __DIVF211:
001051 f40a      	BRPL __DIVF219
001052 cf9f      	RJMP __MINRES
                 __DIVF219:
001053 cfa4      	RJMP __MAXRES
                 __DIVF210:
001054 3890      	CPI  R25,0x80
001055 f409      	BRNE __DIVF218
                 __DIVF217:
001056 cf95      	RJMP __ZERORES
                 __DIVF218:
001057 2401      	EOR  R0,R1
001058 9408      	SEC
001059 0b97      	SBC  R25,R23
00105a f41b      	BRVC __DIVF216
00105b f3d4      	BRLT __DIVF217
00105c 2000      	TST  R0
00105d cff3      	RJMP __DIVF211
                 __DIVF216:
00105e 2f79      	MOV  R23,R25
00105f 931f      	PUSH R17
001060 932f      	PUSH R18
001061 933f      	PUSH R19
001062 934f      	PUSH R20
001063 2411      	CLR  R1
001064 2711      	CLR  R17
001065 2722      	CLR  R18
001066 2733      	CLR  R19
001067 2744      	CLR  R20
001068 2755      	CLR  R21
001069 e290      	LDI  R25,32
                 __DIVF212:
00106a 17ae      	CP   R26,R30
00106b 07bf      	CPC  R27,R31
00106c 0786      	CPC  R24,R22
00106d 0741      	CPC  R20,R17
00106e f030      	BRLO __DIVF213
00106f 1bae      	SUB  R26,R30
001070 0bbf      	SBC  R27,R31
001071 0b86      	SBC  R24,R22
001072 0b41      	SBC  R20,R17
001073 9408      	SEC
001074 c001      	RJMP __DIVF214
                 __DIVF213:
001075 9488      	CLC
                 __DIVF214:
001076 1f55      	ROL  R21
001077 1f22      	ROL  R18
001078 1f33      	ROL  R19
001079 1c11      	ROL  R1
00107a 1faa      	ROL  R26
00107b 1fbb      	ROL  R27
00107c 1f88      	ROL  R24
00107d 1f44      	ROL  R20
00107e 959a      	DEC  R25
00107f f751      	BRNE __DIVF212
001080 01f9      	MOVW R30,R18
001081 2d61      	MOV  R22,R1
001082 914f      	POP  R20
001083 913f      	POP  R19
001084 912f      	POP  R18
001085 911f      	POP  R17
001086 2366      	TST  R22
001087 f032      	BRMI __DIVF215
001088 0f55      	LSL  R21
001089 1fee      	ROL  R30
00108a 1fff      	ROL  R31
00108b 1f66      	ROL  R22
00108c 957a      	DEC  R23
00108d f243      	BRVS __DIVF217
                 __DIVF215:
00108e de7f      	RCALL __ROUND_REPACK
00108f 915f      	POP  R21
001090 9508      	RET
                 
                 __CMPF12:
001091 2399      	TST  R25
001092 f09a      	BRMI __CMPF120
001093 2377      	TST  R23
001094 f042      	BRMI __CMPF121
001095 1797      	CP   R25,R23
001096 f048      	BRLO __CMPF122
001097 f429      	BRNE __CMPF121
001098 17ae      	CP   R26,R30
001099 07bf      	CPC  R27,R31
00109a 0786      	CPC  R24,R22
00109b f020      	BRLO __CMPF122
00109c f031      	BREQ __CMPF123
                 __CMPF121:
00109d 9498      	CLZ
00109e 9488      	CLC
00109f 9508      	RET
                 __CMPF122:
0010a0 9498      	CLZ
0010a1 9408      	SEC
0010a2 9508      	RET
                 __CMPF123:
0010a3 9418      	SEZ
0010a4 9488      	CLC
0010a5 9508      	RET
                 __CMPF120:
0010a6 2377      	TST  R23
0010a7 f7c2      	BRPL __CMPF122
0010a8 1797      	CP   R25,R23
0010a9 f398      	BRLO __CMPF121
0010aa f7a9      	BRNE __CMPF122
0010ab 17ea      	CP   R30,R26
0010ac 07fb      	CPC  R31,R27
0010ad 0768      	CPC  R22,R24
0010ae f388      	BRLO __CMPF122
0010af f399      	BREQ __CMPF123
0010b0 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0010b1 2400      	CLR  R0
0010b2 0daf      	ADD  R26,R15
0010b3 1db0      	ADC  R27,R0
0010b4 9508      	RET
                 
                 __ANEGW1:
0010b5 95f1      	NEG  R31
0010b6 95e1      	NEG  R30
0010b7 40f0      	SBCI R31,0
0010b8 9508      	RET
                 
                 __ANEGD1:
0010b9 95f0      	COM  R31
0010ba 9560      	COM  R22
0010bb 9570      	COM  R23
0010bc 95e1      	NEG  R30
0010bd 4fff      	SBCI R31,-1
0010be 4f6f      	SBCI R22,-1
0010bf 4f7f      	SBCI R23,-1
0010c0 9508      	RET
                 
                 __ASRW8:
0010c1 2fef      	MOV  R30,R31
0010c2 27ff      	CLR  R31
0010c3 fde7      	SBRC R30,7
0010c4 efff      	SER  R31
0010c5 9508      	RET
                 
                 __CBD1:
0010c6 2ffe      	MOV  R31,R30
0010c7 0fff      	ADD  R31,R31
0010c8 0bff      	SBC  R31,R31
0010c9 2f6f      	MOV  R22,R31
0010ca 2f7f      	MOV  R23,R31
0010cb 9508      	RET
                 
                 __CWD1:
0010cc 2f6f      	MOV  R22,R31
0010cd 0f66      	ADD  R22,R22
0010ce 0b66      	SBC  R22,R22
0010cf 2f76      	MOV  R23,R22
0010d0 9508      	RET
                 
                 __CWD2:
0010d1 2f8b      	MOV  R24,R27
0010d2 0f88      	ADD  R24,R24
0010d3 0b88      	SBC  R24,R24
0010d4 2f98      	MOV  R25,R24
0010d5 9508      	RET
                 
                 __MULW12U:
0010d6 9ffa      	MUL  R31,R26
0010d7 2df0      	MOV  R31,R0
0010d8 9feb      	MUL  R30,R27
0010d9 0df0      	ADD  R31,R0
0010da 9fea      	MUL  R30,R26
0010db 2de0      	MOV  R30,R0
0010dc 0df1      	ADD  R31,R1
0010dd 9508      	RET
                 
                 __MULB1W2U:
0010de 2f6e      	MOV  R22,R30
0010df 9f6a      	MUL  R22,R26
0010e0 01f0      	MOVW R30,R0
0010e1 9f6b      	MUL  R22,R27
0010e2 0df0      	ADD  R31,R0
0010e3 9508      	RET
                 
                 __DIVB21U:
0010e4 2400      	CLR  R0
0010e5 e098      	LDI  R25,8
                 __DIVB21U1:
0010e6 0faa      	LSL  R26
0010e7 1c00      	ROL  R0
0010e8 1a0e      	SUB  R0,R30
0010e9 f410      	BRCC __DIVB21U2
0010ea 0e0e      	ADD  R0,R30
0010eb c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0010ec 60a1      	SBR  R26,1
                 __DIVB21U3:
0010ed 959a      	DEC  R25
0010ee f7b9      	BRNE __DIVB21U1
0010ef 2fea      	MOV  R30,R26
0010f0 2da0      	MOV  R26,R0
0010f1 9508      	RET
                 
                 __DIVB21:
0010f2 d039      	RCALL __CHKSIGNB
0010f3 dff0      	RCALL __DIVB21U
0010f4 f40e      	BRTC __DIVB211
0010f5 95e1      	NEG  R30
                 __DIVB211:
0010f6 9508      	RET
                 
                 __DIVD21U:
0010f7 933f      	PUSH R19
0010f8 934f      	PUSH R20
0010f9 935f      	PUSH R21
0010fa 2400      	CLR  R0
0010fb 2411      	CLR  R1
0010fc 2744      	CLR  R20
0010fd 2755      	CLR  R21
0010fe e230      	LDI  R19,32
                 __DIVD21U1:
0010ff 0faa      	LSL  R26
001100 1fbb      	ROL  R27
001101 1f88      	ROL  R24
001102 1f99      	ROL  R25
001103 1c00      	ROL  R0
001104 1c11      	ROL  R1
001105 1f44      	ROL  R20
001106 1f55      	ROL  R21
001107 1a0e      	SUB  R0,R30
001108 0a1f      	SBC  R1,R31
001109 0b46      	SBC  R20,R22
00110a 0b57      	SBC  R21,R23
00110b f428      	BRCC __DIVD21U2
00110c 0e0e      	ADD  R0,R30
00110d 1e1f      	ADC  R1,R31
00110e 1f46      	ADC  R20,R22
00110f 1f57      	ADC  R21,R23
001110 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001111 60a1      	SBR  R26,1
                 __DIVD21U3:
001112 953a      	DEC  R19
001113 f759      	BRNE __DIVD21U1
001114 01fd      	MOVW R30,R26
001115 01bc      	MOVW R22,R24
001116 01d0      	MOVW R26,R0
001117 01ca      	MOVW R24,R20
001118 915f      	POP  R21
001119 914f      	POP  R20
00111a 913f      	POP  R19
00111b 9508      	RET
                 
                 __MODB21:
00111c 94e8      	CLT
00111d ffa7      	SBRS R26,7
00111e c002      	RJMP __MODB211
00111f 95a1      	NEG  R26
001120 9468      	SET
                 __MODB211:
001121 fde7      	SBRC R30,7
001122 95e1      	NEG  R30
001123 dfc0      	RCALL __DIVB21U
001124 2fea      	MOV  R30,R26
001125 f40e      	BRTC __MODB212
001126 95e1      	NEG  R30
                 __MODB212:
001127 9508      	RET
                 
                 __MODD21U:
001128 dfce      	RCALL __DIVD21U
001129 01fd      	MOVW R30,R26
00112a 01bc      	MOVW R22,R24
00112b 9508      	RET
                 
                 __CHKSIGNB:
00112c 94e8      	CLT
00112d ffe7      	SBRS R30,7
00112e c002      	RJMP __CHKSB1
00112f 95e1      	NEG  R30
001130 9468      	SET
                 __CHKSB1:
001131 ffa7      	SBRS R26,7
001132 c004      	RJMP __CHKSB2
001133 95a1      	NEG  R26
001134 f800      	BLD  R0,0
001135 9403      	INC  R0
001136 fa00      	BST  R0,0
                 __CHKSB2:
001137 9508      	RET
                 
                 __GETW1P:
001138 91ed      	LD   R30,X+
001139 91fc      	LD   R31,X
00113a 9711      	SBIW R26,1
00113b 9508      	RET
                 
                 __GETD1P:
00113c 91ed      	LD   R30,X+
00113d 91fd      	LD   R31,X+
00113e 916d      	LD   R22,X+
00113f 917c      	LD   R23,X
001140 9713      	SBIW R26,3
001141 9508      	RET
                 
                 __PUTDP1:
001142 93ed      	ST   X+,R30
001143 93fd      	ST   X+,R31
001144 936d      	ST   X+,R22
001145 937c      	ST   X,R23
001146 9508      	RET
                 
                 __GETD1S0:
001147 81e8      	LD   R30,Y
001148 81f9      	LDD  R31,Y+1
001149 816a      	LDD  R22,Y+2
00114a 817b      	LDD  R23,Y+3
00114b 9508      	RET
                 
                 __GETD2S0:
00114c 81a8      	LD   R26,Y
00114d 81b9      	LDD  R27,Y+1
00114e 818a      	LDD  R24,Y+2
00114f 819b      	LDD  R25,Y+3
001150 9508      	RET
                 
                 __PUTD1S0:
001151 83e8      	ST   Y,R30
001152 83f9      	STD  Y+1,R31
001153 836a      	STD  Y+2,R22
001154 837b      	STD  Y+3,R23
001155 9508      	RET
                 
                 __PUTPARD1L:
001156 e060      	LDI  R22,0
001157 e070      	LDI  R23,0
                 __PUTPARD1:
001158 937a      	ST   -Y,R23
001159 936a      	ST   -Y,R22
00115a 93fa      	ST   -Y,R31
00115b 93ea      	ST   -Y,R30
00115c 9508      	RET
                 
                 __CDF2U:
00115d 9468      	SET
00115e c001      	RJMP __CDF2U0
                 __CDF2:
00115f 94e8      	CLT
                 __CDF2U0:
001160 d001      	RCALL __SWAPD12
001161 de13      	RCALL __CDF1U0
                 
                 __SWAPD12:
001162 2e18      	MOV  R1,R24
001163 2f86      	MOV  R24,R22
001164 2d61      	MOV  R22,R1
001165 2e19      	MOV  R1,R25
001166 2f97      	MOV  R25,R23
001167 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001168 2e1b      	MOV  R1,R27
001169 2fbf      	MOV  R27,R31
00116a 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00116b 2e1a      	MOV  R1,R26
00116c 2fae      	MOV  R26,R30
00116d 2de1      	MOV  R30,R1
00116e 9508      	RET
                 
                 __CPD10:
00116f 9730      	SBIW R30,0
001170 4060      	SBCI R22,0
001171 4070      	SBCI R23,0
001172 9508      	RET
                 
                 __CPD02:
001173 2400      	CLR  R0
001174 160a      	CP   R0,R26
001175 060b      	CPC  R0,R27
001176 0608      	CPC  R0,R24
001177 0609      	CPC  R0,R25
001178 9508      	RET
                 
                 __SAVELOCR6:
001179 935a      	ST   -Y,R21
                 __SAVELOCR5:
00117a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00117b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00117c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00117d 931a      	ST   -Y,R17
00117e 930a      	ST   -Y,R16
00117f 9508      	RET
                 
                 __LOADLOCR6:
001180 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001181 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001182 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001183 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001184 8119      	LDD  R17,Y+1
001185 8108      	LD   R16,Y
001186 9508      	RET
                 
                 __INITLOCW:
001187 0fac      	ADD  R26,R28
001188 1fbd      	ADC  R27,R29
                 __INITLOC0:
001189 9005      	LPM  R0,Z+
00118a 920d      	ST   X+,R0
00118b 9701      	SBIW R24,1
00118c f7e1      	BRNE __INITLOC0
00118d 9508      	RET
=======
000ee9 91e9      	ld   r30,y+
000eea 91f9      	ld   r31,y+
000eeb 9630      	adiw r30,0
000eec f039      	breq __delay_ms1
                 __delay_ms0:
                +
000eed e686     +LDI R24 , LOW ( 0xE66 )
000eee e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000eef 9701     +SBIW R24 , 1
000ef0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000ef1 95a8      	wdr
000ef2 9731      	sbiw r30,1
000ef3 f7c9      	brne __delay_ms0
                 __delay_ms1:
000ef4 9508      	ret
                 
                 __ANEGF1:
000ef5 9730      	SBIW R30,0
000ef6 4060      	SBCI R22,0
000ef7 4070      	SBCI R23,0
000ef8 f009      	BREQ __ANEGF10
000ef9 5870      	SUBI R23,0x80
                 __ANEGF10:
000efa 9508      	RET
                 
                 __ROUND_REPACK:
000efb 2355      	TST  R21
000efc f442      	BRPL __REPACK
000efd 3850      	CPI  R21,0x80
000efe f411      	BRNE __ROUND_REPACK0
000eff ffe0      	SBRS R30,0
000f00 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000f01 9631      	ADIW R30,1
000f02 1f69      	ADC  R22,R25
000f03 1f79      	ADC  R23,R25
000f04 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000f05 e850      	LDI  R21,0x80
000f06 2757      	EOR  R21,R23
000f07 f411      	BRNE __REPACK0
000f08 935f      	PUSH R21
000f09 c0cf      	RJMP __ZERORES
                 __REPACK0:
000f0a 3f5f      	CPI  R21,0xFF
000f0b f031      	BREQ __REPACK1
000f0c 0f66      	LSL  R22
000f0d 0c00      	LSL  R0
000f0e 9557      	ROR  R21
000f0f 9567      	ROR  R22
000f10 2f75      	MOV  R23,R21
000f11 9508      	RET
                 __REPACK1:
000f12 935f      	PUSH R21
000f13 2000      	TST  R0
000f14 f00a      	BRMI __REPACK2
000f15 c0cf      	RJMP __MAXRES
                 __REPACK2:
000f16 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000f17 e850      	LDI  R21,0x80
000f18 2e19      	MOV  R1,R25
000f19 2215      	AND  R1,R21
000f1a 0f88      	LSL  R24
000f1b 1f99      	ROL  R25
000f1c 2795      	EOR  R25,R21
000f1d 0f55      	LSL  R21
000f1e 9587      	ROR  R24
                 
                 __UNPACK1:
000f1f e850      	LDI  R21,0x80
000f20 2e07      	MOV  R0,R23
000f21 2205      	AND  R0,R21
000f22 0f66      	LSL  R22
000f23 1f77      	ROL  R23
000f24 2775      	EOR  R23,R21
000f25 0f55      	LSL  R21
000f26 9567      	ROR  R22
000f27 9508      	RET
                 
                 __CFD1U:
000f28 9468      	SET
000f29 c001      	RJMP __CFD1U0
                 __CFD1:
000f2a 94e8      	CLT
                 __CFD1U0:
000f2b 935f      	PUSH R21
000f2c dff2      	RCALL __UNPACK1
000f2d 3870      	CPI  R23,0x80
000f2e f018      	BRLO __CFD10
000f2f 3f7f      	CPI  R23,0xFF
000f30 f408      	BRCC __CFD10
000f31 c0a7      	RJMP __ZERORES
                 __CFD10:
000f32 e156      	LDI  R21,22
000f33 1b57      	SUB  R21,R23
000f34 f4aa      	BRPL __CFD11
000f35 9551      	NEG  R21
000f36 3058      	CPI  R21,8
000f37 f40e      	BRTC __CFD19
000f38 3059      	CPI  R21,9
                 __CFD19:
000f39 f030      	BRLO __CFD17
000f3a efef      	SER  R30
000f3b efff      	SER  R31
000f3c ef6f      	SER  R22
000f3d e77f      	LDI  R23,0x7F
000f3e f977      	BLD  R23,7
000f3f c01a      	RJMP __CFD15
                 __CFD17:
000f40 2777      	CLR  R23
000f41 2355      	TST  R21
000f42 f0b9      	BREQ __CFD15
                 __CFD18:
000f43 0fee      	LSL  R30
000f44 1fff      	ROL  R31
000f45 1f66      	ROL  R22
000f46 1f77      	ROL  R23
000f47 955a      	DEC  R21
000f48 f7d1      	BRNE __CFD18
000f49 c010      	RJMP __CFD15
                 __CFD11:
000f4a 2777      	CLR  R23
                 __CFD12:
000f4b 3058      	CPI  R21,8
000f4c f028      	BRLO __CFD13
000f4d 2fef      	MOV  R30,R31
000f4e 2ff6      	MOV  R31,R22
000f4f 2f67      	MOV  R22,R23
000f50 5058      	SUBI R21,8
000f51 cff9      	RJMP __CFD12
                 __CFD13:
000f52 2355      	TST  R21
000f53 f031      	BREQ __CFD15
                 __CFD14:
000f54 9576      	LSR  R23
000f55 9567      	ROR  R22
000f56 95f7      	ROR  R31
000f57 95e7      	ROR  R30
000f58 955a      	DEC  R21
000f59 f7d1      	BRNE __CFD14
                 __CFD15:
000f5a 2000      	TST  R0
000f5b f40a      	BRPL __CFD16
000f5c d149      	RCALL __ANEGD1
                 __CFD16:
000f5d 915f      	POP  R21
000f5e 9508      	RET
                 
                 __CDF1U:
000f5f 9468      	SET
000f60 c001      	RJMP __CDF1U0
                 __CDF1:
000f61 94e8      	CLT
                 __CDF1U0:
000f62 9730      	SBIW R30,0
000f63 4060      	SBCI R22,0
000f64 4070      	SBCI R23,0
000f65 f0b1      	BREQ __CDF10
000f66 2400      	CLR  R0
000f67 f026      	BRTS __CDF11
000f68 2377      	TST  R23
000f69 f412      	BRPL __CDF11
000f6a 9400      	COM  R0
000f6b d13a      	RCALL __ANEGD1
                 __CDF11:
000f6c 2e17      	MOV  R1,R23
000f6d e17e      	LDI  R23,30
000f6e 2011      	TST  R1
                 __CDF12:
000f6f f032      	BRMI __CDF13
000f70 957a      	DEC  R23
000f71 0fee      	LSL  R30
000f72 1fff      	ROL  R31
000f73 1f66      	ROL  R22
000f74 1c11      	ROL  R1
000f75 cff9      	RJMP __CDF12
                 __CDF13:
000f76 2fef      	MOV  R30,R31
000f77 2ff6      	MOV  R31,R22
000f78 2d61      	MOV  R22,R1
000f79 935f      	PUSH R21
000f7a df8a      	RCALL __REPACK
000f7b 915f      	POP  R21
                 __CDF10:
000f7c 9508      	RET
                 
                 __SWAPACC:
000f7d 934f      	PUSH R20
000f7e 01af      	MOVW R20,R30
000f7f 01fd      	MOVW R30,R26
000f80 01da      	MOVW R26,R20
000f81 01ab      	MOVW R20,R22
000f82 01bc      	MOVW R22,R24
000f83 01ca      	MOVW R24,R20
000f84 2d40      	MOV  R20,R0
000f85 2c01      	MOV  R0,R1
000f86 2e14      	MOV  R1,R20
000f87 914f      	POP  R20
000f88 9508      	RET
                 
                 __UADD12:
000f89 0fea      	ADD  R30,R26
000f8a 1ffb      	ADC  R31,R27
000f8b 1f68      	ADC  R22,R24
000f8c 9508      	RET
                 
                 __NEGMAN1:
000f8d 95e0      	COM  R30
000f8e 95f0      	COM  R31
000f8f 9560      	COM  R22
000f90 5fef      	SUBI R30,-1
000f91 4fff      	SBCI R31,-1
000f92 4f6f      	SBCI R22,-1
000f93 9508      	RET
                 
                 __SUBF12:
000f94 935f      	PUSH R21
000f95 df81      	RCALL __UNPACK
000f96 3890      	CPI  R25,0x80
000f97 f171      	BREQ __ADDF129
000f98 e850      	LDI  R21,0x80
000f99 2615      	EOR  R1,R21
                 
000f9a c004      	RJMP __ADDF120
                 
                 __ADDF12:
000f9b 935f      	PUSH R21
000f9c df7a      	RCALL __UNPACK
000f9d 3890      	CPI  R25,0x80
000f9e f139      	BREQ __ADDF129
                 
                 __ADDF120:
000f9f 3870      	CPI  R23,0x80
000fa0 f121      	BREQ __ADDF128
                 __ADDF121:
000fa1 2f57      	MOV  R21,R23
000fa2 1b59      	SUB  R21,R25
000fa3 f12b      	BRVS __ADDF1211
000fa4 f412      	BRPL __ADDF122
000fa5 dfd7      	RCALL __SWAPACC
000fa6 cffa      	RJMP __ADDF121
                 __ADDF122:
000fa7 3158      	CPI  R21,24
000fa8 f018      	BRLO __ADDF123
000fa9 27aa      	CLR  R26
000faa 27bb      	CLR  R27
000fab 2788      	CLR  R24
                 __ADDF123:
000fac 3058      	CPI  R21,8
000fad f028      	BRLO __ADDF124
000fae 2fab      	MOV  R26,R27
000faf 2fb8      	MOV  R27,R24
000fb0 2788      	CLR  R24
000fb1 5058      	SUBI R21,8
000fb2 cff9      	RJMP __ADDF123
                 __ADDF124:
000fb3 2355      	TST  R21
000fb4 f029      	BREQ __ADDF126
                 __ADDF125:
000fb5 9586      	LSR  R24
000fb6 95b7      	ROR  R27
000fb7 95a7      	ROR  R26
000fb8 955a      	DEC  R21
000fb9 f7d9      	BRNE __ADDF125
                 __ADDF126:
000fba 2d50      	MOV  R21,R0
000fbb 2551      	EOR  R21,R1
000fbc f072      	BRMI __ADDF127
000fbd dfcb      	RCALL __UADD12
000fbe f438      	BRCC __ADDF129
000fbf 9567      	ROR  R22
000fc0 95f7      	ROR  R31
000fc1 95e7      	ROR  R30
000fc2 9573      	INC  R23
000fc3 f413      	BRVC __ADDF129
000fc4 c020      	RJMP __MAXRES
                 __ADDF128:
000fc5 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000fc6 df3e      	RCALL __REPACK
000fc7 915f      	POP  R21
000fc8 9508      	RET
                 __ADDF1211:
000fc9 f7d8      	BRCC __ADDF128
000fca cffb      	RJMP __ADDF129
                 __ADDF127:
000fcb 1bea      	SUB  R30,R26
000fcc 0bfb      	SBC  R31,R27
000fcd 0b68      	SBC  R22,R24
000fce f051      	BREQ __ZERORES
000fcf f410      	BRCC __ADDF1210
000fd0 9400      	COM  R0
000fd1 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000fd2 2366      	TST  R22
000fd3 f392      	BRMI __ADDF129
000fd4 0fee      	LSL  R30
000fd5 1fff      	ROL  R31
000fd6 1f66      	ROL  R22
000fd7 957a      	DEC  R23
000fd8 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000fd9 27ee      	CLR  R30
000fda 27ff      	CLR  R31
000fdb 2766      	CLR  R22
000fdc 2777      	CLR  R23
000fdd 915f      	POP  R21
000fde 9508      	RET
                 
                 __MINRES:
000fdf efef      	SER  R30
000fe0 efff      	SER  R31
000fe1 e76f      	LDI  R22,0x7F
000fe2 ef7f      	SER  R23
000fe3 915f      	POP  R21
000fe4 9508      	RET
                 
                 __MAXRES:
000fe5 efef      	SER  R30
000fe6 efff      	SER  R31
000fe7 e76f      	LDI  R22,0x7F
000fe8 e77f      	LDI  R23,0x7F
000fe9 915f      	POP  R21
000fea 9508      	RET
                 
                 __MULF12:
000feb 935f      	PUSH R21
000fec df2a      	RCALL __UNPACK
000fed 3870      	CPI  R23,0x80
000fee f351      	BREQ __ZERORES
000fef 3890      	CPI  R25,0x80
000ff0 f341      	BREQ __ZERORES
000ff1 2401      	EOR  R0,R1
000ff2 9408      	SEC
000ff3 1f79      	ADC  R23,R25
000ff4 f423      	BRVC __MULF124
000ff5 f31c      	BRLT __ZERORES
                 __MULF125:
000ff6 2000      	TST  R0
000ff7 f33a      	BRMI __MINRES
000ff8 cfec      	RJMP __MAXRES
                 __MULF124:
000ff9 920f      	PUSH R0
000ffa 931f      	PUSH R17
000ffb 932f      	PUSH R18
000ffc 933f      	PUSH R19
000ffd 934f      	PUSH R20
000ffe 2711      	CLR  R17
000fff 2722      	CLR  R18
001000 2799      	CLR  R25
001001 9f68      	MUL  R22,R24
001002 01a0      	MOVW R20,R0
001003 9f8f      	MUL  R24,R31
001004 2d30      	MOV  R19,R0
001005 0d41      	ADD  R20,R1
001006 1f59      	ADC  R21,R25
001007 9f6b      	MUL  R22,R27
001008 0d30      	ADD  R19,R0
001009 1d41      	ADC  R20,R1
00100a 1f59      	ADC  R21,R25
00100b 9f8e      	MUL  R24,R30
00100c d027      	RCALL __MULF126
00100d 9fbf      	MUL  R27,R31
00100e d025      	RCALL __MULF126
00100f 9f6a      	MUL  R22,R26
001010 d023      	RCALL __MULF126
001011 9fbe      	MUL  R27,R30
001012 d01d      	RCALL __MULF127
001013 9faf      	MUL  R26,R31
001014 d01b      	RCALL __MULF127
001015 9fae      	MUL  R26,R30
001016 0d11      	ADD  R17,R1
001017 1f29      	ADC  R18,R25
001018 1f39      	ADC  R19,R25
001019 1f49      	ADC  R20,R25
00101a 1f59      	ADC  R21,R25
00101b 2fe3      	MOV  R30,R19
00101c 2ff4      	MOV  R31,R20
00101d 2f65      	MOV  R22,R21
00101e 2f52      	MOV  R21,R18
00101f 914f      	POP  R20
001020 913f      	POP  R19
001021 912f      	POP  R18
001022 911f      	POP  R17
001023 900f      	POP  R0
001024 2366      	TST  R22
001025 f02a      	BRMI __MULF122
001026 0f55      	LSL  R21
001027 1fee      	ROL  R30
001028 1fff      	ROL  R31
001029 1f66      	ROL  R22
00102a c002      	RJMP __MULF123
                 __MULF122:
00102b 9573      	INC  R23
00102c f24b      	BRVS __MULF125
                 __MULF123:
00102d decd      	RCALL __ROUND_REPACK
00102e 915f      	POP  R21
00102f 9508      	RET
                 
                 __MULF127:
001030 0d10      	ADD  R17,R0
001031 1d21      	ADC  R18,R1
001032 1f39      	ADC  R19,R25
001033 c002      	RJMP __MULF128
                 __MULF126:
001034 0d20      	ADD  R18,R0
001035 1d31      	ADC  R19,R1
                 __MULF128:
001036 1f49      	ADC  R20,R25
001037 1f59      	ADC  R21,R25
001038 9508      	RET
                 
                 __DIVF21:
001039 935f      	PUSH R21
00103a dedc      	RCALL __UNPACK
00103b 3870      	CPI  R23,0x80
00103c f421      	BRNE __DIVF210
00103d 2011      	TST  R1
                 __DIVF211:
00103e f40a      	BRPL __DIVF219
00103f cf9f      	RJMP __MINRES
                 __DIVF219:
001040 cfa4      	RJMP __MAXRES
                 __DIVF210:
001041 3890      	CPI  R25,0x80
001042 f409      	BRNE __DIVF218
                 __DIVF217:
001043 cf95      	RJMP __ZERORES
                 __DIVF218:
001044 2401      	EOR  R0,R1
001045 9408      	SEC
001046 0b97      	SBC  R25,R23
001047 f41b      	BRVC __DIVF216
001048 f3d4      	BRLT __DIVF217
001049 2000      	TST  R0
00104a cff3      	RJMP __DIVF211
                 __DIVF216:
00104b 2f79      	MOV  R23,R25
00104c 931f      	PUSH R17
00104d 932f      	PUSH R18
00104e 933f      	PUSH R19
00104f 934f      	PUSH R20
001050 2411      	CLR  R1
001051 2711      	CLR  R17
001052 2722      	CLR  R18
001053 2733      	CLR  R19
001054 2744      	CLR  R20
001055 2755      	CLR  R21
001056 e290      	LDI  R25,32
                 __DIVF212:
001057 17ae      	CP   R26,R30
001058 07bf      	CPC  R27,R31
001059 0786      	CPC  R24,R22
00105a 0741      	CPC  R20,R17
00105b f030      	BRLO __DIVF213
00105c 1bae      	SUB  R26,R30
00105d 0bbf      	SBC  R27,R31
00105e 0b86      	SBC  R24,R22
00105f 0b41      	SBC  R20,R17
001060 9408      	SEC
001061 c001      	RJMP __DIVF214
                 __DIVF213:
001062 9488      	CLC
                 __DIVF214:
001063 1f55      	ROL  R21
001064 1f22      	ROL  R18
001065 1f33      	ROL  R19
001066 1c11      	ROL  R1
001067 1faa      	ROL  R26
001068 1fbb      	ROL  R27
001069 1f88      	ROL  R24
00106a 1f44      	ROL  R20
00106b 959a      	DEC  R25
00106c f751      	BRNE __DIVF212
00106d 01f9      	MOVW R30,R18
00106e 2d61      	MOV  R22,R1
00106f 914f      	POP  R20
001070 913f      	POP  R19
001071 912f      	POP  R18
001072 911f      	POP  R17
001073 2366      	TST  R22
001074 f032      	BRMI __DIVF215
001075 0f55      	LSL  R21
001076 1fee      	ROL  R30
001077 1fff      	ROL  R31
001078 1f66      	ROL  R22
001079 957a      	DEC  R23
00107a f243      	BRVS __DIVF217
                 __DIVF215:
00107b de7f      	RCALL __ROUND_REPACK
00107c 915f      	POP  R21
00107d 9508      	RET
                 
                 __CMPF12:
00107e 2399      	TST  R25
00107f f09a      	BRMI __CMPF120
001080 2377      	TST  R23
001081 f042      	BRMI __CMPF121
001082 1797      	CP   R25,R23
001083 f048      	BRLO __CMPF122
001084 f429      	BRNE __CMPF121
001085 17ae      	CP   R26,R30
001086 07bf      	CPC  R27,R31
001087 0786      	CPC  R24,R22
001088 f020      	BRLO __CMPF122
001089 f031      	BREQ __CMPF123
                 __CMPF121:
00108a 9498      	CLZ
00108b 9488      	CLC
00108c 9508      	RET
                 __CMPF122:
00108d 9498      	CLZ
00108e 9408      	SEC
00108f 9508      	RET
                 __CMPF123:
001090 9418      	SEZ
001091 9488      	CLC
001092 9508      	RET
                 __CMPF120:
001093 2377      	TST  R23
001094 f7c2      	BRPL __CMPF122
001095 1797      	CP   R25,R23
001096 f398      	BRLO __CMPF121
001097 f7a9      	BRNE __CMPF122
001098 17ea      	CP   R30,R26
001099 07fb      	CPC  R31,R27
00109a 0768      	CPC  R22,R24
00109b f388      	BRLO __CMPF122
00109c f399      	BREQ __CMPF123
00109d cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00109e 2400      	CLR  R0
00109f 0daf      	ADD  R26,R15
0010a0 1db0      	ADC  R27,R0
0010a1 9508      	RET
                 
                 __ANEGW1:
0010a2 95f1      	NEG  R31
0010a3 95e1      	NEG  R30
0010a4 40f0      	SBCI R31,0
0010a5 9508      	RET
                 
                 __ANEGD1:
0010a6 95f0      	COM  R31
0010a7 9560      	COM  R22
0010a8 9570      	COM  R23
0010a9 95e1      	NEG  R30
0010aa 4fff      	SBCI R31,-1
0010ab 4f6f      	SBCI R22,-1
0010ac 4f7f      	SBCI R23,-1
0010ad 9508      	RET
                 
                 __ASRW8:
0010ae 2fef      	MOV  R30,R31
0010af 27ff      	CLR  R31
0010b0 fde7      	SBRC R30,7
0010b1 efff      	SER  R31
0010b2 9508      	RET
                 
                 __CBD1:
0010b3 2ffe      	MOV  R31,R30
0010b4 0fff      	ADD  R31,R31
0010b5 0bff      	SBC  R31,R31
0010b6 2f6f      	MOV  R22,R31
0010b7 2f7f      	MOV  R23,R31
0010b8 9508      	RET
                 
                 __CWD1:
0010b9 2f6f      	MOV  R22,R31
0010ba 0f66      	ADD  R22,R22
0010bb 0b66      	SBC  R22,R22
0010bc 2f76      	MOV  R23,R22
0010bd 9508      	RET
                 
                 __CWD2:
0010be 2f8b      	MOV  R24,R27
0010bf 0f88      	ADD  R24,R24
0010c0 0b88      	SBC  R24,R24
0010c1 2f98      	MOV  R25,R24
0010c2 9508      	RET
                 
                 __MULW12U:
0010c3 9ffa      	MUL  R31,R26
0010c4 2df0      	MOV  R31,R0
0010c5 9feb      	MUL  R30,R27
0010c6 0df0      	ADD  R31,R0
0010c7 9fea      	MUL  R30,R26
0010c8 2de0      	MOV  R30,R0
0010c9 0df1      	ADD  R31,R1
0010ca 9508      	RET
                 
                 __DIVB21U:
0010cb 2400      	CLR  R0
0010cc e098      	LDI  R25,8
                 __DIVB21U1:
0010cd 0faa      	LSL  R26
0010ce 1c00      	ROL  R0
0010cf 1a0e      	SUB  R0,R30
0010d0 f410      	BRCC __DIVB21U2
0010d1 0e0e      	ADD  R0,R30
0010d2 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0010d3 60a1      	SBR  R26,1
                 __DIVB21U3:
0010d4 959a      	DEC  R25
0010d5 f7b9      	BRNE __DIVB21U1
0010d6 2fea      	MOV  R30,R26
0010d7 2da0      	MOV  R26,R0
0010d8 9508      	RET
                 
                 __DIVB21:
0010d9 d039      	RCALL __CHKSIGNB
0010da dff0      	RCALL __DIVB21U
0010db f40e      	BRTC __DIVB211
0010dc 95e1      	NEG  R30
                 __DIVB211:
0010dd 9508      	RET
                 
                 __DIVD21U:
0010de 933f      	PUSH R19
0010df 934f      	PUSH R20
0010e0 935f      	PUSH R21
0010e1 2400      	CLR  R0
0010e2 2411      	CLR  R1
0010e3 2744      	CLR  R20
0010e4 2755      	CLR  R21
0010e5 e230      	LDI  R19,32
                 __DIVD21U1:
0010e6 0faa      	LSL  R26
0010e7 1fbb      	ROL  R27
0010e8 1f88      	ROL  R24
0010e9 1f99      	ROL  R25
0010ea 1c00      	ROL  R0
0010eb 1c11      	ROL  R1
0010ec 1f44      	ROL  R20
0010ed 1f55      	ROL  R21
0010ee 1a0e      	SUB  R0,R30
0010ef 0a1f      	SBC  R1,R31
0010f0 0b46      	SBC  R20,R22
0010f1 0b57      	SBC  R21,R23
0010f2 f428      	BRCC __DIVD21U2
0010f3 0e0e      	ADD  R0,R30
0010f4 1e1f      	ADC  R1,R31
0010f5 1f46      	ADC  R20,R22
0010f6 1f57      	ADC  R21,R23
0010f7 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0010f8 60a1      	SBR  R26,1
                 __DIVD21U3:
0010f9 953a      	DEC  R19
0010fa f759      	BRNE __DIVD21U1
0010fb 01fd      	MOVW R30,R26
0010fc 01bc      	MOVW R22,R24
0010fd 01d0      	MOVW R26,R0
0010fe 01ca      	MOVW R24,R20
0010ff 915f      	POP  R21
001100 914f      	POP  R20
001101 913f      	POP  R19
001102 9508      	RET
                 
                 __MODB21:
001103 94e8      	CLT
001104 ffa7      	SBRS R26,7
001105 c002      	RJMP __MODB211
001106 95a1      	NEG  R26
001107 9468      	SET
                 __MODB211:
001108 fde7      	SBRC R30,7
001109 95e1      	NEG  R30
00110a dfc0      	RCALL __DIVB21U
00110b 2fea      	MOV  R30,R26
00110c f40e      	BRTC __MODB212
00110d 95e1      	NEG  R30
                 __MODB212:
00110e 9508      	RET
                 
                 __MODD21U:
00110f dfce      	RCALL __DIVD21U
001110 01fd      	MOVW R30,R26
001111 01bc      	MOVW R22,R24
001112 9508      	RET
                 
                 __CHKSIGNB:
001113 94e8      	CLT
001114 ffe7      	SBRS R30,7
001115 c002      	RJMP __CHKSB1
001116 95e1      	NEG  R30
001117 9468      	SET
                 __CHKSB1:
001118 ffa7      	SBRS R26,7
001119 c004      	RJMP __CHKSB2
00111a 95a1      	NEG  R26
00111b f800      	BLD  R0,0
00111c 9403      	INC  R0
00111d fa00      	BST  R0,0
                 __CHKSB2:
00111e 9508      	RET
                 
                 __GETW1P:
00111f 91ed      	LD   R30,X+
001120 91fc      	LD   R31,X
001121 9711      	SBIW R26,1
001122 9508      	RET
                 
                 __GETD1P:
001123 91ed      	LD   R30,X+
001124 91fd      	LD   R31,X+
001125 916d      	LD   R22,X+
001126 917c      	LD   R23,X
001127 9713      	SBIW R26,3
001128 9508      	RET
                 
                 __PUTDP1:
001129 93ed      	ST   X+,R30
00112a 93fd      	ST   X+,R31
00112b 936d      	ST   X+,R22
00112c 937c      	ST   X,R23
00112d 9508      	RET
                 
                 __GETD1S0:
00112e 81e8      	LD   R30,Y
00112f 81f9      	LDD  R31,Y+1
001130 816a      	LDD  R22,Y+2
001131 817b      	LDD  R23,Y+3
001132 9508      	RET
                 
                 __GETD2S0:
001133 81a8      	LD   R26,Y
001134 81b9      	LDD  R27,Y+1
001135 818a      	LDD  R24,Y+2
001136 819b      	LDD  R25,Y+3
001137 9508      	RET
                 
                 __PUTD1S0:
001138 83e8      	ST   Y,R30
001139 83f9      	STD  Y+1,R31
00113a 836a      	STD  Y+2,R22
00113b 837b      	STD  Y+3,R23
00113c 9508      	RET
                 
                 __PUTPARD1L:
00113d e060      	LDI  R22,0
00113e e070      	LDI  R23,0
                 __PUTPARD1:
00113f 937a      	ST   -Y,R23
001140 936a      	ST   -Y,R22
001141 93fa      	ST   -Y,R31
001142 93ea      	ST   -Y,R30
001143 9508      	RET
                 
                 __CDF2U:
001144 9468      	SET
001145 c001      	RJMP __CDF2U0
                 __CDF2:
001146 94e8      	CLT
                 __CDF2U0:
001147 d001      	RCALL __SWAPD12
001148 de19      	RCALL __CDF1U0
                 
                 __SWAPD12:
001149 2e18      	MOV  R1,R24
00114a 2f86      	MOV  R24,R22
00114b 2d61      	MOV  R22,R1
00114c 2e19      	MOV  R1,R25
00114d 2f97      	MOV  R25,R23
00114e 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00114f 2e1b      	MOV  R1,R27
001150 2fbf      	MOV  R27,R31
001151 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001152 2e1a      	MOV  R1,R26
001153 2fae      	MOV  R26,R30
001154 2de1      	MOV  R30,R1
001155 9508      	RET
                 
                 __CPD10:
001156 9730      	SBIW R30,0
001157 4060      	SBCI R22,0
001158 4070      	SBCI R23,0
001159 9508      	RET
                 
                 __CPD02:
00115a 2400      	CLR  R0
00115b 160a      	CP   R0,R26
00115c 060b      	CPC  R0,R27
00115d 0608      	CPC  R0,R24
00115e 0609      	CPC  R0,R25
00115f 9508      	RET
                 
                 __SAVELOCR6:
001160 935a      	ST   -Y,R21
                 __SAVELOCR5:
001161 934a      	ST   -Y,R20
                 __SAVELOCR4:
001162 933a      	ST   -Y,R19
                 __SAVELOCR3:
001163 932a      	ST   -Y,R18
                 __SAVELOCR2:
001164 931a      	ST   -Y,R17
001165 930a      	ST   -Y,R16
001166 9508      	RET
                 
                 __LOADLOCR6:
001167 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001168 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001169 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00116a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00116b 8119      	LDD  R17,Y+1
00116c 8108      	LD   R16,Y
00116d 9508      	RET
                 
                 __INITLOCW:
00116e 0fac      	ADD  R26,R28
00116f 1fbd      	ADC  R27,R29
                 __INITLOC0:
001170 9005      	LPM  R0,Z+
001171 920d      	ST   X+,R0
001172 9701      	SBIW R24,1
001173 f7e1      	BRNE __INITLOC0
001174 9508      	RET
>>>>>>> merget
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
<<<<<<< HEAD
r0 : 121 r1 :  50 r2 :   0 r3 :   0 r4 :   5 r5 :   1 r6 :   5 r7 :   2 
r8 :   0 r9 :   4 r10:   6 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  72 r21: 105 r22: 154 r23: 134 
r24: 102 r25:  88 r26: 334 r27: 171 r28: 109 r29:   3 r30: 853 r31: 371 
x  : 193 y  : 617 z  :  65 
Registers used: 28 out of 35 (80.0%)
=======
r0 : 117 r1 :  50 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   6 r9 :   4 r10:   0 r11:   0 r12:   5 r13:   2 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  72 r21: 105 r22: 153 r23: 136 
r24: 103 r25:  89 r26: 321 r27: 165 r28: 105 r29:   3 r30: 844 r31: 366 
x  : 190 y  : 604 z  :  63 
Registers used: 30 out of 35 (85.7%)
>>>>>>> merget

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  23 
adiw  :  53 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  69 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
<<<<<<< HEAD
brlt  :   4 brmi  :  12 brne  :  79 brpl  :   9 brsh  :  10 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 358 
=======
brlt  :   4 brmi  :  12 brne  :  79 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 361 
>>>>>>> merget
cbi   :   2 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  66 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  21 cpc   :  28 cpi   : 127 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
<<<<<<< HEAD
ijmp  :   0 in    :  27 inc   :   6 jmp   :  54 ld    : 148 ldd   : 284 
ldi   : 412 lds   :  13 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 118 
movw  : 156 mul   :  17 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  30 pop   :  57 push  :  57 rcall :  90 
ret   : 137 reti  :   4 rjmp  : 195 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  80 sbi   :   6 sbic  :   0 sbis  :   2 sbiw  :  47 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 301 std   : 128 sts   :  15 sub   :   6 subi  : 117 
=======
ijmp  :   0 in    :  26 inc   :   6 jmp   :  54 ld    : 140 ldd   : 284 
ldi   : 421 lds   :  10 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 116 
movw  : 154 mul   :  15 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  30 pop   :  57 push  :  57 rcall :  88 
ret   : 137 reti  :   3 rjmp  : 195 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  76 sbi   :   6 sbic  :   0 sbis  :   2 sbiw  :  47 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 291 std   : 128 sts   :  13 sub   :   6 subi  : 113 
>>>>>>> merget
swap  :   0 tst   :  27 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
<<<<<<< HEAD
[.cseg] 0x000000 0x00231c   8346    642   8988  131072   6.9%
[.dseg] 0x000100 0x00057e      0    126    126    4351   2.9%
=======
[.cseg] 0x000000 0x0022ea   8298    640   8938  131072   6.8%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
>>>>>>> merget
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 13 warnings
