
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Tue Feb 04 20:39:46 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _CHECK_GETS=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00ae 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 029b 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 02a1 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 0258 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0273 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x48:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x5E:
00008d 0000
00008e 0000
00008f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000090 253c
000091 2c64
000092 6425
000093 003e      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x3E,0x0
000094 6625
000095 202c
000096 6625
000097 202c      	.DB  0x25,0x66,0x2C,0x20,0x25,0x66,0x2C,0x20
000098 6625
000099 202c
00009a 6625
00009b 202c      	.DB  0x25,0x66,0x2C,0x20,0x25,0x66,0x2C,0x20
00009c 6625
00009d 000a      	.DB  0x25,0x66,0xA,0x0
                 _0x2000000:
00009e 4e2d
00009f 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1137): warning: .cseg .db misalignment - padding zero byte
0000a0 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1139): warning: .cseg .db misalignment - padding zero byte
0000a1 0001      	.DB  0x1
                 _0x2080000:
0000a2 4e2d
0000a3 4e41
0000a4 4900
0000a5 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1142): warning: .cseg .db misalignment - padding zero byte
0000a6 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000a7 0006      	.DW  0x06
0000a8 0004      	.DW  0x04
0000a9 011a      	.DW  _0x5E*2
                 
0000aa 0001      	.DW  0x01
0000ab 0578      	.DW  __seed_G104
0000ac 0142      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0000ad 0000      	.DW  0
                 
                 __RESET:
0000ae 94f8      	CLI
0000af 27ee      	CLR  R30
0000b0 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000b1 e0f1      	LDI  R31,1
0000b2 bff5      	OUT  MCUCR,R31
0000b3 bfe5      	OUT  MCUCR,R30
0000b4 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0000b6 e1f8      	LDI  R31,0x18
0000b7 bdf1      	OUT  WDTCR,R31
0000b8 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000b9 e08d      	LDI  R24,(14-2)+1
0000ba e0a2      	LDI  R26,2
0000bb 27bb      	CLR  R27
                 __CLEAR_REG:
0000bc 93ed      	ST   X+,R30
0000bd 958a      	DEC  R24
0000be f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000bf e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000c0 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000c1 e0a0      	LDI  R26,LOW(__SRAM_START)
0000c2 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000c3 93ed      	ST   X+,R30
0000c4 9701      	SBIW R24,1
0000c5 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000c6 e4ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000c7 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000c8 9185      	LPM  R24,Z+
0000c9 9195      	LPM  R25,Z+
0000ca 9700      	SBIW R24,0
0000cb f061      	BREQ __GLOBAL_INI_END
0000cc 91a5      	LPM  R26,Z+
0000cd 91b5      	LPM  R27,Z+
0000ce 9005      	LPM  R0,Z+
0000cf 9015      	LPM  R1,Z+
0000d0 01bf      	MOVW R22,R30
0000d1 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000d2 9005      	LPM  R0,Z+
0000d3 920d      	ST   X+,R0
0000d4 9701      	SBIW R24,1
0000d5 f7e1      	BRNE __GLOBAL_INI_LOOP
0000d6 01fb      	MOVW R30,R22
0000d7 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000d8 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000d9 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000da bfed      	OUT  SPL,R30
0000db e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000dc bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000dd e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000de e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000df 940c 02ad 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 25
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.29
                 ;#define Gearratio 25
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0020 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0021     UCSR1A = 0x00;
                 ;	bps -> Y+0
0000e1 e0e0      	LDI  R30,LOW(0)
0000e2 93e0 009b 	STS  155,R30
                 ; 0000 0022     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0000e4 e9e8      	LDI  R30,LOW(152)
0000e5 93e0 009a 	STS  154,R30
                 ; 0000 0023     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0000e7 e0e6      	LDI  R30,LOW(6)
0000e8 93e0 009d 	STS  157,R30
                 ; 0000 0024     UCSR1C &= ~(1<<UMSEL1);
0000ea 91e0 009d 	LDS  R30,157
0000ec 7bef      	ANDI R30,0xBF
0000ed 93e0 009d 	STS  157,R30
                 ; 0000 0025 
                 ; 0000 0026     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0000ef 81e8      	LD   R30,Y
0000f0 81f9      	LDD  R31,Y+1
0000f1 940e 0ee0 	CALL __ASRW8
0000f3 93e0 0098 	STS  152,R30
                 ; 0000 0027     UBRR1L = (unsigned char)(bps & 0x00ff);
0000f5 81e8      	LD   R30,Y
0000f6 93e0 0099 	STS  153,R30
                 ; 0000 0028 }
0000f8 c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 002B {
                 _usart0_init:
                 ; 0000 002C     UCSR0A = 0x00;
                 ;	bps -> Y+0
0000f9 e0e0      	LDI  R30,LOW(0)
0000fa b9eb      	OUT  0xB,R30
                 ; 0000 002D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0000fb e9e8      	LDI  R30,LOW(152)
0000fc b9ea      	OUT  0xA,R30
                 ; 0000 002E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0000fd e0e6      	LDI  R30,LOW(6)
0000fe 93e0 0095 	STS  149,R30
                 ; 0000 002F     UCSR0C &= ~(1<<UMSEL0);
000100 91e0 0095 	LDS  R30,149
000102 7bef      	ANDI R30,0xBF
000103 93e0 0095 	STS  149,R30
                 ; 0000 0030 
                 ; 0000 0031     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
000105 81e8      	LD   R30,Y
000106 81f9      	LDD  R31,Y+1
000107 940e 0ee0 	CALL __ASRW8
000109 93e0 0090 	STS  144,R30
                 ; 0000 0032     UBRR0L = (unsigned char)(bps & 0x00ff);
00010b 81e8      	LD   R30,Y
00010c b9e9      	OUT  0x9,R30
                 ; 0000 0033 }
                 _0x20A000F:
00010d 9622      	ADIW R28,2
00010e 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 0036 {
                 _timer2_init:
                 ; 0000 0037     //TIMER2
                 ; 0000 0038     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
00010f e0ed      	LDI  R30,LOW(13)
000110 bde5      	OUT  0x25,R30
                 ; 0000 0039 
                 ; 0000 003A     OCR2 = 40;
000111 e2e8      	LDI  R30,LOW(40)
000112 bde3      	OUT  0x23,R30
                 ; 0000 003B     TIMSK = (1<<OCIE2)|(1<<OCIE0);
000113 e8e2      	LDI  R30,LOW(130)
000114 c003      	RJMP _0x20A000E
                 ; 0000 003C     //TIMSK = (1<<OCIE2);
                 ; 0000 003D }
                 ;void timer0_init(void)
                 ; 0000 003F {
                 _timer0_init:
                 ; 0000 0040     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
000115 e0e7      	LDI  R30,LOW(7)
000116 bfe3      	OUT  0x33,R30
                 ; 0000 0041     TIMSK = (1<<OCIE2)|(1<<TOIE0);
000117 e8e1      	LDI  R30,LOW(129)
                 _0x20A000E:
000118 bfe7      	OUT  0x37,R30
                 ; 0000 0042 }
000119 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0000 0045 {
                 _putch_USART1:
                 ; 0000 0046     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
00011a 91e0 009b 	LDS  R30,155
00011c 72e0      	ANDI R30,LOW(0x20)
00011d f3e1      	BREQ _0x3
                 ; 0000 0047     UDR1 = data;
00011e 81e8      	LD   R30,Y
00011f 93e0 009c 	STS  156,R30
                 ; 0000 0048 }
000121 c023      	RJMP _0x20A000D
                 ;
                 ;//USART 문자열 송신
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     for(i = 0;i<IDX;i++)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 005B {
                 _puts_USART1:
                 ; 0000 005C     unsigned char i = 0;
                 ; 0000 005D     unsigned char x = 0;
                 ; 0000 005E     for(i = 0; str[i] ;i++){
000122 931a      	ST   -Y,R17
000123 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000124 e010      	LDI  R17,0
000125 e000      	LDI  R16,0
000126 e010      	LDI  R17,LOW(0)
                 _0x7:
000127 940e 0ae2 	CALL SUBOPT_0x0
000129 30e0      	CPI  R30,0
00012a f031      	BREQ _0x8
                 ; 0000 005F         putch_USART1(str[i]);
00012b 940e 0ae2 	CALL SUBOPT_0x0
00012d 93ea      	ST   -Y,R30
00012e dfeb      	RCALL _putch_USART1
                 ; 0000 0060     }
00012f 5f1f      	SUBI R17,-1
000130 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 0061     for(x = 0; x<i; x++){
000131 e000      	LDI  R16,LOW(0)
                 _0xA:
000132 1701      	CP   R16,R17
000133 f450      	BRSH _0xB
                 ; 0000 0062         *(str++) = 0;
000134 81aa      	LDD  R26,Y+2
000135 81bb      	LDD  R27,Y+2+1
000136 9611      	ADIW R26,1
000137 83aa      	STD  Y+2,R26
000138 83bb      	STD  Y+2+1,R27
000139 9711      	SBIW R26,1
00013a e0e0      	LDI  R30,LOW(0)
00013b 93ec      	ST   X,R30
                 ; 0000 0063     }
00013c 5f0f      	SUBI R16,-1
00013d cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0064 }
00013e 8119      	LDD  R17,Y+1
00013f 8108      	LDD  R16,Y+0
000140 c0ea      	RJMP _0x20A000B
                 ;
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     while(*str != 0)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//         i++;
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0077 {
                 ; 0000 0078     unsigned char i = 0;
                 ; 0000 0079     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 007A     if(TIMER2_OVERFLOW>0)
                 ; 0000 007B     {
                 ; 0000 007C         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 007D for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 007E }
                 ; 0000 007F     UCSR0B |= (1<<RXEN0);
                 ; 0000 0080 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0083 {
                 _putch_USART0:
                 ; 0000 0084     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000141 9b5d      	SBIS 0xB,5
000142 cffe      	RJMP _0x13
                 ; 0000 0085     UDR0 = data;
000143 81e8      	LD   R30,Y
000144 b9ec      	OUT  0xC,R30
                 ; 0000 0086 }
                 _0x20A000D:
000145 9621      	ADIW R28,1
000146 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 0089 {
                 ; 0000 008A     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 008B     unsigned char i = 0;
                 ; 0000 008C     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 008D     {
                 ; 0000 008E         putch_USART1(*(str+i));
                 ; 0000 008F     }
                 ; 0000 0090 
                 ; 0000 0091     for(i = 0; i<IDX; i++)
                 ; 0000 0092     {
                 ; 0000 0093         *(str+i) = 0;
                 ; 0000 0094     }
                 ; 0000 0095 }
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 0098 {
                 _CRC16:
                 ; 0000 0099     int i;
                 ; 0000 009A     unsigned short crc, flag;
                 ; 0000 009B     crc = 0xffff;
000147 940e 0f82 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
000149 ef2f     +LDI R18 , LOW ( - 1 )
00014a ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 009C 
                 ; 0000 009D     while(usDataLen--){
                 _0x1C:
00014b 81ee      	LDD  R30,Y+6
00014c 81ff      	LDD  R31,Y+6+1
00014d 9731      	SBIW R30,1
00014e 83ee      	STD  Y+6,R30
00014f 83ff      	STD  Y+6+1,R31
000150 9631      	ADIW R30,1
000151 f0f9      	BREQ _0x1E
                 ; 0000 009E         crc ^= *puchMsg++;
000152 85a8      	LDD  R26,Y+8
000153 85b9      	LDD  R27,Y+8+1
000154 91ed      	LD   R30,X+
000155 87a8      	STD  Y+8,R26
000156 87b9      	STD  Y+8+1,R27
000157 e0f0      	LDI  R31,0
                +
000158 272e     +EOR R18 , R30
000159 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 009F 
                 ; 0000 00A0         for (i=0; i<8; i++){
                +
00015a e000     +LDI R16 , LOW ( 0 )
00015b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
00015c 3008     +CPI R16 , LOW ( 8 )
00015d e0e0     +LDI R30 , HIGH ( 8 )
00015e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00015f f484      	BRGE _0x21
                 ; 0000 00A1             flag = crc & 0x0001;
000160 01f9      	MOVW R30,R18
000161 70e1      	ANDI R30,LOW(0x1)
000162 70f0      	ANDI R31,HIGH(0x1)
000163 01af      	MOVW R20,R30
                 ; 0000 00A2             crc >>= 1;
000164 9536      	LSR  R19
000165 9527      	ROR  R18
                 ; 0000 00A3             if(flag) crc ^= POLYNORMIAL;
000166 2e04      	MOV  R0,R20
000167 2a05      	OR   R0,R21
000168 f021      	BREQ _0x22
000169 e0e1      	LDI  R30,LOW(40961)
00016a eaf0      	LDI  R31,HIGH(40961)
                +
00016b 272e     +EOR R18 , R30
00016c 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00A4         }
                 _0x22:
                +
00016d 5f0f     +SUBI R16 , LOW ( - 1 )
00016e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00016f cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00A5     }
000170 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00A6     return crc;
000171 01f9      	MOVW R30,R18
000172 940e 0f89 	CALL __LOADLOCR6
000174 962a      	ADIW R28,10
000175 9508      	RET
                 ; 0000 00A7 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00AA {
                 _RTU_WriteOperate0:
                 ; 0000 00AB     char protocol[8];
                 ; 0000 00AC     unsigned short crc16;
                 ; 0000 00AD     int i=0;
                 ; 0000 00AE     //PACKET_BUFF_IDX = 0;
                 ; 0000 00AF 
                 ; 0000 00B0     protocol[0]=device_address;
000176 940e 0ae9 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00B1     protocol[1]=0x06;
000178 e0e6      	LDI  R30,LOW(6)
000179 940e 0af1 	CALL SUBOPT_0x2
                 ; 0000 00B2     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00B3     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00B4     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00B5     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00B6     protocol[6]=0;
                 ; 0000 00B7     protocol[7]=0;
                 ; 0000 00B8 
                 ; 0000 00B9     crc16 = CRC16(protocol, 6);
                 ; 0000 00BA 
                 ; 0000 00BB     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00BC     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00BD 
                 ; 0000 00BE 
                 ; 0000 00BF     for(i=0;i<8;i++)
                 _0x24:
                +
00017b 3028     +CPI R18 , LOW ( 8 )
00017c e0e0     +LDI R30 , HIGH ( 8 )
00017d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00017e f42c      	BRGE _0x25
                 ; 0000 00C0     {
                 ; 0000 00C1         putch_USART0(*(protocol+i));
00017f 940e 0b14 	CALL SUBOPT_0x3
                 ; 0000 00C2     }
                +
000181 5f2f     +SUBI R18 , LOW ( - 1 )
000182 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000183 cff7      	RJMP _0x24
                 _0x25:
                 ; 0000 00C3 }
000184 c00e      	RJMP _0x20A000C
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00C6 {
                 ; 0000 00C7     char protocol[8];
                 ; 0000 00C8     unsigned short crc16;
                 ; 0000 00C9     int i=0;
                 ; 0000 00CA    // PACKET_BUFF_IDX = 0;
                 ; 0000 00CB 
                 ; 0000 00CC     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00CD     protocol[1]=0x06;
                 ; 0000 00CE     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00CF     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00D0     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00D1     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00D2     protocol[6]=0;
                 ; 0000 00D3     protocol[7]=0;
                 ; 0000 00D4 
                 ; 0000 00D5     crc16 = CRC16(protocol, 6);
                 ; 0000 00D6 
                 ; 0000 00D7     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00D8     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00D9 
                 ; 0000 00DA 
                 ; 0000 00DB     for(i=0;i<8;i++)
                 ; 0000 00DC     {
                 ; 0000 00DD         putch_USART1(*(protocol+i));
                 ; 0000 00DE     }
                 ; 0000 00DF }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00E2 {
                 _RTU_ReedOperate0:
                 ; 0000 00E3     char protocol[8];
                 ; 0000 00E4     unsigned short crc16;
                 ; 0000 00E5     int i=0;
                 ; 0000 00E6     //PACKET_BUFF_IDX = 0;
                 ; 0000 00E7 
                 ; 0000 00E8     protocol[0]=device_address;
000185 940e 0ae9 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00E9     protocol[1]=0x04;
000187 e0e4      	LDI  R30,LOW(4)
000188 940e 0af1 	CALL SUBOPT_0x2
                 ; 0000 00EA     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00EB     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00EC     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00ED     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00EE     protocol[6]=0;
                 ; 0000 00EF     protocol[7]=0;
                 ; 0000 00F0 
                 ; 0000 00F1     crc16 = CRC16(protocol, 6);
                 ; 0000 00F2 
                 ; 0000 00F3     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00F4     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00F5 
                 ; 0000 00F6 
                 ; 0000 00F7     for(i=0;i<8;i++)
                 _0x2A:
                +
00018a 3028     +CPI R18 , LOW ( 8 )
00018b e0e0     +LDI R30 , HIGH ( 8 )
00018c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00018d f42c      	BRGE _0x2B
                 ; 0000 00F8     {
                 ; 0000 00F9         putch_USART0(*(protocol+i));
00018e 940e 0b14 	CALL SUBOPT_0x3
                 ; 0000 00FA     }
                +
000190 5f2f     +SUBI R18 , LOW ( - 1 )
000191 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000192 cff7      	RJMP _0x2A
                 _0x2B:
                 ; 0000 00FB }
                 _0x20A000C:
000193 940e 0f8b 	CALL __LOADLOCR4
000195 9661      	ADIW R28,17
000196 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 00FE {
                 _Make_MSPEED:
                 ; 0000 00FF     float VelocityR = 0;
                 ; 0000 0100     float VelocityL = 0;
                 ; 0000 0101 
                 ; 0000 0102     if(*_velocity>=0){
000197 9728      	SBIW R28,8
000198 940e 0b1c 	CALL SUBOPT_0x4
00019a e0e0      	LDI  R30,LOW(0)
00019b 83ea      	STD  Y+2,R30
00019c 83eb      	STD  Y+3,R30
00019d 83ec      	STD  Y+4,R30
00019e 83ed      	STD  Y+5,R30
00019f 83ee      	STD  Y+6,R30
0001a0 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
0001a1 940e 0b20 	CALL SUBOPT_0x5
0001a3 2377      	TST  R23
0001a4 f042      	BRMI _0x2C
                 ; 0000 0103         *_angularV = -(*_angularV);
0001a5 940e 0b25 	CALL SUBOPT_0x6
0001a7 940e 0d27 	CALL __ANEGF1
0001a9 85ac      	LDD  R26,Y+12
0001aa 85bd      	LDD  R27,Y+12+1
0001ab 940e 0f56 	CALL __PUTDP1
                 ; 0000 0104     }
                 ; 0000 0105 
                 ; 0000 0106     VelocityR = *_velocity+(*_angularV*Length)/4;
                 _0x2C:
0001ad 940e 0b20 	CALL SUBOPT_0x5
0001af 937f      	PUSH R23
0001b0 936f      	PUSH R22
0001b1 93ff      	PUSH R31
0001b2 93ef      	PUSH R30
0001b3 940e 0b25 	CALL SUBOPT_0x6
0001b5 940e 0b2a 	CALL SUBOPT_0x7
0001b7 91af      	POP  R26
0001b8 91bf      	POP  R27
0001b9 918f      	POP  R24
0001ba 919f      	POP  R25
0001bb 940e 0dcd 	CALL __ADDF12
0001bd 940e 0b39 	CALL SUBOPT_0x8
                 ; 0000 0107     VelocityL = *_velocity-(*_angularV*Length)/4;
0001bf 940e 0b20 	CALL SUBOPT_0x5
0001c1 937f      	PUSH R23
0001c2 936f      	PUSH R22
0001c3 93ff      	PUSH R31
0001c4 93ef      	PUSH R30
0001c5 940e 0b25 	CALL SUBOPT_0x6
0001c7 940e 0b2a 	CALL SUBOPT_0x7
0001c9 91af      	POP  R26
0001ca 91bf      	POP  R27
0001cb 918f      	POP  R24
0001cc 919f      	POP  R25
0001cd 940e 0b3e 	CALL SUBOPT_0x9
0001cf 940e 0f65 	CALL __PUTD1S0
                 ; 0000 0108 
                 ; 0000 0109     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0001d1 940e 0b43 	CALL SUBOPT_0xA
0001d3 940e 0b48 	CALL SUBOPT_0xB
0001d5 85aa      	LDD  R26,Y+10
0001d6 85bb      	LDD  R27,Y+10+1
0001d7 93ed      	ST   X+,R30
0001d8 93fc      	ST   X,R31
                 ; 0000 010A     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0001d9 940e 0b57 	CALL SUBOPT_0xC
0001db 940e 0b48 	CALL SUBOPT_0xB
0001dd 85a8      	LDD  R26,Y+8
0001de 85b9      	LDD  R27,Y+8+1
0001df 93ed      	ST   X+,R30
0001e0 93fc      	ST   X,R31
                 ; 0000 010B 
                 ; 0000 010C     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0001e1 85aa      	LDD  R26,Y+10
0001e2 85bb      	LDD  R27,Y+10+1
0001e3 940e 0f4c 	CALL __GETW1P
0001e5 32ec      	CPI  R30,LOW(0x12C)
0001e6 e0a1      	LDI  R26,HIGH(0x12C)
0001e7 07fa      	CPC  R31,R26
0001e8 f434      	BRGE _0x2E
0001e9 01df      	MOVW R26,R30
0001ea ede4      	LDI  R30,LOW(65236)
0001eb effe      	LDI  R31,HIGH(65236)
0001ec 17ea      	CP   R30,R26
0001ed 07fb      	CPC  R31,R27
0001ee f00c      	BRLT _0x2F
                 _0x2E:
0001ef c014      	RJMP _0x30
                 _0x2F:
0001f0 85a8      	LDD  R26,Y+8
0001f1 85b9      	LDD  R27,Y+8+1
0001f2 940e 0f4c 	CALL __GETW1P
0001f4 32ec      	CPI  R30,LOW(0x12C)
0001f5 e0a1      	LDI  R26,HIGH(0x12C)
0001f6 07fa      	CPC  R31,R26
0001f7 f454      	BRGE _0x31
0001f8 85a8      	LDD  R26,Y+8
0001f9 85b9      	LDD  R27,Y+8+1
0001fa 940e 0f4c 	CALL __GETW1P
0001fc 01df      	MOVW R26,R30
0001fd ede4      	LDI  R30,LOW(65236)
0001fe effe      	LDI  R31,HIGH(65236)
0001ff 17ea      	CP   R30,R26
000200 07fb      	CPC  R31,R27
000201 f00c      	BRLT _0x32
                 _0x31:
000202 c001      	RJMP _0x30
                 _0x32:
000203 c001      	RJMP _0x33
                 _0x30:
000204 c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 010D         *R_RPM = 0;
000205 85aa      	LDD  R26,Y+10
000206 85bb      	LDD  R27,Y+10+1
000207 940e 0b5a 	CALL SUBOPT_0xD
                 ; 0000 010E         *L_RPM = 0;
000209 85a8      	LDD  R26,Y+8
00020a 85b9      	LDD  R27,Y+8+1
00020b 940e 0b5a 	CALL SUBOPT_0xD
                 ; 0000 010F     }
                 ; 0000 0110 }
                 _0x2D:
00020d 940c 0551 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 0113 {
                 _oper_Disapath:
                 ; 0000 0114     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
00020f e0e1      	LDI  R30,LOW(1)
000210 93ea      	ST   -Y,R30
000211 e7e9      	LDI  R30,LOW(121)
000212 e0f0      	LDI  R31,HIGH(121)
000213 93fa      	ST   -Y,R31
000214 93ea      	ST   -Y,R30
000215 81ed      	LDD  R30,Y+5
000216 81fe      	LDD  R31,Y+5+1
000217 940e 0b5f 	CALL SUBOPT_0xE
                 ; 0000 0115     delay_ms(5);
                 ; 0000 0116 
                 ; 0000 0117     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
000219 e0e2      	LDI  R30,LOW(2)
00021a 93ea      	ST   -Y,R30
00021b e7e9      	LDI  R30,LOW(121)
00021c e0f0      	LDI  R31,HIGH(121)
00021d 93fa      	ST   -Y,R31
00021e 93ea      	ST   -Y,R30
00021f 81eb      	LDD  R30,Y+3
000220 81fc      	LDD  R31,Y+3+1
000221 940e 0ed4 	CALL __ANEGW1
000223 940e 0b5f 	CALL SUBOPT_0xE
                 ; 0000 0118     delay_ms(5);
                 ; 0000 0119 
                 ; 0000 011A     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
000225 e0e1      	LDI  R30,LOW(1)
000226 940e 0b69 	CALL SUBOPT_0xF
                 ; 0000 011B     delay_ms(5);
                 ; 0000 011C 
                 ; 0000 011D     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
000228 e0e2      	LDI  R30,LOW(2)
000229 940e 0b69 	CALL SUBOPT_0xF
                 ; 0000 011E     delay_ms(5);
                 ; 0000 011F }
                 _0x20A000B:
00022b 9624      	ADIW R28,4
00022c 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 0122 {
                 _get_RPM:
                 ; 0000 0123     unsigned char i = 0;
                 ; 0000 0124     unsigned int RPM = 0;
                 ; 0000 0125 
                 ; 0000 0126     RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
00022d 940e 0f84 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
00022f e010      	LDI  R17,0
                +
000230 e020     +LDI R18 , LOW ( 0 )
000231 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000232 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
000234 e0a0      	LDI  R26,LOW(0)
                +
000235 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
000237 940e 0b71 	CALL SUBOPT_0x10
000239 019f      	MOVW R18,R30
                 ; 0000 0127     *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
00023a 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
00023c e0a0      	LDI  R26,LOW(0)
                +
00023d 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
00023f 940e 0b71 	CALL SUBOPT_0x10
000241 81ac      	LDD  R26,Y+4
000242 81bd      	LDD  R27,Y+4+1
000243 93ed      	ST   X+,R30
000244 93fc      	ST   X,R31
                 ; 0000 0128     for(i = 0; i<IDX; i++) *(str+i) = 0;
000245 e010      	LDI  R17,LOW(0)
                 _0x35:
000246 81ee      	LDD  R30,Y+6
000247 171e      	CP   R17,R30
000248 f450      	BRSH _0x36
000249 2fe1      	MOV  R30,R17
00024a e0f0      	LDI  R31,0
00024b 81af      	LDD  R26,Y+7
00024c 85b8      	LDD  R27,Y+7+1
00024d 0fae      	ADD  R26,R30
00024e 1fbf      	ADC  R27,R31
00024f e0e0      	LDI  R30,LOW(0)
000250 93ec      	ST   X,R30
000251 5f1f      	SUBI R17,-1
000252 cff3      	RJMP _0x35
                 _0x36:
                 ; 0000 012A return RPM;
000253 01f9      	MOVW R30,R18
000254 940e 0f8b 	CALL __LOADLOCR4
000256 9629      	ADIW R28,9
000257 9508      	RET
                 ; 0000 012B }
                 ;
                 ;// void get_motorSpeed(int* velocity_R, int* velocity_L)
                 ;// {
                 ;//     RTU_ReedOperate0(R,(unsigned int)3,(unsigned int)2);
                 ;//     delay_ms(1);
                 ;//     puts_Modbus1(PACKET_BUFF,PACKET_BUFF_IDX);
                 ;//     delay_ms(1);
                 ;//     RTU_ReedOperate0(R,(unsigned int)3,(unsigned int)2);
                 ;//     delay_ms(1);
                 ;//     puts_Modbus1(PACKET_BUFF,PACKET_BUFF_IDX);
                 ;// }
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 0139 {
                 _usart0_rxc:
000258 93aa      	ST   -Y,R26
000259 93ba      	ST   -Y,R27
00025a 93ea      	ST   -Y,R30
00025b b7ef      	IN   R30,SREG
00025c 93ea      	ST   -Y,R30
                 ; 0000 013A     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
00025d b5e4      	IN   R30,0x24
00025e 31e9      	CPI  R30,LOW(0x19)
00025f f418      	BRSH _0x38
000260 e0e0      	LDI  R30,LOW(0)
000261 15e5      	CP   R30,R5
000262 f019      	BREQ _0x3A
                 _0x38:
000263 e0e0      	LDI  R30,LOW(0)
000264 15e4      	CP   R30,R4
000265 f419      	BRNE _0x37
                 _0x3A:
                 ; 0000 013B     {
                 ; 0000 013C         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000266 940e 0b75 	CALL SUBOPT_0x11
                 ; 0000 013D         PACKET_BUFF_IDX++;
                 ; 0000 013E         TCNT2 = 0;
                 ; 0000 013F     }
                 ; 0000 0140     else {
000268 c004      	RJMP _0x3C
                 _0x37:
                 ; 0000 0141         PACKET_BUFF_IDX = 0;
000269 2444      	CLR  R4
                 ; 0000 0142         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00026a 940e 0b75 	CALL SUBOPT_0x11
                 ; 0000 0143         PACKET_BUFF_IDX++;
                 ; 0000 0144         TCNT2 = 0;
                 ; 0000 0145         TIMER2_OVERFLOW = 0;
00026c 2455      	CLR  R5
                 ; 0000 0146     }
                 _0x3C:
                 ; 0000 0147 }
00026d 91e9      	LD   R30,Y+
00026e bfef      	OUT  SREG,R30
00026f 91e9      	LD   R30,Y+
000270 91b9      	LD   R27,Y+
000271 91a9      	LD   R26,Y+
000272 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 014A {
                 _usart1_rxc:
000273 93ea      	ST   -Y,R30
000274 93fa      	ST   -Y,R31
000275 b7ef      	IN   R30,SREG
000276 93ea      	ST   -Y,R30
                 ; 0000 014B     unsigned char i = 0;
                 ; 0000 014C     i = UDR1;
000277 931a      	ST   -Y,R17
                 ;	i -> R17
000278 e010      	LDI  R17,0
000279 9110 009c 	LDS  R17,156
                 ; 0000 014D     if((i == '<') && (CHECK_GETS == 0)){
00027b 331c      	CPI  R17,60
00027c f419      	BRNE _0x3E
00027d e0e0      	LDI  R30,LOW(0)
00027e 15e8      	CP   R30,R8
00027f f009      	BREQ _0x3F
                 _0x3E:
000280 c007      	RJMP _0x3D
                 _0x3F:
                 ; 0000 014E         PORTB.3 = ~PORTB.3;
000281 9bc3      	SBIS 0x18,3
000282 c002      	RJMP _0x40
000283 98c3      	CBI  0x18,3
000284 c001      	RJMP _0x41
                 _0x40:
000285 9ac3      	SBI  0x18,3
                 _0x41:
                 ; 0000 014F         VELOCITY_BUFF_IDX = 0;
000286 2499      	CLR  R9
                 ; 0000 0150         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000287 c00e      	RJMP _0x5C
                 ; 0000 0151         VELOCITY_BUFF_IDX++;
                 ; 0000 0152     }
                 ; 0000 0153     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x3D:
000288 331e      	CPI  R17,62
000289 f419      	BRNE _0x44
00028a e0e0      	LDI  R30,LOW(0)
00028b 15e8      	CP   R30,R8
00028c f009      	BREQ _0x45
                 _0x44:
00028d c006      	RJMP _0x43
                 _0x45:
                 ; 0000 0154         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00028e 2de9      	MOV  R30,R9
00028f 940e 0b7f 	CALL SUBOPT_0x12
                 ; 0000 0155         VELOCITY_BUFF_IDX++;
                 ; 0000 0156         CHECK_GETS = 1;
000291 e0e1      	LDI  R30,LOW(1)
000292 2e8e      	MOV  R8,R30
                 ; 0000 0157     }
                 ; 0000 0158     else if(CHECK_GETS == 0){
000293 c005      	RJMP _0x46
                 _0x43:
000294 2088      	TST  R8
000295 f419      	BRNE _0x47
                 ; 0000 0159         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x5C:
000296 2de9      	MOV  R30,R9
000297 940e 0b7f 	CALL SUBOPT_0x12
                 ; 0000 015A         VELOCITY_BUFF_IDX++;
                 ; 0000 015B     }
                 ; 0000 015C }
                 _0x47:
                 _0x46:
000299 9119      	LD   R17,Y+
00029a c00d      	RJMP _0x5D
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 015F {
                 _timer2_comp:
00029b 93ea      	ST   -Y,R30
00029c b7ef      	IN   R30,SREG
                 ; 0000 0160     TIMER2_OVERFLOW++;
00029d 9453      	INC  R5
                 ; 0000 0161 }
00029e bfef      	OUT  SREG,R30
00029f 91e9      	LD   R30,Y+
0002a0 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 0164 {
                 _timer0_ovf:
0002a1 93ea      	ST   -Y,R30
0002a2 93fa      	ST   -Y,R31
0002a3 b7ef      	IN   R30,SREG
0002a4 93ea      	ST   -Y,R30
                 ; 0000 0165     TIMER0_OVERFLOW++;
0002a5 01f3      	MOVW R30,R6
0002a6 9631      	ADIW R30,1
0002a7 013f      	MOVW R6,R30
                 ; 0000 0166 }
                 _0x5D:
0002a8 91e9      	LD   R30,Y+
0002a9 bfef      	OUT  SREG,R30
0002aa 91f9      	LD   R31,Y+
0002ab 91e9      	LD   R30,Y+
0002ac 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 0169 {
                 _main:
                 ; 0000 016A     float a_buff;
                 ; 0000 016B     float v_buff;
                 ; 0000 016C 
                 ; 0000 016D     int velocity = 0;
                 ; 0000 016E     int angularV = 0;
                 ; 0000 016F     int velocity_R = 0;
                 ; 0000 0170     int velocity_L = 0;
                 ; 0000 0171     int past_velocity_R = 0;
                 ; 0000 0172     int past_velocity_L = 0;
                 ; 0000 0173 
                 ; 0000 0174     // int current_R = 0;
                 ; 0000 0175     // int current_L = 0;
                 ; 0000 0176     float current_R = 0;
                 ; 0000 0177     float current_L = 0;
                 ; 0000 0178     int goal_current_R = 0;
                 ; 0000 0179     int goal_current_L = 0;
                 ; 0000 017A 
                 ; 0000 017B     float d_velocity = 0;
                 ; 0000 017C     float d_angularV = 0;
                 ; 0000 017D     float control_time = 0;
                 ; 0000 017E 
                 ; 0000 017F     float d_x = 0;
                 ; 0000 0180     float d_y = 0;
                 ; 0000 0181     float d_angular = 0;
                 ; 0000 0182 
                 ; 0000 0183     unsigned char BUFF[100] = {0,};
                 ; 0000 0184 
                 ; 0000 0185     usart1_init(bps_115200);
0002ad 97ef      	SBIW R28,63
0002ae 97ef      	SBIW R28,63
0002af 9768      	SBIW R28,24
0002b0 e88e      	LDI  R24,142
0002b1 e0a0      	LDI  R26,LOW(0)
0002b2 e0b0      	LDI  R27,HIGH(0)
0002b3 e8ec      	LDI  R30,LOW(_0x48*2)
0002b4 e0f0      	LDI  R31,HIGH(_0x48*2)
0002b5 940e 0f90 	CALL __INITLOCB
                 ;	a_buff -> Y+146
                 ;	v_buff -> Y+142
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+140
                 ;	past_velocity_R -> Y+138
                 ;	past_velocity_L -> Y+136
                 ;	current_R -> Y+132
                 ;	current_L -> Y+128
                 ;	goal_current_R -> Y+126
                 ;	goal_current_L -> Y+124
                 ;	d_velocity -> Y+120
                 ;	d_angularV -> Y+116
                 ;	control_time -> Y+112
                 ;	d_x -> Y+108
                 ;	d_y -> Y+104
                 ;	d_angular -> Y+100
                 ;	BUFF -> Y+0
                +
0002b7 e000     +LDI R16 , LOW ( 0 )
0002b8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0002b9 e020     +LDI R18 , LOW ( 0 )
0002ba e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0002bb e040     +LDI R20 , LOW ( 0 )
0002bc e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0002bd e0e7      	LDI  R30,LOW(7)
0002be e0f0      	LDI  R31,HIGH(7)
0002bf 93fa      	ST   -Y,R31
0002c0 93ea      	ST   -Y,R30
0002c1 de1f      	RCALL _usart1_init
                 ; 0000 0186     usart0_init(bps_115200);
0002c2 e0e7      	LDI  R30,LOW(7)
0002c3 e0f0      	LDI  R31,HIGH(7)
0002c4 93fa      	ST   -Y,R31
0002c5 93ea      	ST   -Y,R30
0002c6 de32      	RCALL _usart0_init
                 ; 0000 0187     timer2_init();
0002c7 de47      	RCALL _timer2_init
                 ; 0000 0188     timer0_init();
0002c8 de4c      	RCALL _timer0_init
                 ; 0000 0189     SREG |= 0x80;
0002c9 9478      	BSET 7
                 ; 0000 018A     DDRB.1 = 1;
0002ca 9ab9      	SBI  0x17,1
                 ; 0000 018B     DDRB.2 = 1;
0002cb 9aba      	SBI  0x17,2
                 ; 0000 018C     DDRB.3 = 1;
0002cc 9abb      	SBI  0x17,3
                 ; 0000 018D     delay_ms(5000);
0002cd e8e8      	LDI  R30,LOW(5000)
0002ce e1f3      	LDI  R31,HIGH(5000)
0002cf 940e 0b85 	CALL SUBOPT_0x13
                 ; 0000 018E     PORTB.1 = 0;
0002d1 98c1      	CBI  0x18,1
                 ; 0000 018F     PORTB.2 = 1;
0002d2 9ac2      	SBI  0x18,2
                 ; 0000 0190 
                 ; 0000 0191     TIMER0_OVERFLOW = 0;
0002d3 2466      	CLR  R6
0002d4 2477      	CLR  R7
                 ; 0000 0192     TCNT0 = 0;
0002d5 e0e0      	LDI  R30,LOW(0)
0002d6 bfe2      	OUT  0x32,R30
                 ; 0000 0193     while(1)
                 _0x53:
                 ; 0000 0194     {
                 ; 0000 0195         if(CHECK_GETS)
0002d7 2088      	TST  R8
0002d8 f411      	BRNE PC+3
0002d9 940c 034e 	JMP _0x56
                 ; 0000 0196         {
                 ; 0000 0197             // TIMER0_OVERFLOW = 0;
                 ; 0000 0198             // TCNT0 = 0;
                 ; 0000 0199 
                 ; 0000 019A             PORTB.1 = 1;
0002db 9ac1      	SBI  0x18,1
                 ; 0000 019B 
                 ; 0000 019C             UCSR1B &= ~(1<<RXEN1);
0002dc 91e0 009a 	LDS  R30,154
0002de 7eef      	ANDI R30,0xEF
0002df 93e0 009a 	STS  154,R30
                 ; 0000 019D             sscanf(VELOCITY_BUFF,"<%d,%d>", &velocity, &angularV);
0002e1 e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0002e2 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0002e3 93fa      	ST   -Y,R31
0002e4 93ea      	ST   -Y,R30
                +
0002e5 e2e0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0002e6 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0002e7 93fa      	ST   -Y,R31
0002e8 93ea      	ST   -Y,R30
0002e9 b7ed      	IN   R30,SPL
0002ea b7fe      	IN   R31,SPH
0002eb 9731      	SBIW R30,1
0002ec 940e 0f6a 	CALL __PUTPARD1L
0002ee 931f      	PUSH R17
0002ef 930f      	PUSH R16
0002f0 b7ed      	IN   R30,SPL
0002f1 b7fe      	IN   R31,SPH
0002f2 9731      	SBIW R30,1
0002f3 940e 0f6a 	CALL __PUTPARD1L
0002f5 933f      	PUSH R19
0002f6 932f      	PUSH R18
0002f7 e088      	LDI  R24,8
0002f8 940e 08fe 	CALL _sscanf
0002fa 962c      	ADIW R28,12
0002fb 912f      	POP  R18
0002fc 913f      	POP  R19
0002fd 910f      	POP  R16
0002fe 911f      	POP  R17
                 ; 0000 019E 
                 ; 0000 019F             v_buff = (float)velocity/1000;
0002ff 01f8      	MOVW R30,R16
000300 940e 0b89 	CALL SUBOPT_0x14
                +
000302 01de     +MOVW R26 , R28
000303 57a2     +SUBI R26 , LOW ( - 142 )
000304 4fbf     +SBCI R27 , HIGH ( - 142 )
000305 93ed     +ST X + , R30
000306 93fd     +ST X + , R31
000307 936d     +ST X + , R22
000308 937c     +ST X , R23
                 	__PUTD1SX 142
                 ; 0000 01A0             a_buff = (float)angularV/1000;
000309 01f9      	MOVW R30,R18
00030a 940e 0b89 	CALL SUBOPT_0x14
                +
00030c 01de     +MOVW R26 , R28
00030d 56ae     +SUBI R26 , LOW ( - 146 )
00030e 4fbf     +SBCI R27 , HIGH ( - 146 )
00030f 93ed     +ST X + , R30
000310 93fd     +ST X + , R31
000311 936d     +ST X + , R22
000312 937c     +ST X , R23
                 	__PUTD1SX 146
                 ; 0000 01A1 
                 ; 0000 01A2             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000313 01fe      	MOVW R30,R28
000314 57e2      	SUBI R30,LOW(-(142))
000315 4fff      	SBCI R31,HIGH(-(142))
000316 93fa      	ST   -Y,R31
000317 93ea      	ST   -Y,R30
000318 01fe      	MOVW R30,R28
000319 56ec      	SUBI R30,LOW(-(148))
00031a 4fff      	SBCI R31,HIGH(-(148))
00031b 93fa      	ST   -Y,R31
00031c 93ea      	ST   -Y,R30
00031d b7ed      	IN   R30,SPL
00031e b7fe      	IN   R31,SPH
00031f 9731      	SBIW R30,1
000320 93fa      	ST   -Y,R31
000321 93ea      	ST   -Y,R30
000322 935f      	PUSH R21
000323 934f      	PUSH R20
000324 01fe      	MOVW R30,R28
000325 56ee      	SUBI R30,LOW(-(146))
000326 4fff      	SBCI R31,HIGH(-(146))
000327 93fa      	ST   -Y,R31
000328 93ea      	ST   -Y,R30
000329 de6d      	RCALL _Make_MSPEED
00032a 914f      	POP  R20
00032b 915f      	POP  R21
                 ; 0000 01A3             //sprintf(BUFF,"<%.2f,%.f2>", v_buff, a_buff);
                 ; 0000 01A4             //sprintf(BUFF,"<%d,%d>", velocity_R, velocity_L);
                 ; 0000 01A5             //puts_USART1(BUFF,VELOCITY_BUFF_IDX);
                 ; 0000 01A6 
                 ; 0000 01A7             past_velocity_R = velocity_R;
                +
00032c 01fe     +MOVW R30 , R28
00032d 57e6     +SUBI R30 , LOW ( - 138 )
00032e 4fff     +SBCI R31 , HIGH ( - 138 )
00032f 9341     +ST Z + , R20
000330 8350     +ST Z , R21
                 	__PUTWSRX 20,21,138
                 ; 0000 01A8             past_velocity_L = velocity_L;
                +
000331 01fe     +MOVW R30 , R28
000332 57e4     +SUBI R30 , LOW ( - 140 )
000333 4fff     +SBCI R31 , HIGH ( - 140 )
000334 9001     +LD R0 , Z +
000335 81f0     +LD R31 , Z
000336 2de0     +MOV R30 , R0
                 	__GETW1SX 140
                +
000337 01de     +MOVW R26 , R28
000338 57a8     +SUBI R26 , LOW ( - 136 )
000339 4fbf     +SBCI R27 , HIGH ( - 136 )
00033a 93ed     +ST X + , R30
00033b 93fc     +ST X , R31
                 	__PUTW1SX 136
                 ; 0000 01A9 
                 ; 0000 01AA             oper_Disapath(velocity_R, velocity_L);
00033c 935a      	ST   -Y,R21
00033d 934a      	ST   -Y,R20
                +
00033e 01fe     +MOVW R30 , R28
00033f 57e2     +SUBI R30 , LOW ( - 142 )
000340 4fff     +SBCI R31 , HIGH ( - 142 )
000341 9001     +LD R0 , Z +
000342 81f0     +LD R31 , Z
000343 2de0     +MOV R30 , R0
                 	__GETW1SX 142
000344 93fa      	ST   -Y,R31
000345 93ea      	ST   -Y,R30
000346 dec8      	RCALL _oper_Disapath
                 ; 0000 01AB 
                 ; 0000 01AC             CHECK_GETS = 0;
000347 2488      	CLR  R8
                 ; 0000 01AD             UCSR1B |=(1<<RXEN1);
000348 91e0 009a 	LDS  R30,154
00034a 61e0      	ORI  R30,0x10
00034b 93e0 009a 	STS  154,R30
                 ; 0000 01AE             PORTB.1 = 0;
00034d 98c1      	CBI  0x18,1
                 ; 0000 01AF         }
                 ; 0000 01B0 
                 ; 0000 01B1         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 _0x56:
00034e e0e1      	LDI  R30,LOW(1)
00034f 940e 0b96 	CALL SUBOPT_0x15
                 ; 0000 01B2         delay_ms(5);
                 ; 0000 01B3         // current_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
                 ; 0000 01B4         current_R = (float)get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R)/(152.788*Gearratio);
000351 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
000352 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
000353 93fa      	ST   -Y,R31
000354 93ea      	ST   -Y,R30
000355 924a      	ST   -Y,R4
000356 01fe      	MOVW R30,R28
000357 57ef      	SUBI R30,LOW(-(129))
000358 4fff      	SBCI R31,HIGH(-(129))
000359 940e 0ba2 	CALL SUBOPT_0x16
00035b 940e 0bab 	CALL SUBOPT_0x17
                +
00035d 01de     +MOVW R26 , R28
00035e 57ac     +SUBI R26 , LOW ( - 132 )
00035f 4fbf     +SBCI R27 , HIGH ( - 132 )
000360 93ed     +ST X + , R30
000361 93fd     +ST X + , R31
000362 936d     +ST X + , R22
000363 937c     +ST X , R23
                 	__PUTD1SX 132
                 ; 0000 01B5         delay_ms(5);
000364 e0e5      	LDI  R30,LOW(5)
000365 e0f0      	LDI  R31,HIGH(5)
000366 940e 0b85 	CALL SUBOPT_0x13
                 ; 0000 01B6         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
000368 e0e2      	LDI  R30,LOW(2)
000369 940e 0b96 	CALL SUBOPT_0x15
                 ; 0000 01B7         delay_ms(5);
                 ; 0000 01B8         // current_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
                 ; 0000 01B9         current_L = -(float)get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L)/(152.788*Gearratio);
00036b e0e0      	LDI  R30,LOW(_PACKET_BUFF)
00036c e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
00036d 93fa      	ST   -Y,R31
00036e 93ea      	ST   -Y,R30
00036f 924a      	ST   -Y,R4
000370 01fe      	MOVW R30,R28
000371 58e1      	SUBI R30,LOW(-(127))
000372 4fff      	SBCI R31,HIGH(-(127))
000373 940e 0ba2 	CALL SUBOPT_0x16
000375 940e 0d27 	CALL __ANEGF1
000377 940e 0bab 	CALL SUBOPT_0x17
                +
000379 01de     +MOVW R26 , R28
00037a 58a0     +SUBI R26 , LOW ( - 128 )
00037b 4fbf     +SBCI R27 , HIGH ( - 128 )
00037c 93ed     +ST X + , R30
00037d 93fd     +ST X + , R31
00037e 936d     +ST X + , R22
00037f 937c     +ST X , R23
                 	__PUTD1SX 128
                 ; 0000 01BA         delay_ms(5);
000380 e0e5      	LDI  R30,LOW(5)
000381 e0f0      	LDI  R31,HIGH(5)
000382 940e 0b85 	CALL SUBOPT_0x13
                 ; 0000 01BB 
                 ; 0000 01BC         d_velocity = (current_R + current_L)/2;
                +
000384 01fe     +MOVW R30 , R28
000385 58e0     +SUBI R30 , LOW ( - 128 )
000386 4fff     +SBCI R31 , HIGH ( - 128 )
000387 9001     +LD R0 , Z +
000388 9011     +LD R1 , Z +
000389 9161     +LD R22 , Z +
00038a 8170     +LD R23 , Z
00038b 01f0     +MOVW R30 , R0
                 	__GETD1SX 128
                +
00038c 01de     +MOVW R26 , R28
00038d 57ac     +SUBI R26 , LOW ( - 132 )
00038e 4fbf     +SBCI R27 , HIGH ( - 132 )
00038f 900d     +LD R0 , X +
000390 901d     +LD R1 , X +
000391 918d     +LD R24 , X +
000392 919c     +LD R25 , X
000393 01d0     +MOVW R26 , R0
                 	__GETD2SX 132
000394 940e 0dcd 	CALL __ADDF12
000396 01df      	MOVW R26,R30
000397 01cb      	MOVW R24,R22
                +
000398 e0e0     +LDI R30 , LOW ( 0x40000000 )
000399 e0f0     +LDI R31 , HIGH ( 0x40000000 )
00039a e060     +LDI R22 , BYTE3 ( 0x40000000 )
00039b e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00039c 940e 0e6b 	CALL __DIVF21
                +
00039e 01de     +MOVW R26 , R28
00039f 58a8     +SUBI R26 , LOW ( - 120 )
0003a0 4fbf     +SBCI R27 , HIGH ( - 120 )
0003a1 93ed     +ST X + , R30
0003a2 93fd     +ST X + , R31
0003a3 936d     +ST X + , R22
0003a4 937c     +ST X , R23
                 	__PUTD1SX 120
                 ; 0000 01BD         d_angularV = (2*(current_R-current_L))/Length;
                +
0003a5 01de     +MOVW R26 , R28
0003a6 58a0     +SUBI R26 , LOW ( - 128 )
0003a7 4fbf     +SBCI R27 , HIGH ( - 128 )
0003a8 900d     +LD R0 , X +
0003a9 901d     +LD R1 , X +
0003aa 918d     +LD R24 , X +
0003ab 919c     +LD R25 , X
0003ac 01d0     +MOVW R26 , R0
                 	__GETD2SX 128
                +
0003ad 01fe     +MOVW R30 , R28
0003ae 57ec     +SUBI R30 , LOW ( - 132 )
0003af 4fff     +SBCI R31 , HIGH ( - 132 )
0003b0 9001     +LD R0 , Z +
0003b1 9011     +LD R1 , Z +
0003b2 9161     +LD R22 , Z +
0003b3 8170     +LD R23 , Z
0003b4 01f0     +MOVW R30 , R0
                 	__GETD1SX 132
0003b5 940e 0dc6 	CALL __SUBF12
                +
0003b7 e0a0     +LDI R26 , LOW ( 0x40000000 )
0003b8 e0b0     +LDI R27 , HIGH ( 0x40000000 )
0003b9 e080     +LDI R24 , BYTE3 ( 0x40000000 )
0003ba e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0003bb 940e 0e1d 	CALL __MULF12
0003bd 01df      	MOVW R26,R30
0003be 01cb      	MOVW R24,R22
                +
0003bf eee1     +LDI R30 , LOW ( 0x3E947AE1 )
0003c0 e7fa     +LDI R31 , HIGH ( 0x3E947AE1 )
0003c1 e964     +LDI R22 , BYTE3 ( 0x3E947AE1 )
0003c2 e37e     +LDI R23 , BYTE4 ( 0x3E947AE1 )
                 	__GETD1N 0x3E947AE1
0003c3 940e 0e6b 	CALL __DIVF21
                +
0003c5 01de     +MOVW R26 , R28
0003c6 58ac     +SUBI R26 , LOW ( - 116 )
0003c7 4fbf     +SBCI R27 , HIGH ( - 116 )
0003c8 93ed     +ST X + , R30
0003c9 93fd     +ST X + , R31
0003ca 936d     +ST X + , R22
0003cb 937c     +ST X , R23
                 	__PUTD1SX 116
                 ; 0000 01BE         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)* 0.000069444;
0003cc 01f3      	MOVW R30,R6
0003cd efaf      	LDI  R26,LOW(255)
0003ce e0b0      	LDI  R27,HIGH(255)
0003cf 940e 0ef0 	CALL __MULW12U
0003d1 01df      	MOVW R26,R30
0003d2 b7e2      	IN   R30,0x32
0003d3 940e 0b71 	CALL SUBOPT_0x10
0003d5 2766      	CLR  R22
0003d6 2777      	CLR  R23
0003d7 940e 0d93 	CALL __CDF1
                +
0003d9 e7a7     +LDI R26 , LOW ( 0x3891A277 )
0003da eab2     +LDI R27 , HIGH ( 0x3891A277 )
0003db e981     +LDI R24 , BYTE3 ( 0x3891A277 )
0003dc e398     +LDI R25 , BYTE4 ( 0x3891A277 )
                 	__GETD2N 0x3891A277
0003dd 940e 0e1d 	CALL __MULF12
                +
0003df 01de     +MOVW R26 , R28
0003e0 59a0     +SUBI R26 , LOW ( - 112 )
0003e1 4fbf     +SBCI R27 , HIGH ( - 112 )
0003e2 93ed     +ST X + , R30
0003e3 93fd     +ST X + , R31
0003e4 936d     +ST X + , R22
0003e5 937c     +ST X , R23
                 	__PUTD1SX 112
                 ; 0000 01BF 
                 ; 0000 01C0         d_angular += (control_time*d_angularV);
0003e6 940e 0bb4 	CALL SUBOPT_0x18
                +
0003e8 01de     +MOVW R26 , R28
0003e9 59ac     +SUBI R26 , LOW ( - 100 )
0003ea 4fbf     +SBCI R27 , HIGH ( - 100 )
0003eb 900d     +LD R0 , X +
0003ec 901d     +LD R1 , X +
0003ed 918d     +LD R24 , X +
0003ee 919c     +LD R25 , X
0003ef 01d0     +MOVW R26 , R0
                 	__GETD2SX 100
0003f0 940e 0dcd 	CALL __ADDF12
                +
0003f2 01de     +MOVW R26 , R28
0003f3 59ac     +SUBI R26 , LOW ( - 100 )
0003f4 4fbf     +SBCI R27 , HIGH ( - 100 )
0003f5 93ed     +ST X + , R30
0003f6 93fd     +ST X + , R31
0003f7 936d     +ST X + , R22
0003f8 937c     +ST X , R23
                 	__PUTD1SX 100
                 ; 0000 01C1 
                 ; 0000 01C2         d_x += d_velocity*cos(control_time*d_angularV);
0003f9 940e 0bb4 	CALL SUBOPT_0x18
0003fb 940e 0f6c 	CALL __PUTPARD1
0003fd 940e 09f9 	CALL _cos
0003ff 940e 0bc7 	CALL SUBOPT_0x19
                +
000401 01de     +MOVW R26 , R28
000402 59a4     +SUBI R26 , LOW ( - 108 )
000403 4fbf     +SBCI R27 , HIGH ( - 108 )
000404 900d     +LD R0 , X +
000405 901d     +LD R1 , X +
000406 918d     +LD R24 , X +
000407 919c     +LD R25 , X
000408 01d0     +MOVW R26 , R0
                 	__GETD2SX 108
000409 940e 0dcd 	CALL __ADDF12
                +
00040b 01de     +MOVW R26 , R28
00040c 59a4     +SUBI R26 , LOW ( - 108 )
00040d 4fbf     +SBCI R27 , HIGH ( - 108 )
00040e 93ed     +ST X + , R30
00040f 93fd     +ST X + , R31
000410 936d     +ST X + , R22
000411 937c     +ST X , R23
                 	__PUTD1SX 108
                 ; 0000 01C3         d_y += d_velocity*sin(control_time*d_angularV);
000412 940e 0bb4 	CALL SUBOPT_0x18
000414 940e 0f6c 	CALL __PUTPARD1
000416 940e 0972 	CALL _sin
000418 940e 0bc7 	CALL SUBOPT_0x19
                +
00041a 01de     +MOVW R26 , R28
00041b 59a8     +SUBI R26 , LOW ( - 104 )
00041c 4fbf     +SBCI R27 , HIGH ( - 104 )
00041d 900d     +LD R0 , X +
00041e 901d     +LD R1 , X +
00041f 918d     +LD R24 , X +
000420 919c     +LD R25 , X
000421 01d0     +MOVW R26 , R0
                 	__GETD2SX 104
000422 940e 0dcd 	CALL __ADDF12
                +
000424 01de     +MOVW R26 , R28
000425 59a8     +SUBI R26 , LOW ( - 104 )
000426 4fbf     +SBCI R27 , HIGH ( - 104 )
000427 93ed     +ST X + , R30
000428 93fd     +ST X + , R31
000429 936d     +ST X + , R22
00042a 937c     +ST X , R23
                 	__PUTD1SX 104
                 ; 0000 01C4 
                 ; 0000 01C5         TIMER0_OVERFLOW = 0;
00042b 2466      	CLR  R6
00042c 2477      	CLR  R7
                 ; 0000 01C6         TCNT0 = 0;
00042d e0e0      	LDI  R30,LOW(0)
00042e bfe2      	OUT  0x32,R30
                 ; 0000 01C7         // sprintf(BUFF, "%f, %f, %f\n", d_velocity, d_angularV, control_time);
                 ; 0000 01C8         sprintf(BUFF, "%f, %f, %f, %f, %f\n", d_x, d_y, d_angular, current_R/1000, current_L/1000);
00042f 01fe      	MOVW R30,R28
000430 93fa      	ST   -Y,R31
000431 93ea      	ST   -Y,R30
                +
000432 e2e8     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
000433 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
000434 93fa      	ST   -Y,R31
000435 93ea      	ST   -Y,R30
000436 940e 0bd2 	CALL SUBOPT_0x1A
000438 940e 0bd2 	CALL SUBOPT_0x1A
00043a 940e 0bd2 	CALL SUBOPT_0x1A
00043c 940e 0bdd 	CALL SUBOPT_0x1B
00043e 940e 0bdd 	CALL SUBOPT_0x1B
000440 e184      	LDI  R24,20
000441 940e 076f 	CALL _sprintf
000443 9668      	ADIW R28,24
                 ; 0000 01C9         // sprintf(BUFF, "%d, %d\n", current_R, goal_current_R);
                 ; 0000 01CA         // sprintf(BUFF, "%d, %d, %d, %d\n", current_R, current_L, goal_current_R, goal_current_L);
                 ; 0000 01CB         puts_USART1(BUFF);
000444 01fe      	MOVW R30,R28
000445 93fa      	ST   -Y,R31
000446 93ea      	ST   -Y,R30
000447 dcda      	RCALL _puts_USART1
                 ; 0000 01CC     }
000448 ce8e      	RJMP _0x53
                 ; 0000 01CD }
                 _0x5B:
000449 cfff      	RJMP _0x5B
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
00044a 931a      	ST   -Y,R17
00044b 930a      	ST   -Y,R16
00044c 81aa      	LDD  R26,Y+2
00044d 81bb      	LDD  R27,Y+2+1
00044e 9612      	ADIW R26,2
00044f 940e 0f4c 	CALL __GETW1P
000451 9730      	SBIW R30,0
000452 f129      	BREQ _0x2000010
000453 81aa      	LDD  R26,Y+2
000454 81bb      	LDD  R27,Y+2+1
000455 9614      	ADIW R26,4
000456 940e 0f4c 	CALL __GETW1P
000458 018f      	MOVW R16,R30
000459 9730      	SBIW R30,0
00045a f061      	BREQ _0x2000012
                +
00045b 3002     +CPI R16 , LOW ( 2 )
00045c e0e0     +LDI R30 , HIGH ( 2 )
00045d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00045e f0c0      	BRLO _0x2000013
00045f 01f8      	MOVW R30,R16
000460 9731      	SBIW R30,1
000461 018f      	MOVW R16,R30
                +
000462 81aa     +LDD R26 , Y + 2
000463 81bb     +LDD R27 , Y + 2 + 1
000464 9614     +ADIW R26 , 4
000465 93ed     +ST X + , R30
000466 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000467 81aa      	LDD  R26,Y+2
000468 81bb      	LDD  R27,Y+2+1
000469 9612      	ADIW R26,2
00046a 940e 0bee 	CALL SUBOPT_0x1C
00046c 9731      	SBIW R30,1
00046d 81ac      	LDD  R26,Y+4
00046e 83a0      	STD  Z+0,R26
00046f 81aa      	LDD  R26,Y+2
000470 81bb      	LDD  R27,Y+2+1
000471 940e 0f4c 	CALL __GETW1P
000473 23ff      	TST  R31
000474 f012      	BRMI _0x2000014
000475 940e 0bee 	CALL SUBOPT_0x1C
                 _0x2000014:
                 _0x2000013:
000477 c006      	RJMP _0x2000015
                 _0x2000010:
000478 81aa      	LDD  R26,Y+2
000479 81bb      	LDD  R27,Y+2+1
00047a efef      	LDI  R30,LOW(65535)
00047b efff      	LDI  R31,HIGH(65535)
00047c 93ed      	ST   X+,R30
00047d 93fc      	ST   X,R31
                 _0x2000015:
00047e 8119      	LDD  R17,Y+1
00047f 8108      	LDD  R16,Y+0
000480 c348      	RJMP _0x20A0007
                 __ftoe_G100:
000481 9724      	SBIW R28,4
000482 940e 0b1c 	CALL SUBOPT_0x4
000484 e8e0      	LDI  R30,LOW(128)
000485 83ea      	STD  Y+2,R30
000486 e3ef      	LDI  R30,LOW(63)
000487 83eb      	STD  Y+3,R30
000488 940e 0f84 	CALL __SAVELOCR4
00048a 85ee      	LDD  R30,Y+14
00048b 85ff      	LDD  R31,Y+14+1
00048c 3fef      	CPI  R30,LOW(0xFFFF)
00048d efaf      	LDI  R26,HIGH(0xFFFF)
00048e 07fa      	CPC  R31,R26
00048f f449      	BRNE _0x2000019
000490 85e8      	LDD  R30,Y+8
000491 85f9      	LDD  R31,Y+8+1
000492 93fa      	ST   -Y,R31
000493 93ea      	ST   -Y,R30
                +
000494 e3ec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000495 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000496 940e 0bf4 	CALL SUBOPT_0x1D
000498 c0b6      	RJMP _0x20A0009
                 _0x2000019:
000499 3fef      	CPI  R30,LOW(0x7FFF)
00049a e7af      	LDI  R26,HIGH(0x7FFF)
00049b 07fa      	CPC  R31,R26
00049c f449      	BRNE _0x2000018
00049d 85e8      	LDD  R30,Y+8
00049e 85f9      	LDD  R31,Y+8+1
00049f 93fa      	ST   -Y,R31
0004a0 93ea      	ST   -Y,R30
                +
0004a1 e3ed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
0004a2 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
0004a3 940e 0bf4 	CALL SUBOPT_0x1D
0004a5 c0a9      	RJMP _0x20A0009
                 _0x2000018:
0004a6 85ab      	LDD  R26,Y+11
0004a7 30a7      	CPI  R26,LOW(0x7)
0004a8 f010      	BRLO _0x200001B
0004a9 e0e6      	LDI  R30,LOW(6)
0004aa 87eb      	STD  Y+11,R30
                 _0x200001B:
0004ab 851b      	LDD  R17,Y+11
                 _0x200001C:
0004ac 2fe1      	MOV  R30,R17
0004ad 5011      	SUBI R17,1
0004ae 30e0      	CPI  R30,0
0004af f019      	BREQ _0x200001E
0004b0 940e 0bf8 	CALL SUBOPT_0x1E
0004b2 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0004b3 85ec     +LDD R30 , Y + 12
0004b4 85fd     +LDD R31 , Y + 12 + 1
0004b5 856e     +LDD R22 , Y + 12 + 2
0004b6 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0004b7 940e 0f7e 	CALL __CPD10
0004b9 f421      	BRNE _0x200001F
0004ba e030      	LDI  R19,LOW(0)
0004bb 940e 0bf8 	CALL SUBOPT_0x1E
0004bd c02e      	RJMP _0x2000020
                 _0x200001F:
0004be 853b      	LDD  R19,Y+11
0004bf 940e 0c03 	CALL SUBOPT_0x1F
0004c1 f009      	BREQ PC+2
0004c2 f410      	BRCC PC+3
0004c3 940c 04d0 	JMP  _0x2000021
0004c5 940e 0bf8 	CALL SUBOPT_0x1E
                 _0x2000022:
0004c7 940e 0c03 	CALL SUBOPT_0x1F
0004c9 f028      	BRLO _0x2000024
0004ca 940e 0c0b 	CALL SUBOPT_0x20
0004cc 940e 0c10 	CALL SUBOPT_0x21
0004ce cff8      	RJMP _0x2000022
                 _0x2000024:
0004cf c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0004d0 940e 0c03 	CALL SUBOPT_0x1F
0004d2 f440      	BRSH _0x2000028
0004d3 940e 0c0b 	CALL SUBOPT_0x20
0004d5 940e 0c1c 	CALL SUBOPT_0x22
0004d7 940e 0c23 	CALL SUBOPT_0x23
0004d9 5031      	SUBI R19,LOW(1)
0004da cff5      	RJMP _0x2000026
                 _0x2000028:
0004db 940e 0bf8 	CALL SUBOPT_0x1E
                 _0x2000025:
                +
0004dd 85ec     +LDD R30 , Y + 12
0004de 85fd     +LDD R31 , Y + 12 + 1
0004df 856e     +LDD R22 , Y + 12 + 2
0004e0 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0004e1 940e 0c28 	CALL SUBOPT_0x24
0004e3 940e 0c23 	CALL SUBOPT_0x23
0004e5 940e 0c03 	CALL SUBOPT_0x1F
0004e7 f020      	BRLO _0x2000029
0004e8 940e 0c0b 	CALL SUBOPT_0x20
0004ea 940e 0c10 	CALL SUBOPT_0x21
                 _0x2000029:
                 _0x2000020:
0004ec e010      	LDI  R17,LOW(0)
                 _0x200002A:
0004ed 85eb      	LDD  R30,Y+11
0004ee 17e1      	CP   R30,R17
0004ef f198      	BRLO _0x200002C
                +
0004f0 81ac     +LDD R26 , Y + 4
0004f1 81bd     +LDD R27 , Y + 4 + 1
0004f2 818e     +LDD R24 , Y + 4 + 2
0004f3 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0004f4 940e 0c2f 	CALL SUBOPT_0x25
0004f6 940e 0c28 	CALL SUBOPT_0x24
0004f8 940e 0c36 	CALL SUBOPT_0x26
0004fa 940e 0b39 	CALL SUBOPT_0x8
0004fc 940e 0b43 	CALL SUBOPT_0xA
0004fe 940e 0c0b 	CALL SUBOPT_0x20
000500 940e 0e6b 	CALL __DIVF21
000502 940e 0d5a 	CALL __CFD1U
000504 2f0e      	MOV  R16,R30
000505 940e 0c3a 	CALL SUBOPT_0x27
000507 940e 0c41 	CALL SUBOPT_0x28
000509 27ff      	CLR  R31
00050a 2766      	CLR  R22
00050b 2777      	CLR  R23
00050c 940e 0d93 	CALL __CDF1
                +
00050e 81ac     +LDD R26 , Y + 4
00050f 81bd     +LDD R27 , Y + 4 + 1
000510 818e     +LDD R24 , Y + 4 + 2
000511 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000512 940e 0e1d 	CALL __MULF12
000514 940e 0c0b 	CALL SUBOPT_0x20
000516 940e 0b3e 	CALL SUBOPT_0x9
000518 940e 0c23 	CALL SUBOPT_0x23
00051a 2fe1      	MOV  R30,R17
00051b 5f1f      	SUBI R17,-1
00051c 30e0      	CPI  R30,0
00051d f679      	BRNE _0x200002A
00051e 940e 0c3a 	CALL SUBOPT_0x27
000520 e2ee      	LDI  R30,LOW(46)
000521 93ec      	ST   X,R30
000522 cfca      	RJMP _0x200002A
                 _0x200002C:
000523 940e 0c46 	CALL SUBOPT_0x29
000525 9731      	SBIW R30,1
000526 85aa      	LDD  R26,Y+10
000527 83a0      	STD  Z+0,R26
000528 3030      	CPI  R19,0
000529 f42c      	BRGE _0x200002E
00052a 9531      	NEG  R19
00052b 85a8      	LDD  R26,Y+8
00052c 85b9      	LDD  R27,Y+8+1
00052d e2ed      	LDI  R30,LOW(45)
00052e c003      	RJMP _0x200010E
                 _0x200002E:
00052f 85a8      	LDD  R26,Y+8
000530 85b9      	LDD  R27,Y+8+1
000531 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
000532 93ec      	ST   X,R30
000533 940e 0c46 	CALL SUBOPT_0x29
000535 940e 0c46 	CALL SUBOPT_0x29
000537 9731      	SBIW R30,1
000538 01bf      	MOVW R22,R30
000539 2fa3      	MOV  R26,R19
00053a e0ea      	LDI  R30,LOW(10)
00053b 940e 0f06 	CALL __DIVB21
00053d 5de0      	SUBI R30,-LOW(48)
00053e 01db      	MOVW R26,R22
00053f 93ec      	ST   X,R30
000540 940e 0c46 	CALL SUBOPT_0x29
000542 9731      	SBIW R30,1
000543 01bf      	MOVW R22,R30
000544 2fa3      	MOV  R26,R19
000545 e0ea      	LDI  R30,LOW(10)
000546 940e 0f30 	CALL __MODB21
000548 5de0      	SUBI R30,-LOW(48)
000549 01db      	MOVW R26,R22
00054a 93ec      	ST   X,R30
00054b 85a8      	LDD  R26,Y+8
00054c 85b9      	LDD  R27,Y+8+1
00054d e0e0      	LDI  R30,LOW(0)
00054e 93ec      	ST   X,R30
                 _0x20A0009:
00054f 940e 0f8b 	CALL __LOADLOCR4
                 _0x20A000A:
000551 9660      	ADIW R28,16
000552 9508      	RET
                 __print_G100:
000553 97ef      	SBIW R28,63
000554 9761      	SBIW R28,17
000555 940e 0f82 	CALL __SAVELOCR6
000557 e010      	LDI  R17,0
                +
000558 01fe     +MOVW R30 , R28
000559 5ae8     +SUBI R30 , LOW ( - 88 )
00055a 4fff     +SBCI R31 , HIGH ( - 88 )
00055b 9001     +LD R0 , Z +
00055c 81f0     +LD R31 , Z
00055d 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00055e 87e8      	STD  Y+8,R30
00055f 87f9      	STD  Y+8+1,R31
                +
000560 01fe     +MOVW R30 , R28
000561 5aea     +SUBI R30 , LOW ( - 86 )
000562 4fff     +SBCI R31 , HIGH ( - 86 )
000563 9001     +LD R0 , Z +
000564 81f0     +LD R31 , Z
000565 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000566 83ee      	STD  Y+6,R30
000567 83ff      	STD  Y+6+1,R31
000568 81ae      	LDD  R26,Y+6
000569 81bf      	LDD  R27,Y+6+1
00056a 940e 0b5a 	CALL SUBOPT_0xD
                 _0x2000030:
00056c 01de      	MOVW R26,R28
00056d 5aa4      	SUBI R26,LOW(-(92))
00056e 4fbf      	SBCI R27,HIGH(-(92))
00056f 940e 0bee 	CALL SUBOPT_0x1C
000571 9731      	SBIW R30,1
000572 91e4      	LPM  R30,Z
000573 2f2e      	MOV  R18,R30
000574 30e0      	CPI  R30,0
000575 f411      	BRNE PC+3
000576 940c 0766 	JMP _0x2000032
000578 2fe1      	MOV  R30,R17
000579 30e0      	CPI  R30,0
00057a f439      	BRNE _0x2000036
00057b 3225      	CPI  R18,37
00057c f411      	BRNE _0x2000037
00057d e011      	LDI  R17,LOW(1)
00057e c002      	RJMP _0x2000038
                 _0x2000037:
00057f 940e 0c4c 	CALL SUBOPT_0x2A
                 _0x2000038:
000581 c1e3      	RJMP _0x2000035
                 _0x2000036:
000582 30e1      	CPI  R30,LOW(0x1)
000583 f4c1      	BRNE _0x2000039
000584 3225      	CPI  R18,37
000585 f419      	BRNE _0x200003A
000586 940e 0c4c 	CALL SUBOPT_0x2A
000588 c1db      	RJMP _0x200010F
                 _0x200003A:
000589 e012      	LDI  R17,LOW(2)
00058a e0e0      	LDI  R30,LOW(0)
00058b 8bed      	STD  Y+21,R30
00058c e000      	LDI  R16,LOW(0)
00058d 322d      	CPI  R18,45
00058e f411      	BRNE _0x200003B
00058f e001      	LDI  R16,LOW(1)
000590 c1d4      	RJMP _0x2000035
                 _0x200003B:
000591 322b      	CPI  R18,43
000592 f419      	BRNE _0x200003C
000593 e2eb      	LDI  R30,LOW(43)
000594 8bed      	STD  Y+21,R30
000595 c1cf      	RJMP _0x2000035
                 _0x200003C:
000596 3220      	CPI  R18,32
000597 f419      	BRNE _0x200003D
000598 e2e0      	LDI  R30,LOW(32)
000599 8bed      	STD  Y+21,R30
00059a c1ca      	RJMP _0x2000035
                 _0x200003D:
00059b c002      	RJMP _0x200003E
                 _0x2000039:
00059c 30e2      	CPI  R30,LOW(0x2)
00059d f439      	BRNE _0x200003F
                 _0x200003E:
00059e e050      	LDI  R21,LOW(0)
00059f e013      	LDI  R17,LOW(3)
0005a0 3320      	CPI  R18,48
0005a1 f411      	BRNE _0x2000040
0005a2 6800      	ORI  R16,LOW(128)
0005a3 c1c1      	RJMP _0x2000035
                 _0x2000040:
0005a4 c002      	RJMP _0x2000041
                 _0x200003F:
0005a5 30e3      	CPI  R30,LOW(0x3)
0005a6 f491      	BRNE _0x2000042
                 _0x2000041:
0005a7 3320      	CPI  R18,48
0005a8 f010      	BRLO _0x2000044
0005a9 332a      	CPI  R18,58
0005aa f008      	BRLO _0x2000045
                 _0x2000044:
0005ab c007      	RJMP _0x2000043
                 _0x2000045:
0005ac e0aa      	LDI  R26,LOW(10)
0005ad 9f5a      	MUL  R21,R26
0005ae 2d50      	MOV  R21,R0
0005af 2fe2      	MOV  R30,R18
0005b0 53e0      	SUBI R30,LOW(48)
0005b1 0f5e      	ADD  R21,R30
0005b2 c1b2      	RJMP _0x2000035
                 _0x2000043:
0005b3 e040      	LDI  R20,LOW(0)
0005b4 322e      	CPI  R18,46
0005b5 f411      	BRNE _0x2000046
0005b6 e014      	LDI  R17,LOW(4)
0005b7 c1ad      	RJMP _0x2000035
                 _0x2000046:
0005b8 c00f      	RJMP _0x2000047
                 _0x2000042:
0005b9 30e4      	CPI  R30,LOW(0x4)
0005ba f499      	BRNE _0x2000049
0005bb 3320      	CPI  R18,48
0005bc f010      	BRLO _0x200004B
0005bd 332a      	CPI  R18,58
0005be f008      	BRLO _0x200004C
                 _0x200004B:
0005bf c008      	RJMP _0x200004A
                 _0x200004C:
0005c0 6200      	ORI  R16,LOW(32)
0005c1 e0aa      	LDI  R26,LOW(10)
0005c2 9f4a      	MUL  R20,R26
0005c3 2d40      	MOV  R20,R0
0005c4 2fe2      	MOV  R30,R18
0005c5 53e0      	SUBI R30,LOW(48)
0005c6 0f4e      	ADD  R20,R30
0005c7 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0005c8 362c      	CPI  R18,108
0005c9 f419      	BRNE _0x200004D
0005ca 6002      	ORI  R16,LOW(2)
0005cb e015      	LDI  R17,LOW(5)
0005cc c198      	RJMP _0x2000035
                 _0x200004D:
0005cd c004      	RJMP _0x200004E
                 _0x2000049:
0005ce 30e5      	CPI  R30,LOW(0x5)
0005cf f011      	BREQ PC+3
0005d0 940c 0765 	JMP _0x2000035
                 _0x200004E:
0005d2 2fe2      	MOV  R30,R18
0005d3 36e3      	CPI  R30,LOW(0x63)
0005d4 f459      	BRNE _0x2000053
0005d5 940e 0c55 	CALL SUBOPT_0x2B
0005d7 940e 0c5c 	CALL SUBOPT_0x2C
0005d9 940e 0c55 	CALL SUBOPT_0x2B
0005db 81a4      	LDD  R26,Z+4
0005dc 93aa      	ST   -Y,R26
0005dd 940e 0c63 	CALL SUBOPT_0x2D
0005df c184      	RJMP _0x2000054
                 _0x2000053:
0005e0 34e5      	CPI  R30,LOW(0x45)
0005e1 f011      	BREQ _0x2000057
0005e2 36e5      	CPI  R30,LOW(0x65)
0005e3 f409      	BRNE _0x2000058
                 _0x2000057:
0005e4 c004      	RJMP _0x2000059
                 _0x2000058:
0005e5 36e6      	CPI  R30,LOW(0x66)
0005e6 f011      	BREQ PC+3
0005e7 940c 0633 	JMP _0x200005A
                 _0x2000059:
0005e9 01fe      	MOVW R30,R28
0005ea 9676      	ADIW R30,22
0005eb 87ee      	STD  Y+14,R30
0005ec 87ff      	STD  Y+14+1,R31
0005ed 940e 0c6b 	CALL SUBOPT_0x2E
0005ef 940e 0f50 	CALL __GETD1P
0005f1 940e 0c72 	CALL SUBOPT_0x2F
0005f3 940e 0c77 	CALL SUBOPT_0x30
0005f5 85ad      	LDD  R26,Y+13
0005f6 23aa      	TST  R26
0005f7 f022      	BRMI _0x200005B
0005f8 89ad      	LDD  R26,Y+21
0005f9 32ab      	CPI  R26,LOW(0x2B)
0005fa f049      	BREQ _0x200005D
0005fb c017      	RJMP _0x200005E
                 _0x200005B:
0005fc 940e 0c79 	CALL SUBOPT_0x31
0005fe 940e 0d27 	CALL __ANEGF1
000600 940e 0c72 	CALL SUBOPT_0x2F
000602 e2ed      	LDI  R30,LOW(45)
000603 8bed      	STD  Y+21,R30
                 _0x200005D:
000604 ff07      	SBRS R16,7
000605 c005      	RJMP _0x200005F
000606 89ed      	LDD  R30,Y+21
000607 93ea      	ST   -Y,R30
000608 940e 0c63 	CALL SUBOPT_0x2D
00060a c008      	RJMP _0x2000060
                 _0x200005F:
00060b 85ee      	LDD  R30,Y+14
00060c 85ff      	LDD  R31,Y+14+1
00060d 9631      	ADIW R30,1
00060e 87ee      	STD  Y+14,R30
00060f 87ff      	STD  Y+14+1,R31
000610 9731      	SBIW R30,1
000611 89ad      	LDD  R26,Y+21
000612 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000613 ff05      	SBRS R16,5
000614 e046      	LDI  R20,LOW(6)
000615 3626      	CPI  R18,102
000616 f461      	BRNE _0x2000062
000617 940e 0c79 	CALL SUBOPT_0x31
000619 940e 0f6c 	CALL __PUTPARD1
00061b 934a      	ST   -Y,R20
00061c 89eb      	LDD  R30,Y+19
00061d 89fc      	LDD  R31,Y+19+1
00061e 93fa      	ST   -Y,R31
00061f 93ea      	ST   -Y,R30
000620 940e 0a46 	CALL _ftoa
000622 c00b      	RJMP _0x2000063
                 _0x2000062:
000623 940e 0c79 	CALL SUBOPT_0x31
000625 940e 0f6c 	CALL __PUTPARD1
000627 934a      	ST   -Y,R20
000628 932a      	ST   -Y,R18
000629 89ec      	LDD  R30,Y+20
00062a 89fd      	LDD  R31,Y+20+1
00062b 93fa      	ST   -Y,R31
00062c 93ea      	ST   -Y,R30
00062d de53      	RCALL __ftoe_G100
                 _0x2000063:
00062e 01fe      	MOVW R30,R28
00062f 9676      	ADIW R30,22
000630 940e 0c7e 	CALL SUBOPT_0x32
000632 c01e      	RJMP _0x2000064
                 _0x200005A:
000633 37e3      	CPI  R30,LOW(0x73)
000634 f439      	BRNE _0x2000066
000635 940e 0c77 	CALL SUBOPT_0x30
000637 940e 0c86 	CALL SUBOPT_0x33
000639 940e 0c7e 	CALL SUBOPT_0x32
00063b c00e      	RJMP _0x2000067
                 _0x2000066:
00063c 37e0      	CPI  R30,LOW(0x70)
00063d f4c1      	BRNE _0x2000069
00063e 940e 0c77 	CALL SUBOPT_0x30
000640 940e 0c86 	CALL SUBOPT_0x33
000642 87ee      	STD  Y+14,R30
000643 87ff      	STD  Y+14+1,R31
000644 93fa      	ST   -Y,R31
000645 93ea      	ST   -Y,R30
000646 940e 0a3b 	CALL _strlenf
000648 2f1e      	MOV  R17,R30
000649 6008      	ORI  R16,LOW(8)
                 _0x2000067:
00064a 770f      	ANDI R16,LOW(127)
00064b 3040      	CPI  R20,0
00064c f011      	BREQ _0x200006B
00064d 1741      	CP   R20,R17
00064e f008      	BRLO _0x200006C
                 _0x200006B:
00064f c001      	RJMP _0x200006A
                 _0x200006C:
000650 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000651 e040      	LDI  R20,LOW(0)
000652 e0e0      	LDI  R30,LOW(0)
000653 8bec      	STD  Y+20,R30
000654 e030      	LDI  R19,LOW(0)
000655 c06e      	RJMP _0x200006D
                 _0x2000069:
000656 36e4      	CPI  R30,LOW(0x64)
000657 f011      	BREQ _0x2000070
000658 36e9      	CPI  R30,LOW(0x69)
000659 f411      	BRNE _0x2000071
                 _0x2000070:
00065a 6004      	ORI  R16,LOW(4)
00065b c002      	RJMP _0x2000072
                 _0x2000071:
00065c 37e5      	CPI  R30,LOW(0x75)
00065d f4a1      	BRNE _0x2000073
                 _0x2000072:
00065e e0ea      	LDI  R30,LOW(10)
00065f 8bec      	STD  Y+20,R30
000660 ff01      	SBRS R16,1
000661 c008      	RJMP _0x2000074
                +
000662 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000663 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000664 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000665 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000666 940e 0c8b 	CALL SUBOPT_0x34
000668 e01a      	LDI  R17,LOW(10)
000669 c023      	RJMP _0x2000075
                 _0x2000074:
                +
00066a e1e0     +LDI R30 , LOW ( 0x2710 )
00066b e2f7     +LDI R31 , HIGH ( 0x2710 )
00066c e060     +LDI R22 , BYTE3 ( 0x2710 )
00066d e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00066e 940e 0c8b 	CALL SUBOPT_0x34
000670 e015      	LDI  R17,LOW(5)
000671 c01b      	RJMP _0x2000075
                 _0x2000073:
000672 35e8      	CPI  R30,LOW(0x58)
000673 f411      	BRNE _0x2000077
000674 6008      	ORI  R16,LOW(8)
000675 c004      	RJMP _0x2000078
                 _0x2000077:
000676 37e8      	CPI  R30,LOW(0x78)
000677 f011      	BREQ PC+3
000678 940c 0764 	JMP _0x20000B6
                 _0x2000078:
00067a e1e0      	LDI  R30,LOW(16)
00067b 8bec      	STD  Y+20,R30
00067c ff01      	SBRS R16,1
00067d c008      	RJMP _0x200007A
                +
00067e e0e0     +LDI R30 , LOW ( 0x10000000 )
00067f e0f0     +LDI R31 , HIGH ( 0x10000000 )
000680 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000681 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000682 940e 0c8b 	CALL SUBOPT_0x34
000684 e018      	LDI  R17,LOW(8)
000685 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000686 e0e0     +LDI R30 , LOW ( 0x1000 )
000687 e1f0     +LDI R31 , HIGH ( 0x1000 )
000688 e060     +LDI R22 , BYTE3 ( 0x1000 )
000689 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00068a 940e 0c8b 	CALL SUBOPT_0x34
00068c e014      	LDI  R17,LOW(4)
                 _0x2000075:
00068d 3040      	CPI  R20,0
00068e f011      	BREQ _0x200007B
00068f 770f      	ANDI R16,LOW(127)
000690 c001      	RJMP _0x200007C
                 _0x200007B:
000691 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000692 ff01      	SBRS R16,1
000693 c008      	RJMP _0x200007D
000694 940e 0c77 	CALL SUBOPT_0x30
000696 940e 0c6b 	CALL SUBOPT_0x2E
000698 9614      	ADIW R26,4
000699 940e 0f50 	CALL __GETD1P
00069b c00f      	RJMP _0x2000110
                 _0x200007D:
00069c ff02      	SBRS R16,2
00069d c007      	RJMP _0x200007F
00069e 940e 0c77 	CALL SUBOPT_0x30
0006a0 940e 0c86 	CALL SUBOPT_0x33
0006a2 940e 0eeb 	CALL __CWD1
0006a4 c006      	RJMP _0x2000110
                 _0x200007F:
0006a5 940e 0c77 	CALL SUBOPT_0x30
0006a7 940e 0c86 	CALL SUBOPT_0x33
0006a9 2766      	CLR  R22
0006aa 2777      	CLR  R23
                 _0x2000110:
                +
0006ab 87ea     +STD Y + 10 , R30
0006ac 87fb     +STD Y + 10 + 1 , R31
0006ad 876c     +STD Y + 10 + 2 , R22
0006ae 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006af ff02      	SBRS R16,2
0006b0 c012      	RJMP _0x2000081
0006b1 85ad      	LDD  R26,Y+13
0006b2 23aa      	TST  R26
0006b3 f442      	BRPL _0x2000082
0006b4 940e 0c79 	CALL SUBOPT_0x31
0006b6 940e 0ed8 	CALL __ANEGD1
0006b8 940e 0c72 	CALL SUBOPT_0x2F
0006ba e2ed      	LDI  R30,LOW(45)
0006bb 8bed      	STD  Y+21,R30
                 _0x2000082:
0006bc 89ed      	LDD  R30,Y+21
0006bd 30e0      	CPI  R30,0
0006be f019      	BREQ _0x2000083
0006bf 5f1f      	SUBI R17,-LOW(1)
0006c0 5f4f      	SUBI R20,-LOW(1)
0006c1 c001      	RJMP _0x2000084
                 _0x2000083:
0006c2 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
0006c3 2f34      	MOV  R19,R20
                 _0x200006D:
0006c4 fd00      	SBRC R16,0
0006c5 c014      	RJMP _0x2000085
                 _0x2000086:
0006c6 1715      	CP   R17,R21
0006c7 f410      	BRSH _0x2000089
0006c8 1735      	CP   R19,R21
0006c9 f008      	BRLO _0x200008A
                 _0x2000089:
0006ca c00f      	RJMP _0x2000088
                 _0x200008A:
0006cb ff07      	SBRS R16,7
0006cc c008      	RJMP _0x200008B
0006cd ff02      	SBRS R16,2
0006ce c004      	RJMP _0x200008C
0006cf 7f0b      	ANDI R16,LOW(251)
0006d0 892d      	LDD  R18,Y+21
0006d1 5011      	SUBI R17,LOW(1)
0006d2 c001      	RJMP _0x200008D
                 _0x200008C:
0006d3 e320      	LDI  R18,LOW(48)
                 _0x200008D:
0006d4 c001      	RJMP _0x200008E
                 _0x200008B:
0006d5 e220      	LDI  R18,LOW(32)
                 _0x200008E:
0006d6 940e 0c4c 	CALL SUBOPT_0x2A
0006d8 5051      	SUBI R21,LOW(1)
0006d9 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0006da 1714      	CP   R17,R20
0006db f490      	BRSH _0x2000091
0006dc 6100      	ORI  R16,LOW(16)
0006dd ff02      	SBRS R16,2
0006de c006      	RJMP _0x2000092
0006df 940e 0c90 	CALL SUBOPT_0x35
0006e1 f009      	BREQ _0x2000093
0006e2 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0006e3 5011      	SUBI R17,LOW(1)
0006e4 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0006e5 e3e0      	LDI  R30,LOW(48)
0006e6 93ea      	ST   -Y,R30
0006e7 940e 0c63 	CALL SUBOPT_0x2D
0006e9 3050      	CPI  R21,0
0006ea f009      	BREQ _0x2000094
0006eb 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0006ec 5041      	SUBI R20,LOW(1)
0006ed cfec      	RJMP _0x200008F
                 _0x2000091:
0006ee 2f31      	MOV  R19,R17
0006ef 89ec      	LDD  R30,Y+20
0006f0 30e0      	CPI  R30,0
0006f1 f4b9      	BRNE _0x2000095
                 _0x2000096:
0006f2 3030      	CPI  R19,0
0006f3 f0a1      	BREQ _0x2000098
0006f4 ff03      	SBRS R16,3
0006f5 c006      	RJMP _0x2000099
0006f6 85ee      	LDD  R30,Y+14
0006f7 85ff      	LDD  R31,Y+14+1
0006f8 9125      	LPM  R18,Z+
0006f9 87ee      	STD  Y+14,R30
0006fa 87ff      	STD  Y+14+1,R31
0006fb c005      	RJMP _0x200009A
                 _0x2000099:
0006fc 85ae      	LDD  R26,Y+14
0006fd 85bf      	LDD  R27,Y+14+1
0006fe 912d      	LD   R18,X+
0006ff 87ae      	STD  Y+14,R26
000700 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000701 940e 0c4c 	CALL SUBOPT_0x2A
000703 3050      	CPI  R21,0
000704 f009      	BREQ _0x200009B
000705 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000706 5031      	SUBI R19,LOW(1)
000707 cfea      	RJMP _0x2000096
                 _0x2000098:
000708 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000709 940e 0ca4 	CALL SUBOPT_0x36
00070b 940e 0f0b 	CALL __DIVD21U
00070d 2f2e      	MOV  R18,R30
00070e 302a      	CPI  R18,10
00070f f030      	BRLO _0x20000A0
000710 ff03      	SBRS R16,3
000711 c002      	RJMP _0x20000A1
000712 5c29      	SUBI R18,-LOW(55)
000713 c001      	RJMP _0x20000A2
                 _0x20000A1:
000714 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000715 c001      	RJMP _0x20000A3
                 _0x20000A0:
000716 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000717 fd04      	SBRC R16,4
000718 c021      	RJMP _0x20000A5
000719 3321      	CPI  R18,49
00071a f460      	BRSH _0x20000A7
                +
00071b 89a8     +LDD R26 , Y + 16
00071c 89b9     +LDD R27 , Y + 16 + 1
00071d 898a     +LDD R24 , Y + 16 + 2
00071e 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00071f 30a1     +CPI R26 , LOW ( 0x1 )
000720 e0e0     +LDI R30 , HIGH ( 0x1 )
000721 07be     +CPC R27 , R30
000722 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000723 078e     +CPC R24 , R30
000724 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000725 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000726 f409      	BRNE _0x20000A6
                 _0x20000A7:
000727 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000728 1743      	CP   R20,R19
000729 f440      	BRSH _0x2000111
00072a 1753      	CP   R21,R19
00072b f010      	BRLO _0x20000AC
00072c ff00      	SBRS R16,0
00072d c001      	RJMP _0x20000AD
                 _0x20000AC:
00072e c010      	RJMP _0x20000AB
                 _0x20000AD:
00072f e220      	LDI  R18,LOW(32)
000730 ff07      	SBRS R16,7
000731 c008      	RJMP _0x20000AE
                 _0x2000111:
000732 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000733 6100      	ORI  R16,LOW(16)
000734 ff02      	SBRS R16,2
000735 c004      	RJMP _0x20000AF
000736 940e 0c90 	CALL SUBOPT_0x35
000738 f009      	BREQ _0x20000B0
000739 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
00073a 940e 0c4c 	CALL SUBOPT_0x2A
00073c 3050      	CPI  R21,0
00073d f009      	BREQ _0x20000B1
00073e 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
00073f 5031      	SUBI R19,LOW(1)
000740 940e 0ca4 	CALL SUBOPT_0x36
000742 940e 0f3c 	CALL __MODD21U
000744 940e 0c72 	CALL SUBOPT_0x2F
000746 89ec      	LDD  R30,Y+20
                +
000747 89a8     +LDD R26 , Y + 16
000748 89b9     +LDD R27 , Y + 16 + 1
000749 898a     +LDD R24 , Y + 16 + 2
00074a 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00074b 27ff      	CLR  R31
00074c 2766      	CLR  R22
00074d 2777      	CLR  R23
00074e 940e 0f0b 	CALL __DIVD21U
000750 940e 0c8b 	CALL SUBOPT_0x34
                +
000752 89e8     +LDD R30 , Y + 16
000753 89f9     +LDD R31 , Y + 16 + 1
000754 896a     +LDD R22 , Y + 16 + 2
000755 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000756 940e 0f7e 	CALL __CPD10
000758 f009      	BREQ _0x200009F
000759 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
00075a ff00      	SBRS R16,0
00075b c008      	RJMP _0x20000B2
                 _0x20000B3:
00075c 3050      	CPI  R21,0
00075d f031      	BREQ _0x20000B5
00075e 5051      	SUBI R21,LOW(1)
00075f e2e0      	LDI  R30,LOW(32)
000760 93ea      	ST   -Y,R30
000761 940e 0c63 	CALL SUBOPT_0x2D
000763 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000764 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000765 ce06      	RJMP _0x2000030
                 _0x2000032:
000766 81ae      	LDD  R26,Y+6
000767 81bf      	LDD  R27,Y+6+1
000768 940e 0f4c 	CALL __GETW1P
00076a 940e 0f89 	CALL __LOADLOCR6
00076c 96ef      	ADIW R28,63
00076d 966f      	ADIW R28,31
00076e 9508      	RET
                 _sprintf:
00076f 92ff      	PUSH R15
000770 2ef8      	MOV  R15,R24
000771 9726      	SBIW R28,6
000772 940e 0f84 	CALL __SAVELOCR4
000774 940e 0cad 	CALL SUBOPT_0x37
000776 9730      	SBIW R30,0
000777 f419      	BRNE _0x20000B7
000778 efef      	LDI  R30,LOW(65535)
000779 efff      	LDI  R31,HIGH(65535)
00077a c023      	RJMP _0x20A0008
                 _0x20000B7:
00077b 01de      	MOVW R26,R28
00077c 9616      	ADIW R26,6
00077d 940e 0ed0 	CALL __ADDW2R15
00077f 018d      	MOVW R16,R26
000780 940e 0cad 	CALL SUBOPT_0x37
000782 83ee      	STD  Y+6,R30
000783 83ff      	STD  Y+6+1,R31
000784 e0e0      	LDI  R30,LOW(0)
000785 87e8      	STD  Y+8,R30
000786 87e9      	STD  Y+8+1,R30
000787 01de      	MOVW R26,R28
000788 961a      	ADIW R26,10
000789 940e 0cb4 	CALL SUBOPT_0x38
00078b 93fa      	ST   -Y,R31
00078c 93ea      	ST   -Y,R30
00078d 931a      	ST   -Y,R17
00078e 930a      	ST   -Y,R16
00078f e4ea      	LDI  R30,LOW(_put_buff_G100)
000790 e0f4      	LDI  R31,HIGH(_put_buff_G100)
000791 93fa      	ST   -Y,R31
000792 93ea      	ST   -Y,R30
000793 01fe      	MOVW R30,R28
000794 963a      	ADIW R30,10
000795 93fa      	ST   -Y,R31
000796 93ea      	ST   -Y,R30
000797 ddbb      	RCALL __print_G100
000798 019f      	MOVW R18,R30
000799 81ae      	LDD  R26,Y+6
00079a 81bf      	LDD  R27,Y+6+1
00079b e0e0      	LDI  R30,LOW(0)
00079c 93ec      	ST   X,R30
00079d 01f9      	MOVW R30,R18
                 _0x20A0008:
00079e 940e 0f8b 	CALL __LOADLOCR4
0007a0 962a      	ADIW R28,10
0007a1 90ff      	POP  R15
0007a2 9508      	RET
                 _get_buff_G100:
0007a3 931a      	ST   -Y,R17
0007a4 81a9      	LDD  R26,Y+1
0007a5 81ba      	LDD  R27,Y+1+1
0007a6 e0e0      	LDI  R30,LOW(0)
0007a7 93ec      	ST   X,R30
0007a8 81ab      	LDD  R26,Y+3
0007a9 81bc      	LDD  R27,Y+3+1
0007aa 91ec      	LD   R30,X
0007ab 2f1e      	MOV  R17,R30
0007ac 30e0      	CPI  R30,0
0007ad f019      	BREQ _0x20000BF
0007ae e0e0      	LDI  R30,LOW(0)
0007af 93ec      	ST   X,R30
0007b0 c016      	RJMP _0x20000C0
                 _0x20000BF:
0007b1 81a9      	LDD  R26,Y+1
0007b2 81ba      	LDD  R27,Y+1+1
0007b3 9611      	ADIW R26,1
0007b4 940e 0f4c 	CALL __GETW1P
0007b6 9730      	SBIW R30,0
0007b7 f071      	BREQ _0x20000C1
0007b8 81e9      	LDD  R30,Y+1
0007b9 81fa      	LDD  R31,Y+1+1
0007ba 81a1      	LDD  R26,Z+1
0007bb 81b2      	LDD  R27,Z+2
0007bc 91ec      	LD   R30,X
0007bd 2f1e      	MOV  R17,R30
0007be 30e0      	CPI  R30,0
0007bf f029      	BREQ _0x20000C2
0007c0 81a9      	LDD  R26,Y+1
0007c1 81ba      	LDD  R27,Y+1+1
0007c2 9611      	ADIW R26,1
0007c3 940e 0bee 	CALL SUBOPT_0x1C
                 _0x20000C2:
0007c5 c001      	RJMP _0x20000C3
                 _0x20000C1:
0007c6 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
0007c7 2fe1      	MOV  R30,R17
0007c8 8118      	LDD  R17,Y+0
                 _0x20A0007:
0007c9 9625      	ADIW R28,5
0007ca 9508      	RET
                 __scanf_G100:
0007cb 9725      	SBIW R28,5
0007cc 940e 0f82 	CALL __SAVELOCR6
0007ce e0e0      	LDI  R30,LOW(0)
0007cf e0f0      	LDI  R31,HIGH(0)
0007d0 87e8      	STD  Y+8,R30
0007d1 87f9      	STD  Y+8+1,R31
0007d2 2f4e      	MOV  R20,R30
                 _0x20000C4:
0007d3 89e9      	LDD  R30,Y+17
0007d4 89fa      	LDD  R31,Y+17+1
0007d5 9631      	ADIW R30,1
0007d6 8be9      	STD  Y+17,R30
0007d7 8bfa      	STD  Y+17+1,R31
0007d8 9731      	SBIW R30,1
0007d9 91e4      	LPM  R30,Z
0007da 2f3e      	MOV  R19,R30
0007db 30e0      	CPI  R30,0
0007dc f411      	BRNE PC+3
0007dd 940c 08f8 	JMP _0x20000C6
0007df 940e 0cb9 	CALL SUBOPT_0x39
0007e1 f0c1      	BREQ _0x20000C7
                 _0x20000C8:
0007e2 b7ed      	IN   R30,SPL
0007e3 b7fe      	IN   R31,SPH
0007e4 93fa      	ST   -Y,R31
0007e5 93ea      	ST   -Y,R30
0007e6 934f      	PUSH R20
0007e7 940e 0cbe 	CALL SUBOPT_0x3A
0007e9 914f      	POP  R20
0007ea 2f3e      	MOV  R19,R30
0007eb 30e0      	CPI  R30,0
0007ec f019      	BREQ _0x20000CB
0007ed 940e 0cb9 	CALL SUBOPT_0x39
0007ef f409      	BRNE _0x20000CC
                 _0x20000CB:
0007f0 c007      	RJMP _0x20000CA
                 _0x20000CC:
0007f1 940e 0cc6 	CALL SUBOPT_0x3B
0007f3 f41c      	BRGE _0x20000CD
0007f4 efef      	LDI  R30,LOW(65535)
0007f5 efff      	LDI  R31,HIGH(65535)
0007f6 c103      	RJMP _0x20A0005
                 _0x20000CD:
0007f7 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0007f8 2f43      	MOV  R20,R19
0007f9 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0007fa 3235      	CPI  R19,37
0007fb f011      	BREQ PC+3
0007fc 940c 08df 	JMP _0x20000CF
0007fe e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0007ff 89e9      	LDD  R30,Y+17
000800 89fa      	LDD  R31,Y+17+1
000801 9135      	LPM  R19,Z+
000802 8be9      	STD  Y+17,R30
000803 8bfa      	STD  Y+17+1,R31
000804 3330      	CPI  R19,48
000805 f010      	BRLO _0x20000D4
000806 333a      	CPI  R19,58
000807 f008      	BRLO _0x20000D3
                 _0x20000D4:
000808 c007      	RJMP _0x20000D2
                 _0x20000D3:
000809 e0aa      	LDI  R26,LOW(10)
00080a 9f5a      	MUL  R21,R26
00080b 2d50      	MOV  R21,R0
00080c 2fe3      	MOV  R30,R19
00080d 53e0      	SUBI R30,LOW(48)
00080e 0f5e      	ADD  R21,R30
00080f cfef      	RJMP _0x20000D0
                 _0x20000D2:
000810 3030      	CPI  R19,0
000811 f409      	BRNE _0x20000D6
000812 c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000813 b7ed      	IN   R30,SPL
000814 b7fe      	IN   R31,SPH
000815 93fa      	ST   -Y,R31
000816 93ea      	ST   -Y,R30
000817 934f      	PUSH R20
000818 940e 0cbe 	CALL SUBOPT_0x3A
00081a 914f      	POP  R20
00081b 2f2e      	MOV  R18,R30
00081c 93ea      	ST   -Y,R30
00081d 940e 0a0e 	CALL _isspace
00081f 30e0      	CPI  R30,0
000820 f039      	BREQ _0x20000D9
000821 940e 0cc6 	CALL SUBOPT_0x3B
000823 f41c      	BRGE _0x20000DA
000824 efef      	LDI  R30,LOW(65535)
000825 efff      	LDI  R31,HIGH(65535)
000826 c0d3      	RJMP _0x20A0005
                 _0x20000DA:
000827 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
000828 3020      	CPI  R18,0
000829 f409      	BRNE _0x20000DB
00082a c0c4      	RJMP _0x20000DC
                 _0x20000DB:
00082b 2f42      	MOV  R20,R18
00082c 3050      	CPI  R21,0
00082d f409      	BRNE _0x20000DD
00082e ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
00082f 2fe3      	MOV  R30,R19
000830 36e3      	CPI  R30,LOW(0x63)
000831 f499      	BRNE _0x20000E1
000832 940e 0ccb 	CALL SUBOPT_0x3C
000834 b7ed      	IN   R30,SPL
000835 b7fe      	IN   R31,SPH
000836 93fa      	ST   -Y,R31
000837 93ea      	ST   -Y,R30
000838 934f      	PUSH R20
000839 940e 0cbe 	CALL SUBOPT_0x3A
00083b 914f      	POP  R20
00083c 01d8      	MOVW R26,R16
00083d 93ec      	ST   X,R30
00083e 940e 0cc6 	CALL SUBOPT_0x3B
000840 f41c      	BRGE _0x20000E2
000841 efef      	LDI  R30,LOW(65535)
000842 efff      	LDI  R31,HIGH(65535)
000843 c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000844 c097      	RJMP _0x20000E0
                 _0x20000E1:
000845 37e3      	CPI  R30,LOW(0x73)
000846 f541      	BRNE _0x20000EB
000847 940e 0ccb 	CALL SUBOPT_0x3C
                 _0x20000E4:
000849 2fe5      	MOV  R30,R21
00084a 5051      	SUBI R21,1
00084b 30e0      	CPI  R30,0
00084c f0f1      	BREQ _0x20000E6
00084d b7ed      	IN   R30,SPL
00084e b7fe      	IN   R31,SPH
00084f 93fa      	ST   -Y,R31
000850 93ea      	ST   -Y,R30
000851 934f      	PUSH R20
000852 940e 0cbe 	CALL SUBOPT_0x3A
000854 914f      	POP  R20
000855 2f3e      	MOV  R19,R30
000856 30e0      	CPI  R30,0
000857 f019      	BREQ _0x20000E8
000858 940e 0cb9 	CALL SUBOPT_0x39
00085a f039      	BREQ _0x20000E7
                 _0x20000E8:
00085b 940e 0cc6 	CALL SUBOPT_0x3B
00085d f41c      	BRGE _0x20000EA
00085e efef      	LDI  R30,LOW(65535)
00085f efff      	LDI  R31,HIGH(65535)
000860 c099      	RJMP _0x20A0005
                 _0x20000EA:
000861 c009      	RJMP _0x20000E6
                 _0x20000E7:
000862 931f      	PUSH R17
000863 930f      	PUSH R16
                +
000864 5f0f     +SUBI R16 , LOW ( - 1 )
000865 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000866 2fe3      	MOV  R30,R19
000867 91af      	POP  R26
000868 91bf      	POP  R27
000869 93ec      	ST   X,R30
00086a cfde      	RJMP _0x20000E4
                 _0x20000E6:
00086b 01d8      	MOVW R26,R16
00086c e0e0      	LDI  R30,LOW(0)
00086d 93ec      	ST   X,R30
00086e c06d      	RJMP _0x20000E0
                 _0x20000EB:
00086f e0e1      	LDI  R30,LOW(1)
000870 87ea      	STD  Y+10,R30
000871 2fe3      	MOV  R30,R19
000872 36e4      	CPI  R30,LOW(0x64)
000873 f011      	BREQ _0x20000F0
000874 36e9      	CPI  R30,LOW(0x69)
000875 f419      	BRNE _0x20000F1
                 _0x20000F0:
000876 e0e0      	LDI  R30,LOW(0)
000877 87ea      	STD  Y+10,R30
000878 c002      	RJMP _0x20000F2
                 _0x20000F1:
000879 37e5      	CPI  R30,LOW(0x75)
00087a f411      	BRNE _0x20000F3
                 _0x20000F2:
00087b e02a      	LDI  R18,LOW(10)
00087c c008      	RJMP _0x20000EE
                 _0x20000F3:
00087d 37e8      	CPI  R30,LOW(0x78)
00087e f411      	BRNE _0x20000F4
00087f e120      	LDI  R18,LOW(16)
000880 c004      	RJMP _0x20000EE
                 _0x20000F4:
000881 32e5      	CPI  R30,LOW(0x25)
000882 f409      	BRNE _0x20000F7
000883 c05b      	RJMP _0x20000F6
                 _0x20000F7:
000884 c073      	RJMP _0x20A0006
                 _0x20000EE:
000885 e0e0      	LDI  R30,LOW(0)
000886 83ee      	STD  Y+6,R30
000887 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000888 2fe5      	MOV  R30,R21
000889 5051      	SUBI R21,1
00088a 30e0      	CPI  R30,0
00088b f411      	BRNE PC+3
00088c 940c 08cf 	JMP _0x20000FA
00088e b7ed      	IN   R30,SPL
00088f b7fe      	IN   R31,SPH
000890 93fa      	ST   -Y,R31
000891 93ea      	ST   -Y,R30
000892 934f      	PUSH R20
000893 940e 0cbe 	CALL SUBOPT_0x3A
000895 914f      	POP  R20
000896 2f3e      	MOV  R19,R30
000897 32e1      	CPI  R30,LOW(0x21)
000898 f438      	BRSH _0x20000FB
000899 940e 0cc6 	CALL SUBOPT_0x3B
00089b f41c      	BRGE _0x20000FC
00089c efef      	LDI  R30,LOW(65535)
00089d efff      	LDI  R31,HIGH(65535)
00089e c05b      	RJMP _0x20A0005
                 _0x20000FC:
00089f c017      	RJMP _0x20000FD
                 _0x20000FB:
0008a0 85ea      	LDD  R30,Y+10
0008a1 30e0      	CPI  R30,0
0008a2 f439      	BRNE _0x20000FE
0008a3 323d      	CPI  R19,45
0008a4 f419      	BRNE _0x20000FF
0008a5 efef      	LDI  R30,LOW(255)
0008a6 87ea      	STD  Y+10,R30
0008a7 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
0008a8 e0e1      	LDI  R30,LOW(1)
0008a9 87ea      	STD  Y+10,R30
                 _0x20000FE:
0008aa 3120      	CPI  R18,16
0008ab f431      	BRNE _0x2000101
0008ac 933a      	ST   -Y,R19
0008ad 940e 0a18 	CALL _isxdigit
0008af 30e0      	CPI  R30,0
0008b0 f031      	BREQ _0x20000FD
0008b1 c007      	RJMP _0x2000103
                 _0x2000101:
0008b2 933a      	ST   -Y,R19
0008b3 940e 0a06 	CALL _isdigit
0008b5 30e0      	CPI  R30,0
0008b6 f411      	BRNE _0x2000104
                 _0x20000FD:
0008b7 2f43      	MOV  R20,R19
0008b8 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
0008b9 3631      	CPI  R19,97
0008ba f010      	BRLO _0x2000105
0008bb 5537      	SUBI R19,LOW(87)
0008bc c005      	RJMP _0x2000106
                 _0x2000105:
0008bd 3431      	CPI  R19,65
0008be f010      	BRLO _0x2000107
0008bf 5337      	SUBI R19,LOW(55)
0008c0 c001      	RJMP _0x2000108
                 _0x2000107:
0008c1 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
0008c2 2fe2      	MOV  R30,R18
0008c3 81ae      	LDD  R26,Y+6
0008c4 81bf      	LDD  R27,Y+6+1
0008c5 e0f0      	LDI  R31,0
0008c6 940e 0ef0 	CALL __MULW12U
0008c8 01df      	MOVW R26,R30
0008c9 2fe3      	MOV  R30,R19
0008ca 940e 0b71 	CALL SUBOPT_0x10
0008cc 83ee      	STD  Y+6,R30
0008cd 83ff      	STD  Y+6+1,R31
0008ce cfb9      	RJMP _0x20000F8
                 _0x20000FA:
0008cf 940e 0ccb 	CALL SUBOPT_0x3C
0008d1 85ea      	LDD  R30,Y+10
0008d2 81ae      	LDD  R26,Y+6
0008d3 81bf      	LDD  R27,Y+6+1
0008d4 e0f0      	LDI  R31,0
0008d5 fde7      	SBRC R30,7
0008d6 efff      	SER  R31
0008d7 940e 0ef0 	CALL __MULW12U
0008d9 01d8      	MOVW R26,R16
0008da 93ed      	ST   X+,R30
0008db 93fc      	ST   X,R31
                 _0x20000E0:
0008dc 940e 0c46 	CALL SUBOPT_0x29
0008de c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
0008df b7ed      	IN   R30,SPL
0008e0 b7fe      	IN   R31,SPH
0008e1 93fa      	ST   -Y,R31
0008e2 93ea      	ST   -Y,R30
0008e3 934f      	PUSH R20
0008e4 940e 0cbe 	CALL SUBOPT_0x3A
0008e6 914f      	POP  R20
0008e7 17e3      	CP   R30,R19
0008e8 f071      	BREQ _0x200010A
0008e9 940e 0cc6 	CALL SUBOPT_0x3B
0008eb f41c      	BRGE _0x200010B
0008ec efef      	LDI  R30,LOW(65535)
0008ed efff      	LDI  R31,HIGH(65535)
0008ee c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
0008ef 85e8      	LDD  R30,Y+8
0008f0 85f9      	LDD  R31,Y+8+1
0008f1 9730      	SBIW R30,0
0008f2 f419      	BRNE _0x200010C
0008f3 efef      	LDI  R30,LOW(65535)
0008f4 efff      	LDI  R31,HIGH(65535)
0008f5 c004      	RJMP _0x20A0005
                 _0x200010C:
0008f6 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
0008f7 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
0008f8 85e8      	LDD  R30,Y+8
0008f9 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
0008fa 940e 0f89 	CALL __LOADLOCR6
0008fc 9663      	ADIW R28,19
0008fd 9508      	RET
                 _sscanf:
0008fe 92ff      	PUSH R15
0008ff 2ef8      	MOV  R15,R24
000900 9723      	SBIW R28,3
000901 931a      	ST   -Y,R17
000902 930a      	ST   -Y,R16
000903 01de      	MOVW R26,R28
000904 9617      	ADIW R26,7
000905 940e 0cb4 	CALL SUBOPT_0x38
000907 9730      	SBIW R30,0
000908 f419      	BRNE _0x200010D
000909 efef      	LDI  R30,LOW(65535)
00090a efff      	LDI  R31,HIGH(65535)
00090b c01c      	RJMP _0x20A0004
                 _0x200010D:
00090c 01de      	MOVW R26,R28
00090d 9611      	ADIW R26,1
00090e 940e 0ed0 	CALL __ADDW2R15
000910 018d      	MOVW R16,R26
000911 01de      	MOVW R26,R28
000912 9617      	ADIW R26,7
000913 940e 0cb4 	CALL SUBOPT_0x38
000915 83eb      	STD  Y+3,R30
000916 83fc      	STD  Y+3+1,R31
000917 01de      	MOVW R26,R28
000918 9615      	ADIW R26,5
000919 940e 0cb4 	CALL SUBOPT_0x38
00091b 93fa      	ST   -Y,R31
00091c 93ea      	ST   -Y,R30
00091d 931a      	ST   -Y,R17
00091e 930a      	ST   -Y,R16
00091f eae3      	LDI  R30,LOW(_get_buff_G100)
000920 e0f7      	LDI  R31,HIGH(_get_buff_G100)
000921 93fa      	ST   -Y,R31
000922 93ea      	ST   -Y,R30
000923 01fe      	MOVW R30,R28
000924 9638      	ADIW R30,8
000925 93fa      	ST   -Y,R31
000926 93ea      	ST   -Y,R30
000927 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000928 8119      	LDD  R17,Y+1
000929 8108      	LDD  R16,Y+0
00092a 9625      	ADIW R28,5
00092b 90ff      	POP  R15
00092c 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
00092d 817b         ldd  r23,y+3
00092e 816a         ldd  r22,y+2
00092f 81f9         ldd  r31,y+1
000930 81e8         ld   r30,y
000931 fb77         bst  r23,7
000932 0f77         lsl  r23
000933 fd67         sbrc r22,7
000934 6071         sbr  r23,1
000935 2f97         mov  r25,r23
000936 579e         subi r25,0x7e
000937 f081         breq __ftrunc0
000938 f078         brcs __ftrunc0
000939 3198         cpi  r25,24
00093a f490         brsh __ftrunc1
00093b 27aa         clr  r26
00093c 27bb         clr  r27
00093d 2788         clr  r24
                 __ftrunc2:
00093e 9408         sec
00093f 9587         ror  r24
000940 95b7         ror  r27
000941 95a7         ror  r26
000942 959a         dec  r25
000943 f7d1         brne __ftrunc2
000944 23ea         and  r30,r26
000945 23fb         and  r31,r27
000946 2368         and  r22,r24
000947 c005         rjmp __ftrunc1
                 __ftrunc0:
000948 94e8         clt
000949 2777         clr  r23
00094a 27ee         clr  r30
00094b 27ff         clr  r31
00094c 2766         clr  r22
                 __ftrunc1:
00094d 776f         cbr  r22,0x80
00094e 9576         lsr  r23
00094f f408         brcc __ftrunc3
000950 6860         sbr  r22,0x80
                 __ftrunc3:
000951 f977         bld  r23,7
000952 91a9         ld   r26,y+
000953 91b9         ld   r27,y+
000954 9189         ld   r24,y+
000955 9199         ld   r25,y+
000956 17ea         cp   r30,r26
000957 07fb         cpc  r31,r27
000958 0768         cpc  r22,r24
000959 0779         cpc  r23,r25
00095a fb97         bst  r25,7
00095b 9508         ret
                 _floor:
00095c 940e 0b57 	CALL SUBOPT_0xC
00095e 940e 0f6c 	CALL __PUTPARD1
000960 940e 092d 	CALL _ftrunc
000962 940e 0f65 	CALL __PUTD1S0
000964 f419          brne __floor1
                 __floor0:
000965 940e 0b57 	CALL SUBOPT_0xC
000967 c09c      	RJMP _0x20A0003
                 __floor1:
000968 f7e6          brtc __floor0
000969 940e 0b57 	CALL SUBOPT_0xC
                +
00096b e0a0     +LDI R26 , LOW ( 0x3F800000 )
00096c e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00096d e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00096e e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00096f 940e 0dc6 	CALL __SUBF12
000971 c092      	RJMP _0x20A0003
                 _sin:
000972 9724      	SBIW R28,4
000973 931a      	ST   -Y,R17
000974 e010      	LDI  R17,0
000975 940e 0cd6 	CALL SUBOPT_0x3D
                +
000977 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000978 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000979 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
00097a e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
00097b 940e 0e1d 	CALL __MULF12
00097d 940e 0cdb 	CALL SUBOPT_0x3E
00097f 940e 0ce0 	CALL SUBOPT_0x3F
000981 940e 0c36 	CALL SUBOPT_0x26
000983 940e 0cd6 	CALL SUBOPT_0x3D
000985 940e 0b3e 	CALL SUBOPT_0x9
000987 940e 0cdb 	CALL SUBOPT_0x3E
000989 940e 0ce5 	CALL SUBOPT_0x40
00098b 940e 0eb0 	CALL __CMPF12
00098d f009      	BREQ PC+2
00098e f410      	BRCC PC+3
00098f 940c 099c 	JMP  _0x2020017
000991 940e 0ce0 	CALL SUBOPT_0x3F
                +
000993 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000994 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000995 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000996 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000997 940e 0dc6 	CALL __SUBF12
000999 940e 0cdb 	CALL SUBOPT_0x3E
00099b e011      	LDI  R17,LOW(1)
                 _0x2020017:
00099c 940e 0cd6 	CALL SUBOPT_0x3D
                +
00099e e0e0     +LDI R30 , LOW ( 0x3E800000 )
00099f e0f0     +LDI R31 , HIGH ( 0x3E800000 )
0009a0 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
0009a1 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
0009a2 940e 0eb0 	CALL __CMPF12
0009a4 f009      	BREQ PC+2
0009a5 f410      	BRCC PC+3
0009a6 940c 09ae 	JMP  _0x2020018
0009a8 940e 0ce5 	CALL SUBOPT_0x40
0009aa 940e 0dc6 	CALL __SUBF12
0009ac 940e 0cdb 	CALL SUBOPT_0x3E
                 _0x2020018:
0009ae 3010      	CPI  R17,0
0009af f031      	BREQ _0x2020019
0009b0 940e 0ce0 	CALL SUBOPT_0x3F
0009b2 940e 0d27 	CALL __ANEGF1
0009b4 940e 0cdb 	CALL SUBOPT_0x3E
                 _0x2020019:
0009b6 940e 0ce0 	CALL SUBOPT_0x3F
0009b8 940e 0cd6 	CALL SUBOPT_0x3D
0009ba 940e 0e1d 	CALL __MULF12
                +
0009bc 83e9     +STD Y + 1 , R30
0009bd 83fa     +STD Y + 1 + 1 , R31
0009be 836b     +STD Y + 1 + 2 , R22
0009bf 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
0009c0 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
0009c1 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
0009c2 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
0009c3 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
0009c4 940e 0e1d 	CALL __MULF12
0009c6 01df      	MOVW R26,R30
0009c7 01cb      	MOVW R24,R22
                +
0009c8 e1ed     +LDI R30 , LOW ( 0x422DE51D )
0009c9 eef5     +LDI R31 , HIGH ( 0x422DE51D )
0009ca e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
0009cb e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
0009cc 940e 0b3e 	CALL SUBOPT_0x9
0009ce 940e 0ceb 	CALL SUBOPT_0x41
                +
0009d0 e4ac     +LDI R26 , LOW ( 0x4104534C )
0009d1 e5b3     +LDI R27 , HIGH ( 0x4104534C )
0009d2 e084     +LDI R24 , BYTE3 ( 0x4104534C )
0009d3 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
0009d4 940e 0dcd 	CALL __ADDF12
0009d6 940e 0cd6 	CALL SUBOPT_0x3D
0009d8 940e 0e1d 	CALL __MULF12
0009da 937f      	PUSH R23
0009db 936f      	PUSH R22
0009dc 93ff      	PUSH R31
0009dd 93ef      	PUSH R30
                +
0009de 81e9     +LDD R30 , Y + 1
0009df 81fa     +LDD R31 , Y + 1 + 1
0009e0 816b     +LDD R22 , Y + 1 + 2
0009e1 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
0009e2 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
0009e3 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
0009e4 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
0009e5 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
0009e6 940e 0dcd 	CALL __ADDF12
0009e8 940e 0ceb 	CALL SUBOPT_0x41
                +
0009ea e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
0009eb e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
0009ec ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
0009ed e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
0009ee 940e 0dcd 	CALL __ADDF12
0009f0 91af      	POP  R26
0009f1 91bf      	POP  R27
0009f2 918f      	POP  R24
0009f3 919f      	POP  R25
0009f4 940e 0e6b 	CALL __DIVF21
0009f6 8118      	LDD  R17,Y+0
0009f7 9629      	ADIW R28,9
0009f8 9508      	RET
                 _cos:
0009f9 940e 0f60 	CALL __GETD2S0
                +
0009fb edeb     +LDI R30 , LOW ( 0x3FC90FDB )
0009fc e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
0009fd ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
0009fe e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
0009ff 940e 0dc6 	CALL __SUBF12
000a01 940e 0f6c 	CALL __PUTPARD1
000a03 df6e      	RCALL _sin
                 _0x20A0003:
000a04 9624      	ADIW R28,4
000a05 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000a06 e0e1          ldi  r30,1
000a07 91f9          ld   r31,y+
000a08 33f0          cpi  r31,'0'
000a09 f010          brlo isdigit0
000a0a 33fa          cpi  r31,'9'+1
000a0b f008          brlo isdigit1
                 isdigit0:
000a0c 27ee          clr  r30
                 isdigit1:
000a0d 9508          ret
                 _isspace:
000a0e e0e1          ldi  r30,1
000a0f 91f9          ld   r31,y+
000a10 32f0          cpi  r31,' '
000a11 f029          breq isspace1
000a12 30f9          cpi  r31,9
000a13 f010          brlo isspace0
000a14 30fe          cpi  r31,13+1
000a15 f008          brlo isspace1
                 isspace0:
000a16 27ee          clr  r30
                 isspace1:
000a17 9508          ret
                 _isxdigit:
000a18 e0e1          ldi  r30,1
000a19 91f9          ld   r31,y+
000a1a 53f0          subi r31,0x30
000a1b f040          brcs isxdigit0
000a1c 30fa          cpi  r31,10
000a1d f038          brcs isxdigit1
000a1e 75ff          andi r31,0x5f
000a1f 50f7          subi r31,7
000a20 30fa          cpi  r31,10
000a21 f010          brcs isxdigit0
000a22 31f0          cpi  r31,16
000a23 f008          brcs isxdigit1
                 isxdigit0:
000a24 27ee          clr  r30
                 isxdigit1:
000a25 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000a26 91e9          ld   r30,y+
000a27 91f9          ld   r31,y+
000a28 91a9          ld   r26,y+
000a29 91b9          ld   r27,y+
000a2a 01cd          movw r24,r26
                 strcpyf0:
000a2b 9005      	lpm  r0,z+
000a2c 920d          st   x+,r0
000a2d 2000          tst  r0
000a2e f7e1          brne strcpyf0
000a2f 01fc          movw r30,r24
000a30 9508          ret
                 _strlen:
000a31 91a9          ld   r26,y+
000a32 91b9          ld   r27,y+
000a33 27ee          clr  r30
000a34 27ff          clr  r31
                 strlen0:
000a35 916d          ld   r22,x+
000a36 2366          tst  r22
000a37 f011          breq strlen1
000a38 9631          adiw r30,1
000a39 cffb          rjmp strlen0
                 strlen1:
000a3a 9508          ret
                 _strlenf:
000a3b 27aa          clr  r26
000a3c 27bb          clr  r27
000a3d 91e9          ld   r30,y+
000a3e 91f9          ld   r31,y+
                 strlenf0:
000a3f 9005      	lpm  r0,z+
000a40 2000          tst  r0
000a41 f011          breq strlenf1
000a42 9611          adiw r26,1
000a43 cffb          rjmp strlenf0
                 strlenf1:
000a44 01fd          movw r30,r26
000a45 9508          ret
                 
                 	.CSEG
                 _ftoa:
000a46 9724      	SBIW R28,4
000a47 d0d4      	RCALL SUBOPT_0x4
000a48 e0e0      	LDI  R30,LOW(0)
000a49 83ea      	STD  Y+2,R30
000a4a e3ef      	LDI  R30,LOW(63)
000a4b 83eb      	STD  Y+3,R30
000a4c 931a      	ST   -Y,R17
000a4d 930a      	ST   -Y,R16
000a4e 85eb      	LDD  R30,Y+11
000a4f 85fc      	LDD  R31,Y+11+1
000a50 3fef      	CPI  R30,LOW(0xFFFF)
000a51 efaf      	LDI  R26,HIGH(0xFFFF)
000a52 07fa      	CPC  R31,R26
000a53 f429      	BRNE _0x208000D
000a54 d29d      	RCALL SUBOPT_0x42
                +
000a55 e4e4     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000a56 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000a57 d19c      	RCALL SUBOPT_0x1D
000a58 c085      	RJMP _0x20A0002
                 _0x208000D:
000a59 3fef      	CPI  R30,LOW(0x7FFF)
000a5a e7af      	LDI  R26,HIGH(0x7FFF)
000a5b 07fa      	CPC  R31,R26
000a5c f429      	BRNE _0x208000C
000a5d d294      	RCALL SUBOPT_0x42
                +
000a5e e4e5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000a5f e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000a60 d193      	RCALL SUBOPT_0x1D
000a61 c07c      	RJMP _0x20A0002
                 _0x208000C:
000a62 85ac      	LDD  R26,Y+12
000a63 23aa      	TST  R26
000a64 f452      	BRPL _0x208000F
                +
000a65 85e9     +LDD R30 , Y + 9
000a66 85fa     +LDD R31 , Y + 9 + 1
000a67 856b     +LDD R22 , Y + 9 + 2
000a68 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000a69 940e 0d27 	CALL __ANEGF1
000a6b d28b      	RCALL SUBOPT_0x43
000a6c d28f      	RCALL SUBOPT_0x44
000a6d e2ed      	LDI  R30,LOW(45)
000a6e 93ec      	ST   X,R30
                 _0x208000F:
000a6f 85a8      	LDD  R26,Y+8
000a70 30a7      	CPI  R26,LOW(0x7)
000a71 f010      	BRLO _0x2080010
000a72 e0e6      	LDI  R30,LOW(6)
000a73 87e8      	STD  Y+8,R30
                 _0x2080010:
000a74 8518      	LDD  R17,Y+8
                 _0x2080011:
000a75 2fe1      	MOV  R30,R17
000a76 5011      	SUBI R17,1
000a77 30e0      	CPI  R30,0
000a78 f021      	BREQ _0x2080013
000a79 d289      	RCALL SUBOPT_0x45
000a7a d1b4      	RCALL SUBOPT_0x25
000a7b d28c      	RCALL SUBOPT_0x46
000a7c cff8      	RJMP _0x2080011
                 _0x2080013:
000a7d d28f      	RCALL SUBOPT_0x47
000a7e 940e 0dcd 	CALL __ADDF12
000a80 d276      	RCALL SUBOPT_0x43
000a81 e010      	LDI  R17,LOW(0)
                +
000a82 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000a83 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000a84 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000a85 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000a86 d281      	RCALL SUBOPT_0x46
                 _0x2080014:
000a87 d285      	RCALL SUBOPT_0x47
000a88 940e 0eb0 	CALL __CMPF12
000a8a f060      	BRLO _0x2080016
000a8b d277      	RCALL SUBOPT_0x45
000a8c d18f      	RCALL SUBOPT_0x22
000a8d d27a      	RCALL SUBOPT_0x46
000a8e 5f1f      	SUBI R17,-LOW(1)
000a8f 3217      	CPI  R17,39
000a90 f028      	BRLO _0x2080017
000a91 d260      	RCALL SUBOPT_0x42
                +
000a92 e4e9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000a93 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000a94 d15f      	RCALL SUBOPT_0x1D
000a95 c048      	RJMP _0x20A0002
                 _0x2080017:
000a96 cff0      	RJMP _0x2080014
                 _0x2080016:
000a97 3010      	CPI  R17,0
000a98 f421      	BRNE _0x2080018
000a99 d262      	RCALL SUBOPT_0x44
000a9a e3e0      	LDI  R30,LOW(48)
000a9b 93ec      	ST   X,R30
000a9c c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000a9d 2fe1      	MOV  R30,R17
000a9e 5011      	SUBI R17,1
000a9f 30e0      	CPI  R30,0
000aa0 f0c9      	BREQ _0x208001C
000aa1 d261      	RCALL SUBOPT_0x45
000aa2 d18c      	RCALL SUBOPT_0x25
000aa3 d184      	RCALL SUBOPT_0x24
000aa4 d191      	RCALL SUBOPT_0x26
000aa5 d262      	RCALL SUBOPT_0x46
000aa6 d266      	RCALL SUBOPT_0x47
000aa7 940e 0e6b 	CALL __DIVF21
000aa9 940e 0d5a 	CALL __CFD1U
000aab 2f0e      	MOV  R16,R30
000aac d24f      	RCALL SUBOPT_0x44
000aad d193      	RCALL SUBOPT_0x28
000aae e0f0      	LDI  R31,0
000aaf d253      	RCALL SUBOPT_0x45
000ab0 940e 0eeb 	CALL __CWD1
000ab2 940e 0d93 	CALL __CDF1
000ab4 940e 0e1d 	CALL __MULF12
000ab6 d25f      	RCALL SUBOPT_0x48
000ab7 d086      	RCALL SUBOPT_0x9
000ab8 d23e      	RCALL SUBOPT_0x43
000ab9 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000aba 85e8      	LDD  R30,Y+8
000abb 30e0      	CPI  R30,0
000abc f0e9      	BREQ _0x20A0001
000abd d23e      	RCALL SUBOPT_0x44
000abe e2ee      	LDI  R30,LOW(46)
000abf 93ec      	ST   X,R30
                 _0x208001E:
000ac0 85e8      	LDD  R30,Y+8
000ac1 50e1      	SUBI R30,LOW(1)
000ac2 87e8      	STD  Y+8,R30
000ac3 5fef      	SUBI R30,-LOW(1)
000ac4 f0a9      	BREQ _0x2080020
000ac5 d250      	RCALL SUBOPT_0x48
000ac6 d155      	RCALL SUBOPT_0x22
000ac7 d22f      	RCALL SUBOPT_0x43
                +
000ac8 85e9     +LDD R30 , Y + 9
000ac9 85fa     +LDD R31 , Y + 9 + 1
000aca 856b     +LDD R22 , Y + 9 + 2
000acb 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000acc 940e 0d5a 	CALL __CFD1U
000ace 2f0e      	MOV  R16,R30
000acf d22c      	RCALL SUBOPT_0x44
000ad0 d170      	RCALL SUBOPT_0x28
000ad1 e0f0      	LDI  R31,0
000ad2 d243      	RCALL SUBOPT_0x48
000ad3 940e 0eeb 	CALL __CWD1
000ad5 940e 0d93 	CALL __CDF1
000ad7 d066      	RCALL SUBOPT_0x9
000ad8 d21e      	RCALL SUBOPT_0x43
000ad9 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000ada 81ae      	LDD  R26,Y+6
000adb 81bf      	LDD  R27,Y+6+1
000adc e0e0      	LDI  R30,LOW(0)
000add 93ec      	ST   X,R30
                 _0x20A0002:
000ade 8119      	LDD  R17,Y+1
000adf 8108      	LDD  R16,Y+0
000ae0 962d      	ADIW R28,13
000ae1 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000ae2 81aa      	LDD  R26,Y+2
000ae3 81bb      	LDD  R27,Y+2+1
000ae4 27ee      	CLR  R30
000ae5 0fa1      	ADD  R26,R17
000ae6 1fbe      	ADC  R27,R30
000ae7 91ec      	LD   R30,X
000ae8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000ae9 9728      	SBIW R28,8
000aea 940e 0f84 	CALL __SAVELOCR4
                +
000aec e020     +LDI R18 , LOW ( 0 )
000aed e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000aee 89e8      	LDD  R30,Y+16
000aef 83ec      	STD  Y+4,R30
000af0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000af1 83ed      	STD  Y+5,R30
000af2 85ee      	LDD  R30,Y+14
000af3 85ff      	LDD  R31,Y+14+1
000af4 940e 0ee0 	CALL __ASRW8
000af6 83ee      	STD  Y+6,R30
000af7 85ee      	LDD  R30,Y+14
000af8 83ef      	STD  Y+7,R30
000af9 85ec      	LDD  R30,Y+12
000afa 85fd      	LDD  R31,Y+12+1
000afb 940e 0ee0 	CALL __ASRW8
000afd 87e8      	STD  Y+8,R30
000afe 85ec      	LDD  R30,Y+12
000aff 87e9      	STD  Y+9,R30
000b00 e0e0      	LDI  R30,LOW(0)
000b01 87ea      	STD  Y+10,R30
000b02 87eb      	STD  Y+11,R30
000b03 01fe      	MOVW R30,R28
000b04 9634      	ADIW R30,4
000b05 93fa      	ST   -Y,R31
000b06 93ea      	ST   -Y,R30
000b07 e0e6      	LDI  R30,LOW(6)
000b08 e0f0      	LDI  R31,HIGH(6)
000b09 93fa      	ST   -Y,R31
000b0a 93ea      	ST   -Y,R30
000b0b 940e 0147 	CALL _CRC16
000b0d 018f      	MOVW R16,R30
000b0e 01f8      	MOVW R30,R16
000b0f 87ea      	STD  Y+10,R30
                +
000b10 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000b11 e020     +LDI R18 , LOW ( 0 )
000b12 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000b13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000b14 01de      	MOVW R26,R28
000b15 9614      	ADIW R26,4
000b16 0fa2      	ADD  R26,R18
000b17 1fb3      	ADC  R27,R19
000b18 91ec      	LD   R30,X
000b19 93ea      	ST   -Y,R30
000b1a 940c 0141 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000b1c e0e0      	LDI  R30,LOW(0)
000b1d 83e8      	ST   Y,R30
000b1e 83e9      	STD  Y+1,R30
000b1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000b20 85ae      	LDD  R26,Y+14
000b21 85bf      	LDD  R27,Y+14+1
000b22 940e 0f50 	CALL __GETD1P
000b24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000b25 85ac      	LDD  R26,Y+12
000b26 85bd      	LDD  R27,Y+12+1
000b27 940e 0f50 	CALL __GETD1P
000b29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
000b2a eea1     +LDI R26 , LOW ( 0x3E947AE1 )
000b2b e7ba     +LDI R27 , HIGH ( 0x3E947AE1 )
000b2c e984     +LDI R24 , BYTE3 ( 0x3E947AE1 )
000b2d e39e     +LDI R25 , BYTE4 ( 0x3E947AE1 )
                 	__GETD2N 0x3E947AE1
000b2e 940e 0e1d 	CALL __MULF12
000b30 01df      	MOVW R26,R30
000b31 01cb      	MOVW R24,R22
                +
000b32 e0e0     +LDI R30 , LOW ( 0x40800000 )
000b33 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000b34 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000b35 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000b36 940e 0e6b 	CALL __DIVF21
000b38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
000b39 83ec     +STD Y + 4 , R30
000b3a 83fd     +STD Y + 4 + 1 , R31
000b3b 836e     +STD Y + 4 + 2 , R22
000b3c 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000b3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000b3e 940e 0f71 	CALL __SWAPD12
000b40 940e 0dc6 	CALL __SUBF12
000b42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
000b43 81ec     +LDD R30 , Y + 4
000b44 81fd     +LDD R31 , Y + 4 + 1
000b45 816e     +LDD R22 , Y + 4 + 2
000b46 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000b47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
000b48 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000b49 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000b4a e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000b4b e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000b4c 940e 0e1d 	CALL __MULF12
                +
000b4e e0a0     +LDI R26 , LOW ( 0x41C80000 )
000b4f e0b0     +LDI R27 , HIGH ( 0x41C80000 )
000b50 ec88     +LDI R24 , BYTE3 ( 0x41C80000 )
000b51 e491     +LDI R25 , BYTE4 ( 0x41C80000 )
                 	__GETD2N 0x41C80000
000b52 940e 0e1d 	CALL __MULF12
000b54 940e 0d5c 	CALL __CFD1
000b56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000b57 940e 0f5b 	CALL __GETD1S0
000b59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000b5a e0e0      	LDI  R30,LOW(0)
000b5b e0f0      	LDI  R31,HIGH(0)
000b5c 93ed      	ST   X+,R30
000b5d 93fc      	ST   X,R31
000b5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000b5f 93fa      	ST   -Y,R31
000b60 93ea      	ST   -Y,R30
000b61 940e 0176 	CALL _RTU_WriteOperate0
000b63 e0e5      	LDI  R30,LOW(5)
000b64 e0f0      	LDI  R31,HIGH(5)
000b65 93fa      	ST   -Y,R31
000b66 93ea      	ST   -Y,R30
000b67 940c 0d1b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000b69 93ea      	ST   -Y,R30
000b6a e7e8      	LDI  R30,LOW(120)
000b6b e0f0      	LDI  R31,HIGH(120)
000b6c 93fa      	ST   -Y,R31
000b6d 93ea      	ST   -Y,R30
000b6e e0e1      	LDI  R30,LOW(1)
000b6f e0f0      	LDI  R31,HIGH(1)
000b70 cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10:
000b71 e0f0      	LDI  R31,0
000b72 0fea      	ADD  R30,R26
000b73 1ffb      	ADC  R31,R27
000b74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000b75 2da4      	MOV  R26,R4
000b76 e0b0      	LDI  R27,0
000b77 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000b78 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000b79 b1ec      	IN   R30,0xC
000b7a 93ec      	ST   X,R30
000b7b 9443      	INC  R4
000b7c e0e0      	LDI  R30,LOW(0)
000b7d bde4      	OUT  0x24,R30
000b7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
000b7f e0f0      	LDI  R31,0
000b80 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000b81 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000b82 8310      	ST   Z,R17
000b83 9493      	INC  R9
000b84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
000b85 93fa      	ST   -Y,R31
000b86 93ea      	ST   -Y,R30
000b87 940c 0d1b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
000b89 940e 0eeb 	CALL __CWD1
000b8b 940e 0d93 	CALL __CDF1
000b8d 01df      	MOVW R26,R30
000b8e 01cb      	MOVW R24,R22
                +
000b8f e0e0     +LDI R30 , LOW ( 0x447A0000 )
000b90 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000b91 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000b92 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000b93 940e 0e6b 	CALL __DIVF21
000b95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x15:
000b96 93ea      	ST   -Y,R30
000b97 e0e2      	LDI  R30,LOW(2)
000b98 e0f0      	LDI  R31,HIGH(2)
000b99 93fa      	ST   -Y,R31
000b9a 93ea      	ST   -Y,R30
000b9b 93fa      	ST   -Y,R31
000b9c 93ea      	ST   -Y,R30
000b9d 940e 0185 	CALL _RTU_ReedOperate0
000b9f e0e5      	LDI  R30,LOW(5)
000ba0 e0f0      	LDI  R31,HIGH(5)
000ba1 cfe3      	RJMP SUBOPT_0x13
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16:
000ba2 93fa      	ST   -Y,R31
000ba3 93ea      	ST   -Y,R30
000ba4 940e 022d 	CALL _get_RPM
000ba6 940e 0eeb 	CALL __CWD1
000ba8 940e 0d93 	CALL __CDF1
000baa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
000bab 01df      	MOVW R26,R30
000bac 01cb      	MOVW R24,R22
                +
000bad e3e3     +LDI R30 , LOW ( 0x456EBB33 )
000bae ebfb     +LDI R31 , HIGH ( 0x456EBB33 )
000baf e66e     +LDI R22 , BYTE3 ( 0x456EBB33 )
000bb0 e475     +LDI R23 , BYTE4 ( 0x456EBB33 )
                 	__GETD1N 0x456EBB33
000bb1 940e 0e6b 	CALL __DIVF21
000bb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x18:
                +
000bb4 01fe     +MOVW R30 , R28
000bb5 58ec     +SUBI R30 , LOW ( - 116 )
000bb6 4fff     +SBCI R31 , HIGH ( - 116 )
000bb7 9001     +LD R0 , Z +
000bb8 9011     +LD R1 , Z +
000bb9 9161     +LD R22 , Z +
000bba 8170     +LD R23 , Z
000bbb 01f0     +MOVW R30 , R0
                 	__GETD1SX 116
                +
000bbc 01de     +MOVW R26 , R28
000bbd 59a0     +SUBI R26 , LOW ( - 112 )
000bbe 4fbf     +SBCI R27 , HIGH ( - 112 )
000bbf 900d     +LD R0 , X +
000bc0 901d     +LD R1 , X +
000bc1 918d     +LD R24 , X +
000bc2 919c     +LD R25 , X
000bc3 01d0     +MOVW R26 , R0
                 	__GETD2SX 112
000bc4 940e 0e1d 	CALL __MULF12
000bc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
                +
000bc7 01de     +MOVW R26 , R28
000bc8 58a8     +SUBI R26 , LOW ( - 120 )
000bc9 4fbf     +SBCI R27 , HIGH ( - 120 )
000bca 900d     +LD R0 , X +
000bcb 901d     +LD R1 , X +
000bcc 918d     +LD R24 , X +
000bcd 919c     +LD R25 , X
000bce 01d0     +MOVW R26 , R0
                 	__GETD2SX 120
000bcf 940e 0e1d 	CALL __MULF12
000bd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1A:
                +
000bd2 01fe     +MOVW R30 , R28
000bd3 59e0     +SUBI R30 , LOW ( - 112 )
000bd4 4fff     +SBCI R31 , HIGH ( - 112 )
000bd5 9001     +LD R0 , Z +
000bd6 9011     +LD R1 , Z +
000bd7 9161     +LD R22 , Z +
000bd8 8170     +LD R23 , Z
000bd9 01f0     +MOVW R30 , R0
                 	__GETD1SX 112
000bda 940e 0f6c 	CALL __PUTPARD1
000bdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1B:
                +
000bdd 01de     +MOVW R26 , R28
000bde 56ac     +SUBI R26 , LOW ( - 148 )
000bdf 4fbf     +SBCI R27 , HIGH ( - 148 )
000be0 900d     +LD R0 , X +
000be1 901d     +LD R1 , X +
000be2 918d     +LD R24 , X +
000be3 919c     +LD R25 , X
000be4 01d0     +MOVW R26 , R0
                 	__GETD2SX 148
                +
000be5 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000be6 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000be7 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000be8 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000be9 940e 0e6b 	CALL __DIVF21
000beb 940e 0f6c 	CALL __PUTPARD1
000bed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
000bee 91ed      	LD   R30,X+
000bef 91fd      	LD   R31,X+
000bf0 9631      	ADIW R30,1
000bf1 93fe      	ST   -X,R31
000bf2 93ee      	ST   -X,R30
000bf3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
000bf4 93fa      	ST   -Y,R31
000bf5 93ea      	ST   -Y,R30
000bf6 940c 0a26 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1E:
                +
000bf8 81ac     +LDD R26 , Y + 4
000bf9 81bd     +LDD R27 , Y + 4 + 1
000bfa 818e     +LDD R24 , Y + 4 + 2
000bfb 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000bfc e0e0     +LDI R30 , LOW ( 0x41200000 )
000bfd e0f0     +LDI R31 , HIGH ( 0x41200000 )
000bfe e260     +LDI R22 , BYTE3 ( 0x41200000 )
000bff e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c00 940e 0e1d 	CALL __MULF12
000c02 cf36      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
000c03 df3f      	RCALL SUBOPT_0xA
                +
000c04 85ac     +LDD R26 , Y + 12
000c05 85bd     +LDD R27 , Y + 12 + 1
000c06 858e     +LDD R24 , Y + 12 + 2
000c07 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000c08 940e 0eb0 	CALL __CMPF12
000c0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
000c0b 85ac     +LDD R26 , Y + 12
000c0c 85bd     +LDD R27 , Y + 12 + 1
000c0d 858e     +LDD R24 , Y + 12 + 2
000c0e 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000c0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x21:
                +
000c10 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000c11 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000c12 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000c13 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000c14 940e 0e1d 	CALL __MULF12
                +
000c16 87ec     +STD Y + 12 , R30
000c17 87fd     +STD Y + 12 + 1 , R31
000c18 876e     +STD Y + 12 + 2 , R22
000c19 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000c1a 5f3f      	SUBI R19,-LOW(1)
000c1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
000c1c e0e0     +LDI R30 , LOW ( 0x41200000 )
000c1d e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c1e e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c1f e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c20 940e 0e1d 	CALL __MULF12
000c22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
                +
000c23 87ec     +STD Y + 12 , R30
000c24 87fd     +STD Y + 12 + 1 , R31
000c25 876e     +STD Y + 12 + 2 , R22
000c26 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000c27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
                +
000c28 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c29 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c2a e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c2b e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c2c 940e 0dcd 	CALL __ADDF12
000c2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
000c2f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000c30 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000c31 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000c32 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000c33 940e 0e1d 	CALL __MULF12
000c35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
000c36 940e 0f6c 	CALL __PUTPARD1
000c38 940c 095c 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000c3a 85a8      	LDD  R26,Y+8
000c3b 85b9      	LDD  R27,Y+8+1
000c3c 9611      	ADIW R26,1
000c3d 87a8      	STD  Y+8,R26
000c3e 87b9      	STD  Y+8+1,R27
000c3f 9711      	SBIW R26,1
000c40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000c41 2fe0      	MOV  R30,R16
000c42 5de0      	SUBI R30,-LOW(48)
000c43 93ec      	ST   X,R30
000c44 2fe0      	MOV  R30,R16
000c45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x29:
000c46 85e8      	LDD  R30,Y+8
000c47 85f9      	LDD  R31,Y+8+1
000c48 9631      	ADIW R30,1
000c49 87e8      	STD  Y+8,R30
000c4a 87f9      	STD  Y+8+1,R31
000c4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2A:
000c4c 932a      	ST   -Y,R18
000c4d 81ef      	LDD  R30,Y+7
000c4e 85f8      	LDD  R31,Y+7+1
000c4f 93fa      	ST   -Y,R31
000c50 93ea      	ST   -Y,R30
000c51 85eb      	LDD  R30,Y+11
000c52 85fc      	LDD  R31,Y+11+1
000c53 9509      	ICALL
000c54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2B:
                +
000c55 01fe     +MOVW R30 , R28
000c56 5ae6     +SUBI R30 , LOW ( - 90 )
000c57 4fff     +SBCI R31 , HIGH ( - 90 )
000c58 9001     +LD R0 , Z +
000c59 81f0     +LD R31 , Z
000c5a 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000c5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2C:
000c5c 9734      	SBIW R30,4
                +
000c5d 01de     +MOVW R26 , R28
000c5e 5aa6     +SUBI R26 , LOW ( - 90 )
000c5f 4fbf     +SBCI R27 , HIGH ( - 90 )
000c60 93ed     +ST X + , R30
000c61 93fc     +ST X , R31
                 	__PUTW1SX 90
000c62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2D:
000c63 81ef      	LDD  R30,Y+7
000c64 85f8      	LDD  R31,Y+7+1
000c65 93fa      	ST   -Y,R31
000c66 93ea      	ST   -Y,R30
000c67 85eb      	LDD  R30,Y+11
000c68 85fc      	LDD  R31,Y+11+1
000c69 9509      	ICALL
000c6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2E:
                +
000c6b 01de     +MOVW R26 , R28
000c6c 5aa6     +SUBI R26 , LOW ( - 90 )
000c6d 4fbf     +SBCI R27 , HIGH ( - 90 )
000c6e 900d     +LD R0 , X +
000c6f 91bc     +LD R27 , X
000c70 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000c71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
                +
000c72 87ea     +STD Y + 10 , R30
000c73 87fb     +STD Y + 10 + 1 , R31
000c74 876c     +STD Y + 10 + 2 , R22
000c75 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000c76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30:
000c77 dfdd      	RCALL SUBOPT_0x2B
000c78 cfe3      	RJMP SUBOPT_0x2C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
                +
000c79 85ea     +LDD R30 , Y + 10
000c7a 85fb     +LDD R31 , Y + 10 + 1
000c7b 856c     +LDD R22 , Y + 10 + 2
000c7c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000c7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x32:
000c7e 87ee      	STD  Y+14,R30
000c7f 87ff      	STD  Y+14+1,R31
000c80 93fa      	ST   -Y,R31
000c81 93ea      	ST   -Y,R30
000c82 940e 0a31 	CALL _strlen
000c84 2f1e      	MOV  R17,R30
000c85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x33:
000c86 dfe4      	RCALL SUBOPT_0x2E
000c87 9614      	ADIW R26,4
000c88 940e 0f4c 	CALL __GETW1P
000c8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x34:
                +
000c8b 8be8     +STD Y + 16 , R30
000c8c 8bf9     +STD Y + 16 + 1 , R31
000c8d 8b6a     +STD Y + 16 + 2 , R22
000c8e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000c8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x35:
000c90 7f0b      	ANDI R16,LOW(251)
000c91 89ed      	LDD  R30,Y+21
000c92 93ea      	ST   -Y,R30
                +
000c93 01fe     +MOVW R30 , R28
000c94 5ae9     +SUBI R30 , LOW ( - 87 )
000c95 4fff     +SBCI R31 , HIGH ( - 87 )
000c96 9001     +LD R0 , Z +
000c97 81f0     +LD R31 , Z
000c98 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000c99 93fa      	ST   -Y,R31
000c9a 93ea      	ST   -Y,R30
                +
000c9b 01fe     +MOVW R30 , R28
000c9c 5ae5     +SUBI R30 , LOW ( - 91 )
000c9d 4fff     +SBCI R31 , HIGH ( - 91 )
000c9e 9001     +LD R0 , Z +
000c9f 81f0     +LD R31 , Z
000ca0 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000ca1 9509      	ICALL
000ca2 3050      	CPI  R21,0
000ca3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36:
                +
000ca4 89e8     +LDD R30 , Y + 16
000ca5 89f9     +LDD R31 , Y + 16 + 1
000ca6 896a     +LDD R22 , Y + 16 + 2
000ca7 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000ca8 85aa     +LDD R26 , Y + 10
000ca9 85bb     +LDD R27 , Y + 10 + 1
000caa 858c     +LDD R24 , Y + 10 + 2
000cab 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000cac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
000cad 01de      	MOVW R26,R28
000cae 961c      	ADIW R26,12
000caf 940e 0ed0 	CALL __ADDW2R15
000cb1 940e 0f4c 	CALL __GETW1P
000cb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
000cb4 940e 0ed0 	CALL __ADDW2R15
000cb6 940e 0f4c 	CALL __GETW1P
000cb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
000cb9 933a      	ST   -Y,R19
000cba 940e 0a0e 	CALL _isspace
000cbc 30e0      	CPI  R30,0
000cbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3A:
000cbe 85ed      	LDD  R30,Y+13
000cbf 85fe      	LDD  R31,Y+13+1
000cc0 93fa      	ST   -Y,R31
000cc1 93ea      	ST   -Y,R30
000cc2 89e9      	LDD  R30,Y+17
000cc3 89fa      	LDD  R31,Y+17+1
000cc4 9509      	ICALL
000cc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3B:
000cc6 85ab      	LDD  R26,Y+11
000cc7 85bc      	LDD  R27,Y+11+1
000cc8 91ac      	LD   R26,X
000cc9 30a0      	CPI  R26,0
000cca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3C:
000ccb 85ef      	LDD  R30,Y+15
000ccc 89f8      	LDD  R31,Y+15+1
000ccd 9734      	SBIW R30,4
000cce 87ef      	STD  Y+15,R30
000ccf 8bf8      	STD  Y+15+1,R31
000cd0 85af      	LDD  R26,Y+15
000cd1 89b8      	LDD  R27,Y+15+1
000cd2 9614      	ADIW R26,4
000cd3 910d      	LD   R16,X+
000cd4 911c      	LD   R17,X
000cd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3D:
                +
000cd6 81ad     +LDD R26 , Y + 5
000cd7 81be     +LDD R27 , Y + 5 + 1
000cd8 818f     +LDD R24 , Y + 5 + 2
000cd9 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000cda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
                +
000cdb 83ed     +STD Y + 5 , R30
000cdc 83fe     +STD Y + 5 + 1 , R31
000cdd 836f     +STD Y + 5 + 2 , R22
000cde 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000cdf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F:
                +
000ce0 81ed     +LDD R30 , Y + 5
000ce1 81fe     +LDD R31 , Y + 5 + 1
000ce2 816f     +LDD R22 , Y + 5 + 2
000ce3 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000ce4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
000ce5 dff0      	RCALL SUBOPT_0x3D
                +
000ce6 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000ce7 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000ce8 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000ce9 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000cea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41:
                +
000ceb 81a9     +LDD R26 , Y + 1
000cec 81ba     +LDD R27 , Y + 1 + 1
000ced 818b     +LDD R24 , Y + 1 + 2
000cee 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000cef 940e 0e1d 	CALL __MULF12
000cf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
000cf2 81ee      	LDD  R30,Y+6
000cf3 81ff      	LDD  R31,Y+6+1
000cf4 93fa      	ST   -Y,R31
000cf5 93ea      	ST   -Y,R30
000cf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x43:
                +
000cf7 87e9     +STD Y + 9 , R30
000cf8 87fa     +STD Y + 9 + 1 , R31
000cf9 876b     +STD Y + 9 + 2 , R22
000cfa 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000cfb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x44:
000cfc 81ae      	LDD  R26,Y+6
000cfd 81bf      	LDD  R27,Y+6+1
000cfe 9611      	ADIW R26,1
000cff 83ae      	STD  Y+6,R26
000d00 83bf      	STD  Y+6+1,R27
000d01 9711      	SBIW R26,1
000d02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x45:
                +
000d03 81aa     +LDD R26 , Y + 2
000d04 81bb     +LDD R27 , Y + 2 + 1
000d05 818c     +LDD R24 , Y + 2 + 2
000d06 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000d07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x46:
                +
000d08 83ea     +STD Y + 2 , R30
000d09 83fb     +STD Y + 2 + 1 , R31
000d0a 836c     +STD Y + 2 + 2 , R22
000d0b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000d0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x47:
                +
000d0d 81ea     +LDD R30 , Y + 2
000d0e 81fb     +LDD R31 , Y + 2 + 1
000d0f 816c     +LDD R22 , Y + 2 + 2
000d10 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000d11 85a9     +LDD R26 , Y + 9
000d12 85ba     +LDD R27 , Y + 9 + 1
000d13 858b     +LDD R24 , Y + 9 + 2
000d14 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000d15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x48:
                +
000d16 85a9     +LDD R26 , Y + 9
000d17 85ba     +LDD R27 , Y + 9 + 1
000d18 858b     +LDD R24 , Y + 9 + 2
000d19 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000d1a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000d1b 91e9      	ld   r30,y+
000d1c 91f9      	ld   r31,y+
000d1d 9630      	adiw r30,0
000d1e f039      	breq __delay_ms1
                 __delay_ms0:
                +
000d1f e686     +LDI R24 , LOW ( 0xE66 )
000d20 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000d21 9701     +SBIW R24 , 1
000d22 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000d23 95a8      	wdr
000d24 9731      	sbiw r30,1
000d25 f7c9      	brne __delay_ms0
                 __delay_ms1:
000d26 9508      	ret
                 
                 __ANEGF1:
000d27 9730      	SBIW R30,0
000d28 4060      	SBCI R22,0
000d29 4070      	SBCI R23,0
000d2a f009      	BREQ __ANEGF10
000d2b 5870      	SUBI R23,0x80
                 __ANEGF10:
000d2c 9508      	RET
                 
                 __ROUND_REPACK:
000d2d 2355      	TST  R21
000d2e f442      	BRPL __REPACK
000d2f 3850      	CPI  R21,0x80
000d30 f411      	BRNE __ROUND_REPACK0
000d31 ffe0      	SBRS R30,0
000d32 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000d33 9631      	ADIW R30,1
000d34 1f69      	ADC  R22,R25
000d35 1f79      	ADC  R23,R25
000d36 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000d37 e850      	LDI  R21,0x80
000d38 2757      	EOR  R21,R23
000d39 f411      	BRNE __REPACK0
000d3a 935f      	PUSH R21
000d3b c0cf      	RJMP __ZERORES
                 __REPACK0:
000d3c 3f5f      	CPI  R21,0xFF
000d3d f031      	BREQ __REPACK1
000d3e 0f66      	LSL  R22
000d3f 0c00      	LSL  R0
000d40 9557      	ROR  R21
000d41 9567      	ROR  R22
000d42 2f75      	MOV  R23,R21
000d43 9508      	RET
                 __REPACK1:
000d44 935f      	PUSH R21
000d45 2000      	TST  R0
000d46 f00a      	BRMI __REPACK2
000d47 c0cf      	RJMP __MAXRES
                 __REPACK2:
000d48 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000d49 e850      	LDI  R21,0x80
000d4a 2e19      	MOV  R1,R25
000d4b 2215      	AND  R1,R21
000d4c 0f88      	LSL  R24
000d4d 1f99      	ROL  R25
000d4e 2795      	EOR  R25,R21
000d4f 0f55      	LSL  R21
000d50 9587      	ROR  R24
                 
                 __UNPACK1:
000d51 e850      	LDI  R21,0x80
000d52 2e07      	MOV  R0,R23
000d53 2205      	AND  R0,R21
000d54 0f66      	LSL  R22
000d55 1f77      	ROL  R23
000d56 2775      	EOR  R23,R21
000d57 0f55      	LSL  R21
000d58 9567      	ROR  R22
000d59 9508      	RET
                 
                 __CFD1U:
000d5a 9468      	SET
000d5b c001      	RJMP __CFD1U0
                 __CFD1:
000d5c 94e8      	CLT
                 __CFD1U0:
000d5d 935f      	PUSH R21
000d5e dff2      	RCALL __UNPACK1
000d5f 3870      	CPI  R23,0x80
000d60 f018      	BRLO __CFD10
000d61 3f7f      	CPI  R23,0xFF
000d62 f408      	BRCC __CFD10
000d63 c0a7      	RJMP __ZERORES
                 __CFD10:
000d64 e156      	LDI  R21,22
000d65 1b57      	SUB  R21,R23
000d66 f4aa      	BRPL __CFD11
000d67 9551      	NEG  R21
000d68 3058      	CPI  R21,8
000d69 f40e      	BRTC __CFD19
000d6a 3059      	CPI  R21,9
                 __CFD19:
000d6b f030      	BRLO __CFD17
000d6c efef      	SER  R30
000d6d efff      	SER  R31
000d6e ef6f      	SER  R22
000d6f e77f      	LDI  R23,0x7F
000d70 f977      	BLD  R23,7
000d71 c01a      	RJMP __CFD15
                 __CFD17:
000d72 2777      	CLR  R23
000d73 2355      	TST  R21
000d74 f0b9      	BREQ __CFD15
                 __CFD18:
000d75 0fee      	LSL  R30
000d76 1fff      	ROL  R31
000d77 1f66      	ROL  R22
000d78 1f77      	ROL  R23
000d79 955a      	DEC  R21
000d7a f7d1      	BRNE __CFD18
000d7b c010      	RJMP __CFD15
                 __CFD11:
000d7c 2777      	CLR  R23
                 __CFD12:
000d7d 3058      	CPI  R21,8
000d7e f028      	BRLO __CFD13
000d7f 2fef      	MOV  R30,R31
000d80 2ff6      	MOV  R31,R22
000d81 2f67      	MOV  R22,R23
000d82 5058      	SUBI R21,8
000d83 cff9      	RJMP __CFD12
                 __CFD13:
000d84 2355      	TST  R21
000d85 f031      	BREQ __CFD15
                 __CFD14:
000d86 9576      	LSR  R23
000d87 9567      	ROR  R22
000d88 95f7      	ROR  R31
000d89 95e7      	ROR  R30
000d8a 955a      	DEC  R21
000d8b f7d1      	BRNE __CFD14
                 __CFD15:
000d8c 2000      	TST  R0
000d8d f40a      	BRPL __CFD16
000d8e d149      	RCALL __ANEGD1
                 __CFD16:
000d8f 915f      	POP  R21
000d90 9508      	RET
                 
                 __CDF1U:
000d91 9468      	SET
000d92 c001      	RJMP __CDF1U0
                 __CDF1:
000d93 94e8      	CLT
                 __CDF1U0:
000d94 9730      	SBIW R30,0
000d95 4060      	SBCI R22,0
000d96 4070      	SBCI R23,0
000d97 f0b1      	BREQ __CDF10
000d98 2400      	CLR  R0
000d99 f026      	BRTS __CDF11
000d9a 2377      	TST  R23
000d9b f412      	BRPL __CDF11
000d9c 9400      	COM  R0
000d9d d13a      	RCALL __ANEGD1
                 __CDF11:
000d9e 2e17      	MOV  R1,R23
000d9f e17e      	LDI  R23,30
000da0 2011      	TST  R1
                 __CDF12:
000da1 f032      	BRMI __CDF13
000da2 957a      	DEC  R23
000da3 0fee      	LSL  R30
000da4 1fff      	ROL  R31
000da5 1f66      	ROL  R22
000da6 1c11      	ROL  R1
000da7 cff9      	RJMP __CDF12
                 __CDF13:
000da8 2fef      	MOV  R30,R31
000da9 2ff6      	MOV  R31,R22
000daa 2d61      	MOV  R22,R1
000dab 935f      	PUSH R21
000dac df8a      	RCALL __REPACK
000dad 915f      	POP  R21
                 __CDF10:
000dae 9508      	RET
                 
                 __SWAPACC:
000daf 934f      	PUSH R20
000db0 01af      	MOVW R20,R30
000db1 01fd      	MOVW R30,R26
000db2 01da      	MOVW R26,R20
000db3 01ab      	MOVW R20,R22
000db4 01bc      	MOVW R22,R24
000db5 01ca      	MOVW R24,R20
000db6 2d40      	MOV  R20,R0
000db7 2c01      	MOV  R0,R1
000db8 2e14      	MOV  R1,R20
000db9 914f      	POP  R20
000dba 9508      	RET
                 
                 __UADD12:
000dbb 0fea      	ADD  R30,R26
000dbc 1ffb      	ADC  R31,R27
000dbd 1f68      	ADC  R22,R24
000dbe 9508      	RET
                 
                 __NEGMAN1:
000dbf 95e0      	COM  R30
000dc0 95f0      	COM  R31
000dc1 9560      	COM  R22
000dc2 5fef      	SUBI R30,-1
000dc3 4fff      	SBCI R31,-1
000dc4 4f6f      	SBCI R22,-1
000dc5 9508      	RET
                 
                 __SUBF12:
000dc6 935f      	PUSH R21
000dc7 df81      	RCALL __UNPACK
000dc8 3890      	CPI  R25,0x80
000dc9 f171      	BREQ __ADDF129
000dca e850      	LDI  R21,0x80
000dcb 2615      	EOR  R1,R21
                 
000dcc c004      	RJMP __ADDF120
                 
                 __ADDF12:
000dcd 935f      	PUSH R21
000dce df7a      	RCALL __UNPACK
000dcf 3890      	CPI  R25,0x80
000dd0 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000dd1 3870      	CPI  R23,0x80
000dd2 f121      	BREQ __ADDF128
                 __ADDF121:
000dd3 2f57      	MOV  R21,R23
000dd4 1b59      	SUB  R21,R25
000dd5 f12b      	BRVS __ADDF1211
000dd6 f412      	BRPL __ADDF122
000dd7 dfd7      	RCALL __SWAPACC
000dd8 cffa      	RJMP __ADDF121
                 __ADDF122:
000dd9 3158      	CPI  R21,24
000dda f018      	BRLO __ADDF123
000ddb 27aa      	CLR  R26
000ddc 27bb      	CLR  R27
000ddd 2788      	CLR  R24
                 __ADDF123:
000dde 3058      	CPI  R21,8
000ddf f028      	BRLO __ADDF124
000de0 2fab      	MOV  R26,R27
000de1 2fb8      	MOV  R27,R24
000de2 2788      	CLR  R24
000de3 5058      	SUBI R21,8
000de4 cff9      	RJMP __ADDF123
                 __ADDF124:
000de5 2355      	TST  R21
000de6 f029      	BREQ __ADDF126
                 __ADDF125:
000de7 9586      	LSR  R24
000de8 95b7      	ROR  R27
000de9 95a7      	ROR  R26
000dea 955a      	DEC  R21
000deb f7d9      	BRNE __ADDF125
                 __ADDF126:
000dec 2d50      	MOV  R21,R0
000ded 2551      	EOR  R21,R1
000dee f072      	BRMI __ADDF127
000def dfcb      	RCALL __UADD12
000df0 f438      	BRCC __ADDF129
000df1 9567      	ROR  R22
000df2 95f7      	ROR  R31
000df3 95e7      	ROR  R30
000df4 9573      	INC  R23
000df5 f413      	BRVC __ADDF129
000df6 c020      	RJMP __MAXRES
                 __ADDF128:
000df7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000df8 df3e      	RCALL __REPACK
000df9 915f      	POP  R21
000dfa 9508      	RET
                 __ADDF1211:
000dfb f7d8      	BRCC __ADDF128
000dfc cffb      	RJMP __ADDF129
                 __ADDF127:
000dfd 1bea      	SUB  R30,R26
000dfe 0bfb      	SBC  R31,R27
000dff 0b68      	SBC  R22,R24
000e00 f051      	BREQ __ZERORES
000e01 f410      	BRCC __ADDF1210
000e02 9400      	COM  R0
000e03 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000e04 2366      	TST  R22
000e05 f392      	BRMI __ADDF129
000e06 0fee      	LSL  R30
000e07 1fff      	ROL  R31
000e08 1f66      	ROL  R22
000e09 957a      	DEC  R23
000e0a f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000e0b 27ee      	CLR  R30
000e0c 27ff      	CLR  R31
000e0d 2766      	CLR  R22
000e0e 2777      	CLR  R23
000e0f 915f      	POP  R21
000e10 9508      	RET
                 
                 __MINRES:
000e11 efef      	SER  R30
000e12 efff      	SER  R31
000e13 e76f      	LDI  R22,0x7F
000e14 ef7f      	SER  R23
000e15 915f      	POP  R21
000e16 9508      	RET
                 
                 __MAXRES:
000e17 efef      	SER  R30
000e18 efff      	SER  R31
000e19 e76f      	LDI  R22,0x7F
000e1a e77f      	LDI  R23,0x7F
000e1b 915f      	POP  R21
000e1c 9508      	RET
                 
                 __MULF12:
000e1d 935f      	PUSH R21
000e1e df2a      	RCALL __UNPACK
000e1f 3870      	CPI  R23,0x80
000e20 f351      	BREQ __ZERORES
000e21 3890      	CPI  R25,0x80
000e22 f341      	BREQ __ZERORES
000e23 2401      	EOR  R0,R1
000e24 9408      	SEC
000e25 1f79      	ADC  R23,R25
000e26 f423      	BRVC __MULF124
000e27 f31c      	BRLT __ZERORES
                 __MULF125:
000e28 2000      	TST  R0
000e29 f33a      	BRMI __MINRES
000e2a cfec      	RJMP __MAXRES
                 __MULF124:
000e2b 920f      	PUSH R0
000e2c 931f      	PUSH R17
000e2d 932f      	PUSH R18
000e2e 933f      	PUSH R19
000e2f 934f      	PUSH R20
000e30 2711      	CLR  R17
000e31 2722      	CLR  R18
000e32 2799      	CLR  R25
000e33 9f68      	MUL  R22,R24
000e34 01a0      	MOVW R20,R0
000e35 9f8f      	MUL  R24,R31
000e36 2d30      	MOV  R19,R0
000e37 0d41      	ADD  R20,R1
000e38 1f59      	ADC  R21,R25
000e39 9f6b      	MUL  R22,R27
000e3a 0d30      	ADD  R19,R0
000e3b 1d41      	ADC  R20,R1
000e3c 1f59      	ADC  R21,R25
000e3d 9f8e      	MUL  R24,R30
000e3e d027      	RCALL __MULF126
000e3f 9fbf      	MUL  R27,R31
000e40 d025      	RCALL __MULF126
000e41 9f6a      	MUL  R22,R26
000e42 d023      	RCALL __MULF126
000e43 9fbe      	MUL  R27,R30
000e44 d01d      	RCALL __MULF127
000e45 9faf      	MUL  R26,R31
000e46 d01b      	RCALL __MULF127
000e47 9fae      	MUL  R26,R30
000e48 0d11      	ADD  R17,R1
000e49 1f29      	ADC  R18,R25
000e4a 1f39      	ADC  R19,R25
000e4b 1f49      	ADC  R20,R25
000e4c 1f59      	ADC  R21,R25
000e4d 2fe3      	MOV  R30,R19
000e4e 2ff4      	MOV  R31,R20
000e4f 2f65      	MOV  R22,R21
000e50 2f52      	MOV  R21,R18
000e51 914f      	POP  R20
000e52 913f      	POP  R19
000e53 912f      	POP  R18
000e54 911f      	POP  R17
000e55 900f      	POP  R0
000e56 2366      	TST  R22
000e57 f02a      	BRMI __MULF122
000e58 0f55      	LSL  R21
000e59 1fee      	ROL  R30
000e5a 1fff      	ROL  R31
000e5b 1f66      	ROL  R22
000e5c c002      	RJMP __MULF123
                 __MULF122:
000e5d 9573      	INC  R23
000e5e f24b      	BRVS __MULF125
                 __MULF123:
000e5f decd      	RCALL __ROUND_REPACK
000e60 915f      	POP  R21
000e61 9508      	RET
                 
                 __MULF127:
000e62 0d10      	ADD  R17,R0
000e63 1d21      	ADC  R18,R1
000e64 1f39      	ADC  R19,R25
000e65 c002      	RJMP __MULF128
                 __MULF126:
000e66 0d20      	ADD  R18,R0
000e67 1d31      	ADC  R19,R1
                 __MULF128:
000e68 1f49      	ADC  R20,R25
000e69 1f59      	ADC  R21,R25
000e6a 9508      	RET
                 
                 __DIVF21:
000e6b 935f      	PUSH R21
000e6c dedc      	RCALL __UNPACK
000e6d 3870      	CPI  R23,0x80
000e6e f421      	BRNE __DIVF210
000e6f 2011      	TST  R1
                 __DIVF211:
000e70 f40a      	BRPL __DIVF219
000e71 cf9f      	RJMP __MINRES
                 __DIVF219:
000e72 cfa4      	RJMP __MAXRES
                 __DIVF210:
000e73 3890      	CPI  R25,0x80
000e74 f409      	BRNE __DIVF218
                 __DIVF217:
000e75 cf95      	RJMP __ZERORES
                 __DIVF218:
000e76 2401      	EOR  R0,R1
000e77 9408      	SEC
000e78 0b97      	SBC  R25,R23
000e79 f41b      	BRVC __DIVF216
000e7a f3d4      	BRLT __DIVF217
000e7b 2000      	TST  R0
000e7c cff3      	RJMP __DIVF211
                 __DIVF216:
000e7d 2f79      	MOV  R23,R25
000e7e 931f      	PUSH R17
000e7f 932f      	PUSH R18
000e80 933f      	PUSH R19
000e81 934f      	PUSH R20
000e82 2411      	CLR  R1
000e83 2711      	CLR  R17
000e84 2722      	CLR  R18
000e85 2733      	CLR  R19
000e86 2744      	CLR  R20
000e87 2755      	CLR  R21
000e88 e290      	LDI  R25,32
                 __DIVF212:
000e89 17ae      	CP   R26,R30
000e8a 07bf      	CPC  R27,R31
000e8b 0786      	CPC  R24,R22
000e8c 0741      	CPC  R20,R17
000e8d f030      	BRLO __DIVF213
000e8e 1bae      	SUB  R26,R30
000e8f 0bbf      	SBC  R27,R31
000e90 0b86      	SBC  R24,R22
000e91 0b41      	SBC  R20,R17
000e92 9408      	SEC
000e93 c001      	RJMP __DIVF214
                 __DIVF213:
000e94 9488      	CLC
                 __DIVF214:
000e95 1f55      	ROL  R21
000e96 1f22      	ROL  R18
000e97 1f33      	ROL  R19
000e98 1c11      	ROL  R1
000e99 1faa      	ROL  R26
000e9a 1fbb      	ROL  R27
000e9b 1f88      	ROL  R24
000e9c 1f44      	ROL  R20
000e9d 959a      	DEC  R25
000e9e f751      	BRNE __DIVF212
000e9f 01f9      	MOVW R30,R18
000ea0 2d61      	MOV  R22,R1
000ea1 914f      	POP  R20
000ea2 913f      	POP  R19
000ea3 912f      	POP  R18
000ea4 911f      	POP  R17
000ea5 2366      	TST  R22
000ea6 f032      	BRMI __DIVF215
000ea7 0f55      	LSL  R21
000ea8 1fee      	ROL  R30
000ea9 1fff      	ROL  R31
000eaa 1f66      	ROL  R22
000eab 957a      	DEC  R23
000eac f243      	BRVS __DIVF217
                 __DIVF215:
000ead de7f      	RCALL __ROUND_REPACK
000eae 915f      	POP  R21
000eaf 9508      	RET
                 
                 __CMPF12:
000eb0 2399      	TST  R25
000eb1 f09a      	BRMI __CMPF120
000eb2 2377      	TST  R23
000eb3 f042      	BRMI __CMPF121
000eb4 1797      	CP   R25,R23
000eb5 f048      	BRLO __CMPF122
000eb6 f429      	BRNE __CMPF121
000eb7 17ae      	CP   R26,R30
000eb8 07bf      	CPC  R27,R31
000eb9 0786      	CPC  R24,R22
000eba f020      	BRLO __CMPF122
000ebb f031      	BREQ __CMPF123
                 __CMPF121:
000ebc 9498      	CLZ
000ebd 9488      	CLC
000ebe 9508      	RET
                 __CMPF122:
000ebf 9498      	CLZ
000ec0 9408      	SEC
000ec1 9508      	RET
                 __CMPF123:
000ec2 9418      	SEZ
000ec3 9488      	CLC
000ec4 9508      	RET
                 __CMPF120:
000ec5 2377      	TST  R23
000ec6 f7c2      	BRPL __CMPF122
000ec7 1797      	CP   R25,R23
000ec8 f398      	BRLO __CMPF121
000ec9 f7a9      	BRNE __CMPF122
000eca 17ea      	CP   R30,R26
000ecb 07fb      	CPC  R31,R27
000ecc 0768      	CPC  R22,R24
000ecd f388      	BRLO __CMPF122
000ece f399      	BREQ __CMPF123
000ecf cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000ed0 2400      	CLR  R0
000ed1 0daf      	ADD  R26,R15
000ed2 1db0      	ADC  R27,R0
000ed3 9508      	RET
                 
                 __ANEGW1:
000ed4 95f1      	NEG  R31
000ed5 95e1      	NEG  R30
000ed6 40f0      	SBCI R31,0
000ed7 9508      	RET
                 
                 __ANEGD1:
000ed8 95f0      	COM  R31
000ed9 9560      	COM  R22
000eda 9570      	COM  R23
000edb 95e1      	NEG  R30
000edc 4fff      	SBCI R31,-1
000edd 4f6f      	SBCI R22,-1
000ede 4f7f      	SBCI R23,-1
000edf 9508      	RET
                 
                 __ASRW8:
000ee0 2fef      	MOV  R30,R31
000ee1 27ff      	CLR  R31
000ee2 fde7      	SBRC R30,7
000ee3 efff      	SER  R31
000ee4 9508      	RET
                 
                 __CBD1:
000ee5 2ffe      	MOV  R31,R30
000ee6 0fff      	ADD  R31,R31
000ee7 0bff      	SBC  R31,R31
000ee8 2f6f      	MOV  R22,R31
000ee9 2f7f      	MOV  R23,R31
000eea 9508      	RET
                 
                 __CWD1:
000eeb 2f6f      	MOV  R22,R31
000eec 0f66      	ADD  R22,R22
000eed 0b66      	SBC  R22,R22
000eee 2f76      	MOV  R23,R22
000eef 9508      	RET
                 
                 __MULW12U:
000ef0 9ffa      	MUL  R31,R26
000ef1 2df0      	MOV  R31,R0
000ef2 9feb      	MUL  R30,R27
000ef3 0df0      	ADD  R31,R0
000ef4 9fea      	MUL  R30,R26
000ef5 2de0      	MOV  R30,R0
000ef6 0df1      	ADD  R31,R1
000ef7 9508      	RET
                 
                 __DIVB21U:
000ef8 2400      	CLR  R0
000ef9 e098      	LDI  R25,8
                 __DIVB21U1:
000efa 0faa      	LSL  R26
000efb 1c00      	ROL  R0
000efc 1a0e      	SUB  R0,R30
000efd f410      	BRCC __DIVB21U2
000efe 0e0e      	ADD  R0,R30
000eff c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000f00 60a1      	SBR  R26,1
                 __DIVB21U3:
000f01 959a      	DEC  R25
000f02 f7b9      	BRNE __DIVB21U1
000f03 2fea      	MOV  R30,R26
000f04 2da0      	MOV  R26,R0
000f05 9508      	RET
                 
                 __DIVB21:
000f06 d039      	RCALL __CHKSIGNB
000f07 dff0      	RCALL __DIVB21U
000f08 f40e      	BRTC __DIVB211
000f09 95e1      	NEG  R30
                 __DIVB211:
000f0a 9508      	RET
                 
                 __DIVD21U:
000f0b 933f      	PUSH R19
000f0c 934f      	PUSH R20
000f0d 935f      	PUSH R21
000f0e 2400      	CLR  R0
000f0f 2411      	CLR  R1
000f10 2744      	CLR  R20
000f11 2755      	CLR  R21
000f12 e230      	LDI  R19,32
                 __DIVD21U1:
000f13 0faa      	LSL  R26
000f14 1fbb      	ROL  R27
000f15 1f88      	ROL  R24
000f16 1f99      	ROL  R25
000f17 1c00      	ROL  R0
000f18 1c11      	ROL  R1
000f19 1f44      	ROL  R20
000f1a 1f55      	ROL  R21
000f1b 1a0e      	SUB  R0,R30
000f1c 0a1f      	SBC  R1,R31
000f1d 0b46      	SBC  R20,R22
000f1e 0b57      	SBC  R21,R23
000f1f f428      	BRCC __DIVD21U2
000f20 0e0e      	ADD  R0,R30
000f21 1e1f      	ADC  R1,R31
000f22 1f46      	ADC  R20,R22
000f23 1f57      	ADC  R21,R23
000f24 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000f25 60a1      	SBR  R26,1
                 __DIVD21U3:
000f26 953a      	DEC  R19
000f27 f759      	BRNE __DIVD21U1
000f28 01fd      	MOVW R30,R26
000f29 01bc      	MOVW R22,R24
000f2a 01d0      	MOVW R26,R0
000f2b 01ca      	MOVW R24,R20
000f2c 915f      	POP  R21
000f2d 914f      	POP  R20
000f2e 913f      	POP  R19
000f2f 9508      	RET
                 
                 __MODB21:
000f30 94e8      	CLT
000f31 ffa7      	SBRS R26,7
000f32 c002      	RJMP __MODB211
000f33 95a1      	NEG  R26
000f34 9468      	SET
                 __MODB211:
000f35 fde7      	SBRC R30,7
000f36 95e1      	NEG  R30
000f37 dfc0      	RCALL __DIVB21U
000f38 2fea      	MOV  R30,R26
000f39 f40e      	BRTC __MODB212
000f3a 95e1      	NEG  R30
                 __MODB212:
000f3b 9508      	RET
                 
                 __MODD21U:
000f3c dfce      	RCALL __DIVD21U
000f3d 01fd      	MOVW R30,R26
000f3e 01bc      	MOVW R22,R24
000f3f 9508      	RET
                 
                 __CHKSIGNB:
000f40 94e8      	CLT
000f41 ffe7      	SBRS R30,7
000f42 c002      	RJMP __CHKSB1
000f43 95e1      	NEG  R30
000f44 9468      	SET
                 __CHKSB1:
000f45 ffa7      	SBRS R26,7
000f46 c004      	RJMP __CHKSB2
000f47 95a1      	NEG  R26
000f48 f800      	BLD  R0,0
000f49 9403      	INC  R0
000f4a fa00      	BST  R0,0
                 __CHKSB2:
000f4b 9508      	RET
                 
                 __GETW1P:
000f4c 91ed      	LD   R30,X+
000f4d 91fc      	LD   R31,X
000f4e 9711      	SBIW R26,1
000f4f 9508      	RET
                 
                 __GETD1P:
000f50 91ed      	LD   R30,X+
000f51 91fd      	LD   R31,X+
000f52 916d      	LD   R22,X+
000f53 917c      	LD   R23,X
000f54 9713      	SBIW R26,3
000f55 9508      	RET
                 
                 __PUTDP1:
000f56 93ed      	ST   X+,R30
000f57 93fd      	ST   X+,R31
000f58 936d      	ST   X+,R22
000f59 937c      	ST   X,R23
000f5a 9508      	RET
                 
                 __GETD1S0:
000f5b 81e8      	LD   R30,Y
000f5c 81f9      	LDD  R31,Y+1
000f5d 816a      	LDD  R22,Y+2
000f5e 817b      	LDD  R23,Y+3
000f5f 9508      	RET
                 
                 __GETD2S0:
000f60 81a8      	LD   R26,Y
000f61 81b9      	LDD  R27,Y+1
000f62 818a      	LDD  R24,Y+2
000f63 819b      	LDD  R25,Y+3
000f64 9508      	RET
                 
                 __PUTD1S0:
000f65 83e8      	ST   Y,R30
000f66 83f9      	STD  Y+1,R31
000f67 836a      	STD  Y+2,R22
000f68 837b      	STD  Y+3,R23
000f69 9508      	RET
                 
                 __PUTPARD1L:
000f6a e060      	LDI  R22,0
000f6b e070      	LDI  R23,0
                 __PUTPARD1:
000f6c 937a      	ST   -Y,R23
000f6d 936a      	ST   -Y,R22
000f6e 93fa      	ST   -Y,R31
000f6f 93ea      	ST   -Y,R30
000f70 9508      	RET
                 
                 __SWAPD12:
000f71 2e18      	MOV  R1,R24
000f72 2f86      	MOV  R24,R22
000f73 2d61      	MOV  R22,R1
000f74 2e19      	MOV  R1,R25
000f75 2f97      	MOV  R25,R23
000f76 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000f77 2e1b      	MOV  R1,R27
000f78 2fbf      	MOV  R27,R31
000f79 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000f7a 2e1a      	MOV  R1,R26
000f7b 2fae      	MOV  R26,R30
000f7c 2de1      	MOV  R30,R1
000f7d 9508      	RET
                 
                 __CPD10:
000f7e 9730      	SBIW R30,0
000f7f 4060      	SBCI R22,0
000f80 4070      	SBCI R23,0
000f81 9508      	RET
                 
                 __SAVELOCR6:
000f82 935a      	ST   -Y,R21
                 __SAVELOCR5:
000f83 934a      	ST   -Y,R20
                 __SAVELOCR4:
000f84 933a      	ST   -Y,R19
                 __SAVELOCR3:
000f85 932a      	ST   -Y,R18
                 __SAVELOCR2:
000f86 931a      	ST   -Y,R17
000f87 930a      	ST   -Y,R16
000f88 9508      	RET
                 
                 __LOADLOCR6:
000f89 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000f8a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000f8b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000f8c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000f8d 8119      	LDD  R17,Y+1
000f8e 8108      	LD   R16,Y
000f8f 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000f90 0fac      	ADD  R26,R28
000f91 1fbd      	ADC  R27,R29
                 __INITLOC0:
000f92 9005      	LPM  R0,Z+
000f93 920d      	ST   X+,R0
000f94 958a      	DEC  R24
000f95 f7e1      	BRNE __INITLOC0
000f96 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  96 r1 :  47 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   6 r9 :   4 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  73 r21: 106 r22: 145 r23: 128 
r24:  91 r25:  81 r26: 284 r27: 144 r28:  87 r29:   2 r30: 772 r31: 345 
x  : 140 y  : 601 z  :  53 
Registers used: 28 out of 35 (80.0%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  21 
adiw  :  53 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   5 break :   0 breq  :  68 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  76 brpl  :   9 brsh  :  10 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 341 
cbi   :   3 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  62 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  22 cpc   :  25 cpi   : 126 cpse  :   0 dec   :  12 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  25 inc   :   6 jmp   :  53 ld    : 118 ldd   : 284 
ldi   : 402 lds   :  10 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 109 
movw  : 128 mul   :  15 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :   9 out   :  22 pop   :  49 push  :  49 rcall :  81 
ret   : 131 reti  :   3 rjmp  : 191 rol   :  32 ror   :  16 sbc   :  11 
sbci  :  57 sbi   :   6 sbic  :   0 sbis  :   2 sbiw  :  46 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 250 std   : 128 sts   :  13 sub   :   6 subi  :  93 
swap  :   0 tst   :  27 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001f2e   7774    208   7982  131072   6.1%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 8 warnings
