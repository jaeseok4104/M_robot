
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Fri Feb 28 17:25:14 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01c9 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0704 	JMP  _hall_sensor_detection1
00000c 940c 0712 	JMP  _hall_sensor_detection2
00000e 940c 0720 	JMP  _hall_sensor_detection3
000010 940c 0735 	JMP  _hall_sensor_detection4
000012 940c 04fd 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 051a 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0509 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 0544 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0565 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000165 253c
000166 2c64
000167 6425
000168 003e      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x3E,0x0
000169 2e25
00016a 6633
00016b 202c
00016c 2e25      	.DB  0x25,0x2E,0x33,0x66,0x2C,0x20,0x25,0x2E
00016d 6633
00016e 202c
00016f 2e25
000170 6633      	.DB  0x33,0x66,0x2C,0x20,0x25,0x2E,0x33,0x66
000171 202c
000172 6425
000173 000a      	.DB  0x2C,0x20,0x25,0x64,0xA,0x0
                 _0x80003:
000174 0000
000175 0000
000176 0000
000177 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000178 0000
000179 0000
00017a 0000
00017b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017c 0000
00017d 0000
00017e 0000
00017f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000180 0000
000181 0000
000182 0000
000183 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000184 0000
000185 0000
000186 0000
000187 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000188 0000
000189 0000
00018a 0000
00018b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00018c 0000
00018d 0000
00018e 0000
00018f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000190 0000
000191 0000
000192 0000
000193 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000194 0000
000195 0000
000196 0000
000197 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000198 0000
000199 0000
00019a 0000
00019b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019c 0000
00019d 0000
00019e 0000
00019f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a0 0000
0001a1 0000
0001a2 0000
0001a3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a4 0000
0001a5 0000
0001a6 0000
0001a7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a8 0000
0001a9 0000
0001aa 0000
0001ab 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ac 0000
0001ad 0000
0001ae 0000
0001af 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b0 0000
0001b1 0000
0001b2 0000
0001b3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b4 0000
0001b5 0000
0001b6 0000
0001b7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b8 0000
0001b9 0000
0001ba 0000
0001bb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001bc 4e2d
0001bd 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1201): warning: .cseg .db misalignment - padding zero byte
0001be 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1203): warning: .cseg .db misalignment - padding zero byte
0001bf 0001      	.DB  0x1
                 _0x2080000:
0001c0 4e2d
0001c1 4e41
0001c2 4900
0001c3 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1206): warning: .cseg .db misalignment - padding zero byte
0001c4 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001c5 0001      	.DW  0x01
0001c6 058a      	.DW  __seed_G104
0001c7 037e      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001c8 0000      	.DW  0
                 
                 __RESET:
0001c9 94f8      	CLI
0001ca 27ee      	CLR  R30
0001cb bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001cc e0f1      	LDI  R31,1
0001cd bff5      	OUT  MCUCR,R31
0001ce bfe5      	OUT  MCUCR,R30
0001cf 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001d1 e1f8      	LDI  R31,0x18
0001d2 bdf1      	OUT  WDTCR,R31
0001d3 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001d4 e08d      	LDI  R24,(14-2)+1
0001d5 e0a2      	LDI  R26,2
0001d6 27bb      	CLR  R27
                 __CLEAR_REG:
0001d7 93ed      	ST   X+,R30
0001d8 958a      	DEC  R24
0001d9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001da e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001db e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001dc e0a0      	LDI  R26,LOW(__SRAM_START)
0001dd e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001de 93ed      	ST   X+,R30
0001df 9701      	SBIW R24,1
0001e0 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001e1 e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001e2 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001e3 9185      	LPM  R24,Z+
0001e4 9195      	LPM  R25,Z+
0001e5 9700      	SBIW R24,0
0001e6 f061      	BREQ __GLOBAL_INI_END
0001e7 91a5      	LPM  R26,Z+
0001e8 91b5      	LPM  R27,Z+
0001e9 9005      	LPM  R0,Z+
0001ea 9015      	LPM  R1,Z+
0001eb 01bf      	MOVW R22,R30
0001ec 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001ed 9005      	LPM  R0,Z+
0001ee 920d      	ST   X+,R0
0001ef 9701      	SBIW R24,1
0001f0 f7e1      	BRNE __GLOBAL_INI_LOOP
0001f1 01fb      	MOVW R30,R22
0001f2 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001f3 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001f4 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001f5 bfed      	OUT  SPL,R30
0001f6 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001f7 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001f8 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001f9 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001fa 940c 01fc 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define PREDICTION 0.3
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;long int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; 0000 001B     float a_buff;
                 ; 0000 001C     float v_buff;
                 ; 0000 001D 
                 ; 0000 001E     int velocity = 0;
                 ; 0000 001F     int angularV = 0;
                 ; 0000 0020     int velocity_R = 0;
                 ; 0000 0021     int velocity_L = 0;
                 ; 0000 0022     int del_ms = 0;
                 ; 0000 0023     float del_s = 0;
                 ; 0000 0024     float diameter = 0;
                 ; 0000 0025     float d_diameter = 0;
                 ; 0000 0026     float _angular = 0;
                 ; 0000 0027     float d__angular = 0;
                 ; 0000 0028     int goal = 0;
                 ; 0000 0029     char drive_mode = 0;
                 ; 0000 002A 
                 ; 0000 002B     float control_time = 0;
                 ; 0000 002C 
                 ; 0000 002D     float TIMER1_TIME = 0;
                 ; 0000 002E     float TIMER0_TIME = 0;
                 ; 0000 002F     float TIMER0_TIME_print = 0;
                 ; 0000 0030 
                 ; 0000 0031     char STOP_FLAG = 0;
                 ; 0000 0032 
                 ; 0000 0033 
                 ; 0000 0034     float hall_x = 0;
                 ; 0000 0035     float hall_y = 0;
                 ; 0000 0036     float hall_angular = 0;
                 ; 0000 0037     int hall_angular_circula = 0;
                 ; 0000 0038 
                 ; 0000 0039     float hall_velocity = 0;
                 ; 0000 003A     float hall_angularV = 0;
                 ; 0000 003B 
                 ; 0000 003C     float motorR_distance = 0;
                 ; 0000 003D     float motorL_distance = 0;
                 ; 0000 003E 
                 ; 0000 003F     unsigned char BUFF[500] = {0,};
                 ; 0000 0040 
                 ; 0000 0041     usart1_init(bps_115200);
0001fc 97ef      	SBIW R28,63
0001fd 9727      	SBIW R28,7
0001fe 50d2      	SUBI R29,2
                +
0001ff e38e     +LDI R24 , LOW ( 574 )
000200 e092     +LDI R25 , HIGH ( 574 )
                 	__GETWRN 24,25,574
000201 e0a0      	LDI  R26,LOW(0)
000202 e0b0      	LDI  R27,HIGH(0)
000203 e8ec      	LDI  R30,LOW(_0x3*2)
000204 e0f0      	LDI  R31,HIGH(_0x3*2)
000205 940e 13c3 	CALL __INITLOCW
                 ;	a_buff -> Y+578
                 ;	v_buff -> Y+574
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+572
                 ;	del_ms -> Y+570
                 ;	del_s -> Y+566
                 ;	diameter -> Y+562
                 ;	d_diameter -> Y+558
                 ;	_angular -> Y+554
                 ;	d__angular -> Y+550
                 ;	goal -> Y+548
                 ;	drive_mode -> Y+547
                 ;	control_time -> Y+543
                 ;	TIMER1_TIME -> Y+539
                 ;	TIMER0_TIME -> Y+535
                 ;	TIMER0_TIME_print -> Y+531
                 ;	STOP_FLAG -> Y+530
                 ;	hall_x -> Y+526
                 ;	hall_y -> Y+522
                 ;	hall_angular -> Y+518
                 ;	hall_angular_circula -> Y+516
                 ;	hall_velocity -> Y+512
                 ;	hall_angularV -> Y+508
                 ;	motorR_distance -> Y+504
                 ;	motorL_distance -> Y+500
                 ;	BUFF -> Y+0
                +
000207 e000     +LDI R16 , LOW ( 0 )
000208 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000209 e020     +LDI R18 , LOW ( 0 )
00020a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00020b e040     +LDI R20 , LOW ( 0 )
00020c e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00020d e0e7      	LDI  R30,LOW(7)
00020e e0f0      	LDI  R31,HIGH(7)
00020f 93fa      	ST   -Y,R31
000210 93ea      	ST   -Y,R30
000211 940e 059c 	CALL _usart1_init
                 ; 0000 0042     usart0_init(bps_115200);
000213 e0e7      	LDI  R30,LOW(7)
000214 e0f0      	LDI  R31,HIGH(7)
000215 93fa      	ST   -Y,R31
000216 93ea      	ST   -Y,R30
000217 940e 05b4 	CALL _usart0_init
                 ; 0000 0043     timer2_init();
000219 d312      	RCALL _timer2_init
                 ; 0000 0044     timer0_init();
00021a d317      	RCALL _timer0_init
                 ; 0000 0045     timer1_init();
00021b d31a      	RCALL _timer1_init
                 ; 0000 0046     EXT_INT_init();
00021c 940e 06fb 	CALL _EXT_INT_init
                 ; 0000 0047     SREG |= 0x80;
00021e 9478      	BSET 7
                 ; 0000 0048     DDRB.1 = 1;
00021f 9ab9      	SBI  0x17,1
                 ; 0000 0049     DDRB.2 = 1;
000220 9aba      	SBI  0x17,2
                 ; 0000 004A     DDRB.3 = 1;
000221 9abb      	SBI  0x17,3
                 ; 0000 004B     delay_ms(5000);
000222 e8e8      	LDI  R30,LOW(5000)
000223 e1f3      	LDI  R31,HIGH(5000)
000224 940e 0def 	CALL SUBOPT_0x0
                 ; 0000 004C 
                 ; 0000 004D     TIMER0_OVERFLOW = 0;
000226 940e 0df3 	CALL SUBOPT_0x1
                 ; 0000 004E     TCNT0 = 0;
                 ; 0000 004F 
                 ; 0000 0050     while(1)
                 _0xA:
                 ; 0000 0051     {
                 ; 0000 0052         if(CHECK_GETS)
000228 91e0 0581 	LDS  R30,_CHECK_GETS
00022a 30e0      	CPI  R30,0
00022b f411      	BRNE PC+3
00022c 940c 036e 	JMP _0xD
                 ; 0000 0053         {
                 ; 0000 0054             UCSR1B &= ~(1<<RXEN1);
00022e 91e0 009a 	LDS  R30,154
000230 7eef      	ANDI R30,0xEF
000231 93e0 009a 	STS  154,R30
                 ; 0000 0055             // sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
                 ; 0000 0056             // sscanf(VELOCITY_BUFF,"<%d>", &d_diameter);
                 ; 0000 0057             sscanf(VELOCITY_BUFF, "<%d,%d>",&drive_mode, &goal);
000233 e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
000234 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000235 93fa      	ST   -Y,R31
000236 93ea      	ST   -Y,R30
                +
000237 ecea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000238 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000239 93fa      	ST   -Y,R31
00023a 93ea      	ST   -Y,R30
00023b 01fe      	MOVW R30,R28
00023c 5de9      	SUBI R30,LOW(-(551))
00023d 4ffd      	SBCI R31,HIGH(-(551))
00023e 2766      	CLR  R22
00023f 2777      	CLR  R23
000240 940e 1394 	CALL __PUTPARD1
000242 01fe      	MOVW R30,R28
000243 5de4      	SUBI R30,LOW(-(556))
000244 4ffd      	SBCI R31,HIGH(-(556))
000245 2766      	CLR  R22
000246 2777      	CLR  R23
000247 940e 1394 	CALL __PUTPARD1
000249 e088      	LDI  R24,8
00024a 940e 0c0b 	CALL _sscanf
00024c 962c      	ADIW R28,12
                 ; 0000 0058 
                 ; 0000 0059             if(drive_mode == 0){
                +
00024d 01fe     +MOVW R30 , R28
00024e 5ded     +SUBI R30 , LOW ( - 547 )
00024f 4ffd     +SBCI R31 , HIGH ( - 547 )
000250 81e0     +LD R30 , Z
                 	__GETB1SX 547
000251 30e0      	CPI  R30,0
000252 f011      	BREQ PC+3
000253 940c 02ba 	JMP _0xE
                 ; 0000 005A                 d_diameter = (float)goal;
000255 940e 0dfa 	CALL SUBOPT_0x2
                +
000257 01de     +MOVW R26 , R28
000258 5da2     +SUBI R26 , LOW ( - 558 )
000259 4fbd     +SBCI R27 , HIGH ( - 558 )
00025a 93ed     +ST X + , R30
00025b 93fd     +ST X + , R31
00025c 936d     +ST X + , R22
00025d 937c     +ST X , R23
                 	__PUTD1SX 558
                 ; 0000 005B                 if(d_diameter>0){
00025e 940e 0e05 	CALL SUBOPT_0x3
000260 940e 13af 	CALL __CPD02
000262 f534      	BRGE _0xF
                 ; 0000 005C                     diameter = (float)(((float)d_diameter/100)-0.05);
000263 940e 0e0e 	CALL SUBOPT_0x4
000265 01df      	MOVW R26,R30
000266 01cb      	MOVW R24,R22
                +
000267 eced     +LDI R30 , LOW ( 0x3D4CCCCD )
000268 ecfc     +LDI R31 , HIGH ( 0x3D4CCCCD )
000269 e46c     +LDI R22 , BYTE3 ( 0x3D4CCCCD )
00026a e37d     +LDI R23 , BYTE4 ( 0x3D4CCCCD )
                 	__GETD1N 0x3D4CCCCD
00026b 940e 0e16 	CALL SUBOPT_0x5
00026d 940e 0e1b 	CALL SUBOPT_0x6
                 ; 0000 005D                     if((float)(MOTOR_CONT_VELOCITY_MAX_SPEED*MOTOR_DRIVE_VELOCITY_CEL_TIME)<diameter)
00026f 940e 0e23 	CALL SUBOPT_0x7
000271 940e 1290 	CALL __CMPF12
000273 f428      	BRSH _0x10
                 ; 0000 005E                     {
                 ; 0000 005F                         del_s = (float)((diameter + (MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED))/MOTOR_CONT_VELOCITY_MAX_SPEED);
000274 940e 0e28 	CALL SUBOPT_0x8
000276 940e 0e3c 	CALL SUBOPT_0x9
                 ; 0000 0060                         del_s -= MOTOR_DRIVE_VELOCITY_CEL_TIME;
000278 c002      	RJMP _0x20
                 ; 0000 0061                     }
                 ; 0000 0062                     else del_s = (float)(((MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED)+diameter)/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 _0x10:
000279 940e 0e28 	CALL SUBOPT_0x8
                 _0x20:
                +
00027b 01de     +MOVW R26 , R28
00027c 5caa     +SUBI R26 , LOW ( - 566 )
00027d 4fbd     +SBCI R27 , HIGH ( - 566 )
00027e 93ed     +ST X + , R30
00027f 93fd     +ST X + , R31
000280 936d     +ST X + , R22
000281 937c     +ST X , R23
                 	__PUTD1SX 566
                 ; 0000 0063                     del_ms = (int)(del_s*1000);
000282 940e 0e4a 	CALL SUBOPT_0xA
                 ; 0000 0064                     v_buff = MOTOR_CONT_VELOCITY_MAX_SPEED;
                +
000284 e9ea     +LDI R30 , LOW ( 0x3E19999A )
000285 e9f9     +LDI R31 , HIGH ( 0x3E19999A )
000286 e169     +LDI R22 , BYTE3 ( 0x3E19999A )
000287 e37e     +LDI R23 , BYTE4 ( 0x3E19999A )
                 	__GETD1N 0x3E19999A
000288 c027      	RJMP _0x21
                 ; 0000 0065                     a_buff = 0;
                 ; 0000 0066                 }
                 ; 0000 0067                 else{
                 _0xF:
                 ; 0000 0068                     diameter = (float)(((float)d_diameter/100)+0.05);
000289 940e 0e0e 	CALL SUBOPT_0x4
                +
00028b ecad     +LDI R26 , LOW ( 0x3D4CCCCD )
00028c ecbc     +LDI R27 , HIGH ( 0x3D4CCCCD )
00028d e48c     +LDI R24 , BYTE3 ( 0x3D4CCCCD )
00028e e39d     +LDI R25 , BYTE4 ( 0x3D4CCCCD )
                 	__GETD2N 0x3D4CCCCD
00028f 940e 11ad 	CALL __ADDF12
000291 940e 0e1b 	CALL SUBOPT_0x6
                 ; 0000 0069                     diameter = -diameter;
000293 940e 1107 	CALL __ANEGF1
000295 940e 0e1b 	CALL SUBOPT_0x6
                 ; 0000 006A                     if((float)(MOTOR_CONT_VELOCITY_MAX_SPEED*MOTOR_DRIVE_VELOCITY_CEL_TIME)<diameter)
000297 940e 0e23 	CALL SUBOPT_0x7
000299 940e 1290 	CALL __CMPF12
00029b f428      	BRSH _0x13
                 ; 0000 006B                     {
                 ; 0000 006C                         del_s = (float)((diameter + (MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED))/MOTOR_CONT_VELOCITY_MAX_SPEED);
00029c 940e 0e28 	CALL SUBOPT_0x8
00029e 940e 0e3c 	CALL SUBOPT_0x9
                 ; 0000 006D                         del_s -= MOTOR_DRIVE_VELOCITY_CEL_TIME;
0002a0 c002      	RJMP _0x22
                 ; 0000 006E                     }
                 ; 0000 006F                     else del_s = (float)(((MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED)+diameter)/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 _0x13:
0002a1 940e 0e28 	CALL SUBOPT_0x8
                 _0x22:
                +
0002a3 01de     +MOVW R26 , R28
0002a4 5caa     +SUBI R26 , LOW ( - 566 )
0002a5 4fbd     +SBCI R27 , HIGH ( - 566 )
0002a6 93ed     +ST X + , R30
0002a7 93fd     +ST X + , R31
0002a8 936d     +ST X + , R22
0002a9 937c     +ST X , R23
                 	__PUTD1SX 566
                 ; 0000 0070                     del_ms = (int)(del_s*1000);
0002aa 940e 0e4a 	CALL SUBOPT_0xA
                 ; 0000 0071 
                 ; 0000 0072                     v_buff = -MOTOR_CONT_VELOCITY_MAX_SPEED;
                +
0002ac e9ea     +LDI R30 , LOW ( 0xBE19999A )
0002ad e9f9     +LDI R31 , HIGH ( 0xBE19999A )
0002ae e169     +LDI R22 , BYTE3 ( 0xBE19999A )
0002af eb7e     +LDI R23 , BYTE4 ( 0xBE19999A )
                 	__GETD1N 0xBE19999A
                 _0x21:
                +
0002b0 01de     +MOVW R26 , R28
0002b1 5ca2     +SUBI R26 , LOW ( - 574 )
0002b2 4fbd     +SBCI R27 , HIGH ( - 574 )
0002b3 93ed     +ST X + , R30
0002b4 93fd     +ST X + , R31
0002b5 936d     +ST X + , R22
0002b6 937c     +ST X , R23
                 	__PUTD1SX 574
                 ; 0000 0073                     a_buff = 0;
0002b7 940e 0e60 	CALL SUBOPT_0xB
                 ; 0000 0074                 }
                 ; 0000 0075             }
                 ; 0000 0076             else if(drive_mode == 1){
0002b9 c06d      	RJMP _0x15
                 _0xE:
                +
0002ba 01de     +MOVW R26 , R28
0002bb 5dad     +SUBI R26 , LOW ( - 547 )
0002bc 4fbd     +SBCI R27 , HIGH ( - 547 )
0002bd 91ac     +LD R26 , X
                 	__GETB2SX 547
0002be 30a1      	CPI  R26,LOW(0x1)
0002bf f011      	BREQ PC+3
0002c0 940c 0327 	JMP _0x16
                 ; 0000 0077                 d__angular = (float)goal;
0002c2 940e 0dfa 	CALL SUBOPT_0x2
                +
0002c4 01de     +MOVW R26 , R28
0002c5 5daa     +SUBI R26 , LOW ( - 550 )
0002c6 4fbd     +SBCI R27 , HIGH ( - 550 )
0002c7 93ed     +ST X + , R30
0002c8 93fd     +ST X + , R31
0002c9 936d     +ST X + , R22
0002ca 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 0078                 if(d__angular>0){
                +
0002cb 01de     +MOVW R26 , R28
0002cc 5daa     +SUBI R26 , LOW ( - 550 )
0002cd 4fbd     +SBCI R27 , HIGH ( - 550 )
0002ce 900d     +LD R0 , X +
0002cf 901d     +LD R1 , X +
0002d0 918d     +LD R24 , X +
0002d1 919c     +LD R25 , X
0002d2 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
0002d3 940e 13af 	CALL __CPD02
0002d5 f504      	BRGE _0x17
                 ; 0000 0079                     _angular = (float)((float)(d__angular-14)/Circular);
0002d6 940e 0e69 	CALL SUBOPT_0xC
0002d8 940e 11a6 	CALL __SUBF12
0002da 940e 0e76 	CALL SUBOPT_0xD
                 ; 0000 007A                     if((float)(MOTOR_CONT_ANGULAR_MAX_SPEED*MOTOR_DRIVE_ANGULAR_CEL_TIME)<_angular)
0002dc 940e 0e86 	CALL SUBOPT_0xE
0002de 940e 1290 	CALL __CMPF12
0002e0 f428      	BRSH _0x18
                 ; 0000 007B                     {
                 ; 0000 007C                         del_s = (float)((_angular + (MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED))/MOTOR_CONT_ANGULAR_MAX_SPEED);
0002e1 940e 0e8b 	CALL SUBOPT_0xF
0002e3 940e 0e9f 	CALL SUBOPT_0x10
                 ; 0000 007D                         del_s -= MOTOR_DRIVE_ANGULAR_CEL_TIME;
0002e5 c002      	RJMP _0x23
                 ; 0000 007E                     }
                 ; 0000 007F                     else del_s = (float)(((MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED)+_angular)/MOTOR_CONT_ANGULAR_MAX_SPEED);
                 _0x18:
0002e6 940e 0e8b 	CALL SUBOPT_0xF
                 _0x23:
                +
0002e8 01de     +MOVW R26 , R28
0002e9 5caa     +SUBI R26 , LOW ( - 566 )
0002ea 4fbd     +SBCI R27 , HIGH ( - 566 )
0002eb 93ed     +ST X + , R30
0002ec 93fd     +ST X + , R31
0002ed 936d     +ST X + , R22
0002ee 937c     +ST X , R23
                 	__PUTD1SX 566
                 ; 0000 0080                     del_ms = (int)(del_s*1000);
0002ef 940e 0e4a 	CALL SUBOPT_0xA
                 ; 0000 0081 
                 ; 0000 0082                     v_buff = 0;
0002f1 940e 0ead 	CALL SUBOPT_0x11
                 ; 0000 0083                     a_buff = MOTOR_CONT_ANGULAR_MAX_SPEED;
0002f3 940e 0eb6 	CALL SUBOPT_0x12
0002f5 c02a      	RJMP _0x24
                 ; 0000 0084                 }
                 ; 0000 0085                 else{
                 _0x17:
                 ; 0000 0086                     _angular = (float)((float)(d__angular+14)/Circular);
0002f6 940e 0e69 	CALL SUBOPT_0xC
0002f8 940e 11ad 	CALL __ADDF12
0002fa 940e 0e76 	CALL SUBOPT_0xD
                 ; 0000 0087                     _angular = -_angular;
0002fc 940e 1107 	CALL __ANEGF1
                +
0002fe 01de     +MOVW R26 , R28
0002ff 5da6     +SUBI R26 , LOW ( - 554 )
000300 4fbd     +SBCI R27 , HIGH ( - 554 )
000301 93ed     +ST X + , R30
000302 93fd     +ST X + , R31
000303 936d     +ST X + , R22
000304 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 0088                     if((float)(MOTOR_CONT_ANGULAR_MAX_SPEED*MOTOR_DRIVE_ANGULAR_CEL_TIME)<_angular)
000305 940e 0e86 	CALL SUBOPT_0xE
000307 940e 1290 	CALL __CMPF12
000309 f428      	BRSH _0x1B
                 ; 0000 0089                     {
                 ; 0000 008A                         del_s = (float)((_angular + (MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED))/MOTOR_CONT_ANGULAR_MAX_SPEED);
00030a 940e 0e8b 	CALL SUBOPT_0xF
00030c 940e 0e9f 	CALL SUBOPT_0x10
                 ; 0000 008B                         del_s -= MOTOR_DRIVE_ANGULAR_CEL_TIME;
00030e c002      	RJMP _0x25
                 ; 0000 008C                     }
                 ; 0000 008D                     else del_s = (float)(((MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED)+_angular)/MOTOR_CONT_ANGULAR_MAX_SPEED);
                 _0x1B:
00030f 940e 0e8b 	CALL SUBOPT_0xF
                 _0x25:
                +
000311 01de     +MOVW R26 , R28
000312 5caa     +SUBI R26 , LOW ( - 566 )
000313 4fbd     +SBCI R27 , HIGH ( - 566 )
000314 93ed     +ST X + , R30
000315 93fd     +ST X + , R31
000316 936d     +ST X + , R22
000317 937c     +ST X , R23
                 	__PUTD1SX 566
                 ; 0000 008E                     del_ms = (int)(del_s*1000);
000318 940e 0e4a 	CALL SUBOPT_0xA
                 ; 0000 008F 
                 ; 0000 0090                     v_buff = 0;
00031a 940e 0ead 	CALL SUBOPT_0x11
                 ; 0000 0091                     a_buff = -MOTOR_CONT_ANGULAR_MAX_SPEED;
                +
00031c e0e0     +LDI R30 , LOW ( 0xC0000000 )
00031d e0f0     +LDI R31 , HIGH ( 0xC0000000 )
00031e e060     +LDI R22 , BYTE3 ( 0xC0000000 )
00031f ec70     +LDI R23 , BYTE4 ( 0xC0000000 )
                 	__GETD1N 0xC0000000
                 _0x24:
                +
000320 01de     +MOVW R26 , R28
000321 5bae     +SUBI R26 , LOW ( - 578 )
000322 4fbd     +SBCI R27 , HIGH ( - 578 )
000323 93ed     +ST X + , R30
000324 93fd     +ST X + , R31
000325 936d     +ST X + , R22
000326 937c     +ST X , R23
                 	__PUTD1SX 578
                 ; 0000 0092                 }
                 ; 0000 0093             }
                 ; 0000 0094             // v_buff = (float)velocity/1000;
                 ; 0000 0095             // a_buff = (float)angularV/1000;
                 ; 0000 0096             TIMER0_TIME_print = 0;
                 _0x16:
                 _0x15:
000327 e0e0      	LDI  R30,LOW(0)
                +
000328 01de     +MOVW R26 , R28
000329 5ead     +SUBI R26 , LOW ( - 531 )
00032a 4fbd     +SBCI R27 , HIGH ( - 531 )
00032b 93ed     +ST X + , R30
00032c 93ed     +ST X + , R30
00032d 93ed     +ST X + , R30
00032e 93ec     +ST X , R30
                 	__CLRD1SX 531
                 ; 0000 0097             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
00032f 01fe      	MOVW R30,R28
000330 5ce2      	SUBI R30,LOW(-(574))
000331 4ffd      	SBCI R31,HIGH(-(574))
000332 93fa      	ST   -Y,R31
000333 93ea      	ST   -Y,R30
000334 01fe      	MOVW R30,R28
000335 5bec      	SUBI R30,LOW(-(580))
000336 4ffd      	SBCI R31,HIGH(-(580))
000337 93fa      	ST   -Y,R31
000338 93ea      	ST   -Y,R30
000339 b7ed      	IN   R30,SPL
00033a b7fe      	IN   R31,SPH
00033b 9731      	SBIW R30,1
00033c 93fa      	ST   -Y,R31
00033d 93ea      	ST   -Y,R30
00033e 935f      	PUSH R21
00033f 934f      	PUSH R20
000340 01fe      	MOVW R30,R28
000341 5bee      	SUBI R30,LOW(-(578))
000342 4ffd      	SBCI R31,HIGH(-(578))
000343 93fa      	ST   -Y,R31
000344 93ea      	ST   -Y,R30
000345 940e 0661 	CALL _Make_MSPEED
000347 914f      	POP  R20
000348 915f      	POP  R21
                 ; 0000 0098 
                 ; 0000 0099             oper_Disapath(velocity_R, velocity_L);
000349 935a      	ST   -Y,R21
00034a 934a      	ST   -Y,R20
                +
00034b 01fe     +MOVW R30 , R28
00034c 5ce2     +SUBI R30 , LOW ( - 574 )
00034d 4ffd     +SBCI R31 , HIGH ( - 574 )
00034e 9001     +LD R0 , Z +
00034f 81f0     +LD R31 , Z
000350 2de0     +MOV R30 , R0
                 	__GETW1SX 574
000351 93fa      	ST   -Y,R31
000352 93ea      	ST   -Y,R30
000353 940e 06dd 	CALL _oper_Disapath
                 ; 0000 009A 
                 ; 0000 009B             TIMER1_TIME = 0;
000355 e0e0      	LDI  R30,LOW(0)
                +
000356 01de     +MOVW R26 , R28
000357 5ea5     +SUBI R26 , LOW ( - 539 )
000358 4fbd     +SBCI R27 , HIGH ( - 539 )
000359 93ed     +ST X + , R30
00035a 93ed     +ST X + , R30
00035b 93ed     +ST X + , R30
00035c 93ec     +ST X , R30
                 	__CLRD1SX 539
                 ; 0000 009C             TIMER1_OVERFLOW = 0;
00035d 940e 0ebb 	CALL SUBOPT_0x13
                 ; 0000 009D             TCNT1L = 0;
00035f e0e0      	LDI  R30,LOW(0)
000360 bdec      	OUT  0x2C,R30
                 ; 0000 009E 
                 ; 0000 009F             STOP_FLAG = 1;
000361 e0e1      	LDI  R30,LOW(1)
                +
000362 01de     +MOVW R26 , R28
000363 5eae     +SUBI R26 , LOW ( - 530 )
000364 4fbd     +SBCI R27 , HIGH ( - 530 )
000365 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00A0             CHECK_GETS = 0;
000366 e0e0      	LDI  R30,LOW(0)
000367 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0000 00A1             UCSR1B |=(1<<RXEN1);
000369 91e0 009a 	LDS  R30,154
00036b 61e0      	ORI  R30,0x10
00036c 93e0 009a 	STS  154,R30
                 ; 0000 00A2         }
                 ; 0000 00A3 
                 ; 0000 00A4         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
00036e 91e0 0500 	LDS  R30,_TIMER1_OVERFLOW
000370 91f0 0501 	LDS  R31,_TIMER1_OVERFLOW+1
000372 9160 0502 	LDS  R22,_TIMER1_OVERFLOW+2
000374 9170 0503 	LDS  R23,_TIMER1_OVERFLOW+3
                +
000376 efaf     +LDI R26 , LOW ( 0xFF )
000377 e0b0     +LDI R27 , HIGH ( 0xFF )
000378 e080     +LDI R24 , BYTE3 ( 0xFF )
000379 e090     +LDI R25 , BYTE4 ( 0xFF )
                 	__GETD2N 0xFF
00037a 940e 1300 	CALL __MULD12
00037c 01df      	MOVW R26,R30
00037d 01cb      	MOVW R24,R22
00037e b5ec      	IN   R30,0x2C
00037f e0f0      	LDI  R31,0
000380 940e 12d0 	CALL __CWD1
000382 940e 12b4 	CALL __ADDD12
000384 940e 1173 	CALL __CDF1
                +
000386 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000387 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
000388 e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
000389 e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00038a 940e 11fd 	CALL __MULF12
                +
00038c 01de     +MOVW R26 , R28
00038d 5ea5     +SUBI R26 , LOW ( - 539 )
00038e 4fbd     +SBCI R27 , HIGH ( - 539 )
00038f 93ed     +ST X + , R30
000390 93fd     +ST X + , R31
000391 936d     +ST X + , R22
000392 937c     +ST X , R23
                 	__PUTD1SX 539
                 ; 0000 00A5 
                 ; 0000 00A6         if(del_ms<TIMER1_TIME)
                +
000393 01de     +MOVW R26 , R28
000394 5ca6     +SUBI R26 , LOW ( - 570 )
000395 4fbd     +SBCI R27 , HIGH ( - 570 )
000396 900d     +LD R0 , X +
000397 91bc     +LD R27 , X
000398 2da0     +MOV R26 , R0
                 	__GETW2SX 570
000399 940e 12d5 	CALL __CWD2
00039b 940e 139b 	CALL __CDF2
00039d 940e 1290 	CALL __CMPF12
00039f f498      	BRSH _0x1D
                 ; 0000 00A7         {
                 ; 0000 00A8             oper_Disapath(0,0);
0003a0 e0e0      	LDI  R30,LOW(0)
0003a1 e0f0      	LDI  R31,HIGH(0)
0003a2 93fa      	ST   -Y,R31
0003a3 93ea      	ST   -Y,R30
0003a4 93fa      	ST   -Y,R31
0003a5 93ea      	ST   -Y,R30
0003a6 940e 06dd 	CALL _oper_Disapath
                 ; 0000 00A9             TIMER1_OVERFLOW = 0;
0003a8 940e 0ebb 	CALL SUBOPT_0x13
                 ; 0000 00AA             v_buff = 0;
0003aa 940e 0ead 	CALL SUBOPT_0x11
                 ; 0000 00AB             a_buff = 0;
0003ac 940e 0e60 	CALL SUBOPT_0xB
                 ; 0000 00AC             STOP_FLAG = 0;
0003ae e0e0      	LDI  R30,LOW(0)
                +
0003af 01de     +MOVW R26 , R28
0003b0 5eae     +SUBI R26 , LOW ( - 530 )
0003b1 4fbd     +SBCI R27 , HIGH ( - 530 )
0003b2 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00AD         }
                 ; 0000 00AE 
                 ; 0000 00AF         // if(goal_currentV_R==0 && goal_currentV_L==0) TIMER0_TIME_print = 0;
                 ; 0000 00B0 
                 ; 0000 00B1         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
                 _0x1D:
0003b3 91a0 056a 	LDS  R26,_TIMER0_OVERFLOW
0003b5 91b0 056b 	LDS  R27,_TIMER0_OVERFLOW+1
0003b7 efef      	LDI  R30,LOW(255)
0003b8 940e 12fa 	CALL __MULB1W2U
0003ba 01df      	MOVW R26,R30
0003bb b7e2      	IN   R30,0x32
0003bc e0f0      	LDI  R31,0
0003bd 0fea      	ADD  R30,R26
0003be 1ffb      	ADC  R31,R27
0003bf 2766      	CLR  R22
0003c0 2777      	CLR  R23
0003c1 940e 1173 	CALL __CDF1
                +
0003c3 eaae     +LDI R26 , LOW ( 0x3891A2AE )
0003c4 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
0003c5 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
0003c6 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
0003c7 940e 11fd 	CALL __MULF12
                +
0003c9 01de     +MOVW R26 , R28
0003ca 5ea1     +SUBI R26 , LOW ( - 543 )
0003cb 4fbd     +SBCI R27 , HIGH ( - 543 )
0003cc 93ed     +ST X + , R30
0003cd 93fd     +ST X + , R31
0003ce 936d     +ST X + , R22
0003cf 937c     +ST X , R23
                 	__PUTD1SX 543
                 ; 0000 00B2         TIMER0_OVERFLOW = 0;
0003d0 940e 0df3 	CALL SUBOPT_0x1
                 ; 0000 00B3         TCNT0 = 0;
                 ; 0000 00B4 
                 ; 0000 00B5         motorR_distance = (float)(MOTORR_HALL*0.4/160);
0003d2 91e0 0582 	LDS  R30,_MOTORR_HALL
0003d4 91f0 0583 	LDS  R31,_MOTORR_HALL+1
0003d6 9160 0584 	LDS  R22,_MOTORR_HALL+2
0003d8 9170 0585 	LDS  R23,_MOTORR_HALL+3
0003da 940e 0ec5 	CALL SUBOPT_0x14
                +
0003dc 01de     +MOVW R26 , R28
0003dd 50a8     +SUBI R26 , LOW ( - 504 )
0003de 4fbe     +SBCI R27 , HIGH ( - 504 )
0003df 93ed     +ST X + , R30
0003e0 93fd     +ST X + , R31
0003e1 936d     +ST X + , R22
0003e2 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 00B6         motorL_distance = (float)(MOTORL_HALL*0.4/160);
0003e3 91e0 0586 	LDS  R30,_MOTORL_HALL
0003e5 91f0 0587 	LDS  R31,_MOTORL_HALL+1
0003e7 9160 0588 	LDS  R22,_MOTORL_HALL+2
0003e9 9170 0589 	LDS  R23,_MOTORL_HALL+3
0003eb 940e 0ec5 	CALL SUBOPT_0x14
                +
0003ed 01de     +MOVW R26 , R28
0003ee 50ac     +SUBI R26 , LOW ( - 500 )
0003ef 4fbe     +SBCI R27 , HIGH ( - 500 )
0003f0 93ed     +ST X + , R30
0003f1 93fd     +ST X + , R31
0003f2 936d     +ST X + , R22
0003f3 937c     +ST X , R23
                 	__PUTD1SX 500
                 ; 0000 00B7 
                 ; 0000 00B8         TIMER0_TIME += control_time;
                +
0003f4 01fe     +MOVW R30 , R28
0003f5 5ee1     +SUBI R30 , LOW ( - 543 )
0003f6 4ffd     +SBCI R31 , HIGH ( - 543 )
0003f7 9001     +LD R0 , Z +
0003f8 9011     +LD R1 , Z +
0003f9 9161     +LD R22 , Z +
0003fa 8170     +LD R23 , Z
0003fb 01f0     +MOVW R30 , R0
                 	__GETD1SX 543
0003fc 940e 0ed6 	CALL SUBOPT_0x15
0003fe 940e 11ad 	CALL __ADDF12
                +
000400 01de     +MOVW R26 , R28
000401 5ea9     +SUBI R26 , LOW ( - 535 )
000402 4fbd     +SBCI R27 , HIGH ( - 535 )
000403 93ed     +ST X + , R30
000404 93fd     +ST X + , R31
000405 936d     +ST X + , R22
000406 937c     +ST X , R23
                 	__PUTD1SX 535
                 ; 0000 00B9         if(TIMER0_TIME>0.01){
000407 940e 0ed6 	CALL SUBOPT_0x15
                +
000409 e0ea     +LDI R30 , LOW ( 0x3C23D70A )
00040a edf7     +LDI R31 , HIGH ( 0x3C23D70A )
00040b e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
00040c e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
00040d 940e 1290 	CALL __CMPF12
00040f f009      	BREQ PC+2
000410 f410      	BRCC PC+3
000411 940c 04fb 	JMP  _0x1E
                 ; 0000 00BA             TIMER0_TIME_print += TIMER0_TIME;
000413 940e 0edf 	CALL SUBOPT_0x16
                +
000415 01de     +MOVW R26 , R28
000416 5ead     +SUBI R26 , LOW ( - 531 )
000417 4fbd     +SBCI R27 , HIGH ( - 531 )
000418 900d     +LD R0 , X +
000419 901d     +LD R1 , X +
00041a 918d     +LD R24 , X +
00041b 919c     +LD R25 , X
00041c 01d0     +MOVW R26 , R0
                 	__GETD2SX 531
00041d 940e 11ad 	CALL __ADDF12
                +
00041f 01de     +MOVW R26 , R28
000420 5ead     +SUBI R26 , LOW ( - 531 )
000421 4fbd     +SBCI R27 , HIGH ( - 531 )
000422 93ed     +ST X + , R30
000423 93fd     +ST X + , R31
000424 936d     +ST X + , R22
000425 937c     +ST X , R23
                 	__PUTD1SX 531
                 ; 0000 00BB             MOTORR_HALL = 0;
000426 e0e0      	LDI  R30,LOW(0)
000427 93e0 0582 	STS  _MOTORR_HALL,R30
000429 93e0 0583 	STS  _MOTORR_HALL+1,R30
00042b 93e0 0584 	STS  _MOTORR_HALL+2,R30
00042d 93e0 0585 	STS  _MOTORR_HALL+3,R30
                 ; 0000 00BC             MOTORL_HALL = 0;
00042f 93e0 0586 	STS  _MOTORL_HALL,R30
000431 93e0 0587 	STS  _MOTORL_HALL+1,R30
000433 93e0 0588 	STS  _MOTORL_HALL+2,R30
000435 93e0 0589 	STS  _MOTORL_HALL+3,R30
                 ; 0000 00BD 
                 ; 0000 00BE             hall_velocity = (float)((motorR_distance+motorL_distance)/(2*TIMER0_TIME));
000437 940e 0ee8 	CALL SUBOPT_0x17
000439 937f      	PUSH R23
00043a 936f      	PUSH R22
00043b 93ff      	PUSH R31
00043c 93ef      	PUSH R30
00043d 940e 0edf 	CALL SUBOPT_0x16
                +
00043f e0a0     +LDI R26 , LOW ( 0x40000000 )
000440 e0b0     +LDI R27 , HIGH ( 0x40000000 )
000441 e080     +LDI R24 , BYTE3 ( 0x40000000 )
000442 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
000443 940e 11fd 	CALL __MULF12
000445 91af      	POP  R26
000446 91bf      	POP  R27
000447 918f      	POP  R24
000448 919f      	POP  R25
000449 940e 124b 	CALL __DIVF21
                +
00044b 01de     +MOVW R26 , R28
00044c 50a0     +SUBI R26 , LOW ( - 512 )
00044d 4fbe     +SBCI R27 , HIGH ( - 512 )
00044e 93ed     +ST X + , R30
00044f 93fd     +ST X + , R31
000450 936d     +ST X + , R22
000451 937c     +ST X , R23
                 	__PUTD1SX 512
                 ; 0000 00BF             hall_angularV = (float)((motorR_distance-motorL_distance)/(Length*TIMER0_TIME));
000452 940e 0efb 	CALL SUBOPT_0x18
000454 937f      	PUSH R23
000455 936f      	PUSH R22
000456 93ff      	PUSH R31
000457 93ef      	PUSH R30
000458 940e 0edf 	CALL SUBOPT_0x16
00045a 940e 0f0e 	CALL SUBOPT_0x19
00045c 91af      	POP  R26
00045d 91bf      	POP  R27
00045e 918f      	POP  R24
00045f 919f      	POP  R25
000460 940e 124b 	CALL __DIVF21
                +
000462 01de     +MOVW R26 , R28
000463 50a4     +SUBI R26 , LOW ( - 508 )
000464 4fbe     +SBCI R27 , HIGH ( - 508 )
000465 93ed     +ST X + , R30
000466 93fd     +ST X + , R31
000467 936d     +ST X + , R22
000468 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 00C0             hall_angular += (float)((motorR_distance-motorL_distance)/Length);
000469 940e 0efb 	CALL SUBOPT_0x18
00046b 01df      	MOVW R26,R30
00046c 01cb      	MOVW R24,R22
                +
00046d eced     +LDI R30 , LOW ( 0x3E8CCCCD )
00046e ecfc     +LDI R31 , HIGH ( 0x3E8CCCCD )
00046f e86c     +LDI R22 , BYTE3 ( 0x3E8CCCCD )
000470 e37e     +LDI R23 , BYTE4 ( 0x3E8CCCCD )
                 	__GETD1N 0x3E8CCCCD
000471 940e 124b 	CALL __DIVF21
000473 940e 0f15 	CALL SUBOPT_0x1A
000475 940e 11ad 	CALL __ADDF12
                +
000477 01de     +MOVW R26 , R28
000478 5faa     +SUBI R26 , LOW ( - 518 )
000479 4fbd     +SBCI R27 , HIGH ( - 518 )
00047a 93ed     +ST X + , R30
00047b 93fd     +ST X + , R31
00047c 936d     +ST X + , R22
00047d 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 00C1             hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
00047e 940e 0ee8 	CALL SUBOPT_0x17
000480 940e 0f1e 	CALL SUBOPT_0x1B
000482 937f      	PUSH R23
000483 936f      	PUSH R22
000484 93ff      	PUSH R31
000485 93ef      	PUSH R30
000486 940e 0f24 	CALL SUBOPT_0x1C
000488 940e 0d06 	CALL _cos
00048a 91af      	POP  R26
00048b 91bf      	POP  R27
00048c 918f      	POP  R24
00048d 919f      	POP  R25
00048e 940e 11fd 	CALL __MULF12
                +
000490 01de     +MOVW R26 , R28
000491 5fa2     +SUBI R26 , LOW ( - 526 )
000492 4fbd     +SBCI R27 , HIGH ( - 526 )
000493 900d     +LD R0 , X +
000494 901d     +LD R1 , X +
000495 918d     +LD R24 , X +
000496 919c     +LD R25 , X
000497 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
000498 940e 11ad 	CALL __ADDF12
                +
00049a 01de     +MOVW R26 , R28
00049b 5fa2     +SUBI R26 , LOW ( - 526 )
00049c 4fbd     +SBCI R27 , HIGH ( - 526 )
00049d 93ed     +ST X + , R30
00049e 93fd     +ST X + , R31
00049f 936d     +ST X + , R22
0004a0 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 00C2             hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
0004a1 940e 0ee8 	CALL SUBOPT_0x17
0004a3 940e 0f1e 	CALL SUBOPT_0x1B
0004a5 937f      	PUSH R23
0004a6 936f      	PUSH R22
0004a7 93ff      	PUSH R31
0004a8 93ef      	PUSH R30
0004a9 940e 0f24 	CALL SUBOPT_0x1C
0004ab 940e 0c7f 	CALL _sin
0004ad 91af      	POP  R26
0004ae 91bf      	POP  R27
0004af 918f      	POP  R24
0004b0 919f      	POP  R25
0004b1 940e 11fd 	CALL __MULF12
                +
0004b3 01de     +MOVW R26 , R28
0004b4 5fa6     +SUBI R26 , LOW ( - 522 )
0004b5 4fbd     +SBCI R27 , HIGH ( - 522 )
0004b6 900d     +LD R0 , X +
0004b7 901d     +LD R1 , X +
0004b8 918d     +LD R24 , X +
0004b9 919c     +LD R25 , X
0004ba 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
0004bb 940e 11ad 	CALL __ADDF12
                +
0004bd 01de     +MOVW R26 , R28
0004be 5fa6     +SUBI R26 , LOW ( - 522 )
0004bf 4fbd     +SBCI R27 , HIGH ( - 522 )
0004c0 93ed     +ST X + , R30
0004c1 93fd     +ST X + , R31
0004c2 936d     +ST X + , R22
0004c3 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 00C3             hall_angular_circula = (int)(hall_angular*Circular);
0004c4 940e 0f15 	CALL SUBOPT_0x1A
                +
0004c6 efe6     +LDI R30 , LOW ( 0x426528F6 )
0004c7 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
0004c8 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
0004c9 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
0004ca 940e 0f2f 	CALL SUBOPT_0x1D
                +
0004cc 01de     +MOVW R26 , R28
0004cd 5fac     +SUBI R26 , LOW ( - 516 )
0004ce 4fbd     +SBCI R27 , HIGH ( - 516 )
0004cf 93ed     +ST X + , R30
0004d0 93fc     +ST X , R31
                 	__PUTW1SX 516
                 ; 0000 00C4             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 00C5             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 00C6             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 00C7             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d, %d\n", TIMER0_TIME_print, d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 00C8             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d, %.3f\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula, TIMER0_TIME_print);
                 ; 0000 00C9             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f \n",TIMER0_TIME_print, g_velocity, d_velocity, hall_velocity);
                 ; 0000 00CA             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d\n",TIMER0_TIME_print,g_velocity, hall_velocity, g_x, hall_x, del_ms);
                 ; 0000 00CB             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n",TIMER0_TIME_print,g_velocity, d_velocity, hall_velocity,);
                 ; 0000 00CC             sprintf(BUFF, "%.3f, %.3f, %.3f, %d\n", TIMER0_TIME_print, hall_x, hall_y, hall_angular_circula);
0004d1 01fe      	MOVW R30,R28
0004d2 93fa      	ST   -Y,R31
0004d3 93ea      	ST   -Y,R30
                +
0004d4 ede2     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
0004d5 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
0004d6 93fa      	ST   -Y,R31
0004d7 93ea      	ST   -Y,R30
0004d8 940e 0edf 	CALL SUBOPT_0x16
0004da 940e 0f34 	CALL SUBOPT_0x1E
0004dc 940e 0f34 	CALL SUBOPT_0x1E
0004de 940e 1394 	CALL __PUTPARD1
                +
0004e0 01fe     +MOVW R30 , R28
0004e1 5eec     +SUBI R30 , LOW ( - 532 )
0004e2 4ffd     +SBCI R31 , HIGH ( - 532 )
0004e3 9001     +LD R0 , Z +
0004e4 81f0     +LD R31 , Z
0004e5 2de0     +MOV R30 , R0
                 	__GETW1SX 532
0004e6 940e 12d0 	CALL __CWD1
0004e8 940e 1394 	CALL __PUTPARD1
0004ea e180      	LDI  R24,16
0004eb 940e 0a75 	CALL _sprintf
0004ed 9664      	ADIW R28,20
                 ; 0000 00CD             // sprintf(BUFF, "%.3f, %.3f\n", TIMER0_TIME_print, hall_x);
                 ; 0000 00CE 
                 ; 0000 00CF             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 00D0             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 00D1             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 00D2             //                                                   d_velocity, g_velocity, d_x, g_x, TIMER0_TIME_print);
                 ; 0000 00D3             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 00D4             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -_buff);
                 ; 0000 00D5             puts_USART1(BUFF);
0004ee 01fe      	MOVW R30,R28
0004ef 93fa      	ST   -Y,R31
0004f0 93ea      	ST   -Y,R30
0004f1 940e 05d2 	CALL _puts_USART1
                 ; 0000 00D6             TIMER0_TIME = 0;
0004f3 e0e0      	LDI  R30,LOW(0)
                +
0004f4 01de     +MOVW R26 , R28
0004f5 5ea9     +SUBI R26 , LOW ( - 535 )
0004f6 4fbd     +SBCI R27 , HIGH ( - 535 )
0004f7 93ed     +ST X + , R30
0004f8 93ed     +ST X + , R30
0004f9 93ed     +ST X + , R30
0004fa 93ec     +ST X , R30
                 	__CLRD1SX 535
                 ; 0000 00D7         }
                 ; 0000 00D8     }
                 _0x1E:
0004fb cd2c      	RJMP _0xA
                 ; 0000 00D9 }
                 _0x1F:
0004fc cfff      	RJMP _0x1F
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
0004fd 93ea      	ST   -Y,R30
0004fe b7ef      	IN   R30,SREG
0004ff 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
000500 91e0 0504 	LDS  R30,_TIMER2_OVERFLOW
000502 5fef      	SUBI R30,-LOW(1)
000503 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
000505 91e9      	LD   R30,Y+
000506 bfef      	OUT  SREG,R30
000507 91e9      	LD   R30,Y+
000508 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
000509 93aa      	ST   -Y,R26
00050a 93ba      	ST   -Y,R27
00050b 93ea      	ST   -Y,R30
00050c 93fa      	ST   -Y,R31
00050d b7ef      	IN   R30,SREG
00050e 93ea      	ST   -Y,R30
                 ; 0001 0010     TIMER0_OVERFLOW++;
00050f e6aa      	LDI  R26,LOW(_TIMER0_OVERFLOW)
000510 e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
000511 940e 0f3f 	CALL SUBOPT_0x1F
                 ; 0001 0011 }
000513 91e9      	LD   R30,Y+
000514 bfef      	OUT  SREG,R30
000515 91f9      	LD   R31,Y+
000516 91e9      	LD   R30,Y+
000517 91b9      	LD   R27,Y+
000518 91a9      	LD   R26,Y+
000519 9518      	RETI
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
00051a 940e 0f45 	CALL SUBOPT_0x20
                 ; 0001 0016     TIMER1_OVERFLOW++;
00051c e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
00051d e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
00051e 940e 0f4e 	CALL SUBOPT_0x21
                 ; 0001 0017     TCNT1H = 0x00;
000520 e0e0      	LDI  R30,LOW(0)
000521 bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
000522 bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
000523 91e9      	LD   R30,Y+
000524 bfef      	OUT  SREG,R30
000525 91f9      	LD   R31,Y+
000526 91e9      	LD   R30,Y+
000527 91b9      	LD   R27,Y+
000528 91a9      	LD   R26,Y+
000529 9179      	LD   R23,Y+
00052a 9169      	LD   R22,Y+
00052b 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
00052c e0ed      	LDI  R30,LOW(13)
00052d bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
00052e e2e8      	LDI  R30,LOW(40)
00052f bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
000530 e8e2      	LDI  R30,LOW(130)
000531 c010      	RJMP _0x20A000E
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
000532 e0e7      	LDI  R30,LOW(7)
000533 bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
000534 e8e1      	LDI  R30,LOW(129)
000535 c00c      	RJMP _0x20A000E
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
000536 e1ed      	LDI  R30,LOW(29)
000537 bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
000538 efef      	LDI  R30,LOW(255)
000539 e0f0      	LDI  R31,HIGH(255)
00053a bdf9      	OUT  0x28+1,R31
00053b bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
00053c ebe0      	LDI  R30,LOW(1200)
00053d e0f4      	LDI  R31,HIGH(1200)
00053e bdf7      	OUT  0x26+1,R31
00053f bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
000540 b7e7      	IN   R30,0x37
000541 60e8      	ORI  R30,8
                 _0x20A000E:
000542 bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
000543 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
000544 93aa      	ST   -Y,R26
000545 93ba      	ST   -Y,R27
000546 93ea      	ST   -Y,R30
000547 b7ef      	IN   R30,SREG
000548 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000549 b5e4      	IN   R30,0x24
00054a 31e9      	CPI  R30,LOW(0x19)
00054b f420      	BRSH _0x40004
00054c 91a0 0504 	LDS  R26,_TIMER2_OVERFLOW
00054e 30a0      	CPI  R26,LOW(0x0)
00054f f021      	BREQ _0x40006
                 _0x40004:
000550 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
000552 30a0      	CPI  R26,LOW(0x0)
000553 f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000554 940e 0f57 	CALL SUBOPT_0x22
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
000556 c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
000557 e0e0      	LDI  R30,LOW(0)
000558 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00055a 940e 0f57 	CALL SUBOPT_0x22
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
00055c e0e0      	LDI  R30,LOW(0)
00055d 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
00055f 91e9      	LD   R30,Y+
000560 bfef      	OUT  SREG,R30
000561 91e9      	LD   R30,Y+
000562 91b9      	LD   R27,Y+
000563 91a9      	LD   R26,Y+
000564 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
000565 93aa      	ST   -Y,R26
000566 93ea      	ST   -Y,R30
000567 93fa      	ST   -Y,R31
000568 b7ef      	IN   R30,SREG
000569 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
00056a 931a      	ST   -Y,R17
                 ;	i -> R17
00056b e010      	LDI  R17,0
00056c 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
00056e 331c      	CPI  R17,60
00056f f421      	BRNE _0x4000A
000570 91a0 0581 	LDS  R26,_CHECK_GETS
000572 30a0      	CPI  R26,LOW(0x0)
000573 f009      	BREQ _0x4000B
                 _0x4000A:
000574 c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
000575 9bc3      	SBIS 0x18,3
000576 c002      	RJMP _0x4000C
000577 98c3      	CBI  0x18,3
000578 c001      	RJMP _0x4000D
                 _0x4000C:
000579 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
00057a e0e0      	LDI  R30,LOW(0)
00057b 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00057d c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
00057e 331e      	CPI  R17,62
00057f f421      	BRNE _0x40010
000580 91a0 0581 	LDS  R26,_CHECK_GETS
000582 30a0      	CPI  R26,LOW(0x0)
000583 f009      	BREQ _0x40011
                 _0x40010:
000584 c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000585 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000587 940e 0f66 	CALL SUBOPT_0x23
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
000589 e0e1      	LDI  R30,LOW(1)
00058a 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
00058c c008      	RJMP _0x40012
                 _0x4000F:
00058d 91e0 0581 	LDS  R30,_CHECK_GETS
00058f 30e0      	CPI  R30,0
000590 f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
000591 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000593 940e 0f66 	CALL SUBOPT_0x23
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
000595 9119      	LD   R17,Y+
000596 91e9      	LD   R30,Y+
000597 bfef      	OUT  SREG,R30
000598 91f9      	LD   R31,Y+
000599 91e9      	LD   R30,Y+
00059a 91a9      	LD   R26,Y+
00059b 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
00059c e0e0      	LDI  R30,LOW(0)
00059d 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
00059f e9e8      	LDI  R30,LOW(152)
0005a0 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0005a2 e0e6      	LDI  R30,LOW(6)
0005a3 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
0005a5 91e0 009d 	LDS  R30,157
0005a7 7bef      	ANDI R30,0xBF
0005a8 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0005aa 81e8      	LD   R30,Y
0005ab 81f9      	LDD  R31,Y+1
0005ac 940e 12c5 	CALL __ASRW8
0005ae 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
0005b0 81e8      	LD   R30,Y
0005b1 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
0005b3 c014      	RJMP _0x20A000D
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
0005b4 e0e0      	LDI  R30,LOW(0)
0005b5 b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0005b6 e9e8      	LDI  R30,LOW(152)
0005b7 b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0005b8 e0e6      	LDI  R30,LOW(6)
0005b9 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
0005bb 91e0 0095 	LDS  R30,149
0005bd 7bef      	ANDI R30,0xBF
0005be 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0005c0 81e8      	LD   R30,Y
0005c1 81f9      	LDD  R31,Y+1
0005c2 940e 12c5 	CALL __ASRW8
0005c4 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
0005c6 81e8      	LD   R30,Y
0005c7 b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000D:
0005c8 9622      	ADIW R28,2
0005c9 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
0005ca 91e0 009b 	LDS  R30,155
0005cc 72e0      	ANDI R30,LOW(0x20)
0005cd f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
0005ce 81e8      	LD   R30,Y
0005cf 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
0005d1 c023      	RJMP _0x20A000C
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
0005d2 931a      	ST   -Y,R17
0005d3 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
0005d4 e010      	LDI  R17,0
0005d5 e000      	LDI  R16,0
0005d6 e010      	LDI  R17,LOW(0)
                 _0x40018:
0005d7 940e 0f70 	CALL SUBOPT_0x24
0005d9 30e0      	CPI  R30,0
0005da f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
0005db 940e 0f70 	CALL SUBOPT_0x24
0005dd 93ea      	ST   -Y,R30
0005de dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
0005df 5f1f      	SUBI R17,-1
0005e0 cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
0005e1 e000      	LDI  R16,LOW(0)
                 _0x4001B:
0005e2 1701      	CP   R16,R17
0005e3 f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
0005e4 81aa      	LDD  R26,Y+2
0005e5 81bb      	LDD  R27,Y+2+1
0005e6 9611      	ADIW R26,1
0005e7 83aa      	STD  Y+2,R26
0005e8 83bb      	STD  Y+2+1,R27
0005e9 9711      	SBIW R26,1
0005ea e0e0      	LDI  R30,LOW(0)
0005eb 93ec      	ST   X,R30
                 ; 0002 0054     }
0005ec 5f0f      	SUBI R16,-1
0005ed cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
0005ee 8119      	LDD  R17,Y+1
0005ef 8108      	LDD  R16,Y+0
0005f0 c108      	RJMP _0x20A000B
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
0005f1 9b5d      	SBIS 0xB,5
0005f2 cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
0005f3 81e8      	LD   R30,Y
0005f4 b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000C:
0005f5 9621      	ADIW R28,1
0005f6 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
0005f7 940e 13b5 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
0005f9 ef2f     +LDI R18 , LOW ( - 1 )
0005fa ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
0005fb 81ee      	LDD  R30,Y+6
0005fc 81ff      	LDD  R31,Y+6+1
0005fd 9731      	SBIW R30,1
0005fe 83ee      	STD  Y+6,R30
0005ff 83ff      	STD  Y+6+1,R31
000600 9631      	ADIW R30,1
000601 f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
000602 85a8      	LDD  R26,Y+8
000603 85b9      	LDD  R27,Y+8+1
000604 91ed      	LD   R30,X+
000605 87a8      	STD  Y+8,R26
000606 87b9      	STD  Y+8+1,R27
000607 e0f0      	LDI  R31,0
                +
000608 272e     +EOR R18 , R30
000609 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
00060a e000     +LDI R16 , LOW ( 0 )
00060b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
00060c 3008     +CPI R16 , LOW ( 8 )
00060d e0e0     +LDI R30 , HIGH ( 8 )
00060e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00060f f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
000610 01f9      	MOVW R30,R18
000611 70e1      	ANDI R30,LOW(0x1)
000612 70f0      	ANDI R31,HIGH(0x1)
000613 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
000614 9536      	LSR  R19
000615 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
000616 2e04      	MOV  R0,R20
000617 2a05      	OR   R0,R21
000618 f021      	BREQ _0x4002D
000619 e0e1      	LDI  R30,LOW(40961)
00061a eaf0      	LDI  R31,HIGH(40961)
                +
00061b 272e     +EOR R18 , R30
00061c 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
00061d 5f0f     +SUBI R16 , LOW ( - 1 )
00061e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00061f cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
000620 cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
000621 01f9      	MOVW R30,R18
000622 940e 13bc 	CALL __LOADLOCR6
000624 962a      	ADIW R28,10
000625 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
000626 9728      	SBIW R28,8
000627 940e 13b7 	CALL __SAVELOCR4
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                +
000629 e020     +LDI R18 , LOW ( 0 )
00062a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00062b 89e8      	LDD  R30,Y+16
00062c 83ec      	STD  Y+4,R30
                 ; 0002 0083     protocol[1]=0x06;
00062d e0e6      	LDI  R30,LOW(6)
00062e 83ed      	STD  Y+5,R30
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
00062f 85ee      	LDD  R30,Y+14
000630 85ff      	LDD  R31,Y+14+1
000631 940e 12c5 	CALL __ASRW8
000633 83ee      	STD  Y+6,R30
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
000634 85ee      	LDD  R30,Y+14
000635 83ef      	STD  Y+7,R30
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
000636 85ec      	LDD  R30,Y+12
000637 85fd      	LDD  R31,Y+12+1
000638 940e 12c5 	CALL __ASRW8
00063a 87e8      	STD  Y+8,R30
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
00063b 85ec      	LDD  R30,Y+12
00063c 87e9      	STD  Y+9,R30
                 ; 0002 0088     protocol[6]=0;
00063d e0e0      	LDI  R30,LOW(0)
00063e 87ea      	STD  Y+10,R30
                 ; 0002 0089     protocol[7]=0;
00063f 87eb      	STD  Y+11,R30
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
000640 01fe      	MOVW R30,R28
000641 9634      	ADIW R30,4
000642 93fa      	ST   -Y,R31
000643 93ea      	ST   -Y,R30
000644 e0e6      	LDI  R30,LOW(6)
000645 e0f0      	LDI  R31,HIGH(6)
000646 93fa      	ST   -Y,R31
000647 93ea      	ST   -Y,R30
000648 dfae      	RCALL _CRC16
000649 018f      	MOVW R16,R30
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
00064a 01f8      	MOVW R30,R16
00064b 87ea      	STD  Y+10,R30
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                +
00064c 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                +
00064d e020     +LDI R18 , LOW ( 0 )
00064e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002F:
                +
00064f 3028     +CPI R18 , LOW ( 8 )
000650 e0e0     +LDI R30 , HIGH ( 8 )
000651 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000652 f454      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
000653 01de      	MOVW R26,R28
000654 9614      	ADIW R26,4
000655 0fa2      	ADD  R26,R18
000656 1fb3      	ADC  R27,R19
000657 91ec      	LD   R30,X
000658 93ea      	ST   -Y,R30
000659 df97      	RCALL _putch_USART0
                 ; 0002 0094     }
                +
00065a 5f2f     +SUBI R18 , LOW ( - 1 )
00065b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00065c cff2      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
00065d 940e 13be 	CALL __LOADLOCR4
00065f 9661      	ADIW R28,17
000660 9508      	RET
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
                 ; 0002 00B0     }
                 ; 0002 00B1 }
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
000661 9728      	SBIW R28,8
000662 940e 0f77 	CALL SUBOPT_0x25
000664 e0e0      	LDI  R30,LOW(0)
000665 83ea      	STD  Y+2,R30
000666 83eb      	STD  Y+3,R30
000667 83ec      	STD  Y+4,R30
000668 83ed      	STD  Y+5,R30
000669 83ee      	STD  Y+6,R30
00066a 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
00066b 940e 0f7b 	CALL SUBOPT_0x26
00066d 2377      	TST  R23
00066e f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
00066f 940e 0f80 	CALL SUBOPT_0x27
000671 940e 1107 	CALL __ANEGF1
000673 85ac      	LDD  R26,Y+12
000674 85bd      	LDD  R27,Y+12+1
000675 940e 137b 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
000677 940e 0f7b 	CALL SUBOPT_0x26
000679 937f      	PUSH R23
00067a 936f      	PUSH R22
00067b 93ff      	PUSH R31
00067c 93ef      	PUSH R30
00067d 940e 0f80 	CALL SUBOPT_0x27
00067f 940e 0f0e 	CALL SUBOPT_0x19
000681 940e 0f1e 	CALL SUBOPT_0x1B
000683 91af      	POP  R26
000684 91bf      	POP  R27
000685 918f      	POP  R24
000686 919f      	POP  R25
000687 940e 11ad 	CALL __ADDF12
000689 940e 0f85 	CALL SUBOPT_0x28
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
00068b 940e 0f7b 	CALL SUBOPT_0x26
00068d 937f      	PUSH R23
00068e 936f      	PUSH R22
00068f 93ff      	PUSH R31
000690 93ef      	PUSH R30
000691 940e 0f80 	CALL SUBOPT_0x27
000693 940e 0f0e 	CALL SUBOPT_0x19
000695 940e 0f1e 	CALL SUBOPT_0x1B
000697 91af      	POP  R26
000698 91bf      	POP  R27
000699 918f      	POP  R24
00069a 919f      	POP  R25
00069b 940e 0e16 	CALL SUBOPT_0x5
00069d 940e 138f 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(VelocityR*(60/(0.4)*Gearratio));
00069f 940e 0f8a 	CALL SUBOPT_0x29
0006a1 940e 0f8f 	CALL SUBOPT_0x2A
0006a3 85aa      	LDD  R26,Y+10
0006a4 85bb      	LDD  R27,Y+10+1
0006a5 93ed      	ST   X+,R30
0006a6 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(VelocityL*(60/(0.4)*Gearratio));
0006a7 940e 138a 	CALL __GETD2S0
0006a9 940e 0f8f 	CALL SUBOPT_0x2A
0006ab 85a8      	LDD  R26,Y+8
0006ac 85b9      	LDD  R27,Y+8+1
0006ad 93ed      	ST   X+,R30
0006ae 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0006af 85aa      	LDD  R26,Y+10
0006b0 85bb      	LDD  R27,Y+10+1
0006b1 940e 136c 	CALL __GETW1P
0006b3 32ec      	CPI  R30,LOW(0x12C)
0006b4 e0a1      	LDI  R26,HIGH(0x12C)
0006b5 07fa      	CPC  R31,R26
0006b6 f434      	BRGE _0x40036
0006b7 01df      	MOVW R26,R30
0006b8 ede4      	LDI  R30,LOW(65236)
0006b9 effe      	LDI  R31,HIGH(65236)
0006ba 17ea      	CP   R30,R26
0006bb 07fb      	CPC  R31,R27
0006bc f00c      	BRLT _0x40037
                 _0x40036:
0006bd c014      	RJMP _0x40038
                 _0x40037:
0006be 85a8      	LDD  R26,Y+8
0006bf 85b9      	LDD  R27,Y+8+1
0006c0 940e 136c 	CALL __GETW1P
0006c2 32ec      	CPI  R30,LOW(0x12C)
0006c3 e0a1      	LDI  R26,HIGH(0x12C)
0006c4 07fa      	CPC  R31,R26
0006c5 f454      	BRGE _0x40039
0006c6 85a8      	LDD  R26,Y+8
0006c7 85b9      	LDD  R27,Y+8+1
0006c8 940e 136c 	CALL __GETW1P
0006ca 01df      	MOVW R26,R30
0006cb ede4      	LDI  R30,LOW(65236)
0006cc effe      	LDI  R31,HIGH(65236)
0006cd 17ea      	CP   R30,R26
0006ce 07fb      	CPC  R31,R27
0006cf f00c      	BRLT _0x4003A
                 _0x40039:
0006d0 c001      	RJMP _0x40038
                 _0x4003A:
0006d1 c001      	RJMP _0x4003B
                 _0x40038:
0006d2 c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
0006d3 85aa      	LDD  R26,Y+10
0006d4 85bb      	LDD  R27,Y+10+1
0006d5 940e 0f94 	CALL SUBOPT_0x2B
                 ; 0002 00C4         *L_RPM = 0;
0006d7 85a8      	LDD  R26,Y+8
0006d8 85b9      	LDD  R27,Y+8+1
0006d9 940e 0f94 	CALL SUBOPT_0x2B
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
0006db 940c 0857 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0006dd e0e1      	LDI  R30,LOW(1)
0006de 93ea      	ST   -Y,R30
0006df e7e9      	LDI  R30,LOW(121)
0006e0 e0f0      	LDI  R31,HIGH(121)
0006e1 93fa      	ST   -Y,R31
0006e2 93ea      	ST   -Y,R30
0006e3 81ed      	LDD  R30,Y+5
0006e4 81fe      	LDD  R31,Y+5+1
0006e5 940e 0f99 	CALL SUBOPT_0x2C
                 ; 0002 00CB     delay_ms(1);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0006e7 e0e2      	LDI  R30,LOW(2)
0006e8 93ea      	ST   -Y,R30
0006e9 e7e9      	LDI  R30,LOW(121)
0006ea e0f0      	LDI  R31,HIGH(121)
0006eb 93fa      	ST   -Y,R31
0006ec 93ea      	ST   -Y,R30
0006ed 81eb      	LDD  R30,Y+3
0006ee 81fc      	LDD  R31,Y+3+1
0006ef 940e 12b9 	CALL __ANEGW1
0006f1 940e 0f99 	CALL SUBOPT_0x2C
                 ; 0002 00CE     delay_ms(1);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
0006f3 e0e1      	LDI  R30,LOW(1)
0006f4 940e 0fa0 	CALL SUBOPT_0x2D
                 ; 0002 00D1     delay_ms(1);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
0006f6 e0e2      	LDI  R30,LOW(2)
0006f7 940e 0fa0 	CALL SUBOPT_0x2D
                 ; 0002 00D4     delay_ms(1);
                 ; 0002 00D5 }
                 _0x20A000B:
0006f9 9624      	ADIW R28,4
0006fa 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
                 ; 0002 00E1         return RPM;
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
0006fb e5e5      	LDI  R30,LOW(85)
0006fc bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
0006fd efe0      	LDI  R30,LOW(240)
0006fe bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
0006ff 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
000700 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
000701 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
000702 9817      	CBI  0x2,7
                 ; 0003 000C }
000703 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
000704 940e 0fa8 	CALL SUBOPT_0x2E
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
000706 f041      	BREQ _0x6000B
000707 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
000708 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
000709 940e 0f4e 	CALL SUBOPT_0x21
00070b 9731      	SBIW R30,1
00070c 4060      	SBCI R22,0
00070d 4070      	SBCI R23,0
                 ; 0003 0011     else MOTORR_HALL--;
00070e c002      	RJMP _0x6000C
                 _0x6000B:
00070f 940e 0fb1 	CALL SUBOPT_0x2F
                 ; 0003 0012 }
                 _0x6000C:
000711 c037      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
000712 940e 0fa8 	CALL SUBOPT_0x2E
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
000714 f019      	BREQ _0x6000D
000715 940e 0fb1 	CALL SUBOPT_0x2F
                 ; 0003 0017     else MOTORR_HALL++;
000717 c007      	RJMP _0x6000E
                 _0x6000D:
000718 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
000719 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
00071a 940e 0f4e 	CALL SUBOPT_0x21
00071c 9731      	SBIW R30,1
00071d 4060      	SBCI R22,0
00071e 4070      	SBCI R23,0
                 ; 0003 0018 }
                 _0x6000E:
00071f c029      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
000720 940e 0f45 	CALL SUBOPT_0x20
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
000722 e0a0      	LDI  R26,0
000723 990e      	SBIC 0x1,6
000724 e0a1      	LDI  R26,1
000725 e0e0      	LDI  R30,0
000726 990f      	SBIC 0x1,7
000727 e0e1      	LDI  R30,1
000728 17ea      	CP   R30,R26
000729 f019      	BREQ _0x6000F
00072a 940e 0fbf 	CALL SUBOPT_0x30
                 ; 0003 001D     else MOTORL_HALL++;
00072c c007      	RJMP _0x60010
                 _0x6000F:
00072d e8a6      	LDI  R26,LOW(_MOTORL_HALL)
00072e e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
00072f 940e 0f4e 	CALL SUBOPT_0x21
000731 9731      	SBIW R30,1
000732 4060      	SBCI R22,0
000733 4070      	SBCI R23,0
                 ; 0003 001E }
                 _0x60010:
000734 c014      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
000735 940e 0f45 	CALL SUBOPT_0x20
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
000737 e0a0      	LDI  R26,0
000738 990f      	SBIC 0x1,7
000739 e0a1      	LDI  R26,1
00073a e0e0      	LDI  R30,0
00073b 990e      	SBIC 0x1,6
00073c e0e1      	LDI  R30,1
00073d 17ea      	CP   R30,R26
00073e f041      	BREQ _0x60011
00073f e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000740 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000741 940e 0f4e 	CALL SUBOPT_0x21
000743 9731      	SBIW R30,1
000744 4060      	SBCI R22,0
000745 4070      	SBCI R23,0
                 ; 0003 0023     else MOTORL_HALL--;
000746 c002      	RJMP _0x60012
                 _0x60011:
000747 940e 0fbf 	CALL SUBOPT_0x30
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
000749 91e9      	LD   R30,Y+
00074a bfef      	OUT  SREG,R30
00074b 91f9      	LD   R31,Y+
00074c 91e9      	LD   R30,Y+
00074d 91b9      	LD   R27,Y+
00074e 91a9      	LD   R26,Y+
00074f 9179      	LD   R23,Y+
000750 9169      	LD   R22,Y+
000751 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000752 931a      	ST   -Y,R17
000753 930a      	ST   -Y,R16
000754 81aa      	LDD  R26,Y+2
000755 81bb      	LDD  R27,Y+2+1
000756 9612      	ADIW R26,2
000757 940e 136c 	CALL __GETW1P
000759 9730      	SBIW R30,0
00075a f129      	BREQ _0x2000010
00075b 81aa      	LDD  R26,Y+2
00075c 81bb      	LDD  R27,Y+2+1
00075d 9614      	ADIW R26,4
00075e 940e 136c 	CALL __GETW1P
000760 018f      	MOVW R16,R30
000761 9730      	SBIW R30,0
000762 f061      	BREQ _0x2000012
                +
000763 3002     +CPI R16 , LOW ( 2 )
000764 e0e0     +LDI R30 , HIGH ( 2 )
000765 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000766 f0c0      	BRLO _0x2000013
000767 01f8      	MOVW R30,R16
000768 9731      	SBIW R30,1
000769 018f      	MOVW R16,R30
                +
00076a 81aa     +LDD R26 , Y + 2
00076b 81bb     +LDD R27 , Y + 2 + 1
00076c 9614     +ADIW R26 , 4
00076d 93ed     +ST X + , R30
00076e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00076f 81aa      	LDD  R26,Y+2
000770 81bb      	LDD  R27,Y+2+1
000771 9612      	ADIW R26,2
000772 940e 0f3f 	CALL SUBOPT_0x1F
000774 9731      	SBIW R30,1
000775 81ac      	LDD  R26,Y+4
000776 83a0      	STD  Z+0,R26
000777 81aa      	LDD  R26,Y+2
000778 81bb      	LDD  R27,Y+2+1
000779 940e 136c 	CALL __GETW1P
00077b 23ff      	TST  R31
00077c f012      	BRMI _0x2000014
00077d 940e 0f3f 	CALL SUBOPT_0x1F
                 _0x2000014:
                 _0x2000013:
00077f c006      	RJMP _0x2000015
                 _0x2000010:
000780 81aa      	LDD  R26,Y+2
000781 81bb      	LDD  R27,Y+2+1
000782 efef      	LDI  R30,LOW(65535)
000783 efff      	LDI  R31,HIGH(65535)
000784 93ed      	ST   X+,R30
000785 93fc      	ST   X,R31
                 _0x2000015:
000786 8119      	LDD  R17,Y+1
000787 8108      	LDD  R16,Y+0
000788 c346      	RJMP _0x20A0007
                 __ftoe_G100:
000789 9724      	SBIW R28,4
00078a 940e 0f77 	CALL SUBOPT_0x25
00078c e8e0      	LDI  R30,LOW(128)
00078d 83ea      	STD  Y+2,R30
00078e e3ef      	LDI  R30,LOW(63)
00078f 83eb      	STD  Y+3,R30
000790 940e 13b7 	CALL __SAVELOCR4
000792 85ee      	LDD  R30,Y+14
000793 85ff      	LDD  R31,Y+14+1
000794 3fef      	CPI  R30,LOW(0xFFFF)
000795 efaf      	LDI  R26,HIGH(0xFFFF)
000796 07fa      	CPC  R31,R26
000797 f449      	BRNE _0x2000019
000798 85e8      	LDD  R30,Y+8
000799 85f9      	LDD  R31,Y+8+1
00079a 93fa      	ST   -Y,R31
00079b 93ea      	ST   -Y,R30
                +
00079c e7e8     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00079d e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00079e 940e 0fcd 	CALL SUBOPT_0x31
0007a0 c0b4      	RJMP _0x20A0009
                 _0x2000019:
0007a1 3fef      	CPI  R30,LOW(0x7FFF)
0007a2 e7af      	LDI  R26,HIGH(0x7FFF)
0007a3 07fa      	CPC  R31,R26
0007a4 f449      	BRNE _0x2000018
0007a5 85e8      	LDD  R30,Y+8
0007a6 85f9      	LDD  R31,Y+8+1
0007a7 93fa      	ST   -Y,R31
0007a8 93ea      	ST   -Y,R30
                +
0007a9 e7e9     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
0007aa e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
0007ab 940e 0fcd 	CALL SUBOPT_0x31
0007ad c0a7      	RJMP _0x20A0009
                 _0x2000018:
0007ae 85ab      	LDD  R26,Y+11
0007af 30a7      	CPI  R26,LOW(0x7)
0007b0 f010      	BRLO _0x200001B
0007b1 e0e6      	LDI  R30,LOW(6)
0007b2 87eb      	STD  Y+11,R30
                 _0x200001B:
0007b3 851b      	LDD  R17,Y+11
                 _0x200001C:
0007b4 2fe1      	MOV  R30,R17
0007b5 5011      	SUBI R17,1
0007b6 30e0      	CPI  R30,0
0007b7 f019      	BREQ _0x200001E
0007b8 940e 0fd1 	CALL SUBOPT_0x32
0007ba cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0007bb 85ec     +LDD R30 , Y + 12
0007bc 85fd     +LDD R31 , Y + 12 + 1
0007bd 856e     +LDD R22 , Y + 12 + 2
0007be 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0007bf 940e 13ab 	CALL __CPD10
0007c1 f421      	BRNE _0x200001F
0007c2 e030      	LDI  R19,LOW(0)
0007c3 940e 0fd1 	CALL SUBOPT_0x32
0007c5 c02e      	RJMP _0x2000020
                 _0x200001F:
0007c6 853b      	LDD  R19,Y+11
0007c7 940e 0fd9 	CALL SUBOPT_0x33
0007c9 f009      	BREQ PC+2
0007ca f410      	BRCC PC+3
0007cb 940c 07d8 	JMP  _0x2000021
0007cd 940e 0fd1 	CALL SUBOPT_0x32
                 _0x2000022:
0007cf 940e 0fd9 	CALL SUBOPT_0x33
0007d1 f028      	BRLO _0x2000024
0007d2 940e 0fe4 	CALL SUBOPT_0x34
0007d4 940e 0fe9 	CALL SUBOPT_0x35
0007d6 cff8      	RJMP _0x2000022
                 _0x2000024:
0007d7 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0007d8 940e 0fd9 	CALL SUBOPT_0x33
0007da f440      	BRSH _0x2000028
0007db 940e 0fe4 	CALL SUBOPT_0x34
0007dd 940e 0ff5 	CALL SUBOPT_0x36
0007df 940e 0ffc 	CALL SUBOPT_0x37
0007e1 5031      	SUBI R19,LOW(1)
0007e2 cff5      	RJMP _0x2000026
                 _0x2000028:
0007e3 940e 0fd1 	CALL SUBOPT_0x32
                 _0x2000025:
                +
0007e5 85ec     +LDD R30 , Y + 12
0007e6 85fd     +LDD R31 , Y + 12 + 1
0007e7 856e     +LDD R22 , Y + 12 + 2
0007e8 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0007e9 940e 1001 	CALL SUBOPT_0x38
0007eb 940e 0ffc 	CALL SUBOPT_0x37
0007ed 940e 0fd9 	CALL SUBOPT_0x33
0007ef f020      	BRLO _0x2000029
0007f0 940e 0fe4 	CALL SUBOPT_0x34
0007f2 940e 0fe9 	CALL SUBOPT_0x35
                 _0x2000029:
                 _0x2000020:
0007f4 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0007f5 85eb      	LDD  R30,Y+11
0007f6 17e1      	CP   R30,R17
0007f7 f188      	BRLO _0x200002C
0007f8 940e 0f8a 	CALL SUBOPT_0x29
0007fa 940e 1008 	CALL SUBOPT_0x39
0007fc 940e 1001 	CALL SUBOPT_0x38
0007fe 940e 100f 	CALL SUBOPT_0x3A
000800 940e 0f85 	CALL SUBOPT_0x28
                +
000802 81ec     +LDD R30 , Y + 4
000803 81fd     +LDD R31 , Y + 4 + 1
000804 816e     +LDD R22 , Y + 4 + 2
000805 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000806 940e 0fe4 	CALL SUBOPT_0x34
000808 940e 124b 	CALL __DIVF21
00080a 940e 113a 	CALL __CFD1U
00080c 2f0e      	MOV  R16,R30
00080d 940e 1013 	CALL SUBOPT_0x3B
00080f 940e 101a 	CALL SUBOPT_0x3C
000811 27ff      	CLR  R31
000812 2766      	CLR  R22
000813 2777      	CLR  R23
000814 940e 1173 	CALL __CDF1
000816 940e 0f8a 	CALL SUBOPT_0x29
000818 940e 11fd 	CALL __MULF12
00081a 940e 0fe4 	CALL SUBOPT_0x34
00081c 940e 0e16 	CALL SUBOPT_0x5
00081e 940e 0ffc 	CALL SUBOPT_0x37
000820 2fe1      	MOV  R30,R17
000821 5f1f      	SUBI R17,-1
000822 30e0      	CPI  R30,0
000823 f689      	BRNE _0x200002A
000824 940e 1013 	CALL SUBOPT_0x3B
000826 e2ee      	LDI  R30,LOW(46)
000827 93ec      	ST   X,R30
000828 cfcc      	RJMP _0x200002A
                 _0x200002C:
000829 940e 101f 	CALL SUBOPT_0x3D
00082b 9731      	SBIW R30,1
00082c 85aa      	LDD  R26,Y+10
00082d 83a0      	STD  Z+0,R26
00082e 3030      	CPI  R19,0
00082f f42c      	BRGE _0x200002E
000830 9531      	NEG  R19
000831 85a8      	LDD  R26,Y+8
000832 85b9      	LDD  R27,Y+8+1
000833 e2ed      	LDI  R30,LOW(45)
000834 c003      	RJMP _0x2000111
                 _0x200002E:
000835 85a8      	LDD  R26,Y+8
000836 85b9      	LDD  R27,Y+8+1
000837 e2eb      	LDI  R30,LOW(43)
                 _0x2000111:
000838 93ec      	ST   X,R30
000839 940e 101f 	CALL SUBOPT_0x3D
00083b 940e 101f 	CALL SUBOPT_0x3D
00083d 9731      	SBIW R30,1
00083e 01bf      	MOVW R22,R30
00083f 2fa3      	MOV  R26,R19
000840 e0ea      	LDI  R30,LOW(10)
000841 940e 1313 	CALL __DIVB21
000843 5de0      	SUBI R30,-LOW(48)
000844 01db      	MOVW R26,R22
000845 93ec      	ST   X,R30
000846 940e 101f 	CALL SUBOPT_0x3D
000848 9731      	SBIW R30,1
000849 01bf      	MOVW R22,R30
00084a 2fa3      	MOV  R26,R19
00084b e0ea      	LDI  R30,LOW(10)
00084c 940e 133d 	CALL __MODB21
00084e 5de0      	SUBI R30,-LOW(48)
00084f 01db      	MOVW R26,R22
000850 93ec      	ST   X,R30
000851 85a8      	LDD  R26,Y+8
000852 85b9      	LDD  R27,Y+8+1
000853 e0e0      	LDI  R30,LOW(0)
000854 93ec      	ST   X,R30
                 _0x20A0009:
000855 940e 13be 	CALL __LOADLOCR4
                 _0x20A000A:
000857 9660      	ADIW R28,16
000858 9508      	RET
                 __print_G100:
000859 97ef      	SBIW R28,63
00085a 9761      	SBIW R28,17
00085b 940e 13b5 	CALL __SAVELOCR6
00085d e010      	LDI  R17,0
                +
00085e 01fe     +MOVW R30 , R28
00085f 5ae8     +SUBI R30 , LOW ( - 88 )
000860 4fff     +SBCI R31 , HIGH ( - 88 )
000861 9001     +LD R0 , Z +
000862 81f0     +LD R31 , Z
000863 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000864 87e8      	STD  Y+8,R30
000865 87f9      	STD  Y+8+1,R31
                +
000866 01fe     +MOVW R30 , R28
000867 5aea     +SUBI R30 , LOW ( - 86 )
000868 4fff     +SBCI R31 , HIGH ( - 86 )
000869 9001     +LD R0 , Z +
00086a 81f0     +LD R31 , Z
00086b 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00086c 83ee      	STD  Y+6,R30
00086d 83ff      	STD  Y+6+1,R31
00086e 81ae      	LDD  R26,Y+6
00086f 81bf      	LDD  R27,Y+6+1
000870 940e 0f94 	CALL SUBOPT_0x2B
                 _0x2000030:
000872 01de      	MOVW R26,R28
000873 5aa4      	SUBI R26,LOW(-(92))
000874 4fbf      	SBCI R27,HIGH(-(92))
000875 940e 0f3f 	CALL SUBOPT_0x1F
000877 9731      	SBIW R30,1
000878 91e4      	LPM  R30,Z
000879 2f2e      	MOV  R18,R30
00087a 30e0      	CPI  R30,0
00087b f411      	BRNE PC+3
00087c 940c 0a6c 	JMP _0x2000032
00087e 2fe1      	MOV  R30,R17
00087f 30e0      	CPI  R30,0
000880 f439      	BRNE _0x2000036
000881 3225      	CPI  R18,37
000882 f411      	BRNE _0x2000037
000883 e011      	LDI  R17,LOW(1)
000884 c002      	RJMP _0x2000038
                 _0x2000037:
000885 940e 1025 	CALL SUBOPT_0x3E
                 _0x2000038:
000887 c1e3      	RJMP _0x2000035
                 _0x2000036:
000888 30e1      	CPI  R30,LOW(0x1)
000889 f4c1      	BRNE _0x2000039
00088a 3225      	CPI  R18,37
00088b f419      	BRNE _0x200003A
00088c 940e 1025 	CALL SUBOPT_0x3E
00088e c1db      	RJMP _0x2000112
                 _0x200003A:
00088f e012      	LDI  R17,LOW(2)
000890 e0e0      	LDI  R30,LOW(0)
000891 8bed      	STD  Y+21,R30
000892 e000      	LDI  R16,LOW(0)
000893 322d      	CPI  R18,45
000894 f411      	BRNE _0x200003B
000895 e001      	LDI  R16,LOW(1)
000896 c1d4      	RJMP _0x2000035
                 _0x200003B:
000897 322b      	CPI  R18,43
000898 f419      	BRNE _0x200003C
000899 e2eb      	LDI  R30,LOW(43)
00089a 8bed      	STD  Y+21,R30
00089b c1cf      	RJMP _0x2000035
                 _0x200003C:
00089c 3220      	CPI  R18,32
00089d f419      	BRNE _0x200003D
00089e e2e0      	LDI  R30,LOW(32)
00089f 8bed      	STD  Y+21,R30
0008a0 c1ca      	RJMP _0x2000035
                 _0x200003D:
0008a1 c002      	RJMP _0x200003E
                 _0x2000039:
0008a2 30e2      	CPI  R30,LOW(0x2)
0008a3 f439      	BRNE _0x200003F
                 _0x200003E:
0008a4 e050      	LDI  R21,LOW(0)
0008a5 e013      	LDI  R17,LOW(3)
0008a6 3320      	CPI  R18,48
0008a7 f411      	BRNE _0x2000040
0008a8 6800      	ORI  R16,LOW(128)
0008a9 c1c1      	RJMP _0x2000035
                 _0x2000040:
0008aa c002      	RJMP _0x2000041
                 _0x200003F:
0008ab 30e3      	CPI  R30,LOW(0x3)
0008ac f491      	BRNE _0x2000042
                 _0x2000041:
0008ad 3320      	CPI  R18,48
0008ae f010      	BRLO _0x2000044
0008af 332a      	CPI  R18,58
0008b0 f008      	BRLO _0x2000045
                 _0x2000044:
0008b1 c007      	RJMP _0x2000043
                 _0x2000045:
0008b2 e0aa      	LDI  R26,LOW(10)
0008b3 9f5a      	MUL  R21,R26
0008b4 2d50      	MOV  R21,R0
0008b5 2fe2      	MOV  R30,R18
0008b6 53e0      	SUBI R30,LOW(48)
0008b7 0f5e      	ADD  R21,R30
0008b8 c1b2      	RJMP _0x2000035
                 _0x2000043:
0008b9 e040      	LDI  R20,LOW(0)
0008ba 322e      	CPI  R18,46
0008bb f411      	BRNE _0x2000046
0008bc e014      	LDI  R17,LOW(4)
0008bd c1ad      	RJMP _0x2000035
                 _0x2000046:
0008be c00f      	RJMP _0x2000047
                 _0x2000042:
0008bf 30e4      	CPI  R30,LOW(0x4)
0008c0 f499      	BRNE _0x2000049
0008c1 3320      	CPI  R18,48
0008c2 f010      	BRLO _0x200004B
0008c3 332a      	CPI  R18,58
0008c4 f008      	BRLO _0x200004C
                 _0x200004B:
0008c5 c008      	RJMP _0x200004A
                 _0x200004C:
0008c6 6200      	ORI  R16,LOW(32)
0008c7 e0aa      	LDI  R26,LOW(10)
0008c8 9f4a      	MUL  R20,R26
0008c9 2d40      	MOV  R20,R0
0008ca 2fe2      	MOV  R30,R18
0008cb 53e0      	SUBI R30,LOW(48)
0008cc 0f4e      	ADD  R20,R30
0008cd c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0008ce 362c      	CPI  R18,108
0008cf f419      	BRNE _0x200004D
0008d0 6002      	ORI  R16,LOW(2)
0008d1 e015      	LDI  R17,LOW(5)
0008d2 c198      	RJMP _0x2000035
                 _0x200004D:
0008d3 c004      	RJMP _0x200004E
                 _0x2000049:
0008d4 30e5      	CPI  R30,LOW(0x5)
0008d5 f011      	BREQ PC+3
0008d6 940c 0a6b 	JMP _0x2000035
                 _0x200004E:
0008d8 2fe2      	MOV  R30,R18
0008d9 36e3      	CPI  R30,LOW(0x63)
0008da f459      	BRNE _0x2000053
0008db 940e 102e 	CALL SUBOPT_0x3F
0008dd 940e 1035 	CALL SUBOPT_0x40
0008df 940e 102e 	CALL SUBOPT_0x3F
0008e1 81a4      	LDD  R26,Z+4
0008e2 93aa      	ST   -Y,R26
0008e3 940e 103c 	CALL SUBOPT_0x41
0008e5 c184      	RJMP _0x2000054
                 _0x2000053:
0008e6 34e5      	CPI  R30,LOW(0x45)
0008e7 f011      	BREQ _0x2000057
0008e8 36e5      	CPI  R30,LOW(0x65)
0008e9 f409      	BRNE _0x2000058
                 _0x2000057:
0008ea c004      	RJMP _0x2000059
                 _0x2000058:
0008eb 36e6      	CPI  R30,LOW(0x66)
0008ec f011      	BREQ PC+3
0008ed 940c 0939 	JMP _0x200005A
                 _0x2000059:
0008ef 01fe      	MOVW R30,R28
0008f0 9676      	ADIW R30,22
0008f1 87ee      	STD  Y+14,R30
0008f2 87ff      	STD  Y+14+1,R31
0008f3 940e 1044 	CALL SUBOPT_0x42
0008f5 940e 1370 	CALL __GETD1P
0008f7 940e 104b 	CALL SUBOPT_0x43
0008f9 940e 1050 	CALL SUBOPT_0x44
0008fb 85ad      	LDD  R26,Y+13
0008fc 23aa      	TST  R26
0008fd f022      	BRMI _0x200005B
0008fe 89ad      	LDD  R26,Y+21
0008ff 32ab      	CPI  R26,LOW(0x2B)
000900 f049      	BREQ _0x200005D
000901 c017      	RJMP _0x200005E
                 _0x200005B:
000902 940e 1052 	CALL SUBOPT_0x45
000904 940e 1107 	CALL __ANEGF1
000906 940e 104b 	CALL SUBOPT_0x43
000908 e2ed      	LDI  R30,LOW(45)
000909 8bed      	STD  Y+21,R30
                 _0x200005D:
00090a ff07      	SBRS R16,7
00090b c005      	RJMP _0x200005F
00090c 89ed      	LDD  R30,Y+21
00090d 93ea      	ST   -Y,R30
00090e 940e 103c 	CALL SUBOPT_0x41
000910 c008      	RJMP _0x2000060
                 _0x200005F:
000911 85ee      	LDD  R30,Y+14
000912 85ff      	LDD  R31,Y+14+1
000913 9631      	ADIW R30,1
000914 87ee      	STD  Y+14,R30
000915 87ff      	STD  Y+14+1,R31
000916 9731      	SBIW R30,1
000917 89ad      	LDD  R26,Y+21
000918 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000919 ff05      	SBRS R16,5
00091a e046      	LDI  R20,LOW(6)
00091b 3626      	CPI  R18,102
00091c f461      	BRNE _0x2000062
00091d 940e 1052 	CALL SUBOPT_0x45
00091f 940e 1394 	CALL __PUTPARD1
000921 934a      	ST   -Y,R20
000922 89eb      	LDD  R30,Y+19
000923 89fc      	LDD  R31,Y+19+1
000924 93fa      	ST   -Y,R31
000925 93ea      	ST   -Y,R30
000926 940e 0d53 	CALL _ftoa
000928 c00b      	RJMP _0x2000063
                 _0x2000062:
000929 940e 1052 	CALL SUBOPT_0x45
00092b 940e 1394 	CALL __PUTPARD1
00092d 934a      	ST   -Y,R20
00092e 932a      	ST   -Y,R18
00092f 89ec      	LDD  R30,Y+20
000930 89fd      	LDD  R31,Y+20+1
000931 93fa      	ST   -Y,R31
000932 93ea      	ST   -Y,R30
000933 de55      	RCALL __ftoe_G100
                 _0x2000063:
000934 01fe      	MOVW R30,R28
000935 9676      	ADIW R30,22
000936 940e 1057 	CALL SUBOPT_0x46
000938 c01e      	RJMP _0x2000064
                 _0x200005A:
000939 37e3      	CPI  R30,LOW(0x73)
00093a f439      	BRNE _0x2000066
00093b 940e 1050 	CALL SUBOPT_0x44
00093d 940e 105f 	CALL SUBOPT_0x47
00093f 940e 1057 	CALL SUBOPT_0x46
000941 c00e      	RJMP _0x2000067
                 _0x2000066:
000942 37e0      	CPI  R30,LOW(0x70)
000943 f4c1      	BRNE _0x2000069
000944 940e 1050 	CALL SUBOPT_0x44
000946 940e 105f 	CALL SUBOPT_0x47
000948 87ee      	STD  Y+14,R30
000949 87ff      	STD  Y+14+1,R31
00094a 93fa      	ST   -Y,R31
00094b 93ea      	ST   -Y,R30
00094c 940e 0d48 	CALL _strlenf
00094e 2f1e      	MOV  R17,R30
00094f 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000950 770f      	ANDI R16,LOW(127)
000951 3040      	CPI  R20,0
000952 f011      	BREQ _0x200006B
000953 1741      	CP   R20,R17
000954 f008      	BRLO _0x200006C
                 _0x200006B:
000955 c001      	RJMP _0x200006A
                 _0x200006C:
000956 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000957 e040      	LDI  R20,LOW(0)
000958 e0e0      	LDI  R30,LOW(0)
000959 8bec      	STD  Y+20,R30
00095a e030      	LDI  R19,LOW(0)
00095b c06e      	RJMP _0x200006D
                 _0x2000069:
00095c 36e4      	CPI  R30,LOW(0x64)
00095d f011      	BREQ _0x2000070
00095e 36e9      	CPI  R30,LOW(0x69)
00095f f411      	BRNE _0x2000071
                 _0x2000070:
000960 6004      	ORI  R16,LOW(4)
000961 c002      	RJMP _0x2000072
                 _0x2000071:
000962 37e5      	CPI  R30,LOW(0x75)
000963 f4a1      	BRNE _0x2000073
                 _0x2000072:
000964 e0ea      	LDI  R30,LOW(10)
000965 8bec      	STD  Y+20,R30
000966 ff01      	SBRS R16,1
000967 c008      	RJMP _0x2000074
                +
000968 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000969 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00096a e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00096b e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00096c 940e 1064 	CALL SUBOPT_0x48
00096e e01a      	LDI  R17,LOW(10)
00096f c023      	RJMP _0x2000075
                 _0x2000074:
                +
000970 e1e0     +LDI R30 , LOW ( 0x2710 )
000971 e2f7     +LDI R31 , HIGH ( 0x2710 )
000972 e060     +LDI R22 , BYTE3 ( 0x2710 )
000973 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000974 940e 1064 	CALL SUBOPT_0x48
000976 e015      	LDI  R17,LOW(5)
000977 c01b      	RJMP _0x2000075
                 _0x2000073:
000978 35e8      	CPI  R30,LOW(0x58)
000979 f411      	BRNE _0x2000077
00097a 6008      	ORI  R16,LOW(8)
00097b c004      	RJMP _0x2000078
                 _0x2000077:
00097c 37e8      	CPI  R30,LOW(0x78)
00097d f011      	BREQ PC+3
00097e 940c 0a6a 	JMP _0x20000B6
                 _0x2000078:
000980 e1e0      	LDI  R30,LOW(16)
000981 8bec      	STD  Y+20,R30
000982 ff01      	SBRS R16,1
000983 c008      	RJMP _0x200007A
                +
000984 e0e0     +LDI R30 , LOW ( 0x10000000 )
000985 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000986 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000987 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000988 940e 1064 	CALL SUBOPT_0x48
00098a e018      	LDI  R17,LOW(8)
00098b c007      	RJMP _0x2000075
                 _0x200007A:
                +
00098c e0e0     +LDI R30 , LOW ( 0x1000 )
00098d e1f0     +LDI R31 , HIGH ( 0x1000 )
00098e e060     +LDI R22 , BYTE3 ( 0x1000 )
00098f e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000990 940e 1064 	CALL SUBOPT_0x48
000992 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000993 3040      	CPI  R20,0
000994 f011      	BREQ _0x200007B
000995 770f      	ANDI R16,LOW(127)
000996 c001      	RJMP _0x200007C
                 _0x200007B:
000997 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000998 ff01      	SBRS R16,1
000999 c008      	RJMP _0x200007D
00099a 940e 1050 	CALL SUBOPT_0x44
00099c 940e 1044 	CALL SUBOPT_0x42
00099e 9614      	ADIW R26,4
00099f 940e 1370 	CALL __GETD1P
0009a1 c00f      	RJMP _0x2000113
                 _0x200007D:
0009a2 ff02      	SBRS R16,2
0009a3 c007      	RJMP _0x200007F
0009a4 940e 1050 	CALL SUBOPT_0x44
0009a6 940e 105f 	CALL SUBOPT_0x47
0009a8 940e 12d0 	CALL __CWD1
0009aa c006      	RJMP _0x2000113
                 _0x200007F:
0009ab 940e 1050 	CALL SUBOPT_0x44
0009ad 940e 105f 	CALL SUBOPT_0x47
0009af 2766      	CLR  R22
0009b0 2777      	CLR  R23
                 _0x2000113:
                +
0009b1 87ea     +STD Y + 10 , R30
0009b2 87fb     +STD Y + 10 + 1 , R31
0009b3 876c     +STD Y + 10 + 2 , R22
0009b4 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0009b5 ff02      	SBRS R16,2
0009b6 c012      	RJMP _0x2000081
0009b7 85ad      	LDD  R26,Y+13
0009b8 23aa      	TST  R26
0009b9 f442      	BRPL _0x2000082
0009ba 940e 1052 	CALL SUBOPT_0x45
0009bc 940e 12bd 	CALL __ANEGD1
0009be 940e 104b 	CALL SUBOPT_0x43
0009c0 e2ed      	LDI  R30,LOW(45)
0009c1 8bed      	STD  Y+21,R30
                 _0x2000082:
0009c2 89ed      	LDD  R30,Y+21
0009c3 30e0      	CPI  R30,0
0009c4 f019      	BREQ _0x2000083
0009c5 5f1f      	SUBI R17,-LOW(1)
0009c6 5f4f      	SUBI R20,-LOW(1)
0009c7 c001      	RJMP _0x2000084
                 _0x2000083:
0009c8 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
0009c9 2f34      	MOV  R19,R20
                 _0x200006D:
0009ca fd00      	SBRC R16,0
0009cb c014      	RJMP _0x2000085
                 _0x2000086:
0009cc 1715      	CP   R17,R21
0009cd f410      	BRSH _0x2000089
0009ce 1735      	CP   R19,R21
0009cf f008      	BRLO _0x200008A
                 _0x2000089:
0009d0 c00f      	RJMP _0x2000088
                 _0x200008A:
0009d1 ff07      	SBRS R16,7
0009d2 c008      	RJMP _0x200008B
0009d3 ff02      	SBRS R16,2
0009d4 c004      	RJMP _0x200008C
0009d5 7f0b      	ANDI R16,LOW(251)
0009d6 892d      	LDD  R18,Y+21
0009d7 5011      	SUBI R17,LOW(1)
0009d8 c001      	RJMP _0x200008D
                 _0x200008C:
0009d9 e320      	LDI  R18,LOW(48)
                 _0x200008D:
0009da c001      	RJMP _0x200008E
                 _0x200008B:
0009db e220      	LDI  R18,LOW(32)
                 _0x200008E:
0009dc 940e 1025 	CALL SUBOPT_0x3E
0009de 5051      	SUBI R21,LOW(1)
0009df cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0009e0 1714      	CP   R17,R20
0009e1 f490      	BRSH _0x2000091
0009e2 6100      	ORI  R16,LOW(16)
0009e3 ff02      	SBRS R16,2
0009e4 c006      	RJMP _0x2000092
0009e5 940e 1069 	CALL SUBOPT_0x49
0009e7 f009      	BREQ _0x2000093
0009e8 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0009e9 5011      	SUBI R17,LOW(1)
0009ea 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0009eb e3e0      	LDI  R30,LOW(48)
0009ec 93ea      	ST   -Y,R30
0009ed 940e 103c 	CALL SUBOPT_0x41
0009ef 3050      	CPI  R21,0
0009f0 f009      	BREQ _0x2000094
0009f1 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0009f2 5041      	SUBI R20,LOW(1)
0009f3 cfec      	RJMP _0x200008F
                 _0x2000091:
0009f4 2f31      	MOV  R19,R17
0009f5 89ec      	LDD  R30,Y+20
0009f6 30e0      	CPI  R30,0
0009f7 f4b9      	BRNE _0x2000095
                 _0x2000096:
0009f8 3030      	CPI  R19,0
0009f9 f0a1      	BREQ _0x2000098
0009fa ff03      	SBRS R16,3
0009fb c006      	RJMP _0x2000099
0009fc 85ee      	LDD  R30,Y+14
0009fd 85ff      	LDD  R31,Y+14+1
0009fe 9125      	LPM  R18,Z+
0009ff 87ee      	STD  Y+14,R30
000a00 87ff      	STD  Y+14+1,R31
000a01 c005      	RJMP _0x200009A
                 _0x2000099:
000a02 85ae      	LDD  R26,Y+14
000a03 85bf      	LDD  R27,Y+14+1
000a04 912d      	LD   R18,X+
000a05 87ae      	STD  Y+14,R26
000a06 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000a07 940e 1025 	CALL SUBOPT_0x3E
000a09 3050      	CPI  R21,0
000a0a f009      	BREQ _0x200009B
000a0b 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000a0c 5031      	SUBI R19,LOW(1)
000a0d cfea      	RJMP _0x2000096
                 _0x2000098:
000a0e c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000a0f 940e 107d 	CALL SUBOPT_0x4A
000a11 940e 1318 	CALL __DIVD21U
000a13 2f2e      	MOV  R18,R30
000a14 302a      	CPI  R18,10
000a15 f030      	BRLO _0x20000A0
000a16 ff03      	SBRS R16,3
000a17 c002      	RJMP _0x20000A1
000a18 5c29      	SUBI R18,-LOW(55)
000a19 c001      	RJMP _0x20000A2
                 _0x20000A1:
000a1a 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000a1b c001      	RJMP _0x20000A3
                 _0x20000A0:
000a1c 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000a1d fd04      	SBRC R16,4
000a1e c021      	RJMP _0x20000A5
000a1f 3321      	CPI  R18,49
000a20 f460      	BRSH _0x20000A7
                +
000a21 89a8     +LDD R26 , Y + 16
000a22 89b9     +LDD R27 , Y + 16 + 1
000a23 898a     +LDD R24 , Y + 16 + 2
000a24 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000a25 30a1     +CPI R26 , LOW ( 0x1 )
000a26 e0e0     +LDI R30 , HIGH ( 0x1 )
000a27 07be     +CPC R27 , R30
000a28 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000a29 078e     +CPC R24 , R30
000a2a e0e0     +LDI R30 , BYTE4 ( 0x1 )
000a2b 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000a2c f409      	BRNE _0x20000A6
                 _0x20000A7:
000a2d c00b      	RJMP _0x20000A9
                 _0x20000A6:
000a2e 1743      	CP   R20,R19
000a2f f440      	BRSH _0x2000114
000a30 1753      	CP   R21,R19
000a31 f010      	BRLO _0x20000AC
000a32 ff00      	SBRS R16,0
000a33 c001      	RJMP _0x20000AD
                 _0x20000AC:
000a34 c010      	RJMP _0x20000AB
                 _0x20000AD:
000a35 e220      	LDI  R18,LOW(32)
000a36 ff07      	SBRS R16,7
000a37 c008      	RJMP _0x20000AE
                 _0x2000114:
000a38 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000a39 6100      	ORI  R16,LOW(16)
000a3a ff02      	SBRS R16,2
000a3b c004      	RJMP _0x20000AF
000a3c 940e 1069 	CALL SUBOPT_0x49
000a3e f009      	BREQ _0x20000B0
000a3f 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000a40 940e 1025 	CALL SUBOPT_0x3E
000a42 3050      	CPI  R21,0
000a43 f009      	BREQ _0x20000B1
000a44 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000a45 5031      	SUBI R19,LOW(1)
000a46 940e 107d 	CALL SUBOPT_0x4A
000a48 940e 1349 	CALL __MODD21U
000a4a 940e 104b 	CALL SUBOPT_0x43
000a4c 89ec      	LDD  R30,Y+20
                +
000a4d 89a8     +LDD R26 , Y + 16
000a4e 89b9     +LDD R27 , Y + 16 + 1
000a4f 898a     +LDD R24 , Y + 16 + 2
000a50 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000a51 27ff      	CLR  R31
000a52 2766      	CLR  R22
000a53 2777      	CLR  R23
000a54 940e 1318 	CALL __DIVD21U
000a56 940e 1064 	CALL SUBOPT_0x48
                +
000a58 89e8     +LDD R30 , Y + 16
000a59 89f9     +LDD R31 , Y + 16 + 1
000a5a 896a     +LDD R22 , Y + 16 + 2
000a5b 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000a5c 940e 13ab 	CALL __CPD10
000a5e f009      	BREQ _0x200009F
000a5f cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000a60 ff00      	SBRS R16,0
000a61 c008      	RJMP _0x20000B2
                 _0x20000B3:
000a62 3050      	CPI  R21,0
000a63 f031      	BREQ _0x20000B5
000a64 5051      	SUBI R21,LOW(1)
000a65 e2e0      	LDI  R30,LOW(32)
000a66 93ea      	ST   -Y,R30
000a67 940e 103c 	CALL SUBOPT_0x41
000a69 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x2000112:
000a6a e010      	LDI  R17,LOW(0)
                 _0x2000035:
000a6b ce06      	RJMP _0x2000030
                 _0x2000032:
000a6c 81ae      	LDD  R26,Y+6
000a6d 81bf      	LDD  R27,Y+6+1
000a6e 940e 136c 	CALL __GETW1P
000a70 940e 13bc 	CALL __LOADLOCR6
000a72 96ef      	ADIW R28,63
000a73 966f      	ADIW R28,31
000a74 9508      	RET
                 _sprintf:
000a75 92ff      	PUSH R15
000a76 2ef8      	MOV  R15,R24
000a77 9726      	SBIW R28,6
000a78 940e 13b7 	CALL __SAVELOCR4
000a7a 940e 1086 	CALL SUBOPT_0x4B
000a7c 9730      	SBIW R30,0
000a7d f419      	BRNE _0x20000B7
000a7e efef      	LDI  R30,LOW(65535)
000a7f efff      	LDI  R31,HIGH(65535)
000a80 c023      	RJMP _0x20A0008
                 _0x20000B7:
000a81 01de      	MOVW R26,R28
000a82 9616      	ADIW R26,6
000a83 940e 12b0 	CALL __ADDW2R15
000a85 018d      	MOVW R16,R26
000a86 940e 1086 	CALL SUBOPT_0x4B
000a88 83ee      	STD  Y+6,R30
000a89 83ff      	STD  Y+6+1,R31
000a8a e0e0      	LDI  R30,LOW(0)
000a8b 87e8      	STD  Y+8,R30
000a8c 87e9      	STD  Y+8+1,R30
000a8d 01de      	MOVW R26,R28
000a8e 961a      	ADIW R26,10
000a8f 940e 108d 	CALL SUBOPT_0x4C
000a91 93fa      	ST   -Y,R31
000a92 93ea      	ST   -Y,R30
000a93 931a      	ST   -Y,R17
000a94 930a      	ST   -Y,R16
000a95 e5e2      	LDI  R30,LOW(_put_buff_G100)
000a96 e0f7      	LDI  R31,HIGH(_put_buff_G100)
000a97 93fa      	ST   -Y,R31
000a98 93ea      	ST   -Y,R30
000a99 01fe      	MOVW R30,R28
000a9a 963a      	ADIW R30,10
000a9b 93fa      	ST   -Y,R31
000a9c 93ea      	ST   -Y,R30
000a9d ddbb      	RCALL __print_G100
000a9e 019f      	MOVW R18,R30
000a9f 81ae      	LDD  R26,Y+6
000aa0 81bf      	LDD  R27,Y+6+1
000aa1 e0e0      	LDI  R30,LOW(0)
000aa2 93ec      	ST   X,R30
000aa3 01f9      	MOVW R30,R18
                 _0x20A0008:
000aa4 940e 13be 	CALL __LOADLOCR4
000aa6 962a      	ADIW R28,10
000aa7 90ff      	POP  R15
000aa8 9508      	RET
                 _get_buff_G100:
000aa9 931a      	ST   -Y,R17
000aaa 81a9      	LDD  R26,Y+1
000aab 81ba      	LDD  R27,Y+1+1
000aac e0e0      	LDI  R30,LOW(0)
000aad 93ec      	ST   X,R30
000aae 81ab      	LDD  R26,Y+3
000aaf 81bc      	LDD  R27,Y+3+1
000ab0 91ec      	LD   R30,X
000ab1 2f1e      	MOV  R17,R30
000ab2 30e0      	CPI  R30,0
000ab3 f019      	BREQ _0x20000BF
000ab4 e0e0      	LDI  R30,LOW(0)
000ab5 93ec      	ST   X,R30
000ab6 c016      	RJMP _0x20000C0
                 _0x20000BF:
000ab7 81a9      	LDD  R26,Y+1
000ab8 81ba      	LDD  R27,Y+1+1
000ab9 9611      	ADIW R26,1
000aba 940e 136c 	CALL __GETW1P
000abc 9730      	SBIW R30,0
000abd f071      	BREQ _0x20000C1
000abe 81e9      	LDD  R30,Y+1
000abf 81fa      	LDD  R31,Y+1+1
000ac0 81a1      	LDD  R26,Z+1
000ac1 81b2      	LDD  R27,Z+2
000ac2 91ec      	LD   R30,X
000ac3 2f1e      	MOV  R17,R30
000ac4 30e0      	CPI  R30,0
000ac5 f029      	BREQ _0x20000C2
000ac6 81a9      	LDD  R26,Y+1
000ac7 81ba      	LDD  R27,Y+1+1
000ac8 9611      	ADIW R26,1
000ac9 940e 0f3f 	CALL SUBOPT_0x1F
                 _0x20000C2:
000acb c001      	RJMP _0x20000C3
                 _0x20000C1:
000acc e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000acd 2fe1      	MOV  R30,R17
000ace 8118      	LDD  R17,Y+0
                 _0x20A0007:
000acf 9625      	ADIW R28,5
000ad0 9508      	RET
                 __scanf_G100:
000ad1 9728      	SBIW R28,8
000ad2 940e 13b5 	CALL __SAVELOCR6
000ad4 e0e0      	LDI  R30,LOW(0)
000ad5 e0f0      	LDI  R31,HIGH(0)
000ad6 87ea      	STD  Y+10,R30
000ad7 87fb      	STD  Y+10+1,R31
000ad8 87ed      	STD  Y+13,R30
                 _0x20000C4:
000ad9 89ec      	LDD  R30,Y+20
000ada 89fd      	LDD  R31,Y+20+1
000adb 9631      	ADIW R30,1
000adc 8bec      	STD  Y+20,R30
000add 8bfd      	STD  Y+20+1,R31
000ade 9731      	SBIW R30,1
000adf 91e4      	LPM  R30,Z
000ae0 2f3e      	MOV  R19,R30
000ae1 30e0      	CPI  R30,0
000ae2 f411      	BRNE PC+3
000ae3 940c 0c05 	JMP _0x20000C6
000ae5 940e 1092 	CALL SUBOPT_0x4D
000ae7 f091      	BREQ _0x20000C7
                 _0x20000C8:
000ae8 940e 1097 	CALL SUBOPT_0x4E
000aea 2f3e      	MOV  R19,R30
000aeb 30e0      	CPI  R30,0
000aec f019      	BREQ _0x20000CB
000aed 940e 1092 	CALL SUBOPT_0x4D
000aef f409      	BRNE _0x20000CC
                 _0x20000CB:
000af0 c007      	RJMP _0x20000CA
                 _0x20000CC:
000af1 940e 10a3 	CALL SUBOPT_0x4F
000af3 f41c      	BRGE _0x20000CD
000af4 efef      	LDI  R30,LOW(65535)
000af5 efff      	LDI  R31,HIGH(65535)
000af6 c110      	RJMP _0x20A0005
                 _0x20000CD:
000af7 cff0      	RJMP _0x20000C8
                 _0x20000CA:
                +
000af8 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000af9 c10a      	RJMP _0x20000CE
                 _0x20000C7:
000afa 3235      	CPI  R19,37
000afb f011      	BREQ PC+3
000afc 940c 0bf2 	JMP _0x20000CF
000afe e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000aff 89ec      	LDD  R30,Y+20
000b00 89fd      	LDD  R31,Y+20+1
000b01 9135      	LPM  R19,Z+
000b02 8bec      	STD  Y+20,R30
000b03 8bfd      	STD  Y+20+1,R31
000b04 3330      	CPI  R19,48
000b05 f010      	BRLO _0x20000D4
000b06 333a      	CPI  R19,58
000b07 f008      	BRLO _0x20000D3
                 _0x20000D4:
000b08 c007      	RJMP _0x20000D2
                 _0x20000D3:
000b09 e0aa      	LDI  R26,LOW(10)
000b0a 9f5a      	MUL  R21,R26
000b0b 2d50      	MOV  R21,R0
000b0c 2fe3      	MOV  R30,R19
000b0d 53e0      	SUBI R30,LOW(48)
000b0e 0f5e      	ADD  R21,R30
000b0f cfef      	RJMP _0x20000D0
                 _0x20000D2:
000b10 3030      	CPI  R19,0
000b11 f409      	BRNE _0x20000D6
000b12 c0f2      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000b13 940e 1097 	CALL SUBOPT_0x4E
000b15 2f2e      	MOV  R18,R30
000b16 93ea      	ST   -Y,R30
000b17 940e 0d1b 	CALL _isspace
000b19 30e0      	CPI  R30,0
000b1a f039      	BREQ _0x20000D9
000b1b 940e 10a3 	CALL SUBOPT_0x4F
000b1d f41c      	BRGE _0x20000DA
000b1e efef      	LDI  R30,LOW(65535)
000b1f efff      	LDI  R31,HIGH(65535)
000b20 c0e6      	RJMP _0x20A0005
                 _0x20000DA:
000b21 cff1      	RJMP _0x20000D7
                 _0x20000D9:
000b22 3020      	CPI  R18,0
000b23 f409      	BRNE _0x20000DB
000b24 c0d7      	RJMP _0x20000DC
                 _0x20000DB:
                +
000b25 872d     +STD Y + 13 , R18
                 	__PUTBSR 18,13
000b26 3050      	CPI  R21,0
000b27 f409      	BRNE _0x20000DD
000b28 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000b29 e040      	LDI  R20,LOW(0)
000b2a 2fe3      	MOV  R30,R19
000b2b 36e3      	CPI  R30,LOW(0x63)
000b2c f469      	BRNE _0x20000E1
000b2d 940e 10a8 	CALL SUBOPT_0x50
000b2f 940e 1097 	CALL SUBOPT_0x4E
000b31 01d8      	MOVW R26,R16
000b32 93ec      	ST   X,R30
000b33 940e 10a3 	CALL SUBOPT_0x4F
000b35 f41c      	BRGE _0x20000E2
000b36 efef      	LDI  R30,LOW(65535)
000b37 efff      	LDI  R31,HIGH(65535)
000b38 c0ce      	RJMP _0x20A0005
                 _0x20000E2:
000b39 c0b2      	RJMP _0x20000E0
                 _0x20000E1:
000b3a 37e3      	CPI  R30,LOW(0x73)
000b3b f511      	BRNE _0x20000E3
000b3c 940e 10a8 	CALL SUBOPT_0x50
                 _0x20000E4:
000b3e 2fe5      	MOV  R30,R21
000b3f 5051      	SUBI R21,1
000b40 30e0      	CPI  R30,0
000b41 f0c1      	BREQ _0x20000E6
000b42 940e 1097 	CALL SUBOPT_0x4E
000b44 2f3e      	MOV  R19,R30
000b45 30e0      	CPI  R30,0
000b46 f019      	BREQ _0x20000E8
000b47 940e 1092 	CALL SUBOPT_0x4D
000b49 f039      	BREQ _0x20000E7
                 _0x20000E8:
000b4a 940e 10a3 	CALL SUBOPT_0x4F
000b4c f41c      	BRGE _0x20000EA
000b4d efef      	LDI  R30,LOW(65535)
000b4e efff      	LDI  R31,HIGH(65535)
000b4f c0b7      	RJMP _0x20A0005
                 _0x20000EA:
000b50 c009      	RJMP _0x20000E6
                 _0x20000E7:
000b51 931f      	PUSH R17
000b52 930f      	PUSH R16
                +
000b53 5f0f     +SUBI R16 , LOW ( - 1 )
000b54 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000b55 2fe3      	MOV  R30,R19
000b56 91af      	POP  R26
000b57 91bf      	POP  R27
000b58 93ec      	ST   X,R30
000b59 cfe4      	RJMP _0x20000E4
                 _0x20000E6:
000b5a 01d8      	MOVW R26,R16
000b5b e0e0      	LDI  R30,LOW(0)
000b5c 93ec      	ST   X,R30
000b5d c08e      	RJMP _0x20000E0
                 _0x20000E3:
000b5e 36ec      	CPI  R30,LOW(0x6C)
000b5f f431      	BRNE _0x20000EC
000b60 e041      	LDI  R20,LOW(1)
000b61 89ec      	LDD  R30,Y+20
000b62 89fd      	LDD  R31,Y+20+1
000b63 9135      	LPM  R19,Z+
000b64 8bec      	STD  Y+20,R30
000b65 8bfd      	STD  Y+20+1,R31
                 _0x20000EC:
000b66 e0e1      	LDI  R30,LOW(1)
000b67 87ec      	STD  Y+12,R30
000b68 2fe3      	MOV  R30,R19
000b69 36e4      	CPI  R30,LOW(0x64)
000b6a f011      	BREQ _0x20000F1
000b6b 36e9      	CPI  R30,LOW(0x69)
000b6c f419      	BRNE _0x20000F2
                 _0x20000F1:
000b6d e0e0      	LDI  R30,LOW(0)
000b6e 87ec      	STD  Y+12,R30
000b6f c002      	RJMP _0x20000F3
                 _0x20000F2:
000b70 37e5      	CPI  R30,LOW(0x75)
000b71 f411      	BRNE _0x20000F4
                 _0x20000F3:
000b72 e02a      	LDI  R18,LOW(10)
000b73 c008      	RJMP _0x20000EF
                 _0x20000F4:
000b74 37e8      	CPI  R30,LOW(0x78)
000b75 f411      	BRNE _0x20000F5
000b76 e120      	LDI  R18,LOW(16)
000b77 c004      	RJMP _0x20000EF
                 _0x20000F5:
000b78 32e5      	CPI  R30,LOW(0x25)
000b79 f409      	BRNE _0x20000F8
000b7a c077      	RJMP _0x20000F7
                 _0x20000F8:
000b7b c089      	RJMP _0x20A0006
                 _0x20000EF:
000b7c e0e0      	LDI  R30,LOW(0)
                +
000b7d 83ee     +STD Y + 6 , R30
000b7e 83ef     +STD Y + 6 + 1 , R30
000b7f 87e8     +STD Y + 6 + 2 , R30
000b80 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
                 _0x20000F9:
000b81 2fe5      	MOV  R30,R21
000b82 5051      	SUBI R21,1
000b83 30e0      	CPI  R30,0
000b84 f411      	BRNE PC+3
000b85 940c 0bcc 	JMP _0x20000FB
000b87 940e 1097 	CALL SUBOPT_0x4E
000b89 2f3e      	MOV  R19,R30
000b8a 32e1      	CPI  R30,LOW(0x21)
000b8b f438      	BRSH _0x20000FC
000b8c 940e 10a3 	CALL SUBOPT_0x4F
000b8e f41c      	BRGE _0x20000FD
000b8f efef      	LDI  R30,LOW(65535)
000b90 efff      	LDI  R31,HIGH(65535)
000b91 c075      	RJMP _0x20A0005
                 _0x20000FD:
000b92 c017      	RJMP _0x20000FE
                 _0x20000FC:
000b93 85ec      	LDD  R30,Y+12
000b94 30e0      	CPI  R30,0
000b95 f439      	BRNE _0x20000FF
000b96 323d      	CPI  R19,45
000b97 f419      	BRNE _0x2000100
000b98 efef      	LDI  R30,LOW(255)
000b99 87ec      	STD  Y+12,R30
000b9a cfe6      	RJMP _0x20000F9
                 _0x2000100:
000b9b e0e1      	LDI  R30,LOW(1)
000b9c 87ec      	STD  Y+12,R30
                 _0x20000FF:
000b9d 3120      	CPI  R18,16
000b9e f431      	BRNE _0x2000102
000b9f 933a      	ST   -Y,R19
000ba0 940e 0d25 	CALL _isxdigit
000ba2 30e0      	CPI  R30,0
000ba3 f031      	BREQ _0x20000FE
000ba4 c007      	RJMP _0x2000104
                 _0x2000102:
000ba5 933a      	ST   -Y,R19
000ba6 940e 0d13 	CALL _isdigit
000ba8 30e0      	CPI  R30,0
000ba9 f411      	BRNE _0x2000105
                 _0x20000FE:
                +
000baa 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000bab c020      	RJMP _0x20000FB
                 _0x2000105:
                 _0x2000104:
000bac 3631      	CPI  R19,97
000bad f010      	BRLO _0x2000106
000bae 5537      	SUBI R19,LOW(87)
000baf c005      	RJMP _0x2000107
                 _0x2000106:
000bb0 3431      	CPI  R19,65
000bb1 f010      	BRLO _0x2000108
000bb2 5337      	SUBI R19,LOW(55)
000bb3 c001      	RJMP _0x2000109
                 _0x2000108:
000bb4 5330      	SUBI R19,LOW(48)
                 _0x2000109:
                 _0x2000107:
000bb5 2fe2      	MOV  R30,R18
                +
000bb6 81ae     +LDD R26 , Y + 6
000bb7 81bf     +LDD R27 , Y + 6 + 1
000bb8 8588     +LDD R24 , Y + 6 + 2
000bb9 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000bba 27ff      	CLR  R31
000bbb 2766      	CLR  R22
000bbc 2777      	CLR  R23
000bbd 940e 12da 	CALL __MULD12U
000bbf 01df      	MOVW R26,R30
000bc0 01cb      	MOVW R24,R22
000bc1 2fe3      	MOV  R30,R19
000bc2 27ff      	CLR  R31
000bc3 2766      	CLR  R22
000bc4 2777      	CLR  R23
000bc5 940e 12b4 	CALL __ADDD12
                +
000bc7 83ee     +STD Y + 6 , R30
000bc8 83ff     +STD Y + 6 + 1 , R31
000bc9 8768     +STD Y + 6 + 2 , R22
000bca 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000bcb cfb5      	RJMP _0x20000F9
                 _0x20000FB:
000bcc 85ec      	LDD  R30,Y+12
                +
000bcd 81ae     +LDD R26 , Y + 6
000bce 81bf     +LDD R27 , Y + 6 + 1
000bcf 8588     +LDD R24 , Y + 6 + 2
000bd0 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000bd1 940e 12ca 	CALL __CBD1
000bd3 940e 12da 	CALL __MULD12U
                +
000bd5 83ee     +STD Y + 6 , R30
000bd6 83ff     +STD Y + 6 + 1 , R31
000bd7 8768     +STD Y + 6 + 2 , R22
000bd8 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000bd9 3040      	CPI  R20,0
000bda f051      	BREQ _0x200010A
000bdb 940e 10a8 	CALL SUBOPT_0x50
                +
000bdd 81ee     +LDD R30 , Y + 6
000bde 81ff     +LDD R31 , Y + 6 + 1
000bdf 8568     +LDD R22 , Y + 6 + 2
000be0 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000be1 01d8      	MOVW R26,R16
000be2 940e 137b 	CALL __PUTDP1
000be4 c007      	RJMP _0x200010B
                 _0x200010A:
000be5 940e 10a8 	CALL SUBOPT_0x50
000be7 81ee      	LDD  R30,Y+6
000be8 81ff      	LDD  R31,Y+6+1
000be9 01d8      	MOVW R26,R16
000bea 93ed      	ST   X+,R30
000beb 93fc      	ST   X,R31
                 _0x200010B:
                 _0x20000E0:
000bec 85ea      	LDD  R30,Y+10
000bed 85fb      	LDD  R31,Y+10+1
000bee 9631      	ADIW R30,1
000bef 87ea      	STD  Y+10,R30
000bf0 87fb      	STD  Y+10+1,R31
000bf1 c012      	RJMP _0x200010C
                 _0x20000CF:
                 _0x20000F7:
000bf2 940e 1097 	CALL SUBOPT_0x4E
000bf4 17e3      	CP   R30,R19
000bf5 f071      	BREQ _0x200010D
000bf6 940e 10a3 	CALL SUBOPT_0x4F
000bf8 f41c      	BRGE _0x200010E
000bf9 efef      	LDI  R30,LOW(65535)
000bfa efff      	LDI  R31,HIGH(65535)
000bfb c00b      	RJMP _0x20A0005
                 _0x200010E:
                 _0x20000DC:
000bfc 85ea      	LDD  R30,Y+10
000bfd 85fb      	LDD  R31,Y+10+1
000bfe 9730      	SBIW R30,0
000bff f419      	BRNE _0x200010F
000c00 efef      	LDI  R30,LOW(65535)
000c01 efff      	LDI  R31,HIGH(65535)
000c02 c004      	RJMP _0x20A0005
                 _0x200010F:
000c03 c001      	RJMP _0x20000C6
                 _0x200010D:
                 _0x200010C:
                 _0x20000CE:
000c04 ced4      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000c05 85ea      	LDD  R30,Y+10
000c06 85fb      	LDD  R31,Y+10+1
                 _0x20A0005:
000c07 940e 13bc 	CALL __LOADLOCR6
000c09 9666      	ADIW R28,22
000c0a 9508      	RET
                 _sscanf:
000c0b 92ff      	PUSH R15
000c0c 2ef8      	MOV  R15,R24
000c0d 9723      	SBIW R28,3
000c0e 931a      	ST   -Y,R17
000c0f 930a      	ST   -Y,R16
000c10 01de      	MOVW R26,R28
000c11 9617      	ADIW R26,7
000c12 940e 108d 	CALL SUBOPT_0x4C
000c14 9730      	SBIW R30,0
000c15 f419      	BRNE _0x2000110
000c16 efef      	LDI  R30,LOW(65535)
000c17 efff      	LDI  R31,HIGH(65535)
000c18 c01c      	RJMP _0x20A0004
                 _0x2000110:
000c19 01de      	MOVW R26,R28
000c1a 9611      	ADIW R26,1
000c1b 940e 12b0 	CALL __ADDW2R15
000c1d 018d      	MOVW R16,R26
000c1e 01de      	MOVW R26,R28
000c1f 9617      	ADIW R26,7
000c20 940e 108d 	CALL SUBOPT_0x4C
000c22 83eb      	STD  Y+3,R30
000c23 83fc      	STD  Y+3+1,R31
000c24 01de      	MOVW R26,R28
000c25 9615      	ADIW R26,5
000c26 940e 108d 	CALL SUBOPT_0x4C
000c28 93fa      	ST   -Y,R31
000c29 93ea      	ST   -Y,R30
000c2a 931a      	ST   -Y,R17
000c2b 930a      	ST   -Y,R16
000c2c eae9      	LDI  R30,LOW(_get_buff_G100)
000c2d e0fa      	LDI  R31,HIGH(_get_buff_G100)
000c2e 93fa      	ST   -Y,R31
000c2f 93ea      	ST   -Y,R30
000c30 01fe      	MOVW R30,R28
000c31 9638      	ADIW R30,8
000c32 93fa      	ST   -Y,R31
000c33 93ea      	ST   -Y,R30
000c34 de9c      	RCALL __scanf_G100
                 _0x20A0004:
000c35 8119      	LDD  R17,Y+1
000c36 8108      	LDD  R16,Y+0
000c37 9625      	ADIW R28,5
000c38 90ff      	POP  R15
000c39 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000c3a 817b         ldd  r23,y+3
000c3b 816a         ldd  r22,y+2
000c3c 81f9         ldd  r31,y+1
000c3d 81e8         ld   r30,y
000c3e fb77         bst  r23,7
000c3f 0f77         lsl  r23
000c40 fd67         sbrc r22,7
000c41 6071         sbr  r23,1
000c42 2f97         mov  r25,r23
000c43 579e         subi r25,0x7e
000c44 f081         breq __ftrunc0
000c45 f078         brcs __ftrunc0
000c46 3198         cpi  r25,24
000c47 f490         brsh __ftrunc1
000c48 27aa         clr  r26
000c49 27bb         clr  r27
000c4a 2788         clr  r24
                 __ftrunc2:
000c4b 9408         sec
000c4c 9587         ror  r24
000c4d 95b7         ror  r27
000c4e 95a7         ror  r26
000c4f 959a         dec  r25
000c50 f7d1         brne __ftrunc2
000c51 23ea         and  r30,r26
000c52 23fb         and  r31,r27
000c53 2368         and  r22,r24
000c54 c005         rjmp __ftrunc1
                 __ftrunc0:
000c55 94e8         clt
000c56 2777         clr  r23
000c57 27ee         clr  r30
000c58 27ff         clr  r31
000c59 2766         clr  r22
                 __ftrunc1:
000c5a 776f         cbr  r22,0x80
000c5b 9576         lsr  r23
000c5c f408         brcc __ftrunc3
000c5d 6860         sbr  r22,0x80
                 __ftrunc3:
000c5e f977         bld  r23,7
000c5f 91a9         ld   r26,y+
000c60 91b9         ld   r27,y+
000c61 9189         ld   r24,y+
000c62 9199         ld   r25,y+
000c63 17ea         cp   r30,r26
000c64 07fb         cpc  r31,r27
000c65 0768         cpc  r22,r24
000c66 0779         cpc  r23,r25
000c67 fb97         bst  r25,7
000c68 9508         ret
                 _floor:
000c69 940e 10b3 	CALL SUBOPT_0x51
000c6b 940e 1394 	CALL __PUTPARD1
000c6d 940e 0c3a 	CALL _ftrunc
000c6f 940e 138f 	CALL __PUTD1S0
000c71 f419          brne __floor1
                 __floor0:
000c72 940e 10b3 	CALL SUBOPT_0x51
000c74 c09c      	RJMP _0x20A0003
                 __floor1:
000c75 f7e6          brtc __floor0
000c76 940e 10b3 	CALL SUBOPT_0x51
                +
000c78 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000c79 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000c7a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000c7b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000c7c 940e 11a6 	CALL __SUBF12
000c7e c092      	RJMP _0x20A0003
                 _sin:
000c7f 9724      	SBIW R28,4
000c80 931a      	ST   -Y,R17
000c81 e010      	LDI  R17,0
000c82 940e 10b6 	CALL SUBOPT_0x52
                +
000c84 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000c85 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000c86 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000c87 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000c88 940e 11fd 	CALL __MULF12
000c8a 940e 10bb 	CALL SUBOPT_0x53
000c8c 940e 10c0 	CALL SUBOPT_0x54
000c8e 940e 100f 	CALL SUBOPT_0x3A
000c90 940e 10b6 	CALL SUBOPT_0x52
000c92 940e 0e16 	CALL SUBOPT_0x5
000c94 940e 10bb 	CALL SUBOPT_0x53
000c96 940e 10c5 	CALL SUBOPT_0x55
000c98 940e 1290 	CALL __CMPF12
000c9a f009      	BREQ PC+2
000c9b f410      	BRCC PC+3
000c9c 940c 0ca9 	JMP  _0x2020017
000c9e 940e 10c0 	CALL SUBOPT_0x54
                +
000ca0 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000ca1 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000ca2 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000ca3 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000ca4 940e 11a6 	CALL __SUBF12
000ca6 940e 10bb 	CALL SUBOPT_0x53
000ca8 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000ca9 940e 10b6 	CALL SUBOPT_0x52
                +
000cab e0e0     +LDI R30 , LOW ( 0x3E800000 )
000cac e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000cad e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000cae e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000caf 940e 1290 	CALL __CMPF12
000cb1 f009      	BREQ PC+2
000cb2 f410      	BRCC PC+3
000cb3 940c 0cbb 	JMP  _0x2020018
000cb5 940e 10c5 	CALL SUBOPT_0x55
000cb7 940e 11a6 	CALL __SUBF12
000cb9 940e 10bb 	CALL SUBOPT_0x53
                 _0x2020018:
000cbb 3010      	CPI  R17,0
000cbc f031      	BREQ _0x2020019
000cbd 940e 10c0 	CALL SUBOPT_0x54
000cbf 940e 1107 	CALL __ANEGF1
000cc1 940e 10bb 	CALL SUBOPT_0x53
                 _0x2020019:
000cc3 940e 10c0 	CALL SUBOPT_0x54
000cc5 940e 10b6 	CALL SUBOPT_0x52
000cc7 940e 11fd 	CALL __MULF12
                +
000cc9 83e9     +STD Y + 1 , R30
000cca 83fa     +STD Y + 1 + 1 , R31
000ccb 836b     +STD Y + 1 + 2 , R22
000ccc 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000ccd eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000cce ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000ccf e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000cd0 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000cd1 940e 11fd 	CALL __MULF12
000cd3 01df      	MOVW R26,R30
000cd4 01cb      	MOVW R24,R22
                +
000cd5 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000cd6 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000cd7 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000cd8 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000cd9 940e 0e16 	CALL SUBOPT_0x5
000cdb 940e 10cb 	CALL SUBOPT_0x56
                +
000cdd e4ac     +LDI R26 , LOW ( 0x4104534C )
000cde e5b3     +LDI R27 , HIGH ( 0x4104534C )
000cdf e084     +LDI R24 , BYTE3 ( 0x4104534C )
000ce0 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000ce1 940e 11ad 	CALL __ADDF12
000ce3 940e 10b6 	CALL SUBOPT_0x52
000ce5 940e 11fd 	CALL __MULF12
000ce7 937f      	PUSH R23
000ce8 936f      	PUSH R22
000ce9 93ff      	PUSH R31
000cea 93ef      	PUSH R30
                +
000ceb 81e9     +LDD R30 , Y + 1
000cec 81fa     +LDD R31 , Y + 1 + 1
000ced 816b     +LDD R22 , Y + 1 + 2
000cee 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000cef e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000cf0 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000cf1 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000cf2 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000cf3 940e 11ad 	CALL __ADDF12
000cf5 940e 10cb 	CALL SUBOPT_0x56
                +
000cf7 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000cf8 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000cf9 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000cfa e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000cfb 940e 11ad 	CALL __ADDF12
000cfd 91af      	POP  R26
000cfe 91bf      	POP  R27
000cff 918f      	POP  R24
000d00 919f      	POP  R25
000d01 940e 124b 	CALL __DIVF21
000d03 8118      	LDD  R17,Y+0
000d04 9629      	ADIW R28,9
000d05 9508      	RET
                 _cos:
000d06 940e 138a 	CALL __GETD2S0
                +
000d08 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000d09 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000d0a ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000d0b e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000d0c 940e 11a6 	CALL __SUBF12
000d0e 940e 1394 	CALL __PUTPARD1
000d10 df6e      	RCALL _sin
                 _0x20A0003:
000d11 9624      	ADIW R28,4
000d12 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000d13 e0e1          ldi  r30,1
000d14 91f9          ld   r31,y+
000d15 33f0          cpi  r31,'0'
000d16 f010          brlo isdigit0
000d17 33fa          cpi  r31,'9'+1
000d18 f008          brlo isdigit1
                 isdigit0:
000d19 27ee          clr  r30
                 isdigit1:
000d1a 9508          ret
                 _isspace:
000d1b e0e1          ldi  r30,1
000d1c 91f9          ld   r31,y+
000d1d 32f0          cpi  r31,' '
000d1e f029          breq isspace1
000d1f 30f9          cpi  r31,9
000d20 f010          brlo isspace0
000d21 30fe          cpi  r31,13+1
000d22 f008          brlo isspace1
                 isspace0:
000d23 27ee          clr  r30
                 isspace1:
000d24 9508          ret
                 _isxdigit:
000d25 e0e1          ldi  r30,1
000d26 91f9          ld   r31,y+
000d27 53f0          subi r31,0x30
000d28 f040          brcs isxdigit0
000d29 30fa          cpi  r31,10
000d2a f038          brcs isxdigit1
000d2b 75ff          andi r31,0x5f
000d2c 50f7          subi r31,7
000d2d 30fa          cpi  r31,10
000d2e f010          brcs isxdigit0
000d2f 31f0          cpi  r31,16
000d30 f008          brcs isxdigit1
                 isxdigit0:
000d31 27ee          clr  r30
                 isxdigit1:
000d32 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000d33 91e9          ld   r30,y+
000d34 91f9          ld   r31,y+
000d35 91a9          ld   r26,y+
000d36 91b9          ld   r27,y+
000d37 01cd          movw r24,r26
                 strcpyf0:
000d38 9005      	lpm  r0,z+
000d39 920d          st   x+,r0
000d3a 2000          tst  r0
000d3b f7e1          brne strcpyf0
000d3c 01fc          movw r30,r24
000d3d 9508          ret
                 _strlen:
000d3e 91a9          ld   r26,y+
000d3f 91b9          ld   r27,y+
000d40 27ee          clr  r30
000d41 27ff          clr  r31
                 strlen0:
000d42 916d          ld   r22,x+
000d43 2366          tst  r22
000d44 f011          breq strlen1
000d45 9631          adiw r30,1
000d46 cffb          rjmp strlen0
                 strlen1:
000d47 9508          ret
                 _strlenf:
000d48 27aa          clr  r26
000d49 27bb          clr  r27
000d4a 91e9          ld   r30,y+
000d4b 91f9          ld   r31,y+
                 strlenf0:
000d4c 9005      	lpm  r0,z+
000d4d 2000          tst  r0
000d4e f011          breq strlenf1
000d4f 9611          adiw r26,1
000d50 cffb          rjmp strlenf0
                 strlenf1:
000d51 01fd          movw r30,r26
000d52 9508          ret
                 
                 	.CSEG
                 _ftoa:
000d53 9724      	SBIW R28,4
000d54 d222      	RCALL SUBOPT_0x25
000d55 e0e0      	LDI  R30,LOW(0)
000d56 83ea      	STD  Y+2,R30
000d57 e3ef      	LDI  R30,LOW(63)
000d58 83eb      	STD  Y+3,R30
000d59 931a      	ST   -Y,R17
000d5a 930a      	ST   -Y,R16
000d5b 85eb      	LDD  R30,Y+11
000d5c 85fc      	LDD  R31,Y+11+1
000d5d 3fef      	CPI  R30,LOW(0xFFFF)
000d5e efaf      	LDI  R26,HIGH(0xFFFF)
000d5f 07fa      	CPC  R31,R26
000d60 f429      	BRNE _0x208000D
000d61 d370      	RCALL SUBOPT_0x57
                +
000d62 e8e0     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000d63 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000d64 d268      	RCALL SUBOPT_0x31
000d65 c085      	RJMP _0x20A0002
                 _0x208000D:
000d66 3fef      	CPI  R30,LOW(0x7FFF)
000d67 e7af      	LDI  R26,HIGH(0x7FFF)
000d68 07fa      	CPC  R31,R26
000d69 f429      	BRNE _0x208000C
000d6a d367      	RCALL SUBOPT_0x57
                +
000d6b e8e1     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000d6c e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000d6d d25f      	RCALL SUBOPT_0x31
000d6e c07c      	RJMP _0x20A0002
                 _0x208000C:
000d6f 85ac      	LDD  R26,Y+12
000d70 23aa      	TST  R26
000d71 f452      	BRPL _0x208000F
                +
000d72 85e9     +LDD R30 , Y + 9
000d73 85fa     +LDD R31 , Y + 9 + 1
000d74 856b     +LDD R22 , Y + 9 + 2
000d75 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000d76 940e 1107 	CALL __ANEGF1
000d78 d35e      	RCALL SUBOPT_0x58
000d79 d362      	RCALL SUBOPT_0x59
000d7a e2ed      	LDI  R30,LOW(45)
000d7b 93ec      	ST   X,R30
                 _0x208000F:
000d7c 85a8      	LDD  R26,Y+8
000d7d 30a7      	CPI  R26,LOW(0x7)
000d7e f010      	BRLO _0x2080010
000d7f e0e6      	LDI  R30,LOW(6)
000d80 87e8      	STD  Y+8,R30
                 _0x2080010:
000d81 8518      	LDD  R17,Y+8
                 _0x2080011:
000d82 2fe1      	MOV  R30,R17
000d83 5011      	SUBI R17,1
000d84 30e0      	CPI  R30,0
000d85 f021      	BREQ _0x2080013
000d86 d35c      	RCALL SUBOPT_0x5A
000d87 d280      	RCALL SUBOPT_0x39
000d88 d35f      	RCALL SUBOPT_0x5B
000d89 cff8      	RJMP _0x2080011
                 _0x2080013:
000d8a d362      	RCALL SUBOPT_0x5C
000d8b 940e 11ad 	CALL __ADDF12
000d8d d349      	RCALL SUBOPT_0x58
000d8e e010      	LDI  R17,LOW(0)
                +
000d8f e0e0     +LDI R30 , LOW ( 0x3F800000 )
000d90 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000d91 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000d92 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000d93 d354      	RCALL SUBOPT_0x5B
                 _0x2080014:
000d94 d358      	RCALL SUBOPT_0x5C
000d95 940e 1290 	CALL __CMPF12
000d97 f060      	BRLO _0x2080016
000d98 d34a      	RCALL SUBOPT_0x5A
000d99 d25b      	RCALL SUBOPT_0x36
000d9a d34d      	RCALL SUBOPT_0x5B
000d9b 5f1f      	SUBI R17,-LOW(1)
000d9c 3217      	CPI  R17,39
000d9d f028      	BRLO _0x2080017
000d9e d333      	RCALL SUBOPT_0x57
                +
000d9f e8e5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000da0 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000da1 d22b      	RCALL SUBOPT_0x31
000da2 c048      	RJMP _0x20A0002
                 _0x2080017:
000da3 cff0      	RJMP _0x2080014
                 _0x2080016:
000da4 3010      	CPI  R17,0
000da5 f421      	BRNE _0x2080018
000da6 d335      	RCALL SUBOPT_0x59
000da7 e3e0      	LDI  R30,LOW(48)
000da8 93ec      	ST   X,R30
000da9 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000daa 2fe1      	MOV  R30,R17
000dab 5011      	SUBI R17,1
000dac 30e0      	CPI  R30,0
000dad f0c9      	BREQ _0x208001C
000dae d334      	RCALL SUBOPT_0x5A
000daf d258      	RCALL SUBOPT_0x39
000db0 d250      	RCALL SUBOPT_0x38
000db1 d25d      	RCALL SUBOPT_0x3A
000db2 d335      	RCALL SUBOPT_0x5B
000db3 d339      	RCALL SUBOPT_0x5C
000db4 940e 124b 	CALL __DIVF21
000db6 940e 113a 	CALL __CFD1U
000db8 2f0e      	MOV  R16,R30
000db9 d322      	RCALL SUBOPT_0x59
000dba d25f      	RCALL SUBOPT_0x3C
000dbb e0f0      	LDI  R31,0
000dbc d326      	RCALL SUBOPT_0x5A
000dbd 940e 12d0 	CALL __CWD1
000dbf 940e 1173 	CALL __CDF1
000dc1 940e 11fd 	CALL __MULF12
000dc3 d332      	RCALL SUBOPT_0x5D
000dc4 d051      	RCALL SUBOPT_0x5
000dc5 d311      	RCALL SUBOPT_0x58
000dc6 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000dc7 85e8      	LDD  R30,Y+8
000dc8 30e0      	CPI  R30,0
000dc9 f0e9      	BREQ _0x20A0001
000dca d311      	RCALL SUBOPT_0x59
000dcb e2ee      	LDI  R30,LOW(46)
000dcc 93ec      	ST   X,R30
                 _0x208001E:
000dcd 85e8      	LDD  R30,Y+8
000dce 50e1      	SUBI R30,LOW(1)
000dcf 87e8      	STD  Y+8,R30
000dd0 5fef      	SUBI R30,-LOW(1)
000dd1 f0a9      	BREQ _0x2080020
000dd2 d323      	RCALL SUBOPT_0x5D
000dd3 d221      	RCALL SUBOPT_0x36
000dd4 d302      	RCALL SUBOPT_0x58
                +
000dd5 85e9     +LDD R30 , Y + 9
000dd6 85fa     +LDD R31 , Y + 9 + 1
000dd7 856b     +LDD R22 , Y + 9 + 2
000dd8 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000dd9 940e 113a 	CALL __CFD1U
000ddb 2f0e      	MOV  R16,R30
000ddc d2ff      	RCALL SUBOPT_0x59
000ddd d23c      	RCALL SUBOPT_0x3C
000dde e0f0      	LDI  R31,0
000ddf d316      	RCALL SUBOPT_0x5D
000de0 940e 12d0 	CALL __CWD1
000de2 940e 1173 	CALL __CDF1
000de4 d031      	RCALL SUBOPT_0x5
000de5 d2f1      	RCALL SUBOPT_0x58
000de6 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000de7 81ae      	LDD  R26,Y+6
000de8 81bf      	LDD  R27,Y+6+1
000de9 e0e0      	LDI  R30,LOW(0)
000dea 93ec      	ST   X,R30
                 _0x20A0002:
000deb 8119      	LDD  R17,Y+1
000dec 8108      	LDD  R16,Y+0
000ded 962d      	ADIW R28,13
000dee 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x4
                 _TIMER2_OVERFLOW:
000504           	.BYTE 0x1
                 _PACKET_BUFF:
000505           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000569           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
00056a           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056c           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
000580           	.BYTE 0x1
                 _CHECK_GETS:
000581           	.BYTE 0x1
                 _MOTORR_HALL:
000582           	.BYTE 0x4
                 _MOTORL_HALL:
000586           	.BYTE 0x4
                 __seed_G104:
00058a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000def 93fa      	ST   -Y,R31
000df0 93ea      	ST   -Y,R30
000df1 940c 10fb 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000df3 e0e0      	LDI  R30,LOW(0)
000df4 93e0 056a 	STS  _TIMER0_OVERFLOW,R30
000df6 93e0 056b 	STS  _TIMER0_OVERFLOW+1,R30
000df8 bfe2      	OUT  0x32,R30
000df9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
                +
000dfa 01fe     +MOVW R30 , R28
000dfb 5dec     +SUBI R30 , LOW ( - 548 )
000dfc 4ffd     +SBCI R31 , HIGH ( - 548 )
000dfd 9001     +LD R0 , Z +
000dfe 81f0     +LD R31 , Z
000dff 2de0     +MOV R30 , R0
                 	__GETW1SX 548
000e00 940e 12d0 	CALL __CWD1
000e02 940e 1173 	CALL __CDF1
000e04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
                +
000e05 01de     +MOVW R26 , R28
000e06 5da2     +SUBI R26 , LOW ( - 558 )
000e07 4fbd     +SBCI R27 , HIGH ( - 558 )
000e08 900d     +LD R0 , X +
000e09 901d     +LD R1 , X +
000e0a 918d     +LD R24 , X +
000e0b 919c     +LD R25 , X
000e0c 01d0     +MOVW R26 , R0
                 	__GETD2SX 558
000e0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000e0e dff6      	RCALL SUBOPT_0x3
                +
000e0f e0e0     +LDI R30 , LOW ( 0x42C80000 )
000e10 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000e11 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000e12 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000e13 940e 124b 	CALL __DIVF21
000e15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000e16 940e 139e 	CALL __SWAPD12
000e18 940e 11a6 	CALL __SUBF12
000e1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x6:
                +
000e1b 01de     +MOVW R26 , R28
000e1c 5cae     +SUBI R26 , LOW ( - 562 )
000e1d 4fbd     +SBCI R27 , HIGH ( - 562 )
000e1e 93ed     +ST X + , R30
000e1f 93fd     +ST X + , R31
000e20 936d     +ST X + , R22
000e21 937c     +ST X , R23
                 	__PUTD1SX 562
000e22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
                +
000e23 e7a1     +LDI R26 , LOW ( 0x3D0A3D71 )
000e24 e3bd     +LDI R27 , HIGH ( 0x3D0A3D71 )
000e25 e08a     +LDI R24 , BYTE3 ( 0x3D0A3D71 )
000e26 e39d     +LDI R25 , BYTE4 ( 0x3D0A3D71 )
                 	__GETD2N 0x3D0A3D71
000e27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x8:
                +
000e28 01fe     +MOVW R30 , R28
000e29 5cee     +SUBI R30 , LOW ( - 562 )
000e2a 4ffd     +SBCI R31 , HIGH ( - 562 )
000e2b 9001     +LD R0 , Z +
000e2c 9011     +LD R1 , Z +
000e2d 9161     +LD R22 , Z +
000e2e 8170     +LD R23 , Z
000e2f 01f0     +MOVW R30 , R0
                 	__GETD1SX 562
000e30 dff2      	RCALL SUBOPT_0x7
000e31 940e 11ad 	CALL __ADDF12
000e33 01df      	MOVW R26,R30
000e34 01cb      	MOVW R24,R22
                +
000e35 e9ea     +LDI R30 , LOW ( 0x3E19999A )
000e36 e9f9     +LDI R31 , HIGH ( 0x3E19999A )
000e37 e169     +LDI R22 , BYTE3 ( 0x3E19999A )
000e38 e37e     +LDI R23 , BYTE4 ( 0x3E19999A )
                 	__GETD1N 0x3E19999A
000e39 940e 124b 	CALL __DIVF21
000e3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x9:
                +
000e3c 01de     +MOVW R26 , R28
000e3d 5caa     +SUBI R26 , LOW ( - 566 )
000e3e 4fbd     +SBCI R27 , HIGH ( - 566 )
000e3f 93ed     +ST X + , R30
000e40 93fd     +ST X + , R31
000e41 936d     +ST X + , R22
000e42 937c     +ST X , R23
                 	__PUTD1SX 566
                +
000e43 e6a6     +LDI R26 , LOW ( 0x3E666666 )
000e44 e6b6     +LDI R27 , HIGH ( 0x3E666666 )
000e45 e686     +LDI R24 , BYTE3 ( 0x3E666666 )
000e46 e39e     +LDI R25 , BYTE4 ( 0x3E666666 )
                 	__GETD2N 0x3E666666
000e47 940e 11a6 	CALL __SUBF12
000e49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:54 WORDS
                 SUBOPT_0xA:
                +
000e4a 01de     +MOVW R26 , R28
000e4b 5caa     +SUBI R26 , LOW ( - 566 )
000e4c 4fbd     +SBCI R27 , HIGH ( - 566 )
000e4d 900d     +LD R0 , X +
000e4e 901d     +LD R1 , X +
000e4f 918d     +LD R24 , X +
000e50 919c     +LD R25 , X
000e51 01d0     +MOVW R26 , R0
                 	__GETD2SX 566
                +
000e52 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000e53 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000e54 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000e55 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000e56 940e 11fd 	CALL __MULF12
000e58 940e 113c 	CALL __CFD1
                +
000e5a 01de     +MOVW R26 , R28
000e5b 5ca6     +SUBI R26 , LOW ( - 570 )
000e5c 4fbd     +SBCI R27 , HIGH ( - 570 )
000e5d 93ed     +ST X + , R30
000e5e 93fc     +ST X , R31
                 	__PUTW1SX 570
000e5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
000e60 e0e0      	LDI  R30,LOW(0)
                +
000e61 01de     +MOVW R26 , R28
000e62 5bae     +SUBI R26 , LOW ( - 578 )
000e63 4fbd     +SBCI R27 , HIGH ( - 578 )
000e64 93ed     +ST X + , R30
000e65 93ed     +ST X + , R30
000e66 93ed     +ST X + , R30
000e67 93ec     +ST X , R30
                 	__CLRD1SX 578
000e68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC:
                +
000e69 01fe     +MOVW R30 , R28
000e6a 5dea     +SUBI R30 , LOW ( - 550 )
000e6b 4ffd     +SBCI R31 , HIGH ( - 550 )
000e6c 9001     +LD R0 , Z +
000e6d 9011     +LD R1 , Z +
000e6e 9161     +LD R22 , Z +
000e6f 8170     +LD R23 , Z
000e70 01f0     +MOVW R30 , R0
                 	__GETD1SX 550
                +
000e71 e0a0     +LDI R26 , LOW ( 0x41600000 )
000e72 e0b0     +LDI R27 , HIGH ( 0x41600000 )
000e73 e680     +LDI R24 , BYTE3 ( 0x41600000 )
000e74 e491     +LDI R25 , BYTE4 ( 0x41600000 )
                 	__GETD2N 0x41600000
000e75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xD:
000e76 01df      	MOVW R26,R30
000e77 01cb      	MOVW R24,R22
                +
000e78 efe6     +LDI R30 , LOW ( 0x426528F6 )
000e79 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
000e7a e665     +LDI R22 , BYTE3 ( 0x426528F6 )
000e7b e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
000e7c 940e 124b 	CALL __DIVF21
                +
000e7e 01de     +MOVW R26 , R28
000e7f 5da6     +SUBI R26 , LOW ( - 554 )
000e80 4fbd     +SBCI R27 , HIGH ( - 554 )
000e81 93ed     +ST X + , R30
000e82 93fd     +ST X + , R31
000e83 936d     +ST X + , R22
000e84 937c     +ST X , R23
                 	__PUTD1SX 554
000e85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xE:
                +
000e86 e8af     +LDI R26 , LOW ( 0x3F75C28F )
000e87 ecb2     +LDI R27 , HIGH ( 0x3F75C28F )
000e88 e785     +LDI R24 , BYTE3 ( 0x3F75C28F )
000e89 e39f     +LDI R25 , BYTE4 ( 0x3F75C28F )
                 	__GETD2N 0x3F75C28F
000e8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0xF:
                +
000e8b 01fe     +MOVW R30 , R28
000e8c 5de6     +SUBI R30 , LOW ( - 554 )
000e8d 4ffd     +SBCI R31 , HIGH ( - 554 )
000e8e 9001     +LD R0 , Z +
000e8f 9011     +LD R1 , Z +
000e90 9161     +LD R22 , Z +
000e91 8170     +LD R23 , Z
000e92 01f0     +MOVW R30 , R0
                 	__GETD1SX 554
000e93 dff2      	RCALL SUBOPT_0xE
000e94 940e 11ad 	CALL __ADDF12
000e96 01df      	MOVW R26,R30
000e97 01cb      	MOVW R24,R22
                +
000e98 e0e0     +LDI R30 , LOW ( 0x40000000 )
000e99 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000e9a e060     +LDI R22 , BYTE3 ( 0x40000000 )
000e9b e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000e9c 940e 124b 	CALL __DIVF21
000e9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x10:
                +
000e9f 01de     +MOVW R26 , R28
000ea0 5caa     +SUBI R26 , LOW ( - 566 )
000ea1 4fbd     +SBCI R27 , HIGH ( - 566 )
000ea2 93ed     +ST X + , R30
000ea3 93fd     +ST X + , R31
000ea4 936d     +ST X + , R22
000ea5 937c     +ST X , R23
                 	__PUTD1SX 566
                +
000ea6 e8af     +LDI R26 , LOW ( 0x3EF5C28F )
000ea7 ecb2     +LDI R27 , HIGH ( 0x3EF5C28F )
000ea8 ef85     +LDI R24 , BYTE3 ( 0x3EF5C28F )
000ea9 e39e     +LDI R25 , BYTE4 ( 0x3EF5C28F )
                 	__GETD2N 0x3EF5C28F
000eaa 940e 11a6 	CALL __SUBF12
000eac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
000ead e0e0      	LDI  R30,LOW(0)
                +
000eae 01de     +MOVW R26 , R28
000eaf 5ca2     +SUBI R26 , LOW ( - 574 )
000eb0 4fbd     +SBCI R27 , HIGH ( - 574 )
000eb1 93ed     +ST X + , R30
000eb2 93ed     +ST X + , R30
000eb3 93ed     +ST X + , R30
000eb4 93ec     +ST X , R30
                 	__CLRD1SX 574
000eb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
000eb6 e0e0     +LDI R30 , LOW ( 0x40000000 )
000eb7 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000eb8 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000eb9 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000eba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x13:
000ebb e0e0      	LDI  R30,LOW(0)
000ebc 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000ebe 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000ec0 93e0 0502 	STS  _TIMER1_OVERFLOW+2,R30
000ec2 93e0 0503 	STS  _TIMER1_OVERFLOW+3,R30
000ec4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x14:
000ec5 940e 1173 	CALL __CDF1
                +
000ec7 ecad     +LDI R26 , LOW ( 0x3ECCCCCD )
000ec8 ecbc     +LDI R27 , HIGH ( 0x3ECCCCCD )
000ec9 ec8c     +LDI R24 , BYTE3 ( 0x3ECCCCCD )
000eca e39e     +LDI R25 , BYTE4 ( 0x3ECCCCCD )
                 	__GETD2N 0x3ECCCCCD
000ecb 940e 11fd 	CALL __MULF12
000ecd 01df      	MOVW R26,R30
000ece 01cb      	MOVW R24,R22
                +
000ecf e0e0     +LDI R30 , LOW ( 0x43200000 )
000ed0 e0f0     +LDI R31 , HIGH ( 0x43200000 )
000ed1 e260     +LDI R22 , BYTE3 ( 0x43200000 )
000ed2 e473     +LDI R23 , BYTE4 ( 0x43200000 )
                 	__GETD1N 0x43200000
000ed3 940e 124b 	CALL __DIVF21
000ed5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
                +
000ed6 01de     +MOVW R26 , R28
000ed7 5ea9     +SUBI R26 , LOW ( - 535 )
000ed8 4fbd     +SBCI R27 , HIGH ( - 535 )
000ed9 900d     +LD R0 , X +
000eda 901d     +LD R1 , X +
000edb 918d     +LD R24 , X +
000edc 919c     +LD R25 , X
000edd 01d0     +MOVW R26 , R0
                 	__GETD2SX 535
000ede 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x16:
                +
000edf 01fe     +MOVW R30 , R28
000ee0 5ee9     +SUBI R30 , LOW ( - 535 )
000ee1 4ffd     +SBCI R31 , HIGH ( - 535 )
000ee2 9001     +LD R0 , Z +
000ee3 9011     +LD R1 , Z +
000ee4 9161     +LD R22 , Z +
000ee5 8170     +LD R23 , Z
000ee6 01f0     +MOVW R30 , R0
                 	__GETD1SX 535
000ee7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x17:
                +
000ee8 01fe     +MOVW R30 , R28
000ee9 50ec     +SUBI R30 , LOW ( - 500 )
000eea 4ffe     +SBCI R31 , HIGH ( - 500 )
000eeb 9001     +LD R0 , Z +
000eec 9011     +LD R1 , Z +
000eed 9161     +LD R22 , Z +
000eee 8170     +LD R23 , Z
000eef 01f0     +MOVW R30 , R0
                 	__GETD1SX 500
                +
000ef0 01de     +MOVW R26 , R28
000ef1 50a8     +SUBI R26 , LOW ( - 504 )
000ef2 4fbe     +SBCI R27 , HIGH ( - 504 )
000ef3 900d     +LD R0 , X +
000ef4 901d     +LD R1 , X +
000ef5 918d     +LD R24 , X +
000ef6 919c     +LD R25 , X
000ef7 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
000ef8 940e 11ad 	CALL __ADDF12
000efa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
                +
000efb 01de     +MOVW R26 , R28
000efc 50ac     +SUBI R26 , LOW ( - 500 )
000efd 4fbe     +SBCI R27 , HIGH ( - 500 )
000efe 900d     +LD R0 , X +
000eff 901d     +LD R1 , X +
000f00 918d     +LD R24 , X +
000f01 919c     +LD R25 , X
000f02 01d0     +MOVW R26 , R0
                 	__GETD2SX 500
                +
000f03 01fe     +MOVW R30 , R28
000f04 50e8     +SUBI R30 , LOW ( - 504 )
000f05 4ffe     +SBCI R31 , HIGH ( - 504 )
000f06 9001     +LD R0 , Z +
000f07 9011     +LD R1 , Z +
000f08 9161     +LD R22 , Z +
000f09 8170     +LD R23 , Z
000f0a 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
000f0b 940e 11a6 	CALL __SUBF12
000f0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
                +
000f0e ecad     +LDI R26 , LOW ( 0x3E8CCCCD )
000f0f ecbc     +LDI R27 , HIGH ( 0x3E8CCCCD )
000f10 e88c     +LDI R24 , BYTE3 ( 0x3E8CCCCD )
000f11 e39e     +LDI R25 , BYTE4 ( 0x3E8CCCCD )
                 	__GETD2N 0x3E8CCCCD
000f12 940e 11fd 	CALL __MULF12
000f14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
                +
000f15 01de     +MOVW R26 , R28
000f16 5faa     +SUBI R26 , LOW ( - 518 )
000f17 4fbd     +SBCI R27 , HIGH ( - 518 )
000f18 900d     +LD R0 , X +
000f19 901d     +LD R1 , X +
000f1a 918d     +LD R24 , X +
000f1b 919c     +LD R25 , X
000f1c 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
000f1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
000f1e 01df      	MOVW R26,R30
000f1f 01cb      	MOVW R24,R22
000f20 df95      	RCALL SUBOPT_0x12
000f21 940e 124b 	CALL __DIVF21
000f23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
                +
000f24 01fe     +MOVW R30 , R28
000f25 5fea     +SUBI R30 , LOW ( - 518 )
000f26 4ffd     +SBCI R31 , HIGH ( - 518 )
000f27 9001     +LD R0 , Z +
000f28 9011     +LD R1 , Z +
000f29 9161     +LD R22 , Z +
000f2a 8170     +LD R23 , Z
000f2b 01f0     +MOVW R30 , R0
                 	__GETD1SX 518
000f2c 940e 1394 	CALL __PUTPARD1
000f2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000f2f 940e 11fd 	CALL __MULF12
000f31 940e 113c 	CALL __CFD1
000f33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
000f34 940e 1394 	CALL __PUTPARD1
                +
000f36 01fe     +MOVW R30 , R28
000f37 5eea     +SUBI R30 , LOW ( - 534 )
000f38 4ffd     +SBCI R31 , HIGH ( - 534 )
000f39 9001     +LD R0 , Z +
000f3a 9011     +LD R1 , Z +
000f3b 9161     +LD R22 , Z +
000f3c 8170     +LD R23 , Z
000f3d 01f0     +MOVW R30 , R0
                 	__GETD1SX 534
000f3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1F:
000f3f 91ed      	LD   R30,X+
000f40 91fd      	LD   R31,X+
000f41 9631      	ADIW R30,1
000f42 93fe      	ST   -X,R31
000f43 93ee      	ST   -X,R30
000f44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x20:
000f45 936a      	ST   -Y,R22
000f46 937a      	ST   -Y,R23
000f47 93aa      	ST   -Y,R26
000f48 93ba      	ST   -Y,R27
000f49 93ea      	ST   -Y,R30
000f4a 93fa      	ST   -Y,R31
000f4b b7ef      	IN   R30,SREG
000f4c 93ea      	ST   -Y,R30
000f4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x21:
000f4e 940e 1376 	CALL __GETD1P_INC
                +
000f50 5fef     +SUBI R30 , LOW ( - 1 )
000f51 4fff     +SBCI R31 , HIGH ( - 1 )
000f52 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000f53 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000f54 940e 1380 	CALL __PUTDP1_DEC
000f56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x22:
000f57 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
000f59 e0b0      	LDI  R27,0
000f5a 5fab      	SUBI R26,LOW(-_PACKET_BUFF)
000f5b 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
000f5c b1ec      	IN   R30,0xC
000f5d 93ec      	ST   X,R30
000f5e 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
000f60 5fef      	SUBI R30,-LOW(1)
000f61 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
000f63 e0e0      	LDI  R30,LOW(0)
000f64 bde4      	OUT  0x24,R30
000f65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x23:
000f66 e0f0      	LDI  R31,0
000f67 59e4      	SUBI R30,LOW(-_VELOCITY_BUFF)
000f68 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000f69 8310      	ST   Z,R17
000f6a 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000f6c 5fef      	SUBI R30,-LOW(1)
000f6d 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
000f6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000f70 81aa      	LDD  R26,Y+2
000f71 81bb      	LDD  R27,Y+2+1
000f72 27ee      	CLR  R30
000f73 0fa1      	ADD  R26,R17
000f74 1fbe      	ADC  R27,R30
000f75 91ec      	LD   R30,X
000f76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000f77 e0e0      	LDI  R30,LOW(0)
000f78 83e8      	ST   Y,R30
000f79 83e9      	STD  Y+1,R30
000f7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
000f7b 85ae      	LDD  R26,Y+14
000f7c 85bf      	LDD  R27,Y+14+1
000f7d 940e 1370 	CALL __GETD1P
000f7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000f80 85ac      	LDD  R26,Y+12
000f81 85bd      	LDD  R27,Y+12+1
000f82 940e 1370 	CALL __GETD1P
000f84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x28:
                +
000f85 83ec     +STD Y + 4 , R30
000f86 83fd     +STD Y + 4 + 1 , R31
000f87 836e     +STD Y + 4 + 2 , R22
000f88 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000f89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x29:
                +
000f8a 81ac     +LDD R26 , Y + 4
000f8b 81bd     +LDD R27 , Y + 4 + 1
000f8c 818e     +LDD R24 , Y + 4 + 2
000f8d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000f8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
                +
000f8f e0e0     +LDI R30 , LOW ( 0x453B8000 )
000f90 e8f0     +LDI R31 , HIGH ( 0x453B8000 )
000f91 e36b     +LDI R22 , BYTE3 ( 0x453B8000 )
000f92 e475     +LDI R23 , BYTE4 ( 0x453B8000 )
                 	__GETD1N 0x453B8000
000f93 cf9b      	RJMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000f94 e0e0      	LDI  R30,LOW(0)
000f95 e0f0      	LDI  R31,HIGH(0)
000f96 93ed      	ST   X+,R30
000f97 93fc      	ST   X,R31
000f98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2C:
000f99 93fa      	ST   -Y,R31
000f9a 93ea      	ST   -Y,R30
000f9b 940e 0626 	CALL _RTU_WriteOperate0
000f9d e0e1      	LDI  R30,LOW(1)
000f9e e0f0      	LDI  R31,HIGH(1)
000f9f ce4f      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2D:
000fa0 93ea      	ST   -Y,R30
000fa1 e7e8      	LDI  R30,LOW(120)
000fa2 e0f0      	LDI  R31,HIGH(120)
000fa3 93fa      	ST   -Y,R31
000fa4 93ea      	ST   -Y,R30
000fa5 e0e1      	LDI  R30,LOW(1)
000fa6 e0f0      	LDI  R31,HIGH(1)
000fa7 cff1      	RJMP SUBOPT_0x2C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E:
000fa8 df9c      	RCALL SUBOPT_0x20
000fa9 e0a0      	LDI  R26,0
000faa 990c      	SBIC 0x1,4
000fab e0a1      	LDI  R26,1
000fac e0e0      	LDI  R30,0
000fad 990d      	SBIC 0x1,5
000fae e0e1      	LDI  R30,1
000faf 17ea      	CP   R30,R26
000fb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2F:
000fb1 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
000fb2 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
000fb3 940e 1376 	CALL __GETD1P_INC
000fb5 9731      	SBIW R30,1
000fb6 4060      	SBCI R22,0
000fb7 4070      	SBCI R23,0
000fb8 940e 1380 	CALL __PUTDP1_DEC
                +
000fba 5fef     +SUBI R30 , LOW ( - 1 )
000fbb 4fff     +SBCI R31 , HIGH ( - 1 )
000fbc 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000fbd 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000fbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x30:
000fbf e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000fc0 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000fc1 940e 1376 	CALL __GETD1P_INC
000fc3 9731      	SBIW R30,1
000fc4 4060      	SBCI R22,0
000fc5 4070      	SBCI R23,0
000fc6 940e 1380 	CALL __PUTDP1_DEC
                +
000fc8 5fef     +SUBI R30 , LOW ( - 1 )
000fc9 4fff     +SBCI R31 , HIGH ( - 1 )
000fca 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000fcb 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000fcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x31:
000fcd 93fa      	ST   -Y,R31
000fce 93ea      	ST   -Y,R30
000fcf 940c 0d33 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x32:
000fd1 dfb8      	RCALL SUBOPT_0x29
                +
000fd2 e0e0     +LDI R30 , LOW ( 0x41200000 )
000fd3 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000fd4 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000fd5 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000fd6 940e 11fd 	CALL __MULF12
000fd8 cfac      	RJMP SUBOPT_0x28
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x33:
                +
000fd9 81ec     +LDD R30 , Y + 4
000fda 81fd     +LDD R31 , Y + 4 + 1
000fdb 816e     +LDD R22 , Y + 4 + 2
000fdc 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000fdd 85ac     +LDD R26 , Y + 12
000fde 85bd     +LDD R27 , Y + 12 + 1
000fdf 858e     +LDD R24 , Y + 12 + 2
000fe0 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000fe1 940e 1290 	CALL __CMPF12
000fe3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x34:
                +
000fe4 85ac     +LDD R26 , Y + 12
000fe5 85bd     +LDD R27 , Y + 12 + 1
000fe6 858e     +LDD R24 , Y + 12 + 2
000fe7 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000fe8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35:
                +
000fe9 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000fea ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000feb ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000fec e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000fed 940e 11fd 	CALL __MULF12
                +
000fef 87ec     +STD Y + 12 , R30
000ff0 87fd     +STD Y + 12 + 1 , R31
000ff1 876e     +STD Y + 12 + 2 , R22
000ff2 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000ff3 5f3f      	SUBI R19,-LOW(1)
000ff4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x36:
                +
000ff5 e0e0     +LDI R30 , LOW ( 0x41200000 )
000ff6 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000ff7 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000ff8 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000ff9 940e 11fd 	CALL __MULF12
000ffb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
                +
000ffc 87ec     +STD Y + 12 , R30
000ffd 87fd     +STD Y + 12 + 1 , R31
000ffe 876e     +STD Y + 12 + 2 , R22
000fff 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001000 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
001001 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001002 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001003 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
001004 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
001005 940e 11ad 	CALL __ADDF12
001007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39:
                +
001008 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001009 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00100a ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00100b e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00100c 940e 11fd 	CALL __MULF12
00100e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
00100f 940e 1394 	CALL __PUTPARD1
001011 940c 0c69 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
001013 85a8      	LDD  R26,Y+8
001014 85b9      	LDD  R27,Y+8+1
001015 9611      	ADIW R26,1
001016 87a8      	STD  Y+8,R26
001017 87b9      	STD  Y+8+1,R27
001018 9711      	SBIW R26,1
001019 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
00101a 2fe0      	MOV  R30,R16
00101b 5de0      	SUBI R30,-LOW(48)
00101c 93ec      	ST   X,R30
00101d 2fe0      	MOV  R30,R16
00101e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3D:
00101f 85e8      	LDD  R30,Y+8
001020 85f9      	LDD  R31,Y+8+1
001021 9631      	ADIW R30,1
001022 87e8      	STD  Y+8,R30
001023 87f9      	STD  Y+8+1,R31
001024 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3E:
001025 932a      	ST   -Y,R18
001026 81ef      	LDD  R30,Y+7
001027 85f8      	LDD  R31,Y+7+1
001028 93fa      	ST   -Y,R31
001029 93ea      	ST   -Y,R30
00102a 85eb      	LDD  R30,Y+11
00102b 85fc      	LDD  R31,Y+11+1
00102c 9509      	ICALL
00102d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3F:
                +
00102e 01fe     +MOVW R30 , R28
00102f 5ae6     +SUBI R30 , LOW ( - 90 )
001030 4fff     +SBCI R31 , HIGH ( - 90 )
001031 9001     +LD R0 , Z +
001032 81f0     +LD R31 , Z
001033 2de0     +MOV R30 , R0
                 	__GETW1SX 90
001034 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
001035 9734      	SBIW R30,4
                +
001036 01de     +MOVW R26 , R28
001037 5aa6     +SUBI R26 , LOW ( - 90 )
001038 4fbf     +SBCI R27 , HIGH ( - 90 )
001039 93ed     +ST X + , R30
00103a 93fc     +ST X , R31
                 	__PUTW1SX 90
00103b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x41:
00103c 81ef      	LDD  R30,Y+7
00103d 85f8      	LDD  R31,Y+7+1
00103e 93fa      	ST   -Y,R31
00103f 93ea      	ST   -Y,R30
001040 85eb      	LDD  R30,Y+11
001041 85fc      	LDD  R31,Y+11+1
001042 9509      	ICALL
001043 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x42:
                +
001044 01de     +MOVW R26 , R28
001045 5aa6     +SUBI R26 , LOW ( - 90 )
001046 4fbf     +SBCI R27 , HIGH ( - 90 )
001047 900d     +LD R0 , X +
001048 91bc     +LD R27 , X
001049 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00104a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x43:
                +
00104b 87ea     +STD Y + 10 , R30
00104c 87fb     +STD Y + 10 + 1 , R31
00104d 876c     +STD Y + 10 + 2 , R22
00104e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00104f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x44:
001050 dfdd      	RCALL SUBOPT_0x3F
001051 cfe3      	RJMP SUBOPT_0x40
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x45:
                +
001052 85ea     +LDD R30 , Y + 10
001053 85fb     +LDD R31 , Y + 10 + 1
001054 856c     +LDD R22 , Y + 10 + 2
001055 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
001056 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x46:
001057 87ee      	STD  Y+14,R30
001058 87ff      	STD  Y+14+1,R31
001059 93fa      	ST   -Y,R31
00105a 93ea      	ST   -Y,R30
00105b 940e 0d3e 	CALL _strlen
00105d 2f1e      	MOV  R17,R30
00105e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x47:
00105f dfe4      	RCALL SUBOPT_0x42
001060 9614      	ADIW R26,4
001061 940e 136c 	CALL __GETW1P
001063 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x48:
                +
001064 8be8     +STD Y + 16 , R30
001065 8bf9     +STD Y + 16 + 1 , R31
001066 8b6a     +STD Y + 16 + 2 , R22
001067 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
001068 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x49:
001069 7f0b      	ANDI R16,LOW(251)
00106a 89ed      	LDD  R30,Y+21
00106b 93ea      	ST   -Y,R30
                +
00106c 01fe     +MOVW R30 , R28
00106d 5ae9     +SUBI R30 , LOW ( - 87 )
00106e 4fff     +SBCI R31 , HIGH ( - 87 )
00106f 9001     +LD R0 , Z +
001070 81f0     +LD R31 , Z
001071 2de0     +MOV R30 , R0
                 	__GETW1SX 87
001072 93fa      	ST   -Y,R31
001073 93ea      	ST   -Y,R30
                +
001074 01fe     +MOVW R30 , R28
001075 5ae5     +SUBI R30 , LOW ( - 91 )
001076 4fff     +SBCI R31 , HIGH ( - 91 )
001077 9001     +LD R0 , Z +
001078 81f0     +LD R31 , Z
001079 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00107a 9509      	ICALL
00107b 3050      	CPI  R21,0
00107c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
00107d 89e8     +LDD R30 , Y + 16
00107e 89f9     +LDD R31 , Y + 16 + 1
00107f 896a     +LDD R22 , Y + 16 + 2
001080 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
001081 85aa     +LDD R26 , Y + 10
001082 85bb     +LDD R27 , Y + 10 + 1
001083 858c     +LDD R24 , Y + 10 + 2
001084 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
001085 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
001086 01de      	MOVW R26,R28
001087 961c      	ADIW R26,12
001088 940e 12b0 	CALL __ADDW2R15
00108a 940e 136c 	CALL __GETW1P
00108c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4C:
00108d 940e 12b0 	CALL __ADDW2R15
00108f 940e 136c 	CALL __GETW1P
001091 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4D:
001092 933a      	ST   -Y,R19
001093 940e 0d1b 	CALL _isspace
001095 30e0      	CPI  R30,0
001096 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x4E:
001097 01fe      	MOVW R30,R28
001098 963d      	ADIW R30,13
001099 93fa      	ST   -Y,R31
00109a 93ea      	ST   -Y,R30
00109b 89e8      	LDD  R30,Y+16
00109c 89f9      	LDD  R31,Y+16+1
00109d 93fa      	ST   -Y,R31
00109e 93ea      	ST   -Y,R30
00109f 89ec      	LDD  R30,Y+20
0010a0 89fd      	LDD  R31,Y+20+1
0010a1 9509      	ICALL
0010a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4F:
0010a3 85ae      	LDD  R26,Y+14
0010a4 85bf      	LDD  R27,Y+14+1
0010a5 91ac      	LD   R26,X
0010a6 30a0      	CPI  R26,0
0010a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x50:
0010a8 89ea      	LDD  R30,Y+18
0010a9 89fb      	LDD  R31,Y+18+1
0010aa 9734      	SBIW R30,4
0010ab 8bea      	STD  Y+18,R30
0010ac 8bfb      	STD  Y+18+1,R31
0010ad 89aa      	LDD  R26,Y+18
0010ae 89bb      	LDD  R27,Y+18+1
0010af 9614      	ADIW R26,4
0010b0 910d      	LD   R16,X+
0010b1 911c      	LD   R17,X
0010b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
0010b3 940e 1385 	CALL __GETD1S0
0010b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x52:
                +
0010b6 81ad     +LDD R26 , Y + 5
0010b7 81be     +LDD R27 , Y + 5 + 1
0010b8 818f     +LDD R24 , Y + 5 + 2
0010b9 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
0010ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
                +
0010bb 83ed     +STD Y + 5 , R30
0010bc 83fe     +STD Y + 5 + 1 , R31
0010bd 836f     +STD Y + 5 + 2 , R22
0010be 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
0010bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x54:
                +
0010c0 81ed     +LDD R30 , Y + 5
0010c1 81fe     +LDD R31 , Y + 5 + 1
0010c2 816f     +LDD R22 , Y + 5 + 2
0010c3 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
0010c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
0010c5 dff0      	RCALL SUBOPT_0x52
                +
0010c6 e0e0     +LDI R30 , LOW ( 0x3F000000 )
0010c7 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0010c8 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0010c9 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0010ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x56:
                +
0010cb 81a9     +LDD R26 , Y + 1
0010cc 81ba     +LDD R27 , Y + 1 + 1
0010cd 818b     +LDD R24 , Y + 1 + 2
0010ce 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
0010cf 940e 11fd 	CALL __MULF12
0010d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x57:
0010d2 81ee      	LDD  R30,Y+6
0010d3 81ff      	LDD  R31,Y+6+1
0010d4 93fa      	ST   -Y,R31
0010d5 93ea      	ST   -Y,R30
0010d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x58:
                +
0010d7 87e9     +STD Y + 9 , R30
0010d8 87fa     +STD Y + 9 + 1 , R31
0010d9 876b     +STD Y + 9 + 2 , R22
0010da 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0010db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x59:
0010dc 81ae      	LDD  R26,Y+6
0010dd 81bf      	LDD  R27,Y+6+1
0010de 9611      	ADIW R26,1
0010df 83ae      	STD  Y+6,R26
0010e0 83bf      	STD  Y+6+1,R27
0010e1 9711      	SBIW R26,1
0010e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5A:
                +
0010e3 81aa     +LDD R26 , Y + 2
0010e4 81bb     +LDD R27 , Y + 2 + 1
0010e5 818c     +LDD R24 , Y + 2 + 2
0010e6 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0010e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5B:
                +
0010e8 83ea     +STD Y + 2 , R30
0010e9 83fb     +STD Y + 2 + 1 , R31
0010ea 836c     +STD Y + 2 + 2 , R22
0010eb 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0010ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5C:
                +
0010ed 81ea     +LDD R30 , Y + 2
0010ee 81fb     +LDD R31 , Y + 2 + 1
0010ef 816c     +LDD R22 , Y + 2 + 2
0010f0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0010f1 85a9     +LDD R26 , Y + 9
0010f2 85ba     +LDD R27 , Y + 9 + 1
0010f3 858b     +LDD R24 , Y + 9 + 2
0010f4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0010f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
                +
0010f6 85a9     +LDD R26 , Y + 9
0010f7 85ba     +LDD R27 , Y + 9 + 1
0010f8 858b     +LDD R24 , Y + 9 + 2
0010f9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0010fa 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0010fb 91e9      	ld   r30,y+
0010fc 91f9      	ld   r31,y+
0010fd 9630      	adiw r30,0
0010fe f039      	breq __delay_ms1
                 __delay_ms0:
                +
0010ff e686     +LDI R24 , LOW ( 0xE66 )
001100 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
001101 9701     +SBIW R24 , 1
001102 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
001103 95a8      	wdr
001104 9731      	sbiw r30,1
001105 f7c9      	brne __delay_ms0
                 __delay_ms1:
001106 9508      	ret
                 
                 __ANEGF1:
001107 9730      	SBIW R30,0
001108 4060      	SBCI R22,0
001109 4070      	SBCI R23,0
00110a f009      	BREQ __ANEGF10
00110b 5870      	SUBI R23,0x80
                 __ANEGF10:
00110c 9508      	RET
                 
                 __ROUND_REPACK:
00110d 2355      	TST  R21
00110e f442      	BRPL __REPACK
00110f 3850      	CPI  R21,0x80
001110 f411      	BRNE __ROUND_REPACK0
001111 ffe0      	SBRS R30,0
001112 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001113 9631      	ADIW R30,1
001114 1f69      	ADC  R22,R25
001115 1f79      	ADC  R23,R25
001116 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001117 e850      	LDI  R21,0x80
001118 2757      	EOR  R21,R23
001119 f411      	BRNE __REPACK0
00111a 935f      	PUSH R21
00111b c0cf      	RJMP __ZERORES
                 __REPACK0:
00111c 3f5f      	CPI  R21,0xFF
00111d f031      	BREQ __REPACK1
00111e 0f66      	LSL  R22
00111f 0c00      	LSL  R0
001120 9557      	ROR  R21
001121 9567      	ROR  R22
001122 2f75      	MOV  R23,R21
001123 9508      	RET
                 __REPACK1:
001124 935f      	PUSH R21
001125 2000      	TST  R0
001126 f00a      	BRMI __REPACK2
001127 c0cf      	RJMP __MAXRES
                 __REPACK2:
001128 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
001129 e850      	LDI  R21,0x80
00112a 2e19      	MOV  R1,R25
00112b 2215      	AND  R1,R21
00112c 0f88      	LSL  R24
00112d 1f99      	ROL  R25
00112e 2795      	EOR  R25,R21
00112f 0f55      	LSL  R21
001130 9587      	ROR  R24
                 
                 __UNPACK1:
001131 e850      	LDI  R21,0x80
001132 2e07      	MOV  R0,R23
001133 2205      	AND  R0,R21
001134 0f66      	LSL  R22
001135 1f77      	ROL  R23
001136 2775      	EOR  R23,R21
001137 0f55      	LSL  R21
001138 9567      	ROR  R22
001139 9508      	RET
                 
                 __CFD1U:
00113a 9468      	SET
00113b c001      	RJMP __CFD1U0
                 __CFD1:
00113c 94e8      	CLT
                 __CFD1U0:
00113d 935f      	PUSH R21
00113e dff2      	RCALL __UNPACK1
00113f 3870      	CPI  R23,0x80
001140 f018      	BRLO __CFD10
001141 3f7f      	CPI  R23,0xFF
001142 f408      	BRCC __CFD10
001143 c0a7      	RJMP __ZERORES
                 __CFD10:
001144 e156      	LDI  R21,22
001145 1b57      	SUB  R21,R23
001146 f4aa      	BRPL __CFD11
001147 9551      	NEG  R21
001148 3058      	CPI  R21,8
001149 f40e      	BRTC __CFD19
00114a 3059      	CPI  R21,9
                 __CFD19:
00114b f030      	BRLO __CFD17
00114c efef      	SER  R30
00114d efff      	SER  R31
00114e ef6f      	SER  R22
00114f e77f      	LDI  R23,0x7F
001150 f977      	BLD  R23,7
001151 c01a      	RJMP __CFD15
                 __CFD17:
001152 2777      	CLR  R23
001153 2355      	TST  R21
001154 f0b9      	BREQ __CFD15
                 __CFD18:
001155 0fee      	LSL  R30
001156 1fff      	ROL  R31
001157 1f66      	ROL  R22
001158 1f77      	ROL  R23
001159 955a      	DEC  R21
00115a f7d1      	BRNE __CFD18
00115b c010      	RJMP __CFD15
                 __CFD11:
00115c 2777      	CLR  R23
                 __CFD12:
00115d 3058      	CPI  R21,8
00115e f028      	BRLO __CFD13
00115f 2fef      	MOV  R30,R31
001160 2ff6      	MOV  R31,R22
001161 2f67      	MOV  R22,R23
001162 5058      	SUBI R21,8
001163 cff9      	RJMP __CFD12
                 __CFD13:
001164 2355      	TST  R21
001165 f031      	BREQ __CFD15
                 __CFD14:
001166 9576      	LSR  R23
001167 9567      	ROR  R22
001168 95f7      	ROR  R31
001169 95e7      	ROR  R30
00116a 955a      	DEC  R21
00116b f7d1      	BRNE __CFD14
                 __CFD15:
00116c 2000      	TST  R0
00116d f40a      	BRPL __CFD16
00116e d14e      	RCALL __ANEGD1
                 __CFD16:
00116f 915f      	POP  R21
001170 9508      	RET
                 
                 __CDF1U:
001171 9468      	SET
001172 c001      	RJMP __CDF1U0
                 __CDF1:
001173 94e8      	CLT
                 __CDF1U0:
001174 9730      	SBIW R30,0
001175 4060      	SBCI R22,0
001176 4070      	SBCI R23,0
001177 f0b1      	BREQ __CDF10
001178 2400      	CLR  R0
001179 f026      	BRTS __CDF11
00117a 2377      	TST  R23
00117b f412      	BRPL __CDF11
00117c 9400      	COM  R0
00117d d13f      	RCALL __ANEGD1
                 __CDF11:
00117e 2e17      	MOV  R1,R23
00117f e17e      	LDI  R23,30
001180 2011      	TST  R1
                 __CDF12:
001181 f032      	BRMI __CDF13
001182 957a      	DEC  R23
001183 0fee      	LSL  R30
001184 1fff      	ROL  R31
001185 1f66      	ROL  R22
001186 1c11      	ROL  R1
001187 cff9      	RJMP __CDF12
                 __CDF13:
001188 2fef      	MOV  R30,R31
001189 2ff6      	MOV  R31,R22
00118a 2d61      	MOV  R22,R1
00118b 935f      	PUSH R21
00118c df8a      	RCALL __REPACK
00118d 915f      	POP  R21
                 __CDF10:
00118e 9508      	RET
                 
                 __SWAPACC:
00118f 934f      	PUSH R20
001190 01af      	MOVW R20,R30
001191 01fd      	MOVW R30,R26
001192 01da      	MOVW R26,R20
001193 01ab      	MOVW R20,R22
001194 01bc      	MOVW R22,R24
001195 01ca      	MOVW R24,R20
001196 2d40      	MOV  R20,R0
001197 2c01      	MOV  R0,R1
001198 2e14      	MOV  R1,R20
001199 914f      	POP  R20
00119a 9508      	RET
                 
                 __UADD12:
00119b 0fea      	ADD  R30,R26
00119c 1ffb      	ADC  R31,R27
00119d 1f68      	ADC  R22,R24
00119e 9508      	RET
                 
                 __NEGMAN1:
00119f 95e0      	COM  R30
0011a0 95f0      	COM  R31
0011a1 9560      	COM  R22
0011a2 5fef      	SUBI R30,-1
0011a3 4fff      	SBCI R31,-1
0011a4 4f6f      	SBCI R22,-1
0011a5 9508      	RET
                 
                 __SUBF12:
0011a6 935f      	PUSH R21
0011a7 df81      	RCALL __UNPACK
0011a8 3890      	CPI  R25,0x80
0011a9 f171      	BREQ __ADDF129
0011aa e850      	LDI  R21,0x80
0011ab 2615      	EOR  R1,R21
                 
0011ac c004      	RJMP __ADDF120
                 
                 __ADDF12:
0011ad 935f      	PUSH R21
0011ae df7a      	RCALL __UNPACK
0011af 3890      	CPI  R25,0x80
0011b0 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0011b1 3870      	CPI  R23,0x80
0011b2 f121      	BREQ __ADDF128
                 __ADDF121:
0011b3 2f57      	MOV  R21,R23
0011b4 1b59      	SUB  R21,R25
0011b5 f12b      	BRVS __ADDF1211
0011b6 f412      	BRPL __ADDF122
0011b7 dfd7      	RCALL __SWAPACC
0011b8 cffa      	RJMP __ADDF121
                 __ADDF122:
0011b9 3158      	CPI  R21,24
0011ba f018      	BRLO __ADDF123
0011bb 27aa      	CLR  R26
0011bc 27bb      	CLR  R27
0011bd 2788      	CLR  R24
                 __ADDF123:
0011be 3058      	CPI  R21,8
0011bf f028      	BRLO __ADDF124
0011c0 2fab      	MOV  R26,R27
0011c1 2fb8      	MOV  R27,R24
0011c2 2788      	CLR  R24
0011c3 5058      	SUBI R21,8
0011c4 cff9      	RJMP __ADDF123
                 __ADDF124:
0011c5 2355      	TST  R21
0011c6 f029      	BREQ __ADDF126
                 __ADDF125:
0011c7 9586      	LSR  R24
0011c8 95b7      	ROR  R27
0011c9 95a7      	ROR  R26
0011ca 955a      	DEC  R21
0011cb f7d9      	BRNE __ADDF125
                 __ADDF126:
0011cc 2d50      	MOV  R21,R0
0011cd 2551      	EOR  R21,R1
0011ce f072      	BRMI __ADDF127
0011cf dfcb      	RCALL __UADD12
0011d0 f438      	BRCC __ADDF129
0011d1 9567      	ROR  R22
0011d2 95f7      	ROR  R31
0011d3 95e7      	ROR  R30
0011d4 9573      	INC  R23
0011d5 f413      	BRVC __ADDF129
0011d6 c020      	RJMP __MAXRES
                 __ADDF128:
0011d7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0011d8 df3e      	RCALL __REPACK
0011d9 915f      	POP  R21
0011da 9508      	RET
                 __ADDF1211:
0011db f7d8      	BRCC __ADDF128
0011dc cffb      	RJMP __ADDF129
                 __ADDF127:
0011dd 1bea      	SUB  R30,R26
0011de 0bfb      	SBC  R31,R27
0011df 0b68      	SBC  R22,R24
0011e0 f051      	BREQ __ZERORES
0011e1 f410      	BRCC __ADDF1210
0011e2 9400      	COM  R0
0011e3 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0011e4 2366      	TST  R22
0011e5 f392      	BRMI __ADDF129
0011e6 0fee      	LSL  R30
0011e7 1fff      	ROL  R31
0011e8 1f66      	ROL  R22
0011e9 957a      	DEC  R23
0011ea f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0011eb 27ee      	CLR  R30
0011ec 27ff      	CLR  R31
0011ed 2766      	CLR  R22
0011ee 2777      	CLR  R23
0011ef 915f      	POP  R21
0011f0 9508      	RET
                 
                 __MINRES:
0011f1 efef      	SER  R30
0011f2 efff      	SER  R31
0011f3 e76f      	LDI  R22,0x7F
0011f4 ef7f      	SER  R23
0011f5 915f      	POP  R21
0011f6 9508      	RET
                 
                 __MAXRES:
0011f7 efef      	SER  R30
0011f8 efff      	SER  R31
0011f9 e76f      	LDI  R22,0x7F
0011fa e77f      	LDI  R23,0x7F
0011fb 915f      	POP  R21
0011fc 9508      	RET
                 
                 __MULF12:
0011fd 935f      	PUSH R21
0011fe df2a      	RCALL __UNPACK
0011ff 3870      	CPI  R23,0x80
001200 f351      	BREQ __ZERORES
001201 3890      	CPI  R25,0x80
001202 f341      	BREQ __ZERORES
001203 2401      	EOR  R0,R1
001204 9408      	SEC
001205 1f79      	ADC  R23,R25
001206 f423      	BRVC __MULF124
001207 f31c      	BRLT __ZERORES
                 __MULF125:
001208 2000      	TST  R0
001209 f33a      	BRMI __MINRES
00120a cfec      	RJMP __MAXRES
                 __MULF124:
00120b 920f      	PUSH R0
00120c 931f      	PUSH R17
00120d 932f      	PUSH R18
00120e 933f      	PUSH R19
00120f 934f      	PUSH R20
001210 2711      	CLR  R17
001211 2722      	CLR  R18
001212 2799      	CLR  R25
001213 9f68      	MUL  R22,R24
001214 01a0      	MOVW R20,R0
001215 9f8f      	MUL  R24,R31
001216 2d30      	MOV  R19,R0
001217 0d41      	ADD  R20,R1
001218 1f59      	ADC  R21,R25
001219 9f6b      	MUL  R22,R27
00121a 0d30      	ADD  R19,R0
00121b 1d41      	ADC  R20,R1
00121c 1f59      	ADC  R21,R25
00121d 9f8e      	MUL  R24,R30
00121e d027      	RCALL __MULF126
00121f 9fbf      	MUL  R27,R31
001220 d025      	RCALL __MULF126
001221 9f6a      	MUL  R22,R26
001222 d023      	RCALL __MULF126
001223 9fbe      	MUL  R27,R30
001224 d01d      	RCALL __MULF127
001225 9faf      	MUL  R26,R31
001226 d01b      	RCALL __MULF127
001227 9fae      	MUL  R26,R30
001228 0d11      	ADD  R17,R1
001229 1f29      	ADC  R18,R25
00122a 1f39      	ADC  R19,R25
00122b 1f49      	ADC  R20,R25
00122c 1f59      	ADC  R21,R25
00122d 2fe3      	MOV  R30,R19
00122e 2ff4      	MOV  R31,R20
00122f 2f65      	MOV  R22,R21
001230 2f52      	MOV  R21,R18
001231 914f      	POP  R20
001232 913f      	POP  R19
001233 912f      	POP  R18
001234 911f      	POP  R17
001235 900f      	POP  R0
001236 2366      	TST  R22
001237 f02a      	BRMI __MULF122
001238 0f55      	LSL  R21
001239 1fee      	ROL  R30
00123a 1fff      	ROL  R31
00123b 1f66      	ROL  R22
00123c c002      	RJMP __MULF123
                 __MULF122:
00123d 9573      	INC  R23
00123e f24b      	BRVS __MULF125
                 __MULF123:
00123f decd      	RCALL __ROUND_REPACK
001240 915f      	POP  R21
001241 9508      	RET
                 
                 __MULF127:
001242 0d10      	ADD  R17,R0
001243 1d21      	ADC  R18,R1
001244 1f39      	ADC  R19,R25
001245 c002      	RJMP __MULF128
                 __MULF126:
001246 0d20      	ADD  R18,R0
001247 1d31      	ADC  R19,R1
                 __MULF128:
001248 1f49      	ADC  R20,R25
001249 1f59      	ADC  R21,R25
00124a 9508      	RET
                 
                 __DIVF21:
00124b 935f      	PUSH R21
00124c dedc      	RCALL __UNPACK
00124d 3870      	CPI  R23,0x80
00124e f421      	BRNE __DIVF210
00124f 2011      	TST  R1
                 __DIVF211:
001250 f40a      	BRPL __DIVF219
001251 cf9f      	RJMP __MINRES
                 __DIVF219:
001252 cfa4      	RJMP __MAXRES
                 __DIVF210:
001253 3890      	CPI  R25,0x80
001254 f409      	BRNE __DIVF218
                 __DIVF217:
001255 cf95      	RJMP __ZERORES
                 __DIVF218:
001256 2401      	EOR  R0,R1
001257 9408      	SEC
001258 0b97      	SBC  R25,R23
001259 f41b      	BRVC __DIVF216
00125a f3d4      	BRLT __DIVF217
00125b 2000      	TST  R0
00125c cff3      	RJMP __DIVF211
                 __DIVF216:
00125d 2f79      	MOV  R23,R25
00125e 931f      	PUSH R17
00125f 932f      	PUSH R18
001260 933f      	PUSH R19
001261 934f      	PUSH R20
001262 2411      	CLR  R1
001263 2711      	CLR  R17
001264 2722      	CLR  R18
001265 2733      	CLR  R19
001266 2744      	CLR  R20
001267 2755      	CLR  R21
001268 e290      	LDI  R25,32
                 __DIVF212:
001269 17ae      	CP   R26,R30
00126a 07bf      	CPC  R27,R31
00126b 0786      	CPC  R24,R22
00126c 0741      	CPC  R20,R17
00126d f030      	BRLO __DIVF213
00126e 1bae      	SUB  R26,R30
00126f 0bbf      	SBC  R27,R31
001270 0b86      	SBC  R24,R22
001271 0b41      	SBC  R20,R17
001272 9408      	SEC
001273 c001      	RJMP __DIVF214
                 __DIVF213:
001274 9488      	CLC
                 __DIVF214:
001275 1f55      	ROL  R21
001276 1f22      	ROL  R18
001277 1f33      	ROL  R19
001278 1c11      	ROL  R1
001279 1faa      	ROL  R26
00127a 1fbb      	ROL  R27
00127b 1f88      	ROL  R24
00127c 1f44      	ROL  R20
00127d 959a      	DEC  R25
00127e f751      	BRNE __DIVF212
00127f 01f9      	MOVW R30,R18
001280 2d61      	MOV  R22,R1
001281 914f      	POP  R20
001282 913f      	POP  R19
001283 912f      	POP  R18
001284 911f      	POP  R17
001285 2366      	TST  R22
001286 f032      	BRMI __DIVF215
001287 0f55      	LSL  R21
001288 1fee      	ROL  R30
001289 1fff      	ROL  R31
00128a 1f66      	ROL  R22
00128b 957a      	DEC  R23
00128c f243      	BRVS __DIVF217
                 __DIVF215:
00128d de7f      	RCALL __ROUND_REPACK
00128e 915f      	POP  R21
00128f 9508      	RET
                 
                 __CMPF12:
001290 2399      	TST  R25
001291 f09a      	BRMI __CMPF120
001292 2377      	TST  R23
001293 f042      	BRMI __CMPF121
001294 1797      	CP   R25,R23
001295 f048      	BRLO __CMPF122
001296 f429      	BRNE __CMPF121
001297 17ae      	CP   R26,R30
001298 07bf      	CPC  R27,R31
001299 0786      	CPC  R24,R22
00129a f020      	BRLO __CMPF122
00129b f031      	BREQ __CMPF123
                 __CMPF121:
00129c 9498      	CLZ
00129d 9488      	CLC
00129e 9508      	RET
                 __CMPF122:
00129f 9498      	CLZ
0012a0 9408      	SEC
0012a1 9508      	RET
                 __CMPF123:
0012a2 9418      	SEZ
0012a3 9488      	CLC
0012a4 9508      	RET
                 __CMPF120:
0012a5 2377      	TST  R23
0012a6 f7c2      	BRPL __CMPF122
0012a7 1797      	CP   R25,R23
0012a8 f398      	BRLO __CMPF121
0012a9 f7a9      	BRNE __CMPF122
0012aa 17ea      	CP   R30,R26
0012ab 07fb      	CPC  R31,R27
0012ac 0768      	CPC  R22,R24
0012ad f388      	BRLO __CMPF122
0012ae f399      	BREQ __CMPF123
0012af cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0012b0 2400      	CLR  R0
0012b1 0daf      	ADD  R26,R15
0012b2 1db0      	ADC  R27,R0
0012b3 9508      	RET
                 
                 __ADDD12:
0012b4 0fea      	ADD  R30,R26
0012b5 1ffb      	ADC  R31,R27
0012b6 1f68      	ADC  R22,R24
0012b7 1f79      	ADC  R23,R25
0012b8 9508      	RET
                 
                 __ANEGW1:
0012b9 95f1      	NEG  R31
0012ba 95e1      	NEG  R30
0012bb 40f0      	SBCI R31,0
0012bc 9508      	RET
                 
                 __ANEGD1:
0012bd 95f0      	COM  R31
0012be 9560      	COM  R22
0012bf 9570      	COM  R23
0012c0 95e1      	NEG  R30
0012c1 4fff      	SBCI R31,-1
0012c2 4f6f      	SBCI R22,-1
0012c3 4f7f      	SBCI R23,-1
0012c4 9508      	RET
                 
                 __ASRW8:
0012c5 2fef      	MOV  R30,R31
0012c6 27ff      	CLR  R31
0012c7 fde7      	SBRC R30,7
0012c8 efff      	SER  R31
0012c9 9508      	RET
                 
                 __CBD1:
0012ca 2ffe      	MOV  R31,R30
0012cb 0fff      	ADD  R31,R31
0012cc 0bff      	SBC  R31,R31
0012cd 2f6f      	MOV  R22,R31
0012ce 2f7f      	MOV  R23,R31
0012cf 9508      	RET
                 
                 __CWD1:
0012d0 2f6f      	MOV  R22,R31
0012d1 0f66      	ADD  R22,R22
0012d2 0b66      	SBC  R22,R22
0012d3 2f76      	MOV  R23,R22
0012d4 9508      	RET
                 
                 __CWD2:
0012d5 2f8b      	MOV  R24,R27
0012d6 0f88      	ADD  R24,R24
0012d7 0b88      	SBC  R24,R24
0012d8 2f98      	MOV  R25,R24
0012d9 9508      	RET
                 
                 __MULD12U:
0012da 9f7a      	MUL  R23,R26
0012db 2d70      	MOV  R23,R0
0012dc 9f6b      	MUL  R22,R27
0012dd 0d70      	ADD  R23,R0
0012de 9ff8      	MUL  R31,R24
0012df 0d70      	ADD  R23,R0
0012e0 9fe9      	MUL  R30,R25
0012e1 0d70      	ADD  R23,R0
0012e2 9f6a      	MUL  R22,R26
0012e3 2d60      	MOV  R22,R0
0012e4 0d71      	ADD  R23,R1
0012e5 9ffb      	MUL  R31,R27
0012e6 0d60      	ADD  R22,R0
0012e7 1d71      	ADC  R23,R1
0012e8 9fe8      	MUL  R30,R24
0012e9 0d60      	ADD  R22,R0
0012ea 1d71      	ADC  R23,R1
0012eb 2788      	CLR  R24
0012ec 9ffa      	MUL  R31,R26
0012ed 2df0      	MOV  R31,R0
0012ee 0d61      	ADD  R22,R1
0012ef 1f78      	ADC  R23,R24
0012f0 9feb      	MUL  R30,R27
0012f1 0df0      	ADD  R31,R0
0012f2 1d61      	ADC  R22,R1
0012f3 1f78      	ADC  R23,R24
0012f4 9fea      	MUL  R30,R26
0012f5 2de0      	MOV  R30,R0
0012f6 0df1      	ADD  R31,R1
0012f7 1f68      	ADC  R22,R24
0012f8 1f78      	ADC  R23,R24
0012f9 9508      	RET
                 
                 __MULB1W2U:
0012fa 2f6e      	MOV  R22,R30
0012fb 9f6a      	MUL  R22,R26
0012fc 01f0      	MOVW R30,R0
0012fd 9f6b      	MUL  R22,R27
0012fe 0df0      	ADD  R31,R0
0012ff 9508      	RET
                 
                 __MULD12:
001300 d058      	RCALL __CHKSIGND
001301 dfd8      	RCALL __MULD12U
001302 f40e      	BRTC __MULD121
001303 dfb9      	RCALL __ANEGD1
                 __MULD121:
001304 9508      	RET
                 
                 __DIVB21U:
001305 2400      	CLR  R0
001306 e098      	LDI  R25,8
                 __DIVB21U1:
001307 0faa      	LSL  R26
001308 1c00      	ROL  R0
001309 1a0e      	SUB  R0,R30
00130a f410      	BRCC __DIVB21U2
00130b 0e0e      	ADD  R0,R30
00130c c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00130d 60a1      	SBR  R26,1
                 __DIVB21U3:
00130e 959a      	DEC  R25
00130f f7b9      	BRNE __DIVB21U1
001310 2fea      	MOV  R30,R26
001311 2da0      	MOV  R26,R0
001312 9508      	RET
                 
                 __DIVB21:
001313 d039      	RCALL __CHKSIGNB
001314 dff0      	RCALL __DIVB21U
001315 f40e      	BRTC __DIVB211
001316 95e1      	NEG  R30
                 __DIVB211:
001317 9508      	RET
                 
                 __DIVD21U:
001318 933f      	PUSH R19
001319 934f      	PUSH R20
00131a 935f      	PUSH R21
00131b 2400      	CLR  R0
00131c 2411      	CLR  R1
00131d 2744      	CLR  R20
00131e 2755      	CLR  R21
00131f e230      	LDI  R19,32
                 __DIVD21U1:
001320 0faa      	LSL  R26
001321 1fbb      	ROL  R27
001322 1f88      	ROL  R24
001323 1f99      	ROL  R25
001324 1c00      	ROL  R0
001325 1c11      	ROL  R1
001326 1f44      	ROL  R20
001327 1f55      	ROL  R21
001328 1a0e      	SUB  R0,R30
001329 0a1f      	SBC  R1,R31
00132a 0b46      	SBC  R20,R22
00132b 0b57      	SBC  R21,R23
00132c f428      	BRCC __DIVD21U2
00132d 0e0e      	ADD  R0,R30
00132e 1e1f      	ADC  R1,R31
00132f 1f46      	ADC  R20,R22
001330 1f57      	ADC  R21,R23
001331 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001332 60a1      	SBR  R26,1
                 __DIVD21U3:
001333 953a      	DEC  R19
001334 f759      	BRNE __DIVD21U1
001335 01fd      	MOVW R30,R26
001336 01bc      	MOVW R22,R24
001337 01d0      	MOVW R26,R0
001338 01ca      	MOVW R24,R20
001339 915f      	POP  R21
00133a 914f      	POP  R20
00133b 913f      	POP  R19
00133c 9508      	RET
                 
                 __MODB21:
00133d 94e8      	CLT
00133e ffa7      	SBRS R26,7
00133f c002      	RJMP __MODB211
001340 95a1      	NEG  R26
001341 9468      	SET
                 __MODB211:
001342 fde7      	SBRC R30,7
001343 95e1      	NEG  R30
001344 dfc0      	RCALL __DIVB21U
001345 2fea      	MOV  R30,R26
001346 f40e      	BRTC __MODB212
001347 95e1      	NEG  R30
                 __MODB212:
001348 9508      	RET
                 
                 __MODD21U:
001349 dfce      	RCALL __DIVD21U
00134a 01fd      	MOVW R30,R26
00134b 01bc      	MOVW R22,R24
00134c 9508      	RET
                 
                 __CHKSIGNB:
00134d 94e8      	CLT
00134e ffe7      	SBRS R30,7
00134f c002      	RJMP __CHKSB1
001350 95e1      	NEG  R30
001351 9468      	SET
                 __CHKSB1:
001352 ffa7      	SBRS R26,7
001353 c004      	RJMP __CHKSB2
001354 95a1      	NEG  R26
001355 f800      	BLD  R0,0
001356 9403      	INC  R0
001357 fa00      	BST  R0,0
                 __CHKSB2:
001358 9508      	RET
                 
                 __CHKSIGND:
001359 94e8      	CLT
00135a ff77      	SBRS R23,7
00135b c002      	RJMP __CHKSD1
00135c df60      	RCALL __ANEGD1
00135d 9468      	SET
                 __CHKSD1:
00135e ff97      	SBRS R25,7
00135f c00b      	RJMP __CHKSD2
001360 2400      	CLR  R0
001361 95a0      	COM  R26
001362 95b0      	COM  R27
001363 9580      	COM  R24
001364 9590      	COM  R25
001365 9611      	ADIW R26,1
001366 1d80      	ADC  R24,R0
001367 1d90      	ADC  R25,R0
001368 f800      	BLD  R0,0
001369 9403      	INC  R0
00136a fa00      	BST  R0,0
                 __CHKSD2:
00136b 9508      	RET
                 
                 __GETW1P:
00136c 91ed      	LD   R30,X+
00136d 91fc      	LD   R31,X
00136e 9711      	SBIW R26,1
00136f 9508      	RET
                 
                 __GETD1P:
001370 91ed      	LD   R30,X+
001371 91fd      	LD   R31,X+
001372 916d      	LD   R22,X+
001373 917c      	LD   R23,X
001374 9713      	SBIW R26,3
001375 9508      	RET
                 
                 __GETD1P_INC:
001376 91ed      	LD   R30,X+
001377 91fd      	LD   R31,X+
001378 916d      	LD   R22,X+
001379 917d      	LD   R23,X+
00137a 9508      	RET
                 
                 __PUTDP1:
00137b 93ed      	ST   X+,R30
00137c 93fd      	ST   X+,R31
00137d 936d      	ST   X+,R22
00137e 937c      	ST   X,R23
00137f 9508      	RET
                 
                 __PUTDP1_DEC:
001380 937e      	ST   -X,R23
001381 936e      	ST   -X,R22
001382 93fe      	ST   -X,R31
001383 93ee      	ST   -X,R30
001384 9508      	RET
                 
                 __GETD1S0:
001385 81e8      	LD   R30,Y
001386 81f9      	LDD  R31,Y+1
001387 816a      	LDD  R22,Y+2
001388 817b      	LDD  R23,Y+3
001389 9508      	RET
                 
                 __GETD2S0:
00138a 81a8      	LD   R26,Y
00138b 81b9      	LDD  R27,Y+1
00138c 818a      	LDD  R24,Y+2
00138d 819b      	LDD  R25,Y+3
00138e 9508      	RET
                 
                 __PUTD1S0:
00138f 83e8      	ST   Y,R30
001390 83f9      	STD  Y+1,R31
001391 836a      	STD  Y+2,R22
001392 837b      	STD  Y+3,R23
001393 9508      	RET
                 
                 __PUTPARD1:
001394 937a      	ST   -Y,R23
001395 936a      	ST   -Y,R22
001396 93fa      	ST   -Y,R31
001397 93ea      	ST   -Y,R30
001398 9508      	RET
                 
                 __CDF2U:
001399 9468      	SET
00139a c001      	RJMP __CDF2U0
                 __CDF2:
00139b 94e8      	CLT
                 __CDF2U0:
00139c d001      	RCALL __SWAPD12
00139d ddd6      	RCALL __CDF1U0
                 
                 __SWAPD12:
00139e 2e18      	MOV  R1,R24
00139f 2f86      	MOV  R24,R22
0013a0 2d61      	MOV  R22,R1
0013a1 2e19      	MOV  R1,R25
0013a2 2f97      	MOV  R25,R23
0013a3 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0013a4 2e1b      	MOV  R1,R27
0013a5 2fbf      	MOV  R27,R31
0013a6 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0013a7 2e1a      	MOV  R1,R26
0013a8 2fae      	MOV  R26,R30
0013a9 2de1      	MOV  R30,R1
0013aa 9508      	RET
                 
                 __CPD10:
0013ab 9730      	SBIW R30,0
0013ac 4060      	SBCI R22,0
0013ad 4070      	SBCI R23,0
0013ae 9508      	RET
                 
                 __CPD02:
0013af 2400      	CLR  R0
0013b0 160a      	CP   R0,R26
0013b1 060b      	CPC  R0,R27
0013b2 0608      	CPC  R0,R24
0013b3 0609      	CPC  R0,R25
0013b4 9508      	RET
                 
                 __SAVELOCR6:
0013b5 935a      	ST   -Y,R21
                 __SAVELOCR5:
0013b6 934a      	ST   -Y,R20
                 __SAVELOCR4:
0013b7 933a      	ST   -Y,R19
                 __SAVELOCR3:
0013b8 932a      	ST   -Y,R18
                 __SAVELOCR2:
0013b9 931a      	ST   -Y,R17
0013ba 930a      	ST   -Y,R16
0013bb 9508      	RET
                 
                 __LOADLOCR6:
0013bc 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0013bd 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0013be 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0013bf 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0013c0 8119      	LDD  R17,Y+1
0013c1 8108      	LD   R16,Y
0013c2 9508      	RET
                 
                 __INITLOCW:
0013c3 0fac      	ADD  R26,R28
0013c4 1fbd      	ADC  R27,R29
                 __INITLOC0:
0013c5 9005      	LPM  R0,Z+
0013c6 920d      	ST   X+,R0
0013c7 9701      	SBIW R24,1
0013c8 f7e1      	BRNE __INITLOC0
0013c9 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 134 r1 :  59 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  73 r17:  92 r18:  67 r19:  72 r20:  59 r21: 105 r22: 217 r23: 197 
r24: 125 r25: 102 r26: 388 r27: 195 r28: 118 r29:   3 r30: 906 r31: 383 
x  : 236 y  : 633 z  :  75 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  37 add   :  30 
adiw  :  54 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  76 
brge  :  13 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  77 brpl  :   9 brsh  :  14 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   4 call  : 436 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  67 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  21 cpc   :  27 cpi   : 135 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  12 inc   :   4 jmp   :  54 ld    : 177 ldd   : 289 
ldi   : 488 lds   :  32 lpm   :  17 lsl   :  14 lsr   :   4 mov   : 107 
movw  : 170 mul   :  24 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  34 pop   :  55 push  :  55 rcall :  90 
ret   : 161 reti  :   6 rjmp  : 207 rol   :  32 ror   :  16 sbc   :  12 
sbci  : 109 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  50 sbr   :   4 
sbrc  :   5 sbrs  :  22 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 319 std   : 144 sts   :  35 sub   :   6 subi  : 130 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002794   9358    774  10132  131072   7.7%
[.dseg] 0x000100 0x00058e      0    142    142    4351   3.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 3 warnings
