
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Fri Feb 28 14:00:28 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01eb 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0896 	JMP  _hall_sensor_detection1
00000c 940c 08a4 	JMP  _hall_sensor_detection2
00000e 940c 08b2 	JMP  _hall_sensor_detection3
000010 940c 08c7 	JMP  _hall_sensor_detection4
000012 940c 0673 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0690 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 067f 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 06ba 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 06db 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 0000
000169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016a 0000
00016b 0000
00016c 0000
00016d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0000
000174 0000
000175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000176 0000
000177 0000
000178 0000
000179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017a 0000
00017b 0000
00017c 0000
00017d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017e 0000
00017f 0000
000180 0000
000181 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000182 0000
000183 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
000184 253c
000185 2c64
000186 6425
000187 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
000188 3e64
000189 3c00
00018a 6425
00018b 003e      	.DB  0x64,0x3E,0x0,0x3C,0x25,0x64,0x3E,0x0
00018c 2e25
00018d 6633
00018e 202c
00018f 2e25      	.DB  0x25,0x2E,0x33,0x66,0x2C,0x20,0x25,0x2E
000190 2c64
000191 2520
000192 2c64
000193 2520      	.DB  0x64,0x2C,0x20,0x25,0x64,0x2C,0x20,0x25
000194 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1189): warning: .cseg .db misalignment - padding zero byte
000195 0000      	.DB  0x64,0xA,0x0
                 _0x80003:
000196 0000
000197 0000
000198 0000
000199 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019a 0000
00019b 0000
00019c 0000
00019d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019e 0000
00019f 0000
0001a0 0000
0001a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a2 0000
0001a3 0000
0001a4 0000
0001a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a6 0000
0001a7 0000
0001a8 0000
0001a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001aa 0000
0001ab 0000
0001ac 0000
0001ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ae 0000
0001af 0000
0001b0 0000
0001b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b2 0000
0001b3 0000
0001b4 0000
0001b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b6 0000
0001b7 0000
0001b8 0000
0001b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ba 0000
0001bb 0000
0001bc 0000
0001bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001be 0000
0001bf 0000
0001c0 0000
0001c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c2 0000
0001c3 0000
0001c4 0000
0001c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c6 0000
0001c7 0000
0001c8 0000
0001c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ca 0000
0001cb 0000
0001cc 0000
0001cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ce 0000
0001cf 0000
0001d0 0000
0001d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d2 0000
0001d3 0000
0001d4 0000
0001d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d6 0000
0001d7 0000
0001d8 0000
0001d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001da 0000
0001db 0000
0001dc 0000
0001dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001de 4e2d
0001df 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1210): warning: .cseg .db misalignment - padding zero byte
0001e0 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1212): warning: .cseg .db misalignment - padding zero byte
0001e1 0001      	.DB  0x1
                 _0x2080000:
0001e2 4e2d
0001e3 4e41
0001e4 4900
0001e5 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1215): warning: .cseg .db misalignment - padding zero byte
0001e6 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001e7 0001      	.DW  0x01
0001e8 058a      	.DW  __seed_G104
0001e9 03c2      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001ea 0000      	.DW  0
                 
                 __RESET:
0001eb 94f8      	CLI
0001ec 27ee      	CLR  R30
0001ed bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001ee e0f1      	LDI  R31,1
0001ef bff5      	OUT  MCUCR,R31
0001f0 bfe5      	OUT  MCUCR,R30
0001f1 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001f3 e1f8      	LDI  R31,0x18
0001f4 bdf1      	OUT  WDTCR,R31
0001f5 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001f6 e08d      	LDI  R24,(14-2)+1
0001f7 e0a2      	LDI  R26,2
0001f8 27bb      	CLR  R27
                 __CLEAR_REG:
0001f9 93ed      	ST   X+,R30
0001fa 958a      	DEC  R24
0001fb f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001fc e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001fd e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001fe e0a0      	LDI  R26,LOW(__SRAM_START)
0001ff e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000200 93ed      	ST   X+,R30
000201 9701      	SBIW R24,1
000202 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000203 ecee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000204 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000205 9185      	LPM  R24,Z+
000206 9195      	LPM  R25,Z+
000207 9700      	SBIW R24,0
000208 f061      	BREQ __GLOBAL_INI_END
000209 91a5      	LPM  R26,Z+
00020a 91b5      	LPM  R27,Z+
00020b 9005      	LPM  R0,Z+
00020c 9015      	LPM  R1,Z+
00020d 01bf      	MOVW R22,R30
00020e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00020f 9005      	LPM  R0,Z+
000210 920d      	ST   X+,R0
000211 9701      	SBIW R24,1
000212 f7e1      	BRNE __GLOBAL_INI_LOOP
000213 01fb      	MOVW R30,R22
000214 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000215 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000216 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000217 bfed      	OUT  SPL,R30
000218 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000219 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00021a e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00021b e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00021c 940c 021e 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define PREDICTION 0.3
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;long int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; 0000 001B     float a_buff;
                 ; 0000 001C     float v_buff;
                 ; 0000 001D 
                 ; 0000 001E     int velocity = 0;
                 ; 0000 001F     int angularV = 0;
                 ; 0000 0020     int velocity_R = 0;
                 ; 0000 0021     int velocity_L = 0;
                 ; 0000 0022     int del_ms = 0;
                 ; 0000 0023     float del_s = 0;
                 ; 0000 0024     float diameter = 0;
                 ; 0000 0025     int d_diameter = 0;
                 ; 0000 0026     float _angular = 0;
                 ; 0000 0027     int d__angular = 0;
                 ; 0000 0028 
                 ; 0000 0029 
                 ; 0000 002A 
                 ; 0000 002B     int currentRPM_R = 0;
                 ; 0000 002C     int currentRPM_L = 0;
                 ; 0000 002D     float currentV_R = 0;
                 ; 0000 002E     float currentV_L = 0;
                 ; 0000 002F     int goal_current_R = 0;
                 ; 0000 0030     int goal_current_L = 0;
                 ; 0000 0031     float goal_currentV_R = 0;
                 ; 0000 0032     float goal_currentV_L = 0;
                 ; 0000 0033 
                 ; 0000 0034 
                 ; 0000 0035     float d_velocity = 0;
                 ; 0000 0036     float d_angularV = 0;
                 ; 0000 0037     float control_time = 0;
                 ; 0000 0038     float g_velocity = 0;
                 ; 0000 0039     float g_angularV = 0;
                 ; 0000 003A 
                 ; 0000 003B     float d_x = 0;
                 ; 0000 003C     float d_y = 0;
                 ; 0000 003D     float d_angular = 0;
                 ; 0000 003E     int d_angular_circula = 0;
                 ; 0000 003F     float g_x = 0;
                 ; 0000 0040     float g_y = 0;
                 ; 0000 0041     float g_angular = 0;
                 ; 0000 0042     int g_angular_circula = 0;
                 ; 0000 0043 
                 ; 0000 0044     float TIMER1_TIME = 0;
                 ; 0000 0045     float TIMER0_TIME = 0;
                 ; 0000 0046     float TIMER0_TIME_print = 0;
                 ; 0000 0047 
                 ; 0000 0048     char rootine_test = 0;
                 ; 0000 0049     char STOP_FLAG = 0;
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C     float hall_x = 0;
                 ; 0000 004D     float hall_y = 0;
                 ; 0000 004E     float hall_angular = 0;
                 ; 0000 004F     int hall_angular_circula = 0;
                 ; 0000 0050 
                 ; 0000 0051     float hall_velocity = 0;
                 ; 0000 0052     float hall_angularV = 0;
                 ; 0000 0053 
                 ; 0000 0054     float motorR_distance = 0;
                 ; 0000 0055     float motorL_distance = 0;
                 ; 0000 0056 
                 ; 0000 0057     unsigned char BUFF[500] = {0,};
                 ; 0000 0058 
                 ; 0000 0059     usart1_init(bps_115200);
00021e 97ef      	SBIW R28,63
00021f 97ef      	SBIW R28,63
000220 9726      	SBIW R28,6
000221 50d2      	SUBI R29,2
                +
000222 e78c     +LDI R24 , LOW ( 636 )
000223 e092     +LDI R25 , HIGH ( 636 )
                 	__GETWRN 24,25,636
000224 e0a0      	LDI  R26,LOW(0)
000225 e0b0      	LDI  R27,HIGH(0)
000226 e8ec      	LDI  R30,LOW(_0x3*2)
000227 e0f0      	LDI  R31,HIGH(_0x3*2)
000228 940e 15c7 	CALL __INITLOCW
                 ;	a_buff -> Y+640
                 ;	v_buff -> Y+636
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+634
                 ;	del_ms -> Y+632
                 ;	del_s -> Y+628
                 ;	diameter -> Y+624
                 ;	d_diameter -> Y+622
                 ;	_angular -> Y+618
                 ;	d__angular -> Y+616
                 ;	currentRPM_R -> Y+614
                 ;	currentRPM_L -> Y+612
                 ;	currentV_R -> Y+608
                 ;	currentV_L -> Y+604
                 ;	goal_current_R -> Y+602
                 ;	goal_current_L -> Y+600
                 ;	goal_currentV_R -> Y+596
                 ;	goal_currentV_L -> Y+592
                 ;	d_velocity -> Y+588
                 ;	d_angularV -> Y+584
                 ;	control_time -> Y+580
                 ;	g_velocity -> Y+576
                 ;	g_angularV -> Y+572
                 ;	d_x -> Y+568
                 ;	d_y -> Y+564
                 ;	d_angular -> Y+560
                 ;	d_angular_circula -> Y+558
                 ;	g_x -> Y+554
                 ;	g_y -> Y+550
                 ;	g_angular -> Y+546
                 ;	g_angular_circula -> Y+544
                 ;	TIMER1_TIME -> Y+540
                 ;	TIMER0_TIME -> Y+536
                 ;	TIMER0_TIME_print -> Y+532
                 ;	rootine_test -> Y+531
                 ;	STOP_FLAG -> Y+530
                 ;	hall_x -> Y+526
                 ;	hall_y -> Y+522
                 ;	hall_angular -> Y+518
                 ;	hall_angular_circula -> Y+516
                 ;	hall_velocity -> Y+512
                 ;	hall_angularV -> Y+508
                 ;	motorR_distance -> Y+504
                 ;	motorL_distance -> Y+500
                 ;	BUFF -> Y+0
                +
00022a e000     +LDI R16 , LOW ( 0 )
00022b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00022c e020     +LDI R18 , LOW ( 0 )
00022d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00022e e040     +LDI R20 , LOW ( 0 )
00022f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000230 e0e7      	LDI  R30,LOW(7)
000231 e0f0      	LDI  R31,HIGH(7)
000232 93fa      	ST   -Y,R31
000233 93ea      	ST   -Y,R30
000234 940e 0712 	CALL _usart1_init
                 ; 0000 005A     usart0_init(bps_115200);
000236 e0e7      	LDI  R30,LOW(7)
000237 e0f0      	LDI  R31,HIGH(7)
000238 93fa      	ST   -Y,R31
000239 93ea      	ST   -Y,R30
00023a 940e 072a 	CALL _usart0_init
                 ; 0000 005B     timer2_init();
00023c 940e 06a2 	CALL _timer2_init
                 ; 0000 005C     timer0_init();
00023e 940e 06a8 	CALL _timer0_init
                 ; 0000 005D     timer1_init();
000240 940e 06ac 	CALL _timer1_init
                 ; 0000 005E     EXT_INT_init();
000242 940e 088d 	CALL _EXT_INT_init
                 ; 0000 005F     SREG |= 0x80;
000244 9478      	BSET 7
                 ; 0000 0060     DDRB.1 = 1;
000245 9ab9      	SBI  0x17,1
                 ; 0000 0061     DDRB.2 = 1;
000246 9aba      	SBI  0x17,2
                 ; 0000 0062     DDRB.3 = 1;
000247 9abb      	SBI  0x17,3
                 ; 0000 0063     delay_ms(5000);
000248 e8e8      	LDI  R30,LOW(5000)
000249 e1f3      	LDI  R31,HIGH(5000)
00024a 940e 0f81 	CALL SUBOPT_0x0
                 ; 0000 0064 
                 ; 0000 0065     TIMER0_OVERFLOW = 0;
00024c 940e 0f85 	CALL SUBOPT_0x1
                 ; 0000 0066     TCNT0 = 0;
                 ; 0000 0067 
                 ; 0000 0068     while(1)
                 _0xA:
                 ; 0000 0069     {
                 ; 0000 006A         if(CHECK_GETS)
00024e 91e0 0581 	LDS  R30,_CHECK_GETS
000250 30e0      	CPI  R30,0
000251 f411      	BRNE PC+3
000252 940c 0353 	JMP _0xD
                 ; 0000 006B         {
                 ; 0000 006C             UCSR1B &= ~(1<<RXEN1);
000254 91e0 009a 	LDS  R30,154
000256 7eef      	ANDI R30,0xEF
000257 93e0 009a 	STS  154,R30
                 ; 0000 006D             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
000259 e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
00025a e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
00025b 93fa      	ST   -Y,R31
00025c 93ea      	ST   -Y,R30
                +
00025d e0e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00025e e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00025f 93fa      	ST   -Y,R31
000260 93ea      	ST   -Y,R30
000261 b7ed      	IN   R30,SPL
000262 b7fe      	IN   R31,SPH
000263 9731      	SBIW R30,1
000264 940e 1598 	CALL __PUTPARD1L
000266 931f      	PUSH R17
000267 930f      	PUSH R16
000268 b7ed      	IN   R30,SPL
000269 b7fe      	IN   R31,SPH
00026a 9731      	SBIW R30,1
00026b 940e 1598 	CALL __PUTPARD1L
00026d 933f      	PUSH R19
00026e 932f      	PUSH R18
00026f 01fe      	MOVW R30,R28
000270 57ec      	SUBI R30,LOW(-(644))
000271 4ffd      	SBCI R31,HIGH(-(644))
000272 2766      	CLR  R22
000273 2777      	CLR  R23
000274 940e 159a 	CALL __PUTPARD1
000276 e08c      	LDI  R24,12
000277 940e 0d9d 	CALL _sscanf
000279 9660      	ADIW R28,16
00027a 912f      	POP  R18
00027b 913f      	POP  R19
00027c 910f      	POP  R16
00027d 911f      	POP  R17
                 ; 0000 006E             // sscanf(VELOCITY_BUFF,"<%d>", &d_diameter);
                 ; 0000 006F             sscanf(VELOCITY_BUFF, "<%d>",&d__angular);
00027e e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
00027f e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000280 93fa      	ST   -Y,R31
000281 93ea      	ST   -Y,R30
                +
000282 e1e3     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
000283 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
000284 93fa      	ST   -Y,R31
000285 93ea      	ST   -Y,R30
000286 01fe      	MOVW R30,R28
000287 59e4      	SUBI R30,LOW(-(620))
000288 4ffd      	SBCI R31,HIGH(-(620))
000289 2766      	CLR  R22
00028a 2777      	CLR  R23
00028b 940e 159a 	CALL __PUTPARD1
00028d e084      	LDI  R24,4
00028e 940e 0d9d 	CALL _sscanf
000290 9628      	ADIW R28,8
                 ; 0000 0070 
                 ; 0000 0071             if(!del_ms){
000291 940e 0f8c 	CALL SUBOPT_0x2
000293 9730      	SBIW R30,0
000294 f4b1      	BRNE _0xE
                 ; 0000 0072                 d_x = 0;
000295 e0e0      	LDI  R30,LOW(0)
                +
000296 01de     +MOVW R26 , R28
000297 5ca8     +SUBI R26 , LOW ( - 568 )
000298 4fbd     +SBCI R27 , HIGH ( - 568 )
000299 93ed     +ST X + , R30
00029a 93ed     +ST X + , R30
00029b 93ed     +ST X + , R30
00029c 93ec     +ST X , R30
                 	__CLRD1SX 568
                 ; 0000 0073                 d_y = 0;
                +
00029d 01de     +MOVW R26 , R28
00029e 5cac     +SUBI R26 , LOW ( - 564 )
00029f 4fbd     +SBCI R27 , HIGH ( - 564 )
0002a0 93ed     +ST X + , R30
0002a1 93ed     +ST X + , R30
0002a2 93ed     +ST X + , R30
0002a3 93ec     +ST X , R30
                 	__CLRD1SX 564
                 ; 0000 0074                 d_angular = 0;
                +
0002a4 01de     +MOVW R26 , R28
0002a5 5da0     +SUBI R26 , LOW ( - 560 )
0002a6 4fbd     +SBCI R27 , HIGH ( - 560 )
0002a7 93ed     +ST X + , R30
0002a8 93ed     +ST X + , R30
0002a9 93ed     +ST X + , R30
0002aa 93ec     +ST X , R30
                 	__CLRD1SX 560
                 ; 0000 0075             }
                 ; 0000 0076 
                 ; 0000 0077             // if(d_diameter>0){
                 ; 0000 0078             //     diameter = (float)(((float)d_diameter/100)-0.05);
                 ; 0000 0079             //     if((float)(MOTOR_CONT_VELOCITY_MAX_SPEED*MOTOR_DRIVE_VELOCITY_CEL_TIME)<diameter)
                 ; 0000 007A             //     {
                 ; 0000 007B             //         del_s = (float)((diameter + (MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED))/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 007C             //         del_s -= MOTOR_DRIVE_VELOCITY_CEL_TIME;
                 ; 0000 007D             //     }
                 ; 0000 007E             //     else del_s = (float)(((MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED)+diameter)/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 007F             //     del_ms = (int)(del_s*1000);
                 ; 0000 0080             //     v_buff = MOTOR_CONT_VELOCITY_MAX_SPEED;
                 ; 0000 0081             //     a_buff = 0;
                 ; 0000 0082             // }
                 ; 0000 0083             // else{
                 ; 0000 0084             //     diameter = (float)(((float)d_diameter/100)+0.05);
                 ; 0000 0085             //     diameter = -diameter;
                 ; 0000 0086             //     if((float)(MOTOR_CONT_VELOCITY_MAX_SPEED*MOTOR_DRIVE_VELOCITY_CEL_TIME)<diameter)
                 ; 0000 0087             //     {
                 ; 0000 0088             //         del_s = (float)((diameter + (MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED))/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 0089             //         del_s -= MOTOR_DRIVE_VELOCITY_CEL_TIME;
                 ; 0000 008A             //     }
                 ; 0000 008B             //     else del_s = (float)(((MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED)+diameter)/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 008C             //     del_ms = (int)(del_s*1000);
                 ; 0000 008D 
                 ; 0000 008E             //     v_buff = -MOTOR_CONT_VELOCITY_MAX_SPEED;
                 ; 0000 008F             //     a_buff = 0;
                 ; 0000 0090             // }
                 ; 0000 0091 
                 ; 0000 0092             if(d__angular>0){
                 _0xE:
                +
0002ab 01de     +MOVW R26 , R28
0002ac 59a8     +SUBI R26 , LOW ( - 616 )
0002ad 4fbd     +SBCI R27 , HIGH ( - 616 )
0002ae 900d     +LD R0 , X +
0002af 91bc     +LD R27 , X
0002b0 2da0     +MOV R26 , R0
                 	__GETW2SX 616
0002b1 940e 15b5 	CALL __CPW02
0002b3 f534      	BRGE _0xF
                 ; 0000 0093                 _angular = (float)((float)(d__angular-14.0)/Circular);
0002b4 940e 0f93 	CALL SUBOPT_0x3
0002b6 01df      	MOVW R26,R30
0002b7 01cb      	MOVW R24,R22
                +
0002b8 e0e0     +LDI R30 , LOW ( 0x41600000 )
0002b9 e0f0     +LDI R31 , HIGH ( 0x41600000 )
0002ba e660     +LDI R22 , BYTE3 ( 0x41600000 )
0002bb e471     +LDI R23 , BYTE4 ( 0x41600000 )
                 	__GETD1N 0x41600000
0002bc 940e 0f9e 	CALL SUBOPT_0x4
0002be 940e 0fa3 	CALL SUBOPT_0x5
                 ; 0000 0094                 if((float)(MOTOR_CONT_ANGULAR_MAX_SPEED*MOTOR_DRIVE_ANGULAR_CEL_TIME)<_angular)
0002c0 940e 0fb3 	CALL SUBOPT_0x6
0002c2 940e 1494 	CALL __CMPF12
0002c4 f428      	BRSH _0x10
                 ; 0000 0095                 {
                 ; 0000 0096                     del_s = (float)((_angular + (MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED))/MOTOR_CONT_ANGULAR_MAX_SPEED);
0002c5 940e 0fb8 	CALL SUBOPT_0x7
0002c7 940e 0fcc 	CALL SUBOPT_0x8
                 ; 0000 0097                     del_s -= MOTOR_DRIVE_ANGULAR_CEL_TIME;
0002c9 c002      	RJMP _0x18
                 ; 0000 0098                 }
                 ; 0000 0099                 else del_s = (float)(((MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED)+_angular)/MOTOR_CONT_ANGULAR_MAX_SPEED);
                 _0x10:
0002ca 940e 0fb8 	CALL SUBOPT_0x7
                 _0x18:
                +
0002cc 01de     +MOVW R26 , R28
0002cd 58ac     +SUBI R26 , LOW ( - 628 )
0002ce 4fbd     +SBCI R27 , HIGH ( - 628 )
0002cf 93ed     +ST X + , R30
0002d0 93fd     +ST X + , R31
0002d1 936d     +ST X + , R22
0002d2 937c     +ST X , R23
                 	__PUTD1SX 628
                 ; 0000 009A                 del_ms = (int)(del_s*1000);
0002d3 940e 0fda 	CALL SUBOPT_0x9
                 ; 0000 009B 
                 ; 0000 009C                 v_buff = 0;
                 ; 0000 009D                 a_buff = MOTOR_CONT_ANGULAR_MAX_SPEED;
                +
0002d5 e0e0     +LDI R30 , LOW ( 0x3FC00000 )
0002d6 e0f0     +LDI R31 , HIGH ( 0x3FC00000 )
0002d7 ec60     +LDI R22 , BYTE3 ( 0x3FC00000 )
0002d8 e37f     +LDI R23 , BYTE4 ( 0x3FC00000 )
                 	__GETD1N 0x3FC00000
0002d9 c02c      	RJMP _0x19
                 ; 0000 009E             }
                 ; 0000 009F             else{
                 _0xF:
                 ; 0000 00A0                 _angular = (float)((float)(d__angular+14.0)/Circular);
0002da 940e 0f93 	CALL SUBOPT_0x3
                +
0002dc e0a0     +LDI R26 , LOW ( 0x41600000 )
0002dd e0b0     +LDI R27 , HIGH ( 0x41600000 )
0002de e680     +LDI R24 , BYTE3 ( 0x41600000 )
0002df e491     +LDI R25 , BYTE4 ( 0x41600000 )
                 	__GETD2N 0x41600000
0002e0 940e 13b1 	CALL __ADDF12
0002e2 940e 0fa3 	CALL SUBOPT_0x5
                 ; 0000 00A1                 _angular = -_angular;
0002e4 940e 130b 	CALL __ANEGF1
                +
0002e6 01de     +MOVW R26 , R28
0002e7 59a6     +SUBI R26 , LOW ( - 618 )
0002e8 4fbd     +SBCI R27 , HIGH ( - 618 )
0002e9 93ed     +ST X + , R30
0002ea 93fd     +ST X + , R31
0002eb 936d     +ST X + , R22
0002ec 937c     +ST X , R23
                 	__PUTD1SX 618
                 ; 0000 00A2                 if((float)(MOTOR_CONT_ANGULAR_MAX_SPEED*MOTOR_DRIVE_ANGULAR_CEL_TIME)<_angular)
0002ed 940e 0fb3 	CALL SUBOPT_0x6
0002ef 940e 1494 	CALL __CMPF12
0002f1 f428      	BRSH _0x13
                 ; 0000 00A3                 {
                 ; 0000 00A4                     del_s = (float)((_angular + (MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED))/MOTOR_CONT_ANGULAR_MAX_SPEED);
0002f2 940e 0fb8 	CALL SUBOPT_0x7
0002f4 940e 0fcc 	CALL SUBOPT_0x8
                 ; 0000 00A5                     del_s -= MOTOR_DRIVE_ANGULAR_CEL_TIME;
0002f6 c002      	RJMP _0x1A
                 ; 0000 00A6                 }
                 ; 0000 00A7                 else del_s = (float)(((MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED)+_angular)/MOTOR_CONT_ANGULAR_MAX_SPEED);
                 _0x13:
0002f7 940e 0fb8 	CALL SUBOPT_0x7
                 _0x1A:
                +
0002f9 01de     +MOVW R26 , R28
0002fa 58ac     +SUBI R26 , LOW ( - 628 )
0002fb 4fbd     +SBCI R27 , HIGH ( - 628 )
0002fc 93ed     +ST X + , R30
0002fd 93fd     +ST X + , R31
0002fe 936d     +ST X + , R22
0002ff 937c     +ST X , R23
                 	__PUTD1SX 628
                 ; 0000 00A8                 del_ms = (int)(del_s*1000);
000300 940e 0fda 	CALL SUBOPT_0x9
                 ; 0000 00A9 
                 ; 0000 00AA                 v_buff = 0;
                 ; 0000 00AB                 a_buff = -MOTOR_CONT_ANGULAR_MAX_SPEED;
                +
000302 e0e0     +LDI R30 , LOW ( 0xBFC00000 )
000303 e0f0     +LDI R31 , HIGH ( 0xBFC00000 )
000304 ec60     +LDI R22 , BYTE3 ( 0xBFC00000 )
000305 eb7f     +LDI R23 , BYTE4 ( 0xBFC00000 )
                 	__GETD1N 0xBFC00000
                 _0x19:
                +
000306 01de     +MOVW R26 , R28
000307 58a0     +SUBI R26 , LOW ( - 640 )
000308 4fbd     +SBCI R27 , HIGH ( - 640 )
000309 93ed     +ST X + , R30
00030a 93fd     +ST X + , R31
00030b 936d     +ST X + , R22
00030c 937c     +ST X , R23
                 	__PUTD1SX 640
                 ; 0000 00AC             }
                 ; 0000 00AD 
                 ; 0000 00AE 
                 ; 0000 00AF             // v_buff = (float)velocity/1000;
                 ; 0000 00B0             // a_buff = (float)angularV/1000;
                 ; 0000 00B1             TIMER0_TIME_print = 0;
00030d e0e0      	LDI  R30,LOW(0)
                +
00030e 01de     +MOVW R26 , R28
00030f 5eac     +SUBI R26 , LOW ( - 532 )
000310 4fbd     +SBCI R27 , HIGH ( - 532 )
000311 93ed     +ST X + , R30
000312 93ed     +ST X + , R30
000313 93ed     +ST X + , R30
000314 93ec     +ST X , R30
                 	__CLRD1SX 532
                 ; 0000 00B2             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000315 01fe      	MOVW R30,R28
000316 58e4      	SUBI R30,LOW(-(636))
000317 4ffd      	SBCI R31,HIGH(-(636))
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
00031a 01fe      	MOVW R30,R28
00031b 57ee      	SUBI R30,LOW(-(642))
00031c 4ffd      	SBCI R31,HIGH(-(642))
00031d 93fa      	ST   -Y,R31
00031e 93ea      	ST   -Y,R30
00031f b7ed      	IN   R30,SPL
000320 b7fe      	IN   R31,SPH
000321 9731      	SBIW R30,1
000322 93fa      	ST   -Y,R31
000323 93ea      	ST   -Y,R30
000324 935f      	PUSH R21
000325 934f      	PUSH R20
000326 01fe      	MOVW R30,R28
000327 58e0      	SUBI R30,LOW(-(640))
000328 4ffd      	SBCI R31,HIGH(-(640))
000329 93fa      	ST   -Y,R31
00032a 93ea      	ST   -Y,R30
00032b 940e 07bd 	CALL _Make_MSPEED
00032d 914f      	POP  R20
00032e 915f      	POP  R21
                 ; 0000 00B3 
                 ; 0000 00B4             oper_Disapath(velocity_R, velocity_L);
00032f 935a      	ST   -Y,R21
000330 934a      	ST   -Y,R20
                +
000331 01fe     +MOVW R30 , R28
000332 58e4     +SUBI R30 , LOW ( - 636 )
000333 4ffd     +SBCI R31 , HIGH ( - 636 )
000334 9001     +LD R0 , Z +
000335 81f0     +LD R31 , Z
000336 2de0     +MOV R30 , R0
                 	__GETW1SX 636
000337 93fa      	ST   -Y,R31
000338 93ea      	ST   -Y,R30
000339 940e 0839 	CALL _oper_Disapath
                 ; 0000 00B5 
                 ; 0000 00B6             TIMER1_TIME = 0;
00033b e0e0      	LDI  R30,LOW(0)
                +
00033c 01de     +MOVW R26 , R28
00033d 5ea4     +SUBI R26 , LOW ( - 540 )
00033e 4fbd     +SBCI R27 , HIGH ( - 540 )
00033f 93ed     +ST X + , R30
000340 93ed     +ST X + , R30
000341 93ed     +ST X + , R30
000342 93ec     +ST X , R30
                 	__CLRD1SX 540
                 ; 0000 00B7             TIMER1_OVERFLOW = 0;
000343 940e 0ff8 	CALL SUBOPT_0xA
                 ; 0000 00B8             TCNT1L = 0;
000345 bdec      	OUT  0x2C,R30
                 ; 0000 00B9 
                 ; 0000 00BA             STOP_FLAG = 1;
000346 e0e1      	LDI  R30,LOW(1)
                +
000347 01de     +MOVW R26 , R28
000348 5eae     +SUBI R26 , LOW ( - 530 )
000349 4fbd     +SBCI R27 , HIGH ( - 530 )
00034a 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00BB             CHECK_GETS = 0;
00034b e0e0      	LDI  R30,LOW(0)
00034c 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0000 00BC             UCSR1B |=(1<<RXEN1);
00034e 91e0 009a 	LDS  R30,154
000350 61e0      	ORI  R30,0x10
000351 93e0 009a 	STS  154,R30
                 ; 0000 00BD         }
                 ; 0000 00BE 
                 ; 0000 00BF         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
000353 91e0 0500 	LDS  R30,_TIMER1_OVERFLOW
000355 91f0 0501 	LDS  R31,_TIMER1_OVERFLOW+1
000357 9160 0502 	LDS  R22,_TIMER1_OVERFLOW+2
000359 9170 0503 	LDS  R23,_TIMER1_OVERFLOW+3
                +
00035b efaf     +LDI R26 , LOW ( 0xFF )
00035c e0b0     +LDI R27 , HIGH ( 0xFF )
00035d e080     +LDI R24 , BYTE3 ( 0xFF )
00035e e090     +LDI R25 , BYTE4 ( 0xFF )
                 	__GETD2N 0xFF
00035f 940e 1504 	CALL __MULD12
000361 01df      	MOVW R26,R30
000362 01cb      	MOVW R24,R22
000363 b5ec      	IN   R30,0x2C
000364 e0f0      	LDI  R31,0
000365 940e 14d4 	CALL __CWD1
000367 940e 14b8 	CALL __ADDD12
000369 940e 1377 	CALL __CDF1
                +
00036b edae     +LDI R26 , LOW ( 0x3D8E38DE )
00036c e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00036d e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00036e e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00036f 940e 1401 	CALL __MULF12
                +
000371 01de     +MOVW R26 , R28
000372 5ea4     +SUBI R26 , LOW ( - 540 )
000373 4fbd     +SBCI R27 , HIGH ( - 540 )
000374 93ed     +ST X + , R30
000375 93fd     +ST X + , R31
000376 936d     +ST X + , R22
000377 937c     +ST X , R23
                 	__PUTD1SX 540
                 ; 0000 00C0 
                 ; 0000 00C1         if(del_ms<TIMER1_TIME)
                +
000378 01de     +MOVW R26 , R28
000379 58a8     +SUBI R26 , LOW ( - 632 )
00037a 4fbd     +SBCI R27 , HIGH ( - 632 )
00037b 900d     +LD R0 , X +
00037c 91bc     +LD R27 , X
00037d 2da0     +MOV R26 , R0
                 	__GETW2SX 632
00037e 940e 14d9 	CALL __CWD2
000380 940e 15a1 	CALL __CDF2
000382 940e 1494 	CALL __CMPF12
000384 f4e8      	BRSH _0x15
                 ; 0000 00C2         {
                 ; 0000 00C3             oper_Disapath(0,0);
000385 e0e0      	LDI  R30,LOW(0)
000386 e0f0      	LDI  R31,HIGH(0)
000387 93fa      	ST   -Y,R31
000388 93ea      	ST   -Y,R30
000389 93fa      	ST   -Y,R31
00038a 93ea      	ST   -Y,R30
00038b 940e 0839 	CALL _oper_Disapath
                 ; 0000 00C4             TIMER1_OVERFLOW = 0;
00038d 940e 0ff8 	CALL SUBOPT_0xA
                 ; 0000 00C5             v_buff = 0;
                +
00038f 01de     +MOVW R26 , R28
000390 58a4     +SUBI R26 , LOW ( - 636 )
000391 4fbd     +SBCI R27 , HIGH ( - 636 )
000392 93ed     +ST X + , R30
000393 93ed     +ST X + , R30
000394 93ed     +ST X + , R30
000395 93ec     +ST X , R30
                 	__CLRD1SX 636
                 ; 0000 00C6             a_buff = 0;
000396 e0e0      	LDI  R30,LOW(0)
                +
000397 01de     +MOVW R26 , R28
000398 58a0     +SUBI R26 , LOW ( - 640 )
000399 4fbd     +SBCI R27 , HIGH ( - 640 )
00039a 93ed     +ST X + , R30
00039b 93ed     +ST X + , R30
00039c 93ed     +ST X + , R30
00039d 93ec     +ST X , R30
                 	__CLRD1SX 640
                 ; 0000 00C7             STOP_FLAG = 0;
                +
00039e 01de     +MOVW R26 , R28
00039f 5eae     +SUBI R26 , LOW ( - 530 )
0003a0 4fbd     +SBCI R27 , HIGH ( - 530 )
0003a1 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00C8         }
                 ; 0000 00C9         // if(goal_currentV_R==0 && goal_currentV_L==0) TIMER0_TIME_print = 0;
                 ; 0000 00CA 
                 ; 0000 00CB         delay_ms(5);
                 _0x15:
0003a2 940e 1002 	CALL SUBOPT_0xB
                 ; 0000 00CC         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
0003a4 e0e1      	LDI  R30,LOW(1)
0003a5 940e 1005 	CALL SUBOPT_0xC
                 ; 0000 00CD         delay_ms(5);
                 ; 0000 00CE         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
0003a7 940e 100f 	CALL SUBOPT_0xD
0003a9 01fe      	MOVW R30,R28
0003aa 5ae3      	SUBI R30,LOW(-(605))
0003ab 4ffd      	SBCI R31,HIGH(-(605))
0003ac 93fa      	ST   -Y,R31
0003ad 93ea      	ST   -Y,R30
0003ae 940e 0857 	CALL _get_RPM
                +
0003b0 01de     +MOVW R26 , R28
0003b1 59aa     +SUBI R26 , LOW ( - 614 )
0003b2 4fbd     +SBCI R27 , HIGH ( - 614 )
0003b3 93ed     +ST X + , R30
0003b4 93fc     +ST X , R31
                 	__PUTW1SX 614
                 ; 0000 00CF         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0003b5 e0e2      	LDI  R30,LOW(2)
0003b6 940e 1005 	CALL SUBOPT_0xC
                 ; 0000 00D0         delay_ms(5);
                 ; 0000 00D1         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
0003b8 940e 100f 	CALL SUBOPT_0xD
0003ba 01fe      	MOVW R30,R28
0003bb 5ae5      	SUBI R30,LOW(-(603))
0003bc 4ffd      	SBCI R31,HIGH(-(603))
0003bd 93fa      	ST   -Y,R31
0003be 93ea      	ST   -Y,R30
0003bf 940e 0857 	CALL _get_RPM
0003c1 940e 14bd 	CALL __ANEGW1
                +
0003c3 01de     +MOVW R26 , R28
0003c4 59ac     +SUBI R26 , LOW ( - 612 )
0003c5 4fbd     +SBCI R27 , HIGH ( - 612 )
0003c6 93ed     +ST X + , R30
0003c7 93fc     +ST X , R31
                 	__PUTW1SX 612
                 ; 0000 00D2 
                 ; 0000 00D3         currentV_R = (float)(currentRPM_R/(60/(0.4)*Gearratio));
                +
0003c8 01fe     +MOVW R30 , R28
0003c9 59ea     +SUBI R30 , LOW ( - 614 )
0003ca 4ffd     +SBCI R31 , HIGH ( - 614 )
0003cb 9001     +LD R0 , Z +
0003cc 81f0     +LD R31 , Z
0003cd 2de0     +MOV R30 , R0
                 	__GETW1SX 614
0003ce 940e 1017 	CALL SUBOPT_0xE
                +
0003d0 01de     +MOVW R26 , R28
0003d1 5aa0     +SUBI R26 , LOW ( - 608 )
0003d2 4fbd     +SBCI R27 , HIGH ( - 608 )
0003d3 93ed     +ST X + , R30
0003d4 93fd     +ST X + , R31
0003d5 936d     +ST X + , R22
0003d6 937c     +ST X , R23
                 	__PUTD1SX 608
                 ; 0000 00D4         currentV_L = (float)(currentRPM_L/(60/(0.4)*Gearratio));
                +
0003d7 01fe     +MOVW R30 , R28
0003d8 59ec     +SUBI R30 , LOW ( - 612 )
0003d9 4ffd     +SBCI R31 , HIGH ( - 612 )
0003da 9001     +LD R0 , Z +
0003db 81f0     +LD R31 , Z
0003dc 2de0     +MOV R30 , R0
                 	__GETW1SX 612
0003dd 940e 1017 	CALL SUBOPT_0xE
                +
0003df 01de     +MOVW R26 , R28
0003e0 5aa4     +SUBI R26 , LOW ( - 604 )
0003e1 4fbd     +SBCI R27 , HIGH ( - 604 )
0003e2 93ed     +ST X + , R30
0003e3 93fd     +ST X + , R31
0003e4 936d     +ST X + , R22
0003e5 937c     +ST X , R23
                 	__PUTD1SX 604
                 ; 0000 00D5 
                 ; 0000 00D6         goal_currentV_R = (float)(goal_current_R/(60/(0.4)*Gearratio));
                +
0003e6 01fe     +MOVW R30 , R28
0003e7 5ae6     +SUBI R30 , LOW ( - 602 )
0003e8 4ffd     +SBCI R31 , HIGH ( - 602 )
0003e9 9001     +LD R0 , Z +
0003ea 81f0     +LD R31 , Z
0003eb 2de0     +MOV R30 , R0
                 	__GETW1SX 602
0003ec 940e 1017 	CALL SUBOPT_0xE
                +
0003ee 01de     +MOVW R26 , R28
0003ef 5aac     +SUBI R26 , LOW ( - 596 )
0003f0 4fbd     +SBCI R27 , HIGH ( - 596 )
0003f1 93ed     +ST X + , R30
0003f2 93fd     +ST X + , R31
0003f3 936d     +ST X + , R22
0003f4 937c     +ST X , R23
                 	__PUTD1SX 596
                 ; 0000 00D7         goal_currentV_L = (float)(-goal_current_L/(60/(0.4)*Gearratio));
                +
0003f5 01fe     +MOVW R30 , R28
0003f6 5ae8     +SUBI R30 , LOW ( - 600 )
0003f7 4ffd     +SBCI R31 , HIGH ( - 600 )
0003f8 9001     +LD R0 , Z +
0003f9 81f0     +LD R31 , Z
0003fa 2de0     +MOV R30 , R0
                 	__GETW1SX 600
0003fb 940e 14bd 	CALL __ANEGW1
0003fd 940e 1017 	CALL SUBOPT_0xE
                +
0003ff 01de     +MOVW R26 , R28
000400 5ba0     +SUBI R26 , LOW ( - 592 )
000401 4fbd     +SBCI R27 , HIGH ( - 592 )
000402 93ed     +ST X + , R30
000403 93fd     +ST X + , R31
000404 936d     +ST X + , R22
000405 937c     +ST X , R23
                 	__PUTD1SX 592
                 ; 0000 00D8 
                 ; 0000 00D9         d_velocity = (currentV_R + currentV_L)/2;
                +
000406 01fe     +MOVW R30 , R28
000407 5ae4     +SUBI R30 , LOW ( - 604 )
000408 4ffd     +SBCI R31 , HIGH ( - 604 )
000409 9001     +LD R0 , Z +
00040a 9011     +LD R1 , Z +
00040b 9161     +LD R22 , Z +
00040c 8170     +LD R23 , Z
00040d 01f0     +MOVW R30 , R0
                 	__GETD1SX 604
                +
00040e 01de     +MOVW R26 , R28
00040f 5aa0     +SUBI R26 , LOW ( - 608 )
000410 4fbd     +SBCI R27 , HIGH ( - 608 )
000411 900d     +LD R0 , X +
000412 901d     +LD R1 , X +
000413 918d     +LD R24 , X +
000414 919c     +LD R25 , X
000415 01d0     +MOVW R26 , R0
                 	__GETD2SX 608
000416 940e 1024 	CALL SUBOPT_0xF
                +
000418 01de     +MOVW R26 , R28
000419 5ba4     +SUBI R26 , LOW ( - 588 )
00041a 4fbd     +SBCI R27 , HIGH ( - 588 )
00041b 93ed     +ST X + , R30
00041c 93fd     +ST X + , R31
00041d 936d     +ST X + , R22
00041e 937c     +ST X , R23
                 	__PUTD1SX 588
                 ; 0000 00DA         d_angularV = (currentV_R-currentV_L)/Length;
                +
00041f 01de     +MOVW R26 , R28
000420 5aa4     +SUBI R26 , LOW ( - 604 )
000421 4fbd     +SBCI R27 , HIGH ( - 604 )
000422 900d     +LD R0 , X +
000423 901d     +LD R1 , X +
000424 918d     +LD R24 , X +
000425 919c     +LD R25 , X
000426 01d0     +MOVW R26 , R0
                 	__GETD2SX 604
                +
000427 01fe     +MOVW R30 , R28
000428 5ae0     +SUBI R30 , LOW ( - 608 )
000429 4ffd     +SBCI R31 , HIGH ( - 608 )
00042a 9001     +LD R0 , Z +
00042b 9011     +LD R1 , Z +
00042c 9161     +LD R22 , Z +
00042d 8170     +LD R23 , Z
00042e 01f0     +MOVW R30 , R0
                 	__GETD1SX 608
00042f 940e 102f 	CALL SUBOPT_0x10
                +
000431 01de     +MOVW R26 , R28
000432 5ba8     +SUBI R26 , LOW ( - 584 )
000433 4fbd     +SBCI R27 , HIGH ( - 584 )
000434 93ed     +ST X + , R30
000435 93fd     +ST X + , R31
000436 936d     +ST X + , R22
000437 937c     +ST X , R23
                 	__PUTD1SX 584
                 ; 0000 00DB         g_velocity = (goal_currentV_R+goal_currentV_L)/2;
                +
000438 01fe     +MOVW R30 , R28
000439 5be0     +SUBI R30 , LOW ( - 592 )
00043a 4ffd     +SBCI R31 , HIGH ( - 592 )
00043b 9001     +LD R0 , Z +
00043c 9011     +LD R1 , Z +
00043d 9161     +LD R22 , Z +
00043e 8170     +LD R23 , Z
00043f 01f0     +MOVW R30 , R0
                 	__GETD1SX 592
                +
000440 01de     +MOVW R26 , R28
000441 5aac     +SUBI R26 , LOW ( - 596 )
000442 4fbd     +SBCI R27 , HIGH ( - 596 )
000443 900d     +LD R0 , X +
000444 901d     +LD R1 , X +
000445 918d     +LD R24 , X +
000446 919c     +LD R25 , X
000447 01d0     +MOVW R26 , R0
                 	__GETD2SX 596
000448 940e 1024 	CALL SUBOPT_0xF
                +
00044a 01de     +MOVW R26 , R28
00044b 5ca0     +SUBI R26 , LOW ( - 576 )
00044c 4fbd     +SBCI R27 , HIGH ( - 576 )
00044d 93ed     +ST X + , R30
00044e 93fd     +ST X + , R31
00044f 936d     +ST X + , R22
000450 937c     +ST X , R23
                 	__PUTD1SX 576
                 ; 0000 00DC         g_angularV = (goal_currentV_R-goal_currentV_L)/Length;
                +
000451 01de     +MOVW R26 , R28
000452 5ba0     +SUBI R26 , LOW ( - 592 )
000453 4fbd     +SBCI R27 , HIGH ( - 592 )
000454 900d     +LD R0 , X +
000455 901d     +LD R1 , X +
000456 918d     +LD R24 , X +
000457 919c     +LD R25 , X
000458 01d0     +MOVW R26 , R0
                 	__GETD2SX 592
                +
000459 01fe     +MOVW R30 , R28
00045a 5aec     +SUBI R30 , LOW ( - 596 )
00045b 4ffd     +SBCI R31 , HIGH ( - 596 )
00045c 9001     +LD R0 , Z +
00045d 9011     +LD R1 , Z +
00045e 9161     +LD R22 , Z +
00045f 8170     +LD R23 , Z
000460 01f0     +MOVW R30 , R0
                 	__GETD1SX 596
000461 940e 102f 	CALL SUBOPT_0x10
                +
000463 01de     +MOVW R26 , R28
000464 5ca4     +SUBI R26 , LOW ( - 572 )
000465 4fbd     +SBCI R27 , HIGH ( - 572 )
000466 93ed     +ST X + , R30
000467 93fd     +ST X + , R31
000468 936d     +ST X + , R22
000469 937c     +ST X , R23
                 	__PUTD1SX 572
                 ; 0000 00DD 
                 ; 0000 00DE         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
00046a 91a0 056a 	LDS  R26,_TIMER0_OVERFLOW
00046c 91b0 056b 	LDS  R27,_TIMER0_OVERFLOW+1
00046e efef      	LDI  R30,LOW(255)
00046f 940e 14fe 	CALL __MULB1W2U
000471 01df      	MOVW R26,R30
000472 b7e2      	IN   R30,0x32
000473 940e 103a 	CALL SUBOPT_0x11
000475 2766      	CLR  R22
000476 2777      	CLR  R23
000477 940e 1377 	CALL __CDF1
                +
000479 eaae     +LDI R26 , LOW ( 0x3891A2AE )
00047a eab2     +LDI R27 , HIGH ( 0x3891A2AE )
00047b e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
00047c e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
00047d 940e 1401 	CALL __MULF12
                +
00047f 01de     +MOVW R26 , R28
000480 5bac     +SUBI R26 , LOW ( - 580 )
000481 4fbd     +SBCI R27 , HIGH ( - 580 )
000482 93ed     +ST X + , R30
000483 93fd     +ST X + , R31
000484 936d     +ST X + , R22
000485 937c     +ST X , R23
                 	__PUTD1SX 580
                 ; 0000 00DF         TIMER0_OVERFLOW = 0;
000486 940e 0f85 	CALL SUBOPT_0x1
                 ; 0000 00E0         TCNT0 = 0;
                 ; 0000 00E1 
                 ; 0000 00E2         d_angular += control_time*d_angularV;
                +
000488 01fe     +MOVW R30 , R28
000489 5be8     +SUBI R30 , LOW ( - 584 )
00048a 4ffd     +SBCI R31 , HIGH ( - 584 )
00048b 9001     +LD R0 , Z +
00048c 9011     +LD R1 , Z +
00048d 9161     +LD R22 , Z +
00048e 8170     +LD R23 , Z
00048f 01f0     +MOVW R30 , R0
                 	__GETD1SX 584
000490 940e 103e 	CALL SUBOPT_0x12
000492 940e 1049 	CALL SUBOPT_0x13
000494 940e 13b1 	CALL __ADDF12
                +
000496 01de     +MOVW R26 , R28
000497 5da0     +SUBI R26 , LOW ( - 560 )
000498 4fbd     +SBCI R27 , HIGH ( - 560 )
000499 93ed     +ST X + , R30
00049a 93fd     +ST X + , R31
00049b 936d     +ST X + , R22
00049c 937c     +ST X , R23
                 	__PUTD1SX 560
                 ; 0000 00E3         d_x += d_velocity*control_time*cos(d_angular);
00049d 940e 1052 	CALL SUBOPT_0x14
00049f 937f      	PUSH R23
0004a0 936f      	PUSH R22
0004a1 93ff      	PUSH R31
0004a2 93ef      	PUSH R30
0004a3 940e 1065 	CALL SUBOPT_0x15
0004a5 940e 0e98 	CALL _cos
0004a7 91af      	POP  R26
0004a8 91bf      	POP  R27
0004a9 918f      	POP  R24
0004aa 919f      	POP  R25
0004ab 940e 1401 	CALL __MULF12
                +
0004ad 01de     +MOVW R26 , R28
0004ae 5ca8     +SUBI R26 , LOW ( - 568 )
0004af 4fbd     +SBCI R27 , HIGH ( - 568 )
0004b0 900d     +LD R0 , X +
0004b1 901d     +LD R1 , X +
0004b2 918d     +LD R24 , X +
0004b3 919c     +LD R25 , X
0004b4 01d0     +MOVW R26 , R0
                 	__GETD2SX 568
0004b5 940e 13b1 	CALL __ADDF12
                +
0004b7 01de     +MOVW R26 , R28
0004b8 5ca8     +SUBI R26 , LOW ( - 568 )
0004b9 4fbd     +SBCI R27 , HIGH ( - 568 )
0004ba 93ed     +ST X + , R30
0004bb 93fd     +ST X + , R31
0004bc 936d     +ST X + , R22
0004bd 937c     +ST X , R23
                 	__PUTD1SX 568
                 ; 0000 00E4         d_y += d_velocity*control_time*sin(d_angular);
0004be 940e 1052 	CALL SUBOPT_0x14
0004c0 937f      	PUSH R23
0004c1 936f      	PUSH R22
0004c2 93ff      	PUSH R31
0004c3 93ef      	PUSH R30
0004c4 940e 1065 	CALL SUBOPT_0x15
0004c6 940e 0e11 	CALL _sin
0004c8 91af      	POP  R26
0004c9 91bf      	POP  R27
0004ca 918f      	POP  R24
0004cb 919f      	POP  R25
0004cc 940e 1401 	CALL __MULF12
                +
0004ce 01de     +MOVW R26 , R28
0004cf 5cac     +SUBI R26 , LOW ( - 564 )
0004d0 4fbd     +SBCI R27 , HIGH ( - 564 )
0004d1 900d     +LD R0 , X +
0004d2 901d     +LD R1 , X +
0004d3 918d     +LD R24 , X +
0004d4 919c     +LD R25 , X
0004d5 01d0     +MOVW R26 , R0
                 	__GETD2SX 564
0004d6 940e 13b1 	CALL __ADDF12
                +
0004d8 01de     +MOVW R26 , R28
0004d9 5cac     +SUBI R26 , LOW ( - 564 )
0004da 4fbd     +SBCI R27 , HIGH ( - 564 )
0004db 93ed     +ST X + , R30
0004dc 93fd     +ST X + , R31
0004dd 936d     +ST X + , R22
0004de 937c     +ST X , R23
                 	__PUTD1SX 564
                 ; 0000 00E5         d_angular_circula = (int)(d_angular*Circular);
0004df 940e 1049 	CALL SUBOPT_0x13
0004e1 940e 1070 	CALL SUBOPT_0x16
                +
0004e3 01de     +MOVW R26 , R28
0004e4 5da2     +SUBI R26 , LOW ( - 558 )
0004e5 4fbd     +SBCI R27 , HIGH ( - 558 )
0004e6 93ed     +ST X + , R30
0004e7 93fc     +ST X , R31
                 	__PUTW1SX 558
                 ; 0000 00E6 
                 ; 0000 00E7         g_angular += control_time*g_angularV;
                +
0004e8 01fe     +MOVW R30 , R28
0004e9 5ce4     +SUBI R30 , LOW ( - 572 )
0004ea 4ffd     +SBCI R31 , HIGH ( - 572 )
0004eb 9001     +LD R0 , Z +
0004ec 9011     +LD R1 , Z +
0004ed 9161     +LD R22 , Z +
0004ee 8170     +LD R23 , Z
0004ef 01f0     +MOVW R30 , R0
                 	__GETD1SX 572
0004f0 940e 103e 	CALL SUBOPT_0x12
0004f2 940e 1079 	CALL SUBOPT_0x17
0004f4 940e 13b1 	CALL __ADDF12
                +
0004f6 01de     +MOVW R26 , R28
0004f7 5dae     +SUBI R26 , LOW ( - 546 )
0004f8 4fbd     +SBCI R27 , HIGH ( - 546 )
0004f9 93ed     +ST X + , R30
0004fa 93fd     +ST X + , R31
0004fb 936d     +ST X + , R22
0004fc 937c     +ST X , R23
                 	__PUTD1SX 546
                 ; 0000 00E8         g_x += g_velocity*control_time*cos(g_angular);
0004fd 940e 1082 	CALL SUBOPT_0x18
0004ff 937f      	PUSH R23
000500 936f      	PUSH R22
000501 93ff      	PUSH R31
000502 93ef      	PUSH R30
000503 940e 1095 	CALL SUBOPT_0x19
000505 940e 0e98 	CALL _cos
000507 91af      	POP  R26
000508 91bf      	POP  R27
000509 918f      	POP  R24
00050a 919f      	POP  R25
00050b 940e 1401 	CALL __MULF12
                +
00050d 01de     +MOVW R26 , R28
00050e 5da6     +SUBI R26 , LOW ( - 554 )
00050f 4fbd     +SBCI R27 , HIGH ( - 554 )
000510 900d     +LD R0 , X +
000511 901d     +LD R1 , X +
000512 918d     +LD R24 , X +
000513 919c     +LD R25 , X
000514 01d0     +MOVW R26 , R0
                 	__GETD2SX 554
000515 940e 13b1 	CALL __ADDF12
                +
000517 01de     +MOVW R26 , R28
000518 5da6     +SUBI R26 , LOW ( - 554 )
000519 4fbd     +SBCI R27 , HIGH ( - 554 )
00051a 93ed     +ST X + , R30
00051b 93fd     +ST X + , R31
00051c 936d     +ST X + , R22
00051d 937c     +ST X , R23
                 	__PUTD1SX 554
                 ; 0000 00E9         g_y += g_velocity*control_time*sin(g_angular);
00051e 940e 1082 	CALL SUBOPT_0x18
000520 937f      	PUSH R23
000521 936f      	PUSH R22
000522 93ff      	PUSH R31
000523 93ef      	PUSH R30
000524 940e 1095 	CALL SUBOPT_0x19
000526 940e 0e11 	CALL _sin
000528 91af      	POP  R26
000529 91bf      	POP  R27
00052a 918f      	POP  R24
00052b 919f      	POP  R25
00052c 940e 1401 	CALL __MULF12
                +
00052e 01de     +MOVW R26 , R28
00052f 5daa     +SUBI R26 , LOW ( - 550 )
000530 4fbd     +SBCI R27 , HIGH ( - 550 )
000531 900d     +LD R0 , X +
000532 901d     +LD R1 , X +
000533 918d     +LD R24 , X +
000534 919c     +LD R25 , X
000535 01d0     +MOVW R26 , R0
                 	__GETD2SX 550
000536 940e 13b1 	CALL __ADDF12
                +
000538 01de     +MOVW R26 , R28
000539 5daa     +SUBI R26 , LOW ( - 550 )
00053a 4fbd     +SBCI R27 , HIGH ( - 550 )
00053b 93ed     +ST X + , R30
00053c 93fd     +ST X + , R31
00053d 936d     +ST X + , R22
00053e 937c     +ST X , R23
                 	__PUTD1SX 550
                 ; 0000 00EA         g_angular_circula = (int)(g_angular*Circular);
00053f 940e 1079 	CALL SUBOPT_0x17
000541 940e 1070 	CALL SUBOPT_0x16
                +
000543 01de     +MOVW R26 , R28
000544 5ea0     +SUBI R26 , LOW ( - 544 )
000545 4fbd     +SBCI R27 , HIGH ( - 544 )
000546 93ed     +ST X + , R30
000547 93fc     +ST X , R31
                 	__PUTW1SX 544
                 ; 0000 00EB 
                 ; 0000 00EC         // motorR_distance = (float)(MOTORR_HALL*0.1325*Pi/160);
                 ; 0000 00ED         // motorL_distance = (float)(MOTORL_HALL*0.1325*Pi/160);
                 ; 0000 00EE         motorR_distance = (float)(MOTORR_HALL*0.4/160);
000548 91e0 0582 	LDS  R30,_MOTORR_HALL
00054a 91f0 0583 	LDS  R31,_MOTORR_HALL+1
00054c 9160 0584 	LDS  R22,_MOTORR_HALL+2
00054e 9170 0585 	LDS  R23,_MOTORR_HALL+3
000550 940e 10a0 	CALL SUBOPT_0x1A
                +
000552 01de     +MOVW R26 , R28
000553 50a8     +SUBI R26 , LOW ( - 504 )
000554 4fbe     +SBCI R27 , HIGH ( - 504 )
000555 93ed     +ST X + , R30
000556 93fd     +ST X + , R31
000557 936d     +ST X + , R22
000558 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 00EF         motorL_distance = (float)(MOTORL_HALL*0.4/160);
000559 91e0 0586 	LDS  R30,_MOTORL_HALL
00055b 91f0 0587 	LDS  R31,_MOTORL_HALL+1
00055d 9160 0588 	LDS  R22,_MOTORL_HALL+2
00055f 9170 0589 	LDS  R23,_MOTORL_HALL+3
000561 940e 10a0 	CALL SUBOPT_0x1A
                +
000563 01de     +MOVW R26 , R28
000564 50ac     +SUBI R26 , LOW ( - 500 )
000565 4fbe     +SBCI R27 , HIGH ( - 500 )
000566 93ed     +ST X + , R30
000567 93fd     +ST X + , R31
000568 936d     +ST X + , R22
000569 937c     +ST X , R23
                 	__PUTD1SX 500
                 ; 0000 00F0 
                 ; 0000 00F1         TIMER0_TIME += control_time;
                +
00056a 01fe     +MOVW R30 , R28
00056b 5bec     +SUBI R30 , LOW ( - 580 )
00056c 4ffd     +SBCI R31 , HIGH ( - 580 )
00056d 9001     +LD R0 , Z +
00056e 9011     +LD R1 , Z +
00056f 9161     +LD R22 , Z +
000570 8170     +LD R23 , Z
000571 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
000572 940e 10b1 	CALL SUBOPT_0x1B
000574 940e 13b1 	CALL __ADDF12
                +
000576 01de     +MOVW R26 , R28
000577 5ea8     +SUBI R26 , LOW ( - 536 )
000578 4fbd     +SBCI R27 , HIGH ( - 536 )
000579 93ed     +ST X + , R30
00057a 93fd     +ST X + , R31
00057b 936d     +ST X + , R22
00057c 937c     +ST X , R23
                 	__PUTD1SX 536
                 ; 0000 00F2         if(TIMER0_TIME>0.05){
00057d 940e 10b1 	CALL SUBOPT_0x1B
                +
00057f eced     +LDI R30 , LOW ( 0x3D4CCCCD )
000580 ecfc     +LDI R31 , HIGH ( 0x3D4CCCCD )
000581 e46c     +LDI R22 , BYTE3 ( 0x3D4CCCCD )
000582 e37d     +LDI R23 , BYTE4 ( 0x3D4CCCCD )
                 	__GETD1N 0x3D4CCCCD
000583 940e 1494 	CALL __CMPF12
000585 f009      	BREQ PC+2
000586 f410      	BRCC PC+3
000587 940c 0671 	JMP  _0x16
                 ; 0000 00F3             TIMER0_TIME_print += TIMER0_TIME;
000589 940e 10ba 	CALL SUBOPT_0x1C
                +
00058b 01de     +MOVW R26 , R28
00058c 5eac     +SUBI R26 , LOW ( - 532 )
00058d 4fbd     +SBCI R27 , HIGH ( - 532 )
00058e 900d     +LD R0 , X +
00058f 901d     +LD R1 , X +
000590 918d     +LD R24 , X +
000591 919c     +LD R25 , X
000592 01d0     +MOVW R26 , R0
                 	__GETD2SX 532
000593 940e 13b1 	CALL __ADDF12
                +
000595 01de     +MOVW R26 , R28
000596 5eac     +SUBI R26 , LOW ( - 532 )
000597 4fbd     +SBCI R27 , HIGH ( - 532 )
000598 93ed     +ST X + , R30
000599 93fd     +ST X + , R31
00059a 936d     +ST X + , R22
00059b 937c     +ST X , R23
                 	__PUTD1SX 532
                 ; 0000 00F4             MOTORR_HALL = 0;
00059c e0e0      	LDI  R30,LOW(0)
00059d 93e0 0582 	STS  _MOTORR_HALL,R30
00059f 93e0 0583 	STS  _MOTORR_HALL+1,R30
0005a1 93e0 0584 	STS  _MOTORR_HALL+2,R30
0005a3 93e0 0585 	STS  _MOTORR_HALL+3,R30
                 ; 0000 00F5             MOTORL_HALL = 0;
0005a5 93e0 0586 	STS  _MOTORL_HALL,R30
0005a7 93e0 0587 	STS  _MOTORL_HALL+1,R30
0005a9 93e0 0588 	STS  _MOTORL_HALL+2,R30
0005ab 93e0 0589 	STS  _MOTORL_HALL+3,R30
                 ; 0000 00F6 
                 ; 0000 00F7             hall_velocity = (float)((motorR_distance+motorL_distance)/(2*TIMER0_TIME));
0005ad 940e 10c3 	CALL SUBOPT_0x1D
0005af 940e 13b1 	CALL __ADDF12
0005b1 937f      	PUSH R23
0005b2 936f      	PUSH R22
0005b3 93ff      	PUSH R31
0005b4 93ef      	PUSH R30
0005b5 940e 10ba 	CALL SUBOPT_0x1C
                +
0005b7 e0a0     +LDI R26 , LOW ( 0x40000000 )
0005b8 e0b0     +LDI R27 , HIGH ( 0x40000000 )
0005b9 e080     +LDI R24 , BYTE3 ( 0x40000000 )
0005ba e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
0005bb 940e 1401 	CALL __MULF12
0005bd 91af      	POP  R26
0005be 91bf      	POP  R27
0005bf 918f      	POP  R24
0005c0 919f      	POP  R25
0005c1 940e 144f 	CALL __DIVF21
                +
0005c3 01de     +MOVW R26 , R28
0005c4 50a0     +SUBI R26 , LOW ( - 512 )
0005c5 4fbe     +SBCI R27 , HIGH ( - 512 )
0005c6 93ed     +ST X + , R30
0005c7 93fd     +ST X + , R31
0005c8 936d     +ST X + , R22
0005c9 937c     +ST X , R23
                 	__PUTD1SX 512
                 ; 0000 00F8             hall_angularV = (float)((motorR_distance-motorL_distance)/(Length*TIMER0_TIME));
0005ca 940e 10d4 	CALL SUBOPT_0x1E
0005cc 940e 13aa 	CALL __SUBF12
0005ce 937f      	PUSH R23
0005cf 936f      	PUSH R22
0005d0 93ff      	PUSH R31
0005d1 93ef      	PUSH R30
0005d2 940e 10ba 	CALL SUBOPT_0x1C
0005d4 940e 10e5 	CALL SUBOPT_0x1F
0005d6 91af      	POP  R26
0005d7 91bf      	POP  R27
0005d8 918f      	POP  R24
0005d9 919f      	POP  R25
0005da 940e 144f 	CALL __DIVF21
                +
0005dc 01de     +MOVW R26 , R28
0005dd 50a4     +SUBI R26 , LOW ( - 508 )
0005de 4fbe     +SBCI R27 , HIGH ( - 508 )
0005df 93ed     +ST X + , R30
0005e0 93fd     +ST X + , R31
0005e1 936d     +ST X + , R22
0005e2 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 00F9             hall_angular += (float)((motorR_distance-motorL_distance)/Length);
0005e3 940e 10d4 	CALL SUBOPT_0x1E
0005e5 940e 102f 	CALL SUBOPT_0x10
0005e7 940e 10ec 	CALL SUBOPT_0x20
0005e9 940e 13b1 	CALL __ADDF12
                +
0005eb 01de     +MOVW R26 , R28
0005ec 5faa     +SUBI R26 , LOW ( - 518 )
0005ed 4fbd     +SBCI R27 , HIGH ( - 518 )
0005ee 93ed     +ST X + , R30
0005ef 93fd     +ST X + , R31
0005f0 936d     +ST X + , R22
0005f1 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 00FA             hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
0005f2 940e 10c3 	CALL SUBOPT_0x1D
0005f4 940e 1024 	CALL SUBOPT_0xF
0005f6 937f      	PUSH R23
0005f7 936f      	PUSH R22
0005f8 93ff      	PUSH R31
0005f9 93ef      	PUSH R30
0005fa 940e 10f5 	CALL SUBOPT_0x21
0005fc 940e 0e98 	CALL _cos
0005fe 91af      	POP  R26
0005ff 91bf      	POP  R27
000600 918f      	POP  R24
000601 919f      	POP  R25
000602 940e 1401 	CALL __MULF12
                +
000604 01de     +MOVW R26 , R28
000605 5fa2     +SUBI R26 , LOW ( - 526 )
000606 4fbd     +SBCI R27 , HIGH ( - 526 )
000607 900d     +LD R0 , X +
000608 901d     +LD R1 , X +
000609 918d     +LD R24 , X +
00060a 919c     +LD R25 , X
00060b 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
00060c 940e 13b1 	CALL __ADDF12
                +
00060e 01de     +MOVW R26 , R28
00060f 5fa2     +SUBI R26 , LOW ( - 526 )
000610 4fbd     +SBCI R27 , HIGH ( - 526 )
000611 93ed     +ST X + , R30
000612 93fd     +ST X + , R31
000613 936d     +ST X + , R22
000614 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 00FB             hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
000615 940e 10c3 	CALL SUBOPT_0x1D
000617 940e 1024 	CALL SUBOPT_0xF
000619 937f      	PUSH R23
00061a 936f      	PUSH R22
00061b 93ff      	PUSH R31
00061c 93ef      	PUSH R30
00061d 940e 10f5 	CALL SUBOPT_0x21
00061f 940e 0e11 	CALL _sin
000621 91af      	POP  R26
000622 91bf      	POP  R27
000623 918f      	POP  R24
000624 919f      	POP  R25
000625 940e 1401 	CALL __MULF12
                +
000627 01de     +MOVW R26 , R28
000628 5fa6     +SUBI R26 , LOW ( - 522 )
000629 4fbd     +SBCI R27 , HIGH ( - 522 )
00062a 900d     +LD R0 , X +
00062b 901d     +LD R1 , X +
00062c 918d     +LD R24 , X +
00062d 919c     +LD R25 , X
00062e 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
00062f 940e 13b1 	CALL __ADDF12
                +
000631 01de     +MOVW R26 , R28
000632 5fa6     +SUBI R26 , LOW ( - 522 )
000633 4fbd     +SBCI R27 , HIGH ( - 522 )
000634 93ed     +ST X + , R30
000635 93fd     +ST X + , R31
000636 936d     +ST X + , R22
000637 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 00FC             hall_angular_circula = (int)(hall_angular*Circular);
000638 940e 10ec 	CALL SUBOPT_0x20
00063a 940e 1070 	CALL SUBOPT_0x16
                +
00063c 01de     +MOVW R26 , R28
00063d 5fac     +SUBI R26 , LOW ( - 516 )
00063e 4fbd     +SBCI R27 , HIGH ( - 516 )
00063f 93ed     +ST X + , R30
000640 93fc     +ST X , R31
                 	__PUTW1SX 516
                 ; 0000 00FD             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 00FE             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 00FF             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 0100             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d, %d\n", TIMER0_TIME_print, d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 0101             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d, %.3f\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula, TIMER0_TIME_print);
                 ; 0000 0102             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f \n",TIMER0_TIME_print, g_velocity, d_velocity, hall_velocity);
                 ; 0000 0103             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d\n",TIMER0_TIME_print,g_velocity, hall_velocity, g_x, hall_x, del_ms);
                 ; 0000 0104             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n",TIMER0_TIME_print,g_velocity, d_velocity, hall_velocity,);
                 ; 0000 0105             sprintf(BUFF, "%.3f, %.d, %d, %d\n", TIMER0_TIME_print, g_angular_circula, hall_angular_circula,d__angular);
000641 01fe      	MOVW R30,R28
000642 93fa      	ST   -Y,R31
000643 93ea      	ST   -Y,R30
                +
000644 e1e8     +LDI R30 , LOW ( 2 * _0x0 + ( 16 ) )
000645 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW1FN _0x0,16
000646 93fa      	ST   -Y,R31
000647 93ea      	ST   -Y,R30
000648 940e 10ba 	CALL SUBOPT_0x1C
00064a 940e 159a 	CALL __PUTPARD1
                +
00064c 01fe     +MOVW R30 , R28
00064d 5de8     +SUBI R30 , LOW ( - 552 )
00064e 4ffd     +SBCI R31 , HIGH ( - 552 )
00064f 9001     +LD R0 , Z +
000650 81f0     +LD R31 , Z
000651 2de0     +MOV R30 , R0
                 	__GETW1SX 552
000652 940e 1100 	CALL SUBOPT_0x22
                +
000654 01fe     +MOVW R30 , R28
000655 5fe0     +SUBI R30 , LOW ( - 528 )
000656 4ffd     +SBCI R31 , HIGH ( - 528 )
000657 9001     +LD R0 , Z +
000658 81f0     +LD R31 , Z
000659 2de0     +MOV R30 , R0
                 	__GETW1SX 528
00065a 940e 1100 	CALL SUBOPT_0x22
00065c 940e 0f8c 	CALL SUBOPT_0x2
00065e 940e 1100 	CALL SUBOPT_0x22
000660 e180      	LDI  R24,16
000661 940e 0c07 	CALL _sprintf
000663 9664      	ADIW R28,20
                 ; 0000 0106             // sprintf(BUFF, "%.3f, %.3f\n", TIMER0_TIME_print, hall_x);
                 ; 0000 0107 
                 ; 0000 0108             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 0109             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 010A             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 010B             //                                                   d_velocity, g_velocity, d_x, g_x, TIMER0_TIME_print);
                 ; 0000 010C             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 010D             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -_buff);
                 ; 0000 010E             puts_USART1(BUFF);
000664 01fe      	MOVW R30,R28
000665 93fa      	ST   -Y,R31
000666 93ea      	ST   -Y,R30
000667 940e 0748 	CALL _puts_USART1
                 ; 0000 010F             TIMER0_TIME = 0;
000669 e0e0      	LDI  R30,LOW(0)
                +
00066a 01de     +MOVW R26 , R28
00066b 5ea8     +SUBI R26 , LOW ( - 536 )
00066c 4fbd     +SBCI R27 , HIGH ( - 536 )
00066d 93ed     +ST X + , R30
00066e 93ed     +ST X + , R30
00066f 93ed     +ST X + , R30
000670 93ec     +ST X , R30
                 	__CLRD1SX 536
                 ; 0000 0110         }
                 ; 0000 0111     }
                 _0x16:
000671 cbdc      	RJMP _0xA
                 ; 0000 0112 }
                 _0x17:
000672 cfff      	RJMP _0x17
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
000673 93ea      	ST   -Y,R30
000674 b7ef      	IN   R30,SREG
000675 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
000676 91e0 0504 	LDS  R30,_TIMER2_OVERFLOW
000678 5fef      	SUBI R30,-LOW(1)
000679 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
00067b 91e9      	LD   R30,Y+
00067c bfef      	OUT  SREG,R30
00067d 91e9      	LD   R30,Y+
00067e 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
00067f 93aa      	ST   -Y,R26
000680 93ba      	ST   -Y,R27
000681 93ea      	ST   -Y,R30
000682 93fa      	ST   -Y,R31
000683 b7ef      	IN   R30,SREG
000684 93ea      	ST   -Y,R30
                 ; 0001 0010     TIMER0_OVERFLOW++;
000685 e6aa      	LDI  R26,LOW(_TIMER0_OVERFLOW)
000686 e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
000687 940e 1105 	CALL SUBOPT_0x23
                 ; 0001 0011 }
000689 91e9      	LD   R30,Y+
00068a bfef      	OUT  SREG,R30
00068b 91f9      	LD   R31,Y+
00068c 91e9      	LD   R30,Y+
00068d 91b9      	LD   R27,Y+
00068e 91a9      	LD   R26,Y+
00068f 9518      	RETI
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
000690 940e 110b 	CALL SUBOPT_0x24
                 ; 0001 0016     TIMER1_OVERFLOW++;
000692 e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
000693 e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
000694 940e 1114 	CALL SUBOPT_0x25
                 ; 0001 0017     TCNT1H = 0x00;
000696 e0e0      	LDI  R30,LOW(0)
000697 bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
000698 bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
000699 91e9      	LD   R30,Y+
00069a bfef      	OUT  SREG,R30
00069b 91f9      	LD   R31,Y+
00069c 91e9      	LD   R30,Y+
00069d 91b9      	LD   R27,Y+
00069e 91a9      	LD   R26,Y+
00069f 9179      	LD   R23,Y+
0006a0 9169      	LD   R22,Y+
0006a1 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0006a2 e0ed      	LDI  R30,LOW(13)
0006a3 bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
0006a4 e2e8      	LDI  R30,LOW(40)
0006a5 bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0006a6 e8e2      	LDI  R30,LOW(130)
0006a7 c010      	RJMP _0x20A0010
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0006a8 e0e7      	LDI  R30,LOW(7)
0006a9 bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0006aa e8e1      	LDI  R30,LOW(129)
0006ab c00c      	RJMP _0x20A0010
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0006ac e1ed      	LDI  R30,LOW(29)
0006ad bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
0006ae efef      	LDI  R30,LOW(255)
0006af e0f0      	LDI  R31,HIGH(255)
0006b0 bdf9      	OUT  0x28+1,R31
0006b1 bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
0006b2 ebe0      	LDI  R30,LOW(1200)
0006b3 e0f4      	LDI  R31,HIGH(1200)
0006b4 bdf7      	OUT  0x26+1,R31
0006b5 bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
0006b6 b7e7      	IN   R30,0x37
0006b7 60e8      	ORI  R30,8
                 _0x20A0010:
0006b8 bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
0006b9 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
0006ba 93aa      	ST   -Y,R26
0006bb 93ba      	ST   -Y,R27
0006bc 93ea      	ST   -Y,R30
0006bd b7ef      	IN   R30,SREG
0006be 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
0006bf b5e4      	IN   R30,0x24
0006c0 31e9      	CPI  R30,LOW(0x19)
0006c1 f420      	BRSH _0x40004
0006c2 91a0 0504 	LDS  R26,_TIMER2_OVERFLOW
0006c4 30a0      	CPI  R26,LOW(0x0)
0006c5 f021      	BREQ _0x40006
                 _0x40004:
0006c6 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
0006c8 30a0      	CPI  R26,LOW(0x0)
0006c9 f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
0006ca 940e 111d 	CALL SUBOPT_0x26
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
0006cc c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
0006cd e0e0      	LDI  R30,LOW(0)
0006ce 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
0006d0 940e 111d 	CALL SUBOPT_0x26
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
0006d2 e0e0      	LDI  R30,LOW(0)
0006d3 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
0006d5 91e9      	LD   R30,Y+
0006d6 bfef      	OUT  SREG,R30
0006d7 91e9      	LD   R30,Y+
0006d8 91b9      	LD   R27,Y+
0006d9 91a9      	LD   R26,Y+
0006da 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
0006db 93aa      	ST   -Y,R26
0006dc 93ea      	ST   -Y,R30
0006dd 93fa      	ST   -Y,R31
0006de b7ef      	IN   R30,SREG
0006df 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
0006e0 931a      	ST   -Y,R17
                 ;	i -> R17
0006e1 e010      	LDI  R17,0
0006e2 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
0006e4 331c      	CPI  R17,60
0006e5 f421      	BRNE _0x4000A
0006e6 91a0 0581 	LDS  R26,_CHECK_GETS
0006e8 30a0      	CPI  R26,LOW(0x0)
0006e9 f009      	BREQ _0x4000B
                 _0x4000A:
0006ea c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
0006eb 9bc3      	SBIS 0x18,3
0006ec c002      	RJMP _0x4000C
0006ed 98c3      	CBI  0x18,3
0006ee c001      	RJMP _0x4000D
                 _0x4000C:
0006ef 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
0006f0 e0e0      	LDI  R30,LOW(0)
0006f1 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
0006f3 c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
0006f4 331e      	CPI  R17,62
0006f5 f421      	BRNE _0x40010
0006f6 91a0 0581 	LDS  R26,_CHECK_GETS
0006f8 30a0      	CPI  R26,LOW(0x0)
0006f9 f009      	BREQ _0x40011
                 _0x40010:
0006fa c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
0006fb 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
0006fd 940e 112c 	CALL SUBOPT_0x27
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
0006ff e0e1      	LDI  R30,LOW(1)
000700 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
000702 c008      	RJMP _0x40012
                 _0x4000F:
000703 91e0 0581 	LDS  R30,_CHECK_GETS
000705 30e0      	CPI  R30,0
000706 f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
000707 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000709 940e 112c 	CALL SUBOPT_0x27
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
00070b 9119      	LD   R17,Y+
00070c 91e9      	LD   R30,Y+
00070d bfef      	OUT  SREG,R30
00070e 91f9      	LD   R31,Y+
00070f 91e9      	LD   R30,Y+
000710 91a9      	LD   R26,Y+
000711 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
000712 e0e0      	LDI  R30,LOW(0)
000713 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
000715 e9e8      	LDI  R30,LOW(152)
000716 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
000718 e0e6      	LDI  R30,LOW(6)
000719 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
00071b 91e0 009d 	LDS  R30,157
00071d 7bef      	ANDI R30,0xBF
00071e 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
000720 81e8      	LD   R30,Y
000721 81f9      	LDD  R31,Y+1
000722 940e 14c9 	CALL __ASRW8
000724 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
000726 81e8      	LD   R30,Y
000727 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
000729 c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
00072a e0e0      	LDI  R30,LOW(0)
00072b b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
00072c e9e8      	LDI  R30,LOW(152)
00072d b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
00072e e0e6      	LDI  R30,LOW(6)
00072f 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
000731 91e0 0095 	LDS  R30,149
000733 7bef      	ANDI R30,0xBF
000734 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
000736 81e8      	LD   R30,Y
000737 81f9      	LDD  R31,Y+1
000738 940e 14c9 	CALL __ASRW8
00073a 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
00073c 81e8      	LD   R30,Y
00073d b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000F:
00073e 9622      	ADIW R28,2
00073f 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
000740 91e0 009b 	LDS  R30,155
000742 72e0      	ANDI R30,LOW(0x20)
000743 f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
000744 81e8      	LD   R30,Y
000745 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
000747 c023      	RJMP _0x20A000E
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
000748 931a      	ST   -Y,R17
000749 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
00074a e010      	LDI  R17,0
00074b e000      	LDI  R16,0
00074c e010      	LDI  R17,LOW(0)
                 _0x40018:
00074d 940e 1136 	CALL SUBOPT_0x28
00074f 30e0      	CPI  R30,0
000750 f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
000751 940e 1136 	CALL SUBOPT_0x28
000753 93ea      	ST   -Y,R30
000754 dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
000755 5f1f      	SUBI R17,-1
000756 cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
000757 e000      	LDI  R16,LOW(0)
                 _0x4001B:
000758 1701      	CP   R16,R17
000759 f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
00075a 81aa      	LDD  R26,Y+2
00075b 81bb      	LDD  R27,Y+2+1
00075c 9611      	ADIW R26,1
00075d 83aa      	STD  Y+2,R26
00075e 83bb      	STD  Y+2+1,R27
00075f 9711      	SBIW R26,1
000760 e0e0      	LDI  R30,LOW(0)
000761 93ec      	ST   X,R30
                 ; 0002 0054     }
000762 5f0f      	SUBI R16,-1
000763 cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
000764 8119      	LDD  R17,Y+1
000765 8108      	LDD  R16,Y+0
000766 c0ee      	RJMP _0x20A000C
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
000767 9b5d      	SBIS 0xB,5
000768 cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
000769 81e8      	LD   R30,Y
00076a b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000E:
00076b 9621      	ADIW R28,1
00076c 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
00076d 940e 15b9 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00076f ef2f     +LDI R18 , LOW ( - 1 )
000770 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
000771 81ee      	LDD  R30,Y+6
000772 81ff      	LDD  R31,Y+6+1
000773 9731      	SBIW R30,1
000774 83ee      	STD  Y+6,R30
000775 83ff      	STD  Y+6+1,R31
000776 9631      	ADIW R30,1
000777 f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
000778 85a8      	LDD  R26,Y+8
000779 85b9      	LDD  R27,Y+8+1
00077a 91ed      	LD   R30,X+
00077b 87a8      	STD  Y+8,R26
00077c 87b9      	STD  Y+8+1,R27
00077d e0f0      	LDI  R31,0
                +
00077e 272e     +EOR R18 , R30
00077f 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
000780 e000     +LDI R16 , LOW ( 0 )
000781 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
000782 3008     +CPI R16 , LOW ( 8 )
000783 e0e0     +LDI R30 , HIGH ( 8 )
000784 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000785 f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
000786 01f9      	MOVW R30,R18
000787 70e1      	ANDI R30,LOW(0x1)
000788 70f0      	ANDI R31,HIGH(0x1)
000789 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
00078a 9536      	LSR  R19
00078b 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
00078c 2e04      	MOV  R0,R20
00078d 2a05      	OR   R0,R21
00078e f021      	BREQ _0x4002D
00078f e0e1      	LDI  R30,LOW(40961)
000790 eaf0      	LDI  R31,HIGH(40961)
                +
000791 272e     +EOR R18 , R30
000792 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
000793 5f0f     +SUBI R16 , LOW ( - 1 )
000794 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000795 cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
000796 cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
000797 01f9      	MOVW R30,R18
000798 940e 15c0 	CALL __LOADLOCR6
00079a 962a      	ADIW R28,10
00079b 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
00079c 940e 113d 	CALL SUBOPT_0x29
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 0083     protocol[1]=0x06;
00079e e0e6      	LDI  R30,LOW(6)
00079f 940e 1145 	CALL SUBOPT_0x2A
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 0088     protocol[6]=0;
                 ; 0002 0089     protocol[7]=0;
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                 _0x4002F:
                +
0007a1 3028     +CPI R18 , LOW ( 8 )
0007a2 e0e0     +LDI R30 , HIGH ( 8 )
0007a3 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0007a4 f42c      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
0007a5 940e 1168 	CALL SUBOPT_0x2B
                 ; 0002 0094     }
                +
0007a7 5f2f     +SUBI R18 , LOW ( - 1 )
0007a8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0007a9 cff7      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
0007aa c00e      	RJMP _0x20A000D
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 _RTU_ReedOperate0:
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
0007ab 940e 113d 	CALL SUBOPT_0x29
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
0007ad e0e4      	LDI  R30,LOW(4)
0007ae 940e 1145 	CALL SUBOPT_0x2A
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 _0x40032:
                +
0007b0 3028     +CPI R18 , LOW ( 8 )
0007b1 e0e0     +LDI R30 , HIGH ( 8 )
0007b2 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0007b3 f42c      	BRGE _0x40033
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
0007b4 940e 1168 	CALL SUBOPT_0x2B
                 ; 0002 00B0     }
                +
0007b6 5f2f     +SUBI R18 , LOW ( - 1 )
0007b7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0007b8 cff7      	RJMP _0x40032
                 _0x40033:
                 ; 0002 00B1 }
                 _0x20A000D:
0007b9 940e 15c2 	CALL __LOADLOCR4
0007bb 9661      	ADIW R28,17
0007bc 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
0007bd 9728      	SBIW R28,8
0007be 940e 1170 	CALL SUBOPT_0x2C
0007c0 e0e0      	LDI  R30,LOW(0)
0007c1 83ea      	STD  Y+2,R30
0007c2 83eb      	STD  Y+3,R30
0007c3 83ec      	STD  Y+4,R30
0007c4 83ed      	STD  Y+5,R30
0007c5 83ee      	STD  Y+6,R30
0007c6 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
0007c7 940e 1174 	CALL SUBOPT_0x2D
0007c9 2377      	TST  R23
0007ca f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
0007cb 940e 1179 	CALL SUBOPT_0x2E
0007cd 940e 130b 	CALL __ANEGF1
0007cf 85ac      	LDD  R26,Y+12
0007d0 85bd      	LDD  R27,Y+12+1
0007d1 940e 157f 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
0007d3 940e 1174 	CALL SUBOPT_0x2D
0007d5 937f      	PUSH R23
0007d6 936f      	PUSH R22
0007d7 93ff      	PUSH R31
0007d8 93ef      	PUSH R30
0007d9 940e 1179 	CALL SUBOPT_0x2E
0007db 940e 10e5 	CALL SUBOPT_0x1F
0007dd 940e 117e 	CALL SUBOPT_0x2F
0007df 91af      	POP  R26
0007e0 91bf      	POP  R27
0007e1 918f      	POP  R24
0007e2 919f      	POP  R25
0007e3 940e 13b1 	CALL __ADDF12
0007e5 940e 1187 	CALL SUBOPT_0x30
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
0007e7 940e 1174 	CALL SUBOPT_0x2D
0007e9 937f      	PUSH R23
0007ea 936f      	PUSH R22
0007eb 93ff      	PUSH R31
0007ec 93ef      	PUSH R30
0007ed 940e 1179 	CALL SUBOPT_0x2E
0007ef 940e 10e5 	CALL SUBOPT_0x1F
0007f1 940e 117e 	CALL SUBOPT_0x2F
0007f3 91af      	POP  R26
0007f4 91bf      	POP  R27
0007f5 918f      	POP  R24
0007f6 919f      	POP  R25
0007f7 940e 0f9e 	CALL SUBOPT_0x4
0007f9 940e 1593 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(VelocityR*(60/(0.4)*Gearratio));
0007fb 940e 118c 	CALL SUBOPT_0x31
0007fd 940e 1191 	CALL SUBOPT_0x32
0007ff 85aa      	LDD  R26,Y+10
000800 85bb      	LDD  R27,Y+10+1
000801 93ed      	ST   X+,R30
000802 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(VelocityL*(60/(0.4)*Gearratio));
000803 940e 158e 	CALL __GETD2S0
000805 940e 1191 	CALL SUBOPT_0x32
000807 85a8      	LDD  R26,Y+8
000808 85b9      	LDD  R27,Y+8+1
000809 93ed      	ST   X+,R30
00080a 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
00080b 85aa      	LDD  R26,Y+10
00080c 85bb      	LDD  R27,Y+10+1
00080d 940e 1570 	CALL __GETW1P
00080f 32ec      	CPI  R30,LOW(0x12C)
000810 e0a1      	LDI  R26,HIGH(0x12C)
000811 07fa      	CPC  R31,R26
000812 f434      	BRGE _0x40036
000813 01df      	MOVW R26,R30
000814 ede4      	LDI  R30,LOW(65236)
000815 effe      	LDI  R31,HIGH(65236)
000816 17ea      	CP   R30,R26
000817 07fb      	CPC  R31,R27
000818 f00c      	BRLT _0x40037
                 _0x40036:
000819 c014      	RJMP _0x40038
                 _0x40037:
00081a 85a8      	LDD  R26,Y+8
00081b 85b9      	LDD  R27,Y+8+1
00081c 940e 1570 	CALL __GETW1P
00081e 32ec      	CPI  R30,LOW(0x12C)
00081f e0a1      	LDI  R26,HIGH(0x12C)
000820 07fa      	CPC  R31,R26
000821 f454      	BRGE _0x40039
000822 85a8      	LDD  R26,Y+8
000823 85b9      	LDD  R27,Y+8+1
000824 940e 1570 	CALL __GETW1P
000826 01df      	MOVW R26,R30
000827 ede4      	LDI  R30,LOW(65236)
000828 effe      	LDI  R31,HIGH(65236)
000829 17ea      	CP   R30,R26
00082a 07fb      	CPC  R31,R27
00082b f00c      	BRLT _0x4003A
                 _0x40039:
00082c c001      	RJMP _0x40038
                 _0x4003A:
00082d c001      	RJMP _0x4003B
                 _0x40038:
00082e c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
00082f 85aa      	LDD  R26,Y+10
000830 85bb      	LDD  R27,Y+10+1
000831 940e 119a 	CALL SUBOPT_0x33
                 ; 0002 00C4         *L_RPM = 0;
000833 85a8      	LDD  R26,Y+8
000834 85b9      	LDD  R27,Y+8+1
000835 940e 119a 	CALL SUBOPT_0x33
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
000837 940c 09e9 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
000839 e0e1      	LDI  R30,LOW(1)
00083a 93ea      	ST   -Y,R30
00083b e7e9      	LDI  R30,LOW(121)
00083c e0f0      	LDI  R31,HIGH(121)
00083d 93fa      	ST   -Y,R31
00083e 93ea      	ST   -Y,R30
00083f 81ed      	LDD  R30,Y+5
000840 81fe      	LDD  R31,Y+5+1
000841 940e 119f 	CALL SUBOPT_0x34
                 ; 0002 00CB     delay_ms(5);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
000843 e0e2      	LDI  R30,LOW(2)
000844 93ea      	ST   -Y,R30
000845 e7e9      	LDI  R30,LOW(121)
000846 e0f0      	LDI  R31,HIGH(121)
000847 93fa      	ST   -Y,R31
000848 93ea      	ST   -Y,R30
000849 81eb      	LDD  R30,Y+3
00084a 81fc      	LDD  R31,Y+3+1
00084b 940e 14bd 	CALL __ANEGW1
00084d 940e 119f 	CALL SUBOPT_0x34
                 ; 0002 00CE     delay_ms(5);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00084f e0e1      	LDI  R30,LOW(1)
000850 940e 11a4 	CALL SUBOPT_0x35
                 ; 0002 00D1     delay_ms(5);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
000852 e0e2      	LDI  R30,LOW(2)
000853 940e 11a4 	CALL SUBOPT_0x35
                 ; 0002 00D4     delay_ms(5);
                 ; 0002 00D5 }
                 _0x20A000C:
000855 9624      	ADIW R28,4
000856 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 _get_RPM:
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
000857 940e 15bb 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
000859 e010      	LDI  R17,0
                +
00085a e020     +LDI R18 , LOW ( 0 )
00085b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00085c 91a0 0506+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
00085e 30a7      	CPI  R26,LOW(0x7)
00085f f149      	BREQ _0x4003C
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
000860 91b0 050a+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
000862 e0a0      	LDI  R26,LOW(0)
                +
000863 91e0 050b+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
000865 940e 103a 	CALL SUBOPT_0x11
000867 019f      	MOVW R18,R30
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
000868 91b0 0508+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
00086a e0a0      	LDI  R26,LOW(0)
                +
00086b 91e0 0509+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
00086d 940e 103a 	CALL SUBOPT_0x11
00086f 81ac      	LDD  R26,Y+4
000870 81bd      	LDD  R27,Y+4+1
000871 93ed      	ST   X+,R30
000872 93fc      	ST   X,R31
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
000873 e010      	LDI  R17,LOW(0)
                 _0x4003E:
000874 81ee      	LDD  R30,Y+6
000875 171e      	CP   R17,R30
000876 f450      	BRSH _0x4003F
000877 2fe1      	MOV  R30,R17
000878 e0f0      	LDI  R31,0
000879 81af      	LDD  R26,Y+7
00087a 85b8      	LDD  R27,Y+7+1
00087b 0fae      	ADD  R26,R30
00087c 1fbf      	ADC  R27,R31
00087d e0e0      	LDI  R30,LOW(0)
00087e 93ec      	ST   X,R30
00087f 5f1f      	SUBI R17,-1
000880 cff3      	RJMP _0x4003E
                 _0x4003F:
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
000881 efef      	LDI  R30,LOW(65535)
000882 efff      	LDI  R31,HIGH(65535)
000883 17e2      	CP   R30,R18
000884 07f3      	CPC  R31,R19
000885 f411      	BRNE _0x40040
                +
000886 e020     +LDI R18 , LOW ( 0 )
000887 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0002 00E1         return RPM;
                 _0x40040:
000888 01f9      	MOVW R30,R18
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 _0x4003C:
                 _0x20A000B:
000889 940e 15c2 	CALL __LOADLOCR4
00088b 9629      	ADIW R28,9
00088c 9508      	RET
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
00088d e5e5      	LDI  R30,LOW(85)
00088e bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
00088f efe0      	LDI  R30,LOW(240)
000890 bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
000891 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
000892 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
000893 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
000894 9817      	CBI  0x2,7
                 ; 0003 000C }
000895 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
000896 940e 11ac 	CALL SUBOPT_0x36
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
000898 f041      	BREQ _0x6000B
000899 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
00089a e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
00089b 940e 1114 	CALL SUBOPT_0x25
00089d 9731      	SBIW R30,1
00089e 4060      	SBCI R22,0
00089f 4070      	SBCI R23,0
                 ; 0003 0011     else MOTORR_HALL--;
0008a0 c002      	RJMP _0x6000C
                 _0x6000B:
0008a1 940e 11b5 	CALL SUBOPT_0x37
                 ; 0003 0012 }
                 _0x6000C:
0008a3 c037      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
0008a4 940e 11ac 	CALL SUBOPT_0x36
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
0008a6 f019      	BREQ _0x6000D
0008a7 940e 11b5 	CALL SUBOPT_0x37
                 ; 0003 0017     else MOTORR_HALL++;
0008a9 c007      	RJMP _0x6000E
                 _0x6000D:
0008aa e8a2      	LDI  R26,LOW(_MOTORR_HALL)
0008ab e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
0008ac 940e 1114 	CALL SUBOPT_0x25
0008ae 9731      	SBIW R30,1
0008af 4060      	SBCI R22,0
0008b0 4070      	SBCI R23,0
                 ; 0003 0018 }
                 _0x6000E:
0008b1 c029      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
0008b2 940e 110b 	CALL SUBOPT_0x24
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
0008b4 e0a0      	LDI  R26,0
0008b5 990e      	SBIC 0x1,6
0008b6 e0a1      	LDI  R26,1
0008b7 e0e0      	LDI  R30,0
0008b8 990f      	SBIC 0x1,7
0008b9 e0e1      	LDI  R30,1
0008ba 17ea      	CP   R30,R26
0008bb f019      	BREQ _0x6000F
0008bc 940e 11c3 	CALL SUBOPT_0x38
                 ; 0003 001D     else MOTORL_HALL++;
0008be c007      	RJMP _0x60010
                 _0x6000F:
0008bf e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0008c0 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0008c1 940e 1114 	CALL SUBOPT_0x25
0008c3 9731      	SBIW R30,1
0008c4 4060      	SBCI R22,0
0008c5 4070      	SBCI R23,0
                 ; 0003 001E }
                 _0x60010:
0008c6 c014      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
0008c7 940e 110b 	CALL SUBOPT_0x24
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
0008c9 e0a0      	LDI  R26,0
0008ca 990f      	SBIC 0x1,7
0008cb e0a1      	LDI  R26,1
0008cc e0e0      	LDI  R30,0
0008cd 990e      	SBIC 0x1,6
0008ce e0e1      	LDI  R30,1
0008cf 17ea      	CP   R30,R26
0008d0 f041      	BREQ _0x60011
0008d1 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0008d2 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0008d3 940e 1114 	CALL SUBOPT_0x25
0008d5 9731      	SBIW R30,1
0008d6 4060      	SBCI R22,0
0008d7 4070      	SBCI R23,0
                 ; 0003 0023     else MOTORL_HALL--;
0008d8 c002      	RJMP _0x60012
                 _0x60011:
0008d9 940e 11c3 	CALL SUBOPT_0x38
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
0008db 91e9      	LD   R30,Y+
0008dc bfef      	OUT  SREG,R30
0008dd 91f9      	LD   R31,Y+
0008de 91e9      	LD   R30,Y+
0008df 91b9      	LD   R27,Y+
0008e0 91a9      	LD   R26,Y+
0008e1 9179      	LD   R23,Y+
0008e2 9169      	LD   R22,Y+
0008e3 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0008e4 931a      	ST   -Y,R17
0008e5 930a      	ST   -Y,R16
0008e6 81aa      	LDD  R26,Y+2
0008e7 81bb      	LDD  R27,Y+2+1
0008e8 9612      	ADIW R26,2
0008e9 940e 1570 	CALL __GETW1P
0008eb 9730      	SBIW R30,0
0008ec f129      	BREQ _0x2000010
0008ed 81aa      	LDD  R26,Y+2
0008ee 81bb      	LDD  R27,Y+2+1
0008ef 9614      	ADIW R26,4
0008f0 940e 1570 	CALL __GETW1P
0008f2 018f      	MOVW R16,R30
0008f3 9730      	SBIW R30,0
0008f4 f061      	BREQ _0x2000012
                +
0008f5 3002     +CPI R16 , LOW ( 2 )
0008f6 e0e0     +LDI R30 , HIGH ( 2 )
0008f7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0008f8 f0c0      	BRLO _0x2000013
0008f9 01f8      	MOVW R30,R16
0008fa 9731      	SBIW R30,1
0008fb 018f      	MOVW R16,R30
                +
0008fc 81aa     +LDD R26 , Y + 2
0008fd 81bb     +LDD R27 , Y + 2 + 1
0008fe 9614     +ADIW R26 , 4
0008ff 93ed     +ST X + , R30
000900 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000901 81aa      	LDD  R26,Y+2
000902 81bb      	LDD  R27,Y+2+1
000903 9612      	ADIW R26,2
000904 940e 1105 	CALL SUBOPT_0x23
000906 9731      	SBIW R30,1
000907 81ac      	LDD  R26,Y+4
000908 83a0      	STD  Z+0,R26
000909 81aa      	LDD  R26,Y+2
00090a 81bb      	LDD  R27,Y+2+1
00090b 940e 1570 	CALL __GETW1P
00090d 23ff      	TST  R31
00090e f012      	BRMI _0x2000014
00090f 940e 1105 	CALL SUBOPT_0x23
                 _0x2000014:
                 _0x2000013:
000911 c006      	RJMP _0x2000015
                 _0x2000010:
000912 81aa      	LDD  R26,Y+2
000913 81bb      	LDD  R27,Y+2+1
000914 efef      	LDI  R30,LOW(65535)
000915 efff      	LDI  R31,HIGH(65535)
000916 93ed      	ST   X+,R30
000917 93fc      	ST   X,R31
                 _0x2000015:
000918 8119      	LDD  R17,Y+1
000919 8108      	LDD  R16,Y+0
00091a c346      	RJMP _0x20A0007
                 __ftoe_G100:
00091b 9724      	SBIW R28,4
00091c 940e 1170 	CALL SUBOPT_0x2C
00091e e8e0      	LDI  R30,LOW(128)
00091f 83ea      	STD  Y+2,R30
000920 e3ef      	LDI  R30,LOW(63)
000921 83eb      	STD  Y+3,R30
000922 940e 15bb 	CALL __SAVELOCR4
000924 85ee      	LDD  R30,Y+14
000925 85ff      	LDD  R31,Y+14+1
000926 3fef      	CPI  R30,LOW(0xFFFF)
000927 efaf      	LDI  R26,HIGH(0xFFFF)
000928 07fa      	CPC  R31,R26
000929 f449      	BRNE _0x2000019
00092a 85e8      	LDD  R30,Y+8
00092b 85f9      	LDD  R31,Y+8+1
00092c 93fa      	ST   -Y,R31
00092d 93ea      	ST   -Y,R30
                +
00092e ebec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00092f e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000930 940e 11d1 	CALL SUBOPT_0x39
000932 c0b4      	RJMP _0x20A0009
                 _0x2000019:
000933 3fef      	CPI  R30,LOW(0x7FFF)
000934 e7af      	LDI  R26,HIGH(0x7FFF)
000935 07fa      	CPC  R31,R26
000936 f449      	BRNE _0x2000018
000937 85e8      	LDD  R30,Y+8
000938 85f9      	LDD  R31,Y+8+1
000939 93fa      	ST   -Y,R31
00093a 93ea      	ST   -Y,R30
                +
00093b ebed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00093c e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00093d 940e 11d1 	CALL SUBOPT_0x39
00093f c0a7      	RJMP _0x20A0009
                 _0x2000018:
000940 85ab      	LDD  R26,Y+11
000941 30a7      	CPI  R26,LOW(0x7)
000942 f010      	BRLO _0x200001B
000943 e0e6      	LDI  R30,LOW(6)
000944 87eb      	STD  Y+11,R30
                 _0x200001B:
000945 851b      	LDD  R17,Y+11
                 _0x200001C:
000946 2fe1      	MOV  R30,R17
000947 5011      	SUBI R17,1
000948 30e0      	CPI  R30,0
000949 f019      	BREQ _0x200001E
00094a 940e 11d5 	CALL SUBOPT_0x3A
00094c cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00094d 85ec     +LDD R30 , Y + 12
00094e 85fd     +LDD R31 , Y + 12 + 1
00094f 856e     +LDD R22 , Y + 12 + 2
000950 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000951 940e 15b1 	CALL __CPD10
000953 f421      	BRNE _0x200001F
000954 e030      	LDI  R19,LOW(0)
000955 940e 11d5 	CALL SUBOPT_0x3A
000957 c02e      	RJMP _0x2000020
                 _0x200001F:
000958 853b      	LDD  R19,Y+11
000959 940e 11dd 	CALL SUBOPT_0x3B
00095b f009      	BREQ PC+2
00095c f410      	BRCC PC+3
00095d 940c 096a 	JMP  _0x2000021
00095f 940e 11d5 	CALL SUBOPT_0x3A
                 _0x2000022:
000961 940e 11dd 	CALL SUBOPT_0x3B
000963 f028      	BRLO _0x2000024
000964 940e 11e8 	CALL SUBOPT_0x3C
000966 940e 11ed 	CALL SUBOPT_0x3D
000968 cff8      	RJMP _0x2000022
                 _0x2000024:
000969 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00096a 940e 11dd 	CALL SUBOPT_0x3B
00096c f440      	BRSH _0x2000028
00096d 940e 11e8 	CALL SUBOPT_0x3C
00096f 940e 11f9 	CALL SUBOPT_0x3E
000971 940e 1200 	CALL SUBOPT_0x3F
000973 5031      	SUBI R19,LOW(1)
000974 cff5      	RJMP _0x2000026
                 _0x2000028:
000975 940e 11d5 	CALL SUBOPT_0x3A
                 _0x2000025:
                +
000977 85ec     +LDD R30 , Y + 12
000978 85fd     +LDD R31 , Y + 12 + 1
000979 856e     +LDD R22 , Y + 12 + 2
00097a 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00097b 940e 1205 	CALL SUBOPT_0x40
00097d 940e 1200 	CALL SUBOPT_0x3F
00097f 940e 11dd 	CALL SUBOPT_0x3B
000981 f020      	BRLO _0x2000029
000982 940e 11e8 	CALL SUBOPT_0x3C
000984 940e 11ed 	CALL SUBOPT_0x3D
                 _0x2000029:
                 _0x2000020:
000986 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000987 85eb      	LDD  R30,Y+11
000988 17e1      	CP   R30,R17
000989 f188      	BRLO _0x200002C
00098a 940e 118c 	CALL SUBOPT_0x31
00098c 940e 120c 	CALL SUBOPT_0x41
00098e 940e 1205 	CALL SUBOPT_0x40
000990 940e 1213 	CALL SUBOPT_0x42
000992 940e 1187 	CALL SUBOPT_0x30
                +
000994 81ec     +LDD R30 , Y + 4
000995 81fd     +LDD R31 , Y + 4 + 1
000996 816e     +LDD R22 , Y + 4 + 2
000997 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000998 940e 11e8 	CALL SUBOPT_0x3C
00099a 940e 144f 	CALL __DIVF21
00099c 940e 133e 	CALL __CFD1U
00099e 2f0e      	MOV  R16,R30
00099f 940e 1217 	CALL SUBOPT_0x43
0009a1 940e 121e 	CALL SUBOPT_0x44
0009a3 27ff      	CLR  R31
0009a4 2766      	CLR  R22
0009a5 2777      	CLR  R23
0009a6 940e 1377 	CALL __CDF1
0009a8 940e 118c 	CALL SUBOPT_0x31
0009aa 940e 1401 	CALL __MULF12
0009ac 940e 11e8 	CALL SUBOPT_0x3C
0009ae 940e 0f9e 	CALL SUBOPT_0x4
0009b0 940e 1200 	CALL SUBOPT_0x3F
0009b2 2fe1      	MOV  R30,R17
0009b3 5f1f      	SUBI R17,-1
0009b4 30e0      	CPI  R30,0
0009b5 f689      	BRNE _0x200002A
0009b6 940e 1217 	CALL SUBOPT_0x43
0009b8 e2ee      	LDI  R30,LOW(46)
0009b9 93ec      	ST   X,R30
0009ba cfcc      	RJMP _0x200002A
                 _0x200002C:
0009bb 940e 1223 	CALL SUBOPT_0x45
0009bd 9731      	SBIW R30,1
0009be 85aa      	LDD  R26,Y+10
0009bf 83a0      	STD  Z+0,R26
0009c0 3030      	CPI  R19,0
0009c1 f42c      	BRGE _0x200002E
0009c2 9531      	NEG  R19
0009c3 85a8      	LDD  R26,Y+8
0009c4 85b9      	LDD  R27,Y+8+1
0009c5 e2ed      	LDI  R30,LOW(45)
0009c6 c003      	RJMP _0x2000111
                 _0x200002E:
0009c7 85a8      	LDD  R26,Y+8
0009c8 85b9      	LDD  R27,Y+8+1
0009c9 e2eb      	LDI  R30,LOW(43)
                 _0x2000111:
0009ca 93ec      	ST   X,R30
0009cb 940e 1223 	CALL SUBOPT_0x45
0009cd 940e 1223 	CALL SUBOPT_0x45
0009cf 9731      	SBIW R30,1
0009d0 01bf      	MOVW R22,R30
0009d1 2fa3      	MOV  R26,R19
0009d2 e0ea      	LDI  R30,LOW(10)
0009d3 940e 1517 	CALL __DIVB21
0009d5 5de0      	SUBI R30,-LOW(48)
0009d6 01db      	MOVW R26,R22
0009d7 93ec      	ST   X,R30
0009d8 940e 1223 	CALL SUBOPT_0x45
0009da 9731      	SBIW R30,1
0009db 01bf      	MOVW R22,R30
0009dc 2fa3      	MOV  R26,R19
0009dd e0ea      	LDI  R30,LOW(10)
0009de 940e 1541 	CALL __MODB21
0009e0 5de0      	SUBI R30,-LOW(48)
0009e1 01db      	MOVW R26,R22
0009e2 93ec      	ST   X,R30
0009e3 85a8      	LDD  R26,Y+8
0009e4 85b9      	LDD  R27,Y+8+1
0009e5 e0e0      	LDI  R30,LOW(0)
0009e6 93ec      	ST   X,R30
                 _0x20A0009:
0009e7 940e 15c2 	CALL __LOADLOCR4
                 _0x20A000A:
0009e9 9660      	ADIW R28,16
0009ea 9508      	RET
                 __print_G100:
0009eb 97ef      	SBIW R28,63
0009ec 9761      	SBIW R28,17
0009ed 940e 15b9 	CALL __SAVELOCR6
0009ef e010      	LDI  R17,0
                +
0009f0 01fe     +MOVW R30 , R28
0009f1 5ae8     +SUBI R30 , LOW ( - 88 )
0009f2 4fff     +SBCI R31 , HIGH ( - 88 )
0009f3 9001     +LD R0 , Z +
0009f4 81f0     +LD R31 , Z
0009f5 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0009f6 87e8      	STD  Y+8,R30
0009f7 87f9      	STD  Y+8+1,R31
                +
0009f8 01fe     +MOVW R30 , R28
0009f9 5aea     +SUBI R30 , LOW ( - 86 )
0009fa 4fff     +SBCI R31 , HIGH ( - 86 )
0009fb 9001     +LD R0 , Z +
0009fc 81f0     +LD R31 , Z
0009fd 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0009fe 83ee      	STD  Y+6,R30
0009ff 83ff      	STD  Y+6+1,R31
000a00 81ae      	LDD  R26,Y+6
000a01 81bf      	LDD  R27,Y+6+1
000a02 940e 119a 	CALL SUBOPT_0x33
                 _0x2000030:
000a04 01de      	MOVW R26,R28
000a05 5aa4      	SUBI R26,LOW(-(92))
000a06 4fbf      	SBCI R27,HIGH(-(92))
000a07 940e 1105 	CALL SUBOPT_0x23
000a09 9731      	SBIW R30,1
000a0a 91e4      	LPM  R30,Z
000a0b 2f2e      	MOV  R18,R30
000a0c 30e0      	CPI  R30,0
000a0d f411      	BRNE PC+3
000a0e 940c 0bfe 	JMP _0x2000032
000a10 2fe1      	MOV  R30,R17
000a11 30e0      	CPI  R30,0
000a12 f439      	BRNE _0x2000036
000a13 3225      	CPI  R18,37
000a14 f411      	BRNE _0x2000037
000a15 e011      	LDI  R17,LOW(1)
000a16 c002      	RJMP _0x2000038
                 _0x2000037:
000a17 940e 1229 	CALL SUBOPT_0x46
                 _0x2000038:
000a19 c1e3      	RJMP _0x2000035
                 _0x2000036:
000a1a 30e1      	CPI  R30,LOW(0x1)
000a1b f4c1      	BRNE _0x2000039
000a1c 3225      	CPI  R18,37
000a1d f419      	BRNE _0x200003A
000a1e 940e 1229 	CALL SUBOPT_0x46
000a20 c1db      	RJMP _0x2000112
                 _0x200003A:
000a21 e012      	LDI  R17,LOW(2)
000a22 e0e0      	LDI  R30,LOW(0)
000a23 8bed      	STD  Y+21,R30
000a24 e000      	LDI  R16,LOW(0)
000a25 322d      	CPI  R18,45
000a26 f411      	BRNE _0x200003B
000a27 e001      	LDI  R16,LOW(1)
000a28 c1d4      	RJMP _0x2000035
                 _0x200003B:
000a29 322b      	CPI  R18,43
000a2a f419      	BRNE _0x200003C
000a2b e2eb      	LDI  R30,LOW(43)
000a2c 8bed      	STD  Y+21,R30
000a2d c1cf      	RJMP _0x2000035
                 _0x200003C:
000a2e 3220      	CPI  R18,32
000a2f f419      	BRNE _0x200003D
000a30 e2e0      	LDI  R30,LOW(32)
000a31 8bed      	STD  Y+21,R30
000a32 c1ca      	RJMP _0x2000035
                 _0x200003D:
000a33 c002      	RJMP _0x200003E
                 _0x2000039:
000a34 30e2      	CPI  R30,LOW(0x2)
000a35 f439      	BRNE _0x200003F
                 _0x200003E:
000a36 e050      	LDI  R21,LOW(0)
000a37 e013      	LDI  R17,LOW(3)
000a38 3320      	CPI  R18,48
000a39 f411      	BRNE _0x2000040
000a3a 6800      	ORI  R16,LOW(128)
000a3b c1c1      	RJMP _0x2000035
                 _0x2000040:
000a3c c002      	RJMP _0x2000041
                 _0x200003F:
000a3d 30e3      	CPI  R30,LOW(0x3)
000a3e f491      	BRNE _0x2000042
                 _0x2000041:
000a3f 3320      	CPI  R18,48
000a40 f010      	BRLO _0x2000044
000a41 332a      	CPI  R18,58
000a42 f008      	BRLO _0x2000045
                 _0x2000044:
000a43 c007      	RJMP _0x2000043
                 _0x2000045:
000a44 e0aa      	LDI  R26,LOW(10)
000a45 9f5a      	MUL  R21,R26
000a46 2d50      	MOV  R21,R0
000a47 2fe2      	MOV  R30,R18
000a48 53e0      	SUBI R30,LOW(48)
000a49 0f5e      	ADD  R21,R30
000a4a c1b2      	RJMP _0x2000035
                 _0x2000043:
000a4b e040      	LDI  R20,LOW(0)
000a4c 322e      	CPI  R18,46
000a4d f411      	BRNE _0x2000046
000a4e e014      	LDI  R17,LOW(4)
000a4f c1ad      	RJMP _0x2000035
                 _0x2000046:
000a50 c00f      	RJMP _0x2000047
                 _0x2000042:
000a51 30e4      	CPI  R30,LOW(0x4)
000a52 f499      	BRNE _0x2000049
000a53 3320      	CPI  R18,48
000a54 f010      	BRLO _0x200004B
000a55 332a      	CPI  R18,58
000a56 f008      	BRLO _0x200004C
                 _0x200004B:
000a57 c008      	RJMP _0x200004A
                 _0x200004C:
000a58 6200      	ORI  R16,LOW(32)
000a59 e0aa      	LDI  R26,LOW(10)
000a5a 9f4a      	MUL  R20,R26
000a5b 2d40      	MOV  R20,R0
000a5c 2fe2      	MOV  R30,R18
000a5d 53e0      	SUBI R30,LOW(48)
000a5e 0f4e      	ADD  R20,R30
000a5f c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000a60 362c      	CPI  R18,108
000a61 f419      	BRNE _0x200004D
000a62 6002      	ORI  R16,LOW(2)
000a63 e015      	LDI  R17,LOW(5)
000a64 c198      	RJMP _0x2000035
                 _0x200004D:
000a65 c004      	RJMP _0x200004E
                 _0x2000049:
000a66 30e5      	CPI  R30,LOW(0x5)
000a67 f011      	BREQ PC+3
000a68 940c 0bfd 	JMP _0x2000035
                 _0x200004E:
000a6a 2fe2      	MOV  R30,R18
000a6b 36e3      	CPI  R30,LOW(0x63)
000a6c f459      	BRNE _0x2000053
000a6d 940e 1232 	CALL SUBOPT_0x47
000a6f 940e 1239 	CALL SUBOPT_0x48
000a71 940e 1232 	CALL SUBOPT_0x47
000a73 81a4      	LDD  R26,Z+4
000a74 93aa      	ST   -Y,R26
000a75 940e 1240 	CALL SUBOPT_0x49
000a77 c184      	RJMP _0x2000054
                 _0x2000053:
000a78 34e5      	CPI  R30,LOW(0x45)
000a79 f011      	BREQ _0x2000057
000a7a 36e5      	CPI  R30,LOW(0x65)
000a7b f409      	BRNE _0x2000058
                 _0x2000057:
000a7c c004      	RJMP _0x2000059
                 _0x2000058:
000a7d 36e6      	CPI  R30,LOW(0x66)
000a7e f011      	BREQ PC+3
000a7f 940c 0acb 	JMP _0x200005A
                 _0x2000059:
000a81 01fe      	MOVW R30,R28
000a82 9676      	ADIW R30,22
000a83 87ee      	STD  Y+14,R30
000a84 87ff      	STD  Y+14+1,R31
000a85 940e 1248 	CALL SUBOPT_0x4A
000a87 940e 1574 	CALL __GETD1P
000a89 940e 124f 	CALL SUBOPT_0x4B
000a8b 940e 1254 	CALL SUBOPT_0x4C
000a8d 85ad      	LDD  R26,Y+13
000a8e 23aa      	TST  R26
000a8f f022      	BRMI _0x200005B
000a90 89ad      	LDD  R26,Y+21
000a91 32ab      	CPI  R26,LOW(0x2B)
000a92 f049      	BREQ _0x200005D
000a93 c017      	RJMP _0x200005E
                 _0x200005B:
000a94 940e 1256 	CALL SUBOPT_0x4D
000a96 940e 130b 	CALL __ANEGF1
000a98 940e 124f 	CALL SUBOPT_0x4B
000a9a e2ed      	LDI  R30,LOW(45)
000a9b 8bed      	STD  Y+21,R30
                 _0x200005D:
000a9c ff07      	SBRS R16,7
000a9d c005      	RJMP _0x200005F
000a9e 89ed      	LDD  R30,Y+21
000a9f 93ea      	ST   -Y,R30
000aa0 940e 1240 	CALL SUBOPT_0x49
000aa2 c008      	RJMP _0x2000060
                 _0x200005F:
000aa3 85ee      	LDD  R30,Y+14
000aa4 85ff      	LDD  R31,Y+14+1
000aa5 9631      	ADIW R30,1
000aa6 87ee      	STD  Y+14,R30
000aa7 87ff      	STD  Y+14+1,R31
000aa8 9731      	SBIW R30,1
000aa9 89ad      	LDD  R26,Y+21
000aaa 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000aab ff05      	SBRS R16,5
000aac e046      	LDI  R20,LOW(6)
000aad 3626      	CPI  R18,102
000aae f461      	BRNE _0x2000062
000aaf 940e 1256 	CALL SUBOPT_0x4D
000ab1 940e 159a 	CALL __PUTPARD1
000ab3 934a      	ST   -Y,R20
000ab4 89eb      	LDD  R30,Y+19
000ab5 89fc      	LDD  R31,Y+19+1
000ab6 93fa      	ST   -Y,R31
000ab7 93ea      	ST   -Y,R30
000ab8 940e 0ee5 	CALL _ftoa
000aba c00b      	RJMP _0x2000063
                 _0x2000062:
000abb 940e 1256 	CALL SUBOPT_0x4D
000abd 940e 159a 	CALL __PUTPARD1
000abf 934a      	ST   -Y,R20
000ac0 932a      	ST   -Y,R18
000ac1 89ec      	LDD  R30,Y+20
000ac2 89fd      	LDD  R31,Y+20+1
000ac3 93fa      	ST   -Y,R31
000ac4 93ea      	ST   -Y,R30
000ac5 de55      	RCALL __ftoe_G100
                 _0x2000063:
000ac6 01fe      	MOVW R30,R28
000ac7 9676      	ADIW R30,22
000ac8 940e 125b 	CALL SUBOPT_0x4E
000aca c01e      	RJMP _0x2000064
                 _0x200005A:
000acb 37e3      	CPI  R30,LOW(0x73)
000acc f439      	BRNE _0x2000066
000acd 940e 1254 	CALL SUBOPT_0x4C
000acf 940e 1263 	CALL SUBOPT_0x4F
000ad1 940e 125b 	CALL SUBOPT_0x4E
000ad3 c00e      	RJMP _0x2000067
                 _0x2000066:
000ad4 37e0      	CPI  R30,LOW(0x70)
000ad5 f4c1      	BRNE _0x2000069
000ad6 940e 1254 	CALL SUBOPT_0x4C
000ad8 940e 1263 	CALL SUBOPT_0x4F
000ada 87ee      	STD  Y+14,R30
000adb 87ff      	STD  Y+14+1,R31
000adc 93fa      	ST   -Y,R31
000add 93ea      	ST   -Y,R30
000ade 940e 0eda 	CALL _strlenf
000ae0 2f1e      	MOV  R17,R30
000ae1 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000ae2 770f      	ANDI R16,LOW(127)
000ae3 3040      	CPI  R20,0
000ae4 f011      	BREQ _0x200006B
000ae5 1741      	CP   R20,R17
000ae6 f008      	BRLO _0x200006C
                 _0x200006B:
000ae7 c001      	RJMP _0x200006A
                 _0x200006C:
000ae8 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000ae9 e040      	LDI  R20,LOW(0)
000aea e0e0      	LDI  R30,LOW(0)
000aeb 8bec      	STD  Y+20,R30
000aec e030      	LDI  R19,LOW(0)
000aed c06e      	RJMP _0x200006D
                 _0x2000069:
000aee 36e4      	CPI  R30,LOW(0x64)
000aef f011      	BREQ _0x2000070
000af0 36e9      	CPI  R30,LOW(0x69)
000af1 f411      	BRNE _0x2000071
                 _0x2000070:
000af2 6004      	ORI  R16,LOW(4)
000af3 c002      	RJMP _0x2000072
                 _0x2000071:
000af4 37e5      	CPI  R30,LOW(0x75)
000af5 f4a1      	BRNE _0x2000073
                 _0x2000072:
000af6 e0ea      	LDI  R30,LOW(10)
000af7 8bec      	STD  Y+20,R30
000af8 ff01      	SBRS R16,1
000af9 c008      	RJMP _0x2000074
                +
000afa e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000afb ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000afc e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000afd e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000afe 940e 1268 	CALL SUBOPT_0x50
000b00 e01a      	LDI  R17,LOW(10)
000b01 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000b02 e1e0     +LDI R30 , LOW ( 0x2710 )
000b03 e2f7     +LDI R31 , HIGH ( 0x2710 )
000b04 e060     +LDI R22 , BYTE3 ( 0x2710 )
000b05 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000b06 940e 1268 	CALL SUBOPT_0x50
000b08 e015      	LDI  R17,LOW(5)
000b09 c01b      	RJMP _0x2000075
                 _0x2000073:
000b0a 35e8      	CPI  R30,LOW(0x58)
000b0b f411      	BRNE _0x2000077
000b0c 6008      	ORI  R16,LOW(8)
000b0d c004      	RJMP _0x2000078
                 _0x2000077:
000b0e 37e8      	CPI  R30,LOW(0x78)
000b0f f011      	BREQ PC+3
000b10 940c 0bfc 	JMP _0x20000B6
                 _0x2000078:
000b12 e1e0      	LDI  R30,LOW(16)
000b13 8bec      	STD  Y+20,R30
000b14 ff01      	SBRS R16,1
000b15 c008      	RJMP _0x200007A
                +
000b16 e0e0     +LDI R30 , LOW ( 0x10000000 )
000b17 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000b18 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000b19 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000b1a 940e 1268 	CALL SUBOPT_0x50
000b1c e018      	LDI  R17,LOW(8)
000b1d c007      	RJMP _0x2000075
                 _0x200007A:
                +
000b1e e0e0     +LDI R30 , LOW ( 0x1000 )
000b1f e1f0     +LDI R31 , HIGH ( 0x1000 )
000b20 e060     +LDI R22 , BYTE3 ( 0x1000 )
000b21 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000b22 940e 1268 	CALL SUBOPT_0x50
000b24 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000b25 3040      	CPI  R20,0
000b26 f011      	BREQ _0x200007B
000b27 770f      	ANDI R16,LOW(127)
000b28 c001      	RJMP _0x200007C
                 _0x200007B:
000b29 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000b2a ff01      	SBRS R16,1
000b2b c008      	RJMP _0x200007D
000b2c 940e 1254 	CALL SUBOPT_0x4C
000b2e 940e 1248 	CALL SUBOPT_0x4A
000b30 9614      	ADIW R26,4
000b31 940e 1574 	CALL __GETD1P
000b33 c00f      	RJMP _0x2000113
                 _0x200007D:
000b34 ff02      	SBRS R16,2
000b35 c007      	RJMP _0x200007F
000b36 940e 1254 	CALL SUBOPT_0x4C
000b38 940e 1263 	CALL SUBOPT_0x4F
000b3a 940e 14d4 	CALL __CWD1
000b3c c006      	RJMP _0x2000113
                 _0x200007F:
000b3d 940e 1254 	CALL SUBOPT_0x4C
000b3f 940e 1263 	CALL SUBOPT_0x4F
000b41 2766      	CLR  R22
000b42 2777      	CLR  R23
                 _0x2000113:
                +
000b43 87ea     +STD Y + 10 , R30
000b44 87fb     +STD Y + 10 + 1 , R31
000b45 876c     +STD Y + 10 + 2 , R22
000b46 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000b47 ff02      	SBRS R16,2
000b48 c012      	RJMP _0x2000081
000b49 85ad      	LDD  R26,Y+13
000b4a 23aa      	TST  R26
000b4b f442      	BRPL _0x2000082
000b4c 940e 1256 	CALL SUBOPT_0x4D
000b4e 940e 14c1 	CALL __ANEGD1
000b50 940e 124f 	CALL SUBOPT_0x4B
000b52 e2ed      	LDI  R30,LOW(45)
000b53 8bed      	STD  Y+21,R30
                 _0x2000082:
000b54 89ed      	LDD  R30,Y+21
000b55 30e0      	CPI  R30,0
000b56 f019      	BREQ _0x2000083
000b57 5f1f      	SUBI R17,-LOW(1)
000b58 5f4f      	SUBI R20,-LOW(1)
000b59 c001      	RJMP _0x2000084
                 _0x2000083:
000b5a 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000b5b 2f34      	MOV  R19,R20
                 _0x200006D:
000b5c fd00      	SBRC R16,0
000b5d c014      	RJMP _0x2000085
                 _0x2000086:
000b5e 1715      	CP   R17,R21
000b5f f410      	BRSH _0x2000089
000b60 1735      	CP   R19,R21
000b61 f008      	BRLO _0x200008A
                 _0x2000089:
000b62 c00f      	RJMP _0x2000088
                 _0x200008A:
000b63 ff07      	SBRS R16,7
000b64 c008      	RJMP _0x200008B
000b65 ff02      	SBRS R16,2
000b66 c004      	RJMP _0x200008C
000b67 7f0b      	ANDI R16,LOW(251)
000b68 892d      	LDD  R18,Y+21
000b69 5011      	SUBI R17,LOW(1)
000b6a c001      	RJMP _0x200008D
                 _0x200008C:
000b6b e320      	LDI  R18,LOW(48)
                 _0x200008D:
000b6c c001      	RJMP _0x200008E
                 _0x200008B:
000b6d e220      	LDI  R18,LOW(32)
                 _0x200008E:
000b6e 940e 1229 	CALL SUBOPT_0x46
000b70 5051      	SUBI R21,LOW(1)
000b71 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000b72 1714      	CP   R17,R20
000b73 f490      	BRSH _0x2000091
000b74 6100      	ORI  R16,LOW(16)
000b75 ff02      	SBRS R16,2
000b76 c006      	RJMP _0x2000092
000b77 940e 126d 	CALL SUBOPT_0x51
000b79 f009      	BREQ _0x2000093
000b7a 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000b7b 5011      	SUBI R17,LOW(1)
000b7c 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000b7d e3e0      	LDI  R30,LOW(48)
000b7e 93ea      	ST   -Y,R30
000b7f 940e 1240 	CALL SUBOPT_0x49
000b81 3050      	CPI  R21,0
000b82 f009      	BREQ _0x2000094
000b83 5051      	SUBI R21,LOW(1)
                 _0x2000094:
000b84 5041      	SUBI R20,LOW(1)
000b85 cfec      	RJMP _0x200008F
                 _0x2000091:
000b86 2f31      	MOV  R19,R17
000b87 89ec      	LDD  R30,Y+20
000b88 30e0      	CPI  R30,0
000b89 f4b9      	BRNE _0x2000095
                 _0x2000096:
000b8a 3030      	CPI  R19,0
000b8b f0a1      	BREQ _0x2000098
000b8c ff03      	SBRS R16,3
000b8d c006      	RJMP _0x2000099
000b8e 85ee      	LDD  R30,Y+14
000b8f 85ff      	LDD  R31,Y+14+1
000b90 9125      	LPM  R18,Z+
000b91 87ee      	STD  Y+14,R30
000b92 87ff      	STD  Y+14+1,R31
000b93 c005      	RJMP _0x200009A
                 _0x2000099:
000b94 85ae      	LDD  R26,Y+14
000b95 85bf      	LDD  R27,Y+14+1
000b96 912d      	LD   R18,X+
000b97 87ae      	STD  Y+14,R26
000b98 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000b99 940e 1229 	CALL SUBOPT_0x46
000b9b 3050      	CPI  R21,0
000b9c f009      	BREQ _0x200009B
000b9d 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000b9e 5031      	SUBI R19,LOW(1)
000b9f cfea      	RJMP _0x2000096
                 _0x2000098:
000ba0 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000ba1 940e 1281 	CALL SUBOPT_0x52
000ba3 940e 151c 	CALL __DIVD21U
000ba5 2f2e      	MOV  R18,R30
000ba6 302a      	CPI  R18,10
000ba7 f030      	BRLO _0x20000A0
000ba8 ff03      	SBRS R16,3
000ba9 c002      	RJMP _0x20000A1
000baa 5c29      	SUBI R18,-LOW(55)
000bab c001      	RJMP _0x20000A2
                 _0x20000A1:
000bac 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000bad c001      	RJMP _0x20000A3
                 _0x20000A0:
000bae 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000baf fd04      	SBRC R16,4
000bb0 c021      	RJMP _0x20000A5
000bb1 3321      	CPI  R18,49
000bb2 f460      	BRSH _0x20000A7
                +
000bb3 89a8     +LDD R26 , Y + 16
000bb4 89b9     +LDD R27 , Y + 16 + 1
000bb5 898a     +LDD R24 , Y + 16 + 2
000bb6 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000bb7 30a1     +CPI R26 , LOW ( 0x1 )
000bb8 e0e0     +LDI R30 , HIGH ( 0x1 )
000bb9 07be     +CPC R27 , R30
000bba e0e0     +LDI R30 , BYTE3 ( 0x1 )
000bbb 078e     +CPC R24 , R30
000bbc e0e0     +LDI R30 , BYTE4 ( 0x1 )
000bbd 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000bbe f409      	BRNE _0x20000A6
                 _0x20000A7:
000bbf c00b      	RJMP _0x20000A9
                 _0x20000A6:
000bc0 1743      	CP   R20,R19
000bc1 f440      	BRSH _0x2000114
000bc2 1753      	CP   R21,R19
000bc3 f010      	BRLO _0x20000AC
000bc4 ff00      	SBRS R16,0
000bc5 c001      	RJMP _0x20000AD
                 _0x20000AC:
000bc6 c010      	RJMP _0x20000AB
                 _0x20000AD:
000bc7 e220      	LDI  R18,LOW(32)
000bc8 ff07      	SBRS R16,7
000bc9 c008      	RJMP _0x20000AE
                 _0x2000114:
000bca e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000bcb 6100      	ORI  R16,LOW(16)
000bcc ff02      	SBRS R16,2
000bcd c004      	RJMP _0x20000AF
000bce 940e 126d 	CALL SUBOPT_0x51
000bd0 f009      	BREQ _0x20000B0
000bd1 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000bd2 940e 1229 	CALL SUBOPT_0x46
000bd4 3050      	CPI  R21,0
000bd5 f009      	BREQ _0x20000B1
000bd6 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000bd7 5031      	SUBI R19,LOW(1)
000bd8 940e 1281 	CALL SUBOPT_0x52
000bda 940e 154d 	CALL __MODD21U
000bdc 940e 124f 	CALL SUBOPT_0x4B
000bde 89ec      	LDD  R30,Y+20
                +
000bdf 89a8     +LDD R26 , Y + 16
000be0 89b9     +LDD R27 , Y + 16 + 1
000be1 898a     +LDD R24 , Y + 16 + 2
000be2 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000be3 27ff      	CLR  R31
000be4 2766      	CLR  R22
000be5 2777      	CLR  R23
000be6 940e 151c 	CALL __DIVD21U
000be8 940e 1268 	CALL SUBOPT_0x50
                +
000bea 89e8     +LDD R30 , Y + 16
000beb 89f9     +LDD R31 , Y + 16 + 1
000bec 896a     +LDD R22 , Y + 16 + 2
000bed 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000bee 940e 15b1 	CALL __CPD10
000bf0 f009      	BREQ _0x200009F
000bf1 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000bf2 ff00      	SBRS R16,0
000bf3 c008      	RJMP _0x20000B2
                 _0x20000B3:
000bf4 3050      	CPI  R21,0
000bf5 f031      	BREQ _0x20000B5
000bf6 5051      	SUBI R21,LOW(1)
000bf7 e2e0      	LDI  R30,LOW(32)
000bf8 93ea      	ST   -Y,R30
000bf9 940e 1240 	CALL SUBOPT_0x49
000bfb cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x2000112:
000bfc e010      	LDI  R17,LOW(0)
                 _0x2000035:
000bfd ce06      	RJMP _0x2000030
                 _0x2000032:
000bfe 81ae      	LDD  R26,Y+6
000bff 81bf      	LDD  R27,Y+6+1
000c00 940e 1570 	CALL __GETW1P
000c02 940e 15c0 	CALL __LOADLOCR6
000c04 96ef      	ADIW R28,63
000c05 966f      	ADIW R28,31
000c06 9508      	RET
                 _sprintf:
000c07 92ff      	PUSH R15
000c08 2ef8      	MOV  R15,R24
000c09 9726      	SBIW R28,6
000c0a 940e 15bb 	CALL __SAVELOCR4
000c0c 940e 128a 	CALL SUBOPT_0x53
000c0e 9730      	SBIW R30,0
000c0f f419      	BRNE _0x20000B7
000c10 efef      	LDI  R30,LOW(65535)
000c11 efff      	LDI  R31,HIGH(65535)
000c12 c023      	RJMP _0x20A0008
                 _0x20000B7:
000c13 01de      	MOVW R26,R28
000c14 9616      	ADIW R26,6
000c15 940e 14b4 	CALL __ADDW2R15
000c17 018d      	MOVW R16,R26
000c18 940e 128a 	CALL SUBOPT_0x53
000c1a 83ee      	STD  Y+6,R30
000c1b 83ff      	STD  Y+6+1,R31
000c1c e0e0      	LDI  R30,LOW(0)
000c1d 87e8      	STD  Y+8,R30
000c1e 87e9      	STD  Y+8+1,R30
000c1f 01de      	MOVW R26,R28
000c20 961a      	ADIW R26,10
000c21 940e 1291 	CALL SUBOPT_0x54
000c23 93fa      	ST   -Y,R31
000c24 93ea      	ST   -Y,R30
000c25 931a      	ST   -Y,R17
000c26 930a      	ST   -Y,R16
000c27 eee4      	LDI  R30,LOW(_put_buff_G100)
000c28 e0f8      	LDI  R31,HIGH(_put_buff_G100)
000c29 93fa      	ST   -Y,R31
000c2a 93ea      	ST   -Y,R30
000c2b 01fe      	MOVW R30,R28
000c2c 963a      	ADIW R30,10
000c2d 93fa      	ST   -Y,R31
000c2e 93ea      	ST   -Y,R30
000c2f ddbb      	RCALL __print_G100
000c30 019f      	MOVW R18,R30
000c31 81ae      	LDD  R26,Y+6
000c32 81bf      	LDD  R27,Y+6+1
000c33 e0e0      	LDI  R30,LOW(0)
000c34 93ec      	ST   X,R30
000c35 01f9      	MOVW R30,R18
                 _0x20A0008:
000c36 940e 15c2 	CALL __LOADLOCR4
000c38 962a      	ADIW R28,10
000c39 90ff      	POP  R15
000c3a 9508      	RET
                 _get_buff_G100:
000c3b 931a      	ST   -Y,R17
000c3c 81a9      	LDD  R26,Y+1
000c3d 81ba      	LDD  R27,Y+1+1
000c3e e0e0      	LDI  R30,LOW(0)
000c3f 93ec      	ST   X,R30
000c40 81ab      	LDD  R26,Y+3
000c41 81bc      	LDD  R27,Y+3+1
000c42 91ec      	LD   R30,X
000c43 2f1e      	MOV  R17,R30
000c44 30e0      	CPI  R30,0
000c45 f019      	BREQ _0x20000BF
000c46 e0e0      	LDI  R30,LOW(0)
000c47 93ec      	ST   X,R30
000c48 c016      	RJMP _0x20000C0
                 _0x20000BF:
000c49 81a9      	LDD  R26,Y+1
000c4a 81ba      	LDD  R27,Y+1+1
000c4b 9611      	ADIW R26,1
000c4c 940e 1570 	CALL __GETW1P
000c4e 9730      	SBIW R30,0
000c4f f071      	BREQ _0x20000C1
000c50 81e9      	LDD  R30,Y+1
000c51 81fa      	LDD  R31,Y+1+1
000c52 81a1      	LDD  R26,Z+1
000c53 81b2      	LDD  R27,Z+2
000c54 91ec      	LD   R30,X
000c55 2f1e      	MOV  R17,R30
000c56 30e0      	CPI  R30,0
000c57 f029      	BREQ _0x20000C2
000c58 81a9      	LDD  R26,Y+1
000c59 81ba      	LDD  R27,Y+1+1
000c5a 9611      	ADIW R26,1
000c5b 940e 1105 	CALL SUBOPT_0x23
                 _0x20000C2:
000c5d c001      	RJMP _0x20000C3
                 _0x20000C1:
000c5e e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000c5f 2fe1      	MOV  R30,R17
000c60 8118      	LDD  R17,Y+0
                 _0x20A0007:
000c61 9625      	ADIW R28,5
000c62 9508      	RET
                 __scanf_G100:
000c63 9728      	SBIW R28,8
000c64 940e 15b9 	CALL __SAVELOCR6
000c66 e0e0      	LDI  R30,LOW(0)
000c67 e0f0      	LDI  R31,HIGH(0)
000c68 87ea      	STD  Y+10,R30
000c69 87fb      	STD  Y+10+1,R31
000c6a 87ed      	STD  Y+13,R30
                 _0x20000C4:
000c6b 89ec      	LDD  R30,Y+20
000c6c 89fd      	LDD  R31,Y+20+1
000c6d 9631      	ADIW R30,1
000c6e 8bec      	STD  Y+20,R30
000c6f 8bfd      	STD  Y+20+1,R31
000c70 9731      	SBIW R30,1
000c71 91e4      	LPM  R30,Z
000c72 2f3e      	MOV  R19,R30
000c73 30e0      	CPI  R30,0
000c74 f411      	BRNE PC+3
000c75 940c 0d97 	JMP _0x20000C6
000c77 940e 1296 	CALL SUBOPT_0x55
000c79 f091      	BREQ _0x20000C7
                 _0x20000C8:
000c7a 940e 129b 	CALL SUBOPT_0x56
000c7c 2f3e      	MOV  R19,R30
000c7d 30e0      	CPI  R30,0
000c7e f019      	BREQ _0x20000CB
000c7f 940e 1296 	CALL SUBOPT_0x55
000c81 f409      	BRNE _0x20000CC
                 _0x20000CB:
000c82 c007      	RJMP _0x20000CA
                 _0x20000CC:
000c83 940e 12a7 	CALL SUBOPT_0x57
000c85 f41c      	BRGE _0x20000CD
000c86 efef      	LDI  R30,LOW(65535)
000c87 efff      	LDI  R31,HIGH(65535)
000c88 c110      	RJMP _0x20A0005
                 _0x20000CD:
000c89 cff0      	RJMP _0x20000C8
                 _0x20000CA:
                +
000c8a 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000c8b c10a      	RJMP _0x20000CE
                 _0x20000C7:
000c8c 3235      	CPI  R19,37
000c8d f011      	BREQ PC+3
000c8e 940c 0d84 	JMP _0x20000CF
000c90 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000c91 89ec      	LDD  R30,Y+20
000c92 89fd      	LDD  R31,Y+20+1
000c93 9135      	LPM  R19,Z+
000c94 8bec      	STD  Y+20,R30
000c95 8bfd      	STD  Y+20+1,R31
000c96 3330      	CPI  R19,48
000c97 f010      	BRLO _0x20000D4
000c98 333a      	CPI  R19,58
000c99 f008      	BRLO _0x20000D3
                 _0x20000D4:
000c9a c007      	RJMP _0x20000D2
                 _0x20000D3:
000c9b e0aa      	LDI  R26,LOW(10)
000c9c 9f5a      	MUL  R21,R26
000c9d 2d50      	MOV  R21,R0
000c9e 2fe3      	MOV  R30,R19
000c9f 53e0      	SUBI R30,LOW(48)
000ca0 0f5e      	ADD  R21,R30
000ca1 cfef      	RJMP _0x20000D0
                 _0x20000D2:
000ca2 3030      	CPI  R19,0
000ca3 f409      	BRNE _0x20000D6
000ca4 c0f2      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000ca5 940e 129b 	CALL SUBOPT_0x56
000ca7 2f2e      	MOV  R18,R30
000ca8 93ea      	ST   -Y,R30
000ca9 940e 0ead 	CALL _isspace
000cab 30e0      	CPI  R30,0
000cac f039      	BREQ _0x20000D9
000cad 940e 12a7 	CALL SUBOPT_0x57
000caf f41c      	BRGE _0x20000DA
000cb0 efef      	LDI  R30,LOW(65535)
000cb1 efff      	LDI  R31,HIGH(65535)
000cb2 c0e6      	RJMP _0x20A0005
                 _0x20000DA:
000cb3 cff1      	RJMP _0x20000D7
                 _0x20000D9:
000cb4 3020      	CPI  R18,0
000cb5 f409      	BRNE _0x20000DB
000cb6 c0d7      	RJMP _0x20000DC
                 _0x20000DB:
                +
000cb7 872d     +STD Y + 13 , R18
                 	__PUTBSR 18,13
000cb8 3050      	CPI  R21,0
000cb9 f409      	BRNE _0x20000DD
000cba ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000cbb e040      	LDI  R20,LOW(0)
000cbc 2fe3      	MOV  R30,R19
000cbd 36e3      	CPI  R30,LOW(0x63)
000cbe f469      	BRNE _0x20000E1
000cbf 940e 12ac 	CALL SUBOPT_0x58
000cc1 940e 129b 	CALL SUBOPT_0x56
000cc3 01d8      	MOVW R26,R16
000cc4 93ec      	ST   X,R30
000cc5 940e 12a7 	CALL SUBOPT_0x57
000cc7 f41c      	BRGE _0x20000E2
000cc8 efef      	LDI  R30,LOW(65535)
000cc9 efff      	LDI  R31,HIGH(65535)
000cca c0ce      	RJMP _0x20A0005
                 _0x20000E2:
000ccb c0b2      	RJMP _0x20000E0
                 _0x20000E1:
000ccc 37e3      	CPI  R30,LOW(0x73)
000ccd f511      	BRNE _0x20000E3
000cce 940e 12ac 	CALL SUBOPT_0x58
                 _0x20000E4:
000cd0 2fe5      	MOV  R30,R21
000cd1 5051      	SUBI R21,1
000cd2 30e0      	CPI  R30,0
000cd3 f0c1      	BREQ _0x20000E6
000cd4 940e 129b 	CALL SUBOPT_0x56
000cd6 2f3e      	MOV  R19,R30
000cd7 30e0      	CPI  R30,0
000cd8 f019      	BREQ _0x20000E8
000cd9 940e 1296 	CALL SUBOPT_0x55
000cdb f039      	BREQ _0x20000E7
                 _0x20000E8:
000cdc 940e 12a7 	CALL SUBOPT_0x57
000cde f41c      	BRGE _0x20000EA
000cdf efef      	LDI  R30,LOW(65535)
000ce0 efff      	LDI  R31,HIGH(65535)
000ce1 c0b7      	RJMP _0x20A0005
                 _0x20000EA:
000ce2 c009      	RJMP _0x20000E6
                 _0x20000E7:
000ce3 931f      	PUSH R17
000ce4 930f      	PUSH R16
                +
000ce5 5f0f     +SUBI R16 , LOW ( - 1 )
000ce6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000ce7 2fe3      	MOV  R30,R19
000ce8 91af      	POP  R26
000ce9 91bf      	POP  R27
000cea 93ec      	ST   X,R30
000ceb cfe4      	RJMP _0x20000E4
                 _0x20000E6:
000cec 01d8      	MOVW R26,R16
000ced e0e0      	LDI  R30,LOW(0)
000cee 93ec      	ST   X,R30
000cef c08e      	RJMP _0x20000E0
                 _0x20000E3:
000cf0 36ec      	CPI  R30,LOW(0x6C)
000cf1 f431      	BRNE _0x20000EC
000cf2 e041      	LDI  R20,LOW(1)
000cf3 89ec      	LDD  R30,Y+20
000cf4 89fd      	LDD  R31,Y+20+1
000cf5 9135      	LPM  R19,Z+
000cf6 8bec      	STD  Y+20,R30
000cf7 8bfd      	STD  Y+20+1,R31
                 _0x20000EC:
000cf8 e0e1      	LDI  R30,LOW(1)
000cf9 87ec      	STD  Y+12,R30
000cfa 2fe3      	MOV  R30,R19
000cfb 36e4      	CPI  R30,LOW(0x64)
000cfc f011      	BREQ _0x20000F1
000cfd 36e9      	CPI  R30,LOW(0x69)
000cfe f419      	BRNE _0x20000F2
                 _0x20000F1:
000cff e0e0      	LDI  R30,LOW(0)
000d00 87ec      	STD  Y+12,R30
000d01 c002      	RJMP _0x20000F3
                 _0x20000F2:
000d02 37e5      	CPI  R30,LOW(0x75)
000d03 f411      	BRNE _0x20000F4
                 _0x20000F3:
000d04 e02a      	LDI  R18,LOW(10)
000d05 c008      	RJMP _0x20000EF
                 _0x20000F4:
000d06 37e8      	CPI  R30,LOW(0x78)
000d07 f411      	BRNE _0x20000F5
000d08 e120      	LDI  R18,LOW(16)
000d09 c004      	RJMP _0x20000EF
                 _0x20000F5:
000d0a 32e5      	CPI  R30,LOW(0x25)
000d0b f409      	BRNE _0x20000F8
000d0c c077      	RJMP _0x20000F7
                 _0x20000F8:
000d0d c089      	RJMP _0x20A0006
                 _0x20000EF:
000d0e e0e0      	LDI  R30,LOW(0)
                +
000d0f 83ee     +STD Y + 6 , R30
000d10 83ef     +STD Y + 6 + 1 , R30
000d11 87e8     +STD Y + 6 + 2 , R30
000d12 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
                 _0x20000F9:
000d13 2fe5      	MOV  R30,R21
000d14 5051      	SUBI R21,1
000d15 30e0      	CPI  R30,0
000d16 f411      	BRNE PC+3
000d17 940c 0d5e 	JMP _0x20000FB
000d19 940e 129b 	CALL SUBOPT_0x56
000d1b 2f3e      	MOV  R19,R30
000d1c 32e1      	CPI  R30,LOW(0x21)
000d1d f438      	BRSH _0x20000FC
000d1e 940e 12a7 	CALL SUBOPT_0x57
000d20 f41c      	BRGE _0x20000FD
000d21 efef      	LDI  R30,LOW(65535)
000d22 efff      	LDI  R31,HIGH(65535)
000d23 c075      	RJMP _0x20A0005
                 _0x20000FD:
000d24 c017      	RJMP _0x20000FE
                 _0x20000FC:
000d25 85ec      	LDD  R30,Y+12
000d26 30e0      	CPI  R30,0
000d27 f439      	BRNE _0x20000FF
000d28 323d      	CPI  R19,45
000d29 f419      	BRNE _0x2000100
000d2a efef      	LDI  R30,LOW(255)
000d2b 87ec      	STD  Y+12,R30
000d2c cfe6      	RJMP _0x20000F9
                 _0x2000100:
000d2d e0e1      	LDI  R30,LOW(1)
000d2e 87ec      	STD  Y+12,R30
                 _0x20000FF:
000d2f 3120      	CPI  R18,16
000d30 f431      	BRNE _0x2000102
000d31 933a      	ST   -Y,R19
000d32 940e 0eb7 	CALL _isxdigit
000d34 30e0      	CPI  R30,0
000d35 f031      	BREQ _0x20000FE
000d36 c007      	RJMP _0x2000104
                 _0x2000102:
000d37 933a      	ST   -Y,R19
000d38 940e 0ea5 	CALL _isdigit
000d3a 30e0      	CPI  R30,0
000d3b f411      	BRNE _0x2000105
                 _0x20000FE:
                +
000d3c 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000d3d c020      	RJMP _0x20000FB
                 _0x2000105:
                 _0x2000104:
000d3e 3631      	CPI  R19,97
000d3f f010      	BRLO _0x2000106
000d40 5537      	SUBI R19,LOW(87)
000d41 c005      	RJMP _0x2000107
                 _0x2000106:
000d42 3431      	CPI  R19,65
000d43 f010      	BRLO _0x2000108
000d44 5337      	SUBI R19,LOW(55)
000d45 c001      	RJMP _0x2000109
                 _0x2000108:
000d46 5330      	SUBI R19,LOW(48)
                 _0x2000109:
                 _0x2000107:
000d47 2fe2      	MOV  R30,R18
                +
000d48 81ae     +LDD R26 , Y + 6
000d49 81bf     +LDD R27 , Y + 6 + 1
000d4a 8588     +LDD R24 , Y + 6 + 2
000d4b 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000d4c 27ff      	CLR  R31
000d4d 2766      	CLR  R22
000d4e 2777      	CLR  R23
000d4f 940e 14de 	CALL __MULD12U
000d51 01df      	MOVW R26,R30
000d52 01cb      	MOVW R24,R22
000d53 2fe3      	MOV  R30,R19
000d54 27ff      	CLR  R31
000d55 2766      	CLR  R22
000d56 2777      	CLR  R23
000d57 940e 14b8 	CALL __ADDD12
                +
000d59 83ee     +STD Y + 6 , R30
000d5a 83ff     +STD Y + 6 + 1 , R31
000d5b 8768     +STD Y + 6 + 2 , R22
000d5c 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000d5d cfb5      	RJMP _0x20000F9
                 _0x20000FB:
000d5e 85ec      	LDD  R30,Y+12
                +
000d5f 81ae     +LDD R26 , Y + 6
000d60 81bf     +LDD R27 , Y + 6 + 1
000d61 8588     +LDD R24 , Y + 6 + 2
000d62 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000d63 940e 14ce 	CALL __CBD1
000d65 940e 14de 	CALL __MULD12U
                +
000d67 83ee     +STD Y + 6 , R30
000d68 83ff     +STD Y + 6 + 1 , R31
000d69 8768     +STD Y + 6 + 2 , R22
000d6a 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000d6b 3040      	CPI  R20,0
000d6c f051      	BREQ _0x200010A
000d6d 940e 12ac 	CALL SUBOPT_0x58
                +
000d6f 81ee     +LDD R30 , Y + 6
000d70 81ff     +LDD R31 , Y + 6 + 1
000d71 8568     +LDD R22 , Y + 6 + 2
000d72 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000d73 01d8      	MOVW R26,R16
000d74 940e 157f 	CALL __PUTDP1
000d76 c007      	RJMP _0x200010B
                 _0x200010A:
000d77 940e 12ac 	CALL SUBOPT_0x58
000d79 81ee      	LDD  R30,Y+6
000d7a 81ff      	LDD  R31,Y+6+1
000d7b 01d8      	MOVW R26,R16
000d7c 93ed      	ST   X+,R30
000d7d 93fc      	ST   X,R31
                 _0x200010B:
                 _0x20000E0:
000d7e 85ea      	LDD  R30,Y+10
000d7f 85fb      	LDD  R31,Y+10+1
000d80 9631      	ADIW R30,1
000d81 87ea      	STD  Y+10,R30
000d82 87fb      	STD  Y+10+1,R31
000d83 c012      	RJMP _0x200010C
                 _0x20000CF:
                 _0x20000F7:
000d84 940e 129b 	CALL SUBOPT_0x56
000d86 17e3      	CP   R30,R19
000d87 f071      	BREQ _0x200010D
000d88 940e 12a7 	CALL SUBOPT_0x57
000d8a f41c      	BRGE _0x200010E
000d8b efef      	LDI  R30,LOW(65535)
000d8c efff      	LDI  R31,HIGH(65535)
000d8d c00b      	RJMP _0x20A0005
                 _0x200010E:
                 _0x20000DC:
000d8e 85ea      	LDD  R30,Y+10
000d8f 85fb      	LDD  R31,Y+10+1
000d90 9730      	SBIW R30,0
000d91 f419      	BRNE _0x200010F
000d92 efef      	LDI  R30,LOW(65535)
000d93 efff      	LDI  R31,HIGH(65535)
000d94 c004      	RJMP _0x20A0005
                 _0x200010F:
000d95 c001      	RJMP _0x20000C6
                 _0x200010D:
                 _0x200010C:
                 _0x20000CE:
000d96 ced4      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000d97 85ea      	LDD  R30,Y+10
000d98 85fb      	LDD  R31,Y+10+1
                 _0x20A0005:
000d99 940e 15c0 	CALL __LOADLOCR6
000d9b 9666      	ADIW R28,22
000d9c 9508      	RET
                 _sscanf:
000d9d 92ff      	PUSH R15
000d9e 2ef8      	MOV  R15,R24
000d9f 9723      	SBIW R28,3
000da0 931a      	ST   -Y,R17
000da1 930a      	ST   -Y,R16
000da2 01de      	MOVW R26,R28
000da3 9617      	ADIW R26,7
000da4 940e 1291 	CALL SUBOPT_0x54
000da6 9730      	SBIW R30,0
000da7 f419      	BRNE _0x2000110
000da8 efef      	LDI  R30,LOW(65535)
000da9 efff      	LDI  R31,HIGH(65535)
000daa c01c      	RJMP _0x20A0004
                 _0x2000110:
000dab 01de      	MOVW R26,R28
000dac 9611      	ADIW R26,1
000dad 940e 14b4 	CALL __ADDW2R15
000daf 018d      	MOVW R16,R26
000db0 01de      	MOVW R26,R28
000db1 9617      	ADIW R26,7
000db2 940e 1291 	CALL SUBOPT_0x54
000db4 83eb      	STD  Y+3,R30
000db5 83fc      	STD  Y+3+1,R31
000db6 01de      	MOVW R26,R28
000db7 9615      	ADIW R26,5
000db8 940e 1291 	CALL SUBOPT_0x54
000dba 93fa      	ST   -Y,R31
000dbb 93ea      	ST   -Y,R30
000dbc 931a      	ST   -Y,R17
000dbd 930a      	ST   -Y,R16
000dbe e3eb      	LDI  R30,LOW(_get_buff_G100)
000dbf e0fc      	LDI  R31,HIGH(_get_buff_G100)
000dc0 93fa      	ST   -Y,R31
000dc1 93ea      	ST   -Y,R30
000dc2 01fe      	MOVW R30,R28
000dc3 9638      	ADIW R30,8
000dc4 93fa      	ST   -Y,R31
000dc5 93ea      	ST   -Y,R30
000dc6 de9c      	RCALL __scanf_G100
                 _0x20A0004:
000dc7 8119      	LDD  R17,Y+1
000dc8 8108      	LDD  R16,Y+0
000dc9 9625      	ADIW R28,5
000dca 90ff      	POP  R15
000dcb 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000dcc 817b         ldd  r23,y+3
000dcd 816a         ldd  r22,y+2
000dce 81f9         ldd  r31,y+1
000dcf 81e8         ld   r30,y
000dd0 fb77         bst  r23,7
000dd1 0f77         lsl  r23
000dd2 fd67         sbrc r22,7
000dd3 6071         sbr  r23,1
000dd4 2f97         mov  r25,r23
000dd5 579e         subi r25,0x7e
000dd6 f081         breq __ftrunc0
000dd7 f078         brcs __ftrunc0
000dd8 3198         cpi  r25,24
000dd9 f490         brsh __ftrunc1
000dda 27aa         clr  r26
000ddb 27bb         clr  r27
000ddc 2788         clr  r24
                 __ftrunc2:
000ddd 9408         sec
000dde 9587         ror  r24
000ddf 95b7         ror  r27
000de0 95a7         ror  r26
000de1 959a         dec  r25
000de2 f7d1         brne __ftrunc2
000de3 23ea         and  r30,r26
000de4 23fb         and  r31,r27
000de5 2368         and  r22,r24
000de6 c005         rjmp __ftrunc1
                 __ftrunc0:
000de7 94e8         clt
000de8 2777         clr  r23
000de9 27ee         clr  r30
000dea 27ff         clr  r31
000deb 2766         clr  r22
                 __ftrunc1:
000dec 776f         cbr  r22,0x80
000ded 9576         lsr  r23
000dee f408         brcc __ftrunc3
000def 6860         sbr  r22,0x80
                 __ftrunc3:
000df0 f977         bld  r23,7
000df1 91a9         ld   r26,y+
000df2 91b9         ld   r27,y+
000df3 9189         ld   r24,y+
000df4 9199         ld   r25,y+
000df5 17ea         cp   r30,r26
000df6 07fb         cpc  r31,r27
000df7 0768         cpc  r22,r24
000df8 0779         cpc  r23,r25
000df9 fb97         bst  r25,7
000dfa 9508         ret
                 _floor:
000dfb 940e 12b7 	CALL SUBOPT_0x59
000dfd 940e 159a 	CALL __PUTPARD1
000dff 940e 0dcc 	CALL _ftrunc
000e01 940e 1593 	CALL __PUTD1S0
000e03 f419          brne __floor1
                 __floor0:
000e04 940e 12b7 	CALL SUBOPT_0x59
000e06 c09c      	RJMP _0x20A0003
                 __floor1:
000e07 f7e6          brtc __floor0
000e08 940e 12b7 	CALL SUBOPT_0x59
                +
000e0a e0a0     +LDI R26 , LOW ( 0x3F800000 )
000e0b e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000e0c e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000e0d e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000e0e 940e 13aa 	CALL __SUBF12
000e10 c092      	RJMP _0x20A0003
                 _sin:
000e11 9724      	SBIW R28,4
000e12 931a      	ST   -Y,R17
000e13 e010      	LDI  R17,0
000e14 940e 12ba 	CALL SUBOPT_0x5A
                +
000e16 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000e17 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000e18 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000e19 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000e1a 940e 1401 	CALL __MULF12
000e1c 940e 12bf 	CALL SUBOPT_0x5B
000e1e 940e 12c4 	CALL SUBOPT_0x5C
000e20 940e 1213 	CALL SUBOPT_0x42
000e22 940e 12ba 	CALL SUBOPT_0x5A
000e24 940e 0f9e 	CALL SUBOPT_0x4
000e26 940e 12bf 	CALL SUBOPT_0x5B
000e28 940e 12c9 	CALL SUBOPT_0x5D
000e2a 940e 1494 	CALL __CMPF12
000e2c f009      	BREQ PC+2
000e2d f410      	BRCC PC+3
000e2e 940c 0e3b 	JMP  _0x2020017
000e30 940e 12c4 	CALL SUBOPT_0x5C
                +
000e32 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000e33 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000e34 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000e35 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000e36 940e 13aa 	CALL __SUBF12
000e38 940e 12bf 	CALL SUBOPT_0x5B
000e3a e011      	LDI  R17,LOW(1)
                 _0x2020017:
000e3b 940e 12ba 	CALL SUBOPT_0x5A
                +
000e3d e0e0     +LDI R30 , LOW ( 0x3E800000 )
000e3e e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000e3f e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000e40 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000e41 940e 1494 	CALL __CMPF12
000e43 f009      	BREQ PC+2
000e44 f410      	BRCC PC+3
000e45 940c 0e4d 	JMP  _0x2020018
000e47 940e 12c9 	CALL SUBOPT_0x5D
000e49 940e 13aa 	CALL __SUBF12
000e4b 940e 12bf 	CALL SUBOPT_0x5B
                 _0x2020018:
000e4d 3010      	CPI  R17,0
000e4e f031      	BREQ _0x2020019
000e4f 940e 12c4 	CALL SUBOPT_0x5C
000e51 940e 130b 	CALL __ANEGF1
000e53 940e 12bf 	CALL SUBOPT_0x5B
                 _0x2020019:
000e55 940e 12c4 	CALL SUBOPT_0x5C
000e57 940e 12ba 	CALL SUBOPT_0x5A
000e59 940e 1401 	CALL __MULF12
                +
000e5b 83e9     +STD Y + 1 , R30
000e5c 83fa     +STD Y + 1 + 1 , R31
000e5d 836b     +STD Y + 1 + 2 , R22
000e5e 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000e5f eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000e60 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000e61 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000e62 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000e63 940e 1401 	CALL __MULF12
000e65 01df      	MOVW R26,R30
000e66 01cb      	MOVW R24,R22
                +
000e67 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000e68 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000e69 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000e6a e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000e6b 940e 0f9e 	CALL SUBOPT_0x4
000e6d 940e 12cf 	CALL SUBOPT_0x5E
                +
000e6f e4ac     +LDI R26 , LOW ( 0x4104534C )
000e70 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000e71 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000e72 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000e73 940e 13b1 	CALL __ADDF12
000e75 940e 12ba 	CALL SUBOPT_0x5A
000e77 940e 1401 	CALL __MULF12
000e79 937f      	PUSH R23
000e7a 936f      	PUSH R22
000e7b 93ff      	PUSH R31
000e7c 93ef      	PUSH R30
                +
000e7d 81e9     +LDD R30 , Y + 1
000e7e 81fa     +LDD R31 , Y + 1 + 1
000e7f 816b     +LDD R22 , Y + 1 + 2
000e80 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000e81 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000e82 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000e83 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000e84 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000e85 940e 13b1 	CALL __ADDF12
000e87 940e 12cf 	CALL SUBOPT_0x5E
                +
000e89 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000e8a e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000e8b ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000e8c e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000e8d 940e 13b1 	CALL __ADDF12
000e8f 91af      	POP  R26
000e90 91bf      	POP  R27
000e91 918f      	POP  R24
000e92 919f      	POP  R25
000e93 940e 144f 	CALL __DIVF21
000e95 8118      	LDD  R17,Y+0
000e96 9629      	ADIW R28,9
000e97 9508      	RET
                 _cos:
000e98 940e 158e 	CALL __GETD2S0
                +
000e9a edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000e9b e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000e9c ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000e9d e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000e9e 940e 13aa 	CALL __SUBF12
000ea0 940e 159a 	CALL __PUTPARD1
000ea2 df6e      	RCALL _sin
                 _0x20A0003:
000ea3 9624      	ADIW R28,4
000ea4 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000ea5 e0e1          ldi  r30,1
000ea6 91f9          ld   r31,y+
000ea7 33f0          cpi  r31,'0'
000ea8 f010          brlo isdigit0
000ea9 33fa          cpi  r31,'9'+1
000eaa f008          brlo isdigit1
                 isdigit0:
000eab 27ee          clr  r30
                 isdigit1:
000eac 9508          ret
                 _isspace:
000ead e0e1          ldi  r30,1
000eae 91f9          ld   r31,y+
000eaf 32f0          cpi  r31,' '
000eb0 f029          breq isspace1
000eb1 30f9          cpi  r31,9
000eb2 f010          brlo isspace0
000eb3 30fe          cpi  r31,13+1
000eb4 f008          brlo isspace1
                 isspace0:
000eb5 27ee          clr  r30
                 isspace1:
000eb6 9508          ret
                 _isxdigit:
000eb7 e0e1          ldi  r30,1
000eb8 91f9          ld   r31,y+
000eb9 53f0          subi r31,0x30
000eba f040          brcs isxdigit0
000ebb 30fa          cpi  r31,10
000ebc f038          brcs isxdigit1
000ebd 75ff          andi r31,0x5f
000ebe 50f7          subi r31,7
000ebf 30fa          cpi  r31,10
000ec0 f010          brcs isxdigit0
000ec1 31f0          cpi  r31,16
000ec2 f008          brcs isxdigit1
                 isxdigit0:
000ec3 27ee          clr  r30
                 isxdigit1:
000ec4 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000ec5 91e9          ld   r30,y+
000ec6 91f9          ld   r31,y+
000ec7 91a9          ld   r26,y+
000ec8 91b9          ld   r27,y+
000ec9 01cd          movw r24,r26
                 strcpyf0:
000eca 9005      	lpm  r0,z+
000ecb 920d          st   x+,r0
000ecc 2000          tst  r0
000ecd f7e1          brne strcpyf0
000ece 01fc          movw r30,r24
000ecf 9508          ret
                 _strlen:
000ed0 91a9          ld   r26,y+
000ed1 91b9          ld   r27,y+
000ed2 27ee          clr  r30
000ed3 27ff          clr  r31
                 strlen0:
000ed4 916d          ld   r22,x+
000ed5 2366          tst  r22
000ed6 f011          breq strlen1
000ed7 9631          adiw r30,1
000ed8 cffb          rjmp strlen0
                 strlen1:
000ed9 9508          ret
                 _strlenf:
000eda 27aa          clr  r26
000edb 27bb          clr  r27
000edc 91e9          ld   r30,y+
000edd 91f9          ld   r31,y+
                 strlenf0:
000ede 9005      	lpm  r0,z+
000edf 2000          tst  r0
000ee0 f011          breq strlenf1
000ee1 9611          adiw r26,1
000ee2 cffb          rjmp strlenf0
                 strlenf1:
000ee3 01fd          movw r30,r26
000ee4 9508          ret
                 
                 	.CSEG
                 _ftoa:
000ee5 9724      	SBIW R28,4
000ee6 d289      	RCALL SUBOPT_0x2C
000ee7 e0e0      	LDI  R30,LOW(0)
000ee8 83ea      	STD  Y+2,R30
000ee9 e3ef      	LDI  R30,LOW(63)
000eea 83eb      	STD  Y+3,R30
000eeb 931a      	ST   -Y,R17
000eec 930a      	ST   -Y,R16
000eed 85eb      	LDD  R30,Y+11
000eee 85fc      	LDD  R31,Y+11+1
000eef 3fef      	CPI  R30,LOW(0xFFFF)
000ef0 efaf      	LDI  R26,HIGH(0xFFFF)
000ef1 07fa      	CPC  R31,R26
000ef2 f429      	BRNE _0x208000D
000ef3 d3e2      	RCALL SUBOPT_0x5F
                +
000ef4 ece4     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000ef5 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000ef6 d2da      	RCALL SUBOPT_0x39
000ef7 c085      	RJMP _0x20A0002
                 _0x208000D:
000ef8 3fef      	CPI  R30,LOW(0x7FFF)
000ef9 e7af      	LDI  R26,HIGH(0x7FFF)
000efa 07fa      	CPC  R31,R26
000efb f429      	BRNE _0x208000C
000efc d3d9      	RCALL SUBOPT_0x5F
                +
000efd ece5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000efe e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000eff d2d1      	RCALL SUBOPT_0x39
000f00 c07c      	RJMP _0x20A0002
                 _0x208000C:
000f01 85ac      	LDD  R26,Y+12
000f02 23aa      	TST  R26
000f03 f452      	BRPL _0x208000F
                +
000f04 85e9     +LDD R30 , Y + 9
000f05 85fa     +LDD R31 , Y + 9 + 1
000f06 856b     +LDD R22 , Y + 9 + 2
000f07 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000f08 940e 130b 	CALL __ANEGF1
000f0a d3d0      	RCALL SUBOPT_0x60
000f0b d3d4      	RCALL SUBOPT_0x61
000f0c e2ed      	LDI  R30,LOW(45)
000f0d 93ec      	ST   X,R30
                 _0x208000F:
000f0e 85a8      	LDD  R26,Y+8
000f0f 30a7      	CPI  R26,LOW(0x7)
000f10 f010      	BRLO _0x2080010
000f11 e0e6      	LDI  R30,LOW(6)
000f12 87e8      	STD  Y+8,R30
                 _0x2080010:
000f13 8518      	LDD  R17,Y+8
                 _0x2080011:
000f14 2fe1      	MOV  R30,R17
000f15 5011      	SUBI R17,1
000f16 30e0      	CPI  R30,0
000f17 f021      	BREQ _0x2080013
000f18 d3ce      	RCALL SUBOPT_0x62
000f19 d2f2      	RCALL SUBOPT_0x41
000f1a d3d1      	RCALL SUBOPT_0x63
000f1b cff8      	RJMP _0x2080011
                 _0x2080013:
000f1c d3d4      	RCALL SUBOPT_0x64
000f1d 940e 13b1 	CALL __ADDF12
000f1f d3bb      	RCALL SUBOPT_0x60
000f20 e010      	LDI  R17,LOW(0)
                +
000f21 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000f22 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000f23 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000f24 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000f25 d3c6      	RCALL SUBOPT_0x63
                 _0x2080014:
000f26 d3ca      	RCALL SUBOPT_0x64
000f27 940e 1494 	CALL __CMPF12
000f29 f060      	BRLO _0x2080016
000f2a d3bc      	RCALL SUBOPT_0x62
000f2b d2cd      	RCALL SUBOPT_0x3E
000f2c d3bf      	RCALL SUBOPT_0x63
000f2d 5f1f      	SUBI R17,-LOW(1)
000f2e 3217      	CPI  R17,39
000f2f f028      	BRLO _0x2080017
000f30 d3a5      	RCALL SUBOPT_0x5F
                +
000f31 ece9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000f32 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000f33 d29d      	RCALL SUBOPT_0x39
000f34 c048      	RJMP _0x20A0002
                 _0x2080017:
000f35 cff0      	RJMP _0x2080014
                 _0x2080016:
000f36 3010      	CPI  R17,0
000f37 f421      	BRNE _0x2080018
000f38 d3a7      	RCALL SUBOPT_0x61
000f39 e3e0      	LDI  R30,LOW(48)
000f3a 93ec      	ST   X,R30
000f3b c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000f3c 2fe1      	MOV  R30,R17
000f3d 5011      	SUBI R17,1
000f3e 30e0      	CPI  R30,0
000f3f f0c9      	BREQ _0x208001C
000f40 d3a6      	RCALL SUBOPT_0x62
000f41 d2ca      	RCALL SUBOPT_0x41
000f42 d2c2      	RCALL SUBOPT_0x40
000f43 d2cf      	RCALL SUBOPT_0x42
000f44 d3a7      	RCALL SUBOPT_0x63
000f45 d3ab      	RCALL SUBOPT_0x64
000f46 940e 144f 	CALL __DIVF21
000f48 940e 133e 	CALL __CFD1U
000f4a 2f0e      	MOV  R16,R30
000f4b d394      	RCALL SUBOPT_0x61
000f4c d2d1      	RCALL SUBOPT_0x44
000f4d e0f0      	LDI  R31,0
000f4e d398      	RCALL SUBOPT_0x62
000f4f 940e 14d4 	CALL __CWD1
000f51 940e 1377 	CALL __CDF1
000f53 940e 1401 	CALL __MULF12
000f55 d3a4      	RCALL SUBOPT_0x65
000f56 d047      	RCALL SUBOPT_0x4
000f57 d383      	RCALL SUBOPT_0x60
000f58 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000f59 85e8      	LDD  R30,Y+8
000f5a 30e0      	CPI  R30,0
000f5b f0e9      	BREQ _0x20A0001
000f5c d383      	RCALL SUBOPT_0x61
000f5d e2ee      	LDI  R30,LOW(46)
000f5e 93ec      	ST   X,R30
                 _0x208001E:
000f5f 85e8      	LDD  R30,Y+8
000f60 50e1      	SUBI R30,LOW(1)
000f61 87e8      	STD  Y+8,R30
000f62 5fef      	SUBI R30,-LOW(1)
000f63 f0a9      	BREQ _0x2080020
000f64 d395      	RCALL SUBOPT_0x65
000f65 d293      	RCALL SUBOPT_0x3E
000f66 d374      	RCALL SUBOPT_0x60
                +
000f67 85e9     +LDD R30 , Y + 9
000f68 85fa     +LDD R31 , Y + 9 + 1
000f69 856b     +LDD R22 , Y + 9 + 2
000f6a 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000f6b 940e 133e 	CALL __CFD1U
000f6d 2f0e      	MOV  R16,R30
000f6e d371      	RCALL SUBOPT_0x61
000f6f d2ae      	RCALL SUBOPT_0x44
000f70 e0f0      	LDI  R31,0
000f71 d388      	RCALL SUBOPT_0x65
000f72 940e 14d4 	CALL __CWD1
000f74 940e 1377 	CALL __CDF1
000f76 d027      	RCALL SUBOPT_0x4
000f77 d363      	RCALL SUBOPT_0x60
000f78 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000f79 81ae      	LDD  R26,Y+6
000f7a 81bf      	LDD  R27,Y+6+1
000f7b e0e0      	LDI  R30,LOW(0)
000f7c 93ec      	ST   X,R30
                 _0x20A0002:
000f7d 8119      	LDD  R17,Y+1
000f7e 8108      	LDD  R16,Y+0
000f7f 962d      	ADIW R28,13
000f80 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x4
                 _TIMER2_OVERFLOW:
000504           	.BYTE 0x1
                 _PACKET_BUFF:
000505           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000569           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
00056a           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056c           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
000580           	.BYTE 0x1
                 _CHECK_GETS:
000581           	.BYTE 0x1
                 _MOTORR_HALL:
000582           	.BYTE 0x4
                 _MOTORL_HALL:
000586           	.BYTE 0x4
                 __seed_G104:
00058a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x0:
000f81 93fa      	ST   -Y,R31
000f82 93ea      	ST   -Y,R30
000f83 940c 12ff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000f85 e0e0      	LDI  R30,LOW(0)
000f86 93e0 056a 	STS  _TIMER0_OVERFLOW,R30
000f88 93e0 056b 	STS  _TIMER0_OVERFLOW+1,R30
000f8a bfe2      	OUT  0x32,R30
000f8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
                +
000f8c 01fe     +MOVW R30 , R28
000f8d 58e8     +SUBI R30 , LOW ( - 632 )
000f8e 4ffd     +SBCI R31 , HIGH ( - 632 )
000f8f 9001     +LD R0 , Z +
000f90 81f0     +LD R31 , Z
000f91 2de0     +MOV R30 , R0
                 	__GETW1SX 632
000f92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
                +
000f93 01fe     +MOVW R30 , R28
000f94 59e8     +SUBI R30 , LOW ( - 616 )
000f95 4ffd     +SBCI R31 , HIGH ( - 616 )
000f96 9001     +LD R0 , Z +
000f97 81f0     +LD R31 , Z
000f98 2de0     +MOV R30 , R0
                 	__GETW1SX 616
000f99 940e 14d4 	CALL __CWD1
000f9b 940e 1377 	CALL __CDF1
000f9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000f9e 940e 15a4 	CALL __SWAPD12
000fa0 940e 13aa 	CALL __SUBF12
000fa2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
000fa3 01df      	MOVW R26,R30
000fa4 01cb      	MOVW R24,R22
                +
000fa5 efe6     +LDI R30 , LOW ( 0x426528F6 )
000fa6 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
000fa7 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
000fa8 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
000fa9 940e 144f 	CALL __DIVF21
                +
000fab 01de     +MOVW R26 , R28
000fac 59a6     +SUBI R26 , LOW ( - 618 )
000fad 4fbd     +SBCI R27 , HIGH ( - 618 )
000fae 93ed     +ST X + , R30
000faf 93fd     +ST X + , R31
000fb0 936d     +ST X + , R22
000fb1 937c     +ST X , R23
                 	__PUTD1SX 618
000fb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6:
                +
000fb3 eaa4     +LDI R26 , LOW ( 0x3EFD70A4 )
000fb4 e7b0     +LDI R27 , HIGH ( 0x3EFD70A4 )
000fb5 ef8d     +LDI R24 , BYTE3 ( 0x3EFD70A4 )
000fb6 e39e     +LDI R25 , BYTE4 ( 0x3EFD70A4 )
                 	__GETD2N 0x3EFD70A4
000fb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x7:
                +
000fb8 01fe     +MOVW R30 , R28
000fb9 59e6     +SUBI R30 , LOW ( - 618 )
000fba 4ffd     +SBCI R31 , HIGH ( - 618 )
000fbb 9001     +LD R0 , Z +
000fbc 9011     +LD R1 , Z +
000fbd 9161     +LD R22 , Z +
000fbe 8170     +LD R23 , Z
000fbf 01f0     +MOVW R30 , R0
                 	__GETD1SX 618
000fc0 dff2      	RCALL SUBOPT_0x6
000fc1 940e 13b1 	CALL __ADDF12
000fc3 01df      	MOVW R26,R30
000fc4 01cb      	MOVW R24,R22
                +
000fc5 e0e0     +LDI R30 , LOW ( 0x3FC00000 )
000fc6 e0f0     +LDI R31 , HIGH ( 0x3FC00000 )
000fc7 ec60     +LDI R22 , BYTE3 ( 0x3FC00000 )
000fc8 e37f     +LDI R23 , BYTE4 ( 0x3FC00000 )
                 	__GETD1N 0x3FC00000
000fc9 940e 144f 	CALL __DIVF21
000fcb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x8:
                +
000fcc 01de     +MOVW R26 , R28
000fcd 58ac     +SUBI R26 , LOW ( - 628 )
000fce 4fbd     +SBCI R27 , HIGH ( - 628 )
000fcf 93ed     +ST X + , R30
000fd0 93fd     +ST X + , R31
000fd1 936d     +ST X + , R22
000fd2 937c     +ST X , R23
                 	__PUTD1SX 628
                +
000fd3 eca3     +LDI R26 , LOW ( 0x3EA8F5C3 )
000fd4 efb5     +LDI R27 , HIGH ( 0x3EA8F5C3 )
000fd5 ea88     +LDI R24 , BYTE3 ( 0x3EA8F5C3 )
000fd6 e39e     +LDI R25 , BYTE4 ( 0x3EA8F5C3 )
                 	__GETD2N 0x3EA8F5C3
000fd7 940e 13aa 	CALL __SUBF12
000fd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x9:
                +
000fda 01de     +MOVW R26 , R28
000fdb 58ac     +SUBI R26 , LOW ( - 628 )
000fdc 4fbd     +SBCI R27 , HIGH ( - 628 )
000fdd 900d     +LD R0 , X +
000fde 901d     +LD R1 , X +
000fdf 918d     +LD R24 , X +
000fe0 919c     +LD R25 , X
000fe1 01d0     +MOVW R26 , R0
                 	__GETD2SX 628
                +
000fe2 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000fe3 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000fe4 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000fe5 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000fe6 940e 1401 	CALL __MULF12
000fe8 940e 1340 	CALL __CFD1
                +
000fea 01de     +MOVW R26 , R28
000feb 58a8     +SUBI R26 , LOW ( - 632 )
000fec 4fbd     +SBCI R27 , HIGH ( - 632 )
000fed 93ed     +ST X + , R30
000fee 93fc     +ST X , R31
                 	__PUTW1SX 632
000fef e0e0      	LDI  R30,LOW(0)
                +
000ff0 01de     +MOVW R26 , R28
000ff1 58a4     +SUBI R26 , LOW ( - 636 )
000ff2 4fbd     +SBCI R27 , HIGH ( - 636 )
000ff3 93ed     +ST X + , R30
000ff4 93ed     +ST X + , R30
000ff5 93ed     +ST X + , R30
000ff6 93ec     +ST X , R30
                 	__CLRD1SX 636
000ff7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000ff8 e0e0      	LDI  R30,LOW(0)
000ff9 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000ffb 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000ffd 93e0 0502 	STS  _TIMER1_OVERFLOW+2,R30
000fff 93e0 0503 	STS  _TIMER1_OVERFLOW+3,R30
001001 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
001002 e0e5      	LDI  R30,LOW(5)
001003 e0f0      	LDI  R31,HIGH(5)
001004 cf7c      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xC:
001005 93ea      	ST   -Y,R30
001006 e0e2      	LDI  R30,LOW(2)
001007 e0f0      	LDI  R31,HIGH(2)
001008 93fa      	ST   -Y,R31
001009 93ea      	ST   -Y,R30
00100a 93fa      	ST   -Y,R31
00100b 93ea      	ST   -Y,R30
00100c 940e 07ab 	CALL _RTU_ReedOperate0
00100e cff3      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00100f e0e5      	LDI  R30,LOW(_PACKET_BUFF)
001010 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
001011 93fa      	ST   -Y,R31
001012 93ea      	ST   -Y,R30
001013 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
001015 93ea      	ST   -Y,R30
001016 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xE:
001017 940e 14d4 	CALL __CWD1
001019 940e 1377 	CALL __CDF1
00101b 01df      	MOVW R26,R30
00101c 01cb      	MOVW R24,R22
                +
00101d e0e0     +LDI R30 , LOW ( 0x453B8000 )
00101e e8f0     +LDI R31 , HIGH ( 0x453B8000 )
00101f e36b     +LDI R22 , BYTE3 ( 0x453B8000 )
001020 e475     +LDI R23 , BYTE4 ( 0x453B8000 )
                 	__GETD1N 0x453B8000
001021 940e 144f 	CALL __DIVF21
001023 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF:
001024 940e 13b1 	CALL __ADDF12
001026 01df      	MOVW R26,R30
001027 01cb      	MOVW R24,R22
                +
001028 e0e0     +LDI R30 , LOW ( 0x40000000 )
001029 e0f0     +LDI R31 , HIGH ( 0x40000000 )
00102a e060     +LDI R22 , BYTE3 ( 0x40000000 )
00102b e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00102c 940e 144f 	CALL __DIVF21
00102e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
00102f 940e 13aa 	CALL __SUBF12
001031 01df      	MOVW R26,R30
001032 01cb      	MOVW R24,R22
                +
001033 e1e7     +LDI R30 , LOW ( 0x3E8ED917 )
001034 edf9     +LDI R31 , HIGH ( 0x3E8ED917 )
001035 e86e     +LDI R22 , BYTE3 ( 0x3E8ED917 )
001036 e37e     +LDI R23 , BYTE4 ( 0x3E8ED917 )
                 	__GETD1N 0x3E8ED917
001037 940e 144f 	CALL __DIVF21
001039 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
00103a e0f0      	LDI  R31,0
00103b 0fea      	ADD  R30,R26
00103c 1ffb      	ADC  R31,R27
00103d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
00103e 01de     +MOVW R26 , R28
00103f 5bac     +SUBI R26 , LOW ( - 580 )
001040 4fbd     +SBCI R27 , HIGH ( - 580 )
001041 900d     +LD R0 , X +
001042 901d     +LD R1 , X +
001043 918d     +LD R24 , X +
001044 919c     +LD R25 , X
001045 01d0     +MOVW R26 , R0
                 	__GETD2SX 580
001046 940e 1401 	CALL __MULF12
001048 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
                +
001049 01de     +MOVW R26 , R28
00104a 5da0     +SUBI R26 , LOW ( - 560 )
00104b 4fbd     +SBCI R27 , HIGH ( - 560 )
00104c 900d     +LD R0 , X +
00104d 901d     +LD R1 , X +
00104e 918d     +LD R24 , X +
00104f 919c     +LD R25 , X
001050 01d0     +MOVW R26 , R0
                 	__GETD2SX 560
001051 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x14:
                +
001052 01fe     +MOVW R30 , R28
001053 5bec     +SUBI R30 , LOW ( - 580 )
001054 4ffd     +SBCI R31 , HIGH ( - 580 )
001055 9001     +LD R0 , Z +
001056 9011     +LD R1 , Z +
001057 9161     +LD R22 , Z +
001058 8170     +LD R23 , Z
001059 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
                +
00105a 01de     +MOVW R26 , R28
00105b 5ba4     +SUBI R26 , LOW ( - 588 )
00105c 4fbd     +SBCI R27 , HIGH ( - 588 )
00105d 900d     +LD R0 , X +
00105e 901d     +LD R1 , X +
00105f 918d     +LD R24 , X +
001060 919c     +LD R25 , X
001061 01d0     +MOVW R26 , R0
                 	__GETD2SX 588
001062 940e 1401 	CALL __MULF12
001064 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
                +
001065 01fe     +MOVW R30 , R28
001066 5de0     +SUBI R30 , LOW ( - 560 )
001067 4ffd     +SBCI R31 , HIGH ( - 560 )
001068 9001     +LD R0 , Z +
001069 9011     +LD R1 , Z +
00106a 9161     +LD R22 , Z +
00106b 8170     +LD R23 , Z
00106c 01f0     +MOVW R30 , R0
                 	__GETD1SX 560
00106d 940e 159a 	CALL __PUTPARD1
00106f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
                +
001070 efe6     +LDI R30 , LOW ( 0x426528F6 )
001071 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
001072 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
001073 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
001074 940e 1401 	CALL __MULF12
001076 940e 1340 	CALL __CFD1
001078 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
001079 01de     +MOVW R26 , R28
00107a 5dae     +SUBI R26 , LOW ( - 546 )
00107b 4fbd     +SBCI R27 , HIGH ( - 546 )
00107c 900d     +LD R0 , X +
00107d 901d     +LD R1 , X +
00107e 918d     +LD R24 , X +
00107f 919c     +LD R25 , X
001080 01d0     +MOVW R26 , R0
                 	__GETD2SX 546
001081 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
                +
001082 01fe     +MOVW R30 , R28
001083 5bec     +SUBI R30 , LOW ( - 580 )
001084 4ffd     +SBCI R31 , HIGH ( - 580 )
001085 9001     +LD R0 , Z +
001086 9011     +LD R1 , Z +
001087 9161     +LD R22 , Z +
001088 8170     +LD R23 , Z
001089 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
                +
00108a 01de     +MOVW R26 , R28
00108b 5ca0     +SUBI R26 , LOW ( - 576 )
00108c 4fbd     +SBCI R27 , HIGH ( - 576 )
00108d 900d     +LD R0 , X +
00108e 901d     +LD R1 , X +
00108f 918d     +LD R24 , X +
001090 919c     +LD R25 , X
001091 01d0     +MOVW R26 , R0
                 	__GETD2SX 576
001092 940e 1401 	CALL __MULF12
001094 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
                +
001095 01fe     +MOVW R30 , R28
001096 5dee     +SUBI R30 , LOW ( - 546 )
001097 4ffd     +SBCI R31 , HIGH ( - 546 )
001098 9001     +LD R0 , Z +
001099 9011     +LD R1 , Z +
00109a 9161     +LD R22 , Z +
00109b 8170     +LD R23 , Z
00109c 01f0     +MOVW R30 , R0
                 	__GETD1SX 546
00109d 940e 159a 	CALL __PUTPARD1
00109f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1A:
0010a0 940e 1377 	CALL __CDF1
                +
0010a2 ecad     +LDI R26 , LOW ( 0x3ECCCCCD )
0010a3 ecbc     +LDI R27 , HIGH ( 0x3ECCCCCD )
0010a4 ec8c     +LDI R24 , BYTE3 ( 0x3ECCCCCD )
0010a5 e39e     +LDI R25 , BYTE4 ( 0x3ECCCCCD )
                 	__GETD2N 0x3ECCCCCD
0010a6 940e 1401 	CALL __MULF12
0010a8 01df      	MOVW R26,R30
0010a9 01cb      	MOVW R24,R22
                +
0010aa e0e0     +LDI R30 , LOW ( 0x43200000 )
0010ab e0f0     +LDI R31 , HIGH ( 0x43200000 )
0010ac e260     +LDI R22 , BYTE3 ( 0x43200000 )
0010ad e473     +LDI R23 , BYTE4 ( 0x43200000 )
                 	__GETD1N 0x43200000
0010ae 940e 144f 	CALL __DIVF21
0010b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
0010b1 01de     +MOVW R26 , R28
0010b2 5ea8     +SUBI R26 , LOW ( - 536 )
0010b3 4fbd     +SBCI R27 , HIGH ( - 536 )
0010b4 900d     +LD R0 , X +
0010b5 901d     +LD R1 , X +
0010b6 918d     +LD R24 , X +
0010b7 919c     +LD R25 , X
0010b8 01d0     +MOVW R26 , R0
                 	__GETD2SX 536
0010b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1C:
                +
0010ba 01fe     +MOVW R30 , R28
0010bb 5ee8     +SUBI R30 , LOW ( - 536 )
0010bc 4ffd     +SBCI R31 , HIGH ( - 536 )
0010bd 9001     +LD R0 , Z +
0010be 9011     +LD R1 , Z +
0010bf 9161     +LD R22 , Z +
0010c0 8170     +LD R23 , Z
0010c1 01f0     +MOVW R30 , R0
                 	__GETD1SX 536
0010c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1D:
                +
0010c3 01fe     +MOVW R30 , R28
0010c4 50ec     +SUBI R30 , LOW ( - 500 )
0010c5 4ffe     +SBCI R31 , HIGH ( - 500 )
0010c6 9001     +LD R0 , Z +
0010c7 9011     +LD R1 , Z +
0010c8 9161     +LD R22 , Z +
0010c9 8170     +LD R23 , Z
0010ca 01f0     +MOVW R30 , R0
                 	__GETD1SX 500
                +
0010cb 01de     +MOVW R26 , R28
0010cc 50a8     +SUBI R26 , LOW ( - 504 )
0010cd 4fbe     +SBCI R27 , HIGH ( - 504 )
0010ce 900d     +LD R0 , X +
0010cf 901d     +LD R1 , X +
0010d0 918d     +LD R24 , X +
0010d1 919c     +LD R25 , X
0010d2 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
0010d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1E:
                +
0010d4 01de     +MOVW R26 , R28
0010d5 50ac     +SUBI R26 , LOW ( - 500 )
0010d6 4fbe     +SBCI R27 , HIGH ( - 500 )
0010d7 900d     +LD R0 , X +
0010d8 901d     +LD R1 , X +
0010d9 918d     +LD R24 , X +
0010da 919c     +LD R25 , X
0010db 01d0     +MOVW R26 , R0
                 	__GETD2SX 500
                +
0010dc 01fe     +MOVW R30 , R28
0010dd 50e8     +SUBI R30 , LOW ( - 504 )
0010de 4ffe     +SBCI R31 , HIGH ( - 504 )
0010df 9001     +LD R0 , Z +
0010e0 9011     +LD R1 , Z +
0010e1 9161     +LD R22 , Z +
0010e2 8170     +LD R23 , Z
0010e3 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
0010e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
                +
0010e5 e1a7     +LDI R26 , LOW ( 0x3E8ED917 )
0010e6 edb9     +LDI R27 , HIGH ( 0x3E8ED917 )
0010e7 e88e     +LDI R24 , BYTE3 ( 0x3E8ED917 )
0010e8 e39e     +LDI R25 , BYTE4 ( 0x3E8ED917 )
                 	__GETD2N 0x3E8ED917
0010e9 940e 1401 	CALL __MULF12
0010eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
                +
0010ec 01de     +MOVW R26 , R28
0010ed 5faa     +SUBI R26 , LOW ( - 518 )
0010ee 4fbd     +SBCI R27 , HIGH ( - 518 )
0010ef 900d     +LD R0 , X +
0010f0 901d     +LD R1 , X +
0010f1 918d     +LD R24 , X +
0010f2 919c     +LD R25 , X
0010f3 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
0010f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
                +
0010f5 01fe     +MOVW R30 , R28
0010f6 5fea     +SUBI R30 , LOW ( - 518 )
0010f7 4ffd     +SBCI R31 , HIGH ( - 518 )
0010f8 9001     +LD R0 , Z +
0010f9 9011     +LD R1 , Z +
0010fa 9161     +LD R22 , Z +
0010fb 8170     +LD R23 , Z
0010fc 01f0     +MOVW R30 , R0
                 	__GETD1SX 518
0010fd 940e 159a 	CALL __PUTPARD1
0010ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
001100 940e 14d4 	CALL __CWD1
001102 940e 159a 	CALL __PUTPARD1
001104 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x23:
001105 91ed      	LD   R30,X+
001106 91fd      	LD   R31,X+
001107 9631      	ADIW R30,1
001108 93fe      	ST   -X,R31
001109 93ee      	ST   -X,R30
00110a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x24:
00110b 936a      	ST   -Y,R22
00110c 937a      	ST   -Y,R23
00110d 93aa      	ST   -Y,R26
00110e 93ba      	ST   -Y,R27
00110f 93ea      	ST   -Y,R30
001110 93fa      	ST   -Y,R31
001111 b7ef      	IN   R30,SREG
001112 93ea      	ST   -Y,R30
001113 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x25:
001114 940e 157a 	CALL __GETD1P_INC
                +
001116 5fef     +SUBI R30 , LOW ( - 1 )
001117 4fff     +SBCI R31 , HIGH ( - 1 )
001118 4f6f     +SBCI R22 , BYTE3 ( - 1 )
001119 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00111a 940e 1584 	CALL __PUTDP1_DEC
00111c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x26:
00111d 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
00111f e0b0      	LDI  R27,0
001120 5fab      	SUBI R26,LOW(-_PACKET_BUFF)
001121 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
001122 b1ec      	IN   R30,0xC
001123 93ec      	ST   X,R30
001124 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
001126 5fef      	SUBI R30,-LOW(1)
001127 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
001129 e0e0      	LDI  R30,LOW(0)
00112a bde4      	OUT  0x24,R30
00112b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x27:
00112c e0f0      	LDI  R31,0
00112d 59e4      	SUBI R30,LOW(-_VELOCITY_BUFF)
00112e 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
00112f 8310      	ST   Z,R17
001130 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
001132 5fef      	SUBI R30,-LOW(1)
001133 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
001135 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
001136 81aa      	LDD  R26,Y+2
001137 81bb      	LDD  R27,Y+2+1
001138 27ee      	CLR  R30
001139 0fa1      	ADD  R26,R17
00113a 1fbe      	ADC  R27,R30
00113b 91ec      	LD   R30,X
00113c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x29:
00113d 9728      	SBIW R28,8
00113e 940e 15bb 	CALL __SAVELOCR4
                +
001140 e020     +LDI R18 , LOW ( 0 )
001141 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
001142 89e8      	LDD  R30,Y+16
001143 83ec      	STD  Y+4,R30
001144 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2A:
001145 83ed      	STD  Y+5,R30
001146 85ee      	LDD  R30,Y+14
001147 85ff      	LDD  R31,Y+14+1
001148 940e 14c9 	CALL __ASRW8
00114a 83ee      	STD  Y+6,R30
00114b 85ee      	LDD  R30,Y+14
00114c 83ef      	STD  Y+7,R30
00114d 85ec      	LDD  R30,Y+12
00114e 85fd      	LDD  R31,Y+12+1
00114f 940e 14c9 	CALL __ASRW8
001151 87e8      	STD  Y+8,R30
001152 85ec      	LDD  R30,Y+12
001153 87e9      	STD  Y+9,R30
001154 e0e0      	LDI  R30,LOW(0)
001155 87ea      	STD  Y+10,R30
001156 87eb      	STD  Y+11,R30
001157 01fe      	MOVW R30,R28
001158 9634      	ADIW R30,4
001159 93fa      	ST   -Y,R31
00115a 93ea      	ST   -Y,R30
00115b e0e6      	LDI  R30,LOW(6)
00115c e0f0      	LDI  R31,HIGH(6)
00115d 93fa      	ST   -Y,R31
00115e 93ea      	ST   -Y,R30
00115f 940e 076d 	CALL _CRC16
001161 018f      	MOVW R16,R30
001162 01f8      	MOVW R30,R16
001163 87ea      	STD  Y+10,R30
                +
001164 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
001165 e020     +LDI R18 , LOW ( 0 )
001166 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
001167 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2B:
001168 01de      	MOVW R26,R28
001169 9614      	ADIW R26,4
00116a 0fa2      	ADD  R26,R18
00116b 1fb3      	ADC  R27,R19
00116c 91ec      	LD   R30,X
00116d 93ea      	ST   -Y,R30
00116e 940c 0767 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
001170 e0e0      	LDI  R30,LOW(0)
001171 83e8      	ST   Y,R30
001172 83e9      	STD  Y+1,R30
001173 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
001174 85ae      	LDD  R26,Y+14
001175 85bf      	LDD  R27,Y+14+1
001176 940e 1574 	CALL __GETD1P
001178 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
001179 85ac      	LDD  R26,Y+12
00117a 85bd      	LDD  R27,Y+12+1
00117b 940e 1574 	CALL __GETD1P
00117d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
00117e 01df      	MOVW R26,R30
00117f 01cb      	MOVW R24,R22
                +
001180 e0e0     +LDI R30 , LOW ( 0x40000000 )
001181 e0f0     +LDI R31 , HIGH ( 0x40000000 )
001182 e060     +LDI R22 , BYTE3 ( 0x40000000 )
001183 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
001184 940e 144f 	CALL __DIVF21
001186 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30:
                +
001187 83ec     +STD Y + 4 , R30
001188 83fd     +STD Y + 4 + 1 , R31
001189 836e     +STD Y + 4 + 2 , R22
00118a 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00118b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x31:
                +
00118c 81ac     +LDD R26 , Y + 4
00118d 81bd     +LDD R27 , Y + 4 + 1
00118e 818e     +LDD R24 , Y + 4 + 2
00118f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
001190 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32:
                +
001191 e0e0     +LDI R30 , LOW ( 0x453B8000 )
001192 e8f0     +LDI R31 , HIGH ( 0x453B8000 )
001193 e36b     +LDI R22 , BYTE3 ( 0x453B8000 )
001194 e475     +LDI R23 , BYTE4 ( 0x453B8000 )
                 	__GETD1N 0x453B8000
001195 940e 1401 	CALL __MULF12
001197 940e 1340 	CALL __CFD1
001199 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
00119a e0e0      	LDI  R30,LOW(0)
00119b e0f0      	LDI  R31,HIGH(0)
00119c 93ed      	ST   X+,R30
00119d 93fc      	ST   X,R31
00119e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x34:
00119f 93fa      	ST   -Y,R31
0011a0 93ea      	ST   -Y,R30
0011a1 940e 079c 	CALL _RTU_WriteOperate0
0011a3 ce5e      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x35:
0011a4 93ea      	ST   -Y,R30
0011a5 e7e8      	LDI  R30,LOW(120)
0011a6 e0f0      	LDI  R31,HIGH(120)
0011a7 93fa      	ST   -Y,R31
0011a8 93ea      	ST   -Y,R30
0011a9 e0e1      	LDI  R30,LOW(1)
0011aa e0f0      	LDI  R31,HIGH(1)
0011ab cff3      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x36:
0011ac df5e      	RCALL SUBOPT_0x24
0011ad e0a0      	LDI  R26,0
0011ae 990c      	SBIC 0x1,4
0011af e0a1      	LDI  R26,1
0011b0 e0e0      	LDI  R30,0
0011b1 990d      	SBIC 0x1,5
0011b2 e0e1      	LDI  R30,1
0011b3 17ea      	CP   R30,R26
0011b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x37:
0011b5 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
0011b6 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
0011b7 940e 157a 	CALL __GETD1P_INC
0011b9 9731      	SBIW R30,1
0011ba 4060      	SBCI R22,0
0011bb 4070      	SBCI R23,0
0011bc 940e 1584 	CALL __PUTDP1_DEC
                +
0011be 5fef     +SUBI R30 , LOW ( - 1 )
0011bf 4fff     +SBCI R31 , HIGH ( - 1 )
0011c0 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0011c1 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
0011c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x38:
0011c3 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
0011c4 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
0011c5 940e 157a 	CALL __GETD1P_INC
0011c7 9731      	SBIW R30,1
0011c8 4060      	SBCI R22,0
0011c9 4070      	SBCI R23,0
0011ca 940e 1584 	CALL __PUTDP1_DEC
                +
0011cc 5fef     +SUBI R30 , LOW ( - 1 )
0011cd 4fff     +SBCI R31 , HIGH ( - 1 )
0011ce 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0011cf 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
0011d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39:
0011d1 93fa      	ST   -Y,R31
0011d2 93ea      	ST   -Y,R30
0011d3 940c 0ec5 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3A:
0011d5 dfb6      	RCALL SUBOPT_0x31
                +
0011d6 e0e0     +LDI R30 , LOW ( 0x41200000 )
0011d7 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0011d8 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0011d9 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0011da 940e 1401 	CALL __MULF12
0011dc cfaa      	RJMP SUBOPT_0x30
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3B:
                +
0011dd 81ec     +LDD R30 , Y + 4
0011de 81fd     +LDD R31 , Y + 4 + 1
0011df 816e     +LDD R22 , Y + 4 + 2
0011e0 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0011e1 85ac     +LDD R26 , Y + 12
0011e2 85bd     +LDD R27 , Y + 12 + 1
0011e3 858e     +LDD R24 , Y + 12 + 2
0011e4 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0011e5 940e 1494 	CALL __CMPF12
0011e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C:
                +
0011e8 85ac     +LDD R26 , Y + 12
0011e9 85bd     +LDD R27 , Y + 12 + 1
0011ea 858e     +LDD R24 , Y + 12 + 2
0011eb 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0011ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3D:
                +
0011ed eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0011ee ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0011ef ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0011f0 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0011f1 940e 1401 	CALL __MULF12
                +
0011f3 87ec     +STD Y + 12 , R30
0011f4 87fd     +STD Y + 12 + 1 , R31
0011f5 876e     +STD Y + 12 + 2 , R22
0011f6 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0011f7 5f3f      	SUBI R19,-LOW(1)
0011f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
                +
0011f9 e0e0     +LDI R30 , LOW ( 0x41200000 )
0011fa e0f0     +LDI R31 , HIGH ( 0x41200000 )
0011fb e260     +LDI R22 , BYTE3 ( 0x41200000 )
0011fc e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0011fd 940e 1401 	CALL __MULF12
0011ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
                +
001200 87ec     +STD Y + 12 , R30
001201 87fd     +STD Y + 12 + 1 , R31
001202 876e     +STD Y + 12 + 2 , R22
001203 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001204 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40:
                +
001205 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001206 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001207 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
001208 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
001209 940e 13b1 	CALL __ADDF12
00120b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x41:
                +
00120c eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00120d ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00120e ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00120f e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001210 940e 1401 	CALL __MULF12
001212 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
001213 940e 159a 	CALL __PUTPARD1
001215 940c 0dfb 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
001217 85a8      	LDD  R26,Y+8
001218 85b9      	LDD  R27,Y+8+1
001219 9611      	ADIW R26,1
00121a 87a8      	STD  Y+8,R26
00121b 87b9      	STD  Y+8+1,R27
00121c 9711      	SBIW R26,1
00121d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
00121e 2fe0      	MOV  R30,R16
00121f 5de0      	SUBI R30,-LOW(48)
001220 93ec      	ST   X,R30
001221 2fe0      	MOV  R30,R16
001222 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x45:
001223 85e8      	LDD  R30,Y+8
001224 85f9      	LDD  R31,Y+8+1
001225 9631      	ADIW R30,1
001226 87e8      	STD  Y+8,R30
001227 87f9      	STD  Y+8+1,R31
001228 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x46:
001229 932a      	ST   -Y,R18
00122a 81ef      	LDD  R30,Y+7
00122b 85f8      	LDD  R31,Y+7+1
00122c 93fa      	ST   -Y,R31
00122d 93ea      	ST   -Y,R30
00122e 85eb      	LDD  R30,Y+11
00122f 85fc      	LDD  R31,Y+11+1
001230 9509      	ICALL
001231 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x47:
                +
001232 01fe     +MOVW R30 , R28
001233 5ae6     +SUBI R30 , LOW ( - 90 )
001234 4fff     +SBCI R31 , HIGH ( - 90 )
001235 9001     +LD R0 , Z +
001236 81f0     +LD R31 , Z
001237 2de0     +MOV R30 , R0
                 	__GETW1SX 90
001238 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x48:
001239 9734      	SBIW R30,4
                +
00123a 01de     +MOVW R26 , R28
00123b 5aa6     +SUBI R26 , LOW ( - 90 )
00123c 4fbf     +SBCI R27 , HIGH ( - 90 )
00123d 93ed     +ST X + , R30
00123e 93fc     +ST X , R31
                 	__PUTW1SX 90
00123f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x49:
001240 81ef      	LDD  R30,Y+7
001241 85f8      	LDD  R31,Y+7+1
001242 93fa      	ST   -Y,R31
001243 93ea      	ST   -Y,R30
001244 85eb      	LDD  R30,Y+11
001245 85fc      	LDD  R31,Y+11+1
001246 9509      	ICALL
001247 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x4A:
                +
001248 01de     +MOVW R26 , R28
001249 5aa6     +SUBI R26 , LOW ( - 90 )
00124a 4fbf     +SBCI R27 , HIGH ( - 90 )
00124b 900d     +LD R0 , X +
00124c 91bc     +LD R27 , X
00124d 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00124e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4B:
                +
00124f 87ea     +STD Y + 10 , R30
001250 87fb     +STD Y + 10 + 1 , R31
001251 876c     +STD Y + 10 + 2 , R22
001252 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
001253 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4C:
001254 dfdd      	RCALL SUBOPT_0x47
001255 cfe3      	RJMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4D:
                +
001256 85ea     +LDD R30 , Y + 10
001257 85fb     +LDD R31 , Y + 10 + 1
001258 856c     +LDD R22 , Y + 10 + 2
001259 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00125a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4E:
00125b 87ee      	STD  Y+14,R30
00125c 87ff      	STD  Y+14+1,R31
00125d 93fa      	ST   -Y,R31
00125e 93ea      	ST   -Y,R30
00125f 940e 0ed0 	CALL _strlen
001261 2f1e      	MOV  R17,R30
001262 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4F:
001263 dfe4      	RCALL SUBOPT_0x4A
001264 9614      	ADIW R26,4
001265 940e 1570 	CALL __GETW1P
001267 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x50:
                +
001268 8be8     +STD Y + 16 , R30
001269 8bf9     +STD Y + 16 + 1 , R31
00126a 8b6a     +STD Y + 16 + 2 , R22
00126b 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00126c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x51:
00126d 7f0b      	ANDI R16,LOW(251)
00126e 89ed      	LDD  R30,Y+21
00126f 93ea      	ST   -Y,R30
                +
001270 01fe     +MOVW R30 , R28
001271 5ae9     +SUBI R30 , LOW ( - 87 )
001272 4fff     +SBCI R31 , HIGH ( - 87 )
001273 9001     +LD R0 , Z +
001274 81f0     +LD R31 , Z
001275 2de0     +MOV R30 , R0
                 	__GETW1SX 87
001276 93fa      	ST   -Y,R31
001277 93ea      	ST   -Y,R30
                +
001278 01fe     +MOVW R30 , R28
001279 5ae5     +SUBI R30 , LOW ( - 91 )
00127a 4fff     +SBCI R31 , HIGH ( - 91 )
00127b 9001     +LD R0 , Z +
00127c 81f0     +LD R31 , Z
00127d 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00127e 9509      	ICALL
00127f 3050      	CPI  R21,0
001280 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x52:
                +
001281 89e8     +LDD R30 , Y + 16
001282 89f9     +LDD R31 , Y + 16 + 1
001283 896a     +LDD R22 , Y + 16 + 2
001284 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
001285 85aa     +LDD R26 , Y + 10
001286 85bb     +LDD R27 , Y + 10 + 1
001287 858c     +LDD R24 , Y + 10 + 2
001288 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
001289 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x53:
00128a 01de      	MOVW R26,R28
00128b 961c      	ADIW R26,12
00128c 940e 14b4 	CALL __ADDW2R15
00128e 940e 1570 	CALL __GETW1P
001290 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x54:
001291 940e 14b4 	CALL __ADDW2R15
001293 940e 1570 	CALL __GETW1P
001295 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
001296 933a      	ST   -Y,R19
001297 940e 0ead 	CALL _isspace
001299 30e0      	CPI  R30,0
00129a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x56:
00129b 01fe      	MOVW R30,R28
00129c 963d      	ADIW R30,13
00129d 93fa      	ST   -Y,R31
00129e 93ea      	ST   -Y,R30
00129f 89e8      	LDD  R30,Y+16
0012a0 89f9      	LDD  R31,Y+16+1
0012a1 93fa      	ST   -Y,R31
0012a2 93ea      	ST   -Y,R30
0012a3 89ec      	LDD  R30,Y+20
0012a4 89fd      	LDD  R31,Y+20+1
0012a5 9509      	ICALL
0012a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x57:
0012a7 85ae      	LDD  R26,Y+14
0012a8 85bf      	LDD  R27,Y+14+1
0012a9 91ac      	LD   R26,X
0012aa 30a0      	CPI  R26,0
0012ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x58:
0012ac 89ea      	LDD  R30,Y+18
0012ad 89fb      	LDD  R31,Y+18+1
0012ae 9734      	SBIW R30,4
0012af 8bea      	STD  Y+18,R30
0012b0 8bfb      	STD  Y+18+1,R31
0012b1 89aa      	LDD  R26,Y+18
0012b2 89bb      	LDD  R27,Y+18+1
0012b3 9614      	ADIW R26,4
0012b4 910d      	LD   R16,X+
0012b5 911c      	LD   R17,X
0012b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x59:
0012b7 940e 1589 	CALL __GETD1S0
0012b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5A:
                +
0012ba 81ad     +LDD R26 , Y + 5
0012bb 81be     +LDD R27 , Y + 5 + 1
0012bc 818f     +LDD R24 , Y + 5 + 2
0012bd 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
0012be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5B:
                +
0012bf 83ed     +STD Y + 5 , R30
0012c0 83fe     +STD Y + 5 + 1 , R31
0012c1 836f     +STD Y + 5 + 2 , R22
0012c2 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
0012c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5C:
                +
0012c4 81ed     +LDD R30 , Y + 5
0012c5 81fe     +LDD R31 , Y + 5 + 1
0012c6 816f     +LDD R22 , Y + 5 + 2
0012c7 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
0012c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
0012c9 dff0      	RCALL SUBOPT_0x5A
                +
0012ca e0e0     +LDI R30 , LOW ( 0x3F000000 )
0012cb e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0012cc e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0012cd e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0012ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5E:
                +
0012cf 81a9     +LDD R26 , Y + 1
0012d0 81ba     +LDD R27 , Y + 1 + 1
0012d1 818b     +LDD R24 , Y + 1 + 2
0012d2 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
0012d3 940e 1401 	CALL __MULF12
0012d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5F:
0012d6 81ee      	LDD  R30,Y+6
0012d7 81ff      	LDD  R31,Y+6+1
0012d8 93fa      	ST   -Y,R31
0012d9 93ea      	ST   -Y,R30
0012da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x60:
                +
0012db 87e9     +STD Y + 9 , R30
0012dc 87fa     +STD Y + 9 + 1 , R31
0012dd 876b     +STD Y + 9 + 2 , R22
0012de 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0012df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x61:
0012e0 81ae      	LDD  R26,Y+6
0012e1 81bf      	LDD  R27,Y+6+1
0012e2 9611      	ADIW R26,1
0012e3 83ae      	STD  Y+6,R26
0012e4 83bf      	STD  Y+6+1,R27
0012e5 9711      	SBIW R26,1
0012e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x62:
                +
0012e7 81aa     +LDD R26 , Y + 2
0012e8 81bb     +LDD R27 , Y + 2 + 1
0012e9 818c     +LDD R24 , Y + 2 + 2
0012ea 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0012eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x63:
                +
0012ec 83ea     +STD Y + 2 , R30
0012ed 83fb     +STD Y + 2 + 1 , R31
0012ee 836c     +STD Y + 2 + 2 , R22
0012ef 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0012f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x64:
                +
0012f1 81ea     +LDD R30 , Y + 2
0012f2 81fb     +LDD R31 , Y + 2 + 1
0012f3 816c     +LDD R22 , Y + 2 + 2
0012f4 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0012f5 85a9     +LDD R26 , Y + 9
0012f6 85ba     +LDD R27 , Y + 9 + 1
0012f7 858b     +LDD R24 , Y + 9 + 2
0012f8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0012f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x65:
                +
0012fa 85a9     +LDD R26 , Y + 9
0012fb 85ba     +LDD R27 , Y + 9 + 1
0012fc 858b     +LDD R24 , Y + 9 + 2
0012fd 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0012fe 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0012ff 91e9      	ld   r30,y+
001300 91f9      	ld   r31,y+
001301 9630      	adiw r30,0
001302 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001303 e686     +LDI R24 , LOW ( 0xE66 )
001304 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
001305 9701     +SBIW R24 , 1
001306 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
001307 95a8      	wdr
001308 9731      	sbiw r30,1
001309 f7c9      	brne __delay_ms0
                 __delay_ms1:
00130a 9508      	ret
                 
                 __ANEGF1:
00130b 9730      	SBIW R30,0
00130c 4060      	SBCI R22,0
00130d 4070      	SBCI R23,0
00130e f009      	BREQ __ANEGF10
00130f 5870      	SUBI R23,0x80
                 __ANEGF10:
001310 9508      	RET
                 
                 __ROUND_REPACK:
001311 2355      	TST  R21
001312 f442      	BRPL __REPACK
001313 3850      	CPI  R21,0x80
001314 f411      	BRNE __ROUND_REPACK0
001315 ffe0      	SBRS R30,0
001316 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001317 9631      	ADIW R30,1
001318 1f69      	ADC  R22,R25
001319 1f79      	ADC  R23,R25
00131a f06b      	BRVS __REPACK1
                 
                 __REPACK:
00131b e850      	LDI  R21,0x80
00131c 2757      	EOR  R21,R23
00131d f411      	BRNE __REPACK0
00131e 935f      	PUSH R21
00131f c0cf      	RJMP __ZERORES
                 __REPACK0:
001320 3f5f      	CPI  R21,0xFF
001321 f031      	BREQ __REPACK1
001322 0f66      	LSL  R22
001323 0c00      	LSL  R0
001324 9557      	ROR  R21
001325 9567      	ROR  R22
001326 2f75      	MOV  R23,R21
001327 9508      	RET
                 __REPACK1:
001328 935f      	PUSH R21
001329 2000      	TST  R0
00132a f00a      	BRMI __REPACK2
00132b c0cf      	RJMP __MAXRES
                 __REPACK2:
00132c c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00132d e850      	LDI  R21,0x80
00132e 2e19      	MOV  R1,R25
00132f 2215      	AND  R1,R21
001330 0f88      	LSL  R24
001331 1f99      	ROL  R25
001332 2795      	EOR  R25,R21
001333 0f55      	LSL  R21
001334 9587      	ROR  R24
                 
                 __UNPACK1:
001335 e850      	LDI  R21,0x80
001336 2e07      	MOV  R0,R23
001337 2205      	AND  R0,R21
001338 0f66      	LSL  R22
001339 1f77      	ROL  R23
00133a 2775      	EOR  R23,R21
00133b 0f55      	LSL  R21
00133c 9567      	ROR  R22
00133d 9508      	RET
                 
                 __CFD1U:
00133e 9468      	SET
00133f c001      	RJMP __CFD1U0
                 __CFD1:
001340 94e8      	CLT
                 __CFD1U0:
001341 935f      	PUSH R21
001342 dff2      	RCALL __UNPACK1
001343 3870      	CPI  R23,0x80
001344 f018      	BRLO __CFD10
001345 3f7f      	CPI  R23,0xFF
001346 f408      	BRCC __CFD10
001347 c0a7      	RJMP __ZERORES
                 __CFD10:
001348 e156      	LDI  R21,22
001349 1b57      	SUB  R21,R23
00134a f4aa      	BRPL __CFD11
00134b 9551      	NEG  R21
00134c 3058      	CPI  R21,8
00134d f40e      	BRTC __CFD19
00134e 3059      	CPI  R21,9
                 __CFD19:
00134f f030      	BRLO __CFD17
001350 efef      	SER  R30
001351 efff      	SER  R31
001352 ef6f      	SER  R22
001353 e77f      	LDI  R23,0x7F
001354 f977      	BLD  R23,7
001355 c01a      	RJMP __CFD15
                 __CFD17:
001356 2777      	CLR  R23
001357 2355      	TST  R21
001358 f0b9      	BREQ __CFD15
                 __CFD18:
001359 0fee      	LSL  R30
00135a 1fff      	ROL  R31
00135b 1f66      	ROL  R22
00135c 1f77      	ROL  R23
00135d 955a      	DEC  R21
00135e f7d1      	BRNE __CFD18
00135f c010      	RJMP __CFD15
                 __CFD11:
001360 2777      	CLR  R23
                 __CFD12:
001361 3058      	CPI  R21,8
001362 f028      	BRLO __CFD13
001363 2fef      	MOV  R30,R31
001364 2ff6      	MOV  R31,R22
001365 2f67      	MOV  R22,R23
001366 5058      	SUBI R21,8
001367 cff9      	RJMP __CFD12
                 __CFD13:
001368 2355      	TST  R21
001369 f031      	BREQ __CFD15
                 __CFD14:
00136a 9576      	LSR  R23
00136b 9567      	ROR  R22
00136c 95f7      	ROR  R31
00136d 95e7      	ROR  R30
00136e 955a      	DEC  R21
00136f f7d1      	BRNE __CFD14
                 __CFD15:
001370 2000      	TST  R0
001371 f40a      	BRPL __CFD16
001372 d14e      	RCALL __ANEGD1
                 __CFD16:
001373 915f      	POP  R21
001374 9508      	RET
                 
                 __CDF1U:
001375 9468      	SET
001376 c001      	RJMP __CDF1U0
                 __CDF1:
001377 94e8      	CLT
                 __CDF1U0:
001378 9730      	SBIW R30,0
001379 4060      	SBCI R22,0
00137a 4070      	SBCI R23,0
00137b f0b1      	BREQ __CDF10
00137c 2400      	CLR  R0
00137d f026      	BRTS __CDF11
00137e 2377      	TST  R23
00137f f412      	BRPL __CDF11
001380 9400      	COM  R0
001381 d13f      	RCALL __ANEGD1
                 __CDF11:
001382 2e17      	MOV  R1,R23
001383 e17e      	LDI  R23,30
001384 2011      	TST  R1
                 __CDF12:
001385 f032      	BRMI __CDF13
001386 957a      	DEC  R23
001387 0fee      	LSL  R30
001388 1fff      	ROL  R31
001389 1f66      	ROL  R22
00138a 1c11      	ROL  R1
00138b cff9      	RJMP __CDF12
                 __CDF13:
00138c 2fef      	MOV  R30,R31
00138d 2ff6      	MOV  R31,R22
00138e 2d61      	MOV  R22,R1
00138f 935f      	PUSH R21
001390 df8a      	RCALL __REPACK
001391 915f      	POP  R21
                 __CDF10:
001392 9508      	RET
                 
                 __SWAPACC:
001393 934f      	PUSH R20
001394 01af      	MOVW R20,R30
001395 01fd      	MOVW R30,R26
001396 01da      	MOVW R26,R20
001397 01ab      	MOVW R20,R22
001398 01bc      	MOVW R22,R24
001399 01ca      	MOVW R24,R20
00139a 2d40      	MOV  R20,R0
00139b 2c01      	MOV  R0,R1
00139c 2e14      	MOV  R1,R20
00139d 914f      	POP  R20
00139e 9508      	RET
                 
                 __UADD12:
00139f 0fea      	ADD  R30,R26
0013a0 1ffb      	ADC  R31,R27
0013a1 1f68      	ADC  R22,R24
0013a2 9508      	RET
                 
                 __NEGMAN1:
0013a3 95e0      	COM  R30
0013a4 95f0      	COM  R31
0013a5 9560      	COM  R22
0013a6 5fef      	SUBI R30,-1
0013a7 4fff      	SBCI R31,-1
0013a8 4f6f      	SBCI R22,-1
0013a9 9508      	RET
                 
                 __SUBF12:
0013aa 935f      	PUSH R21
0013ab df81      	RCALL __UNPACK
0013ac 3890      	CPI  R25,0x80
0013ad f171      	BREQ __ADDF129
0013ae e850      	LDI  R21,0x80
0013af 2615      	EOR  R1,R21
                 
0013b0 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0013b1 935f      	PUSH R21
0013b2 df7a      	RCALL __UNPACK
0013b3 3890      	CPI  R25,0x80
0013b4 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0013b5 3870      	CPI  R23,0x80
0013b6 f121      	BREQ __ADDF128
                 __ADDF121:
0013b7 2f57      	MOV  R21,R23
0013b8 1b59      	SUB  R21,R25
0013b9 f12b      	BRVS __ADDF1211
0013ba f412      	BRPL __ADDF122
0013bb dfd7      	RCALL __SWAPACC
0013bc cffa      	RJMP __ADDF121
                 __ADDF122:
0013bd 3158      	CPI  R21,24
0013be f018      	BRLO __ADDF123
0013bf 27aa      	CLR  R26
0013c0 27bb      	CLR  R27
0013c1 2788      	CLR  R24
                 __ADDF123:
0013c2 3058      	CPI  R21,8
0013c3 f028      	BRLO __ADDF124
0013c4 2fab      	MOV  R26,R27
0013c5 2fb8      	MOV  R27,R24
0013c6 2788      	CLR  R24
0013c7 5058      	SUBI R21,8
0013c8 cff9      	RJMP __ADDF123
                 __ADDF124:
0013c9 2355      	TST  R21
0013ca f029      	BREQ __ADDF126
                 __ADDF125:
0013cb 9586      	LSR  R24
0013cc 95b7      	ROR  R27
0013cd 95a7      	ROR  R26
0013ce 955a      	DEC  R21
0013cf f7d9      	BRNE __ADDF125
                 __ADDF126:
0013d0 2d50      	MOV  R21,R0
0013d1 2551      	EOR  R21,R1
0013d2 f072      	BRMI __ADDF127
0013d3 dfcb      	RCALL __UADD12
0013d4 f438      	BRCC __ADDF129
0013d5 9567      	ROR  R22
0013d6 95f7      	ROR  R31
0013d7 95e7      	ROR  R30
0013d8 9573      	INC  R23
0013d9 f413      	BRVC __ADDF129
0013da c020      	RJMP __MAXRES
                 __ADDF128:
0013db dfb7      	RCALL __SWAPACC
                 __ADDF129:
0013dc df3e      	RCALL __REPACK
0013dd 915f      	POP  R21
0013de 9508      	RET
                 __ADDF1211:
0013df f7d8      	BRCC __ADDF128
0013e0 cffb      	RJMP __ADDF129
                 __ADDF127:
0013e1 1bea      	SUB  R30,R26
0013e2 0bfb      	SBC  R31,R27
0013e3 0b68      	SBC  R22,R24
0013e4 f051      	BREQ __ZERORES
0013e5 f410      	BRCC __ADDF1210
0013e6 9400      	COM  R0
0013e7 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0013e8 2366      	TST  R22
0013e9 f392      	BRMI __ADDF129
0013ea 0fee      	LSL  R30
0013eb 1fff      	ROL  R31
0013ec 1f66      	ROL  R22
0013ed 957a      	DEC  R23
0013ee f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0013ef 27ee      	CLR  R30
0013f0 27ff      	CLR  R31
0013f1 2766      	CLR  R22
0013f2 2777      	CLR  R23
0013f3 915f      	POP  R21
0013f4 9508      	RET
                 
                 __MINRES:
0013f5 efef      	SER  R30
0013f6 efff      	SER  R31
0013f7 e76f      	LDI  R22,0x7F
0013f8 ef7f      	SER  R23
0013f9 915f      	POP  R21
0013fa 9508      	RET
                 
                 __MAXRES:
0013fb efef      	SER  R30
0013fc efff      	SER  R31
0013fd e76f      	LDI  R22,0x7F
0013fe e77f      	LDI  R23,0x7F
0013ff 915f      	POP  R21
001400 9508      	RET
                 
                 __MULF12:
001401 935f      	PUSH R21
001402 df2a      	RCALL __UNPACK
001403 3870      	CPI  R23,0x80
001404 f351      	BREQ __ZERORES
001405 3890      	CPI  R25,0x80
001406 f341      	BREQ __ZERORES
001407 2401      	EOR  R0,R1
001408 9408      	SEC
001409 1f79      	ADC  R23,R25
00140a f423      	BRVC __MULF124
00140b f31c      	BRLT __ZERORES
                 __MULF125:
00140c 2000      	TST  R0
00140d f33a      	BRMI __MINRES
00140e cfec      	RJMP __MAXRES
                 __MULF124:
00140f 920f      	PUSH R0
001410 931f      	PUSH R17
001411 932f      	PUSH R18
001412 933f      	PUSH R19
001413 934f      	PUSH R20
001414 2711      	CLR  R17
001415 2722      	CLR  R18
001416 2799      	CLR  R25
001417 9f68      	MUL  R22,R24
001418 01a0      	MOVW R20,R0
001419 9f8f      	MUL  R24,R31
00141a 2d30      	MOV  R19,R0
00141b 0d41      	ADD  R20,R1
00141c 1f59      	ADC  R21,R25
00141d 9f6b      	MUL  R22,R27
00141e 0d30      	ADD  R19,R0
00141f 1d41      	ADC  R20,R1
001420 1f59      	ADC  R21,R25
001421 9f8e      	MUL  R24,R30
001422 d027      	RCALL __MULF126
001423 9fbf      	MUL  R27,R31
001424 d025      	RCALL __MULF126
001425 9f6a      	MUL  R22,R26
001426 d023      	RCALL __MULF126
001427 9fbe      	MUL  R27,R30
001428 d01d      	RCALL __MULF127
001429 9faf      	MUL  R26,R31
00142a d01b      	RCALL __MULF127
00142b 9fae      	MUL  R26,R30
00142c 0d11      	ADD  R17,R1
00142d 1f29      	ADC  R18,R25
00142e 1f39      	ADC  R19,R25
00142f 1f49      	ADC  R20,R25
001430 1f59      	ADC  R21,R25
001431 2fe3      	MOV  R30,R19
001432 2ff4      	MOV  R31,R20
001433 2f65      	MOV  R22,R21
001434 2f52      	MOV  R21,R18
001435 914f      	POP  R20
001436 913f      	POP  R19
001437 912f      	POP  R18
001438 911f      	POP  R17
001439 900f      	POP  R0
00143a 2366      	TST  R22
00143b f02a      	BRMI __MULF122
00143c 0f55      	LSL  R21
00143d 1fee      	ROL  R30
00143e 1fff      	ROL  R31
00143f 1f66      	ROL  R22
001440 c002      	RJMP __MULF123
                 __MULF122:
001441 9573      	INC  R23
001442 f24b      	BRVS __MULF125
                 __MULF123:
001443 decd      	RCALL __ROUND_REPACK
001444 915f      	POP  R21
001445 9508      	RET
                 
                 __MULF127:
001446 0d10      	ADD  R17,R0
001447 1d21      	ADC  R18,R1
001448 1f39      	ADC  R19,R25
001449 c002      	RJMP __MULF128
                 __MULF126:
00144a 0d20      	ADD  R18,R0
00144b 1d31      	ADC  R19,R1
                 __MULF128:
00144c 1f49      	ADC  R20,R25
00144d 1f59      	ADC  R21,R25
00144e 9508      	RET
                 
                 __DIVF21:
00144f 935f      	PUSH R21
001450 dedc      	RCALL __UNPACK
001451 3870      	CPI  R23,0x80
001452 f421      	BRNE __DIVF210
001453 2011      	TST  R1
                 __DIVF211:
001454 f40a      	BRPL __DIVF219
001455 cf9f      	RJMP __MINRES
                 __DIVF219:
001456 cfa4      	RJMP __MAXRES
                 __DIVF210:
001457 3890      	CPI  R25,0x80
001458 f409      	BRNE __DIVF218
                 __DIVF217:
001459 cf95      	RJMP __ZERORES
                 __DIVF218:
00145a 2401      	EOR  R0,R1
00145b 9408      	SEC
00145c 0b97      	SBC  R25,R23
00145d f41b      	BRVC __DIVF216
00145e f3d4      	BRLT __DIVF217
00145f 2000      	TST  R0
001460 cff3      	RJMP __DIVF211
                 __DIVF216:
001461 2f79      	MOV  R23,R25
001462 931f      	PUSH R17
001463 932f      	PUSH R18
001464 933f      	PUSH R19
001465 934f      	PUSH R20
001466 2411      	CLR  R1
001467 2711      	CLR  R17
001468 2722      	CLR  R18
001469 2733      	CLR  R19
00146a 2744      	CLR  R20
00146b 2755      	CLR  R21
00146c e290      	LDI  R25,32
                 __DIVF212:
00146d 17ae      	CP   R26,R30
00146e 07bf      	CPC  R27,R31
00146f 0786      	CPC  R24,R22
001470 0741      	CPC  R20,R17
001471 f030      	BRLO __DIVF213
001472 1bae      	SUB  R26,R30
001473 0bbf      	SBC  R27,R31
001474 0b86      	SBC  R24,R22
001475 0b41      	SBC  R20,R17
001476 9408      	SEC
001477 c001      	RJMP __DIVF214
                 __DIVF213:
001478 9488      	CLC
                 __DIVF214:
001479 1f55      	ROL  R21
00147a 1f22      	ROL  R18
00147b 1f33      	ROL  R19
00147c 1c11      	ROL  R1
00147d 1faa      	ROL  R26
00147e 1fbb      	ROL  R27
00147f 1f88      	ROL  R24
001480 1f44      	ROL  R20
001481 959a      	DEC  R25
001482 f751      	BRNE __DIVF212
001483 01f9      	MOVW R30,R18
001484 2d61      	MOV  R22,R1
001485 914f      	POP  R20
001486 913f      	POP  R19
001487 912f      	POP  R18
001488 911f      	POP  R17
001489 2366      	TST  R22
00148a f032      	BRMI __DIVF215
00148b 0f55      	LSL  R21
00148c 1fee      	ROL  R30
00148d 1fff      	ROL  R31
00148e 1f66      	ROL  R22
00148f 957a      	DEC  R23
001490 f243      	BRVS __DIVF217
                 __DIVF215:
001491 de7f      	RCALL __ROUND_REPACK
001492 915f      	POP  R21
001493 9508      	RET
                 
                 __CMPF12:
001494 2399      	TST  R25
001495 f09a      	BRMI __CMPF120
001496 2377      	TST  R23
001497 f042      	BRMI __CMPF121
001498 1797      	CP   R25,R23
001499 f048      	BRLO __CMPF122
00149a f429      	BRNE __CMPF121
00149b 17ae      	CP   R26,R30
00149c 07bf      	CPC  R27,R31
00149d 0786      	CPC  R24,R22
00149e f020      	BRLO __CMPF122
00149f f031      	BREQ __CMPF123
                 __CMPF121:
0014a0 9498      	CLZ
0014a1 9488      	CLC
0014a2 9508      	RET
                 __CMPF122:
0014a3 9498      	CLZ
0014a4 9408      	SEC
0014a5 9508      	RET
                 __CMPF123:
0014a6 9418      	SEZ
0014a7 9488      	CLC
0014a8 9508      	RET
                 __CMPF120:
0014a9 2377      	TST  R23
0014aa f7c2      	BRPL __CMPF122
0014ab 1797      	CP   R25,R23
0014ac f398      	BRLO __CMPF121
0014ad f7a9      	BRNE __CMPF122
0014ae 17ea      	CP   R30,R26
0014af 07fb      	CPC  R31,R27
0014b0 0768      	CPC  R22,R24
0014b1 f388      	BRLO __CMPF122
0014b2 f399      	BREQ __CMPF123
0014b3 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0014b4 2400      	CLR  R0
0014b5 0daf      	ADD  R26,R15
0014b6 1db0      	ADC  R27,R0
0014b7 9508      	RET
                 
                 __ADDD12:
0014b8 0fea      	ADD  R30,R26
0014b9 1ffb      	ADC  R31,R27
0014ba 1f68      	ADC  R22,R24
0014bb 1f79      	ADC  R23,R25
0014bc 9508      	RET
                 
                 __ANEGW1:
0014bd 95f1      	NEG  R31
0014be 95e1      	NEG  R30
0014bf 40f0      	SBCI R31,0
0014c0 9508      	RET
                 
                 __ANEGD1:
0014c1 95f0      	COM  R31
0014c2 9560      	COM  R22
0014c3 9570      	COM  R23
0014c4 95e1      	NEG  R30
0014c5 4fff      	SBCI R31,-1
0014c6 4f6f      	SBCI R22,-1
0014c7 4f7f      	SBCI R23,-1
0014c8 9508      	RET
                 
                 __ASRW8:
0014c9 2fef      	MOV  R30,R31
0014ca 27ff      	CLR  R31
0014cb fde7      	SBRC R30,7
0014cc efff      	SER  R31
0014cd 9508      	RET
                 
                 __CBD1:
0014ce 2ffe      	MOV  R31,R30
0014cf 0fff      	ADD  R31,R31
0014d0 0bff      	SBC  R31,R31
0014d1 2f6f      	MOV  R22,R31
0014d2 2f7f      	MOV  R23,R31
0014d3 9508      	RET
                 
                 __CWD1:
0014d4 2f6f      	MOV  R22,R31
0014d5 0f66      	ADD  R22,R22
0014d6 0b66      	SBC  R22,R22
0014d7 2f76      	MOV  R23,R22
0014d8 9508      	RET
                 
                 __CWD2:
0014d9 2f8b      	MOV  R24,R27
0014da 0f88      	ADD  R24,R24
0014db 0b88      	SBC  R24,R24
0014dc 2f98      	MOV  R25,R24
0014dd 9508      	RET
                 
                 __MULD12U:
0014de 9f7a      	MUL  R23,R26
0014df 2d70      	MOV  R23,R0
0014e0 9f6b      	MUL  R22,R27
0014e1 0d70      	ADD  R23,R0
0014e2 9ff8      	MUL  R31,R24
0014e3 0d70      	ADD  R23,R0
0014e4 9fe9      	MUL  R30,R25
0014e5 0d70      	ADD  R23,R0
0014e6 9f6a      	MUL  R22,R26
0014e7 2d60      	MOV  R22,R0
0014e8 0d71      	ADD  R23,R1
0014e9 9ffb      	MUL  R31,R27
0014ea 0d60      	ADD  R22,R0
0014eb 1d71      	ADC  R23,R1
0014ec 9fe8      	MUL  R30,R24
0014ed 0d60      	ADD  R22,R0
0014ee 1d71      	ADC  R23,R1
0014ef 2788      	CLR  R24
0014f0 9ffa      	MUL  R31,R26
0014f1 2df0      	MOV  R31,R0
0014f2 0d61      	ADD  R22,R1
0014f3 1f78      	ADC  R23,R24
0014f4 9feb      	MUL  R30,R27
0014f5 0df0      	ADD  R31,R0
0014f6 1d61      	ADC  R22,R1
0014f7 1f78      	ADC  R23,R24
0014f8 9fea      	MUL  R30,R26
0014f9 2de0      	MOV  R30,R0
0014fa 0df1      	ADD  R31,R1
0014fb 1f68      	ADC  R22,R24
0014fc 1f78      	ADC  R23,R24
0014fd 9508      	RET
                 
                 __MULB1W2U:
0014fe 2f6e      	MOV  R22,R30
0014ff 9f6a      	MUL  R22,R26
001500 01f0      	MOVW R30,R0
001501 9f6b      	MUL  R22,R27
001502 0df0      	ADD  R31,R0
001503 9508      	RET
                 
                 __MULD12:
001504 d058      	RCALL __CHKSIGND
001505 dfd8      	RCALL __MULD12U
001506 f40e      	BRTC __MULD121
001507 dfb9      	RCALL __ANEGD1
                 __MULD121:
001508 9508      	RET
                 
                 __DIVB21U:
001509 2400      	CLR  R0
00150a e098      	LDI  R25,8
                 __DIVB21U1:
00150b 0faa      	LSL  R26
00150c 1c00      	ROL  R0
00150d 1a0e      	SUB  R0,R30
00150e f410      	BRCC __DIVB21U2
00150f 0e0e      	ADD  R0,R30
001510 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
001511 60a1      	SBR  R26,1
                 __DIVB21U3:
001512 959a      	DEC  R25
001513 f7b9      	BRNE __DIVB21U1
001514 2fea      	MOV  R30,R26
001515 2da0      	MOV  R26,R0
001516 9508      	RET
                 
                 __DIVB21:
001517 d039      	RCALL __CHKSIGNB
001518 dff0      	RCALL __DIVB21U
001519 f40e      	BRTC __DIVB211
00151a 95e1      	NEG  R30
                 __DIVB211:
00151b 9508      	RET
                 
                 __DIVD21U:
00151c 933f      	PUSH R19
00151d 934f      	PUSH R20
00151e 935f      	PUSH R21
00151f 2400      	CLR  R0
001520 2411      	CLR  R1
001521 2744      	CLR  R20
001522 2755      	CLR  R21
001523 e230      	LDI  R19,32
                 __DIVD21U1:
001524 0faa      	LSL  R26
001525 1fbb      	ROL  R27
001526 1f88      	ROL  R24
001527 1f99      	ROL  R25
001528 1c00      	ROL  R0
001529 1c11      	ROL  R1
00152a 1f44      	ROL  R20
00152b 1f55      	ROL  R21
00152c 1a0e      	SUB  R0,R30
00152d 0a1f      	SBC  R1,R31
00152e 0b46      	SBC  R20,R22
00152f 0b57      	SBC  R21,R23
001530 f428      	BRCC __DIVD21U2
001531 0e0e      	ADD  R0,R30
001532 1e1f      	ADC  R1,R31
001533 1f46      	ADC  R20,R22
001534 1f57      	ADC  R21,R23
001535 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001536 60a1      	SBR  R26,1
                 __DIVD21U3:
001537 953a      	DEC  R19
001538 f759      	BRNE __DIVD21U1
001539 01fd      	MOVW R30,R26
00153a 01bc      	MOVW R22,R24
00153b 01d0      	MOVW R26,R0
00153c 01ca      	MOVW R24,R20
00153d 915f      	POP  R21
00153e 914f      	POP  R20
00153f 913f      	POP  R19
001540 9508      	RET
                 
                 __MODB21:
001541 94e8      	CLT
001542 ffa7      	SBRS R26,7
001543 c002      	RJMP __MODB211
001544 95a1      	NEG  R26
001545 9468      	SET
                 __MODB211:
001546 fde7      	SBRC R30,7
001547 95e1      	NEG  R30
001548 dfc0      	RCALL __DIVB21U
001549 2fea      	MOV  R30,R26
00154a f40e      	BRTC __MODB212
00154b 95e1      	NEG  R30
                 __MODB212:
00154c 9508      	RET
                 
                 __MODD21U:
00154d dfce      	RCALL __DIVD21U
00154e 01fd      	MOVW R30,R26
00154f 01bc      	MOVW R22,R24
001550 9508      	RET
                 
                 __CHKSIGNB:
001551 94e8      	CLT
001552 ffe7      	SBRS R30,7
001553 c002      	RJMP __CHKSB1
001554 95e1      	NEG  R30
001555 9468      	SET
                 __CHKSB1:
001556 ffa7      	SBRS R26,7
001557 c004      	RJMP __CHKSB2
001558 95a1      	NEG  R26
001559 f800      	BLD  R0,0
00155a 9403      	INC  R0
00155b fa00      	BST  R0,0
                 __CHKSB2:
00155c 9508      	RET
                 
                 __CHKSIGND:
00155d 94e8      	CLT
00155e ff77      	SBRS R23,7
00155f c002      	RJMP __CHKSD1
001560 df60      	RCALL __ANEGD1
001561 9468      	SET
                 __CHKSD1:
001562 ff97      	SBRS R25,7
001563 c00b      	RJMP __CHKSD2
001564 2400      	CLR  R0
001565 95a0      	COM  R26
001566 95b0      	COM  R27
001567 9580      	COM  R24
001568 9590      	COM  R25
001569 9611      	ADIW R26,1
00156a 1d80      	ADC  R24,R0
00156b 1d90      	ADC  R25,R0
00156c f800      	BLD  R0,0
00156d 9403      	INC  R0
00156e fa00      	BST  R0,0
                 __CHKSD2:
00156f 9508      	RET
                 
                 __GETW1P:
001570 91ed      	LD   R30,X+
001571 91fc      	LD   R31,X
001572 9711      	SBIW R26,1
001573 9508      	RET
                 
                 __GETD1P:
001574 91ed      	LD   R30,X+
001575 91fd      	LD   R31,X+
001576 916d      	LD   R22,X+
001577 917c      	LD   R23,X
001578 9713      	SBIW R26,3
001579 9508      	RET
                 
                 __GETD1P_INC:
00157a 91ed      	LD   R30,X+
00157b 91fd      	LD   R31,X+
00157c 916d      	LD   R22,X+
00157d 917d      	LD   R23,X+
00157e 9508      	RET
                 
                 __PUTDP1:
00157f 93ed      	ST   X+,R30
001580 93fd      	ST   X+,R31
001581 936d      	ST   X+,R22
001582 937c      	ST   X,R23
001583 9508      	RET
                 
                 __PUTDP1_DEC:
001584 937e      	ST   -X,R23
001585 936e      	ST   -X,R22
001586 93fe      	ST   -X,R31
001587 93ee      	ST   -X,R30
001588 9508      	RET
                 
                 __GETD1S0:
001589 81e8      	LD   R30,Y
00158a 81f9      	LDD  R31,Y+1
00158b 816a      	LDD  R22,Y+2
00158c 817b      	LDD  R23,Y+3
00158d 9508      	RET
                 
                 __GETD2S0:
00158e 81a8      	LD   R26,Y
00158f 81b9      	LDD  R27,Y+1
001590 818a      	LDD  R24,Y+2
001591 819b      	LDD  R25,Y+3
001592 9508      	RET
                 
                 __PUTD1S0:
001593 83e8      	ST   Y,R30
001594 83f9      	STD  Y+1,R31
001595 836a      	STD  Y+2,R22
001596 837b      	STD  Y+3,R23
001597 9508      	RET
                 
                 __PUTPARD1L:
001598 e060      	LDI  R22,0
001599 e070      	LDI  R23,0
                 __PUTPARD1:
00159a 937a      	ST   -Y,R23
00159b 936a      	ST   -Y,R22
00159c 93fa      	ST   -Y,R31
00159d 93ea      	ST   -Y,R30
00159e 9508      	RET
                 
                 __CDF2U:
00159f 9468      	SET
0015a0 c001      	RJMP __CDF2U0
                 __CDF2:
0015a1 94e8      	CLT
                 __CDF2U0:
0015a2 d001      	RCALL __SWAPD12
0015a3 ddd4      	RCALL __CDF1U0
                 
                 __SWAPD12:
0015a4 2e18      	MOV  R1,R24
0015a5 2f86      	MOV  R24,R22
0015a6 2d61      	MOV  R22,R1
0015a7 2e19      	MOV  R1,R25
0015a8 2f97      	MOV  R25,R23
0015a9 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0015aa 2e1b      	MOV  R1,R27
0015ab 2fbf      	MOV  R27,R31
0015ac 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0015ad 2e1a      	MOV  R1,R26
0015ae 2fae      	MOV  R26,R30
0015af 2de1      	MOV  R30,R1
0015b0 9508      	RET
                 
                 __CPD10:
0015b1 9730      	SBIW R30,0
0015b2 4060      	SBCI R22,0
0015b3 4070      	SBCI R23,0
0015b4 9508      	RET
                 
                 __CPW02:
0015b5 2400      	CLR  R0
0015b6 160a      	CP   R0,R26
0015b7 060b      	CPC  R0,R27
0015b8 9508      	RET
                 
                 __SAVELOCR6:
0015b9 935a      	ST   -Y,R21
                 __SAVELOCR5:
0015ba 934a      	ST   -Y,R20
                 __SAVELOCR4:
0015bb 933a      	ST   -Y,R19
                 __SAVELOCR3:
0015bc 932a      	ST   -Y,R18
                 __SAVELOCR2:
0015bd 931a      	ST   -Y,R17
0015be 930a      	ST   -Y,R16
0015bf 9508      	RET
                 
                 __LOADLOCR6:
0015c0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0015c1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0015c2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0015c3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0015c4 8119      	LDD  R17,Y+1
0015c5 8108      	LD   R16,Y
0015c6 9508      	RET
                 
                 __INITLOCW:
0015c7 0fac      	ADD  R26,R28
0015c8 1fbd      	ADC  R27,R29
                 __INITLOC0:
0015c9 9005      	LPM  R0,Z+
0015ca 920d      	ST   X+,R0
0015cb 9701      	SBIW R24,1
0015cc f7e1      	BRNE __INITLOC0
0015cd 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 182 r1 :  77 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  76 r19:  79 r20:  59 r21: 105 r22: 236 r23: 215 
r24: 138 r25: 113 r26: 459 r27: 228 r28: 161 r29:   3 r30:1012 r31: 435 
x  : 336 y  : 654 z  : 114 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  38 add   :  31 
adiw  :  56 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  75 
brge  :  13 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  79 brpl  :   9 brsh  :  13 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   4 call  : 484 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  67 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  23 cpc   :  27 cpi   : 135 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  16 inc   :   4 jmp   :  53 ld    : 261 ldd   : 294 
ldi   : 498 lds   :  38 lpm   :  17 lsl   :  14 lsr   :   4 mov   : 115 
movw  : 232 mul   :  24 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  34 pop   :  75 push  :  75 rcall :  82 
ret   : 168 reti  :   6 rjmp  : 207 rol   :  32 ror   :  16 sbc   :  12 
sbci  : 150 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  54 sbr   :   4 
sbrc  :   5 sbrs  :  22 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 390 std   : 144 sts   :  35 sub   :   6 subi  : 172 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002b9c  10322    842  11164  131072   8.5%
[.dseg] 0x000100 0x00058e      0    142    142    4351   3.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
