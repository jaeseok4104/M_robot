
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Thu Jan 30 10:32:54 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _SRF02_CONVERTING_FLAG=R8
                 	.DEF _SRF02_WAIT_FLAG=R11
                 	.DEF _CHECK_GETS=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00ac 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0252 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0264 	JMP  _timer1_compb
00001c 940c 0000 	JMP  0x00
00001e 940c 0258 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 021d 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0238 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x7D:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 e2e0
000051 e6e4      	.DB  0x0,0x0,0x0,0x0,0xE0,0xE2,0xE4,0xE6
000052 eae8
000053 eeec
000054 0000
000055 0000      	.DB  0xE8,0xEA,0xEC,0xEE,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x86:
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000092 253c
000093 2c64
000094 6425
000095 003e      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x3E,0x0
000096 253c
000097 322e
000098 2c66
000099 2e25      	.DB  0x3C,0x25,0x2E,0x32,0x66,0x2C,0x25,0x2E
00009a 3266
00009b 003e      	.DB  0x66,0x32,0x3E,0x0
                 _0x2000000:
00009c 4e2d
00009d 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1138): warning: .cseg .db misalignment - padding zero byte
00009e 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1140): warning: .cseg .db misalignment - padding zero byte
00009f 0001      	.DB  0x1
                 _0x2080000:
0000a0 4e2d
0000a1 4e41
0000a2 4900
0000a3 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1143): warning: .cseg .db misalignment - padding zero byte
0000a4 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000a5 0008      	.DW  0x08
0000a6 0004      	.DW  0x04
0000a7 011c      	.DW  _0x86*2
                 
0000a8 0001      	.DW  0x01
0000a9 0578      	.DW  __seed_G104
0000aa 013e      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0000ab 0000      	.DW  0
                 
                 __RESET:
0000ac 94f8      	CLI
0000ad 27ee      	CLR  R30
0000ae bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000af e0f1      	LDI  R31,1
0000b0 bff5      	OUT  MCUCR,R31
0000b1 bfe5      	OUT  MCUCR,R30
0000b2 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0000b4 e1f8      	LDI  R31,0x18
0000b5 bdf1      	OUT  WDTCR,R31
0000b6 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000b7 e08d      	LDI  R24,(14-2)+1
0000b8 e0a2      	LDI  R26,2
0000b9 27bb      	CLR  R27
                 __CLEAR_REG:
0000ba 93ed      	ST   X+,R30
0000bb 958a      	DEC  R24
0000bc f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000bd e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000be e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000bf e0a0      	LDI  R26,LOW(__SRAM_START)
0000c0 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000c1 93ed      	ST   X+,R30
0000c2 9701      	SBIW R24,1
0000c3 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000c4 e4ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000c5 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000c6 9185      	LPM  R24,Z+
0000c7 9195      	LPM  R25,Z+
0000c8 9700      	SBIW R24,0
0000c9 f061      	BREQ __GLOBAL_INI_END
0000ca 91a5      	LPM  R26,Z+
0000cb 91b5      	LPM  R27,Z+
0000cc 9005      	LPM  R0,Z+
0000cd 9015      	LPM  R1,Z+
0000ce 01bf      	MOVW R22,R30
0000cf 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000d0 9005      	LPM  R0,Z+
0000d1 920d      	ST   X+,R0
0000d2 9701      	SBIW R24,1
0000d3 f7e1      	BRNE __GLOBAL_INI_LOOP
0000d4 01fb      	MOVW R30,R22
0000d5 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000d6 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000d7 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000d8 bfed      	OUT  SPL,R30
0000d9 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000da bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000db e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000dc e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000dd 940c 0269 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 60 // 0.03msec
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.29
                 ;#define Gearratio 25
                 ;
                 ;//////////US/////////////////
                 ;#define Inches 0x50
                 ;#define Centimeters 0x51
                 ;#define microSec 0x52
                 ;
                 ;#define tau 0.1 //LOWPASS_FILTER
                 ;#define ts 0.7//SAMPLING CYCLE
                 ;
                 ;#define CommandReg 0
                 ;#define Unused 1
                 ;#define RangeHighByte 2
                 ;#define RangeLowByte 3
                 ;
                 ;#define TWI_START 0x08
                 ;#define MT_REPEATED_START 0x10
                 ;#define MT_SLAW_ACK 0x18
                 ;#define MT_DATA_ACK 0x28
                 ;#define MT_SLAR_ACK 0x40
                 ;#define MT_DATA_NACK 0x58
                 ;
                 ;//////////////////////integer////////////////
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;
                 ;///////////////FLAG//////////////////////
                 ;unsigned char SRF02_CONVERTING_FLAG = 0;
                 ;unsigned char SRF02_WAIT_FLAG = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;////////////////init function/////////////
                 ;void usart1_init(int bps)
                 ; 0000 0039 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 003A     UCSR1A = 0x00;
                 ;	bps -> Y+0
0000df e0e0      	LDI  R30,LOW(0)
0000e0 93e0 009b 	STS  155,R30
                 ; 0000 003B     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0000e2 e9e8      	LDI  R30,LOW(152)
0000e3 93e0 009a 	STS  154,R30
                 ; 0000 003C     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0000e5 e0e6      	LDI  R30,LOW(6)
0000e6 93e0 009d 	STS  157,R30
                 ; 0000 003D     UCSR1C &= ~(1<<UMSEL1);
0000e8 91e0 009d 	LDS  R30,157
0000ea 7bef      	ANDI R30,0xBF
0000eb 93e0 009d 	STS  157,R30
                 ; 0000 003E 
                 ; 0000 003F     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0000ed 81e8      	LD   R30,Y
0000ee 81f9      	LDD  R31,Y+1
0000ef 940e 0c83 	CALL __ASRW8
0000f1 93e0 0098 	STS  152,R30
                 ; 0000 0040     UBRR1L = (unsigned char)(bps & 0x00ff);
0000f3 81e8      	LD   R30,Y
0000f4 93e0 0099 	STS  153,R30
                 ; 0000 0041 }
0000f6 c014      	RJMP _0x20A000C
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 0044 {
                 _usart0_init:
                 ; 0000 0045     UCSR0A = 0x00;
                 ;	bps -> Y+0
0000f7 e0e0      	LDI  R30,LOW(0)
0000f8 b9eb      	OUT  0xB,R30
                 ; 0000 0046     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0000f9 e9e8      	LDI  R30,LOW(152)
0000fa b9ea      	OUT  0xA,R30
                 ; 0000 0047     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0000fb e0e6      	LDI  R30,LOW(6)
0000fc 93e0 0095 	STS  149,R30
                 ; 0000 0048     UCSR0C &= ~(1<<UMSEL0);
0000fe 91e0 0095 	LDS  R30,149
000100 7bef      	ANDI R30,0xBF
000101 93e0 0095 	STS  149,R30
                 ; 0000 0049 
                 ; 0000 004A     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
000103 81e8      	LD   R30,Y
000104 81f9      	LDD  R31,Y+1
000105 940e 0c83 	CALL __ASRW8
000107 93e0 0090 	STS  144,R30
                 ; 0000 004B     UBRR0L = (unsigned char)(bps & 0x00ff);
000109 81e8      	LD   R30,Y
00010a b9e9      	OUT  0x9,R30
                 ; 0000 004C }
                 _0x20A000C:
00010b 9622      	ADIW R28,2
00010c 9508      	RET
                 ;
                 ;void timer0_init(void)
                 ; 0000 004F {
                 ; 0000 0050     TCCR0 = (1<<WGM01)|(1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
                 ; 0000 0051     OCR0 = 40;
                 ; 0000 0052     TIMSK = (1<<OCIE2)|(1<<OCIE0);
                 ; 0000 0053 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 0056 {
                 ; 0000 0057     // TCCR1A = (1<<COM1B0);
                 ; 0000 0058     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
                 ; 0000 0059 
                 ; 0000 005A     OCR1B = 1008;
                 ; 0000 005B     ICR1 = 1200;//1200; //664
                 ; 0000 005C     TIMSK |= (1<<OCIE1B);
                 ; 0000 005D }
                 ;
                 ;void timer2_init(void)
                 ; 0000 0060 {
                 _timer2_init:
                 ; 0000 0061     //TIMER2
                 ; 0000 0062     TCCR2 = (1<<WGM21)|(1<<CS21)|(1<<CS20);// CTC모드, 1분주
00010d e0eb      	LDI  R30,LOW(11)
00010e bde5      	OUT  0x25,R30
                 ; 0000 0063 
                 ; 0000 0064     OCR2 = 100;
00010f e6e4      	LDI  R30,LOW(100)
000110 bde3      	OUT  0x23,R30
                 ; 0000 0065     TIMSK = (1<<OCIE2)|(1<<OCIE0);
000111 e8e2      	LDI  R30,LOW(130)
000112 bfe7      	OUT  0x37,R30
                 ; 0000 0066     //TIMSK = (1<<OCIE2);
                 ; 0000 0067 }
000113 9508      	RET
                 ;
                 ;void TWI_Init(){
                 ; 0000 0069 void TWI_Init(){
                 ; 0000 006A     TWBR = 10;
                 ; 0000 006B     TWSR = 0;
                 ; 0000 006C     TWCR = 0;
                 ; 0000 006D }
                 ;
                 ;
                 ;////////////////////USART RTX/////////////////////////////////
                 ;void putch_USART1(char data)
                 ; 0000 0072 {
                 _putch_USART1:
                 ; 0000 0073     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
000114 91e0 009b 	LDS  R30,155
000116 72e0      	ANDI R30,LOW(0x20)
000117 f3e1      	BREQ _0x3
                 ; 0000 0074     UDR1 = data;
000118 81e8      	LD   R30,Y
000119 93e0 009c 	STS  156,R30
                 ; 0000 0075 }
00011b c01e      	RJMP _0x20A000B
                 ;
                 ;//USART 문자열 송신
                 ;void puts_USART1(char *str,char IDX)
                 ; 0000 0079 {
                 _puts_USART1:
                 ; 0000 007A     unsigned char i = 0;
                 ; 0000 007B 
                 ; 0000 007C     for(i = 0;i<IDX;i++)
00011c 931a      	ST   -Y,R17
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
00011d e010      	LDI  R17,0
00011e e010      	LDI  R17,LOW(0)
                 _0x7:
00011f 81e9      	LDD  R30,Y+1
000120 171e      	CP   R17,R30
000121 f438      	BRSH _0x8
                 ; 0000 007D     {
                 ; 0000 007E         putch_USART1(*(str+i));
000122 940e 0935 	CALL SUBOPT_0x0
000124 91ec      	LD   R30,X
000125 93ea      	ST   -Y,R30
000126 dfed      	RCALL _putch_USART1
                 ; 0000 007F     }
000127 5f1f      	SUBI R17,-1
000128 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 0080 
                 ; 0000 0081     for(i = 0; i<IDX; i++)
000129 e010      	LDI  R17,LOW(0)
                 _0xA:
00012a 81e9      	LDD  R30,Y+1
00012b 171e      	CP   R17,R30
00012c f430      	BRSH _0xB
                 ; 0000 0082     {
                 ; 0000 0083         *(str+i) = 0;
00012d 940e 0935 	CALL SUBOPT_0x0
00012f e0e0      	LDI  R30,LOW(0)
000130 93ec      	ST   X,R30
                 ; 0000 0084     }
000131 5f1f      	SUBI R17,-1
000132 cff7      	RJMP _0xA
                 _0xB:
                 ; 0000 0085 }
000133 8118      	LDD  R17,Y+0
000134 9624      	ADIW R28,4
000135 9508      	RET
                 ;
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     while(*str != 0)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//         i++;
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;/////////////////////////////////////MOTOR///////////////////////////////////////
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0099 {
                 ; 0000 009A     unsigned char i = 0;
                 ; 0000 009B     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009C     if(TIMER2_OVERFLOW>0)
                 ; 0000 009D     {
                 ; 0000 009E         for(i = 0;i<IDX-1;i++) putch_USART1(*(str+i));
                 ; 0000 00A0 for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 00A1 }
                 ; 0000 00A2     UCSR0B |= (1<<RXEN0);
                 ; 0000 00A3 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 00A6 {
                 _putch_USART0:
                 ; 0000 00A7     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000136 9b5d      	SBIS 0xB,5
000137 cffe      	RJMP _0x13
                 ; 0000 00A8     UDR0 = data;
000138 81e8      	LD   R30,Y
000139 b9ec      	OUT  0xC,R30
                 ; 0000 00A9 }
                 _0x20A000B:
00013a 9621      	ADIW R28,1
00013b 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 00AC {
                 ; 0000 00AD     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 00AE     unsigned char i = 0;
                 ; 0000 00AF     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 00B0     {
                 ; 0000 00B1         putch_USART1(*(str+i));
                 ; 0000 00B2     }
                 ; 0000 00B3 
                 ; 0000 00B4     for(i = 0; i<IDX; i++)
                 ; 0000 00B5     {
                 ; 0000 00B6         *(str+i) = 0;
                 ; 0000 00B7     }
                 ; 0000 00B8 }
                 ;
                 ;///////////////////////Modbus///////////////////////////////////////
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00BC {
                 _CRC16:
                 ; 0000 00BD     int i;
                 ; 0000 00BE     unsigned short crc, flag;
                 ; 0000 00BF     crc = 0xffff;
00013c 940e 0d20 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00013e ef2f     +LDI R18 , LOW ( - 1 )
00013f ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00C0 
                 ; 0000 00C1     while(usDataLen--){
                 _0x1C:
000140 81ee      	LDD  R30,Y+6
000141 81ff      	LDD  R31,Y+6+1
000142 9731      	SBIW R30,1
000143 83ee      	STD  Y+6,R30
000144 83ff      	STD  Y+6+1,R31
000145 9631      	ADIW R30,1
000146 f0f9      	BREQ _0x1E
                 ; 0000 00C2         crc ^= *puchMsg++;
000147 85a8      	LDD  R26,Y+8
000148 85b9      	LDD  R27,Y+8+1
000149 91ed      	LD   R30,X+
00014a 87a8      	STD  Y+8,R26
00014b 87b9      	STD  Y+8+1,R27
00014c e0f0      	LDI  R31,0
                +
00014d 272e     +EOR R18 , R30
00014e 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00C3 
                 ; 0000 00C4         for (i=0; i<8; i++){
                +
00014f e000     +LDI R16 , LOW ( 0 )
000150 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
000151 3008     +CPI R16 , LOW ( 8 )
000152 e0e0     +LDI R30 , HIGH ( 8 )
000153 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000154 f484      	BRGE _0x21
                 ; 0000 00C5             flag = crc & 0x0001;
000155 01f9      	MOVW R30,R18
000156 70e1      	ANDI R30,LOW(0x1)
000157 70f0      	ANDI R31,HIGH(0x1)
000158 01af      	MOVW R20,R30
                 ; 0000 00C6             crc >>= 1;
000159 9536      	LSR  R19
00015a 9527      	ROR  R18
                 ; 0000 00C7             if(flag) crc ^= POLYNORMIAL;
00015b 2e04      	MOV  R0,R20
00015c 2a05      	OR   R0,R21
00015d f021      	BREQ _0x22
00015e e0e1      	LDI  R30,LOW(40961)
00015f eaf0      	LDI  R31,HIGH(40961)
                +
000160 272e     +EOR R18 , R30
000161 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00C8         }
                 _0x22:
                +
000162 5f0f     +SUBI R16 , LOW ( - 1 )
000163 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000164 cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00C9     }
000165 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00CA     return crc;
000166 01f9      	MOVW R30,R18
000167 940e 0d27 	CALL __LOADLOCR6
000169 962a      	ADIW R28,10
00016a 9508      	RET
                 ; 0000 00CB }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00CE {
                 _RTU_WriteOperate0:
                 ; 0000 00CF     char protocol[8];
                 ; 0000 00D0     unsigned short crc16;
                 ; 0000 00D1     int i=0;
                 ; 0000 00D2     //PACKET_BUFF_IDX = 0;
                 ; 0000 00D3 
                 ; 0000 00D4     protocol[0]=device_address;
00016b 9728      	SBIW R28,8
00016c 940e 0d22 	CALL __SAVELOCR4
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                +
00016e e020     +LDI R18 , LOW ( 0 )
00016f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000170 89e8      	LDD  R30,Y+16
000171 83ec      	STD  Y+4,R30
                 ; 0000 00D5     protocol[1]=0x06;
000172 e0e6      	LDI  R30,LOW(6)
000173 83ed      	STD  Y+5,R30
                 ; 0000 00D6     protocol[2]=((starting_address>>8)  & 0x00ff);
000174 85ee      	LDD  R30,Y+14
000175 85ff      	LDD  R31,Y+14+1
000176 940e 0c83 	CALL __ASRW8
000178 83ee      	STD  Y+6,R30
                 ; 0000 00D7     protocol[3]=((starting_address)     & 0x00ff);
000179 85ee      	LDD  R30,Y+14
00017a 83ef      	STD  Y+7,R30
                 ; 0000 00D8     protocol[4]=((data>>8)              & 0x00ff);
00017b 85ec      	LDD  R30,Y+12
00017c 85fd      	LDD  R31,Y+12+1
00017d 940e 0c83 	CALL __ASRW8
00017f 87e8      	STD  Y+8,R30
                 ; 0000 00D9     protocol[5]=((data)                 & 0x00ff);
000180 85ec      	LDD  R30,Y+12
000181 87e9      	STD  Y+9,R30
                 ; 0000 00DA     protocol[6]=0;
000182 e0e0      	LDI  R30,LOW(0)
000183 87ea      	STD  Y+10,R30
                 ; 0000 00DB     protocol[7]=0;
000184 87eb      	STD  Y+11,R30
                 ; 0000 00DC 
                 ; 0000 00DD     crc16 = CRC16(protocol, 6);
000185 01fe      	MOVW R30,R28
000186 9634      	ADIW R30,4
000187 93fa      	ST   -Y,R31
000188 93ea      	ST   -Y,R30
000189 e0e6      	LDI  R30,LOW(6)
00018a e0f0      	LDI  R31,HIGH(6)
00018b 93fa      	ST   -Y,R31
00018c 93ea      	ST   -Y,R30
00018d dfae      	RCALL _CRC16
00018e 018f      	MOVW R16,R30
                 ; 0000 00DE 
                 ; 0000 00DF     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
00018f 01f8      	MOVW R30,R16
000190 87ea      	STD  Y+10,R30
                 ; 0000 00E0     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                +
000191 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                 ; 0000 00E1 
                 ; 0000 00E2 
                 ; 0000 00E3     for(i=0;i<8;i++)
                +
000192 e020     +LDI R18 , LOW ( 0 )
000193 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
000194 3028     +CPI R18 , LOW ( 8 )
000195 e0e0     +LDI R30 , HIGH ( 8 )
000196 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000197 f454      	BRGE _0x25
                 ; 0000 00E4     {
                 ; 0000 00E5         putch_USART0(*(protocol+i));
000198 01de      	MOVW R26,R28
000199 9614      	ADIW R26,4
00019a 0fa2      	ADD  R26,R18
00019b 1fb3      	ADC  R27,R19
00019c 91ec      	LD   R30,X
00019d 93ea      	ST   -Y,R30
00019e df97      	RCALL _putch_USART0
                 ; 0000 00E6     }
                +
00019f 5f2f     +SUBI R18 , LOW ( - 1 )
0001a0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001a1 cff2      	RJMP _0x24
                 _0x25:
                 ; 0000 00E7 }
0001a2 940e 0d29 	CALL __LOADLOCR4
0001a4 9661      	ADIW R28,17
0001a5 9508      	RET
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00EA {
                 ; 0000 00EB     char protocol[8];
                 ; 0000 00EC     unsigned short crc16;
                 ; 0000 00ED     int i=0;
                 ; 0000 00EE    // PACKET_BUFF_IDX = 0;
                 ; 0000 00EF 
                 ; 0000 00F0     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00F1     protocol[1]=0x06;
                 ; 0000 00F2     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00F3     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00F4     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00F5     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00F6     protocol[6]=0;
                 ; 0000 00F7     protocol[7]=0;
                 ; 0000 00F8 
                 ; 0000 00F9     crc16 = CRC16(protocol, 6);
                 ; 0000 00FA 
                 ; 0000 00FB     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00FC     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00FD 
                 ; 0000 00FE 
                 ; 0000 00FF     for(i=0;i<8;i++)
                 ; 0000 0100     {
                 ; 0000 0101         putch_USART1(*(protocol+i));
                 ; 0000 0102     }
                 ; 0000 0103 }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 0106 {
                 ; 0000 0107     char protocol[8];
                 ; 0000 0108     unsigned short crc16;
                 ; 0000 0109     int i=0;
                 ; 0000 010A     //PACKET_BUFF_IDX = 0;
                 ; 0000 010B 
                 ; 0000 010C     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 010D     protocol[1]=0x03;
                 ; 0000 010E     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 010F     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 0110     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 0111     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 0112     protocol[6]=0;
                 ; 0000 0113     protocol[7]=0;
                 ; 0000 0114 
                 ; 0000 0115     crc16 = CRC16(protocol, 6);
                 ; 0000 0116 
                 ; 0000 0117     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 0118     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 0119 
                 ; 0000 011A 
                 ; 0000 011B     for(i=0;i<8;i++)
                 ; 0000 011C     {
                 ; 0000 011D         putch_USART0(*(protocol+i));
                 ; 0000 011E     }
                 ; 0000 011F }
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 0122 {
                 _Make_MSPEED:
                 ; 0000 0123     float VelocityR = 0;
                 ; 0000 0124     float VelocityL = 0;
                 ; 0000 0125 
                 ; 0000 0126     if(*_velocity>=0){
0001a6 9728      	SBIW R28,8
0001a7 940e 093c 	CALL SUBOPT_0x1
0001a9 e0e0      	LDI  R30,LOW(0)
0001aa 83ea      	STD  Y+2,R30
0001ab 83eb      	STD  Y+3,R30
0001ac 83ec      	STD  Y+4,R30
0001ad 83ed      	STD  Y+5,R30
0001ae 83ee      	STD  Y+6,R30
0001af 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
0001b0 940e 0940 	CALL SUBOPT_0x2
0001b2 2377      	TST  R23
0001b3 f042      	BRMI _0x2C
                 ; 0000 0127         *_angularV = -(*_angularV);
0001b4 940e 0945 	CALL SUBOPT_0x3
0001b6 940e 0aca 	CALL __ANEGF1
0001b8 85ac      	LDD  R26,Y+12
0001b9 85bd      	LDD  R27,Y+12+1
0001ba 940e 0cf9 	CALL __PUTDP1
                 ; 0000 0128     }
                 ; 0000 0129 
                 ; 0000 012A     VelocityR = *_velocity+(*_angularV*Length)/4;
                 _0x2C:
0001bc 940e 0940 	CALL SUBOPT_0x2
0001be 937f      	PUSH R23
0001bf 936f      	PUSH R22
0001c0 93ff      	PUSH R31
0001c1 93ef      	PUSH R30
0001c2 940e 0945 	CALL SUBOPT_0x3
0001c4 940e 094a 	CALL SUBOPT_0x4
0001c6 91af      	POP  R26
0001c7 91bf      	POP  R27
0001c8 918f      	POP  R24
0001c9 919f      	POP  R25
0001ca 940e 0b70 	CALL __ADDF12
0001cc 940e 0959 	CALL SUBOPT_0x5
                 ; 0000 012B     VelocityL = *_velocity-(*_angularV*Length)/4;
0001ce 940e 0940 	CALL SUBOPT_0x2
0001d0 937f      	PUSH R23
0001d1 936f      	PUSH R22
0001d2 93ff      	PUSH R31
0001d3 93ef      	PUSH R30
0001d4 940e 0945 	CALL SUBOPT_0x3
0001d6 940e 094a 	CALL SUBOPT_0x4
0001d8 91af      	POP  R26
0001d9 91bf      	POP  R27
0001da 918f      	POP  R24
0001db 919f      	POP  R25
0001dc 940e 095e 	CALL SUBOPT_0x6
0001de 940e 0d03 	CALL __PUTD1S0
                 ; 0000 012C 
                 ; 0000 012D     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0001e0 940e 0963 	CALL SUBOPT_0x7
0001e2 940e 0968 	CALL SUBOPT_0x8
0001e4 85aa      	LDD  R26,Y+10
0001e5 85bb      	LDD  R27,Y+10+1
0001e6 93ed      	ST   X+,R30
0001e7 93fc      	ST   X,R31
                 ; 0000 012E     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0001e8 940e 0977 	CALL SUBOPT_0x9
0001ea 940e 0968 	CALL SUBOPT_0x8
0001ec 85a8      	LDD  R26,Y+8
0001ed 85b9      	LDD  R27,Y+8+1
0001ee 93ed      	ST   X+,R30
0001ef 93fc      	ST   X,R31
                 ; 0000 012F 
                 ; 0000 0130     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0001f0 85aa      	LDD  R26,Y+10
0001f1 85bb      	LDD  R27,Y+10+1
0001f2 940e 0cef 	CALL __GETW1P
0001f4 32ec      	CPI  R30,LOW(0x12C)
0001f5 e0a1      	LDI  R26,HIGH(0x12C)
0001f6 07fa      	CPC  R31,R26
0001f7 f434      	BRGE _0x2E
0001f8 01df      	MOVW R26,R30
0001f9 ede4      	LDI  R30,LOW(65236)
0001fa effe      	LDI  R31,HIGH(65236)
0001fb 17ea      	CP   R30,R26
0001fc 07fb      	CPC  R31,R27
0001fd f00c      	BRLT _0x2F
                 _0x2E:
0001fe c014      	RJMP _0x30
                 _0x2F:
0001ff 85a8      	LDD  R26,Y+8
000200 85b9      	LDD  R27,Y+8+1
000201 940e 0cef 	CALL __GETW1P
000203 32ec      	CPI  R30,LOW(0x12C)
000204 e0a1      	LDI  R26,HIGH(0x12C)
000205 07fa      	CPC  R31,R26
000206 f454      	BRGE _0x31
000207 85a8      	LDD  R26,Y+8
000208 85b9      	LDD  R27,Y+8+1
000209 940e 0cef 	CALL __GETW1P
00020b 01df      	MOVW R26,R30
00020c ede4      	LDI  R30,LOW(65236)
00020d effe      	LDI  R31,HIGH(65236)
00020e 17ea      	CP   R30,R26
00020f 07fb      	CPC  R31,R27
000210 f00c      	BRLT _0x32
                 _0x31:
000211 c001      	RJMP _0x30
                 _0x32:
000212 c001      	RJMP _0x33
                 _0x30:
000213 c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 0131         *R_RPM = 0;
000214 85aa      	LDD  R26,Y+10
000215 85bb      	LDD  R27,Y+10+1
000216 940e 097a 	CALL SUBOPT_0xA
                 ; 0000 0132         *L_RPM = 0;
000218 85a8      	LDD  R26,Y+8
000219 85b9      	LDD  R27,Y+8+1
00021a 940e 097a 	CALL SUBOPT_0xA
                 ; 0000 0133     }
                 ; 0000 0134 }
                 _0x2D:
00021c c216      	RJMP _0x20A000A
                 ;void oper_Disapath(int velocityR, int velocityL, int p_velocity_R, int p_velocity_L)
                 ; 0000 0136 {
                 ; 0000 0137     if((p_velocity_R==0) && (velocityR != 0))
                 ;	velocityR -> Y+6
                 ;	velocityL -> Y+4
                 ;	p_velocity_R -> Y+2
                 ;	p_velocity_L -> Y+0
                 ; 0000 0138     {
                 ; 0000 0139         RTU_WriteOperate0(R,(unsigned int)120,START);
                 ; 0000 013A         delay_ms(5);
                 ; 0000 013B     }
                 ; 0000 013C     else if((p_velocity_R!=0) && (velocityR == 0))
                 ; 0000 013D     {
                 ; 0000 013E         RTU_WriteOperate0(R,(unsigned int)120,STOP);
                 ; 0000 013F         delay_ms(5);
                 ; 0000 0140     }
                 ; 0000 0141     if((p_velocity_L==0) && (velocityL != 0))
                 ; 0000 0142     {
                 ; 0000 0143         RTU_WriteOperate0(L,(unsigned int)120,START);
                 ; 0000 0144         delay_ms(5);
                 ; 0000 0145     }
                 ; 0000 0146     else if((p_velocity_L!=0) && (velocityL == 0))
                 ; 0000 0147     {
                 ; 0000 0148         RTU_WriteOperate0(L,(unsigned int)120,STOP);
                 ; 0000 0149         delay_ms(5);
                 ; 0000 014A     }
                 ; 0000 014B }
                 ;
                 ;////////////////////////////////////TWI_Ultra_Sonic//////////////////////////////////////////////////
                 ;
                 ;unsigned char TWI_Read(unsigned char addr, unsigned char regAddr)
                 ; 0000 0150 {
                 ; 0000 0151     unsigned char Data;
                 ; 0000 0152     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA));//Start조건 전송
                 ;	addr -> Y+2
                 ;	regAddr -> Y+1
                 ;	Data -> R17
                 ; 0000 0153     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=TWI_START));
                 ; 0000 0154 
                 ; 0000 0155     TWDR = addr&(~0x01);                //쓰기 위한 주소 전송
                 ; 0000 0156     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0157     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAW_ACK));
                 ; 0000 0158 
                 ; 0000 0159     TWDR = regAddr;                     //Reg주소 전송
                 ; 0000 015A     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 015B     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_ACK));
                 ; 0000 015C 
                 ; 0000 015D     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA)); //Repeated start 전송
                 ; 0000 015E     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_REPEATED_START));
                 ; 0000 015F 
                 ; 0000 0160     TWDR = addr|0x01;                       //읽기 위한 주소 전송
                 ; 0000 0161     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0162     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAR_ACK));
                 ; 0000 0163 
                 ; 0000 0164 
                 ; 0000 0165     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0166     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_NACK));
                 ; 0000 0167     Data = TWDR;                        //Data읽기
                 ; 0000 0168 
                 ; 0000 0169     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTO));
                 ; 0000 016A 
                 ; 0000 016B     return Data;
                 ; 0000 016C }
                 ;
                 ;void TWI_Write(unsigned char addr, unsigned char Data[],int NumberOfData)
                 ; 0000 016F {
                 ; 0000 0170     int i=0;
                 ; 0000 0171 
                 ; 0000 0172     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA));
                 ;	addr -> Y+6
                 ;	Data -> Y+4
                 ;	NumberOfData -> Y+2
                 ;	i -> R16,R17
                 ; 0000 0173     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=TWI_START));
                 ; 0000 0174 
                 ; 0000 0175     TWDR = addr&(~0x01);
                 ; 0000 0176     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0177     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAW_ACK));
                 ; 0000 0178 
                 ; 0000 0179     for(i=0;i<NumberOfData;i++){
                 ; 0000 017A         TWDR = Data[i];
                 ; 0000 017B         TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 017C         while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_ACK));
                 ; 0000 017D     }
                 ; 0000 017E 
                 ; 0000 017F     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTO));
                 ; 0000 0180 }
                 ;
                 ;void Start_SRF02_Conv(unsigned char Adress, unsigned char mode){
                 ; 0000 0182 void Start_SRF02_Conv(unsigned char Adress, unsigned char mode){
                 ; 0000 0183     unsigned char ConvMode[2] = {0x00,};
                 ; 0000 0184     ConvMode[1] = mode;
                 ;	Adress -> Y+3
                 ;	mode -> Y+2
                 ;	ConvMode -> Y+0
                 ; 0000 0185     TWI_Write(Adress,ConvMode,2);
                 ; 0000 0186 }
                 ;
                 ;unsigned int Get_SRF02_Range(unsigned char Adress)
                 ; 0000 0189 {
                 ; 0000 018A     unsigned int range;
                 ; 0000 018B     unsigned char High = 0,Low = 0;
                 ; 0000 018C 
                 ; 0000 018D     High = TWI_Read(Adress, RangeHighByte);
                 ;	Adress -> Y+4
                 ;	range -> R16,R17
                 ;	High -> R19
                 ;	Low -> R18
                 ; 0000 018E     if(High == 0xFF){
                 ; 0000 018F         return 0;
                 ; 0000 0190     }
                 ; 0000 0191     Low = TWI_Read(Adress, RangeLowByte);
                 ; 0000 0192     range = (High<<8)+Low;
                 ; 0000 0193 
                 ; 0000 0194     return range;
                 ; 0000 0195 }
                 ;
                 ;/////////////////////ISR//////////////////////////////////
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 019A {
                 _usart0_rxc:
00021d 93aa      	ST   -Y,R26
00021e 93ba      	ST   -Y,R27
00021f 93ea      	ST   -Y,R30
000220 b7ef      	IN   R30,SREG
000221 93ea      	ST   -Y,R30
                 ; 0000 019B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000222 b5e4      	IN   R30,0x24
000223 33ec      	CPI  R30,LOW(0x3C)
000224 f418      	BRSH _0x74
000225 e0e0      	LDI  R30,LOW(0)
000226 15e5      	CP   R30,R5
000227 f019      	BREQ _0x76
                 _0x74:
000228 e0e0      	LDI  R30,LOW(0)
000229 15e4      	CP   R30,R4
00022a f419      	BRNE _0x73
                 _0x76:
                 ; 0000 019C     {
                 ; 0000 019D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00022b 940e 097f 	CALL SUBOPT_0xB
                 ; 0000 019E         PACKET_BUFF_IDX++;
                 ; 0000 019F         TCNT2 = 0;
                 ; 0000 01A0     }
                 ; 0000 01A1     else {
00022d c004      	RJMP _0x78
                 _0x73:
                 ; 0000 01A2         PACKET_BUFF_IDX = 0;
00022e 2444      	CLR  R4
                 ; 0000 01A3         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00022f 940e 097f 	CALL SUBOPT_0xB
                 ; 0000 01A4         PACKET_BUFF_IDX++;
                 ; 0000 01A5         TCNT2 = 0;
                 ; 0000 01A6         TIMER2_OVERFLOW = 0;
000231 2455      	CLR  R5
                 ; 0000 01A7     }
                 _0x78:
                 ; 0000 01A8 }
000232 91e9      	LD   R30,Y+
000233 bfef      	OUT  SREG,R30
000234 91e9      	LD   R30,Y+
000235 91b9      	LD   R27,Y+
000236 91a9      	LD   R26,Y+
000237 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 01AB {
                 _usart1_rxc:
000238 93ea      	ST   -Y,R30
000239 93fa      	ST   -Y,R31
00023a b7ef      	IN   R30,SREG
00023b 93ea      	ST   -Y,R30
                 ; 0000 01AC     unsigned char i = 0;
                 ; 0000 01AD     i = UDR1;
00023c 931a      	ST   -Y,R17
                 ;	i -> R17
00023d e010      	LDI  R17,0
00023e 9110 009c 	LDS  R17,156
                 ; 0000 01AE     if(i == '<'){
000240 331c      	CPI  R17,60
000241 f431      	BRNE _0x79
                 ; 0000 01AF         VELOCITY_BUFF_IDX = 0;
000242 2499      	CLR  R9
                 ; 0000 01B0         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000243 940e 0989 	CALL SUBOPT_0xC
                 ; 0000 01B1         VELOCITY_BUFF_IDX++;
                 ; 0000 01B2         CHECK_GETS = 1;
000245 e0e1      	LDI  R30,LOW(1)
000246 2eae      	MOV  R10,R30
                 ; 0000 01B3     }
                 ; 0000 01B4     else if(i == '>'){
000247 c008      	RJMP _0x7A
                 _0x79:
000248 331e      	CPI  R17,62
000249 f421      	BRNE _0x7B
                 ; 0000 01B5         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00024a 940e 0989 	CALL SUBOPT_0xC
                 ; 0000 01B6         VELOCITY_BUFF_IDX++;
                 ; 0000 01B7         CHECK_GETS = 0;
00024c 24aa      	CLR  R10
                 ; 0000 01B8     }
                 ; 0000 01B9     else{
00024d c002      	RJMP _0x7C
                 _0x7B:
                 ; 0000 01BA         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00024e 940e 0989 	CALL SUBOPT_0xC
                 ; 0000 01BB         VELOCITY_BUFF_IDX++;
                 ; 0000 01BC     }
                 _0x7C:
                 _0x7A:
                 ; 0000 01BD }
000250 9119      	LD   R17,Y+
000251 c00d      	RJMP _0x85
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 01C0 {
                 _timer2_comp:
000252 93ea      	ST   -Y,R30
000253 b7ef      	IN   R30,SREG
                 ; 0000 01C1     TIMER2_OVERFLOW++;
000254 9453      	INC  R5
                 ; 0000 01C2 }
000255 bfef      	OUT  SREG,R30
000256 91e9      	LD   R30,Y+
000257 9518      	RETI
                 ;
                 ;interrupt [TIM0_COMP] void timer0_comp(void)
                 ; 0000 01C5 {
                 _timer0_comp:
000258 93ea      	ST   -Y,R30
000259 93fa      	ST   -Y,R31
00025a b7ef      	IN   R30,SREG
00025b 93ea      	ST   -Y,R30
                 ; 0000 01C6     TIMER0_OVERFLOW++;
00025c 01f3      	MOVW R30,R6
00025d 9631      	ADIW R30,1
00025e 013f      	MOVW R6,R30
                 ; 0000 01C7 }
                 _0x85:
00025f 91e9      	LD   R30,Y+
000260 bfef      	OUT  SREG,R30
000261 91f9      	LD   R31,Y+
000262 91e9      	LD   R30,Y+
000263 9518      	RETI
                 ;
                 ;interrupt [TIM1_COMPB] void timer1_compb(void)
                 ; 0000 01CA {
                 _timer1_compb:
000264 93ea      	ST   -Y,R30
                 ; 0000 01CB     SRF02_CONVERTING_FLAG = 1;
000265 e0e1      	LDI  R30,LOW(1)
000266 2e8e      	MOV  R8,R30
                 ; 0000 01CC }
000267 91e9      	LD   R30,Y+
000268 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 01CF {
                 _main:
                 ; 0000 01D0     float a_buff;
                 ; 0000 01D1     float v_buff;
                 ; 0000 01D2 
                 ; 0000 01D3     int velocity = 0;
                 ; 0000 01D4     int angularV = 0;
                 ; 0000 01D5     int velocity_R = 0;
                 ; 0000 01D6     int velocity_L = 0;
                 ; 0000 01D7     int past_velocity_R = 0;
                 ; 0000 01D8     int past_velocity_L = 0;
                 ; 0000 01D9 
                 ; 0000 01DA     float robot_position_x = 0;
                 ; 0000 01DB     float robot_position_y = 0;
                 ; 0000 01DC     unsigned char BUFF[100] = {0,};
                 ; 0000 01DD 
                 ; 0000 01DE     /////////////////Ultra sonic/////////////////////////
                 ; 0000 01DF     unsigned char USID[10] = {0xE0, 0xE2, 0xE4, 0xE6, 0xE8, 0xEA, 0xEC, 0xEE};
                 ; 0000 01E0     unsigned char us_range[10] = {0,};
                 ; 0000 01E1     unsigned char pre_us_range[10] = {0,};
                 ; 0000 01E2 
                 ; 0000 01E3     usart1_init(bps_115200);
000269 97ef      	SBIW R28,63
00026a 97ef      	SBIW R28,63
00026b 976a      	SBIW R28,26
00026c e980      	LDI  R24,144
00026d e0a0      	LDI  R26,LOW(0)
00026e e0b0      	LDI  R27,HIGH(0)
00026f e8ec      	LDI  R30,LOW(_0x7D*2)
000270 e0f0      	LDI  R31,HIGH(_0x7D*2)
000271 940e 0d2e 	CALL __INITLOCB
                 ;	a_buff -> Y+148
                 ;	v_buff -> Y+144
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+142
                 ;	past_velocity_R -> Y+140
                 ;	past_velocity_L -> Y+138
                 ;	robot_position_x -> Y+134
                 ;	robot_position_y -> Y+130
                 ;	BUFF -> Y+30
                 ;	USID -> Y+20
                 ;	us_range -> Y+10
                 ;	pre_us_range -> Y+0
                +
000273 e000     +LDI R16 , LOW ( 0 )
000274 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000275 e020     +LDI R18 , LOW ( 0 )
000276 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000277 e040     +LDI R20 , LOW ( 0 )
000278 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000279 e0e7      	LDI  R30,LOW(7)
00027a e0f0      	LDI  R31,HIGH(7)
00027b 93fa      	ST   -Y,R31
00027c 93ea      	ST   -Y,R30
00027d de61      	RCALL _usart1_init
                 ; 0000 01E4     usart0_init(bps_115200);
00027e e0e7      	LDI  R30,LOW(7)
00027f e0f0      	LDI  R31,HIGH(7)
000280 93fa      	ST   -Y,R31
000281 93ea      	ST   -Y,R30
000282 de74      	RCALL _usart0_init
                 ; 0000 01E5     timer2_init();
000283 de89      	RCALL _timer2_init
                 ; 0000 01E6     SREG |= 0x80;
000284 9478      	BSET 7
                 ; 0000 01E7 
                 ; 0000 01E8     delay_ms(5000);
000285 e8e8      	LDI  R30,LOW(5000)
000286 e1f3      	LDI  R31,HIGH(5000)
000287 940e 0990 	CALL SUBOPT_0xD
                 ; 0000 01E9 
                 ; 0000 01EA     // SRF02_CONVERTING_FLAG = 0;
                 ; 0000 01EB     while(1)
                 _0x7E:
                 ; 0000 01EC     {
                 ; 0000 01ED         // if(SRF02_WAIT_FLAG == 0){
                 ; 0000 01EE         //     Start_SRF02_Conv(USID[0],Centimeters);
                 ; 0000 01EF         //     TCNT1H = 0;
                 ; 0000 01F0         //     TCNT1L = 0;
                 ; 0000 01F1         //     SRF02_WAIT_FLAG = 1;
                 ; 0000 01F2         // }
                 ; 0000 01F3 
                 ; 0000 01F4         if(CHECK_GETS == 0)
000289 20aa      	TST  R10
00028a f011      	BREQ PC+3
00028b 940c 0328 	JMP _0x81
                 ; 0000 01F5         {
                 ; 0000 01F6             UCSR1B &= ~(1<<RXEN1);
00028d 91e0 009a 	LDS  R30,154
00028f 7eef      	ANDI R30,0xEF
000290 93e0 009a 	STS  154,R30
                 ; 0000 01F7             sscanf(VELOCITY_BUFF,"<%d,%d>", &velocity, &angularV);
000292 e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
000293 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000294 93fa      	ST   -Y,R31
000295 93ea      	ST   -Y,R30
                +
000296 e2e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000297 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000298 93fa      	ST   -Y,R31
000299 93ea      	ST   -Y,R30
00029a b7ed      	IN   R30,SPL
00029b b7fe      	IN   R31,SPH
00029c 9731      	SBIW R30,1
00029d 940e 0d08 	CALL __PUTPARD1L
00029f 931f      	PUSH R17
0002a0 930f      	PUSH R16
0002a1 b7ed      	IN   R30,SPL
0002a2 b7fe      	IN   R31,SPH
0002a3 9731      	SBIW R30,1
0002a4 940e 0d08 	CALL __PUTPARD1L
0002a6 933f      	PUSH R19
0002a7 932f      	PUSH R18
0002a8 e088      	LDI  R24,8
0002a9 940e 07e1 	CALL _sscanf
0002ab 962c      	ADIW R28,12
0002ac 912f      	POP  R18
0002ad 913f      	POP  R19
0002ae 910f      	POP  R16
0002af 911f      	POP  R17
                 ; 0000 01F8             UCSR1B |=(1<<RXEN1);
0002b0 91e0 009a 	LDS  R30,154
0002b2 61e0      	ORI  R30,0x10
0002b3 93e0 009a 	STS  154,R30
                 ; 0000 01F9 
                 ; 0000 01FA             v_buff = (float)velocity/1000;
0002b5 01f8      	MOVW R30,R16
0002b6 940e 0994 	CALL SUBOPT_0xE
                +
0002b8 01de     +MOVW R26 , R28
0002b9 57a0     +SUBI R26 , LOW ( - 144 )
0002ba 4fbf     +SBCI R27 , HIGH ( - 144 )
0002bb 93ed     +ST X + , R30
0002bc 93fd     +ST X + , R31
0002bd 936d     +ST X + , R22
0002be 937c     +ST X , R23
                 	__PUTD1SX 144
                 ; 0000 01FB             a_buff = (float)angularV/1000;
0002bf 01f9      	MOVW R30,R18
0002c0 940e 0994 	CALL SUBOPT_0xE
                +
0002c2 01de     +MOVW R26 , R28
0002c3 56ac     +SUBI R26 , LOW ( - 148 )
0002c4 4fbf     +SBCI R27 , HIGH ( - 148 )
0002c5 93ed     +ST X + , R30
0002c6 93fd     +ST X + , R31
0002c7 936d     +ST X + , R22
0002c8 937c     +ST X , R23
                 	__PUTD1SX 148
                 ; 0000 01FC 
                 ; 0000 01FD             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
0002c9 01fe      	MOVW R30,R28
0002ca 57e0      	SUBI R30,LOW(-(144))
0002cb 4fff      	SBCI R31,HIGH(-(144))
0002cc 93fa      	ST   -Y,R31
0002cd 93ea      	ST   -Y,R30
0002ce 01fe      	MOVW R30,R28
0002cf 56ea      	SUBI R30,LOW(-(150))
0002d0 4fff      	SBCI R31,HIGH(-(150))
0002d1 93fa      	ST   -Y,R31
0002d2 93ea      	ST   -Y,R30
0002d3 b7ed      	IN   R30,SPL
0002d4 b7fe      	IN   R31,SPH
0002d5 9731      	SBIW R30,1
0002d6 93fa      	ST   -Y,R31
0002d7 93ea      	ST   -Y,R30
0002d8 935f      	PUSH R21
0002d9 934f      	PUSH R20
0002da 01fe      	MOVW R30,R28
0002db 56ec      	SUBI R30,LOW(-(148))
0002dc 4fff      	SBCI R31,HIGH(-(148))
0002dd 93fa      	ST   -Y,R31
0002de 93ea      	ST   -Y,R30
0002df dec6      	RCALL _Make_MSPEED
0002e0 914f      	POP  R20
0002e1 915f      	POP  R21
                 ; 0000 01FE 
                 ; 0000 01FF             // if(SRF02_CONVERTING_FLAG == 1 && SRF02_WAIT_FLAG == 1){
                 ; 0000 0200             //     us_range[0] = Get_SRF02_Range(0xE0);
                 ; 0000 0201 
                 ; 0000 0202             //     us_range[0] = ( tau * pre_us_range[0] + ts * us_range[0] ) / (tau + ts) ;
                 ; 0000 0203 
                 ; 0000 0204             //     SRF02_CONVERTING_FLAG = 0;
                 ; 0000 0205             //     SRF02_WAIT_FLAG = 0;
                 ; 0000 0206             // }
                 ; 0000 0207 
                 ; 0000 0208             sprintf(BUFF,"<%.2f,%.f2>", v_buff, a_buff);
0002e2 01fe      	MOVW R30,R28
0002e3 967e      	ADIW R30,30
0002e4 93fa      	ST   -Y,R31
0002e5 93ea      	ST   -Y,R30
                +
0002e6 e2ec     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
0002e7 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
0002e8 93fa      	ST   -Y,R31
0002e9 93ea      	ST   -Y,R30
                +
0002ea 01fe     +MOVW R30 , R28
0002eb 56ec     +SUBI R30 , LOW ( - 148 )
0002ec 4fff     +SBCI R31 , HIGH ( - 148 )
0002ed 9001     +LD R0 , Z +
0002ee 9011     +LD R1 , Z +
0002ef 9161     +LD R22 , Z +
0002f0 8170     +LD R23 , Z
0002f1 01f0     +MOVW R30 , R0
                 	__GETD1SX 148
0002f2 940e 0d0a 	CALL __PUTPARD1
                +
0002f4 01fe     +MOVW R30 , R28
0002f5 56e4     +SUBI R30 , LOW ( - 156 )
0002f6 4fff     +SBCI R31 , HIGH ( - 156 )
0002f7 9001     +LD R0 , Z +
0002f8 9011     +LD R1 , Z +
0002f9 9161     +LD R22 , Z +
0002fa 8170     +LD R23 , Z
0002fb 01f0     +MOVW R30 , R0
                 	__GETD1SX 156
0002fc 940e 0d0a 	CALL __PUTPARD1
0002fe e088      	LDI  R24,8
0002ff 940e 0651 	CALL _sprintf
000301 962c      	ADIW R28,12
                 ; 0000 0209             puts_USART1(BUFF,VELOCITY_BUFF_IDX);
000302 01fe      	MOVW R30,R28
000303 967e      	ADIW R30,30
000304 93fa      	ST   -Y,R31
000305 93ea      	ST   -Y,R30
000306 929a      	ST   -Y,R9
000307 de14      	RCALL _puts_USART1
                 ; 0000 020A 
                 ; 0000 020B             RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
000308 e0e1      	LDI  R30,LOW(1)
000309 93ea      	ST   -Y,R30
00030a e7e9      	LDI  R30,LOW(121)
00030b e0f0      	LDI  R31,HIGH(121)
00030c 93fa      	ST   -Y,R31
00030d 93ea      	ST   -Y,R30
00030e 935a      	ST   -Y,R21
00030f 934a      	ST   -Y,R20
000310 940e 09a1 	CALL SUBOPT_0xF
                 ; 0000 020C             delay_ms(3);
                 ; 0000 020D 
                 ; 0000 020E             RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
000312 e0e2      	LDI  R30,LOW(2)
000313 93ea      	ST   -Y,R30
000314 e7e9      	LDI  R30,LOW(121)
000315 e0f0      	LDI  R31,HIGH(121)
000316 93fa      	ST   -Y,R31
000317 93ea      	ST   -Y,R30
                +
000318 01fe     +MOVW R30 , R28
000319 56ef     +SUBI R30 , LOW ( - 145 )
00031a 4fff     +SBCI R31 , HIGH ( - 145 )
00031b 9001     +LD R0 , Z +
00031c 81f0     +LD R31 , Z
00031d 2de0     +MOV R30 , R0
                 	__GETW1SX 145
00031e 940e 0c77 	CALL __ANEGW1
000320 940e 09a6 	CALL SUBOPT_0x10
                 ; 0000 020F             delay_ms(3);
                 ; 0000 0210 
                 ; 0000 0211             RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
000322 e0e1      	LDI  R30,LOW(1)
000323 940e 09a9 	CALL SUBOPT_0x11
                 ; 0000 0212             delay_ms(3);
                 ; 0000 0213 
                 ; 0000 0214             RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
000325 e0e2      	LDI  R30,LOW(2)
000326 940e 09a9 	CALL SUBOPT_0x11
                 ; 0000 0215             delay_ms(3);
                 ; 0000 0216         }
                 ; 0000 0217     }
                 _0x81:
000328 cf60      	RJMP _0x7E
                 ; 0000 0218 }
                 _0x82:
000329 cfff      	RJMP _0x82
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
00032a 931a      	ST   -Y,R17
00032b 930a      	ST   -Y,R16
00032c 81aa      	LDD  R26,Y+2
00032d 81bb      	LDD  R27,Y+2+1
00032e 9612      	ADIW R26,2
00032f 940e 0cef 	CALL __GETW1P
000331 9730      	SBIW R30,0
000332 f129      	BREQ _0x2000010
000333 81aa      	LDD  R26,Y+2
000334 81bb      	LDD  R27,Y+2+1
000335 9614      	ADIW R26,4
000336 940e 0cef 	CALL __GETW1P
000338 018f      	MOVW R16,R30
000339 9730      	SBIW R30,0
00033a f061      	BREQ _0x2000012
                +
00033b 3002     +CPI R16 , LOW ( 2 )
00033c e0e0     +LDI R30 , HIGH ( 2 )
00033d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00033e f0c0      	BRLO _0x2000013
00033f 01f8      	MOVW R30,R16
000340 9731      	SBIW R30,1
000341 018f      	MOVW R16,R30
                +
000342 81aa     +LDD R26 , Y + 2
000343 81bb     +LDD R27 , Y + 2 + 1
000344 9614     +ADIW R26 , 4
000345 93ed     +ST X + , R30
000346 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000347 81aa      	LDD  R26,Y+2
000348 81bb      	LDD  R27,Y+2+1
000349 9612      	ADIW R26,2
00034a 940e 09b1 	CALL SUBOPT_0x12
00034c 9731      	SBIW R30,1
00034d 81ac      	LDD  R26,Y+4
00034e 83a0      	STD  Z+0,R26
00034f 81aa      	LDD  R26,Y+2
000350 81bb      	LDD  R27,Y+2+1
000351 940e 0cef 	CALL __GETW1P
000353 23ff      	TST  R31
000354 f012      	BRMI _0x2000014
000355 940e 09b1 	CALL SUBOPT_0x12
                 _0x2000014:
                 _0x2000013:
000357 c006      	RJMP _0x2000015
                 _0x2000010:
000358 81aa      	LDD  R26,Y+2
000359 81bb      	LDD  R27,Y+2+1
00035a efef      	LDI  R30,LOW(65535)
00035b efff      	LDI  R31,HIGH(65535)
00035c 93ed      	ST   X+,R30
00035d 93fc      	ST   X,R31
                 _0x2000015:
00035e 8119      	LDD  R17,Y+1
00035f 8108      	LDD  R16,Y+0
000360 c34a      	RJMP _0x20A0007
                 __ftoe_G100:
000361 9724      	SBIW R28,4
000362 940e 093c 	CALL SUBOPT_0x1
000364 e8e0      	LDI  R30,LOW(128)
000365 83ea      	STD  Y+2,R30
000366 e3ef      	LDI  R30,LOW(63)
000367 83eb      	STD  Y+3,R30
000368 940e 0d22 	CALL __SAVELOCR4
00036a 85ee      	LDD  R30,Y+14
00036b 85ff      	LDD  R31,Y+14+1
00036c 3fef      	CPI  R30,LOW(0xFFFF)
00036d efaf      	LDI  R26,HIGH(0xFFFF)
00036e 07fa      	CPC  R31,R26
00036f f449      	BRNE _0x2000019
000370 85e8      	LDD  R30,Y+8
000371 85f9      	LDD  R31,Y+8+1
000372 93fa      	ST   -Y,R31
000373 93ea      	ST   -Y,R30
                +
000374 e3e8     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000375 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000376 940e 09b7 	CALL SUBOPT_0x13
000378 c0b8      	RJMP _0x20A0009
                 _0x2000019:
000379 3fef      	CPI  R30,LOW(0x7FFF)
00037a e7af      	LDI  R26,HIGH(0x7FFF)
00037b 07fa      	CPC  R31,R26
00037c f449      	BRNE _0x2000018
00037d 85e8      	LDD  R30,Y+8
00037e 85f9      	LDD  R31,Y+8+1
00037f 93fa      	ST   -Y,R31
000380 93ea      	ST   -Y,R30
                +
000381 e3e9     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000382 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000383 940e 09b7 	CALL SUBOPT_0x13
000385 c0ab      	RJMP _0x20A0009
                 _0x2000018:
000386 85ab      	LDD  R26,Y+11
000387 30a7      	CPI  R26,LOW(0x7)
000388 f010      	BRLO _0x200001B
000389 e0e6      	LDI  R30,LOW(6)
00038a 87eb      	STD  Y+11,R30
                 _0x200001B:
00038b 851b      	LDD  R17,Y+11
                 _0x200001C:
00038c 2fe1      	MOV  R30,R17
00038d 5011      	SUBI R17,1
00038e 30e0      	CPI  R30,0
00038f f019      	BREQ _0x200001E
000390 940e 09bb 	CALL SUBOPT_0x14
000392 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000393 85ec     +LDD R30 , Y + 12
000394 85fd     +LDD R31 , Y + 12 + 1
000395 856e     +LDD R22 , Y + 12 + 2
000396 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000397 940e 0d1c 	CALL __CPD10
000399 f421      	BRNE _0x200001F
00039a e030      	LDI  R19,LOW(0)
00039b 940e 09bb 	CALL SUBOPT_0x14
00039d c02e      	RJMP _0x2000020
                 _0x200001F:
00039e 853b      	LDD  R19,Y+11
00039f 940e 09c6 	CALL SUBOPT_0x15
0003a1 f009      	BREQ PC+2
0003a2 f410      	BRCC PC+3
0003a3 940c 03b0 	JMP  _0x2000021
0003a5 940e 09bb 	CALL SUBOPT_0x14
                 _0x2000022:
0003a7 940e 09c6 	CALL SUBOPT_0x15
0003a9 f028      	BRLO _0x2000024
0003aa 940e 09ce 	CALL SUBOPT_0x16
0003ac 940e 09d3 	CALL SUBOPT_0x17
0003ae cff8      	RJMP _0x2000022
                 _0x2000024:
0003af c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0003b0 940e 09c6 	CALL SUBOPT_0x15
0003b2 f440      	BRSH _0x2000028
0003b3 940e 09ce 	CALL SUBOPT_0x16
0003b5 940e 09df 	CALL SUBOPT_0x18
0003b7 940e 09e6 	CALL SUBOPT_0x19
0003b9 5031      	SUBI R19,LOW(1)
0003ba cff5      	RJMP _0x2000026
                 _0x2000028:
0003bb 940e 09bb 	CALL SUBOPT_0x14
                 _0x2000025:
                +
0003bd 85ec     +LDD R30 , Y + 12
0003be 85fd     +LDD R31 , Y + 12 + 1
0003bf 856e     +LDD R22 , Y + 12 + 2
0003c0 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0003c1 940e 09eb 	CALL SUBOPT_0x1A
0003c3 940e 09e6 	CALL SUBOPT_0x19
0003c5 940e 09c6 	CALL SUBOPT_0x15
0003c7 f020      	BRLO _0x2000029
0003c8 940e 09ce 	CALL SUBOPT_0x16
0003ca 940e 09d3 	CALL SUBOPT_0x17
                 _0x2000029:
                 _0x2000020:
0003cc e010      	LDI  R17,LOW(0)
                 _0x200002A:
0003cd 85eb      	LDD  R30,Y+11
0003ce 17e1      	CP   R30,R17
0003cf f1a8      	BRLO _0x200002C
                +
0003d0 81ac     +LDD R26 , Y + 4
0003d1 81bd     +LDD R27 , Y + 4 + 1
0003d2 818e     +LDD R24 , Y + 4 + 2
0003d3 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0003d4 940e 09f2 	CALL SUBOPT_0x1B
0003d6 940e 09eb 	CALL SUBOPT_0x1A
0003d8 940e 0d0a 	CALL __PUTPARD1
0003da 940e 087f 	CALL _floor
0003dc 940e 0959 	CALL SUBOPT_0x5
0003de 940e 0963 	CALL SUBOPT_0x7
0003e0 940e 09ce 	CALL SUBOPT_0x16
0003e2 940e 0c0e 	CALL __DIVF21
0003e4 940e 0afd 	CALL __CFD1U
0003e6 2f0e      	MOV  R16,R30
0003e7 940e 09f9 	CALL SUBOPT_0x1C
0003e9 940e 0a00 	CALL SUBOPT_0x1D
0003eb 27ff      	CLR  R31
0003ec 2766      	CLR  R22
0003ed 2777      	CLR  R23
0003ee 940e 0b36 	CALL __CDF1
                +
0003f0 81ac     +LDD R26 , Y + 4
0003f1 81bd     +LDD R27 , Y + 4 + 1
0003f2 818e     +LDD R24 , Y + 4 + 2
0003f3 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0003f4 940e 0bc0 	CALL __MULF12
0003f6 940e 09ce 	CALL SUBOPT_0x16
0003f8 940e 095e 	CALL SUBOPT_0x6
0003fa 940e 09e6 	CALL SUBOPT_0x19
0003fc 2fe1      	MOV  R30,R17
0003fd 5f1f      	SUBI R17,-1
0003fe 30e0      	CPI  R30,0
0003ff f669      	BRNE _0x200002A
000400 940e 09f9 	CALL SUBOPT_0x1C
000402 e2ee      	LDI  R30,LOW(46)
000403 93ec      	ST   X,R30
000404 cfc8      	RJMP _0x200002A
                 _0x200002C:
000405 940e 0a05 	CALL SUBOPT_0x1E
000407 9731      	SBIW R30,1
000408 85aa      	LDD  R26,Y+10
000409 83a0      	STD  Z+0,R26
00040a 3030      	CPI  R19,0
00040b f42c      	BRGE _0x200002E
00040c 9531      	NEG  R19
00040d 85a8      	LDD  R26,Y+8
00040e 85b9      	LDD  R27,Y+8+1
00040f e2ed      	LDI  R30,LOW(45)
000410 c003      	RJMP _0x200010E
                 _0x200002E:
000411 85a8      	LDD  R26,Y+8
000412 85b9      	LDD  R27,Y+8+1
000413 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
000414 93ec      	ST   X,R30
000415 940e 0a05 	CALL SUBOPT_0x1E
000417 940e 0a05 	CALL SUBOPT_0x1E
000419 9731      	SBIW R30,1
00041a 01bf      	MOVW R22,R30
00041b 2fa3      	MOV  R26,R19
00041c e0ea      	LDI  R30,LOW(10)
00041d 940e 0ca9 	CALL __DIVB21
00041f 5de0      	SUBI R30,-LOW(48)
000420 01db      	MOVW R26,R22
000421 93ec      	ST   X,R30
000422 940e 0a05 	CALL SUBOPT_0x1E
000424 9731      	SBIW R30,1
000425 01bf      	MOVW R22,R30
000426 2fa3      	MOV  R26,R19
000427 e0ea      	LDI  R30,LOW(10)
000428 940e 0cd3 	CALL __MODB21
00042a 5de0      	SUBI R30,-LOW(48)
00042b 01db      	MOVW R26,R22
00042c 93ec      	ST   X,R30
00042d 85a8      	LDD  R26,Y+8
00042e 85b9      	LDD  R27,Y+8+1
00042f e0e0      	LDI  R30,LOW(0)
000430 93ec      	ST   X,R30
                 _0x20A0009:
000431 940e 0d29 	CALL __LOADLOCR4
                 _0x20A000A:
000433 9660      	ADIW R28,16
000434 9508      	RET
                 __print_G100:
000435 97ef      	SBIW R28,63
000436 9761      	SBIW R28,17
000437 940e 0d20 	CALL __SAVELOCR6
000439 e010      	LDI  R17,0
                +
00043a 01fe     +MOVW R30 , R28
00043b 5ae8     +SUBI R30 , LOW ( - 88 )
00043c 4fff     +SBCI R31 , HIGH ( - 88 )
00043d 9001     +LD R0 , Z +
00043e 81f0     +LD R31 , Z
00043f 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000440 87e8      	STD  Y+8,R30
000441 87f9      	STD  Y+8+1,R31
                +
000442 01fe     +MOVW R30 , R28
000443 5aea     +SUBI R30 , LOW ( - 86 )
000444 4fff     +SBCI R31 , HIGH ( - 86 )
000445 9001     +LD R0 , Z +
000446 81f0     +LD R31 , Z
000447 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000448 83ee      	STD  Y+6,R30
000449 83ff      	STD  Y+6+1,R31
00044a 81ae      	LDD  R26,Y+6
00044b 81bf      	LDD  R27,Y+6+1
00044c 940e 097a 	CALL SUBOPT_0xA
                 _0x2000030:
00044e 01de      	MOVW R26,R28
00044f 5aa4      	SUBI R26,LOW(-(92))
000450 4fbf      	SBCI R27,HIGH(-(92))
000451 940e 09b1 	CALL SUBOPT_0x12
000453 9731      	SBIW R30,1
000454 91e4      	LPM  R30,Z
000455 2f2e      	MOV  R18,R30
000456 30e0      	CPI  R30,0
000457 f411      	BRNE PC+3
000458 940c 0648 	JMP _0x2000032
00045a 2fe1      	MOV  R30,R17
00045b 30e0      	CPI  R30,0
00045c f439      	BRNE _0x2000036
00045d 3225      	CPI  R18,37
00045e f411      	BRNE _0x2000037
00045f e011      	LDI  R17,LOW(1)
000460 c002      	RJMP _0x2000038
                 _0x2000037:
000461 940e 0a0b 	CALL SUBOPT_0x1F
                 _0x2000038:
000463 c1e3      	RJMP _0x2000035
                 _0x2000036:
000464 30e1      	CPI  R30,LOW(0x1)
000465 f4c1      	BRNE _0x2000039
000466 3225      	CPI  R18,37
000467 f419      	BRNE _0x200003A
000468 940e 0a0b 	CALL SUBOPT_0x1F
00046a c1db      	RJMP _0x200010F
                 _0x200003A:
00046b e012      	LDI  R17,LOW(2)
00046c e0e0      	LDI  R30,LOW(0)
00046d 8bed      	STD  Y+21,R30
00046e e000      	LDI  R16,LOW(0)
00046f 322d      	CPI  R18,45
000470 f411      	BRNE _0x200003B
000471 e001      	LDI  R16,LOW(1)
000472 c1d4      	RJMP _0x2000035
                 _0x200003B:
000473 322b      	CPI  R18,43
000474 f419      	BRNE _0x200003C
000475 e2eb      	LDI  R30,LOW(43)
000476 8bed      	STD  Y+21,R30
000477 c1cf      	RJMP _0x2000035
                 _0x200003C:
000478 3220      	CPI  R18,32
000479 f419      	BRNE _0x200003D
00047a e2e0      	LDI  R30,LOW(32)
00047b 8bed      	STD  Y+21,R30
00047c c1ca      	RJMP _0x2000035
                 _0x200003D:
00047d c002      	RJMP _0x200003E
                 _0x2000039:
00047e 30e2      	CPI  R30,LOW(0x2)
00047f f439      	BRNE _0x200003F
                 _0x200003E:
000480 e050      	LDI  R21,LOW(0)
000481 e013      	LDI  R17,LOW(3)
000482 3320      	CPI  R18,48
000483 f411      	BRNE _0x2000040
000484 6800      	ORI  R16,LOW(128)
000485 c1c1      	RJMP _0x2000035
                 _0x2000040:
000486 c002      	RJMP _0x2000041
                 _0x200003F:
000487 30e3      	CPI  R30,LOW(0x3)
000488 f491      	BRNE _0x2000042
                 _0x2000041:
000489 3320      	CPI  R18,48
00048a f010      	BRLO _0x2000044
00048b 332a      	CPI  R18,58
00048c f008      	BRLO _0x2000045
                 _0x2000044:
00048d c007      	RJMP _0x2000043
                 _0x2000045:
00048e e0aa      	LDI  R26,LOW(10)
00048f 9f5a      	MUL  R21,R26
000490 2d50      	MOV  R21,R0
000491 2fe2      	MOV  R30,R18
000492 53e0      	SUBI R30,LOW(48)
000493 0f5e      	ADD  R21,R30
000494 c1b2      	RJMP _0x2000035
                 _0x2000043:
000495 e040      	LDI  R20,LOW(0)
000496 322e      	CPI  R18,46
000497 f411      	BRNE _0x2000046
000498 e014      	LDI  R17,LOW(4)
000499 c1ad      	RJMP _0x2000035
                 _0x2000046:
00049a c00f      	RJMP _0x2000047
                 _0x2000042:
00049b 30e4      	CPI  R30,LOW(0x4)
00049c f499      	BRNE _0x2000049
00049d 3320      	CPI  R18,48
00049e f010      	BRLO _0x200004B
00049f 332a      	CPI  R18,58
0004a0 f008      	BRLO _0x200004C
                 _0x200004B:
0004a1 c008      	RJMP _0x200004A
                 _0x200004C:
0004a2 6200      	ORI  R16,LOW(32)
0004a3 e0aa      	LDI  R26,LOW(10)
0004a4 9f4a      	MUL  R20,R26
0004a5 2d40      	MOV  R20,R0
0004a6 2fe2      	MOV  R30,R18
0004a7 53e0      	SUBI R30,LOW(48)
0004a8 0f4e      	ADD  R20,R30
0004a9 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0004aa 362c      	CPI  R18,108
0004ab f419      	BRNE _0x200004D
0004ac 6002      	ORI  R16,LOW(2)
0004ad e015      	LDI  R17,LOW(5)
0004ae c198      	RJMP _0x2000035
                 _0x200004D:
0004af c004      	RJMP _0x200004E
                 _0x2000049:
0004b0 30e5      	CPI  R30,LOW(0x5)
0004b1 f011      	BREQ PC+3
0004b2 940c 0647 	JMP _0x2000035
                 _0x200004E:
0004b4 2fe2      	MOV  R30,R18
0004b5 36e3      	CPI  R30,LOW(0x63)
0004b6 f459      	BRNE _0x2000053
0004b7 940e 0a14 	CALL SUBOPT_0x20
0004b9 940e 0a1b 	CALL SUBOPT_0x21
0004bb 940e 0a14 	CALL SUBOPT_0x20
0004bd 81a4      	LDD  R26,Z+4
0004be 93aa      	ST   -Y,R26
0004bf 940e 0a22 	CALL SUBOPT_0x22
0004c1 c184      	RJMP _0x2000054
                 _0x2000053:
0004c2 34e5      	CPI  R30,LOW(0x45)
0004c3 f011      	BREQ _0x2000057
0004c4 36e5      	CPI  R30,LOW(0x65)
0004c5 f409      	BRNE _0x2000058
                 _0x2000057:
0004c6 c004      	RJMP _0x2000059
                 _0x2000058:
0004c7 36e6      	CPI  R30,LOW(0x66)
0004c8 f011      	BREQ PC+3
0004c9 940c 0515 	JMP _0x200005A
                 _0x2000059:
0004cb 01fe      	MOVW R30,R28
0004cc 9676      	ADIW R30,22
0004cd 87ee      	STD  Y+14,R30
0004ce 87ff      	STD  Y+14+1,R31
0004cf 940e 0a2a 	CALL SUBOPT_0x23
0004d1 940e 0cf3 	CALL __GETD1P
0004d3 940e 0a31 	CALL SUBOPT_0x24
0004d5 940e 0a36 	CALL SUBOPT_0x25
0004d7 85ad      	LDD  R26,Y+13
0004d8 23aa      	TST  R26
0004d9 f022      	BRMI _0x200005B
0004da 89ad      	LDD  R26,Y+21
0004db 32ab      	CPI  R26,LOW(0x2B)
0004dc f049      	BREQ _0x200005D
0004dd c017      	RJMP _0x200005E
                 _0x200005B:
0004de 940e 0a38 	CALL SUBOPT_0x26
0004e0 940e 0aca 	CALL __ANEGF1
0004e2 940e 0a31 	CALL SUBOPT_0x24
0004e4 e2ed      	LDI  R30,LOW(45)
0004e5 8bed      	STD  Y+21,R30
                 _0x200005D:
0004e6 ff07      	SBRS R16,7
0004e7 c005      	RJMP _0x200005F
0004e8 89ed      	LDD  R30,Y+21
0004e9 93ea      	ST   -Y,R30
0004ea 940e 0a22 	CALL SUBOPT_0x22
0004ec c008      	RJMP _0x2000060
                 _0x200005F:
0004ed 85ee      	LDD  R30,Y+14
0004ee 85ff      	LDD  R31,Y+14+1
0004ef 9631      	ADIW R30,1
0004f0 87ee      	STD  Y+14,R30
0004f1 87ff      	STD  Y+14+1,R31
0004f2 9731      	SBIW R30,1
0004f3 89ad      	LDD  R26,Y+21
0004f4 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0004f5 ff05      	SBRS R16,5
0004f6 e046      	LDI  R20,LOW(6)
0004f7 3626      	CPI  R18,102
0004f8 f461      	BRNE _0x2000062
0004f9 940e 0a38 	CALL SUBOPT_0x26
0004fb 940e 0d0a 	CALL __PUTPARD1
0004fd 934a      	ST   -Y,R20
0004fe 89eb      	LDD  R30,Y+19
0004ff 89fc      	LDD  R31,Y+19+1
000500 93fa      	ST   -Y,R31
000501 93ea      	ST   -Y,R30
000502 940e 0896 	CALL _ftoa
000504 c00b      	RJMP _0x2000063
                 _0x2000062:
000505 940e 0a38 	CALL SUBOPT_0x26
000507 940e 0d0a 	CALL __PUTPARD1
000509 934a      	ST   -Y,R20
00050a 932a      	ST   -Y,R18
00050b 89ec      	LDD  R30,Y+20
00050c 89fd      	LDD  R31,Y+20+1
00050d 93fa      	ST   -Y,R31
00050e 93ea      	ST   -Y,R30
00050f de51      	RCALL __ftoe_G100
                 _0x2000063:
000510 01fe      	MOVW R30,R28
000511 9676      	ADIW R30,22
000512 940e 0a3d 	CALL SUBOPT_0x27
000514 c01e      	RJMP _0x2000064
                 _0x200005A:
000515 37e3      	CPI  R30,LOW(0x73)
000516 f439      	BRNE _0x2000066
000517 940e 0a36 	CALL SUBOPT_0x25
000519 940e 0a45 	CALL SUBOPT_0x28
00051b 940e 0a3d 	CALL SUBOPT_0x27
00051d c00e      	RJMP _0x2000067
                 _0x2000066:
00051e 37e0      	CPI  R30,LOW(0x70)
00051f f4c1      	BRNE _0x2000069
000520 940e 0a36 	CALL SUBOPT_0x25
000522 940e 0a45 	CALL SUBOPT_0x28
000524 87ee      	STD  Y+14,R30
000525 87ff      	STD  Y+14+1,R31
000526 93fa      	ST   -Y,R31
000527 93ea      	ST   -Y,R30
000528 940e 0845 	CALL _strlenf
00052a 2f1e      	MOV  R17,R30
00052b 6008      	ORI  R16,LOW(8)
                 _0x2000067:
00052c 770f      	ANDI R16,LOW(127)
00052d 3040      	CPI  R20,0
00052e f011      	BREQ _0x200006B
00052f 1741      	CP   R20,R17
000530 f008      	BRLO _0x200006C
                 _0x200006B:
000531 c001      	RJMP _0x200006A
                 _0x200006C:
000532 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000533 e040      	LDI  R20,LOW(0)
000534 e0e0      	LDI  R30,LOW(0)
000535 8bec      	STD  Y+20,R30
000536 e030      	LDI  R19,LOW(0)
000537 c06e      	RJMP _0x200006D
                 _0x2000069:
000538 36e4      	CPI  R30,LOW(0x64)
000539 f011      	BREQ _0x2000070
00053a 36e9      	CPI  R30,LOW(0x69)
00053b f411      	BRNE _0x2000071
                 _0x2000070:
00053c 6004      	ORI  R16,LOW(4)
00053d c002      	RJMP _0x2000072
                 _0x2000071:
00053e 37e5      	CPI  R30,LOW(0x75)
00053f f4a1      	BRNE _0x2000073
                 _0x2000072:
000540 e0ea      	LDI  R30,LOW(10)
000541 8bec      	STD  Y+20,R30
000542 ff01      	SBRS R16,1
000543 c008      	RJMP _0x2000074
                +
000544 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000545 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000546 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000547 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000548 940e 0a4a 	CALL SUBOPT_0x29
00054a e01a      	LDI  R17,LOW(10)
00054b c023      	RJMP _0x2000075
                 _0x2000074:
                +
00054c e1e0     +LDI R30 , LOW ( 0x2710 )
00054d e2f7     +LDI R31 , HIGH ( 0x2710 )
00054e e060     +LDI R22 , BYTE3 ( 0x2710 )
00054f e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000550 940e 0a4a 	CALL SUBOPT_0x29
000552 e015      	LDI  R17,LOW(5)
000553 c01b      	RJMP _0x2000075
                 _0x2000073:
000554 35e8      	CPI  R30,LOW(0x58)
000555 f411      	BRNE _0x2000077
000556 6008      	ORI  R16,LOW(8)
000557 c004      	RJMP _0x2000078
                 _0x2000077:
000558 37e8      	CPI  R30,LOW(0x78)
000559 f011      	BREQ PC+3
00055a 940c 0646 	JMP _0x20000B6
                 _0x2000078:
00055c e1e0      	LDI  R30,LOW(16)
00055d 8bec      	STD  Y+20,R30
00055e ff01      	SBRS R16,1
00055f c008      	RJMP _0x200007A
                +
000560 e0e0     +LDI R30 , LOW ( 0x10000000 )
000561 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000562 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000563 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000564 940e 0a4a 	CALL SUBOPT_0x29
000566 e018      	LDI  R17,LOW(8)
000567 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000568 e0e0     +LDI R30 , LOW ( 0x1000 )
000569 e1f0     +LDI R31 , HIGH ( 0x1000 )
00056a e060     +LDI R22 , BYTE3 ( 0x1000 )
00056b e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00056c 940e 0a4a 	CALL SUBOPT_0x29
00056e e014      	LDI  R17,LOW(4)
                 _0x2000075:
00056f 3040      	CPI  R20,0
000570 f011      	BREQ _0x200007B
000571 770f      	ANDI R16,LOW(127)
000572 c001      	RJMP _0x200007C
                 _0x200007B:
000573 e041      	LDI  R20,LOW(1)
                 _0x200007C:
000574 ff01      	SBRS R16,1
000575 c008      	RJMP _0x200007D
000576 940e 0a36 	CALL SUBOPT_0x25
000578 940e 0a2a 	CALL SUBOPT_0x23
00057a 9614      	ADIW R26,4
00057b 940e 0cf3 	CALL __GETD1P
00057d c00f      	RJMP _0x2000110
                 _0x200007D:
00057e ff02      	SBRS R16,2
00057f c007      	RJMP _0x200007F
000580 940e 0a36 	CALL SUBOPT_0x25
000582 940e 0a45 	CALL SUBOPT_0x28
000584 940e 0c8e 	CALL __CWD1
000586 c006      	RJMP _0x2000110
                 _0x200007F:
000587 940e 0a36 	CALL SUBOPT_0x25
000589 940e 0a45 	CALL SUBOPT_0x28
00058b 2766      	CLR  R22
00058c 2777      	CLR  R23
                 _0x2000110:
                +
00058d 87ea     +STD Y + 10 , R30
00058e 87fb     +STD Y + 10 + 1 , R31
00058f 876c     +STD Y + 10 + 2 , R22
000590 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000591 ff02      	SBRS R16,2
000592 c012      	RJMP _0x2000081
000593 85ad      	LDD  R26,Y+13
000594 23aa      	TST  R26
000595 f442      	BRPL _0x2000082
000596 940e 0a38 	CALL SUBOPT_0x26
000598 940e 0c7b 	CALL __ANEGD1
00059a 940e 0a31 	CALL SUBOPT_0x24
00059c e2ed      	LDI  R30,LOW(45)
00059d 8bed      	STD  Y+21,R30
                 _0x2000082:
00059e 89ed      	LDD  R30,Y+21
00059f 30e0      	CPI  R30,0
0005a0 f019      	BREQ _0x2000083
0005a1 5f1f      	SUBI R17,-LOW(1)
0005a2 5f4f      	SUBI R20,-LOW(1)
0005a3 c001      	RJMP _0x2000084
                 _0x2000083:
0005a4 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
0005a5 2f34      	MOV  R19,R20
                 _0x200006D:
0005a6 fd00      	SBRC R16,0
0005a7 c014      	RJMP _0x2000085
                 _0x2000086:
0005a8 1715      	CP   R17,R21
0005a9 f410      	BRSH _0x2000089
0005aa 1735      	CP   R19,R21
0005ab f008      	BRLO _0x200008A
                 _0x2000089:
0005ac c00f      	RJMP _0x2000088
                 _0x200008A:
0005ad ff07      	SBRS R16,7
0005ae c008      	RJMP _0x200008B
0005af ff02      	SBRS R16,2
0005b0 c004      	RJMP _0x200008C
0005b1 7f0b      	ANDI R16,LOW(251)
0005b2 892d      	LDD  R18,Y+21
0005b3 5011      	SUBI R17,LOW(1)
0005b4 c001      	RJMP _0x200008D
                 _0x200008C:
0005b5 e320      	LDI  R18,LOW(48)
                 _0x200008D:
0005b6 c001      	RJMP _0x200008E
                 _0x200008B:
0005b7 e220      	LDI  R18,LOW(32)
                 _0x200008E:
0005b8 940e 0a0b 	CALL SUBOPT_0x1F
0005ba 5051      	SUBI R21,LOW(1)
0005bb cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0005bc 1714      	CP   R17,R20
0005bd f490      	BRSH _0x2000091
0005be 6100      	ORI  R16,LOW(16)
0005bf ff02      	SBRS R16,2
0005c0 c006      	RJMP _0x2000092
0005c1 940e 0a4f 	CALL SUBOPT_0x2A
0005c3 f009      	BREQ _0x2000093
0005c4 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0005c5 5011      	SUBI R17,LOW(1)
0005c6 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0005c7 e3e0      	LDI  R30,LOW(48)
0005c8 93ea      	ST   -Y,R30
0005c9 940e 0a22 	CALL SUBOPT_0x22
0005cb 3050      	CPI  R21,0
0005cc f009      	BREQ _0x2000094
0005cd 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0005ce 5041      	SUBI R20,LOW(1)
0005cf cfec      	RJMP _0x200008F
                 _0x2000091:
0005d0 2f31      	MOV  R19,R17
0005d1 89ec      	LDD  R30,Y+20
0005d2 30e0      	CPI  R30,0
0005d3 f4b9      	BRNE _0x2000095
                 _0x2000096:
0005d4 3030      	CPI  R19,0
0005d5 f0a1      	BREQ _0x2000098
0005d6 ff03      	SBRS R16,3
0005d7 c006      	RJMP _0x2000099
0005d8 85ee      	LDD  R30,Y+14
0005d9 85ff      	LDD  R31,Y+14+1
0005da 9125      	LPM  R18,Z+
0005db 87ee      	STD  Y+14,R30
0005dc 87ff      	STD  Y+14+1,R31
0005dd c005      	RJMP _0x200009A
                 _0x2000099:
0005de 85ae      	LDD  R26,Y+14
0005df 85bf      	LDD  R27,Y+14+1
0005e0 912d      	LD   R18,X+
0005e1 87ae      	STD  Y+14,R26
0005e2 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0005e3 940e 0a0b 	CALL SUBOPT_0x1F
0005e5 3050      	CPI  R21,0
0005e6 f009      	BREQ _0x200009B
0005e7 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0005e8 5031      	SUBI R19,LOW(1)
0005e9 cfea      	RJMP _0x2000096
                 _0x2000098:
0005ea c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0005eb 940e 0a63 	CALL SUBOPT_0x2B
0005ed 940e 0cae 	CALL __DIVD21U
0005ef 2f2e      	MOV  R18,R30
0005f0 302a      	CPI  R18,10
0005f1 f030      	BRLO _0x20000A0
0005f2 ff03      	SBRS R16,3
0005f3 c002      	RJMP _0x20000A1
0005f4 5c29      	SUBI R18,-LOW(55)
0005f5 c001      	RJMP _0x20000A2
                 _0x20000A1:
0005f6 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0005f7 c001      	RJMP _0x20000A3
                 _0x20000A0:
0005f8 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0005f9 fd04      	SBRC R16,4
0005fa c021      	RJMP _0x20000A5
0005fb 3321      	CPI  R18,49
0005fc f460      	BRSH _0x20000A7
                +
0005fd 89a8     +LDD R26 , Y + 16
0005fe 89b9     +LDD R27 , Y + 16 + 1
0005ff 898a     +LDD R24 , Y + 16 + 2
000600 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000601 30a1     +CPI R26 , LOW ( 0x1 )
000602 e0e0     +LDI R30 , HIGH ( 0x1 )
000603 07be     +CPC R27 , R30
000604 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000605 078e     +CPC R24 , R30
000606 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000607 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000608 f409      	BRNE _0x20000A6
                 _0x20000A7:
000609 c00b      	RJMP _0x20000A9
                 _0x20000A6:
00060a 1743      	CP   R20,R19
00060b f440      	BRSH _0x2000111
00060c 1753      	CP   R21,R19
00060d f010      	BRLO _0x20000AC
00060e ff00      	SBRS R16,0
00060f c001      	RJMP _0x20000AD
                 _0x20000AC:
000610 c010      	RJMP _0x20000AB
                 _0x20000AD:
000611 e220      	LDI  R18,LOW(32)
000612 ff07      	SBRS R16,7
000613 c008      	RJMP _0x20000AE
                 _0x2000111:
000614 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000615 6100      	ORI  R16,LOW(16)
000616 ff02      	SBRS R16,2
000617 c004      	RJMP _0x20000AF
000618 940e 0a4f 	CALL SUBOPT_0x2A
00061a f009      	BREQ _0x20000B0
00061b 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
00061c 940e 0a0b 	CALL SUBOPT_0x1F
00061e 3050      	CPI  R21,0
00061f f009      	BREQ _0x20000B1
000620 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000621 5031      	SUBI R19,LOW(1)
000622 940e 0a63 	CALL SUBOPT_0x2B
000624 940e 0cdf 	CALL __MODD21U
000626 940e 0a31 	CALL SUBOPT_0x24
000628 89ec      	LDD  R30,Y+20
                +
000629 89a8     +LDD R26 , Y + 16
00062a 89b9     +LDD R27 , Y + 16 + 1
00062b 898a     +LDD R24 , Y + 16 + 2
00062c 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00062d 27ff      	CLR  R31
00062e 2766      	CLR  R22
00062f 2777      	CLR  R23
000630 940e 0cae 	CALL __DIVD21U
000632 940e 0a4a 	CALL SUBOPT_0x29
                +
000634 89e8     +LDD R30 , Y + 16
000635 89f9     +LDD R31 , Y + 16 + 1
000636 896a     +LDD R22 , Y + 16 + 2
000637 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000638 940e 0d1c 	CALL __CPD10
00063a f009      	BREQ _0x200009F
00063b cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
00063c ff00      	SBRS R16,0
00063d c008      	RJMP _0x20000B2
                 _0x20000B3:
00063e 3050      	CPI  R21,0
00063f f031      	BREQ _0x20000B5
000640 5051      	SUBI R21,LOW(1)
000641 e2e0      	LDI  R30,LOW(32)
000642 93ea      	ST   -Y,R30
000643 940e 0a22 	CALL SUBOPT_0x22
000645 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000646 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000647 ce06      	RJMP _0x2000030
                 _0x2000032:
000648 81ae      	LDD  R26,Y+6
000649 81bf      	LDD  R27,Y+6+1
00064a 940e 0cef 	CALL __GETW1P
00064c 940e 0d27 	CALL __LOADLOCR6
00064e 96ef      	ADIW R28,63
00064f 966f      	ADIW R28,31
000650 9508      	RET
                 _sprintf:
000651 92ff      	PUSH R15
000652 2ef8      	MOV  R15,R24
000653 9726      	SBIW R28,6
000654 940e 0d22 	CALL __SAVELOCR4
000656 940e 0a6c 	CALL SUBOPT_0x2C
000658 9730      	SBIW R30,0
000659 f419      	BRNE _0x20000B7
00065a efef      	LDI  R30,LOW(65535)
00065b efff      	LDI  R31,HIGH(65535)
00065c c023      	RJMP _0x20A0008
                 _0x20000B7:
00065d 01de      	MOVW R26,R28
00065e 9616      	ADIW R26,6
00065f 940e 0c73 	CALL __ADDW2R15
000661 018d      	MOVW R16,R26
000662 940e 0a6c 	CALL SUBOPT_0x2C
000664 83ee      	STD  Y+6,R30
000665 83ff      	STD  Y+6+1,R31
000666 e0e0      	LDI  R30,LOW(0)
000667 87e8      	STD  Y+8,R30
000668 87e9      	STD  Y+8+1,R30
000669 01de      	MOVW R26,R28
00066a 961a      	ADIW R26,10
00066b 940e 0a73 	CALL SUBOPT_0x2D
00066d 93fa      	ST   -Y,R31
00066e 93ea      	ST   -Y,R30
00066f 931a      	ST   -Y,R17
000670 930a      	ST   -Y,R16
000671 e2ea      	LDI  R30,LOW(_put_buff_G100)
000672 e0f3      	LDI  R31,HIGH(_put_buff_G100)
000673 93fa      	ST   -Y,R31
000674 93ea      	ST   -Y,R30
000675 01fe      	MOVW R30,R28
000676 963a      	ADIW R30,10
000677 93fa      	ST   -Y,R31
000678 93ea      	ST   -Y,R30
000679 ddbb      	RCALL __print_G100
00067a 019f      	MOVW R18,R30
00067b 81ae      	LDD  R26,Y+6
00067c 81bf      	LDD  R27,Y+6+1
00067d e0e0      	LDI  R30,LOW(0)
00067e 93ec      	ST   X,R30
00067f 01f9      	MOVW R30,R18
                 _0x20A0008:
000680 940e 0d29 	CALL __LOADLOCR4
000682 962a      	ADIW R28,10
000683 90ff      	POP  R15
000684 9508      	RET
                 _get_buff_G100:
000685 931a      	ST   -Y,R17
000686 81a9      	LDD  R26,Y+1
000687 81ba      	LDD  R27,Y+1+1
000688 e0e0      	LDI  R30,LOW(0)
000689 93ec      	ST   X,R30
00068a 81ab      	LDD  R26,Y+3
00068b 81bc      	LDD  R27,Y+3+1
00068c 91ec      	LD   R30,X
00068d 2f1e      	MOV  R17,R30
00068e 30e0      	CPI  R30,0
00068f f019      	BREQ _0x20000BF
000690 e0e0      	LDI  R30,LOW(0)
000691 93ec      	ST   X,R30
000692 c016      	RJMP _0x20000C0
                 _0x20000BF:
000693 81a9      	LDD  R26,Y+1
000694 81ba      	LDD  R27,Y+1+1
000695 9611      	ADIW R26,1
000696 940e 0cef 	CALL __GETW1P
000698 9730      	SBIW R30,0
000699 f071      	BREQ _0x20000C1
00069a 81e9      	LDD  R30,Y+1
00069b 81fa      	LDD  R31,Y+1+1
00069c 81a1      	LDD  R26,Z+1
00069d 81b2      	LDD  R27,Z+2
00069e 91ec      	LD   R30,X
00069f 2f1e      	MOV  R17,R30
0006a0 30e0      	CPI  R30,0
0006a1 f029      	BREQ _0x20000C2
0006a2 81a9      	LDD  R26,Y+1
0006a3 81ba      	LDD  R27,Y+1+1
0006a4 9611      	ADIW R26,1
0006a5 940e 09b1 	CALL SUBOPT_0x12
                 _0x20000C2:
0006a7 c001      	RJMP _0x20000C3
                 _0x20000C1:
0006a8 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
0006a9 2fe1      	MOV  R30,R17
0006aa 8118      	LDD  R17,Y+0
                 _0x20A0007:
0006ab 9625      	ADIW R28,5
0006ac 9508      	RET
                 __scanf_G100:
0006ad 9725      	SBIW R28,5
0006ae 940e 0d20 	CALL __SAVELOCR6
0006b0 e0e0      	LDI  R30,LOW(0)
0006b1 e0f0      	LDI  R31,HIGH(0)
0006b2 87e8      	STD  Y+8,R30
0006b3 87f9      	STD  Y+8+1,R31
0006b4 2f4e      	MOV  R20,R30
                 _0x20000C4:
0006b5 89e9      	LDD  R30,Y+17
0006b6 89fa      	LDD  R31,Y+17+1
0006b7 9631      	ADIW R30,1
0006b8 8be9      	STD  Y+17,R30
0006b9 8bfa      	STD  Y+17+1,R31
0006ba 9731      	SBIW R30,1
0006bb 91e4      	LPM  R30,Z
0006bc 2f3e      	MOV  R19,R30
0006bd 30e0      	CPI  R30,0
0006be f411      	BRNE PC+3
0006bf 940c 07db 	JMP _0x20000C6
0006c1 940e 0a78 	CALL SUBOPT_0x2E
0006c3 f0c1      	BREQ _0x20000C7
                 _0x20000C8:
0006c4 b7ed      	IN   R30,SPL
0006c5 b7fe      	IN   R31,SPH
0006c6 93fa      	ST   -Y,R31
0006c7 93ea      	ST   -Y,R30
0006c8 934f      	PUSH R20
0006c9 940e 0a7d 	CALL SUBOPT_0x2F
0006cb 914f      	POP  R20
0006cc 2f3e      	MOV  R19,R30
0006cd 30e0      	CPI  R30,0
0006ce f019      	BREQ _0x20000CB
0006cf 940e 0a78 	CALL SUBOPT_0x2E
0006d1 f409      	BRNE _0x20000CC
                 _0x20000CB:
0006d2 c007      	RJMP _0x20000CA
                 _0x20000CC:
0006d3 940e 0a85 	CALL SUBOPT_0x30
0006d5 f41c      	BRGE _0x20000CD
0006d6 efef      	LDI  R30,LOW(65535)
0006d7 efff      	LDI  R31,HIGH(65535)
0006d8 c104      	RJMP _0x20A0005
                 _0x20000CD:
0006d9 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0006da 2f43      	MOV  R20,R19
0006db c0fe      	RJMP _0x20000CE
                 _0x20000C7:
0006dc 3235      	CPI  R19,37
0006dd f011      	BREQ PC+3
0006de 940c 07c2 	JMP _0x20000CF
0006e0 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0006e1 89e9      	LDD  R30,Y+17
0006e2 89fa      	LDD  R31,Y+17+1
0006e3 9135      	LPM  R19,Z+
0006e4 8be9      	STD  Y+17,R30
0006e5 8bfa      	STD  Y+17+1,R31
0006e6 3330      	CPI  R19,48
0006e7 f010      	BRLO _0x20000D4
0006e8 333a      	CPI  R19,58
0006e9 f008      	BRLO _0x20000D3
                 _0x20000D4:
0006ea c007      	RJMP _0x20000D2
                 _0x20000D3:
0006eb e0aa      	LDI  R26,LOW(10)
0006ec 9f5a      	MUL  R21,R26
0006ed 2d50      	MOV  R21,R0
0006ee 2fe3      	MOV  R30,R19
0006ef 53e0      	SUBI R30,LOW(48)
0006f0 0f5e      	ADD  R21,R30
0006f1 cfef      	RJMP _0x20000D0
                 _0x20000D2:
0006f2 3030      	CPI  R19,0
0006f3 f409      	BRNE _0x20000D6
0006f4 c0e6      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0006f5 b7ed      	IN   R30,SPL
0006f6 b7fe      	IN   R31,SPH
0006f7 93fa      	ST   -Y,R31
0006f8 93ea      	ST   -Y,R30
0006f9 934f      	PUSH R20
0006fa 940e 0a7d 	CALL SUBOPT_0x2F
0006fc 914f      	POP  R20
0006fd 2f2e      	MOV  R18,R30
0006fe 93ea      	ST   -Y,R30
0006ff 940e 0818 	CALL _isspace
000701 30e0      	CPI  R30,0
000702 f039      	BREQ _0x20000D9
000703 940e 0a85 	CALL SUBOPT_0x30
000705 f41c      	BRGE _0x20000DA
000706 efef      	LDI  R30,LOW(65535)
000707 efff      	LDI  R31,HIGH(65535)
000708 c0d4      	RJMP _0x20A0005
                 _0x20000DA:
000709 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
00070a 3020      	CPI  R18,0
00070b f409      	BRNE _0x20000DB
00070c c0c5      	RJMP _0x20000DC
                 _0x20000DB:
00070d 2f42      	MOV  R20,R18
00070e 3050      	CPI  R21,0
00070f f409      	BRNE _0x20000DD
000710 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000711 2fe3      	MOV  R30,R19
000712 36e3      	CPI  R30,LOW(0x63)
000713 f499      	BRNE _0x20000E1
000714 940e 0a8a 	CALL SUBOPT_0x31
000716 b7ed      	IN   R30,SPL
000717 b7fe      	IN   R31,SPH
000718 93fa      	ST   -Y,R31
000719 93ea      	ST   -Y,R30
00071a 934f      	PUSH R20
00071b 940e 0a7d 	CALL SUBOPT_0x2F
00071d 914f      	POP  R20
00071e 01d8      	MOVW R26,R16
00071f 93ec      	ST   X,R30
000720 940e 0a85 	CALL SUBOPT_0x30
000722 f41c      	BRGE _0x20000E2
000723 efef      	LDI  R30,LOW(65535)
000724 efff      	LDI  R31,HIGH(65535)
000725 c0b7      	RJMP _0x20A0005
                 _0x20000E2:
000726 c098      	RJMP _0x20000E0
                 _0x20000E1:
000727 37e3      	CPI  R30,LOW(0x73)
000728 f541      	BRNE _0x20000EB
000729 940e 0a8a 	CALL SUBOPT_0x31
                 _0x20000E4:
00072b 2fe5      	MOV  R30,R21
00072c 5051      	SUBI R21,1
00072d 30e0      	CPI  R30,0
00072e f0f1      	BREQ _0x20000E6
00072f b7ed      	IN   R30,SPL
000730 b7fe      	IN   R31,SPH
000731 93fa      	ST   -Y,R31
000732 93ea      	ST   -Y,R30
000733 934f      	PUSH R20
000734 940e 0a7d 	CALL SUBOPT_0x2F
000736 914f      	POP  R20
000737 2f3e      	MOV  R19,R30
000738 30e0      	CPI  R30,0
000739 f019      	BREQ _0x20000E8
00073a 940e 0a78 	CALL SUBOPT_0x2E
00073c f039      	BREQ _0x20000E7
                 _0x20000E8:
00073d 940e 0a85 	CALL SUBOPT_0x30
00073f f41c      	BRGE _0x20000EA
000740 efef      	LDI  R30,LOW(65535)
000741 efff      	LDI  R31,HIGH(65535)
000742 c09a      	RJMP _0x20A0005
                 _0x20000EA:
000743 c009      	RJMP _0x20000E6
                 _0x20000E7:
000744 931f      	PUSH R17
000745 930f      	PUSH R16
                +
000746 5f0f     +SUBI R16 , LOW ( - 1 )
000747 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000748 2fe3      	MOV  R30,R19
000749 91af      	POP  R26
00074a 91bf      	POP  R27
00074b 93ec      	ST   X,R30
00074c cfde      	RJMP _0x20000E4
                 _0x20000E6:
00074d 01d8      	MOVW R26,R16
00074e e0e0      	LDI  R30,LOW(0)
00074f 93ec      	ST   X,R30
000750 c06e      	RJMP _0x20000E0
                 _0x20000EB:
000751 e0e1      	LDI  R30,LOW(1)
000752 87ea      	STD  Y+10,R30
000753 2fe3      	MOV  R30,R19
000754 36e4      	CPI  R30,LOW(0x64)
000755 f011      	BREQ _0x20000F0
000756 36e9      	CPI  R30,LOW(0x69)
000757 f419      	BRNE _0x20000F1
                 _0x20000F0:
000758 e0e0      	LDI  R30,LOW(0)
000759 87ea      	STD  Y+10,R30
00075a c002      	RJMP _0x20000F2
                 _0x20000F1:
00075b 37e5      	CPI  R30,LOW(0x75)
00075c f411      	BRNE _0x20000F3
                 _0x20000F2:
00075d e02a      	LDI  R18,LOW(10)
00075e c008      	RJMP _0x20000EE
                 _0x20000F3:
00075f 37e8      	CPI  R30,LOW(0x78)
000760 f411      	BRNE _0x20000F4
000761 e120      	LDI  R18,LOW(16)
000762 c004      	RJMP _0x20000EE
                 _0x20000F4:
000763 32e5      	CPI  R30,LOW(0x25)
000764 f409      	BRNE _0x20000F7
000765 c05c      	RJMP _0x20000F6
                 _0x20000F7:
000766 c074      	RJMP _0x20A0006
                 _0x20000EE:
000767 e0e0      	LDI  R30,LOW(0)
000768 83ee      	STD  Y+6,R30
000769 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
00076a 2fe5      	MOV  R30,R21
00076b 5051      	SUBI R21,1
00076c 30e0      	CPI  R30,0
00076d f411      	BRNE PC+3
00076e 940c 07b2 	JMP _0x20000FA
000770 b7ed      	IN   R30,SPL
000771 b7fe      	IN   R31,SPH
000772 93fa      	ST   -Y,R31
000773 93ea      	ST   -Y,R30
000774 934f      	PUSH R20
000775 940e 0a7d 	CALL SUBOPT_0x2F
000777 914f      	POP  R20
000778 2f3e      	MOV  R19,R30
000779 32e1      	CPI  R30,LOW(0x21)
00077a f438      	BRSH _0x20000FB
00077b 940e 0a85 	CALL SUBOPT_0x30
00077d f41c      	BRGE _0x20000FC
00077e efef      	LDI  R30,LOW(65535)
00077f efff      	LDI  R31,HIGH(65535)
000780 c05c      	RJMP _0x20A0005
                 _0x20000FC:
000781 c017      	RJMP _0x20000FD
                 _0x20000FB:
000782 85ea      	LDD  R30,Y+10
000783 30e0      	CPI  R30,0
000784 f439      	BRNE _0x20000FE
000785 323d      	CPI  R19,45
000786 f419      	BRNE _0x20000FF
000787 efef      	LDI  R30,LOW(255)
000788 87ea      	STD  Y+10,R30
000789 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
00078a e0e1      	LDI  R30,LOW(1)
00078b 87ea      	STD  Y+10,R30
                 _0x20000FE:
00078c 3120      	CPI  R18,16
00078d f431      	BRNE _0x2000101
00078e 933a      	ST   -Y,R19
00078f 940e 0822 	CALL _isxdigit
000791 30e0      	CPI  R30,0
000792 f031      	BREQ _0x20000FD
000793 c007      	RJMP _0x2000103
                 _0x2000101:
000794 933a      	ST   -Y,R19
000795 940e 0810 	CALL _isdigit
000797 30e0      	CPI  R30,0
000798 f411      	BRNE _0x2000104
                 _0x20000FD:
000799 2f43      	MOV  R20,R19
00079a c017      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
00079b 3631      	CPI  R19,97
00079c f010      	BRLO _0x2000105
00079d 5537      	SUBI R19,LOW(87)
00079e c005      	RJMP _0x2000106
                 _0x2000105:
00079f 3431      	CPI  R19,65
0007a0 f010      	BRLO _0x2000107
0007a1 5337      	SUBI R19,LOW(55)
0007a2 c001      	RJMP _0x2000108
                 _0x2000107:
0007a3 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
0007a4 2fe2      	MOV  R30,R18
0007a5 81ae      	LDD  R26,Y+6
0007a6 81bf      	LDD  R27,Y+6+1
0007a7 e0f0      	LDI  R31,0
0007a8 940e 0c93 	CALL __MULW12U
0007aa 01df      	MOVW R26,R30
0007ab 2fe3      	MOV  R30,R19
0007ac e0f0      	LDI  R31,0
0007ad 0fea      	ADD  R30,R26
0007ae 1ffb      	ADC  R31,R27
0007af 83ee      	STD  Y+6,R30
0007b0 83ff      	STD  Y+6+1,R31
0007b1 cfb8      	RJMP _0x20000F8
                 _0x20000FA:
0007b2 940e 0a8a 	CALL SUBOPT_0x31
0007b4 85ea      	LDD  R30,Y+10
0007b5 81ae      	LDD  R26,Y+6
0007b6 81bf      	LDD  R27,Y+6+1
0007b7 e0f0      	LDI  R31,0
0007b8 fde7      	SBRC R30,7
0007b9 efff      	SER  R31
0007ba 940e 0c93 	CALL __MULW12U
0007bc 01d8      	MOVW R26,R16
0007bd 93ed      	ST   X+,R30
0007be 93fc      	ST   X,R31
                 _0x20000E0:
0007bf 940e 0a05 	CALL SUBOPT_0x1E
0007c1 c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
0007c2 b7ed      	IN   R30,SPL
0007c3 b7fe      	IN   R31,SPH
0007c4 93fa      	ST   -Y,R31
0007c5 93ea      	ST   -Y,R30
0007c6 934f      	PUSH R20
0007c7 940e 0a7d 	CALL SUBOPT_0x2F
0007c9 914f      	POP  R20
0007ca 17e3      	CP   R30,R19
0007cb f071      	BREQ _0x200010A
0007cc 940e 0a85 	CALL SUBOPT_0x30
0007ce f41c      	BRGE _0x200010B
0007cf efef      	LDI  R30,LOW(65535)
0007d0 efff      	LDI  R31,HIGH(65535)
0007d1 c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
0007d2 85e8      	LDD  R30,Y+8
0007d3 85f9      	LDD  R31,Y+8+1
0007d4 9730      	SBIW R30,0
0007d5 f419      	BRNE _0x200010C
0007d6 efef      	LDI  R30,LOW(65535)
0007d7 efff      	LDI  R31,HIGH(65535)
0007d8 c004      	RJMP _0x20A0005
                 _0x200010C:
0007d9 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
0007da ceda      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
0007db 85e8      	LDD  R30,Y+8
0007dc 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
0007dd 940e 0d27 	CALL __LOADLOCR6
0007df 9663      	ADIW R28,19
0007e0 9508      	RET
                 _sscanf:
0007e1 92ff      	PUSH R15
0007e2 2ef8      	MOV  R15,R24
0007e3 9723      	SBIW R28,3
0007e4 931a      	ST   -Y,R17
0007e5 930a      	ST   -Y,R16
0007e6 01de      	MOVW R26,R28
0007e7 9617      	ADIW R26,7
0007e8 940e 0a73 	CALL SUBOPT_0x2D
0007ea 9730      	SBIW R30,0
0007eb f419      	BRNE _0x200010D
0007ec efef      	LDI  R30,LOW(65535)
0007ed efff      	LDI  R31,HIGH(65535)
0007ee c01c      	RJMP _0x20A0004
                 _0x200010D:
0007ef 01de      	MOVW R26,R28
0007f0 9611      	ADIW R26,1
0007f1 940e 0c73 	CALL __ADDW2R15
0007f3 018d      	MOVW R16,R26
0007f4 01de      	MOVW R26,R28
0007f5 9617      	ADIW R26,7
0007f6 940e 0a73 	CALL SUBOPT_0x2D
0007f8 83eb      	STD  Y+3,R30
0007f9 83fc      	STD  Y+3+1,R31
0007fa 01de      	MOVW R26,R28
0007fb 9615      	ADIW R26,5
0007fc 940e 0a73 	CALL SUBOPT_0x2D
0007fe 93fa      	ST   -Y,R31
0007ff 93ea      	ST   -Y,R30
000800 931a      	ST   -Y,R17
000801 930a      	ST   -Y,R16
000802 e8e5      	LDI  R30,LOW(_get_buff_G100)
000803 e0f6      	LDI  R31,HIGH(_get_buff_G100)
000804 93fa      	ST   -Y,R31
000805 93ea      	ST   -Y,R30
000806 01fe      	MOVW R30,R28
000807 9638      	ADIW R30,8
000808 93fa      	ST   -Y,R31
000809 93ea      	ST   -Y,R30
00080a dea2      	RCALL __scanf_G100
                 _0x20A0004:
00080b 8119      	LDD  R17,Y+1
00080c 8108      	LDD  R16,Y+0
00080d 9625      	ADIW R28,5
00080e 90ff      	POP  R15
00080f 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000810 e0e1          ldi  r30,1
000811 91f9          ld   r31,y+
000812 33f0          cpi  r31,'0'
000813 f010          brlo isdigit0
000814 33fa          cpi  r31,'9'+1
000815 f008          brlo isdigit1
                 isdigit0:
000816 27ee          clr  r30
                 isdigit1:
000817 9508          ret
                 _isspace:
000818 e0e1          ldi  r30,1
000819 91f9          ld   r31,y+
00081a 32f0          cpi  r31,' '
00081b f029          breq isspace1
00081c 30f9          cpi  r31,9
00081d f010          brlo isspace0
00081e 30fe          cpi  r31,13+1
00081f f008          brlo isspace1
                 isspace0:
000820 27ee          clr  r30
                 isspace1:
000821 9508          ret
                 _isxdigit:
000822 e0e1          ldi  r30,1
000823 91f9          ld   r31,y+
000824 53f0          subi r31,0x30
000825 f040          brcs isxdigit0
000826 30fa          cpi  r31,10
000827 f038          brcs isxdigit1
000828 75ff          andi r31,0x5f
000829 50f7          subi r31,7
00082a 30fa          cpi  r31,10
00082b f010          brcs isxdigit0
00082c 31f0          cpi  r31,16
00082d f008          brcs isxdigit1
                 isxdigit0:
00082e 27ee          clr  r30
                 isxdigit1:
00082f 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000830 91e9          ld   r30,y+
000831 91f9          ld   r31,y+
000832 91a9          ld   r26,y+
000833 91b9          ld   r27,y+
000834 01cd          movw r24,r26
                 strcpyf0:
000835 9005      	lpm  r0,z+
000836 920d          st   x+,r0
000837 2000          tst  r0
000838 f7e1          brne strcpyf0
000839 01fc          movw r30,r24
00083a 9508          ret
                 _strlen:
00083b 91a9          ld   r26,y+
00083c 91b9          ld   r27,y+
00083d 27ee          clr  r30
00083e 27ff          clr  r31
                 strlen0:
00083f 916d          ld   r22,x+
000840 2366          tst  r22
000841 f011          breq strlen1
000842 9631          adiw r30,1
000843 cffb          rjmp strlen0
                 strlen1:
000844 9508          ret
                 _strlenf:
000845 27aa          clr  r26
000846 27bb          clr  r27
000847 91e9          ld   r30,y+
000848 91f9          ld   r31,y+
                 strlenf0:
000849 9005      	lpm  r0,z+
00084a 2000          tst  r0
00084b f011          breq strlenf1
00084c 9611          adiw r26,1
00084d cffb          rjmp strlenf0
                 strlenf1:
00084e 01fd          movw r30,r26
00084f 9508          ret
                 
                 	.CSEG
                 _ftrunc:
000850 817b         ldd  r23,y+3
000851 816a         ldd  r22,y+2
000852 81f9         ldd  r31,y+1
000853 81e8         ld   r30,y
000854 fb77         bst  r23,7
000855 0f77         lsl  r23
000856 fd67         sbrc r22,7
000857 6071         sbr  r23,1
000858 2f97         mov  r25,r23
000859 579e         subi r25,0x7e
00085a f081         breq __ftrunc0
00085b f078         brcs __ftrunc0
00085c 3198         cpi  r25,24
00085d f490         brsh __ftrunc1
00085e 27aa         clr  r26
00085f 27bb         clr  r27
000860 2788         clr  r24
                 __ftrunc2:
000861 9408         sec
000862 9587         ror  r24
000863 95b7         ror  r27
000864 95a7         ror  r26
000865 959a         dec  r25
000866 f7d1         brne __ftrunc2
000867 23ea         and  r30,r26
000868 23fb         and  r31,r27
000869 2368         and  r22,r24
00086a c005         rjmp __ftrunc1
                 __ftrunc0:
00086b 94e8         clt
00086c 2777         clr  r23
00086d 27ee         clr  r30
00086e 27ff         clr  r31
00086f 2766         clr  r22
                 __ftrunc1:
000870 776f         cbr  r22,0x80
000871 9576         lsr  r23
000872 f408         brcc __ftrunc3
000873 6860         sbr  r22,0x80
                 __ftrunc3:
000874 f977         bld  r23,7
000875 91a9         ld   r26,y+
000876 91b9         ld   r27,y+
000877 9189         ld   r24,y+
000878 9199         ld   r25,y+
000879 17ea         cp   r30,r26
00087a 07fb         cpc  r31,r27
00087b 0768         cpc  r22,r24
00087c 0779         cpc  r23,r25
00087d fb97         bst  r25,7
00087e 9508         ret
                 _floor:
00087f 940e 0977 	CALL SUBOPT_0x9
000881 940e 0d0a 	CALL __PUTPARD1
000883 940e 0850 	CALL _ftrunc
000885 940e 0d03 	CALL __PUTD1S0
000887 f419          brne __floor1
                 __floor0:
000888 940e 0977 	CALL SUBOPT_0x9
00088a c009      	RJMP _0x20A0003
                 __floor1:
00088b f7e6          brtc __floor0
00088c 940e 0977 	CALL SUBOPT_0x9
                +
00088e e0a0     +LDI R26 , LOW ( 0x3F800000 )
00088f e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000890 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000891 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000892 940e 0b69 	CALL __SUBF12
                 _0x20A0003:
000894 9624      	ADIW R28,4
000895 9508      	RET
                 
                 	.CSEG
                 _ftoa:
000896 9724      	SBIW R28,4
000897 d0a4      	RCALL SUBOPT_0x1
000898 e0e0      	LDI  R30,LOW(0)
000899 83ea      	STD  Y+2,R30
00089a e3ef      	LDI  R30,LOW(63)
00089b 83eb      	STD  Y+3,R30
00089c 931a      	ST   -Y,R17
00089d 930a      	ST   -Y,R16
00089e 85eb      	LDD  R30,Y+11
00089f 85fc      	LDD  R31,Y+11+1
0008a0 3fef      	CPI  R30,LOW(0xFFFF)
0008a1 efaf      	LDI  R26,HIGH(0xFFFF)
0008a2 07fa      	CPC  R31,R26
0008a3 f429      	BRNE _0x208000D
0008a4 d1f0      	RCALL SUBOPT_0x32
                +
0008a5 e4e0     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
0008a6 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
0008a7 d10f      	RCALL SUBOPT_0x13
0008a8 c088      	RJMP _0x20A0002
                 _0x208000D:
0008a9 3fef      	CPI  R30,LOW(0x7FFF)
0008aa e7af      	LDI  R26,HIGH(0x7FFF)
0008ab 07fa      	CPC  R31,R26
0008ac f429      	BRNE _0x208000C
0008ad d1e7      	RCALL SUBOPT_0x32
                +
0008ae e4e1     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
0008af e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
0008b0 d106      	RCALL SUBOPT_0x13
0008b1 c07f      	RJMP _0x20A0002
                 _0x208000C:
0008b2 85ac      	LDD  R26,Y+12
0008b3 23aa      	TST  R26
0008b4 f452      	BRPL _0x208000F
                +
0008b5 85e9     +LDD R30 , Y + 9
0008b6 85fa     +LDD R31 , Y + 9 + 1
0008b7 856b     +LDD R22 , Y + 9 + 2
0008b8 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0008b9 940e 0aca 	CALL __ANEGF1
0008bb d1de      	RCALL SUBOPT_0x33
0008bc d1e2      	RCALL SUBOPT_0x34
0008bd e2ed      	LDI  R30,LOW(45)
0008be 93ec      	ST   X,R30
                 _0x208000F:
0008bf 85a8      	LDD  R26,Y+8
0008c0 30a7      	CPI  R26,LOW(0x7)
0008c1 f010      	BRLO _0x2080010
0008c2 e0e6      	LDI  R30,LOW(6)
0008c3 87e8      	STD  Y+8,R30
                 _0x2080010:
0008c4 8518      	LDD  R17,Y+8
                 _0x2080011:
0008c5 2fe1      	MOV  R30,R17
0008c6 5011      	SUBI R17,1
0008c7 30e0      	CPI  R30,0
0008c8 f021      	BREQ _0x2080013
0008c9 d1dc      	RCALL SUBOPT_0x35
0008ca d127      	RCALL SUBOPT_0x1B
0008cb d1df      	RCALL SUBOPT_0x36
0008cc cff8      	RJMP _0x2080011
                 _0x2080013:
0008cd d1e2      	RCALL SUBOPT_0x37
0008ce 940e 0b70 	CALL __ADDF12
0008d0 d1c9      	RCALL SUBOPT_0x33
0008d1 e010      	LDI  R17,LOW(0)
                +
0008d2 e0e0     +LDI R30 , LOW ( 0x3F800000 )
0008d3 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
0008d4 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
0008d5 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
0008d6 d1d4      	RCALL SUBOPT_0x36
                 _0x2080014:
0008d7 d1d8      	RCALL SUBOPT_0x37
0008d8 940e 0c53 	CALL __CMPF12
0008da f060      	BRLO _0x2080016
0008db d1ca      	RCALL SUBOPT_0x35
0008dc d102      	RCALL SUBOPT_0x18
0008dd d1cd      	RCALL SUBOPT_0x36
0008de 5f1f      	SUBI R17,-LOW(1)
0008df 3217      	CPI  R17,39
0008e0 f028      	BRLO _0x2080017
0008e1 d1b3      	RCALL SUBOPT_0x32
                +
0008e2 e4e5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
0008e3 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
0008e4 d0d2      	RCALL SUBOPT_0x13
0008e5 c04b      	RJMP _0x20A0002
                 _0x2080017:
0008e6 cff0      	RJMP _0x2080014
                 _0x2080016:
0008e7 3010      	CPI  R17,0
0008e8 f421      	BRNE _0x2080018
0008e9 d1b5      	RCALL SUBOPT_0x34
0008ea e3e0      	LDI  R30,LOW(48)
0008eb 93ec      	ST   X,R30
0008ec c020      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
0008ed 2fe1      	MOV  R30,R17
0008ee 5011      	SUBI R17,1
0008ef 30e0      	CPI  R30,0
0008f0 f0e1      	BREQ _0x208001C
0008f1 d1b4      	RCALL SUBOPT_0x35
0008f2 d0ff      	RCALL SUBOPT_0x1B
0008f3 d0f7      	RCALL SUBOPT_0x1A
0008f4 940e 0d0a 	CALL __PUTPARD1
0008f6 940e 087f 	CALL _floor
0008f8 d1b2      	RCALL SUBOPT_0x36
0008f9 d1b6      	RCALL SUBOPT_0x37
0008fa 940e 0c0e 	CALL __DIVF21
0008fc 940e 0afd 	CALL __CFD1U
0008fe 2f0e      	MOV  R16,R30
0008ff d19f      	RCALL SUBOPT_0x34
000900 d0ff      	RCALL SUBOPT_0x1D
000901 e0f0      	LDI  R31,0
000902 d1a3      	RCALL SUBOPT_0x35
000903 940e 0c8e 	CALL __CWD1
000905 940e 0b36 	CALL __CDF1
000907 940e 0bc0 	CALL __MULF12
000909 d1af      	RCALL SUBOPT_0x38
00090a d053      	RCALL SUBOPT_0x6
00090b d18e      	RCALL SUBOPT_0x33
00090c cfe0      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
00090d 85e8      	LDD  R30,Y+8
00090e 30e0      	CPI  R30,0
00090f f0e9      	BREQ _0x20A0001
000910 d18e      	RCALL SUBOPT_0x34
000911 e2ee      	LDI  R30,LOW(46)
000912 93ec      	ST   X,R30
                 _0x208001E:
000913 85e8      	LDD  R30,Y+8
000914 50e1      	SUBI R30,LOW(1)
000915 87e8      	STD  Y+8,R30
000916 5fef      	SUBI R30,-LOW(1)
000917 f0a9      	BREQ _0x2080020
000918 d1a0      	RCALL SUBOPT_0x38
000919 d0c5      	RCALL SUBOPT_0x18
00091a d17f      	RCALL SUBOPT_0x33
                +
00091b 85e9     +LDD R30 , Y + 9
00091c 85fa     +LDD R31 , Y + 9 + 1
00091d 856b     +LDD R22 , Y + 9 + 2
00091e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00091f 940e 0afd 	CALL __CFD1U
000921 2f0e      	MOV  R16,R30
000922 d17c      	RCALL SUBOPT_0x34
000923 d0dc      	RCALL SUBOPT_0x1D
000924 e0f0      	LDI  R31,0
000925 d193      	RCALL SUBOPT_0x38
000926 940e 0c8e 	CALL __CWD1
000928 940e 0b36 	CALL __CDF1
00092a d033      	RCALL SUBOPT_0x6
00092b d16e      	RCALL SUBOPT_0x33
00092c cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
00092d 81ae      	LDD  R26,Y+6
00092e 81bf      	LDD  R27,Y+6+1
00092f e0e0      	LDI  R30,LOW(0)
000930 93ec      	ST   X,R30
                 _0x20A0002:
000931 8119      	LDD  R17,Y+1
000932 8108      	LDD  R16,Y+0
000933 962d      	ADIW R28,13
000934 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000935 2fe1      	MOV  R30,R17
000936 e0f0      	LDI  R31,0
000937 81aa      	LDD  R26,Y+2
000938 81bb      	LDD  R27,Y+2+1
000939 0fae      	ADD  R26,R30
00093a 1fbf      	ADC  R27,R31
00093b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00093c e0e0      	LDI  R30,LOW(0)
00093d 83e8      	ST   Y,R30
00093e 83e9      	STD  Y+1,R30
00093f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000940 85ae      	LDD  R26,Y+14
000941 85bf      	LDD  R27,Y+14+1
000942 940e 0cf3 	CALL __GETD1P
000944 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000945 85ac      	LDD  R26,Y+12
000946 85bd      	LDD  R27,Y+12+1
000947 940e 0cf3 	CALL __GETD1P
000949 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00094a eea1     +LDI R26 , LOW ( 0x3E947AE1 )
00094b e7ba     +LDI R27 , HIGH ( 0x3E947AE1 )
00094c e984     +LDI R24 , BYTE3 ( 0x3E947AE1 )
00094d e39e     +LDI R25 , BYTE4 ( 0x3E947AE1 )
                 	__GETD2N 0x3E947AE1
00094e 940e 0bc0 	CALL __MULF12
000950 01df      	MOVW R26,R30
000951 01cb      	MOVW R24,R22
                +
000952 e0e0     +LDI R30 , LOW ( 0x40800000 )
000953 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000954 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000955 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000956 940e 0c0e 	CALL __DIVF21
000958 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
                +
000959 83ec     +STD Y + 4 , R30
00095a 83fd     +STD Y + 4 + 1 , R31
00095b 836e     +STD Y + 4 + 2 , R22
00095c 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00095d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00095e 940e 0d0f 	CALL __SWAPD12
000960 940e 0b69 	CALL __SUBF12
000962 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7:
                +
000963 81ec     +LDD R30 , Y + 4
000964 81fd     +LDD R31 , Y + 4 + 1
000965 816e     +LDD R22 , Y + 4 + 2
000966 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000967 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8:
                +
000968 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000969 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
00096a e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
00096b e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
00096c 940e 0bc0 	CALL __MULF12
                +
00096e e0a0     +LDI R26 , LOW ( 0x41C80000 )
00096f e0b0     +LDI R27 , HIGH ( 0x41C80000 )
000970 ec88     +LDI R24 , BYTE3 ( 0x41C80000 )
000971 e491     +LDI R25 , BYTE4 ( 0x41C80000 )
                 	__GETD2N 0x41C80000
000972 940e 0bc0 	CALL __MULF12
000974 940e 0aff 	CALL __CFD1
000976 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
000977 940e 0cfe 	CALL __GETD1S0
000979 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00097a e0e0      	LDI  R30,LOW(0)
00097b e0f0      	LDI  R31,HIGH(0)
00097c 93ed      	ST   X+,R30
00097d 93fc      	ST   X,R31
00097e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
00097f 2da4      	MOV  R26,R4
000980 e0b0      	LDI  R27,0
000981 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000982 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000983 b1ec      	IN   R30,0xC
000984 93ec      	ST   X,R30
000985 9443      	INC  R4
000986 e0e0      	LDI  R30,LOW(0)
000987 bde4      	OUT  0x24,R30
000988 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
000989 2de9      	MOV  R30,R9
00098a e0f0      	LDI  R31,0
00098b 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
00098c 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
00098d 8310      	ST   Z,R17
00098e 9493      	INC  R9
00098f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
000990 93fa      	ST   -Y,R31
000991 93ea      	ST   -Y,R30
000992 940c 0abe 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xE:
000994 940e 0c8e 	CALL __CWD1
000996 940e 0b36 	CALL __CDF1
000998 01df      	MOVW R26,R30
000999 01cb      	MOVW R24,R22
                +
00099a e0e0     +LDI R30 , LOW ( 0x447A0000 )
00099b e0f0     +LDI R31 , HIGH ( 0x447A0000 )
00099c e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
00099d e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
00099e 940e 0c0e 	CALL __DIVF21
0009a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
0009a1 940e 016b 	CALL _RTU_WriteOperate0
0009a3 e0e3      	LDI  R30,LOW(3)
0009a4 e0f0      	LDI  R31,HIGH(3)
0009a5 cfea      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0009a6 93fa      	ST   -Y,R31
0009a7 93ea      	ST   -Y,R30
0009a8 cff8      	RJMP SUBOPT_0xF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x11:
0009a9 93ea      	ST   -Y,R30
0009aa e7e8      	LDI  R30,LOW(120)
0009ab e0f0      	LDI  R31,HIGH(120)
0009ac 93fa      	ST   -Y,R31
0009ad 93ea      	ST   -Y,R30
0009ae e0e1      	LDI  R30,LOW(1)
0009af e0f0      	LDI  R31,HIGH(1)
0009b0 cff5      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
0009b1 91ed      	LD   R30,X+
0009b2 91fd      	LD   R31,X+
0009b3 9631      	ADIW R30,1
0009b4 93fe      	ST   -X,R31
0009b5 93ee      	ST   -X,R30
0009b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
0009b7 93fa      	ST   -Y,R31
0009b8 93ea      	ST   -Y,R30
0009b9 940c 0830 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x14:
                +
0009bb 81ac     +LDD R26 , Y + 4
0009bc 81bd     +LDD R27 , Y + 4 + 1
0009bd 818e     +LDD R24 , Y + 4 + 2
0009be 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0009bf e0e0     +LDI R30 , LOW ( 0x41200000 )
0009c0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0009c1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0009c2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0009c3 940e 0bc0 	CALL __MULF12
0009c5 cf93      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x15:
0009c6 df9c      	RCALL SUBOPT_0x7
                +
0009c7 85ac     +LDD R26 , Y + 12
0009c8 85bd     +LDD R27 , Y + 12 + 1
0009c9 858e     +LDD R24 , Y + 12 + 2
0009ca 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0009cb 940e 0c53 	CALL __CMPF12
0009cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
                +
0009ce 85ac     +LDD R26 , Y + 12
0009cf 85bd     +LDD R27 , Y + 12 + 1
0009d0 858e     +LDD R24 , Y + 12 + 2
0009d1 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0009d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
                +
0009d3 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0009d4 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0009d5 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0009d6 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0009d7 940e 0bc0 	CALL __MULF12
                +
0009d9 87ec     +STD Y + 12 , R30
0009da 87fd     +STD Y + 12 + 1 , R31
0009db 876e     +STD Y + 12 + 2 , R22
0009dc 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0009dd 5f3f      	SUBI R19,-LOW(1)
0009de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
                +
0009df e0e0     +LDI R30 , LOW ( 0x41200000 )
0009e0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0009e1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0009e2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0009e3 940e 0bc0 	CALL __MULF12
0009e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
                +
0009e6 87ec     +STD Y + 12 , R30
0009e7 87fd     +STD Y + 12 + 1 , R31
0009e8 876e     +STD Y + 12 + 2 , R22
0009e9 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0009ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
                +
0009eb e0a0     +LDI R26 , LOW ( 0x3F000000 )
0009ec e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0009ed e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0009ee e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0009ef 940e 0b70 	CALL __ADDF12
0009f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B:
                +
0009f2 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0009f3 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0009f4 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0009f5 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0009f6 940e 0bc0 	CALL __MULF12
0009f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
0009f9 85a8      	LDD  R26,Y+8
0009fa 85b9      	LDD  R27,Y+8+1
0009fb 9611      	ADIW R26,1
0009fc 87a8      	STD  Y+8,R26
0009fd 87b9      	STD  Y+8+1,R27
0009fe 9711      	SBIW R26,1
0009ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000a00 2fe0      	MOV  R30,R16
000a01 5de0      	SUBI R30,-LOW(48)
000a02 93ec      	ST   X,R30
000a03 2fe0      	MOV  R30,R16
000a04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E:
000a05 85e8      	LDD  R30,Y+8
000a06 85f9      	LDD  R31,Y+8+1
000a07 9631      	ADIW R30,1
000a08 87e8      	STD  Y+8,R30
000a09 87f9      	STD  Y+8+1,R31
000a0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1F:
000a0b 932a      	ST   -Y,R18
000a0c 81ef      	LDD  R30,Y+7
000a0d 85f8      	LDD  R31,Y+7+1
000a0e 93fa      	ST   -Y,R31
000a0f 93ea      	ST   -Y,R30
000a10 85eb      	LDD  R30,Y+11
000a11 85fc      	LDD  R31,Y+11+1
000a12 9509      	ICALL
000a13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x20:
                +
000a14 01fe     +MOVW R30 , R28
000a15 5ae6     +SUBI R30 , LOW ( - 90 )
000a16 4fff     +SBCI R31 , HIGH ( - 90 )
000a17 9001     +LD R0 , Z +
000a18 81f0     +LD R31 , Z
000a19 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000a1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x21:
000a1b 9734      	SBIW R30,4
                +
000a1c 01de     +MOVW R26 , R28
000a1d 5aa6     +SUBI R26 , LOW ( - 90 )
000a1e 4fbf     +SBCI R27 , HIGH ( - 90 )
000a1f 93ed     +ST X + , R30
000a20 93fc     +ST X , R31
                 	__PUTW1SX 90
000a21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22:
000a22 81ef      	LDD  R30,Y+7
000a23 85f8      	LDD  R31,Y+7+1
000a24 93fa      	ST   -Y,R31
000a25 93ea      	ST   -Y,R30
000a26 85eb      	LDD  R30,Y+11
000a27 85fc      	LDD  R31,Y+11+1
000a28 9509      	ICALL
000a29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x23:
                +
000a2a 01de     +MOVW R26 , R28
000a2b 5aa6     +SUBI R26 , LOW ( - 90 )
000a2c 4fbf     +SBCI R27 , HIGH ( - 90 )
000a2d 900d     +LD R0 , X +
000a2e 91bc     +LD R27 , X
000a2f 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000a30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
000a31 87ea     +STD Y + 10 , R30
000a32 87fb     +STD Y + 10 + 1 , R31
000a33 876c     +STD Y + 10 + 2 , R22
000a34 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000a35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x25:
000a36 dfdd      	RCALL SUBOPT_0x20
000a37 cfe3      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
000a38 85ea     +LDD R30 , Y + 10
000a39 85fb     +LDD R31 , Y + 10 + 1
000a3a 856c     +LDD R22 , Y + 10 + 2
000a3b 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000a3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x27:
000a3d 87ee      	STD  Y+14,R30
000a3e 87ff      	STD  Y+14+1,R31
000a3f 93fa      	ST   -Y,R31
000a40 93ea      	ST   -Y,R30
000a41 940e 083b 	CALL _strlen
000a43 2f1e      	MOV  R17,R30
000a44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x28:
000a45 dfe4      	RCALL SUBOPT_0x23
000a46 9614      	ADIW R26,4
000a47 940e 0cef 	CALL __GETW1P
000a49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
                +
000a4a 8be8     +STD Y + 16 , R30
000a4b 8bf9     +STD Y + 16 + 1 , R31
000a4c 8b6a     +STD Y + 16 + 2 , R22
000a4d 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000a4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x2A:
000a4f 7f0b      	ANDI R16,LOW(251)
000a50 89ed      	LDD  R30,Y+21
000a51 93ea      	ST   -Y,R30
                +
000a52 01fe     +MOVW R30 , R28
000a53 5ae9     +SUBI R30 , LOW ( - 87 )
000a54 4fff     +SBCI R31 , HIGH ( - 87 )
000a55 9001     +LD R0 , Z +
000a56 81f0     +LD R31 , Z
000a57 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000a58 93fa      	ST   -Y,R31
000a59 93ea      	ST   -Y,R30
                +
000a5a 01fe     +MOVW R30 , R28
000a5b 5ae5     +SUBI R30 , LOW ( - 91 )
000a5c 4fff     +SBCI R31 , HIGH ( - 91 )
000a5d 9001     +LD R0 , Z +
000a5e 81f0     +LD R31 , Z
000a5f 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000a60 9509      	ICALL
000a61 3050      	CPI  R21,0
000a62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2B:
                +
000a63 89e8     +LDD R30 , Y + 16
000a64 89f9     +LDD R31 , Y + 16 + 1
000a65 896a     +LDD R22 , Y + 16 + 2
000a66 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000a67 85aa     +LDD R26 , Y + 10
000a68 85bb     +LDD R27 , Y + 10 + 1
000a69 858c     +LDD R24 , Y + 10 + 2
000a6a 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000a6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000a6c 01de      	MOVW R26,R28
000a6d 961c      	ADIW R26,12
000a6e 940e 0c73 	CALL __ADDW2R15
000a70 940e 0cef 	CALL __GETW1P
000a72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
000a73 940e 0c73 	CALL __ADDW2R15
000a75 940e 0cef 	CALL __GETW1P
000a77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
000a78 933a      	ST   -Y,R19
000a79 940e 0818 	CALL _isspace
000a7b 30e0      	CPI  R30,0
000a7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x2F:
000a7d 85ed      	LDD  R30,Y+13
000a7e 85fe      	LDD  R31,Y+13+1
000a7f 93fa      	ST   -Y,R31
000a80 93ea      	ST   -Y,R30
000a81 89e9      	LDD  R30,Y+17
000a82 89fa      	LDD  R31,Y+17+1
000a83 9509      	ICALL
000a84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30:
000a85 85ab      	LDD  R26,Y+11
000a86 85bc      	LDD  R27,Y+11+1
000a87 91ac      	LD   R26,X
000a88 30a0      	CPI  R26,0
000a89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x31:
000a8a 85ef      	LDD  R30,Y+15
000a8b 89f8      	LDD  R31,Y+15+1
000a8c 9734      	SBIW R30,4
000a8d 87ef      	STD  Y+15,R30
000a8e 8bf8      	STD  Y+15+1,R31
000a8f 85af      	LDD  R26,Y+15
000a90 89b8      	LDD  R27,Y+15+1
000a91 9614      	ADIW R26,4
000a92 910d      	LD   R16,X+
000a93 911c      	LD   R17,X
000a94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000a95 81ee      	LDD  R30,Y+6
000a96 81ff      	LDD  R31,Y+6+1
000a97 93fa      	ST   -Y,R31
000a98 93ea      	ST   -Y,R30
000a99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
                +
000a9a 87e9     +STD Y + 9 , R30
000a9b 87fa     +STD Y + 9 + 1 , R31
000a9c 876b     +STD Y + 9 + 2 , R22
000a9d 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000a9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x34:
000a9f 81ae      	LDD  R26,Y+6
000aa0 81bf      	LDD  R27,Y+6+1
000aa1 9611      	ADIW R26,1
000aa2 83ae      	STD  Y+6,R26
000aa3 83bf      	STD  Y+6+1,R27
000aa4 9711      	SBIW R26,1
000aa5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35:
                +
000aa6 81aa     +LDD R26 , Y + 2
000aa7 81bb     +LDD R27 , Y + 2 + 1
000aa8 818c     +LDD R24 , Y + 2 + 2
000aa9 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000aaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36:
                +
000aab 83ea     +STD Y + 2 , R30
000aac 83fb     +STD Y + 2 + 1 , R31
000aad 836c     +STD Y + 2 + 2 , R22
000aae 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000aaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37:
                +
000ab0 81ea     +LDD R30 , Y + 2
000ab1 81fb     +LDD R31 , Y + 2 + 1
000ab2 816c     +LDD R22 , Y + 2 + 2
000ab3 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000ab4 85a9     +LDD R26 , Y + 9
000ab5 85ba     +LDD R27 , Y + 9 + 1
000ab6 858b     +LDD R24 , Y + 9 + 2
000ab7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ab8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
                +
000ab9 85a9     +LDD R26 , Y + 9
000aba 85ba     +LDD R27 , Y + 9 + 1
000abb 858b     +LDD R24 , Y + 9 + 2
000abc 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000abd 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000abe 91e9      	ld   r30,y+
000abf 91f9      	ld   r31,y+
000ac0 9630      	adiw r30,0
000ac1 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ac2 e686     +LDI R24 , LOW ( 0xE66 )
000ac3 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000ac4 9701     +SBIW R24 , 1
000ac5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000ac6 95a8      	wdr
000ac7 9731      	sbiw r30,1
000ac8 f7c9      	brne __delay_ms0
                 __delay_ms1:
000ac9 9508      	ret
                 
                 __ANEGF1:
000aca 9730      	SBIW R30,0
000acb 4060      	SBCI R22,0
000acc 4070      	SBCI R23,0
000acd f009      	BREQ __ANEGF10
000ace 5870      	SUBI R23,0x80
                 __ANEGF10:
000acf 9508      	RET
                 
                 __ROUND_REPACK:
000ad0 2355      	TST  R21
000ad1 f442      	BRPL __REPACK
000ad2 3850      	CPI  R21,0x80
000ad3 f411      	BRNE __ROUND_REPACK0
000ad4 ffe0      	SBRS R30,0
000ad5 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000ad6 9631      	ADIW R30,1
000ad7 1f69      	ADC  R22,R25
000ad8 1f79      	ADC  R23,R25
000ad9 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000ada e850      	LDI  R21,0x80
000adb 2757      	EOR  R21,R23
000adc f411      	BRNE __REPACK0
000add 935f      	PUSH R21
000ade c0cf      	RJMP __ZERORES
                 __REPACK0:
000adf 3f5f      	CPI  R21,0xFF
000ae0 f031      	BREQ __REPACK1
000ae1 0f66      	LSL  R22
000ae2 0c00      	LSL  R0
000ae3 9557      	ROR  R21
000ae4 9567      	ROR  R22
000ae5 2f75      	MOV  R23,R21
000ae6 9508      	RET
                 __REPACK1:
000ae7 935f      	PUSH R21
000ae8 2000      	TST  R0
000ae9 f00a      	BRMI __REPACK2
000aea c0cf      	RJMP __MAXRES
                 __REPACK2:
000aeb c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000aec e850      	LDI  R21,0x80
000aed 2e19      	MOV  R1,R25
000aee 2215      	AND  R1,R21
000aef 0f88      	LSL  R24
000af0 1f99      	ROL  R25
000af1 2795      	EOR  R25,R21
000af2 0f55      	LSL  R21
000af3 9587      	ROR  R24
                 
                 __UNPACK1:
000af4 e850      	LDI  R21,0x80
000af5 2e07      	MOV  R0,R23
000af6 2205      	AND  R0,R21
000af7 0f66      	LSL  R22
000af8 1f77      	ROL  R23
000af9 2775      	EOR  R23,R21
000afa 0f55      	LSL  R21
000afb 9567      	ROR  R22
000afc 9508      	RET
                 
                 __CFD1U:
000afd 9468      	SET
000afe c001      	RJMP __CFD1U0
                 __CFD1:
000aff 94e8      	CLT
                 __CFD1U0:
000b00 935f      	PUSH R21
000b01 dff2      	RCALL __UNPACK1
000b02 3870      	CPI  R23,0x80
000b03 f018      	BRLO __CFD10
000b04 3f7f      	CPI  R23,0xFF
000b05 f408      	BRCC __CFD10
000b06 c0a7      	RJMP __ZERORES
                 __CFD10:
000b07 e156      	LDI  R21,22
000b08 1b57      	SUB  R21,R23
000b09 f4aa      	BRPL __CFD11
000b0a 9551      	NEG  R21
000b0b 3058      	CPI  R21,8
000b0c f40e      	BRTC __CFD19
000b0d 3059      	CPI  R21,9
                 __CFD19:
000b0e f030      	BRLO __CFD17
000b0f efef      	SER  R30
000b10 efff      	SER  R31
000b11 ef6f      	SER  R22
000b12 e77f      	LDI  R23,0x7F
000b13 f977      	BLD  R23,7
000b14 c01a      	RJMP __CFD15
                 __CFD17:
000b15 2777      	CLR  R23
000b16 2355      	TST  R21
000b17 f0b9      	BREQ __CFD15
                 __CFD18:
000b18 0fee      	LSL  R30
000b19 1fff      	ROL  R31
000b1a 1f66      	ROL  R22
000b1b 1f77      	ROL  R23
000b1c 955a      	DEC  R21
000b1d f7d1      	BRNE __CFD18
000b1e c010      	RJMP __CFD15
                 __CFD11:
000b1f 2777      	CLR  R23
                 __CFD12:
000b20 3058      	CPI  R21,8
000b21 f028      	BRLO __CFD13
000b22 2fef      	MOV  R30,R31
000b23 2ff6      	MOV  R31,R22
000b24 2f67      	MOV  R22,R23
000b25 5058      	SUBI R21,8
000b26 cff9      	RJMP __CFD12
                 __CFD13:
000b27 2355      	TST  R21
000b28 f031      	BREQ __CFD15
                 __CFD14:
000b29 9576      	LSR  R23
000b2a 9567      	ROR  R22
000b2b 95f7      	ROR  R31
000b2c 95e7      	ROR  R30
000b2d 955a      	DEC  R21
000b2e f7d1      	BRNE __CFD14
                 __CFD15:
000b2f 2000      	TST  R0
000b30 f40a      	BRPL __CFD16
000b31 d149      	RCALL __ANEGD1
                 __CFD16:
000b32 915f      	POP  R21
000b33 9508      	RET
                 
                 __CDF1U:
000b34 9468      	SET
000b35 c001      	RJMP __CDF1U0
                 __CDF1:
000b36 94e8      	CLT
                 __CDF1U0:
000b37 9730      	SBIW R30,0
000b38 4060      	SBCI R22,0
000b39 4070      	SBCI R23,0
000b3a f0b1      	BREQ __CDF10
000b3b 2400      	CLR  R0
000b3c f026      	BRTS __CDF11
000b3d 2377      	TST  R23
000b3e f412      	BRPL __CDF11
000b3f 9400      	COM  R0
000b40 d13a      	RCALL __ANEGD1
                 __CDF11:
000b41 2e17      	MOV  R1,R23
000b42 e17e      	LDI  R23,30
000b43 2011      	TST  R1
                 __CDF12:
000b44 f032      	BRMI __CDF13
000b45 957a      	DEC  R23
000b46 0fee      	LSL  R30
000b47 1fff      	ROL  R31
000b48 1f66      	ROL  R22
000b49 1c11      	ROL  R1
000b4a cff9      	RJMP __CDF12
                 __CDF13:
000b4b 2fef      	MOV  R30,R31
000b4c 2ff6      	MOV  R31,R22
000b4d 2d61      	MOV  R22,R1
000b4e 935f      	PUSH R21
000b4f df8a      	RCALL __REPACK
000b50 915f      	POP  R21
                 __CDF10:
000b51 9508      	RET
                 
                 __SWAPACC:
000b52 934f      	PUSH R20
000b53 01af      	MOVW R20,R30
000b54 01fd      	MOVW R30,R26
000b55 01da      	MOVW R26,R20
000b56 01ab      	MOVW R20,R22
000b57 01bc      	MOVW R22,R24
000b58 01ca      	MOVW R24,R20
000b59 2d40      	MOV  R20,R0
000b5a 2c01      	MOV  R0,R1
000b5b 2e14      	MOV  R1,R20
000b5c 914f      	POP  R20
000b5d 9508      	RET
                 
                 __UADD12:
000b5e 0fea      	ADD  R30,R26
000b5f 1ffb      	ADC  R31,R27
000b60 1f68      	ADC  R22,R24
000b61 9508      	RET
                 
                 __NEGMAN1:
000b62 95e0      	COM  R30
000b63 95f0      	COM  R31
000b64 9560      	COM  R22
000b65 5fef      	SUBI R30,-1
000b66 4fff      	SBCI R31,-1
000b67 4f6f      	SBCI R22,-1
000b68 9508      	RET
                 
                 __SUBF12:
000b69 935f      	PUSH R21
000b6a df81      	RCALL __UNPACK
000b6b 3890      	CPI  R25,0x80
000b6c f171      	BREQ __ADDF129
000b6d e850      	LDI  R21,0x80
000b6e 2615      	EOR  R1,R21
                 
000b6f c004      	RJMP __ADDF120
                 
                 __ADDF12:
000b70 935f      	PUSH R21
000b71 df7a      	RCALL __UNPACK
000b72 3890      	CPI  R25,0x80
000b73 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000b74 3870      	CPI  R23,0x80
000b75 f121      	BREQ __ADDF128
                 __ADDF121:
000b76 2f57      	MOV  R21,R23
000b77 1b59      	SUB  R21,R25
000b78 f12b      	BRVS __ADDF1211
000b79 f412      	BRPL __ADDF122
000b7a dfd7      	RCALL __SWAPACC
000b7b cffa      	RJMP __ADDF121
                 __ADDF122:
000b7c 3158      	CPI  R21,24
000b7d f018      	BRLO __ADDF123
000b7e 27aa      	CLR  R26
000b7f 27bb      	CLR  R27
000b80 2788      	CLR  R24
                 __ADDF123:
000b81 3058      	CPI  R21,8
000b82 f028      	BRLO __ADDF124
000b83 2fab      	MOV  R26,R27
000b84 2fb8      	MOV  R27,R24
000b85 2788      	CLR  R24
000b86 5058      	SUBI R21,8
000b87 cff9      	RJMP __ADDF123
                 __ADDF124:
000b88 2355      	TST  R21
000b89 f029      	BREQ __ADDF126
                 __ADDF125:
000b8a 9586      	LSR  R24
000b8b 95b7      	ROR  R27
000b8c 95a7      	ROR  R26
000b8d 955a      	DEC  R21
000b8e f7d9      	BRNE __ADDF125
                 __ADDF126:
000b8f 2d50      	MOV  R21,R0
000b90 2551      	EOR  R21,R1
000b91 f072      	BRMI __ADDF127
000b92 dfcb      	RCALL __UADD12
000b93 f438      	BRCC __ADDF129
000b94 9567      	ROR  R22
000b95 95f7      	ROR  R31
000b96 95e7      	ROR  R30
000b97 9573      	INC  R23
000b98 f413      	BRVC __ADDF129
000b99 c020      	RJMP __MAXRES
                 __ADDF128:
000b9a dfb7      	RCALL __SWAPACC
                 __ADDF129:
000b9b df3e      	RCALL __REPACK
000b9c 915f      	POP  R21
000b9d 9508      	RET
                 __ADDF1211:
000b9e f7d8      	BRCC __ADDF128
000b9f cffb      	RJMP __ADDF129
                 __ADDF127:
000ba0 1bea      	SUB  R30,R26
000ba1 0bfb      	SBC  R31,R27
000ba2 0b68      	SBC  R22,R24
000ba3 f051      	BREQ __ZERORES
000ba4 f410      	BRCC __ADDF1210
000ba5 9400      	COM  R0
000ba6 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000ba7 2366      	TST  R22
000ba8 f392      	BRMI __ADDF129
000ba9 0fee      	LSL  R30
000baa 1fff      	ROL  R31
000bab 1f66      	ROL  R22
000bac 957a      	DEC  R23
000bad f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000bae 27ee      	CLR  R30
000baf 27ff      	CLR  R31
000bb0 2766      	CLR  R22
000bb1 2777      	CLR  R23
000bb2 915f      	POP  R21
000bb3 9508      	RET
                 
                 __MINRES:
000bb4 efef      	SER  R30
000bb5 efff      	SER  R31
000bb6 e76f      	LDI  R22,0x7F
000bb7 ef7f      	SER  R23
000bb8 915f      	POP  R21
000bb9 9508      	RET
                 
                 __MAXRES:
000bba efef      	SER  R30
000bbb efff      	SER  R31
000bbc e76f      	LDI  R22,0x7F
000bbd e77f      	LDI  R23,0x7F
000bbe 915f      	POP  R21
000bbf 9508      	RET
                 
                 __MULF12:
000bc0 935f      	PUSH R21
000bc1 df2a      	RCALL __UNPACK
000bc2 3870      	CPI  R23,0x80
000bc3 f351      	BREQ __ZERORES
000bc4 3890      	CPI  R25,0x80
000bc5 f341      	BREQ __ZERORES
000bc6 2401      	EOR  R0,R1
000bc7 9408      	SEC
000bc8 1f79      	ADC  R23,R25
000bc9 f423      	BRVC __MULF124
000bca f31c      	BRLT __ZERORES
                 __MULF125:
000bcb 2000      	TST  R0
000bcc f33a      	BRMI __MINRES
000bcd cfec      	RJMP __MAXRES
                 __MULF124:
000bce 920f      	PUSH R0
000bcf 931f      	PUSH R17
000bd0 932f      	PUSH R18
000bd1 933f      	PUSH R19
000bd2 934f      	PUSH R20
000bd3 2711      	CLR  R17
000bd4 2722      	CLR  R18
000bd5 2799      	CLR  R25
000bd6 9f68      	MUL  R22,R24
000bd7 01a0      	MOVW R20,R0
000bd8 9f8f      	MUL  R24,R31
000bd9 2d30      	MOV  R19,R0
000bda 0d41      	ADD  R20,R1
000bdb 1f59      	ADC  R21,R25
000bdc 9f6b      	MUL  R22,R27
000bdd 0d30      	ADD  R19,R0
000bde 1d41      	ADC  R20,R1
000bdf 1f59      	ADC  R21,R25
000be0 9f8e      	MUL  R24,R30
000be1 d027      	RCALL __MULF126
000be2 9fbf      	MUL  R27,R31
000be3 d025      	RCALL __MULF126
000be4 9f6a      	MUL  R22,R26
000be5 d023      	RCALL __MULF126
000be6 9fbe      	MUL  R27,R30
000be7 d01d      	RCALL __MULF127
000be8 9faf      	MUL  R26,R31
000be9 d01b      	RCALL __MULF127
000bea 9fae      	MUL  R26,R30
000beb 0d11      	ADD  R17,R1
000bec 1f29      	ADC  R18,R25
000bed 1f39      	ADC  R19,R25
000bee 1f49      	ADC  R20,R25
000bef 1f59      	ADC  R21,R25
000bf0 2fe3      	MOV  R30,R19
000bf1 2ff4      	MOV  R31,R20
000bf2 2f65      	MOV  R22,R21
000bf3 2f52      	MOV  R21,R18
000bf4 914f      	POP  R20
000bf5 913f      	POP  R19
000bf6 912f      	POP  R18
000bf7 911f      	POP  R17
000bf8 900f      	POP  R0
000bf9 2366      	TST  R22
000bfa f02a      	BRMI __MULF122
000bfb 0f55      	LSL  R21
000bfc 1fee      	ROL  R30
000bfd 1fff      	ROL  R31
000bfe 1f66      	ROL  R22
000bff c002      	RJMP __MULF123
                 __MULF122:
000c00 9573      	INC  R23
000c01 f24b      	BRVS __MULF125
                 __MULF123:
000c02 decd      	RCALL __ROUND_REPACK
000c03 915f      	POP  R21
000c04 9508      	RET
                 
                 __MULF127:
000c05 0d10      	ADD  R17,R0
000c06 1d21      	ADC  R18,R1
000c07 1f39      	ADC  R19,R25
000c08 c002      	RJMP __MULF128
                 __MULF126:
000c09 0d20      	ADD  R18,R0
000c0a 1d31      	ADC  R19,R1
                 __MULF128:
000c0b 1f49      	ADC  R20,R25
000c0c 1f59      	ADC  R21,R25
000c0d 9508      	RET
                 
                 __DIVF21:
000c0e 935f      	PUSH R21
000c0f dedc      	RCALL __UNPACK
000c10 3870      	CPI  R23,0x80
000c11 f421      	BRNE __DIVF210
000c12 2011      	TST  R1
                 __DIVF211:
000c13 f40a      	BRPL __DIVF219
000c14 cf9f      	RJMP __MINRES
                 __DIVF219:
000c15 cfa4      	RJMP __MAXRES
                 __DIVF210:
000c16 3890      	CPI  R25,0x80
000c17 f409      	BRNE __DIVF218
                 __DIVF217:
000c18 cf95      	RJMP __ZERORES
                 __DIVF218:
000c19 2401      	EOR  R0,R1
000c1a 9408      	SEC
000c1b 0b97      	SBC  R25,R23
000c1c f41b      	BRVC __DIVF216
000c1d f3d4      	BRLT __DIVF217
000c1e 2000      	TST  R0
000c1f cff3      	RJMP __DIVF211
                 __DIVF216:
000c20 2f79      	MOV  R23,R25
000c21 931f      	PUSH R17
000c22 932f      	PUSH R18
000c23 933f      	PUSH R19
000c24 934f      	PUSH R20
000c25 2411      	CLR  R1
000c26 2711      	CLR  R17
000c27 2722      	CLR  R18
000c28 2733      	CLR  R19
000c29 2744      	CLR  R20
000c2a 2755      	CLR  R21
000c2b e290      	LDI  R25,32
                 __DIVF212:
000c2c 17ae      	CP   R26,R30
000c2d 07bf      	CPC  R27,R31
000c2e 0786      	CPC  R24,R22
000c2f 0741      	CPC  R20,R17
000c30 f030      	BRLO __DIVF213
000c31 1bae      	SUB  R26,R30
000c32 0bbf      	SBC  R27,R31
000c33 0b86      	SBC  R24,R22
000c34 0b41      	SBC  R20,R17
000c35 9408      	SEC
000c36 c001      	RJMP __DIVF214
                 __DIVF213:
000c37 9488      	CLC
                 __DIVF214:
000c38 1f55      	ROL  R21
000c39 1f22      	ROL  R18
000c3a 1f33      	ROL  R19
000c3b 1c11      	ROL  R1
000c3c 1faa      	ROL  R26
000c3d 1fbb      	ROL  R27
000c3e 1f88      	ROL  R24
000c3f 1f44      	ROL  R20
000c40 959a      	DEC  R25
000c41 f751      	BRNE __DIVF212
000c42 01f9      	MOVW R30,R18
000c43 2d61      	MOV  R22,R1
000c44 914f      	POP  R20
000c45 913f      	POP  R19
000c46 912f      	POP  R18
000c47 911f      	POP  R17
000c48 2366      	TST  R22
000c49 f032      	BRMI __DIVF215
000c4a 0f55      	LSL  R21
000c4b 1fee      	ROL  R30
000c4c 1fff      	ROL  R31
000c4d 1f66      	ROL  R22
000c4e 957a      	DEC  R23
000c4f f243      	BRVS __DIVF217
                 __DIVF215:
000c50 de7f      	RCALL __ROUND_REPACK
000c51 915f      	POP  R21
000c52 9508      	RET
                 
                 __CMPF12:
000c53 2399      	TST  R25
000c54 f09a      	BRMI __CMPF120
000c55 2377      	TST  R23
000c56 f042      	BRMI __CMPF121
000c57 1797      	CP   R25,R23
000c58 f048      	BRLO __CMPF122
000c59 f429      	BRNE __CMPF121
000c5a 17ae      	CP   R26,R30
000c5b 07bf      	CPC  R27,R31
000c5c 0786      	CPC  R24,R22
000c5d f020      	BRLO __CMPF122
000c5e f031      	BREQ __CMPF123
                 __CMPF121:
000c5f 9498      	CLZ
000c60 9488      	CLC
000c61 9508      	RET
                 __CMPF122:
000c62 9498      	CLZ
000c63 9408      	SEC
000c64 9508      	RET
                 __CMPF123:
000c65 9418      	SEZ
000c66 9488      	CLC
000c67 9508      	RET
                 __CMPF120:
000c68 2377      	TST  R23
000c69 f7c2      	BRPL __CMPF122
000c6a 1797      	CP   R25,R23
000c6b f398      	BRLO __CMPF121
000c6c f7a9      	BRNE __CMPF122
000c6d 17ea      	CP   R30,R26
000c6e 07fb      	CPC  R31,R27
000c6f 0768      	CPC  R22,R24
000c70 f388      	BRLO __CMPF122
000c71 f399      	BREQ __CMPF123
000c72 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000c73 2400      	CLR  R0
000c74 0daf      	ADD  R26,R15
000c75 1db0      	ADC  R27,R0
000c76 9508      	RET
                 
                 __ANEGW1:
000c77 95f1      	NEG  R31
000c78 95e1      	NEG  R30
000c79 40f0      	SBCI R31,0
000c7a 9508      	RET
                 
                 __ANEGD1:
000c7b 95f0      	COM  R31
000c7c 9560      	COM  R22
000c7d 9570      	COM  R23
000c7e 95e1      	NEG  R30
000c7f 4fff      	SBCI R31,-1
000c80 4f6f      	SBCI R22,-1
000c81 4f7f      	SBCI R23,-1
000c82 9508      	RET
                 
                 __ASRW8:
000c83 2fef      	MOV  R30,R31
000c84 27ff      	CLR  R31
000c85 fde7      	SBRC R30,7
000c86 efff      	SER  R31
000c87 9508      	RET
                 
                 __CBD1:
000c88 2ffe      	MOV  R31,R30
000c89 0fff      	ADD  R31,R31
000c8a 0bff      	SBC  R31,R31
000c8b 2f6f      	MOV  R22,R31
000c8c 2f7f      	MOV  R23,R31
000c8d 9508      	RET
                 
                 __CWD1:
000c8e 2f6f      	MOV  R22,R31
000c8f 0f66      	ADD  R22,R22
000c90 0b66      	SBC  R22,R22
000c91 2f76      	MOV  R23,R22
000c92 9508      	RET
                 
                 __MULW12U:
000c93 9ffa      	MUL  R31,R26
000c94 2df0      	MOV  R31,R0
000c95 9feb      	MUL  R30,R27
000c96 0df0      	ADD  R31,R0
000c97 9fea      	MUL  R30,R26
000c98 2de0      	MOV  R30,R0
000c99 0df1      	ADD  R31,R1
000c9a 9508      	RET
                 
                 __DIVB21U:
000c9b 2400      	CLR  R0
000c9c e098      	LDI  R25,8
                 __DIVB21U1:
000c9d 0faa      	LSL  R26
000c9e 1c00      	ROL  R0
000c9f 1a0e      	SUB  R0,R30
000ca0 f410      	BRCC __DIVB21U2
000ca1 0e0e      	ADD  R0,R30
000ca2 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000ca3 60a1      	SBR  R26,1
                 __DIVB21U3:
000ca4 959a      	DEC  R25
000ca5 f7b9      	BRNE __DIVB21U1
000ca6 2fea      	MOV  R30,R26
000ca7 2da0      	MOV  R26,R0
000ca8 9508      	RET
                 
                 __DIVB21:
000ca9 d039      	RCALL __CHKSIGNB
000caa dff0      	RCALL __DIVB21U
000cab f40e      	BRTC __DIVB211
000cac 95e1      	NEG  R30
                 __DIVB211:
000cad 9508      	RET
                 
                 __DIVD21U:
000cae 933f      	PUSH R19
000caf 934f      	PUSH R20
000cb0 935f      	PUSH R21
000cb1 2400      	CLR  R0
000cb2 2411      	CLR  R1
000cb3 2744      	CLR  R20
000cb4 2755      	CLR  R21
000cb5 e230      	LDI  R19,32
                 __DIVD21U1:
000cb6 0faa      	LSL  R26
000cb7 1fbb      	ROL  R27
000cb8 1f88      	ROL  R24
000cb9 1f99      	ROL  R25
000cba 1c00      	ROL  R0
000cbb 1c11      	ROL  R1
000cbc 1f44      	ROL  R20
000cbd 1f55      	ROL  R21
000cbe 1a0e      	SUB  R0,R30
000cbf 0a1f      	SBC  R1,R31
000cc0 0b46      	SBC  R20,R22
000cc1 0b57      	SBC  R21,R23
000cc2 f428      	BRCC __DIVD21U2
000cc3 0e0e      	ADD  R0,R30
000cc4 1e1f      	ADC  R1,R31
000cc5 1f46      	ADC  R20,R22
000cc6 1f57      	ADC  R21,R23
000cc7 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000cc8 60a1      	SBR  R26,1
                 __DIVD21U3:
000cc9 953a      	DEC  R19
000cca f759      	BRNE __DIVD21U1
000ccb 01fd      	MOVW R30,R26
000ccc 01bc      	MOVW R22,R24
000ccd 01d0      	MOVW R26,R0
000cce 01ca      	MOVW R24,R20
000ccf 915f      	POP  R21
000cd0 914f      	POP  R20
000cd1 913f      	POP  R19
000cd2 9508      	RET
                 
                 __MODB21:
000cd3 94e8      	CLT
000cd4 ffa7      	SBRS R26,7
000cd5 c002      	RJMP __MODB211
000cd6 95a1      	NEG  R26
000cd7 9468      	SET
                 __MODB211:
000cd8 fde7      	SBRC R30,7
000cd9 95e1      	NEG  R30
000cda dfc0      	RCALL __DIVB21U
000cdb 2fea      	MOV  R30,R26
000cdc f40e      	BRTC __MODB212
000cdd 95e1      	NEG  R30
                 __MODB212:
000cde 9508      	RET
                 
                 __MODD21U:
000cdf dfce      	RCALL __DIVD21U
000ce0 01fd      	MOVW R30,R26
000ce1 01bc      	MOVW R22,R24
000ce2 9508      	RET
                 
                 __CHKSIGNB:
000ce3 94e8      	CLT
000ce4 ffe7      	SBRS R30,7
000ce5 c002      	RJMP __CHKSB1
000ce6 95e1      	NEG  R30
000ce7 9468      	SET
                 __CHKSB1:
000ce8 ffa7      	SBRS R26,7
000ce9 c004      	RJMP __CHKSB2
000cea 95a1      	NEG  R26
000ceb f800      	BLD  R0,0
000cec 9403      	INC  R0
000ced fa00      	BST  R0,0
                 __CHKSB2:
000cee 9508      	RET
                 
                 __GETW1P:
000cef 91ed      	LD   R30,X+
000cf0 91fc      	LD   R31,X
000cf1 9711      	SBIW R26,1
000cf2 9508      	RET
                 
                 __GETD1P:
000cf3 91ed      	LD   R30,X+
000cf4 91fd      	LD   R31,X+
000cf5 916d      	LD   R22,X+
000cf6 917c      	LD   R23,X
000cf7 9713      	SBIW R26,3
000cf8 9508      	RET
                 
                 __PUTDP1:
000cf9 93ed      	ST   X+,R30
000cfa 93fd      	ST   X+,R31
000cfb 936d      	ST   X+,R22
000cfc 937c      	ST   X,R23
000cfd 9508      	RET
                 
                 __GETD1S0:
000cfe 81e8      	LD   R30,Y
000cff 81f9      	LDD  R31,Y+1
000d00 816a      	LDD  R22,Y+2
000d01 817b      	LDD  R23,Y+3
000d02 9508      	RET
                 
                 __PUTD1S0:
000d03 83e8      	ST   Y,R30
000d04 83f9      	STD  Y+1,R31
000d05 836a      	STD  Y+2,R22
000d06 837b      	STD  Y+3,R23
000d07 9508      	RET
                 
                 __PUTPARD1L:
000d08 e060      	LDI  R22,0
000d09 e070      	LDI  R23,0
                 __PUTPARD1:
000d0a 937a      	ST   -Y,R23
000d0b 936a      	ST   -Y,R22
000d0c 93fa      	ST   -Y,R31
000d0d 93ea      	ST   -Y,R30
000d0e 9508      	RET
                 
                 __SWAPD12:
000d0f 2e18      	MOV  R1,R24
000d10 2f86      	MOV  R24,R22
000d11 2d61      	MOV  R22,R1
000d12 2e19      	MOV  R1,R25
000d13 2f97      	MOV  R25,R23
000d14 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000d15 2e1b      	MOV  R1,R27
000d16 2fbf      	MOV  R27,R31
000d17 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000d18 2e1a      	MOV  R1,R26
000d19 2fae      	MOV  R26,R30
000d1a 2de1      	MOV  R30,R1
000d1b 9508      	RET
                 
                 __CPD10:
000d1c 9730      	SBIW R30,0
000d1d 4060      	SBCI R22,0
000d1e 4070      	SBCI R23,0
000d1f 9508      	RET
                 
                 __SAVELOCR6:
000d20 935a      	ST   -Y,R21
                 __SAVELOCR5:
000d21 934a      	ST   -Y,R20
                 __SAVELOCR4:
000d22 933a      	ST   -Y,R19
                 __SAVELOCR3:
000d23 932a      	ST   -Y,R18
                 __SAVELOCR2:
000d24 931a      	ST   -Y,R17
000d25 930a      	ST   -Y,R16
000d26 9508      	RET
                 
                 __LOADLOCR6:
000d27 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000d28 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000d29 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000d2a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000d2b 8119      	LDD  R17,Y+1
000d2c 8108      	LD   R16,Y
000d2d 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000d2e 0fac      	ADD  R26,R28
000d2f 1fbd      	ADC  R27,R29
                 __INITLOC0:
000d30 9005      	LPM  R0,Z+
000d31 920d      	ST   X+,R0
000d32 958a      	DEC  R24
000d33 f7e1      	BRNE __INITLOC0
000d34 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  74 r1 :  37 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   2 r7 :   0 
r8 :   1 r9 :   4 r10:   3 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  69 r17:  92 r18:  70 r19:  73 r20:  72 r21: 105 r22: 116 r23: 103 
r24:  68 r25:  62 r26: 216 r27: 108 r28:  61 r29:   2 r30: 692 r31: 299 
x  :  71 y  : 544 z  :  41 
Registers used: 28 out of 35 (80.0%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  20 
adiw  :  52 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   5 break :   0 breq  :  63 
brge  :  11 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  74 brpl  :   9 brsh  :  10 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 251 
cbi   :   0 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  55 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  20 cpc   :  24 cpi   : 123 cpse  :   0 dec   :  12 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  24 inc   :   6 jmp   :  47 ld    :  76 ldd   : 254 
ldi   : 305 lds   :   6 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 108 
movw  :  83 mul   :  15 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :   9 out   :  19 pop   :  45 push  :  45 rcall :  78 
ret   : 114 reti  :   4 rjmp  : 183 rol   :  32 ror   :  16 sbc   :  11 
sbci  :  33 sbi   :   0 sbic  :   0 sbis  :   1 sbiw  :  44 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 194 std   : 118 sts   :  13 sub   :   6 subi  :  68 
swap  :   0 tst   :  26 wdr   :   1 
Instructions used: 79 out of 117 (67.5%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001a6a   6558    204   6762  131072   5.2%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 10 warnings
