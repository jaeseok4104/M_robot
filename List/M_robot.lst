
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Wed Feb 05 18:21:47 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _CHECK_GETS=R8
                 	.DEF _CHECK_CONTROL=R11
                 	.DEF _TIMER1_OVERFLOW=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00b7 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 02af 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 02bb 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 02b5 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 026e 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0289 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x48:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x61:
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000      	.DB  0x0,0x0
                 _0x0:
000097 253c
000098 2c64
000099 6425
00009a 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00009b 3e64
00009c 2500
00009d 2c66
00009e 2520      	.DB  0x64,0x3E,0x0,0x25,0x66,0x2C,0x20,0x25
00009f 2c66
0000a0 2520
0000a1 2c66
0000a2 2520      	.DB  0x66,0x2C,0x20,0x25,0x66,0x2C,0x20,0x25
0000a3 2c66
0000a4 2520
0000a5 0a66
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1139): warning: .cseg .db misalignment - padding zero byte
0000a6 0000      	.DB  0x66,0x2C,0x20,0x25,0x66,0xA,0x0
                 _0x2000000:
0000a7 4e2d
0000a8 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1141): warning: .cseg .db misalignment - padding zero byte
0000a9 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1143): warning: .cseg .db misalignment - padding zero byte
0000aa 0001      	.DB  0x1
                 _0x2080000:
0000ab 4e2d
0000ac 4e41
0000ad 4900
0000ae 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1146): warning: .cseg .db misalignment - padding zero byte
0000af 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000b0 000a      	.DW  0x0A
0000b1 0004      	.DW  0x04
0000b2 0124      	.DW  _0x61*2
                 
0000b3 0001      	.DW  0x01
0000b4 0578      	.DW  __seed_G104
0000b5 0154      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0000b6 0000      	.DW  0
                 
                 __RESET:
0000b7 94f8      	CLI
0000b8 27ee      	CLR  R30
0000b9 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000ba e0f1      	LDI  R31,1
0000bb bff5      	OUT  MCUCR,R31
0000bc bfe5      	OUT  MCUCR,R30
0000bd 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0000bf e1f8      	LDI  R31,0x18
0000c0 bdf1      	OUT  WDTCR,R31
0000c1 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000c2 e08d      	LDI  R24,(14-2)+1
0000c3 e0a2      	LDI  R26,2
0000c4 27bb      	CLR  R27
                 __CLEAR_REG:
0000c5 93ed      	ST   X+,R30
0000c6 958a      	DEC  R24
0000c7 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000c8 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000c9 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000ca e0a0      	LDI  R26,LOW(__SRAM_START)
0000cb e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000cc 93ed      	ST   X+,R30
0000cd 9701      	SBIW R24,1
0000ce f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000cf e6e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000d0 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000d1 9185      	LPM  R24,Z+
0000d2 9195      	LPM  R25,Z+
0000d3 9700      	SBIW R24,0
0000d4 f061      	BREQ __GLOBAL_INI_END
0000d5 91a5      	LPM  R26,Z+
0000d6 91b5      	LPM  R27,Z+
0000d7 9005      	LPM  R0,Z+
0000d8 9015      	LPM  R1,Z+
0000d9 01bf      	MOVW R22,R30
0000da 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000db 9005      	LPM  R0,Z+
0000dc 920d      	ST   X+,R0
0000dd 9701      	SBIW R24,1
0000de f7e1      	BRNE __GLOBAL_INI_LOOP
0000df 01fb      	MOVW R30,R22
0000e0 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000e1 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000e2 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000e3 bfed      	OUT  SPL,R30
0000e4 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000e5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000e6 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000e7 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000e8 940c 02c8 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 25
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.29
                 ;#define Gearratio 20
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned char CHECK_CONTROL = 0;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0023 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0024     UCSR1A = 0x00;
                 ;	bps -> Y+0
0000ea e0e0      	LDI  R30,LOW(0)
0000eb 93e0 009b 	STS  155,R30
                 ; 0000 0025     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0000ed e9e8      	LDI  R30,LOW(152)
0000ee 93e0 009a 	STS  154,R30
                 ; 0000 0026     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0000f0 e0e6      	LDI  R30,LOW(6)
0000f1 93e0 009d 	STS  157,R30
                 ; 0000 0027     UCSR1C &= ~(1<<UMSEL1);
0000f3 91e0 009d 	LDS  R30,157
0000f5 7bef      	ANDI R30,0xBF
0000f6 93e0 009d 	STS  157,R30
                 ; 0000 0028 
                 ; 0000 0029     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0000f8 81e8      	LD   R30,Y
0000f9 81f9      	LDD  R31,Y+1
0000fa 940e 0fa5 	CALL __ASRW8
0000fc 93e0 0098 	STS  152,R30
                 ; 0000 002A     UBRR1L = (unsigned char)(bps & 0x00ff);
0000fe 81e8      	LD   R30,Y
0000ff 93e0 0099 	STS  153,R30
                 ; 0000 002B }
000101 c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 002E {
                 _usart0_init:
                 ; 0000 002F     UCSR0A = 0x00;
                 ;	bps -> Y+0
000102 e0e0      	LDI  R30,LOW(0)
000103 b9eb      	OUT  0xB,R30
                 ; 0000 0030     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
000104 e9e8      	LDI  R30,LOW(152)
000105 b9ea      	OUT  0xA,R30
                 ; 0000 0031     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
000106 e0e6      	LDI  R30,LOW(6)
000107 93e0 0095 	STS  149,R30
                 ; 0000 0032     UCSR0C &= ~(1<<UMSEL0);
000109 91e0 0095 	LDS  R30,149
00010b 7bef      	ANDI R30,0xBF
00010c 93e0 0095 	STS  149,R30
                 ; 0000 0033 
                 ; 0000 0034     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
00010e 81e8      	LD   R30,Y
00010f 81f9      	LDD  R31,Y+1
000110 940e 0fa5 	CALL __ASRW8
000112 93e0 0090 	STS  144,R30
                 ; 0000 0035     UBRR0L = (unsigned char)(bps & 0x00ff);
000114 81e8      	LD   R30,Y
000115 b9e9      	OUT  0x9,R30
                 ; 0000 0036 }
                 _0x20A000F:
000116 9622      	ADIW R28,2
000117 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 0039 {
                 _timer2_init:
                 ; 0000 003A     //TIMER2
                 ; 0000 003B     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
000118 e0ed      	LDI  R30,LOW(13)
000119 bde5      	OUT  0x25,R30
                 ; 0000 003C 
                 ; 0000 003D     OCR2 = 40;
00011a e2e8      	LDI  R30,LOW(40)
00011b bde3      	OUT  0x23,R30
                 ; 0000 003E     TIMSK = (1<<OCIE2)|(1<<OCIE0);
00011c e8e2      	LDI  R30,LOW(130)
00011d c010      	RJMP _0x20A000E
                 ; 0000 003F     //TIMSK = (1<<OCIE2);
                 ; 0000 0040 }
                 ;void timer0_init(void)
                 ; 0000 0042 {
                 _timer0_init:
                 ; 0000 0043     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
00011e e0e7      	LDI  R30,LOW(7)
00011f bfe3      	OUT  0x33,R30
                 ; 0000 0044     TIMSK = (1<<OCIE2)|(1<<TOIE0);
000120 e8e1      	LDI  R30,LOW(129)
000121 c00c      	RJMP _0x20A000E
                 ; 0000 0045 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 0048 {
                 _timer1_init:
                 ; 0000 0049     // TCCR1A = (1<<COM1B0);
                 ; 0000 004A     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
000122 e1ed      	LDI  R30,LOW(29)
000123 bdee      	OUT  0x2E,R30
                 ; 0000 004B 
                 ; 0000 004C     OCR1B = 255;
000124 efef      	LDI  R30,LOW(255)
000125 e0f0      	LDI  R31,HIGH(255)
000126 bdf9      	OUT  0x28+1,R31
000127 bde8      	OUT  0x28,R30
                 ; 0000 004D     ICR1 = 1200;
000128 ebe0      	LDI  R30,LOW(1200)
000129 e0f4      	LDI  R31,HIGH(1200)
00012a bdf7      	OUT  0x26+1,R31
00012b bde6      	OUT  0x26,R30
                 ; 0000 004E     TIMSK |= (1<<OCIE1B);
00012c b7e7      	IN   R30,0x37
00012d 60e8      	ORI  R30,8
                 _0x20A000E:
00012e bfe7      	OUT  0x37,R30
                 ; 0000 004F }
00012f 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0000 0052 {
                 _putch_USART1:
                 ; 0000 0053     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
000130 91e0 009b 	LDS  R30,155
000132 72e0      	ANDI R30,LOW(0x20)
000133 f3e1      	BREQ _0x3
                 ; 0000 0054     UDR1 = data;
000134 81e8      	LD   R30,Y
000135 93e0 009c 	STS  156,R30
                 ; 0000 0055 }
000137 c023      	RJMP _0x20A000D
                 ;
                 ;//USART 문자열 송신
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     for(i = 0;i<IDX;i++)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 0068 {
                 _puts_USART1:
                 ; 0000 0069     unsigned char i = 0;
                 ; 0000 006A     unsigned char x = 0;
                 ; 0000 006B     for(i = 0; str[i] ;i++){
000138 931a      	ST   -Y,R17
000139 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
00013a e010      	LDI  R17,0
00013b e000      	LDI  R16,0
00013c e010      	LDI  R17,LOW(0)
                 _0x7:
00013d 940e 0b9f 	CALL SUBOPT_0x0
00013f 30e0      	CPI  R30,0
000140 f031      	BREQ _0x8
                 ; 0000 006C         putch_USART1(str[i]);
000141 940e 0b9f 	CALL SUBOPT_0x0
000143 93ea      	ST   -Y,R30
000144 dfeb      	RCALL _putch_USART1
                 ; 0000 006D     }
000145 5f1f      	SUBI R17,-1
000146 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 006E     for(x = 0; x<i; x++){
000147 e000      	LDI  R16,LOW(0)
                 _0xA:
000148 1701      	CP   R16,R17
000149 f450      	BRSH _0xB
                 ; 0000 006F         *(str++) = 0;
00014a 81aa      	LDD  R26,Y+2
00014b 81bb      	LDD  R27,Y+2+1
00014c 9611      	ADIW R26,1
00014d 83aa      	STD  Y+2,R26
00014e 83bb      	STD  Y+2+1,R27
00014f 9711      	SBIW R26,1
000150 e0e0      	LDI  R30,LOW(0)
000151 93ec      	ST   X,R30
                 ; 0000 0070     }
000152 5f0f      	SUBI R16,-1
000153 cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0071 }
000154 8119      	LDD  R17,Y+1
000155 8108      	LDD  R16,Y+0
000156 c0ea      	RJMP _0x20A000B
                 ;
                 ;// void puts_USART1(char *str,char IDX)
                 ;// {
                 ;//     unsigned char i = 0;
                 ;
                 ;//     while(*str != 0)
                 ;//     {
                 ;//         putch_USART1(*(str+i));
                 ;//         i++;
                 ;//     }
                 ;
                 ;//     for(i = 0; i<IDX; i++)
                 ;//     {
                 ;//         *(str+i) = 0;
                 ;//     }
                 ;// }
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0084 {
                 ; 0000 0085     unsigned char i = 0;
                 ; 0000 0086     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 0087     if(TIMER2_OVERFLOW>0)
                 ; 0000 0088     {
                 ; 0000 0089         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 008A for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 008B }
                 ; 0000 008C     UCSR0B |= (1<<RXEN0);
                 ; 0000 008D }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0090 {
                 _putch_USART0:
                 ; 0000 0091     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000157 9b5d      	SBIS 0xB,5
000158 cffe      	RJMP _0x13
                 ; 0000 0092     UDR0 = data;
000159 81e8      	LD   R30,Y
00015a b9ec      	OUT  0xC,R30
                 ; 0000 0093 }
                 _0x20A000D:
00015b 9621      	ADIW R28,1
00015c 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 0096 {
                 ; 0000 0097     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 0098     unsigned char i = 0;
                 ; 0000 0099     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009A     {
                 ; 0000 009B         putch_USART1(*(str+i));
                 ; 0000 009C     }
                 ; 0000 009D 
                 ; 0000 009E     for(i = 0; i<IDX; i++)
                 ; 0000 009F     {
                 ; 0000 00A0         *(str+i) = 0;
                 ; 0000 00A1     }
                 ; 0000 00A2 }
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00A5 {
                 _CRC16:
                 ; 0000 00A6     int i;
                 ; 0000 00A7     unsigned short crc, flag;
                 ; 0000 00A8     crc = 0xffff;
00015d 940e 1057 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00015f ef2f     +LDI R18 , LOW ( - 1 )
000160 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00A9 
                 ; 0000 00AA     while(usDataLen--){
                 _0x1C:
000161 81ee      	LDD  R30,Y+6
000162 81ff      	LDD  R31,Y+6+1
000163 9731      	SBIW R30,1
000164 83ee      	STD  Y+6,R30
000165 83ff      	STD  Y+6+1,R31
000166 9631      	ADIW R30,1
000167 f0f9      	BREQ _0x1E
                 ; 0000 00AB         crc ^= *puchMsg++;
000168 85a8      	LDD  R26,Y+8
000169 85b9      	LDD  R27,Y+8+1
00016a 91ed      	LD   R30,X+
00016b 87a8      	STD  Y+8,R26
00016c 87b9      	STD  Y+8+1,R27
00016d e0f0      	LDI  R31,0
                +
00016e 272e     +EOR R18 , R30
00016f 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00AC 
                 ; 0000 00AD         for (i=0; i<8; i++){
                +
000170 e000     +LDI R16 , LOW ( 0 )
000171 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
000172 3008     +CPI R16 , LOW ( 8 )
000173 e0e0     +LDI R30 , HIGH ( 8 )
000174 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000175 f484      	BRGE _0x21
                 ; 0000 00AE             flag = crc & 0x0001;
000176 01f9      	MOVW R30,R18
000177 70e1      	ANDI R30,LOW(0x1)
000178 70f0      	ANDI R31,HIGH(0x1)
000179 01af      	MOVW R20,R30
                 ; 0000 00AF             crc >>= 1;
00017a 9536      	LSR  R19
00017b 9527      	ROR  R18
                 ; 0000 00B0             if(flag) crc ^= POLYNORMIAL;
00017c 2e04      	MOV  R0,R20
00017d 2a05      	OR   R0,R21
00017e f021      	BREQ _0x22
00017f e0e1      	LDI  R30,LOW(40961)
000180 eaf0      	LDI  R31,HIGH(40961)
                +
000181 272e     +EOR R18 , R30
000182 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B1         }
                 _0x22:
                +
000183 5f0f     +SUBI R16 , LOW ( - 1 )
000184 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000185 cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00B2     }
000186 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00B3     return crc;
000187 01f9      	MOVW R30,R18
000188 940e 105e 	CALL __LOADLOCR6
00018a 962a      	ADIW R28,10
00018b 9508      	RET
                 ; 0000 00B4 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00B7 {
                 _RTU_WriteOperate0:
                 ; 0000 00B8     char protocol[8];
                 ; 0000 00B9     unsigned short crc16;
                 ; 0000 00BA     int i=0;
                 ; 0000 00BB     //PACKET_BUFF_IDX = 0;
                 ; 0000 00BC 
                 ; 0000 00BD     protocol[0]=device_address;
00018c 940e 0ba6 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00BE     protocol[1]=0x06;
00018e e0e6      	LDI  R30,LOW(6)
00018f 940e 0bae 	CALL SUBOPT_0x2
                 ; 0000 00BF     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C0     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C1     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C2     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C3     protocol[6]=0;
                 ; 0000 00C4     protocol[7]=0;
                 ; 0000 00C5 
                 ; 0000 00C6     crc16 = CRC16(protocol, 6);
                 ; 0000 00C7 
                 ; 0000 00C8     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00C9     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00CA 
                 ; 0000 00CB 
                 ; 0000 00CC     for(i=0;i<8;i++)
                 _0x24:
                +
000191 3028     +CPI R18 , LOW ( 8 )
000192 e0e0     +LDI R30 , HIGH ( 8 )
000193 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000194 f42c      	BRGE _0x25
                 ; 0000 00CD     {
                 ; 0000 00CE         putch_USART0(*(protocol+i));
000195 940e 0bd1 	CALL SUBOPT_0x3
                 ; 0000 00CF     }
                +
000197 5f2f     +SUBI R18 , LOW ( - 1 )
000198 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000199 cff7      	RJMP _0x24
                 _0x25:
                 ; 0000 00D0 }
00019a c00e      	RJMP _0x20A000C
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00D3 {
                 ; 0000 00D4     char protocol[8];
                 ; 0000 00D5     unsigned short crc16;
                 ; 0000 00D6     int i=0;
                 ; 0000 00D7    // PACKET_BUFF_IDX = 0;
                 ; 0000 00D8 
                 ; 0000 00D9     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00DA     protocol[1]=0x06;
                 ; 0000 00DB     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00DC     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00DD     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00DE     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00DF     protocol[6]=0;
                 ; 0000 00E0     protocol[7]=0;
                 ; 0000 00E1 
                 ; 0000 00E2     crc16 = CRC16(protocol, 6);
                 ; 0000 00E3 
                 ; 0000 00E4     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00E5     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00E6 
                 ; 0000 00E7 
                 ; 0000 00E8     for(i=0;i<8;i++)
                 ; 0000 00E9     {
                 ; 0000 00EA         putch_USART1(*(protocol+i));
                 ; 0000 00EB     }
                 ; 0000 00EC }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00EF {
                 _RTU_ReedOperate0:
                 ; 0000 00F0     char protocol[8];
                 ; 0000 00F1     unsigned short crc16;
                 ; 0000 00F2     int i=0;
                 ; 0000 00F3     //PACKET_BUFF_IDX = 0;
                 ; 0000 00F4 
                 ; 0000 00F5     protocol[0]=device_address;
00019b 940e 0ba6 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00F6     protocol[1]=0x04;
00019d e0e4      	LDI  R30,LOW(4)
00019e 940e 0bae 	CALL SUBOPT_0x2
                 ; 0000 00F7     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00F8     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00F9     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00FA     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00FB     protocol[6]=0;
                 ; 0000 00FC     protocol[7]=0;
                 ; 0000 00FD 
                 ; 0000 00FE     crc16 = CRC16(protocol, 6);
                 ; 0000 00FF 
                 ; 0000 0100     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 0101     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 0102 
                 ; 0000 0103 
                 ; 0000 0104     for(i=0;i<8;i++)
                 _0x2A:
                +
0001a0 3028     +CPI R18 , LOW ( 8 )
0001a1 e0e0     +LDI R30 , HIGH ( 8 )
0001a2 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0001a3 f42c      	BRGE _0x2B
                 ; 0000 0105     {
                 ; 0000 0106         putch_USART0(*(protocol+i));
0001a4 940e 0bd1 	CALL SUBOPT_0x3
                 ; 0000 0107     }
                +
0001a6 5f2f     +SUBI R18 , LOW ( - 1 )
0001a7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001a8 cff7      	RJMP _0x2A
                 _0x2B:
                 ; 0000 0108 }
                 _0x20A000C:
0001a9 940e 1060 	CALL __LOADLOCR4
0001ab 9661      	ADIW R28,17
0001ac 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 010B {
                 _Make_MSPEED:
                 ; 0000 010C     float VelocityR = 0;
                 ; 0000 010D     float VelocityL = 0;
                 ; 0000 010E 
                 ; 0000 010F     if(*_velocity>=0){
0001ad 9728      	SBIW R28,8
0001ae 940e 0bd9 	CALL SUBOPT_0x4
0001b0 e0e0      	LDI  R30,LOW(0)
0001b1 83ea      	STD  Y+2,R30
0001b2 83eb      	STD  Y+3,R30
0001b3 83ec      	STD  Y+4,R30
0001b4 83ed      	STD  Y+5,R30
0001b5 83ee      	STD  Y+6,R30
0001b6 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
0001b7 940e 0bdd 	CALL SUBOPT_0x5
0001b9 2377      	TST  R23
0001ba f042      	BRMI _0x2C
                 ; 0000 0110         *_angularV = -(*_angularV);
0001bb 940e 0be2 	CALL SUBOPT_0x6
0001bd 940e 0dec 	CALL __ANEGF1
0001bf 85ac      	LDD  R26,Y+12
0001c0 85bd      	LDD  R27,Y+12+1
0001c1 940e 1020 	CALL __PUTDP1
                 ; 0000 0111     }
                 ; 0000 0112 
                 ; 0000 0113     VelocityR = *_velocity+(*_angularV*Length)/4;
                 _0x2C:
0001c3 940e 0bdd 	CALL SUBOPT_0x5
0001c5 937f      	PUSH R23
0001c6 936f      	PUSH R22
0001c7 93ff      	PUSH R31
0001c8 93ef      	PUSH R30
0001c9 940e 0be2 	CALL SUBOPT_0x6
0001cb 940e 0be7 	CALL SUBOPT_0x7
0001cd 91af      	POP  R26
0001ce 91bf      	POP  R27
0001cf 918f      	POP  R24
0001d0 919f      	POP  R25
0001d1 940e 0e92 	CALL __ADDF12
0001d3 940e 0bf6 	CALL SUBOPT_0x8
                 ; 0000 0114     VelocityL = *_velocity-(*_angularV*Length)/4;
0001d5 940e 0bdd 	CALL SUBOPT_0x5
0001d7 937f      	PUSH R23
0001d8 936f      	PUSH R22
0001d9 93ff      	PUSH R31
0001da 93ef      	PUSH R30
0001db 940e 0be2 	CALL SUBOPT_0x6
0001dd 940e 0be7 	CALL SUBOPT_0x7
0001df 91af      	POP  R26
0001e0 91bf      	POP  R27
0001e1 918f      	POP  R24
0001e2 919f      	POP  R25
0001e3 940e 0bfb 	CALL SUBOPT_0x9
0001e5 940e 102f 	CALL __PUTD1S0
                 ; 0000 0115 
                 ; 0000 0116     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0001e7 940e 0c00 	CALL SUBOPT_0xA
0001e9 940e 0c05 	CALL SUBOPT_0xB
0001eb 85aa      	LDD  R26,Y+10
0001ec 85bb      	LDD  R27,Y+10+1
0001ed 93ed      	ST   X+,R30
0001ee 93fc      	ST   X,R31
                 ; 0000 0117     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0001ef 940e 0c14 	CALL SUBOPT_0xC
0001f1 940e 0c05 	CALL SUBOPT_0xB
0001f3 85a8      	LDD  R26,Y+8
0001f4 85b9      	LDD  R27,Y+8+1
0001f5 93ed      	ST   X+,R30
0001f6 93fc      	ST   X,R31
                 ; 0000 0118 
                 ; 0000 0119     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0001f7 85aa      	LDD  R26,Y+10
0001f8 85bb      	LDD  R27,Y+10+1
0001f9 940e 1016 	CALL __GETW1P
0001fb 32ec      	CPI  R30,LOW(0x12C)
0001fc e0a1      	LDI  R26,HIGH(0x12C)
0001fd 07fa      	CPC  R31,R26
0001fe f434      	BRGE _0x2E
0001ff 01df      	MOVW R26,R30
000200 ede4      	LDI  R30,LOW(65236)
000201 effe      	LDI  R31,HIGH(65236)
000202 17ea      	CP   R30,R26
000203 07fb      	CPC  R31,R27
000204 f00c      	BRLT _0x2F
                 _0x2E:
000205 c014      	RJMP _0x30
                 _0x2F:
000206 85a8      	LDD  R26,Y+8
000207 85b9      	LDD  R27,Y+8+1
000208 940e 1016 	CALL __GETW1P
00020a 32ec      	CPI  R30,LOW(0x12C)
00020b e0a1      	LDI  R26,HIGH(0x12C)
00020c 07fa      	CPC  R31,R26
00020d f454      	BRGE _0x31
00020e 85a8      	LDD  R26,Y+8
00020f 85b9      	LDD  R27,Y+8+1
000210 940e 1016 	CALL __GETW1P
000212 01df      	MOVW R26,R30
000213 ede4      	LDI  R30,LOW(65236)
000214 effe      	LDI  R31,HIGH(65236)
000215 17ea      	CP   R30,R26
000216 07fb      	CPC  R31,R27
000217 f00c      	BRLT _0x32
                 _0x31:
000218 c001      	RJMP _0x30
                 _0x32:
000219 c001      	RJMP _0x33
                 _0x30:
00021a c008      	RJMP _0x2D
                 _0x33:
                 ; 0000 011A         *R_RPM = 0;
00021b 85aa      	LDD  R26,Y+10
00021c 85bb      	LDD  R27,Y+10+1
00021d 940e 0c17 	CALL SUBOPT_0xD
                 ; 0000 011B         *L_RPM = 0;
00021f 85a8      	LDD  R26,Y+8
000220 85b9      	LDD  R27,Y+8+1
000221 940e 0c17 	CALL SUBOPT_0xD
                 ; 0000 011C     }
                 ; 0000 011D }
                 _0x2D:
000223 940c 060e 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 0120 {
                 _oper_Disapath:
                 ; 0000 0121     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
000225 e0e1      	LDI  R30,LOW(1)
000226 93ea      	ST   -Y,R30
000227 e7e9      	LDI  R30,LOW(121)
000228 e0f0      	LDI  R31,HIGH(121)
000229 93fa      	ST   -Y,R31
00022a 93ea      	ST   -Y,R30
00022b 81ed      	LDD  R30,Y+5
00022c 81fe      	LDD  R31,Y+5+1
00022d 940e 0c1c 	CALL SUBOPT_0xE
                 ; 0000 0122     delay_ms(5);
                 ; 0000 0123 
                 ; 0000 0124     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
00022f e0e2      	LDI  R30,LOW(2)
000230 93ea      	ST   -Y,R30
000231 e7e9      	LDI  R30,LOW(121)
000232 e0f0      	LDI  R31,HIGH(121)
000233 93fa      	ST   -Y,R31
000234 93ea      	ST   -Y,R30
000235 81eb      	LDD  R30,Y+3
000236 81fc      	LDD  R31,Y+3+1
000237 940e 0f99 	CALL __ANEGW1
000239 940e 0c1c 	CALL SUBOPT_0xE
                 ; 0000 0125     delay_ms(5);
                 ; 0000 0126 
                 ; 0000 0127     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00023b e0e1      	LDI  R30,LOW(1)
00023c 940e 0c26 	CALL SUBOPT_0xF
                 ; 0000 0128     delay_ms(5);
                 ; 0000 0129 
                 ; 0000 012A     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
00023e e0e2      	LDI  R30,LOW(2)
00023f 940e 0c26 	CALL SUBOPT_0xF
                 ; 0000 012B     delay_ms(5);
                 ; 0000 012C }
                 _0x20A000B:
000241 9624      	ADIW R28,4
000242 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 012F {
                 _get_RPM:
                 ; 0000 0130     unsigned char i = 0;
                 ; 0000 0131     unsigned int RPM = 0;
                 ; 0000 0132 
                 ; 0000 0133     RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
000243 940e 1059 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
000245 e010      	LDI  R17,0
                +
000246 e020     +LDI R18 , LOW ( 0 )
000247 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000248 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
00024a e0a0      	LDI  R26,LOW(0)
                +
00024b 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
00024d 940e 0c2e 	CALL SUBOPT_0x10
00024f 019f      	MOVW R18,R30
                 ; 0000 0134     *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
000250 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
000252 e0a0      	LDI  R26,LOW(0)
                +
000253 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
000255 940e 0c2e 	CALL SUBOPT_0x10
000257 81ac      	LDD  R26,Y+4
000258 81bd      	LDD  R27,Y+4+1
000259 93ed      	ST   X+,R30
00025a 93fc      	ST   X,R31
                 ; 0000 0135     for(i = 0; i<IDX; i++) *(str+i) = 0;
00025b e010      	LDI  R17,LOW(0)
                 _0x35:
00025c 81ee      	LDD  R30,Y+6
00025d 171e      	CP   R17,R30
00025e f450      	BRSH _0x36
00025f 2fe1      	MOV  R30,R17
000260 e0f0      	LDI  R31,0
000261 81af      	LDD  R26,Y+7
000262 85b8      	LDD  R27,Y+7+1
000263 0fae      	ADD  R26,R30
000264 1fbf      	ADC  R27,R31
000265 e0e0      	LDI  R30,LOW(0)
000266 93ec      	ST   X,R30
000267 5f1f      	SUBI R17,-1
000268 cff3      	RJMP _0x35
                 _0x36:
                 ; 0000 0137 return RPM;
000269 01f9      	MOVW R30,R18
00026a 940e 1060 	CALL __LOADLOCR4
00026c 9629      	ADIW R28,9
00026d 9508      	RET
                 ; 0000 0138 }
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 013B {
                 _usart0_rxc:
00026e 93aa      	ST   -Y,R26
00026f 93ba      	ST   -Y,R27
000270 93ea      	ST   -Y,R30
000271 b7ef      	IN   R30,SREG
000272 93ea      	ST   -Y,R30
                 ; 0000 013C     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000273 b5e4      	IN   R30,0x24
000274 31e9      	CPI  R30,LOW(0x19)
000275 f418      	BRSH _0x38
000276 e0e0      	LDI  R30,LOW(0)
000277 15e5      	CP   R30,R5
000278 f019      	BREQ _0x3A
                 _0x38:
000279 e0e0      	LDI  R30,LOW(0)
00027a 15e4      	CP   R30,R4
00027b f419      	BRNE _0x37
                 _0x3A:
                 ; 0000 013D     {
                 ; 0000 013E         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00027c 940e 0c32 	CALL SUBOPT_0x11
                 ; 0000 013F         PACKET_BUFF_IDX++;
                 ; 0000 0140         TCNT2 = 0;
                 ; 0000 0141     }
                 ; 0000 0142     else {
00027e c004      	RJMP _0x3C
                 _0x37:
                 ; 0000 0143         PACKET_BUFF_IDX = 0;
00027f 2444      	CLR  R4
                 ; 0000 0144         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000280 940e 0c32 	CALL SUBOPT_0x11
                 ; 0000 0145         PACKET_BUFF_IDX++;
                 ; 0000 0146         TCNT2 = 0;
                 ; 0000 0147         TIMER2_OVERFLOW = 0;
000282 2455      	CLR  R5
                 ; 0000 0148     }
                 _0x3C:
                 ; 0000 0149 }
000283 91e9      	LD   R30,Y+
000284 bfef      	OUT  SREG,R30
000285 91e9      	LD   R30,Y+
000286 91b9      	LD   R27,Y+
000287 91a9      	LD   R26,Y+
000288 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 014C {
                 _usart1_rxc:
000289 940e 0c3c 	CALL SUBOPT_0x12
                 ; 0000 014D     unsigned char i = 0;
                 ; 0000 014E     i = UDR1;
00028b 931a      	ST   -Y,R17
                 ;	i -> R17
00028c e010      	LDI  R17,0
00028d 9110 009c 	LDS  R17,156
                 ; 0000 014F     if((i == '<') && (CHECK_GETS == 0)){
00028f 331c      	CPI  R17,60
000290 f419      	BRNE _0x3E
000291 e0e0      	LDI  R30,LOW(0)
000292 15e8      	CP   R30,R8
000293 f009      	BREQ _0x3F
                 _0x3E:
000294 c007      	RJMP _0x3D
                 _0x3F:
                 ; 0000 0150         PORTB.3 = ~PORTB.3;
000295 9bc3      	SBIS 0x18,3
000296 c002      	RJMP _0x40
000297 98c3      	CBI  0x18,3
000298 c001      	RJMP _0x41
                 _0x40:
000299 9ac3      	SBI  0x18,3
                 _0x41:
                 ; 0000 0151         VELOCITY_BUFF_IDX = 0;
00029a 2499      	CLR  R9
                 ; 0000 0152         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00029b c00e      	RJMP _0x5F
                 ; 0000 0153         VELOCITY_BUFF_IDX++;
                 ; 0000 0154     }
                 ; 0000 0155     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x3D:
00029c 331e      	CPI  R17,62
00029d f419      	BRNE _0x44
00029e e0e0      	LDI  R30,LOW(0)
00029f 15e8      	CP   R30,R8
0002a0 f009      	BREQ _0x45
                 _0x44:
0002a1 c006      	RJMP _0x43
                 _0x45:
                 ; 0000 0156         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
0002a2 2de9      	MOV  R30,R9
0002a3 940e 0c41 	CALL SUBOPT_0x13
                 ; 0000 0157         VELOCITY_BUFF_IDX++;
                 ; 0000 0158         CHECK_GETS = 1;
0002a5 e0e1      	LDI  R30,LOW(1)
0002a6 2e8e      	MOV  R8,R30
                 ; 0000 0159     }
                 ; 0000 015A     else if(CHECK_GETS == 0){
0002a7 c005      	RJMP _0x46
                 _0x43:
0002a8 2088      	TST  R8
0002a9 f419      	BRNE _0x47
                 ; 0000 015B         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x5F:
0002aa 2de9      	MOV  R30,R9
0002ab 940e 0c41 	CALL SUBOPT_0x13
                 ; 0000 015C         VELOCITY_BUFF_IDX++;
                 ; 0000 015D     }
                 ; 0000 015E }
                 _0x47:
                 _0x46:
0002ad 9119      	LD   R17,Y+
0002ae c014      	RJMP _0x60
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 0161 {
                 _timer2_comp:
0002af 93ea      	ST   -Y,R30
0002b0 b7ef      	IN   R30,SREG
                 ; 0000 0162     TIMER2_OVERFLOW++;
0002b1 9453      	INC  R5
                 ; 0000 0163 }
0002b2 bfef      	OUT  SREG,R30
0002b3 91e9      	LD   R30,Y+
0002b4 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 0166 {
                 _timer0_ovf:
0002b5 940e 0c3c 	CALL SUBOPT_0x12
                 ; 0000 0167     TIMER0_OVERFLOW++;
0002b7 01f3      	MOVW R30,R6
0002b8 9631      	ADIW R30,1
0002b9 013f      	MOVW R6,R30
                 ; 0000 0168 }
0002ba c008      	RJMP _0x60
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0000 016C {
                 _timer0_comp:
0002bb 940e 0c3c 	CALL SUBOPT_0x12
                 ; 0000 016D     TIMER1_OVERFLOW++;
0002bd 01f6      	MOVW R30,R12
0002be 9631      	ADIW R30,1
0002bf 016f      	MOVW R12,R30
                 ; 0000 016E     TCNT1H = 0x00;
0002c0 e0e0      	LDI  R30,LOW(0)
0002c1 bded      	OUT  0x2D,R30
                 ; 0000 016F     TCNT1L = 0x00;
0002c2 bdec      	OUT  0x2C,R30
                 ; 0000 0170 }
                 _0x60:
0002c3 91e9      	LD   R30,Y+
0002c4 bfef      	OUT  SREG,R30
0002c5 91f9      	LD   R31,Y+
0002c6 91e9      	LD   R30,Y+
0002c7 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 0173 {
                 _main:
                 ; 0000 0174     float a_buff;
                 ; 0000 0175     float v_buff;
                 ; 0000 0176 
                 ; 0000 0177     int velocity = 0;
                 ; 0000 0178     int angularV = 0;
                 ; 0000 0179     int velocity_R = 0;
                 ; 0000 017A     int velocity_L = 0;
                 ; 0000 017B     int past_velocity_R = 0;
                 ; 0000 017C     int past_velocity_L = 0;
                 ; 0000 017D     int del_ms = 0;
                 ; 0000 017E 
                 ; 0000 017F     // int current_R = 0;
                 ; 0000 0180     // int current_L = 0;
                 ; 0000 0181     float current_R = 0;
                 ; 0000 0182     float current_L = 0;
                 ; 0000 0183     int goal_current_R = 0;
                 ; 0000 0184     int goal_current_L = 0;
                 ; 0000 0185 
                 ; 0000 0186     float d_velocity = 0;
                 ; 0000 0187     float d_angularV = 0;
                 ; 0000 0188     float control_time = 0;
                 ; 0000 0189 
                 ; 0000 018A     float d_x = 0;
                 ; 0000 018B     float d_y = 0;
                 ; 0000 018C     float d_angular = 0;
                 ; 0000 018D 
                 ; 0000 018E     float TIMER1_TIME = 0;
                 ; 0000 018F     float TIMER0_TIME = 0;
                 ; 0000 0190 
                 ; 0000 0191     unsigned char BUFF[100] = {0,};
                 ; 0000 0192 
                 ; 0000 0193     usart1_init(bps_115200);
0002c8 97ef      	SBIW R28,63
0002c9 97ef      	SBIW R28,63
0002ca 97a2      	SBIW R28,34
0002cb e988      	LDI  R24,152
0002cc e0a0      	LDI  R26,LOW(0)
0002cd e0b0      	LDI  R27,HIGH(0)
0002ce e8ec      	LDI  R30,LOW(_0x48*2)
0002cf e0f0      	LDI  R31,HIGH(_0x48*2)
0002d0 940e 1065 	CALL __INITLOCB
                 ;	a_buff -> Y+156
                 ;	v_buff -> Y+152
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+150
                 ;	past_velocity_R -> Y+148
                 ;	past_velocity_L -> Y+146
                 ;	del_ms -> Y+144
                 ;	current_R -> Y+140
                 ;	current_L -> Y+136
                 ;	goal_current_R -> Y+134
                 ;	goal_current_L -> Y+132
                 ;	d_velocity -> Y+128
                 ;	d_angularV -> Y+124
                 ;	control_time -> Y+120
                 ;	d_x -> Y+116
                 ;	d_y -> Y+112
                 ;	d_angular -> Y+108
                 ;	TIMER1_TIME -> Y+104
                 ;	TIMER0_TIME -> Y+100
                 ;	BUFF -> Y+0
                +
0002d2 e000     +LDI R16 , LOW ( 0 )
0002d3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0002d4 e020     +LDI R18 , LOW ( 0 )
0002d5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0002d6 e040     +LDI R20 , LOW ( 0 )
0002d7 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0002d8 e0e7      	LDI  R30,LOW(7)
0002d9 e0f0      	LDI  R31,HIGH(7)
0002da 93fa      	ST   -Y,R31
0002db 93ea      	ST   -Y,R30
0002dc de0d      	RCALL _usart1_init
                 ; 0000 0194     usart0_init(bps_115200);
0002dd e0e7      	LDI  R30,LOW(7)
0002de e0f0      	LDI  R31,HIGH(7)
0002df 93fa      	ST   -Y,R31
0002e0 93ea      	ST   -Y,R30
0002e1 de20      	RCALL _usart0_init
                 ; 0000 0195     timer2_init();
0002e2 de35      	RCALL _timer2_init
                 ; 0000 0196     timer0_init();
0002e3 de3a      	RCALL _timer0_init
                 ; 0000 0197     timer1_init();
0002e4 de3d      	RCALL _timer1_init
                 ; 0000 0198     SREG |= 0x80;
0002e5 9478      	BSET 7
                 ; 0000 0199     DDRB.1 = 1;
0002e6 9ab9      	SBI  0x17,1
                 ; 0000 019A     DDRB.2 = 1;
0002e7 9aba      	SBI  0x17,2
                 ; 0000 019B     DDRB.3 = 1;
0002e8 9abb      	SBI  0x17,3
                 ; 0000 019C     delay_ms(5000);
0002e9 e8e8      	LDI  R30,LOW(5000)
0002ea e1f3      	LDI  R31,HIGH(5000)
0002eb 940e 0c47 	CALL SUBOPT_0x14
                 ; 0000 019D     PORTB.1 = 0;
0002ed 98c1      	CBI  0x18,1
                 ; 0000 019E     PORTB.2 = 1;
0002ee 9ac2      	SBI  0x18,2
                 ; 0000 019F 
                 ; 0000 01A0     TIMER0_OVERFLOW = 0;
0002ef 2466      	CLR  R6
0002f0 2477      	CLR  R7
                 ; 0000 01A1     TCNT0 = 0;
0002f1 e0e0      	LDI  R30,LOW(0)
0002f2 bfe2      	OUT  0x32,R30
                 ; 0000 01A2     while(1)
                 _0x53:
                 ; 0000 01A3     {
                 ; 0000 01A4         if(CHECK_GETS)
0002f3 2088      	TST  R8
0002f4 f411      	BRNE PC+3
0002f5 940c 036b 	JMP _0x56
                 ; 0000 01A5         {
                 ; 0000 01A6             PORTB.1 = 1;
0002f7 9ac1      	SBI  0x18,1
                 ; 0000 01A7 
                 ; 0000 01A8             UCSR1B &= ~(1<<RXEN1);
0002f8 91e0 009a 	LDS  R30,154
0002fa 7eef      	ANDI R30,0xEF
0002fb 93e0 009a 	STS  154,R30
                 ; 0000 01A9             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
0002fd e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0002fe e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0002ff 93fa      	ST   -Y,R31
000300 93ea      	ST   -Y,R30
                +
000301 e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000302 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
000305 b7ed      	IN   R30,SPL
000306 b7fe      	IN   R31,SPH
000307 9731      	SBIW R30,1
000308 940e 1034 	CALL __PUTPARD1L
00030a 931f      	PUSH R17
00030b 930f      	PUSH R16
00030c b7ed      	IN   R30,SPL
00030d b7fe      	IN   R31,SPH
00030e 9731      	SBIW R30,1
00030f 940e 1034 	CALL __PUTPARD1L
000311 933f      	PUSH R19
000312 932f      	PUSH R18
000313 01fe      	MOVW R30,R28
000314 56e4      	SUBI R30,LOW(-(156))
000315 4fff      	SBCI R31,HIGH(-(156))
000316 2766      	CLR  R22
000317 2777      	CLR  R23
000318 940e 1036 	CALL __PUTPARD1
00031a e08c      	LDI  R24,12
00031b 940e 09bb 	CALL _sscanf
00031d 9660      	ADIW R28,16
00031e 912f      	POP  R18
00031f 913f      	POP  R19
000320 910f      	POP  R16
000321 911f      	POP  R17
                 ; 0000 01AA 
                 ; 0000 01AB             v_buff = (float)velocity/1000;
000322 01f8      	MOVW R30,R16
000323 940e 0c4b 	CALL SUBOPT_0x15
                +
000325 01de     +MOVW R26 , R28
000326 56a8     +SUBI R26 , LOW ( - 152 )
000327 4fbf     +SBCI R27 , HIGH ( - 152 )
000328 93ed     +ST X + , R30
000329 93fd     +ST X + , R31
00032a 936d     +ST X + , R22
00032b 937c     +ST X , R23
                 	__PUTD1SX 152
                 ; 0000 01AC             a_buff = (float)angularV/1000;
00032c 01f9      	MOVW R30,R18
00032d 940e 0c4b 	CALL SUBOPT_0x15
                +
00032f 01de     +MOVW R26 , R28
000330 56a4     +SUBI R26 , LOW ( - 156 )
000331 4fbf     +SBCI R27 , HIGH ( - 156 )
000332 93ed     +ST X + , R30
000333 93fd     +ST X + , R31
000334 936d     +ST X + , R22
000335 937c     +ST X , R23
                 	__PUTD1SX 156
                 ; 0000 01AD 
                 ; 0000 01AE             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000336 01fe      	MOVW R30,R28
000337 56e8      	SUBI R30,LOW(-(152))
000338 4fff      	SBCI R31,HIGH(-(152))
000339 93fa      	ST   -Y,R31
00033a 93ea      	ST   -Y,R30
00033b 01fe      	MOVW R30,R28
00033c 56e2      	SUBI R30,LOW(-(158))
00033d 4fff      	SBCI R31,HIGH(-(158))
00033e 93fa      	ST   -Y,R31
00033f 93ea      	ST   -Y,R30
000340 b7ed      	IN   R30,SPL
000341 b7fe      	IN   R31,SPH
000342 9731      	SBIW R30,1
000343 93fa      	ST   -Y,R31
000344 93ea      	ST   -Y,R30
000345 935f      	PUSH R21
000346 934f      	PUSH R20
000347 01fe      	MOVW R30,R28
000348 56e4      	SUBI R30,LOW(-(156))
000349 4fff      	SBCI R31,HIGH(-(156))
00034a 93fa      	ST   -Y,R31
00034b 93ea      	ST   -Y,R30
00034c de60      	RCALL _Make_MSPEED
00034d 914f      	POP  R20
00034e 915f      	POP  R21
                 ; 0000 01AF 
                 ; 0000 01B0             oper_Disapath(velocity_R, velocity_L);
00034f 935a      	ST   -Y,R21
000350 934a      	ST   -Y,R20
                +
000351 01fe     +MOVW R30 , R28
000352 56e8     +SUBI R30 , LOW ( - 152 )
000353 4fff     +SBCI R31 , HIGH ( - 152 )
000354 9001     +LD R0 , Z +
000355 81f0     +LD R31 , Z
000356 2de0     +MOV R30 , R0
                 	__GETW1SX 152
000357 93fa      	ST   -Y,R31
000358 93ea      	ST   -Y,R30
000359 decb      	RCALL _oper_Disapath
                 ; 0000 01B1             // oper_Disapath(velocity, -velocity);
                 ; 0000 01B2 
                 ; 0000 01B3             TIMER1_TIME = 0;
00035a e0e0      	LDI  R30,LOW(0)
                +
00035b 01de     +MOVW R26 , R28
00035c 59a8     +SUBI R26 , LOW ( - 104 )
00035d 4fbf     +SBCI R27 , HIGH ( - 104 )
00035e 93ed     +ST X + , R30
00035f 93ed     +ST X + , R30
000360 93ed     +ST X + , R30
000361 93ec     +ST X , R30
                 	__CLRD1SX 104
                 ; 0000 01B4             TIMER1_OVERFLOW = 0;
000362 24cc      	CLR  R12
000363 24dd      	CLR  R13
                 ; 0000 01B5             TCNT1L = 0;
000364 bdec      	OUT  0x2C,R30
                 ; 0000 01B6 
                 ; 0000 01B7             CHECK_GETS = 0;
000365 2488      	CLR  R8
                 ; 0000 01B8             UCSR1B |=(1<<RXEN1);
000366 91e0 009a 	LDS  R30,154
000368 61e0      	ORI  R30,0x10
000369 93e0 009a 	STS  154,R30
                 ; 0000 01B9             // PORTB.1 = 0;
                 ; 0000 01BA         }
                 ; 0000 01BB 
                 ; 0000 01BC         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0x56:
00036b 01f6      	MOVW R30,R12
00036c efaf      	LDI  R26,LOW(255)
00036d e0b0      	LDI  R27,HIGH(255)
00036e 940e 0fba 	CALL __MULW12U
000370 01df      	MOVW R26,R30
000371 b5ec      	IN   R30,0x2C
000372 940e 0c2e 	CALL SUBOPT_0x10
000374 2766      	CLR  R22
000375 2777      	CLR  R23
000376 940e 0e58 	CALL __CDF1
                +
000378 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000379 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00037a e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00037b e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00037c 940e 0ee2 	CALL __MULF12
                +
00037e 01de     +MOVW R26 , R28
00037f 59a8     +SUBI R26 , LOW ( - 104 )
000380 4fbf     +SBCI R27 , HIGH ( - 104 )
000381 93ed     +ST X + , R30
000382 93fd     +ST X + , R31
000383 936d     +ST X + , R22
000384 937c     +ST X , R23
                 	__PUTD1SX 104
                 ; 0000 01BD 
                 ; 0000 01BE         if(del_ms<TIMER1_TIME)
                +
000385 01de     +MOVW R26 , R28
000386 57a0     +SUBI R26 , LOW ( - 144 )
000387 4fbf     +SBCI R27 , HIGH ( - 144 )
000388 900d     +LD R0 , X +
000389 91bc     +LD R27 , X
00038a 2da0     +MOV R26 , R0
                 	__GETW2SX 144
00038b 940e 0fb5 	CALL __CWD2
00038d 940e 103d 	CALL __CDF2
00038f 940e 0f75 	CALL __CMPF12
000391 f4c0      	BRSH _0x59
                 ; 0000 01BF         {
                 ; 0000 01C0             oper_Disapath(0,0);
000392 e0e0      	LDI  R30,LOW(0)
000393 e0f0      	LDI  R31,HIGH(0)
000394 93fa      	ST   -Y,R31
000395 93ea      	ST   -Y,R30
000396 93fa      	ST   -Y,R31
000397 93ea      	ST   -Y,R30
000398 de8c      	RCALL _oper_Disapath
                 ; 0000 01C1             TIMER1_OVERFLOW = 0;
000399 24cc      	CLR  R12
00039a 24dd      	CLR  R13
                 ; 0000 01C2             v_buff = 0;
00039b e0e0      	LDI  R30,LOW(0)
                +
00039c 01de     +MOVW R26 , R28
00039d 56a8     +SUBI R26 , LOW ( - 152 )
00039e 4fbf     +SBCI R27 , HIGH ( - 152 )
00039f 93ed     +ST X + , R30
0003a0 93ed     +ST X + , R30
0003a1 93ed     +ST X + , R30
0003a2 93ec     +ST X , R30
                 	__CLRD1SX 152
                 ; 0000 01C3             a_buff = 0;
                +
0003a3 01de     +MOVW R26 , R28
0003a4 56a4     +SUBI R26 , LOW ( - 156 )
0003a5 4fbf     +SBCI R27 , HIGH ( - 156 )
0003a6 93ed     +ST X + , R30
0003a7 93ed     +ST X + , R30
0003a8 93ed     +ST X + , R30
0003a9 93ec     +ST X , R30
                 	__CLRD1SX 156
                 ; 0000 01C4         }
                 ; 0000 01C5 
                 ; 0000 01C6         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 _0x59:
0003aa e0e1      	LDI  R30,LOW(1)
0003ab 940e 0c58 	CALL SUBOPT_0x16
                 ; 0000 01C7         delay_ms(5);
                 ; 0000 01C8         // current_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
                 ; 0000 01C9         current_R = (float)(get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R)/(152.788*Gearratio));
0003ad e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0003ae e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0003af 93fa      	ST   -Y,R31
0003b0 93ea      	ST   -Y,R30
0003b1 924a      	ST   -Y,R4
0003b2 01fe      	MOVW R30,R28
0003b3 57e7      	SUBI R30,LOW(-(137))
0003b4 4fff      	SBCI R31,HIGH(-(137))
0003b5 940e 0c64 	CALL SUBOPT_0x17
                +
0003b7 01de     +MOVW R26 , R28
0003b8 57a4     +SUBI R26 , LOW ( - 140 )
0003b9 4fbf     +SBCI R27 , HIGH ( - 140 )
0003ba 93ed     +ST X + , R30
0003bb 93fd     +ST X + , R31
0003bc 936d     +ST X + , R22
0003bd 937c     +ST X , R23
                 	__PUTD1SX 140
                 ; 0000 01CA         delay_ms(5);
0003be e0e5      	LDI  R30,LOW(5)
0003bf e0f0      	LDI  R31,HIGH(5)
0003c0 940e 0c47 	CALL SUBOPT_0x14
                 ; 0000 01CB         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0003c2 e0e2      	LDI  R30,LOW(2)
0003c3 940e 0c58 	CALL SUBOPT_0x16
                 ; 0000 01CC         delay_ms(5);
                 ; 0000 01CD         // current_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
                 ; 0000 01CE         current_L = -(float)(get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L)/(152.788*Gearratio));
0003c5 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0003c6 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0003c7 93fa      	ST   -Y,R31
0003c8 93ea      	ST   -Y,R30
0003c9 924a      	ST   -Y,R4
0003ca 01fe      	MOVW R30,R28
0003cb 57e9      	SUBI R30,LOW(-(135))
0003cc 4fff      	SBCI R31,HIGH(-(135))
0003cd 940e 0c64 	CALL SUBOPT_0x17
0003cf 940e 0dec 	CALL __ANEGF1
                +
0003d1 01de     +MOVW R26 , R28
0003d2 57a8     +SUBI R26 , LOW ( - 136 )
0003d3 4fbf     +SBCI R27 , HIGH ( - 136 )
0003d4 93ed     +ST X + , R30
0003d5 93fd     +ST X + , R31
0003d6 936d     +ST X + , R22
0003d7 937c     +ST X , R23
                 	__PUTD1SX 136
                 ; 0000 01CF         delay_ms(5);
0003d8 e0e5      	LDI  R30,LOW(5)
0003d9 e0f0      	LDI  R31,HIGH(5)
0003da 940e 0c47 	CALL SUBOPT_0x14
                 ; 0000 01D0 
                 ; 0000 01D1         d_velocity = (current_R + current_L)/2;
                +
0003dc 01fe     +MOVW R30 , R28
0003dd 57e8     +SUBI R30 , LOW ( - 136 )
0003de 4fff     +SBCI R31 , HIGH ( - 136 )
0003df 9001     +LD R0 , Z +
0003e0 9011     +LD R1 , Z +
0003e1 9161     +LD R22 , Z +
0003e2 8170     +LD R23 , Z
0003e3 01f0     +MOVW R30 , R0
                 	__GETD1SX 136
                +
0003e4 01de     +MOVW R26 , R28
0003e5 57a4     +SUBI R26 , LOW ( - 140 )
0003e6 4fbf     +SBCI R27 , HIGH ( - 140 )
0003e7 900d     +LD R0 , X +
0003e8 901d     +LD R1 , X +
0003e9 918d     +LD R24 , X +
0003ea 919c     +LD R25 , X
0003eb 01d0     +MOVW R26 , R0
                 	__GETD2SX 140
0003ec 940e 0e92 	CALL __ADDF12
0003ee 01df      	MOVW R26,R30
0003ef 01cb      	MOVW R24,R22
                +
0003f0 e0e0     +LDI R30 , LOW ( 0x40000000 )
0003f1 e0f0     +LDI R31 , HIGH ( 0x40000000 )
0003f2 e060     +LDI R22 , BYTE3 ( 0x40000000 )
0003f3 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
0003f4 940e 0f30 	CALL __DIVF21
                +
0003f6 01de     +MOVW R26 , R28
0003f7 58a0     +SUBI R26 , LOW ( - 128 )
0003f8 4fbf     +SBCI R27 , HIGH ( - 128 )
0003f9 93ed     +ST X + , R30
0003fa 93fd     +ST X + , R31
0003fb 936d     +ST X + , R22
0003fc 937c     +ST X , R23
                 	__PUTD1SX 128
                 ; 0000 01D2         d_angularV = (2*(current_R-current_L))/Length;
                +
0003fd 01de     +MOVW R26 , R28
0003fe 57a8     +SUBI R26 , LOW ( - 136 )
0003ff 4fbf     +SBCI R27 , HIGH ( - 136 )
000400 900d     +LD R0 , X +
000401 901d     +LD R1 , X +
000402 918d     +LD R24 , X +
000403 919c     +LD R25 , X
000404 01d0     +MOVW R26 , R0
                 	__GETD2SX 136
                +
000405 01fe     +MOVW R30 , R28
000406 57e4     +SUBI R30 , LOW ( - 140 )
000407 4fff     +SBCI R31 , HIGH ( - 140 )
000408 9001     +LD R0 , Z +
000409 9011     +LD R1 , Z +
00040a 9161     +LD R22 , Z +
00040b 8170     +LD R23 , Z
00040c 01f0     +MOVW R30 , R0
                 	__GETD1SX 140
00040d 940e 0e8b 	CALL __SUBF12
                +
00040f e0a0     +LDI R26 , LOW ( 0x40000000 )
000410 e0b0     +LDI R27 , HIGH ( 0x40000000 )
000411 e080     +LDI R24 , BYTE3 ( 0x40000000 )
000412 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
000413 940e 0ee2 	CALL __MULF12
000415 01df      	MOVW R26,R30
000416 01cb      	MOVW R24,R22
                +
000417 eee1     +LDI R30 , LOW ( 0x3E947AE1 )
000418 e7fa     +LDI R31 , HIGH ( 0x3E947AE1 )
000419 e964     +LDI R22 , BYTE3 ( 0x3E947AE1 )
00041a e37e     +LDI R23 , BYTE4 ( 0x3E947AE1 )
                 	__GETD1N 0x3E947AE1
00041b 940e 0f30 	CALL __DIVF21
                +
00041d 01de     +MOVW R26 , R28
00041e 58a4     +SUBI R26 , LOW ( - 124 )
00041f 4fbf     +SBCI R27 , HIGH ( - 124 )
000420 93ed     +ST X + , R30
000421 93fd     +ST X + , R31
000422 936d     +ST X + , R22
000423 937c     +ST X , R23
                 	__PUTD1SX 124
                 ; 0000 01D3         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)* 0.000069444;
000424 01f3      	MOVW R30,R6
000425 efaf      	LDI  R26,LOW(255)
000426 e0b0      	LDI  R27,HIGH(255)
000427 940e 0fba 	CALL __MULW12U
000429 01df      	MOVW R26,R30
00042a b7e2      	IN   R30,0x32
00042b 940e 0c2e 	CALL SUBOPT_0x10
00042d 2766      	CLR  R22
00042e 2777      	CLR  R23
00042f 940e 0e58 	CALL __CDF1
                +
000431 e7a7     +LDI R26 , LOW ( 0x3891A277 )
000432 eab2     +LDI R27 , HIGH ( 0x3891A277 )
000433 e981     +LDI R24 , BYTE3 ( 0x3891A277 )
000434 e398     +LDI R25 , BYTE4 ( 0x3891A277 )
                 	__GETD2N 0x3891A277
000435 940e 0ee2 	CALL __MULF12
                +
000437 01de     +MOVW R26 , R28
000438 58a8     +SUBI R26 , LOW ( - 120 )
000439 4fbf     +SBCI R27 , HIGH ( - 120 )
00043a 93ed     +ST X + , R30
00043b 93fd     +ST X + , R31
00043c 936d     +ST X + , R22
00043d 937c     +ST X , R23
                 	__PUTD1SX 120
                 ; 0000 01D4 
                 ; 0000 01D5         d_angular += (control_time*d_angularV);
00043e 940e 0c75 	CALL SUBOPT_0x18
                +
000440 01de     +MOVW R26 , R28
000441 59a4     +SUBI R26 , LOW ( - 108 )
000442 4fbf     +SBCI R27 , HIGH ( - 108 )
000443 900d     +LD R0 , X +
000444 901d     +LD R1 , X +
000445 918d     +LD R24 , X +
000446 919c     +LD R25 , X
000447 01d0     +MOVW R26 , R0
                 	__GETD2SX 108
000448 940e 0e92 	CALL __ADDF12
                +
00044a 01de     +MOVW R26 , R28
00044b 59a4     +SUBI R26 , LOW ( - 108 )
00044c 4fbf     +SBCI R27 , HIGH ( - 108 )
00044d 93ed     +ST X + , R30
00044e 93fd     +ST X + , R31
00044f 936d     +ST X + , R22
000450 937c     +ST X , R23
                 	__PUTD1SX 108
                 ; 0000 01D6 
                 ; 0000 01D7         TIMER0_OVERFLOW = 0;
000451 2466      	CLR  R6
000452 2477      	CLR  R7
                 ; 0000 01D8         TCNT0 = 0;
000453 e0e0      	LDI  R30,LOW(0)
000454 bfe2      	OUT  0x32,R30
                 ; 0000 01D9 
                 ; 0000 01DA         if((d_velocity!=0) ||(d_angularV!=0)){
000455 940e 0c88 	CALL SUBOPT_0x19
000457 940e 1051 	CALL __CPD02
000459 f461      	BRNE _0x5B
                +
00045a 01de     +MOVW R26 , R28
00045b 58a4     +SUBI R26 , LOW ( - 124 )
00045c 4fbf     +SBCI R27 , HIGH ( - 124 )
00045d 900d     +LD R0 , X +
00045e 901d     +LD R1 , X +
00045f 918d     +LD R24 , X +
000460 919c     +LD R25 , X
000461 01d0     +MOVW R26 , R0
                 	__GETD2SX 124
000462 940e 1051 	CALL __CPD02
000464 f409      	BRNE _0x5B
000465 c046      	RJMP _0x5A
                 _0x5B:
                 ; 0000 01DB             d_x += d_velocity*control_time*cos(control_time*d_angularV);
000466 940e 0c91 	CALL SUBOPT_0x1A
000468 937f      	PUSH R23
000469 936f      	PUSH R22
00046a 93ff      	PUSH R31
00046b 93ef      	PUSH R30
00046c 940e 0c75 	CALL SUBOPT_0x18
00046e 940e 1036 	CALL __PUTPARD1
000470 940e 0ab6 	CALL _cos
000472 91af      	POP  R26
000473 91bf      	POP  R27
000474 918f      	POP  R24
000475 919f      	POP  R25
000476 940e 0ee2 	CALL __MULF12
                +
000478 01de     +MOVW R26 , R28
000479 58ac     +SUBI R26 , LOW ( - 116 )
00047a 4fbf     +SBCI R27 , HIGH ( - 116 )
00047b 900d     +LD R0 , X +
00047c 901d     +LD R1 , X +
00047d 918d     +LD R24 , X +
00047e 919c     +LD R25 , X
00047f 01d0     +MOVW R26 , R0
                 	__GETD2SX 116
000480 940e 0e92 	CALL __ADDF12
                +
000482 01de     +MOVW R26 , R28
000483 58ac     +SUBI R26 , LOW ( - 116 )
000484 4fbf     +SBCI R27 , HIGH ( - 116 )
000485 93ed     +ST X + , R30
000486 93fd     +ST X + , R31
000487 936d     +ST X + , R22
000488 937c     +ST X , R23
                 	__PUTD1SX 116
                 ; 0000 01DC             d_y += d_velocity*control_time*sin(control_time*d_angularV);
000489 940e 0c91 	CALL SUBOPT_0x1A
00048b 937f      	PUSH R23
00048c 936f      	PUSH R22
00048d 93ff      	PUSH R31
00048e 93ef      	PUSH R30
00048f 940e 0c75 	CALL SUBOPT_0x18
000491 940e 1036 	CALL __PUTPARD1
000493 940e 0a2f 	CALL _sin
000495 91af      	POP  R26
000496 91bf      	POP  R27
000497 918f      	POP  R24
000498 919f      	POP  R25
000499 940e 0ee2 	CALL __MULF12
                +
00049b 01de     +MOVW R26 , R28
00049c 59a0     +SUBI R26 , LOW ( - 112 )
00049d 4fbf     +SBCI R27 , HIGH ( - 112 )
00049e 900d     +LD R0 , X +
00049f 901d     +LD R1 , X +
0004a0 918d     +LD R24 , X +
0004a1 919c     +LD R25 , X
0004a2 01d0     +MOVW R26 , R0
                 	__GETD2SX 112
0004a3 940e 0e92 	CALL __ADDF12
                +
0004a5 01de     +MOVW R26 , R28
0004a6 59a0     +SUBI R26 , LOW ( - 112 )
0004a7 4fbf     +SBCI R27 , HIGH ( - 112 )
0004a8 93ed     +ST X + , R30
0004a9 93fd     +ST X + , R31
0004aa 936d     +ST X + , R22
0004ab 937c     +ST X , R23
                 	__PUTD1SX 112
                 ; 0000 01DD         }
                 ; 0000 01DE         TIMER0_TIME += control_time;
                 _0x5A:
0004ac 940e 0c9d 	CALL SUBOPT_0x1B
0004ae 940e 0ca6 	CALL SUBOPT_0x1C
0004b0 940e 0e92 	CALL __ADDF12
                +
0004b2 01de     +MOVW R26 , R28
0004b3 59ac     +SUBI R26 , LOW ( - 100 )
0004b4 4fbf     +SBCI R27 , HIGH ( - 100 )
0004b5 93ed     +ST X + , R30
0004b6 93fd     +ST X + , R31
0004b7 936d     +ST X + , R22
0004b8 937c     +ST X , R23
                 	__PUTD1SX 100
                 ; 0000 01DF 
                 ; 0000 01E0         if(TIMER0_TIME>0.05){
0004b9 940e 0ca6 	CALL SUBOPT_0x1C
                +
0004bb eced     +LDI R30 , LOW ( 0x3D4CCCCD )
0004bc ecfc     +LDI R31 , HIGH ( 0x3D4CCCCD )
0004bd e46c     +LDI R22 , BYTE3 ( 0x3D4CCCCD )
0004be e37d     +LDI R23 , BYTE4 ( 0x3D4CCCCD )
                 	__GETD1N 0x3D4CCCCD
0004bf 940e 0f75 	CALL __CMPF12
0004c1 f009      	BREQ PC+2
0004c2 f410      	BRCC PC+3
0004c3 940c 04f6 	JMP  _0x5D
                 ; 0000 01E1             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 01E2             sprintf(BUFF, "%f, %f, %f, %f, %f\n", d_x, d_y, d_angular, d_velocity, v_buff);
0004c5 01fe      	MOVW R30,R28
0004c6 93fa      	ST   -Y,R31
0004c7 93ea      	ST   -Y,R30
                +
0004c8 e3e9     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0004c9 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0004ca 93fa      	ST   -Y,R31
0004cb 93ea      	ST   -Y,R30
0004cc 940e 0caf 	CALL SUBOPT_0x1D
0004ce 940e 0caf 	CALL SUBOPT_0x1D
0004d0 940e 0caf 	CALL SUBOPT_0x1D
                +
0004d2 01fe     +MOVW R30 , R28
0004d3 57e0     +SUBI R30 , LOW ( - 144 )
0004d4 4fff     +SBCI R31 , HIGH ( - 144 )
0004d5 9001     +LD R0 , Z +
0004d6 9011     +LD R1 , Z +
0004d7 9161     +LD R22 , Z +
0004d8 8170     +LD R23 , Z
0004d9 01f0     +MOVW R30 , R0
                 	__GETD1SX 144
0004da 940e 1036 	CALL __PUTPARD1
                +
0004dc 01fe     +MOVW R30 , R28
0004dd 55e4     +SUBI R30 , LOW ( - 172 )
0004de 4fff     +SBCI R31 , HIGH ( - 172 )
0004df 9001     +LD R0 , Z +
0004e0 9011     +LD R1 , Z +
0004e1 9161     +LD R22 , Z +
0004e2 8170     +LD R23 , Z
0004e3 01f0     +MOVW R30 , R0
                 	__GETD1SX 172
0004e4 940e 1036 	CALL __PUTPARD1
0004e6 e184      	LDI  R24,20
0004e7 940e 082c 	CALL _sprintf
0004e9 9668      	ADIW R28,24
                 ; 0000 01E3             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 01E4             // sprintf(BUFF, "%d, %d, %d, %d\n", current_R, current_L, goal_current_R, goal_current_L);
                 ; 0000 01E5             puts_USART1(BUFF);
0004ea 01fe      	MOVW R30,R28
0004eb 93fa      	ST   -Y,R31
0004ec 93ea      	ST   -Y,R30
0004ed dc4a      	RCALL _puts_USART1
                 ; 0000 01E6             TIMER0_TIME = 0;
0004ee e0e0      	LDI  R30,LOW(0)
                +
0004ef 01de     +MOVW R26 , R28
0004f0 59ac     +SUBI R26 , LOW ( - 100 )
0004f1 4fbf     +SBCI R27 , HIGH ( - 100 )
0004f2 93ed     +ST X + , R30
0004f3 93ed     +ST X + , R30
0004f4 93ed     +ST X + , R30
0004f5 93ec     +ST X , R30
                 	__CLRD1SX 100
                 ; 0000 01E7         }
                 ; 0000 01E8 
                 ; 0000 01E9         current_R = 0;
                 _0x5D:
0004f6 e0e0      	LDI  R30,LOW(0)
                +
0004f7 01de     +MOVW R26 , R28
0004f8 57a4     +SUBI R26 , LOW ( - 140 )
0004f9 4fbf     +SBCI R27 , HIGH ( - 140 )
0004fa 93ed     +ST X + , R30
0004fb 93ed     +ST X + , R30
0004fc 93ed     +ST X + , R30
0004fd 93ec     +ST X , R30
                 	__CLRD1SX 140
                 ; 0000 01EA         current_L = 0;
                +
0004fe 01de     +MOVW R26 , R28
0004ff 57a8     +SUBI R26 , LOW ( - 136 )
000500 4fbf     +SBCI R27 , HIGH ( - 136 )
000501 93ed     +ST X + , R30
000502 93ed     +ST X + , R30
000503 93ed     +ST X + , R30
000504 93ec     +ST X , R30
                 	__CLRD1SX 136
                 ; 0000 01EB     }
000505 cded      	RJMP _0x53
                 ; 0000 01EC }
                 _0x5E:
000506 cfff      	RJMP _0x5E
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000507 931a      	ST   -Y,R17
000508 930a      	ST   -Y,R16
000509 81aa      	LDD  R26,Y+2
00050a 81bb      	LDD  R27,Y+2+1
00050b 9612      	ADIW R26,2
00050c 940e 1016 	CALL __GETW1P
00050e 9730      	SBIW R30,0
00050f f129      	BREQ _0x2000010
000510 81aa      	LDD  R26,Y+2
000511 81bb      	LDD  R27,Y+2+1
000512 9614      	ADIW R26,4
000513 940e 1016 	CALL __GETW1P
000515 018f      	MOVW R16,R30
000516 9730      	SBIW R30,0
000517 f061      	BREQ _0x2000012
                +
000518 3002     +CPI R16 , LOW ( 2 )
000519 e0e0     +LDI R30 , HIGH ( 2 )
00051a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00051b f0c0      	BRLO _0x2000013
00051c 01f8      	MOVW R30,R16
00051d 9731      	SBIW R30,1
00051e 018f      	MOVW R16,R30
                +
00051f 81aa     +LDD R26 , Y + 2
000520 81bb     +LDD R27 , Y + 2 + 1
000521 9614     +ADIW R26 , 4
000522 93ed     +ST X + , R30
000523 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000524 81aa      	LDD  R26,Y+2
000525 81bb      	LDD  R27,Y+2+1
000526 9612      	ADIW R26,2
000527 940e 0cb3 	CALL SUBOPT_0x1E
000529 9731      	SBIW R30,1
00052a 81ac      	LDD  R26,Y+4
00052b 83a0      	STD  Z+0,R26
00052c 81aa      	LDD  R26,Y+2
00052d 81bb      	LDD  R27,Y+2+1
00052e 940e 1016 	CALL __GETW1P
000530 23ff      	TST  R31
000531 f012      	BRMI _0x2000014
000532 940e 0cb3 	CALL SUBOPT_0x1E
                 _0x2000014:
                 _0x2000013:
000534 c006      	RJMP _0x2000015
                 _0x2000010:
000535 81aa      	LDD  R26,Y+2
000536 81bb      	LDD  R27,Y+2+1
000537 efef      	LDI  R30,LOW(65535)
000538 efff      	LDI  R31,HIGH(65535)
000539 93ed      	ST   X+,R30
00053a 93fc      	ST   X,R31
                 _0x2000015:
00053b 8119      	LDD  R17,Y+1
00053c 8108      	LDD  R16,Y+0
00053d c348      	RJMP _0x20A0007
                 __ftoe_G100:
00053e 9724      	SBIW R28,4
00053f 940e 0bd9 	CALL SUBOPT_0x4
000541 e8e0      	LDI  R30,LOW(128)
000542 83ea      	STD  Y+2,R30
000543 e3ef      	LDI  R30,LOW(63)
000544 83eb      	STD  Y+3,R30
000545 940e 1059 	CALL __SAVELOCR4
000547 85ee      	LDD  R30,Y+14
000548 85ff      	LDD  R31,Y+14+1
000549 3fef      	CPI  R30,LOW(0xFFFF)
00054a efaf      	LDI  R26,HIGH(0xFFFF)
00054b 07fa      	CPC  R31,R26
00054c f449      	BRNE _0x2000019
00054d 85e8      	LDD  R30,Y+8
00054e 85f9      	LDD  R31,Y+8+1
00054f 93fa      	ST   -Y,R31
000550 93ea      	ST   -Y,R30
                +
000551 e4ee     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000552 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000553 940e 0cb9 	CALL SUBOPT_0x1F
000555 c0b6      	RJMP _0x20A0009
                 _0x2000019:
000556 3fef      	CPI  R30,LOW(0x7FFF)
000557 e7af      	LDI  R26,HIGH(0x7FFF)
000558 07fa      	CPC  R31,R26
000559 f449      	BRNE _0x2000018
00055a 85e8      	LDD  R30,Y+8
00055b 85f9      	LDD  R31,Y+8+1
00055c 93fa      	ST   -Y,R31
00055d 93ea      	ST   -Y,R30
                +
00055e e4ef     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00055f e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000560 940e 0cb9 	CALL SUBOPT_0x1F
000562 c0a9      	RJMP _0x20A0009
                 _0x2000018:
000563 85ab      	LDD  R26,Y+11
000564 30a7      	CPI  R26,LOW(0x7)
000565 f010      	BRLO _0x200001B
000566 e0e6      	LDI  R30,LOW(6)
000567 87eb      	STD  Y+11,R30
                 _0x200001B:
000568 851b      	LDD  R17,Y+11
                 _0x200001C:
000569 2fe1      	MOV  R30,R17
00056a 5011      	SUBI R17,1
00056b 30e0      	CPI  R30,0
00056c f019      	BREQ _0x200001E
00056d 940e 0cbd 	CALL SUBOPT_0x20
00056f cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000570 85ec     +LDD R30 , Y + 12
000571 85fd     +LDD R31 , Y + 12 + 1
000572 856e     +LDD R22 , Y + 12 + 2
000573 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000574 940e 104d 	CALL __CPD10
000576 f421      	BRNE _0x200001F
000577 e030      	LDI  R19,LOW(0)
000578 940e 0cbd 	CALL SUBOPT_0x20
00057a c02e      	RJMP _0x2000020
                 _0x200001F:
00057b 853b      	LDD  R19,Y+11
00057c 940e 0cc8 	CALL SUBOPT_0x21
00057e f009      	BREQ PC+2
00057f f410      	BRCC PC+3
000580 940c 058d 	JMP  _0x2000021
000582 940e 0cbd 	CALL SUBOPT_0x20
                 _0x2000022:
000584 940e 0cc8 	CALL SUBOPT_0x21
000586 f028      	BRLO _0x2000024
000587 940e 0cd0 	CALL SUBOPT_0x22
000589 940e 0cd5 	CALL SUBOPT_0x23
00058b cff8      	RJMP _0x2000022
                 _0x2000024:
00058c c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00058d 940e 0cc8 	CALL SUBOPT_0x21
00058f f440      	BRSH _0x2000028
000590 940e 0cd0 	CALL SUBOPT_0x22
000592 940e 0ce1 	CALL SUBOPT_0x24
000594 940e 0ce8 	CALL SUBOPT_0x25
000596 5031      	SUBI R19,LOW(1)
000597 cff5      	RJMP _0x2000026
                 _0x2000028:
000598 940e 0cbd 	CALL SUBOPT_0x20
                 _0x2000025:
                +
00059a 85ec     +LDD R30 , Y + 12
00059b 85fd     +LDD R31 , Y + 12 + 1
00059c 856e     +LDD R22 , Y + 12 + 2
00059d 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00059e 940e 0ced 	CALL SUBOPT_0x26
0005a0 940e 0ce8 	CALL SUBOPT_0x25
0005a2 940e 0cc8 	CALL SUBOPT_0x21
0005a4 f020      	BRLO _0x2000029
0005a5 940e 0cd0 	CALL SUBOPT_0x22
0005a7 940e 0cd5 	CALL SUBOPT_0x23
                 _0x2000029:
                 _0x2000020:
0005a9 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0005aa 85eb      	LDD  R30,Y+11
0005ab 17e1      	CP   R30,R17
0005ac f198      	BRLO _0x200002C
                +
0005ad 81ac     +LDD R26 , Y + 4
0005ae 81bd     +LDD R27 , Y + 4 + 1
0005af 818e     +LDD R24 , Y + 4 + 2
0005b0 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0005b1 940e 0cf4 	CALL SUBOPT_0x27
0005b3 940e 0ced 	CALL SUBOPT_0x26
0005b5 940e 0cfb 	CALL SUBOPT_0x28
0005b7 940e 0bf6 	CALL SUBOPT_0x8
0005b9 940e 0c00 	CALL SUBOPT_0xA
0005bb 940e 0cd0 	CALL SUBOPT_0x22
0005bd 940e 0f30 	CALL __DIVF21
0005bf 940e 0e1f 	CALL __CFD1U
0005c1 2f0e      	MOV  R16,R30
0005c2 940e 0cff 	CALL SUBOPT_0x29
0005c4 940e 0d06 	CALL SUBOPT_0x2A
0005c6 27ff      	CLR  R31
0005c7 2766      	CLR  R22
0005c8 2777      	CLR  R23
0005c9 940e 0e58 	CALL __CDF1
                +
0005cb 81ac     +LDD R26 , Y + 4
0005cc 81bd     +LDD R27 , Y + 4 + 1
0005cd 818e     +LDD R24 , Y + 4 + 2
0005ce 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0005cf 940e 0ee2 	CALL __MULF12
0005d1 940e 0cd0 	CALL SUBOPT_0x22
0005d3 940e 0bfb 	CALL SUBOPT_0x9
0005d5 940e 0ce8 	CALL SUBOPT_0x25
0005d7 2fe1      	MOV  R30,R17
0005d8 5f1f      	SUBI R17,-1
0005d9 30e0      	CPI  R30,0
0005da f679      	BRNE _0x200002A
0005db 940e 0cff 	CALL SUBOPT_0x29
0005dd e2ee      	LDI  R30,LOW(46)
0005de 93ec      	ST   X,R30
0005df cfca      	RJMP _0x200002A
                 _0x200002C:
0005e0 940e 0d0b 	CALL SUBOPT_0x2B
0005e2 9731      	SBIW R30,1
0005e3 85aa      	LDD  R26,Y+10
0005e4 83a0      	STD  Z+0,R26
0005e5 3030      	CPI  R19,0
0005e6 f42c      	BRGE _0x200002E
0005e7 9531      	NEG  R19
0005e8 85a8      	LDD  R26,Y+8
0005e9 85b9      	LDD  R27,Y+8+1
0005ea e2ed      	LDI  R30,LOW(45)
0005eb c003      	RJMP _0x200010E
                 _0x200002E:
0005ec 85a8      	LDD  R26,Y+8
0005ed 85b9      	LDD  R27,Y+8+1
0005ee e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
0005ef 93ec      	ST   X,R30
0005f0 940e 0d0b 	CALL SUBOPT_0x2B
0005f2 940e 0d0b 	CALL SUBOPT_0x2B
0005f4 9731      	SBIW R30,1
0005f5 01bf      	MOVW R22,R30
0005f6 2fa3      	MOV  R26,R19
0005f7 e0ea      	LDI  R30,LOW(10)
0005f8 940e 0fd0 	CALL __DIVB21
0005fa 5de0      	SUBI R30,-LOW(48)
0005fb 01db      	MOVW R26,R22
0005fc 93ec      	ST   X,R30
0005fd 940e 0d0b 	CALL SUBOPT_0x2B
0005ff 9731      	SBIW R30,1
000600 01bf      	MOVW R22,R30
000601 2fa3      	MOV  R26,R19
000602 e0ea      	LDI  R30,LOW(10)
000603 940e 0ffa 	CALL __MODB21
000605 5de0      	SUBI R30,-LOW(48)
000606 01db      	MOVW R26,R22
000607 93ec      	ST   X,R30
000608 85a8      	LDD  R26,Y+8
000609 85b9      	LDD  R27,Y+8+1
00060a e0e0      	LDI  R30,LOW(0)
00060b 93ec      	ST   X,R30
                 _0x20A0009:
00060c 940e 1060 	CALL __LOADLOCR4
                 _0x20A000A:
00060e 9660      	ADIW R28,16
00060f 9508      	RET
                 __print_G100:
000610 97ef      	SBIW R28,63
000611 9761      	SBIW R28,17
000612 940e 1057 	CALL __SAVELOCR6
000614 e010      	LDI  R17,0
                +
000615 01fe     +MOVW R30 , R28
000616 5ae8     +SUBI R30 , LOW ( - 88 )
000617 4fff     +SBCI R31 , HIGH ( - 88 )
000618 9001     +LD R0 , Z +
000619 81f0     +LD R31 , Z
00061a 2de0     +MOV R30 , R0
                 	__GETW1SX 88
00061b 87e8      	STD  Y+8,R30
00061c 87f9      	STD  Y+8+1,R31
                +
00061d 01fe     +MOVW R30 , R28
00061e 5aea     +SUBI R30 , LOW ( - 86 )
00061f 4fff     +SBCI R31 , HIGH ( - 86 )
000620 9001     +LD R0 , Z +
000621 81f0     +LD R31 , Z
000622 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000623 83ee      	STD  Y+6,R30
000624 83ff      	STD  Y+6+1,R31
000625 81ae      	LDD  R26,Y+6
000626 81bf      	LDD  R27,Y+6+1
000627 940e 0c17 	CALL SUBOPT_0xD
                 _0x2000030:
000629 01de      	MOVW R26,R28
00062a 5aa4      	SUBI R26,LOW(-(92))
00062b 4fbf      	SBCI R27,HIGH(-(92))
00062c 940e 0cb3 	CALL SUBOPT_0x1E
00062e 9731      	SBIW R30,1
00062f 91e4      	LPM  R30,Z
000630 2f2e      	MOV  R18,R30
000631 30e0      	CPI  R30,0
000632 f411      	BRNE PC+3
000633 940c 0823 	JMP _0x2000032
000635 2fe1      	MOV  R30,R17
000636 30e0      	CPI  R30,0
000637 f439      	BRNE _0x2000036
000638 3225      	CPI  R18,37
000639 f411      	BRNE _0x2000037
00063a e011      	LDI  R17,LOW(1)
00063b c002      	RJMP _0x2000038
                 _0x2000037:
00063c 940e 0d11 	CALL SUBOPT_0x2C
                 _0x2000038:
00063e c1e3      	RJMP _0x2000035
                 _0x2000036:
00063f 30e1      	CPI  R30,LOW(0x1)
000640 f4c1      	BRNE _0x2000039
000641 3225      	CPI  R18,37
000642 f419      	BRNE _0x200003A
000643 940e 0d11 	CALL SUBOPT_0x2C
000645 c1db      	RJMP _0x200010F
                 _0x200003A:
000646 e012      	LDI  R17,LOW(2)
000647 e0e0      	LDI  R30,LOW(0)
000648 8bed      	STD  Y+21,R30
000649 e000      	LDI  R16,LOW(0)
00064a 322d      	CPI  R18,45
00064b f411      	BRNE _0x200003B
00064c e001      	LDI  R16,LOW(1)
00064d c1d4      	RJMP _0x2000035
                 _0x200003B:
00064e 322b      	CPI  R18,43
00064f f419      	BRNE _0x200003C
000650 e2eb      	LDI  R30,LOW(43)
000651 8bed      	STD  Y+21,R30
000652 c1cf      	RJMP _0x2000035
                 _0x200003C:
000653 3220      	CPI  R18,32
000654 f419      	BRNE _0x200003D
000655 e2e0      	LDI  R30,LOW(32)
000656 8bed      	STD  Y+21,R30
000657 c1ca      	RJMP _0x2000035
                 _0x200003D:
000658 c002      	RJMP _0x200003E
                 _0x2000039:
000659 30e2      	CPI  R30,LOW(0x2)
00065a f439      	BRNE _0x200003F
                 _0x200003E:
00065b e050      	LDI  R21,LOW(0)
00065c e013      	LDI  R17,LOW(3)
00065d 3320      	CPI  R18,48
00065e f411      	BRNE _0x2000040
00065f 6800      	ORI  R16,LOW(128)
000660 c1c1      	RJMP _0x2000035
                 _0x2000040:
000661 c002      	RJMP _0x2000041
                 _0x200003F:
000662 30e3      	CPI  R30,LOW(0x3)
000663 f491      	BRNE _0x2000042
                 _0x2000041:
000664 3320      	CPI  R18,48
000665 f010      	BRLO _0x2000044
000666 332a      	CPI  R18,58
000667 f008      	BRLO _0x2000045
                 _0x2000044:
000668 c007      	RJMP _0x2000043
                 _0x2000045:
000669 e0aa      	LDI  R26,LOW(10)
00066a 9f5a      	MUL  R21,R26
00066b 2d50      	MOV  R21,R0
00066c 2fe2      	MOV  R30,R18
00066d 53e0      	SUBI R30,LOW(48)
00066e 0f5e      	ADD  R21,R30
00066f c1b2      	RJMP _0x2000035
                 _0x2000043:
000670 e040      	LDI  R20,LOW(0)
000671 322e      	CPI  R18,46
000672 f411      	BRNE _0x2000046
000673 e014      	LDI  R17,LOW(4)
000674 c1ad      	RJMP _0x2000035
                 _0x2000046:
000675 c00f      	RJMP _0x2000047
                 _0x2000042:
000676 30e4      	CPI  R30,LOW(0x4)
000677 f499      	BRNE _0x2000049
000678 3320      	CPI  R18,48
000679 f010      	BRLO _0x200004B
00067a 332a      	CPI  R18,58
00067b f008      	BRLO _0x200004C
                 _0x200004B:
00067c c008      	RJMP _0x200004A
                 _0x200004C:
00067d 6200      	ORI  R16,LOW(32)
00067e e0aa      	LDI  R26,LOW(10)
00067f 9f4a      	MUL  R20,R26
000680 2d40      	MOV  R20,R0
000681 2fe2      	MOV  R30,R18
000682 53e0      	SUBI R30,LOW(48)
000683 0f4e      	ADD  R20,R30
000684 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000685 362c      	CPI  R18,108
000686 f419      	BRNE _0x200004D
000687 6002      	ORI  R16,LOW(2)
000688 e015      	LDI  R17,LOW(5)
000689 c198      	RJMP _0x2000035
                 _0x200004D:
00068a c004      	RJMP _0x200004E
                 _0x2000049:
00068b 30e5      	CPI  R30,LOW(0x5)
00068c f011      	BREQ PC+3
00068d 940c 0822 	JMP _0x2000035
                 _0x200004E:
00068f 2fe2      	MOV  R30,R18
000690 36e3      	CPI  R30,LOW(0x63)
000691 f459      	BRNE _0x2000053
000692 940e 0d1a 	CALL SUBOPT_0x2D
000694 940e 0d21 	CALL SUBOPT_0x2E
000696 940e 0d1a 	CALL SUBOPT_0x2D
000698 81a4      	LDD  R26,Z+4
000699 93aa      	ST   -Y,R26
00069a 940e 0d28 	CALL SUBOPT_0x2F
00069c c184      	RJMP _0x2000054
                 _0x2000053:
00069d 34e5      	CPI  R30,LOW(0x45)
00069e f011      	BREQ _0x2000057
00069f 36e5      	CPI  R30,LOW(0x65)
0006a0 f409      	BRNE _0x2000058
                 _0x2000057:
0006a1 c004      	RJMP _0x2000059
                 _0x2000058:
0006a2 36e6      	CPI  R30,LOW(0x66)
0006a3 f011      	BREQ PC+3
0006a4 940c 06f0 	JMP _0x200005A
                 _0x2000059:
0006a6 01fe      	MOVW R30,R28
0006a7 9676      	ADIW R30,22
0006a8 87ee      	STD  Y+14,R30
0006a9 87ff      	STD  Y+14+1,R31
0006aa 940e 0d30 	CALL SUBOPT_0x30
0006ac 940e 101a 	CALL __GETD1P
0006ae 940e 0d37 	CALL SUBOPT_0x31
0006b0 940e 0d3c 	CALL SUBOPT_0x32
0006b2 85ad      	LDD  R26,Y+13
0006b3 23aa      	TST  R26
0006b4 f022      	BRMI _0x200005B
0006b5 89ad      	LDD  R26,Y+21
0006b6 32ab      	CPI  R26,LOW(0x2B)
0006b7 f049      	BREQ _0x200005D
0006b8 c017      	RJMP _0x200005E
                 _0x200005B:
0006b9 940e 0d3e 	CALL SUBOPT_0x33
0006bb 940e 0dec 	CALL __ANEGF1
0006bd 940e 0d37 	CALL SUBOPT_0x31
0006bf e2ed      	LDI  R30,LOW(45)
0006c0 8bed      	STD  Y+21,R30
                 _0x200005D:
0006c1 ff07      	SBRS R16,7
0006c2 c005      	RJMP _0x200005F
0006c3 89ed      	LDD  R30,Y+21
0006c4 93ea      	ST   -Y,R30
0006c5 940e 0d28 	CALL SUBOPT_0x2F
0006c7 c008      	RJMP _0x2000060
                 _0x200005F:
0006c8 85ee      	LDD  R30,Y+14
0006c9 85ff      	LDD  R31,Y+14+1
0006ca 9631      	ADIW R30,1
0006cb 87ee      	STD  Y+14,R30
0006cc 87ff      	STD  Y+14+1,R31
0006cd 9731      	SBIW R30,1
0006ce 89ad      	LDD  R26,Y+21
0006cf 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0006d0 ff05      	SBRS R16,5
0006d1 e046      	LDI  R20,LOW(6)
0006d2 3626      	CPI  R18,102
0006d3 f461      	BRNE _0x2000062
0006d4 940e 0d3e 	CALL SUBOPT_0x33
0006d6 940e 1036 	CALL __PUTPARD1
0006d8 934a      	ST   -Y,R20
0006d9 89eb      	LDD  R30,Y+19
0006da 89fc      	LDD  R31,Y+19+1
0006db 93fa      	ST   -Y,R31
0006dc 93ea      	ST   -Y,R30
0006dd 940e 0b03 	CALL _ftoa
0006df c00b      	RJMP _0x2000063
                 _0x2000062:
0006e0 940e 0d3e 	CALL SUBOPT_0x33
0006e2 940e 1036 	CALL __PUTPARD1
0006e4 934a      	ST   -Y,R20
0006e5 932a      	ST   -Y,R18
0006e6 89ec      	LDD  R30,Y+20
0006e7 89fd      	LDD  R31,Y+20+1
0006e8 93fa      	ST   -Y,R31
0006e9 93ea      	ST   -Y,R30
0006ea de53      	RCALL __ftoe_G100
                 _0x2000063:
0006eb 01fe      	MOVW R30,R28
0006ec 9676      	ADIW R30,22
0006ed 940e 0d43 	CALL SUBOPT_0x34
0006ef c01e      	RJMP _0x2000064
                 _0x200005A:
0006f0 37e3      	CPI  R30,LOW(0x73)
0006f1 f439      	BRNE _0x2000066
0006f2 940e 0d3c 	CALL SUBOPT_0x32
0006f4 940e 0d4b 	CALL SUBOPT_0x35
0006f6 940e 0d43 	CALL SUBOPT_0x34
0006f8 c00e      	RJMP _0x2000067
                 _0x2000066:
0006f9 37e0      	CPI  R30,LOW(0x70)
0006fa f4c1      	BRNE _0x2000069
0006fb 940e 0d3c 	CALL SUBOPT_0x32
0006fd 940e 0d4b 	CALL SUBOPT_0x35
0006ff 87ee      	STD  Y+14,R30
000700 87ff      	STD  Y+14+1,R31
000701 93fa      	ST   -Y,R31
000702 93ea      	ST   -Y,R30
000703 940e 0af8 	CALL _strlenf
000705 2f1e      	MOV  R17,R30
000706 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000707 770f      	ANDI R16,LOW(127)
000708 3040      	CPI  R20,0
000709 f011      	BREQ _0x200006B
00070a 1741      	CP   R20,R17
00070b f008      	BRLO _0x200006C
                 _0x200006B:
00070c c001      	RJMP _0x200006A
                 _0x200006C:
00070d 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
00070e e040      	LDI  R20,LOW(0)
00070f e0e0      	LDI  R30,LOW(0)
000710 8bec      	STD  Y+20,R30
000711 e030      	LDI  R19,LOW(0)
000712 c06e      	RJMP _0x200006D
                 _0x2000069:
000713 36e4      	CPI  R30,LOW(0x64)
000714 f011      	BREQ _0x2000070
000715 36e9      	CPI  R30,LOW(0x69)
000716 f411      	BRNE _0x2000071
                 _0x2000070:
000717 6004      	ORI  R16,LOW(4)
000718 c002      	RJMP _0x2000072
                 _0x2000071:
000719 37e5      	CPI  R30,LOW(0x75)
00071a f4a1      	BRNE _0x2000073
                 _0x2000072:
00071b e0ea      	LDI  R30,LOW(10)
00071c 8bec      	STD  Y+20,R30
00071d ff01      	SBRS R16,1
00071e c008      	RJMP _0x2000074
                +
00071f e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000720 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000721 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000722 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000723 940e 0d50 	CALL SUBOPT_0x36
000725 e01a      	LDI  R17,LOW(10)
000726 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000727 e1e0     +LDI R30 , LOW ( 0x2710 )
000728 e2f7     +LDI R31 , HIGH ( 0x2710 )
000729 e060     +LDI R22 , BYTE3 ( 0x2710 )
00072a e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00072b 940e 0d50 	CALL SUBOPT_0x36
00072d e015      	LDI  R17,LOW(5)
00072e c01b      	RJMP _0x2000075
                 _0x2000073:
00072f 35e8      	CPI  R30,LOW(0x58)
000730 f411      	BRNE _0x2000077
000731 6008      	ORI  R16,LOW(8)
000732 c004      	RJMP _0x2000078
                 _0x2000077:
000733 37e8      	CPI  R30,LOW(0x78)
000734 f011      	BREQ PC+3
000735 940c 0821 	JMP _0x20000B6
                 _0x2000078:
000737 e1e0      	LDI  R30,LOW(16)
000738 8bec      	STD  Y+20,R30
000739 ff01      	SBRS R16,1
00073a c008      	RJMP _0x200007A
                +
00073b e0e0     +LDI R30 , LOW ( 0x10000000 )
00073c e0f0     +LDI R31 , HIGH ( 0x10000000 )
00073d e060     +LDI R22 , BYTE3 ( 0x10000000 )
00073e e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00073f 940e 0d50 	CALL SUBOPT_0x36
000741 e018      	LDI  R17,LOW(8)
000742 c007      	RJMP _0x2000075
                 _0x200007A:
                +
000743 e0e0     +LDI R30 , LOW ( 0x1000 )
000744 e1f0     +LDI R31 , HIGH ( 0x1000 )
000745 e060     +LDI R22 , BYTE3 ( 0x1000 )
000746 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000747 940e 0d50 	CALL SUBOPT_0x36
000749 e014      	LDI  R17,LOW(4)
                 _0x2000075:
00074a 3040      	CPI  R20,0
00074b f011      	BREQ _0x200007B
00074c 770f      	ANDI R16,LOW(127)
00074d c001      	RJMP _0x200007C
                 _0x200007B:
00074e e041      	LDI  R20,LOW(1)
                 _0x200007C:
00074f ff01      	SBRS R16,1
000750 c008      	RJMP _0x200007D
000751 940e 0d3c 	CALL SUBOPT_0x32
000753 940e 0d30 	CALL SUBOPT_0x30
000755 9614      	ADIW R26,4
000756 940e 101a 	CALL __GETD1P
000758 c00f      	RJMP _0x2000110
                 _0x200007D:
000759 ff02      	SBRS R16,2
00075a c007      	RJMP _0x200007F
00075b 940e 0d3c 	CALL SUBOPT_0x32
00075d 940e 0d4b 	CALL SUBOPT_0x35
00075f 940e 0fb0 	CALL __CWD1
000761 c006      	RJMP _0x2000110
                 _0x200007F:
000762 940e 0d3c 	CALL SUBOPT_0x32
000764 940e 0d4b 	CALL SUBOPT_0x35
000766 2766      	CLR  R22
000767 2777      	CLR  R23
                 _0x2000110:
                +
000768 87ea     +STD Y + 10 , R30
000769 87fb     +STD Y + 10 + 1 , R31
00076a 876c     +STD Y + 10 + 2 , R22
00076b 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00076c ff02      	SBRS R16,2
00076d c012      	RJMP _0x2000081
00076e 85ad      	LDD  R26,Y+13
00076f 23aa      	TST  R26
000770 f442      	BRPL _0x2000082
000771 940e 0d3e 	CALL SUBOPT_0x33
000773 940e 0f9d 	CALL __ANEGD1
000775 940e 0d37 	CALL SUBOPT_0x31
000777 e2ed      	LDI  R30,LOW(45)
000778 8bed      	STD  Y+21,R30
                 _0x2000082:
000779 89ed      	LDD  R30,Y+21
00077a 30e0      	CPI  R30,0
00077b f019      	BREQ _0x2000083
00077c 5f1f      	SUBI R17,-LOW(1)
00077d 5f4f      	SUBI R20,-LOW(1)
00077e c001      	RJMP _0x2000084
                 _0x2000083:
00077f 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000780 2f34      	MOV  R19,R20
                 _0x200006D:
000781 fd00      	SBRC R16,0
000782 c014      	RJMP _0x2000085
                 _0x2000086:
000783 1715      	CP   R17,R21
000784 f410      	BRSH _0x2000089
000785 1735      	CP   R19,R21
000786 f008      	BRLO _0x200008A
                 _0x2000089:
000787 c00f      	RJMP _0x2000088
                 _0x200008A:
000788 ff07      	SBRS R16,7
000789 c008      	RJMP _0x200008B
00078a ff02      	SBRS R16,2
00078b c004      	RJMP _0x200008C
00078c 7f0b      	ANDI R16,LOW(251)
00078d 892d      	LDD  R18,Y+21
00078e 5011      	SUBI R17,LOW(1)
00078f c001      	RJMP _0x200008D
                 _0x200008C:
000790 e320      	LDI  R18,LOW(48)
                 _0x200008D:
000791 c001      	RJMP _0x200008E
                 _0x200008B:
000792 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000793 940e 0d11 	CALL SUBOPT_0x2C
000795 5051      	SUBI R21,LOW(1)
000796 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000797 1714      	CP   R17,R20
000798 f490      	BRSH _0x2000091
000799 6100      	ORI  R16,LOW(16)
00079a ff02      	SBRS R16,2
00079b c006      	RJMP _0x2000092
00079c 940e 0d55 	CALL SUBOPT_0x37
00079e f009      	BREQ _0x2000093
00079f 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0007a0 5011      	SUBI R17,LOW(1)
0007a1 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0007a2 e3e0      	LDI  R30,LOW(48)
0007a3 93ea      	ST   -Y,R30
0007a4 940e 0d28 	CALL SUBOPT_0x2F
0007a6 3050      	CPI  R21,0
0007a7 f009      	BREQ _0x2000094
0007a8 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0007a9 5041      	SUBI R20,LOW(1)
0007aa cfec      	RJMP _0x200008F
                 _0x2000091:
0007ab 2f31      	MOV  R19,R17
0007ac 89ec      	LDD  R30,Y+20
0007ad 30e0      	CPI  R30,0
0007ae f4b9      	BRNE _0x2000095
                 _0x2000096:
0007af 3030      	CPI  R19,0
0007b0 f0a1      	BREQ _0x2000098
0007b1 ff03      	SBRS R16,3
0007b2 c006      	RJMP _0x2000099
0007b3 85ee      	LDD  R30,Y+14
0007b4 85ff      	LDD  R31,Y+14+1
0007b5 9125      	LPM  R18,Z+
0007b6 87ee      	STD  Y+14,R30
0007b7 87ff      	STD  Y+14+1,R31
0007b8 c005      	RJMP _0x200009A
                 _0x2000099:
0007b9 85ae      	LDD  R26,Y+14
0007ba 85bf      	LDD  R27,Y+14+1
0007bb 912d      	LD   R18,X+
0007bc 87ae      	STD  Y+14,R26
0007bd 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0007be 940e 0d11 	CALL SUBOPT_0x2C
0007c0 3050      	CPI  R21,0
0007c1 f009      	BREQ _0x200009B
0007c2 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0007c3 5031      	SUBI R19,LOW(1)
0007c4 cfea      	RJMP _0x2000096
                 _0x2000098:
0007c5 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0007c6 940e 0d69 	CALL SUBOPT_0x38
0007c8 940e 0fd5 	CALL __DIVD21U
0007ca 2f2e      	MOV  R18,R30
0007cb 302a      	CPI  R18,10
0007cc f030      	BRLO _0x20000A0
0007cd ff03      	SBRS R16,3
0007ce c002      	RJMP _0x20000A1
0007cf 5c29      	SUBI R18,-LOW(55)
0007d0 c001      	RJMP _0x20000A2
                 _0x20000A1:
0007d1 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0007d2 c001      	RJMP _0x20000A3
                 _0x20000A0:
0007d3 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0007d4 fd04      	SBRC R16,4
0007d5 c021      	RJMP _0x20000A5
0007d6 3321      	CPI  R18,49
0007d7 f460      	BRSH _0x20000A7
                +
0007d8 89a8     +LDD R26 , Y + 16
0007d9 89b9     +LDD R27 , Y + 16 + 1
0007da 898a     +LDD R24 , Y + 16 + 2
0007db 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0007dc 30a1     +CPI R26 , LOW ( 0x1 )
0007dd e0e0     +LDI R30 , HIGH ( 0x1 )
0007de 07be     +CPC R27 , R30
0007df e0e0     +LDI R30 , BYTE3 ( 0x1 )
0007e0 078e     +CPC R24 , R30
0007e1 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0007e2 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0007e3 f409      	BRNE _0x20000A6
                 _0x20000A7:
0007e4 c00b      	RJMP _0x20000A9
                 _0x20000A6:
0007e5 1743      	CP   R20,R19
0007e6 f440      	BRSH _0x2000111
0007e7 1753      	CP   R21,R19
0007e8 f010      	BRLO _0x20000AC
0007e9 ff00      	SBRS R16,0
0007ea c001      	RJMP _0x20000AD
                 _0x20000AC:
0007eb c010      	RJMP _0x20000AB
                 _0x20000AD:
0007ec e220      	LDI  R18,LOW(32)
0007ed ff07      	SBRS R16,7
0007ee c008      	RJMP _0x20000AE
                 _0x2000111:
0007ef e320      	LDI  R18,LOW(48)
                 _0x20000A9:
0007f0 6100      	ORI  R16,LOW(16)
0007f1 ff02      	SBRS R16,2
0007f2 c004      	RJMP _0x20000AF
0007f3 940e 0d55 	CALL SUBOPT_0x37
0007f5 f009      	BREQ _0x20000B0
0007f6 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
0007f7 940e 0d11 	CALL SUBOPT_0x2C
0007f9 3050      	CPI  R21,0
0007fa f009      	BREQ _0x20000B1
0007fb 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
0007fc 5031      	SUBI R19,LOW(1)
0007fd 940e 0d69 	CALL SUBOPT_0x38
0007ff 940e 1006 	CALL __MODD21U
000801 940e 0d37 	CALL SUBOPT_0x31
000803 89ec      	LDD  R30,Y+20
                +
000804 89a8     +LDD R26 , Y + 16
000805 89b9     +LDD R27 , Y + 16 + 1
000806 898a     +LDD R24 , Y + 16 + 2
000807 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000808 27ff      	CLR  R31
000809 2766      	CLR  R22
00080a 2777      	CLR  R23
00080b 940e 0fd5 	CALL __DIVD21U
00080d 940e 0d50 	CALL SUBOPT_0x36
                +
00080f 89e8     +LDD R30 , Y + 16
000810 89f9     +LDD R31 , Y + 16 + 1
000811 896a     +LDD R22 , Y + 16 + 2
000812 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000813 940e 104d 	CALL __CPD10
000815 f009      	BREQ _0x200009F
000816 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000817 ff00      	SBRS R16,0
000818 c008      	RJMP _0x20000B2
                 _0x20000B3:
000819 3050      	CPI  R21,0
00081a f031      	BREQ _0x20000B5
00081b 5051      	SUBI R21,LOW(1)
00081c e2e0      	LDI  R30,LOW(32)
00081d 93ea      	ST   -Y,R30
00081e 940e 0d28 	CALL SUBOPT_0x2F
000820 cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000821 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000822 ce06      	RJMP _0x2000030
                 _0x2000032:
000823 81ae      	LDD  R26,Y+6
000824 81bf      	LDD  R27,Y+6+1
000825 940e 1016 	CALL __GETW1P
000827 940e 105e 	CALL __LOADLOCR6
000829 96ef      	ADIW R28,63
00082a 966f      	ADIW R28,31
00082b 9508      	RET
                 _sprintf:
00082c 92ff      	PUSH R15
00082d 2ef8      	MOV  R15,R24
00082e 9726      	SBIW R28,6
00082f 940e 1059 	CALL __SAVELOCR4
000831 940e 0d72 	CALL SUBOPT_0x39
000833 9730      	SBIW R30,0
000834 f419      	BRNE _0x20000B7
000835 efef      	LDI  R30,LOW(65535)
000836 efff      	LDI  R31,HIGH(65535)
000837 c023      	RJMP _0x20A0008
                 _0x20000B7:
000838 01de      	MOVW R26,R28
000839 9616      	ADIW R26,6
00083a 940e 0f95 	CALL __ADDW2R15
00083c 018d      	MOVW R16,R26
00083d 940e 0d72 	CALL SUBOPT_0x39
00083f 83ee      	STD  Y+6,R30
000840 83ff      	STD  Y+6+1,R31
000841 e0e0      	LDI  R30,LOW(0)
000842 87e8      	STD  Y+8,R30
000843 87e9      	STD  Y+8+1,R30
000844 01de      	MOVW R26,R28
000845 961a      	ADIW R26,10
000846 940e 0d79 	CALL SUBOPT_0x3A
000848 93fa      	ST   -Y,R31
000849 93ea      	ST   -Y,R30
00084a 931a      	ST   -Y,R17
00084b 930a      	ST   -Y,R16
00084c e0e7      	LDI  R30,LOW(_put_buff_G100)
00084d e0f5      	LDI  R31,HIGH(_put_buff_G100)
00084e 93fa      	ST   -Y,R31
00084f 93ea      	ST   -Y,R30
000850 01fe      	MOVW R30,R28
000851 963a      	ADIW R30,10
000852 93fa      	ST   -Y,R31
000853 93ea      	ST   -Y,R30
000854 ddbb      	RCALL __print_G100
000855 019f      	MOVW R18,R30
000856 81ae      	LDD  R26,Y+6
000857 81bf      	LDD  R27,Y+6+1
000858 e0e0      	LDI  R30,LOW(0)
000859 93ec      	ST   X,R30
00085a 01f9      	MOVW R30,R18
                 _0x20A0008:
00085b 940e 1060 	CALL __LOADLOCR4
00085d 962a      	ADIW R28,10
00085e 90ff      	POP  R15
00085f 9508      	RET
                 _get_buff_G100:
000860 931a      	ST   -Y,R17
000861 81a9      	LDD  R26,Y+1
000862 81ba      	LDD  R27,Y+1+1
000863 e0e0      	LDI  R30,LOW(0)
000864 93ec      	ST   X,R30
000865 81ab      	LDD  R26,Y+3
000866 81bc      	LDD  R27,Y+3+1
000867 91ec      	LD   R30,X
000868 2f1e      	MOV  R17,R30
000869 30e0      	CPI  R30,0
00086a f019      	BREQ _0x20000BF
00086b e0e0      	LDI  R30,LOW(0)
00086c 93ec      	ST   X,R30
00086d c016      	RJMP _0x20000C0
                 _0x20000BF:
00086e 81a9      	LDD  R26,Y+1
00086f 81ba      	LDD  R27,Y+1+1
000870 9611      	ADIW R26,1
000871 940e 1016 	CALL __GETW1P
000873 9730      	SBIW R30,0
000874 f071      	BREQ _0x20000C1
000875 81e9      	LDD  R30,Y+1
000876 81fa      	LDD  R31,Y+1+1
000877 81a1      	LDD  R26,Z+1
000878 81b2      	LDD  R27,Z+2
000879 91ec      	LD   R30,X
00087a 2f1e      	MOV  R17,R30
00087b 30e0      	CPI  R30,0
00087c f029      	BREQ _0x20000C2
00087d 81a9      	LDD  R26,Y+1
00087e 81ba      	LDD  R27,Y+1+1
00087f 9611      	ADIW R26,1
000880 940e 0cb3 	CALL SUBOPT_0x1E
                 _0x20000C2:
000882 c001      	RJMP _0x20000C3
                 _0x20000C1:
000883 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000884 2fe1      	MOV  R30,R17
000885 8118      	LDD  R17,Y+0
                 _0x20A0007:
000886 9625      	ADIW R28,5
000887 9508      	RET
                 __scanf_G100:
000888 9725      	SBIW R28,5
000889 940e 1057 	CALL __SAVELOCR6
00088b e0e0      	LDI  R30,LOW(0)
00088c e0f0      	LDI  R31,HIGH(0)
00088d 87e8      	STD  Y+8,R30
00088e 87f9      	STD  Y+8+1,R31
00088f 2f4e      	MOV  R20,R30
                 _0x20000C4:
000890 89e9      	LDD  R30,Y+17
000891 89fa      	LDD  R31,Y+17+1
000892 9631      	ADIW R30,1
000893 8be9      	STD  Y+17,R30
000894 8bfa      	STD  Y+17+1,R31
000895 9731      	SBIW R30,1
000896 91e4      	LPM  R30,Z
000897 2f3e      	MOV  R19,R30
000898 30e0      	CPI  R30,0
000899 f411      	BRNE PC+3
00089a 940c 09b5 	JMP _0x20000C6
00089c 940e 0d7e 	CALL SUBOPT_0x3B
00089e f0c1      	BREQ _0x20000C7
                 _0x20000C8:
00089f b7ed      	IN   R30,SPL
0008a0 b7fe      	IN   R31,SPH
0008a1 93fa      	ST   -Y,R31
0008a2 93ea      	ST   -Y,R30
0008a3 934f      	PUSH R20
0008a4 940e 0d83 	CALL SUBOPT_0x3C
0008a6 914f      	POP  R20
0008a7 2f3e      	MOV  R19,R30
0008a8 30e0      	CPI  R30,0
0008a9 f019      	BREQ _0x20000CB
0008aa 940e 0d7e 	CALL SUBOPT_0x3B
0008ac f409      	BRNE _0x20000CC
                 _0x20000CB:
0008ad c007      	RJMP _0x20000CA
                 _0x20000CC:
0008ae 940e 0d8b 	CALL SUBOPT_0x3D
0008b0 f41c      	BRGE _0x20000CD
0008b1 efef      	LDI  R30,LOW(65535)
0008b2 efff      	LDI  R31,HIGH(65535)
0008b3 c103      	RJMP _0x20A0005
                 _0x20000CD:
0008b4 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0008b5 2f43      	MOV  R20,R19
0008b6 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0008b7 3235      	CPI  R19,37
0008b8 f011      	BREQ PC+3
0008b9 940c 099c 	JMP _0x20000CF
0008bb e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0008bc 89e9      	LDD  R30,Y+17
0008bd 89fa      	LDD  R31,Y+17+1
0008be 9135      	LPM  R19,Z+
0008bf 8be9      	STD  Y+17,R30
0008c0 8bfa      	STD  Y+17+1,R31
0008c1 3330      	CPI  R19,48
0008c2 f010      	BRLO _0x20000D4
0008c3 333a      	CPI  R19,58
0008c4 f008      	BRLO _0x20000D3
                 _0x20000D4:
0008c5 c007      	RJMP _0x20000D2
                 _0x20000D3:
0008c6 e0aa      	LDI  R26,LOW(10)
0008c7 9f5a      	MUL  R21,R26
0008c8 2d50      	MOV  R21,R0
0008c9 2fe3      	MOV  R30,R19
0008ca 53e0      	SUBI R30,LOW(48)
0008cb 0f5e      	ADD  R21,R30
0008cc cfef      	RJMP _0x20000D0
                 _0x20000D2:
0008cd 3030      	CPI  R19,0
0008ce f409      	BRNE _0x20000D6
0008cf c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0008d0 b7ed      	IN   R30,SPL
0008d1 b7fe      	IN   R31,SPH
0008d2 93fa      	ST   -Y,R31
0008d3 93ea      	ST   -Y,R30
0008d4 934f      	PUSH R20
0008d5 940e 0d83 	CALL SUBOPT_0x3C
0008d7 914f      	POP  R20
0008d8 2f2e      	MOV  R18,R30
0008d9 93ea      	ST   -Y,R30
0008da 940e 0acb 	CALL _isspace
0008dc 30e0      	CPI  R30,0
0008dd f039      	BREQ _0x20000D9
0008de 940e 0d8b 	CALL SUBOPT_0x3D
0008e0 f41c      	BRGE _0x20000DA
0008e1 efef      	LDI  R30,LOW(65535)
0008e2 efff      	LDI  R31,HIGH(65535)
0008e3 c0d3      	RJMP _0x20A0005
                 _0x20000DA:
0008e4 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
0008e5 3020      	CPI  R18,0
0008e6 f409      	BRNE _0x20000DB
0008e7 c0c4      	RJMP _0x20000DC
                 _0x20000DB:
0008e8 2f42      	MOV  R20,R18
0008e9 3050      	CPI  R21,0
0008ea f409      	BRNE _0x20000DD
0008eb ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
0008ec 2fe3      	MOV  R30,R19
0008ed 36e3      	CPI  R30,LOW(0x63)
0008ee f499      	BRNE _0x20000E1
0008ef 940e 0d90 	CALL SUBOPT_0x3E
0008f1 b7ed      	IN   R30,SPL
0008f2 b7fe      	IN   R31,SPH
0008f3 93fa      	ST   -Y,R31
0008f4 93ea      	ST   -Y,R30
0008f5 934f      	PUSH R20
0008f6 940e 0d83 	CALL SUBOPT_0x3C
0008f8 914f      	POP  R20
0008f9 01d8      	MOVW R26,R16
0008fa 93ec      	ST   X,R30
0008fb 940e 0d8b 	CALL SUBOPT_0x3D
0008fd f41c      	BRGE _0x20000E2
0008fe efef      	LDI  R30,LOW(65535)
0008ff efff      	LDI  R31,HIGH(65535)
000900 c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000901 c097      	RJMP _0x20000E0
                 _0x20000E1:
000902 37e3      	CPI  R30,LOW(0x73)
000903 f541      	BRNE _0x20000EB
000904 940e 0d90 	CALL SUBOPT_0x3E
                 _0x20000E4:
000906 2fe5      	MOV  R30,R21
000907 5051      	SUBI R21,1
000908 30e0      	CPI  R30,0
000909 f0f1      	BREQ _0x20000E6
00090a b7ed      	IN   R30,SPL
00090b b7fe      	IN   R31,SPH
00090c 93fa      	ST   -Y,R31
00090d 93ea      	ST   -Y,R30
00090e 934f      	PUSH R20
00090f 940e 0d83 	CALL SUBOPT_0x3C
000911 914f      	POP  R20
000912 2f3e      	MOV  R19,R30
000913 30e0      	CPI  R30,0
000914 f019      	BREQ _0x20000E8
000915 940e 0d7e 	CALL SUBOPT_0x3B
000917 f039      	BREQ _0x20000E7
                 _0x20000E8:
000918 940e 0d8b 	CALL SUBOPT_0x3D
00091a f41c      	BRGE _0x20000EA
00091b efef      	LDI  R30,LOW(65535)
00091c efff      	LDI  R31,HIGH(65535)
00091d c099      	RJMP _0x20A0005
                 _0x20000EA:
00091e c009      	RJMP _0x20000E6
                 _0x20000E7:
00091f 931f      	PUSH R17
000920 930f      	PUSH R16
                +
000921 5f0f     +SUBI R16 , LOW ( - 1 )
000922 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000923 2fe3      	MOV  R30,R19
000924 91af      	POP  R26
000925 91bf      	POP  R27
000926 93ec      	ST   X,R30
000927 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000928 01d8      	MOVW R26,R16
000929 e0e0      	LDI  R30,LOW(0)
00092a 93ec      	ST   X,R30
00092b c06d      	RJMP _0x20000E0
                 _0x20000EB:
00092c e0e1      	LDI  R30,LOW(1)
00092d 87ea      	STD  Y+10,R30
00092e 2fe3      	MOV  R30,R19
00092f 36e4      	CPI  R30,LOW(0x64)
000930 f011      	BREQ _0x20000F0
000931 36e9      	CPI  R30,LOW(0x69)
000932 f419      	BRNE _0x20000F1
                 _0x20000F0:
000933 e0e0      	LDI  R30,LOW(0)
000934 87ea      	STD  Y+10,R30
000935 c002      	RJMP _0x20000F2
                 _0x20000F1:
000936 37e5      	CPI  R30,LOW(0x75)
000937 f411      	BRNE _0x20000F3
                 _0x20000F2:
000938 e02a      	LDI  R18,LOW(10)
000939 c008      	RJMP _0x20000EE
                 _0x20000F3:
00093a 37e8      	CPI  R30,LOW(0x78)
00093b f411      	BRNE _0x20000F4
00093c e120      	LDI  R18,LOW(16)
00093d c004      	RJMP _0x20000EE
                 _0x20000F4:
00093e 32e5      	CPI  R30,LOW(0x25)
00093f f409      	BRNE _0x20000F7
000940 c05b      	RJMP _0x20000F6
                 _0x20000F7:
000941 c073      	RJMP _0x20A0006
                 _0x20000EE:
000942 e0e0      	LDI  R30,LOW(0)
000943 83ee      	STD  Y+6,R30
000944 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000945 2fe5      	MOV  R30,R21
000946 5051      	SUBI R21,1
000947 30e0      	CPI  R30,0
000948 f411      	BRNE PC+3
000949 940c 098c 	JMP _0x20000FA
00094b b7ed      	IN   R30,SPL
00094c b7fe      	IN   R31,SPH
00094d 93fa      	ST   -Y,R31
00094e 93ea      	ST   -Y,R30
00094f 934f      	PUSH R20
000950 940e 0d83 	CALL SUBOPT_0x3C
000952 914f      	POP  R20
000953 2f3e      	MOV  R19,R30
000954 32e1      	CPI  R30,LOW(0x21)
000955 f438      	BRSH _0x20000FB
000956 940e 0d8b 	CALL SUBOPT_0x3D
000958 f41c      	BRGE _0x20000FC
000959 efef      	LDI  R30,LOW(65535)
00095a efff      	LDI  R31,HIGH(65535)
00095b c05b      	RJMP _0x20A0005
                 _0x20000FC:
00095c c017      	RJMP _0x20000FD
                 _0x20000FB:
00095d 85ea      	LDD  R30,Y+10
00095e 30e0      	CPI  R30,0
00095f f439      	BRNE _0x20000FE
000960 323d      	CPI  R19,45
000961 f419      	BRNE _0x20000FF
000962 efef      	LDI  R30,LOW(255)
000963 87ea      	STD  Y+10,R30
000964 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000965 e0e1      	LDI  R30,LOW(1)
000966 87ea      	STD  Y+10,R30
                 _0x20000FE:
000967 3120      	CPI  R18,16
000968 f431      	BRNE _0x2000101
000969 933a      	ST   -Y,R19
00096a 940e 0ad5 	CALL _isxdigit
00096c 30e0      	CPI  R30,0
00096d f031      	BREQ _0x20000FD
00096e c007      	RJMP _0x2000103
                 _0x2000101:
00096f 933a      	ST   -Y,R19
000970 940e 0ac3 	CALL _isdigit
000972 30e0      	CPI  R30,0
000973 f411      	BRNE _0x2000104
                 _0x20000FD:
000974 2f43      	MOV  R20,R19
000975 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000976 3631      	CPI  R19,97
000977 f010      	BRLO _0x2000105
000978 5537      	SUBI R19,LOW(87)
000979 c005      	RJMP _0x2000106
                 _0x2000105:
00097a 3431      	CPI  R19,65
00097b f010      	BRLO _0x2000107
00097c 5337      	SUBI R19,LOW(55)
00097d c001      	RJMP _0x2000108
                 _0x2000107:
00097e 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
00097f 2fe2      	MOV  R30,R18
000980 81ae      	LDD  R26,Y+6
000981 81bf      	LDD  R27,Y+6+1
000982 e0f0      	LDI  R31,0
000983 940e 0fba 	CALL __MULW12U
000985 01df      	MOVW R26,R30
000986 2fe3      	MOV  R30,R19
000987 940e 0c2e 	CALL SUBOPT_0x10
000989 83ee      	STD  Y+6,R30
00098a 83ff      	STD  Y+6+1,R31
00098b cfb9      	RJMP _0x20000F8
                 _0x20000FA:
00098c 940e 0d90 	CALL SUBOPT_0x3E
00098e 85ea      	LDD  R30,Y+10
00098f 81ae      	LDD  R26,Y+6
000990 81bf      	LDD  R27,Y+6+1
000991 e0f0      	LDI  R31,0
000992 fde7      	SBRC R30,7
000993 efff      	SER  R31
000994 940e 0fba 	CALL __MULW12U
000996 01d8      	MOVW R26,R16
000997 93ed      	ST   X+,R30
000998 93fc      	ST   X,R31
                 _0x20000E0:
000999 940e 0d0b 	CALL SUBOPT_0x2B
00099b c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
00099c b7ed      	IN   R30,SPL
00099d b7fe      	IN   R31,SPH
00099e 93fa      	ST   -Y,R31
00099f 93ea      	ST   -Y,R30
0009a0 934f      	PUSH R20
0009a1 940e 0d83 	CALL SUBOPT_0x3C
0009a3 914f      	POP  R20
0009a4 17e3      	CP   R30,R19
0009a5 f071      	BREQ _0x200010A
0009a6 940e 0d8b 	CALL SUBOPT_0x3D
0009a8 f41c      	BRGE _0x200010B
0009a9 efef      	LDI  R30,LOW(65535)
0009aa efff      	LDI  R31,HIGH(65535)
0009ab c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
0009ac 85e8      	LDD  R30,Y+8
0009ad 85f9      	LDD  R31,Y+8+1
0009ae 9730      	SBIW R30,0
0009af f419      	BRNE _0x200010C
0009b0 efef      	LDI  R30,LOW(65535)
0009b1 efff      	LDI  R31,HIGH(65535)
0009b2 c004      	RJMP _0x20A0005
                 _0x200010C:
0009b3 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
0009b4 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
0009b5 85e8      	LDD  R30,Y+8
0009b6 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
0009b7 940e 105e 	CALL __LOADLOCR6
0009b9 9663      	ADIW R28,19
0009ba 9508      	RET
                 _sscanf:
0009bb 92ff      	PUSH R15
0009bc 2ef8      	MOV  R15,R24
0009bd 9723      	SBIW R28,3
0009be 931a      	ST   -Y,R17
0009bf 930a      	ST   -Y,R16
0009c0 01de      	MOVW R26,R28
0009c1 9617      	ADIW R26,7
0009c2 940e 0d79 	CALL SUBOPT_0x3A
0009c4 9730      	SBIW R30,0
0009c5 f419      	BRNE _0x200010D
0009c6 efef      	LDI  R30,LOW(65535)
0009c7 efff      	LDI  R31,HIGH(65535)
0009c8 c01c      	RJMP _0x20A0004
                 _0x200010D:
0009c9 01de      	MOVW R26,R28
0009ca 9611      	ADIW R26,1
0009cb 940e 0f95 	CALL __ADDW2R15
0009cd 018d      	MOVW R16,R26
0009ce 01de      	MOVW R26,R28
0009cf 9617      	ADIW R26,7
0009d0 940e 0d79 	CALL SUBOPT_0x3A
0009d2 83eb      	STD  Y+3,R30
0009d3 83fc      	STD  Y+3+1,R31
0009d4 01de      	MOVW R26,R28
0009d5 9615      	ADIW R26,5
0009d6 940e 0d79 	CALL SUBOPT_0x3A
0009d8 93fa      	ST   -Y,R31
0009d9 93ea      	ST   -Y,R30
0009da 931a      	ST   -Y,R17
0009db 930a      	ST   -Y,R16
0009dc e6e0      	LDI  R30,LOW(_get_buff_G100)
0009dd e0f8      	LDI  R31,HIGH(_get_buff_G100)
0009de 93fa      	ST   -Y,R31
0009df 93ea      	ST   -Y,R30
0009e0 01fe      	MOVW R30,R28
0009e1 9638      	ADIW R30,8
0009e2 93fa      	ST   -Y,R31
0009e3 93ea      	ST   -Y,R30
0009e4 dea3      	RCALL __scanf_G100
                 _0x20A0004:
0009e5 8119      	LDD  R17,Y+1
0009e6 8108      	LDD  R16,Y+0
0009e7 9625      	ADIW R28,5
0009e8 90ff      	POP  R15
0009e9 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
0009ea 817b         ldd  r23,y+3
0009eb 816a         ldd  r22,y+2
0009ec 81f9         ldd  r31,y+1
0009ed 81e8         ld   r30,y
0009ee fb77         bst  r23,7
0009ef 0f77         lsl  r23
0009f0 fd67         sbrc r22,7
0009f1 6071         sbr  r23,1
0009f2 2f97         mov  r25,r23
0009f3 579e         subi r25,0x7e
0009f4 f081         breq __ftrunc0
0009f5 f078         brcs __ftrunc0
0009f6 3198         cpi  r25,24
0009f7 f490         brsh __ftrunc1
0009f8 27aa         clr  r26
0009f9 27bb         clr  r27
0009fa 2788         clr  r24
                 __ftrunc2:
0009fb 9408         sec
0009fc 9587         ror  r24
0009fd 95b7         ror  r27
0009fe 95a7         ror  r26
0009ff 959a         dec  r25
000a00 f7d1         brne __ftrunc2
000a01 23ea         and  r30,r26
000a02 23fb         and  r31,r27
000a03 2368         and  r22,r24
000a04 c005         rjmp __ftrunc1
                 __ftrunc0:
000a05 94e8         clt
000a06 2777         clr  r23
000a07 27ee         clr  r30
000a08 27ff         clr  r31
000a09 2766         clr  r22
                 __ftrunc1:
000a0a 776f         cbr  r22,0x80
000a0b 9576         lsr  r23
000a0c f408         brcc __ftrunc3
000a0d 6860         sbr  r22,0x80
                 __ftrunc3:
000a0e f977         bld  r23,7
000a0f 91a9         ld   r26,y+
000a10 91b9         ld   r27,y+
000a11 9189         ld   r24,y+
000a12 9199         ld   r25,y+
000a13 17ea         cp   r30,r26
000a14 07fb         cpc  r31,r27
000a15 0768         cpc  r22,r24
000a16 0779         cpc  r23,r25
000a17 fb97         bst  r25,7
000a18 9508         ret
                 _floor:
000a19 940e 0c14 	CALL SUBOPT_0xC
000a1b 940e 1036 	CALL __PUTPARD1
000a1d 940e 09ea 	CALL _ftrunc
000a1f 940e 102f 	CALL __PUTD1S0
000a21 f419          brne __floor1
                 __floor0:
000a22 940e 0c14 	CALL SUBOPT_0xC
000a24 c09c      	RJMP _0x20A0003
                 __floor1:
000a25 f7e6          brtc __floor0
000a26 940e 0c14 	CALL SUBOPT_0xC
                +
000a28 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000a29 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000a2a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000a2b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000a2c 940e 0e8b 	CALL __SUBF12
000a2e c092      	RJMP _0x20A0003
                 _sin:
000a2f 9724      	SBIW R28,4
000a30 931a      	ST   -Y,R17
000a31 e010      	LDI  R17,0
000a32 940e 0d9b 	CALL SUBOPT_0x3F
                +
000a34 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000a35 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000a36 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000a37 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000a38 940e 0ee2 	CALL __MULF12
000a3a 940e 0da0 	CALL SUBOPT_0x40
000a3c 940e 0da5 	CALL SUBOPT_0x41
000a3e 940e 0cfb 	CALL SUBOPT_0x28
000a40 940e 0d9b 	CALL SUBOPT_0x3F
000a42 940e 0bfb 	CALL SUBOPT_0x9
000a44 940e 0da0 	CALL SUBOPT_0x40
000a46 940e 0daa 	CALL SUBOPT_0x42
000a48 940e 0f75 	CALL __CMPF12
000a4a f009      	BREQ PC+2
000a4b f410      	BRCC PC+3
000a4c 940c 0a59 	JMP  _0x2020017
000a4e 940e 0da5 	CALL SUBOPT_0x41
                +
000a50 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000a51 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000a52 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000a53 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000a54 940e 0e8b 	CALL __SUBF12
000a56 940e 0da0 	CALL SUBOPT_0x40
000a58 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000a59 940e 0d9b 	CALL SUBOPT_0x3F
                +
000a5b e0e0     +LDI R30 , LOW ( 0x3E800000 )
000a5c e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000a5d e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000a5e e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000a5f 940e 0f75 	CALL __CMPF12
000a61 f009      	BREQ PC+2
000a62 f410      	BRCC PC+3
000a63 940c 0a6b 	JMP  _0x2020018
000a65 940e 0daa 	CALL SUBOPT_0x42
000a67 940e 0e8b 	CALL __SUBF12
000a69 940e 0da0 	CALL SUBOPT_0x40
                 _0x2020018:
000a6b 3010      	CPI  R17,0
000a6c f031      	BREQ _0x2020019
000a6d 940e 0da5 	CALL SUBOPT_0x41
000a6f 940e 0dec 	CALL __ANEGF1
000a71 940e 0da0 	CALL SUBOPT_0x40
                 _0x2020019:
000a73 940e 0da5 	CALL SUBOPT_0x41
000a75 940e 0d9b 	CALL SUBOPT_0x3F
000a77 940e 0ee2 	CALL __MULF12
                +
000a79 83e9     +STD Y + 1 , R30
000a7a 83fa     +STD Y + 1 + 1 , R31
000a7b 836b     +STD Y + 1 + 2 , R22
000a7c 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000a7d eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000a7e ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000a7f e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000a80 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000a81 940e 0ee2 	CALL __MULF12
000a83 01df      	MOVW R26,R30
000a84 01cb      	MOVW R24,R22
                +
000a85 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000a86 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000a87 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000a88 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000a89 940e 0bfb 	CALL SUBOPT_0x9
000a8b 940e 0db0 	CALL SUBOPT_0x43
                +
000a8d e4ac     +LDI R26 , LOW ( 0x4104534C )
000a8e e5b3     +LDI R27 , HIGH ( 0x4104534C )
000a8f e084     +LDI R24 , BYTE3 ( 0x4104534C )
000a90 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000a91 940e 0e92 	CALL __ADDF12
000a93 940e 0d9b 	CALL SUBOPT_0x3F
000a95 940e 0ee2 	CALL __MULF12
000a97 937f      	PUSH R23
000a98 936f      	PUSH R22
000a99 93ff      	PUSH R31
000a9a 93ef      	PUSH R30
                +
000a9b 81e9     +LDD R30 , Y + 1
000a9c 81fa     +LDD R31 , Y + 1 + 1
000a9d 816b     +LDD R22 , Y + 1 + 2
000a9e 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000a9f e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000aa0 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000aa1 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000aa2 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000aa3 940e 0e92 	CALL __ADDF12
000aa5 940e 0db0 	CALL SUBOPT_0x43
                +
000aa7 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000aa8 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000aa9 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000aaa e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000aab 940e 0e92 	CALL __ADDF12
000aad 91af      	POP  R26
000aae 91bf      	POP  R27
000aaf 918f      	POP  R24
000ab0 919f      	POP  R25
000ab1 940e 0f30 	CALL __DIVF21
000ab3 8118      	LDD  R17,Y+0
000ab4 9629      	ADIW R28,9
000ab5 9508      	RET
                 _cos:
000ab6 940e 102a 	CALL __GETD2S0
                +
000ab8 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000ab9 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000aba ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000abb e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000abc 940e 0e8b 	CALL __SUBF12
000abe 940e 1036 	CALL __PUTPARD1
000ac0 df6e      	RCALL _sin
                 _0x20A0003:
000ac1 9624      	ADIW R28,4
000ac2 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000ac3 e0e1          ldi  r30,1
000ac4 91f9          ld   r31,y+
000ac5 33f0          cpi  r31,'0'
000ac6 f010          brlo isdigit0
000ac7 33fa          cpi  r31,'9'+1
000ac8 f008          brlo isdigit1
                 isdigit0:
000ac9 27ee          clr  r30
                 isdigit1:
000aca 9508          ret
                 _isspace:
000acb e0e1          ldi  r30,1
000acc 91f9          ld   r31,y+
000acd 32f0          cpi  r31,' '
000ace f029          breq isspace1
000acf 30f9          cpi  r31,9
000ad0 f010          brlo isspace0
000ad1 30fe          cpi  r31,13+1
000ad2 f008          brlo isspace1
                 isspace0:
000ad3 27ee          clr  r30
                 isspace1:
000ad4 9508          ret
                 _isxdigit:
000ad5 e0e1          ldi  r30,1
000ad6 91f9          ld   r31,y+
000ad7 53f0          subi r31,0x30
000ad8 f040          brcs isxdigit0
000ad9 30fa          cpi  r31,10
000ada f038          brcs isxdigit1
000adb 75ff          andi r31,0x5f
000adc 50f7          subi r31,7
000add 30fa          cpi  r31,10
000ade f010          brcs isxdigit0
000adf 31f0          cpi  r31,16
000ae0 f008          brcs isxdigit1
                 isxdigit0:
000ae1 27ee          clr  r30
                 isxdigit1:
000ae2 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000ae3 91e9          ld   r30,y+
000ae4 91f9          ld   r31,y+
000ae5 91a9          ld   r26,y+
000ae6 91b9          ld   r27,y+
000ae7 01cd          movw r24,r26
                 strcpyf0:
000ae8 9005      	lpm  r0,z+
000ae9 920d          st   x+,r0
000aea 2000          tst  r0
000aeb f7e1          brne strcpyf0
000aec 01fc          movw r30,r24
000aed 9508          ret
                 _strlen:
000aee 91a9          ld   r26,y+
000aef 91b9          ld   r27,y+
000af0 27ee          clr  r30
000af1 27ff          clr  r31
                 strlen0:
000af2 916d          ld   r22,x+
000af3 2366          tst  r22
000af4 f011          breq strlen1
000af5 9631          adiw r30,1
000af6 cffb          rjmp strlen0
                 strlen1:
000af7 9508          ret
                 _strlenf:
000af8 27aa          clr  r26
000af9 27bb          clr  r27
000afa 91e9          ld   r30,y+
000afb 91f9          ld   r31,y+
                 strlenf0:
000afc 9005      	lpm  r0,z+
000afd 2000          tst  r0
000afe f011          breq strlenf1
000aff 9611          adiw r26,1
000b00 cffb          rjmp strlenf0
                 strlenf1:
000b01 01fd          movw r30,r26
000b02 9508          ret
                 
                 	.CSEG
                 _ftoa:
000b03 9724      	SBIW R28,4
000b04 d0d4      	RCALL SUBOPT_0x4
000b05 e0e0      	LDI  R30,LOW(0)
000b06 83ea      	STD  Y+2,R30
000b07 e3ef      	LDI  R30,LOW(63)
000b08 83eb      	STD  Y+3,R30
000b09 931a      	ST   -Y,R17
000b0a 930a      	ST   -Y,R16
000b0b 85eb      	LDD  R30,Y+11
000b0c 85fc      	LDD  R31,Y+11+1
000b0d 3fef      	CPI  R30,LOW(0xFFFF)
000b0e efaf      	LDI  R26,HIGH(0xFFFF)
000b0f 07fa      	CPC  R31,R26
000b10 f429      	BRNE _0x208000D
000b11 d2a5      	RCALL SUBOPT_0x44
                +
000b12 e5e6     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000b13 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000b14 d1a4      	RCALL SUBOPT_0x1F
000b15 c085      	RJMP _0x20A0002
                 _0x208000D:
000b16 3fef      	CPI  R30,LOW(0x7FFF)
000b17 e7af      	LDI  R26,HIGH(0x7FFF)
000b18 07fa      	CPC  R31,R26
000b19 f429      	BRNE _0x208000C
000b1a d29c      	RCALL SUBOPT_0x44
                +
000b1b e5e7     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000b1c e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000b1d d19b      	RCALL SUBOPT_0x1F
000b1e c07c      	RJMP _0x20A0002
                 _0x208000C:
000b1f 85ac      	LDD  R26,Y+12
000b20 23aa      	TST  R26
000b21 f452      	BRPL _0x208000F
                +
000b22 85e9     +LDD R30 , Y + 9
000b23 85fa     +LDD R31 , Y + 9 + 1
000b24 856b     +LDD R22 , Y + 9 + 2
000b25 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000b26 940e 0dec 	CALL __ANEGF1
000b28 d293      	RCALL SUBOPT_0x45
000b29 d297      	RCALL SUBOPT_0x46
000b2a e2ed      	LDI  R30,LOW(45)
000b2b 93ec      	ST   X,R30
                 _0x208000F:
000b2c 85a8      	LDD  R26,Y+8
000b2d 30a7      	CPI  R26,LOW(0x7)
000b2e f010      	BRLO _0x2080010
000b2f e0e6      	LDI  R30,LOW(6)
000b30 87e8      	STD  Y+8,R30
                 _0x2080010:
000b31 8518      	LDD  R17,Y+8
                 _0x2080011:
000b32 2fe1      	MOV  R30,R17
000b33 5011      	SUBI R17,1
000b34 30e0      	CPI  R30,0
000b35 f021      	BREQ _0x2080013
000b36 d291      	RCALL SUBOPT_0x47
000b37 d1bc      	RCALL SUBOPT_0x27
000b38 d294      	RCALL SUBOPT_0x48
000b39 cff8      	RJMP _0x2080011
                 _0x2080013:
000b3a d297      	RCALL SUBOPT_0x49
000b3b 940e 0e92 	CALL __ADDF12
000b3d d27e      	RCALL SUBOPT_0x45
000b3e e010      	LDI  R17,LOW(0)
                +
000b3f e0e0     +LDI R30 , LOW ( 0x3F800000 )
000b40 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000b41 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000b42 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000b43 d289      	RCALL SUBOPT_0x48
                 _0x2080014:
000b44 d28d      	RCALL SUBOPT_0x49
000b45 940e 0f75 	CALL __CMPF12
000b47 f060      	BRLO _0x2080016
000b48 d27f      	RCALL SUBOPT_0x47
000b49 d197      	RCALL SUBOPT_0x24
000b4a d282      	RCALL SUBOPT_0x48
000b4b 5f1f      	SUBI R17,-LOW(1)
000b4c 3217      	CPI  R17,39
000b4d f028      	BRLO _0x2080017
000b4e d268      	RCALL SUBOPT_0x44
                +
000b4f e5eb     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000b50 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000b51 d167      	RCALL SUBOPT_0x1F
000b52 c048      	RJMP _0x20A0002
                 _0x2080017:
000b53 cff0      	RJMP _0x2080014
                 _0x2080016:
000b54 3010      	CPI  R17,0
000b55 f421      	BRNE _0x2080018
000b56 d26a      	RCALL SUBOPT_0x46
000b57 e3e0      	LDI  R30,LOW(48)
000b58 93ec      	ST   X,R30
000b59 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000b5a 2fe1      	MOV  R30,R17
000b5b 5011      	SUBI R17,1
000b5c 30e0      	CPI  R30,0
000b5d f0c9      	BREQ _0x208001C
000b5e d269      	RCALL SUBOPT_0x47
000b5f d194      	RCALL SUBOPT_0x27
000b60 d18c      	RCALL SUBOPT_0x26
000b61 d199      	RCALL SUBOPT_0x28
000b62 d26a      	RCALL SUBOPT_0x48
000b63 d26e      	RCALL SUBOPT_0x49
000b64 940e 0f30 	CALL __DIVF21
000b66 940e 0e1f 	CALL __CFD1U
000b68 2f0e      	MOV  R16,R30
000b69 d257      	RCALL SUBOPT_0x46
000b6a d19b      	RCALL SUBOPT_0x2A
000b6b e0f0      	LDI  R31,0
000b6c d25b      	RCALL SUBOPT_0x47
000b6d 940e 0fb0 	CALL __CWD1
000b6f 940e 0e58 	CALL __CDF1
000b71 940e 0ee2 	CALL __MULF12
000b73 d267      	RCALL SUBOPT_0x4A
000b74 d086      	RCALL SUBOPT_0x9
000b75 d246      	RCALL SUBOPT_0x45
000b76 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000b77 85e8      	LDD  R30,Y+8
000b78 30e0      	CPI  R30,0
000b79 f0e9      	BREQ _0x20A0001
000b7a d246      	RCALL SUBOPT_0x46
000b7b e2ee      	LDI  R30,LOW(46)
000b7c 93ec      	ST   X,R30
                 _0x208001E:
000b7d 85e8      	LDD  R30,Y+8
000b7e 50e1      	SUBI R30,LOW(1)
000b7f 87e8      	STD  Y+8,R30
000b80 5fef      	SUBI R30,-LOW(1)
000b81 f0a9      	BREQ _0x2080020
000b82 d258      	RCALL SUBOPT_0x4A
000b83 d15d      	RCALL SUBOPT_0x24
000b84 d237      	RCALL SUBOPT_0x45
                +
000b85 85e9     +LDD R30 , Y + 9
000b86 85fa     +LDD R31 , Y + 9 + 1
000b87 856b     +LDD R22 , Y + 9 + 2
000b88 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000b89 940e 0e1f 	CALL __CFD1U
000b8b 2f0e      	MOV  R16,R30
000b8c d234      	RCALL SUBOPT_0x46
000b8d d178      	RCALL SUBOPT_0x2A
000b8e e0f0      	LDI  R31,0
000b8f d24b      	RCALL SUBOPT_0x4A
000b90 940e 0fb0 	CALL __CWD1
000b92 940e 0e58 	CALL __CDF1
000b94 d066      	RCALL SUBOPT_0x9
000b95 d226      	RCALL SUBOPT_0x45
000b96 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000b97 81ae      	LDD  R26,Y+6
000b98 81bf      	LDD  R27,Y+6+1
000b99 e0e0      	LDI  R30,LOW(0)
000b9a 93ec      	ST   X,R30
                 _0x20A0002:
000b9b 8119      	LDD  R17,Y+1
000b9c 8108      	LDD  R16,Y+0
000b9d 962d      	ADIW R28,13
000b9e 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000b9f 81aa      	LDD  R26,Y+2
000ba0 81bb      	LDD  R27,Y+2+1
000ba1 27ee      	CLR  R30
000ba2 0fa1      	ADD  R26,R17
000ba3 1fbe      	ADC  R27,R30
000ba4 91ec      	LD   R30,X
000ba5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000ba6 9728      	SBIW R28,8
000ba7 940e 1059 	CALL __SAVELOCR4
                +
000ba9 e020     +LDI R18 , LOW ( 0 )
000baa e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000bab 89e8      	LDD  R30,Y+16
000bac 83ec      	STD  Y+4,R30
000bad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000bae 83ed      	STD  Y+5,R30
000baf 85ee      	LDD  R30,Y+14
000bb0 85ff      	LDD  R31,Y+14+1
000bb1 940e 0fa5 	CALL __ASRW8
000bb3 83ee      	STD  Y+6,R30
000bb4 85ee      	LDD  R30,Y+14
000bb5 83ef      	STD  Y+7,R30
000bb6 85ec      	LDD  R30,Y+12
000bb7 85fd      	LDD  R31,Y+12+1
000bb8 940e 0fa5 	CALL __ASRW8
000bba 87e8      	STD  Y+8,R30
000bbb 85ec      	LDD  R30,Y+12
000bbc 87e9      	STD  Y+9,R30
000bbd e0e0      	LDI  R30,LOW(0)
000bbe 87ea      	STD  Y+10,R30
000bbf 87eb      	STD  Y+11,R30
000bc0 01fe      	MOVW R30,R28
000bc1 9634      	ADIW R30,4
000bc2 93fa      	ST   -Y,R31
000bc3 93ea      	ST   -Y,R30
000bc4 e0e6      	LDI  R30,LOW(6)
000bc5 e0f0      	LDI  R31,HIGH(6)
000bc6 93fa      	ST   -Y,R31
000bc7 93ea      	ST   -Y,R30
000bc8 940e 015d 	CALL _CRC16
000bca 018f      	MOVW R16,R30
000bcb 01f8      	MOVW R30,R16
000bcc 87ea      	STD  Y+10,R30
                +
000bcd 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000bce e020     +LDI R18 , LOW ( 0 )
000bcf e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000bd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000bd1 01de      	MOVW R26,R28
000bd2 9614      	ADIW R26,4
000bd3 0fa2      	ADD  R26,R18
000bd4 1fb3      	ADC  R27,R19
000bd5 91ec      	LD   R30,X
000bd6 93ea      	ST   -Y,R30
000bd7 940c 0157 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000bd9 e0e0      	LDI  R30,LOW(0)
000bda 83e8      	ST   Y,R30
000bdb 83e9      	STD  Y+1,R30
000bdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000bdd 85ae      	LDD  R26,Y+14
000bde 85bf      	LDD  R27,Y+14+1
000bdf 940e 101a 	CALL __GETD1P
000be1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000be2 85ac      	LDD  R26,Y+12
000be3 85bd      	LDD  R27,Y+12+1
000be4 940e 101a 	CALL __GETD1P
000be6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
000be7 eea1     +LDI R26 , LOW ( 0x3E947AE1 )
000be8 e7ba     +LDI R27 , HIGH ( 0x3E947AE1 )
000be9 e984     +LDI R24 , BYTE3 ( 0x3E947AE1 )
000bea e39e     +LDI R25 , BYTE4 ( 0x3E947AE1 )
                 	__GETD2N 0x3E947AE1
000beb 940e 0ee2 	CALL __MULF12
000bed 01df      	MOVW R26,R30
000bee 01cb      	MOVW R24,R22
                +
000bef e0e0     +LDI R30 , LOW ( 0x40800000 )
000bf0 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000bf1 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000bf2 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000bf3 940e 0f30 	CALL __DIVF21
000bf5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
000bf6 83ec     +STD Y + 4 , R30
000bf7 83fd     +STD Y + 4 + 1 , R31
000bf8 836e     +STD Y + 4 + 2 , R22
000bf9 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000bfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000bfb 940e 1040 	CALL __SWAPD12
000bfd 940e 0e8b 	CALL __SUBF12
000bff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
000c00 81ec     +LDD R30 , Y + 4
000c01 81fd     +LDD R31 , Y + 4 + 1
000c02 816e     +LDD R22 , Y + 4 + 2
000c03 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000c04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
000c05 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000c06 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000c07 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000c08 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000c09 940e 0ee2 	CALL __MULF12
                +
000c0b e0a0     +LDI R26 , LOW ( 0x41A00000 )
000c0c e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000c0d ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000c0e e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000c0f 940e 0ee2 	CALL __MULF12
000c11 940e 0e21 	CALL __CFD1
000c13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000c14 940e 1025 	CALL __GETD1S0
000c16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000c17 e0e0      	LDI  R30,LOW(0)
000c18 e0f0      	LDI  R31,HIGH(0)
000c19 93ed      	ST   X+,R30
000c1a 93fc      	ST   X,R31
000c1b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000c1c 93fa      	ST   -Y,R31
000c1d 93ea      	ST   -Y,R30
000c1e 940e 018c 	CALL _RTU_WriteOperate0
000c20 e0e5      	LDI  R30,LOW(5)
000c21 e0f0      	LDI  R31,HIGH(5)
000c22 93fa      	ST   -Y,R31
000c23 93ea      	ST   -Y,R30
000c24 940c 0de0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000c26 93ea      	ST   -Y,R30
000c27 e7e8      	LDI  R30,LOW(120)
000c28 e0f0      	LDI  R31,HIGH(120)
000c29 93fa      	ST   -Y,R31
000c2a 93ea      	ST   -Y,R30
000c2b e0e1      	LDI  R30,LOW(1)
000c2c e0f0      	LDI  R31,HIGH(1)
000c2d cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000c2e e0f0      	LDI  R31,0
000c2f 0fea      	ADD  R30,R26
000c30 1ffb      	ADC  R31,R27
000c31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000c32 2da4      	MOV  R26,R4
000c33 e0b0      	LDI  R27,0
000c34 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000c35 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000c36 b1ec      	IN   R30,0xC
000c37 93ec      	ST   X,R30
000c38 9443      	INC  R4
000c39 e0e0      	LDI  R30,LOW(0)
000c3a bde4      	OUT  0x24,R30
000c3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000c3c 93ea      	ST   -Y,R30
000c3d 93fa      	ST   -Y,R31
000c3e b7ef      	IN   R30,SREG
000c3f 93ea      	ST   -Y,R30
000c40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000c41 e0f0      	LDI  R31,0
000c42 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000c43 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000c44 8310      	ST   Z,R17
000c45 9493      	INC  R9
000c46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
000c47 93fa      	ST   -Y,R31
000c48 93ea      	ST   -Y,R30
000c49 940c 0de0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
000c4b 940e 0fb0 	CALL __CWD1
000c4d 940e 0e58 	CALL __CDF1
000c4f 01df      	MOVW R26,R30
000c50 01cb      	MOVW R24,R22
                +
000c51 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000c52 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000c53 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000c54 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000c55 940e 0f30 	CALL __DIVF21
000c57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x16:
000c58 93ea      	ST   -Y,R30
000c59 e0e2      	LDI  R30,LOW(2)
000c5a e0f0      	LDI  R31,HIGH(2)
000c5b 93fa      	ST   -Y,R31
000c5c 93ea      	ST   -Y,R30
000c5d 93fa      	ST   -Y,R31
000c5e 93ea      	ST   -Y,R30
000c5f 940e 019b 	CALL _RTU_ReedOperate0
000c61 e0e5      	LDI  R30,LOW(5)
000c62 e0f0      	LDI  R31,HIGH(5)
000c63 cfe3      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x17:
000c64 93fa      	ST   -Y,R31
000c65 93ea      	ST   -Y,R30
000c66 940e 0243 	CALL _get_RPM
000c68 940e 0fb0 	CALL __CWD1
000c6a 940e 0e58 	CALL __CDF1
000c6c 01df      	MOVW R26,R30
000c6d 01cb      	MOVW R24,R22
                +
000c6e e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000c6f effc     +LDI R31 , HIGH ( 0x453EFC29 )
000c70 e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000c71 e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000c72 940e 0f30 	CALL __DIVF21
000c74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x18:
                +
000c75 01fe     +MOVW R30 , R28
000c76 58e4     +SUBI R30 , LOW ( - 124 )
000c77 4fff     +SBCI R31 , HIGH ( - 124 )
000c78 9001     +LD R0 , Z +
000c79 9011     +LD R1 , Z +
000c7a 9161     +LD R22 , Z +
000c7b 8170     +LD R23 , Z
000c7c 01f0     +MOVW R30 , R0
                 	__GETD1SX 124
                +
000c7d 01de     +MOVW R26 , R28
000c7e 58a8     +SUBI R26 , LOW ( - 120 )
000c7f 4fbf     +SBCI R27 , HIGH ( - 120 )
000c80 900d     +LD R0 , X +
000c81 901d     +LD R1 , X +
000c82 918d     +LD R24 , X +
000c83 919c     +LD R25 , X
000c84 01d0     +MOVW R26 , R0
                 	__GETD2SX 120
000c85 940e 0ee2 	CALL __MULF12
000c87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
                +
000c88 01de     +MOVW R26 , R28
000c89 58a0     +SUBI R26 , LOW ( - 128 )
000c8a 4fbf     +SBCI R27 , HIGH ( - 128 )
000c8b 900d     +LD R0 , X +
000c8c 901d     +LD R1 , X +
000c8d 918d     +LD R24 , X +
000c8e 919c     +LD R25 , X
000c8f 01d0     +MOVW R26 , R0
                 	__GETD2SX 128
000c90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
                +
000c91 01fe     +MOVW R30 , R28
000c92 58e8     +SUBI R30 , LOW ( - 120 )
000c93 4fff     +SBCI R31 , HIGH ( - 120 )
000c94 9001     +LD R0 , Z +
000c95 9011     +LD R1 , Z +
000c96 9161     +LD R22 , Z +
000c97 8170     +LD R23 , Z
000c98 01f0     +MOVW R30 , R0
                 	__GETD1SX 120
000c99 dfee      	RCALL SUBOPT_0x19
000c9a 940e 0ee2 	CALL __MULF12
000c9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1B:
                +
000c9d 01fe     +MOVW R30 , R28
000c9e 58e8     +SUBI R30 , LOW ( - 120 )
000c9f 4fff     +SBCI R31 , HIGH ( - 120 )
000ca0 9001     +LD R0 , Z +
000ca1 9011     +LD R1 , Z +
000ca2 9161     +LD R22 , Z +
000ca3 8170     +LD R23 , Z
000ca4 01f0     +MOVW R30 , R0
                 	__GETD1SX 120
000ca5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
                +
000ca6 01de     +MOVW R26 , R28
000ca7 59ac     +SUBI R26 , LOW ( - 100 )
000ca8 4fbf     +SBCI R27 , HIGH ( - 100 )
000ca9 900d     +LD R0 , X +
000caa 901d     +LD R1 , X +
000cab 918d     +LD R24 , X +
000cac 919c     +LD R25 , X
000cad 01d0     +MOVW R26 , R0
                 	__GETD2SX 100
000cae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000caf dfed      	RCALL SUBOPT_0x1B
000cb0 940e 1036 	CALL __PUTPARD1
000cb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1E:
000cb3 91ed      	LD   R30,X+
000cb4 91fd      	LD   R31,X+
000cb5 9631      	ADIW R30,1
000cb6 93fe      	ST   -X,R31
000cb7 93ee      	ST   -X,R30
000cb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
000cb9 93fa      	ST   -Y,R31
000cba 93ea      	ST   -Y,R30
000cbb 940c 0ae3 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x20:
                +
000cbd 81ac     +LDD R26 , Y + 4
000cbe 81bd     +LDD R27 , Y + 4 + 1
000cbf 818e     +LDD R24 , Y + 4 + 2
000cc0 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000cc1 e0e0     +LDI R30 , LOW ( 0x41200000 )
000cc2 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000cc3 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000cc4 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000cc5 940e 0ee2 	CALL __MULF12
000cc7 cf2e      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x21:
000cc8 df37      	RCALL SUBOPT_0xA
                +
000cc9 85ac     +LDD R26 , Y + 12
000cca 85bd     +LDD R27 , Y + 12 + 1
000ccb 858e     +LDD R24 , Y + 12 + 2
000ccc 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000ccd 940e 0f75 	CALL __CMPF12
000ccf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
000cd0 85ac     +LDD R26 , Y + 12
000cd1 85bd     +LDD R27 , Y + 12 + 1
000cd2 858e     +LDD R24 , Y + 12 + 2
000cd3 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000cd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x23:
                +
000cd5 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000cd6 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000cd7 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000cd8 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000cd9 940e 0ee2 	CALL __MULF12
                +
000cdb 87ec     +STD Y + 12 , R30
000cdc 87fd     +STD Y + 12 + 1 , R31
000cdd 876e     +STD Y + 12 + 2 , R22
000cde 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000cdf 5f3f      	SUBI R19,-LOW(1)
000ce0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
                +
000ce1 e0e0     +LDI R30 , LOW ( 0x41200000 )
000ce2 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000ce3 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000ce4 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000ce5 940e 0ee2 	CALL __MULF12
000ce7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
                +
000ce8 87ec     +STD Y + 12 , R30
000ce9 87fd     +STD Y + 12 + 1 , R31
000cea 876e     +STD Y + 12 + 2 , R22
000ceb 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000cec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
000ced e0a0     +LDI R26 , LOW ( 0x3F000000 )
000cee e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000cef e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000cf0 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000cf1 940e 0e92 	CALL __ADDF12
000cf3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
                +
000cf4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000cf5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000cf6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000cf7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000cf8 940e 0ee2 	CALL __MULF12
000cfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000cfb 940e 1036 	CALL __PUTPARD1
000cfd 940c 0a19 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000cff 85a8      	LDD  R26,Y+8
000d00 85b9      	LDD  R27,Y+8+1
000d01 9611      	ADIW R26,1
000d02 87a8      	STD  Y+8,R26
000d03 87b9      	STD  Y+8+1,R27
000d04 9711      	SBIW R26,1
000d05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000d06 2fe0      	MOV  R30,R16
000d07 5de0      	SUBI R30,-LOW(48)
000d08 93ec      	ST   X,R30
000d09 2fe0      	MOV  R30,R16
000d0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
000d0b 85e8      	LDD  R30,Y+8
000d0c 85f9      	LDD  R31,Y+8+1
000d0d 9631      	ADIW R30,1
000d0e 87e8      	STD  Y+8,R30
000d0f 87f9      	STD  Y+8+1,R31
000d10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2C:
000d11 932a      	ST   -Y,R18
000d12 81ef      	LDD  R30,Y+7
000d13 85f8      	LDD  R31,Y+7+1
000d14 93fa      	ST   -Y,R31
000d15 93ea      	ST   -Y,R30
000d16 85eb      	LDD  R30,Y+11
000d17 85fc      	LDD  R31,Y+11+1
000d18 9509      	ICALL
000d19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2D:
                +
000d1a 01fe     +MOVW R30 , R28
000d1b 5ae6     +SUBI R30 , LOW ( - 90 )
000d1c 4fff     +SBCI R31 , HIGH ( - 90 )
000d1d 9001     +LD R0 , Z +
000d1e 81f0     +LD R31 , Z
000d1f 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000d20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2E:
000d21 9734      	SBIW R30,4
                +
000d22 01de     +MOVW R26 , R28
000d23 5aa6     +SUBI R26 , LOW ( - 90 )
000d24 4fbf     +SBCI R27 , HIGH ( - 90 )
000d25 93ed     +ST X + , R30
000d26 93fc     +ST X , R31
                 	__PUTW1SX 90
000d27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2F:
000d28 81ef      	LDD  R30,Y+7
000d29 85f8      	LDD  R31,Y+7+1
000d2a 93fa      	ST   -Y,R31
000d2b 93ea      	ST   -Y,R30
000d2c 85eb      	LDD  R30,Y+11
000d2d 85fc      	LDD  R31,Y+11+1
000d2e 9509      	ICALL
000d2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x30:
                +
000d30 01de     +MOVW R26 , R28
000d31 5aa6     +SUBI R26 , LOW ( - 90 )
000d32 4fbf     +SBCI R27 , HIGH ( - 90 )
000d33 900d     +LD R0 , X +
000d34 91bc     +LD R27 , X
000d35 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000d36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
                +
000d37 87ea     +STD Y + 10 , R30
000d38 87fb     +STD Y + 10 + 1 , R31
000d39 876c     +STD Y + 10 + 2 , R22
000d3a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000d3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x32:
000d3c dfdd      	RCALL SUBOPT_0x2D
000d3d cfe3      	RJMP SUBOPT_0x2E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
                +
000d3e 85ea     +LDD R30 , Y + 10
000d3f 85fb     +LDD R31 , Y + 10 + 1
000d40 856c     +LDD R22 , Y + 10 + 2
000d41 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000d42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x34:
000d43 87ee      	STD  Y+14,R30
000d44 87ff      	STD  Y+14+1,R31
000d45 93fa      	ST   -Y,R31
000d46 93ea      	ST   -Y,R30
000d47 940e 0aee 	CALL _strlen
000d49 2f1e      	MOV  R17,R30
000d4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35:
000d4b dfe4      	RCALL SUBOPT_0x30
000d4c 9614      	ADIW R26,4
000d4d 940e 1016 	CALL __GETW1P
000d4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x36:
                +
000d50 8be8     +STD Y + 16 , R30
000d51 8bf9     +STD Y + 16 + 1 , R31
000d52 8b6a     +STD Y + 16 + 2 , R22
000d53 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000d54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x37:
000d55 7f0b      	ANDI R16,LOW(251)
000d56 89ed      	LDD  R30,Y+21
000d57 93ea      	ST   -Y,R30
                +
000d58 01fe     +MOVW R30 , R28
000d59 5ae9     +SUBI R30 , LOW ( - 87 )
000d5a 4fff     +SBCI R31 , HIGH ( - 87 )
000d5b 9001     +LD R0 , Z +
000d5c 81f0     +LD R31 , Z
000d5d 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000d5e 93fa      	ST   -Y,R31
000d5f 93ea      	ST   -Y,R30
                +
000d60 01fe     +MOVW R30 , R28
000d61 5ae5     +SUBI R30 , LOW ( - 91 )
000d62 4fff     +SBCI R31 , HIGH ( - 91 )
000d63 9001     +LD R0 , Z +
000d64 81f0     +LD R31 , Z
000d65 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000d66 9509      	ICALL
000d67 3050      	CPI  R21,0
000d68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
                +
000d69 89e8     +LDD R30 , Y + 16
000d6a 89f9     +LDD R31 , Y + 16 + 1
000d6b 896a     +LDD R22 , Y + 16 + 2
000d6c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000d6d 85aa     +LDD R26 , Y + 10
000d6e 85bb     +LDD R27 , Y + 10 + 1
000d6f 858c     +LDD R24 , Y + 10 + 2
000d70 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000d71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
000d72 01de      	MOVW R26,R28
000d73 961c      	ADIW R26,12
000d74 940e 0f95 	CALL __ADDW2R15
000d76 940e 1016 	CALL __GETW1P
000d78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
000d79 940e 0f95 	CALL __ADDW2R15
000d7b 940e 1016 	CALL __GETW1P
000d7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000d7e 933a      	ST   -Y,R19
000d7f 940e 0acb 	CALL _isspace
000d81 30e0      	CPI  R30,0
000d82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3C:
000d83 85ed      	LDD  R30,Y+13
000d84 85fe      	LDD  R31,Y+13+1
000d85 93fa      	ST   -Y,R31
000d86 93ea      	ST   -Y,R30
000d87 89e9      	LDD  R30,Y+17
000d88 89fa      	LDD  R31,Y+17+1
000d89 9509      	ICALL
000d8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D:
000d8b 85ab      	LDD  R26,Y+11
000d8c 85bc      	LDD  R27,Y+11+1
000d8d 91ac      	LD   R26,X
000d8e 30a0      	CPI  R26,0
000d8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3E:
000d90 85ef      	LDD  R30,Y+15
000d91 89f8      	LDD  R31,Y+15+1
000d92 9734      	SBIW R30,4
000d93 87ef      	STD  Y+15,R30
000d94 8bf8      	STD  Y+15+1,R31
000d95 85af      	LDD  R26,Y+15
000d96 89b8      	LDD  R27,Y+15+1
000d97 9614      	ADIW R26,4
000d98 910d      	LD   R16,X+
000d99 911c      	LD   R17,X
000d9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3F:
                +
000d9b 81ad     +LDD R26 , Y + 5
000d9c 81be     +LDD R27 , Y + 5 + 1
000d9d 818f     +LDD R24 , Y + 5 + 2
000d9e 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000d9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40:
                +
000da0 83ed     +STD Y + 5 , R30
000da1 83fe     +STD Y + 5 + 1 , R31
000da2 836f     +STD Y + 5 + 2 , R22
000da3 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000da4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41:
                +
000da5 81ed     +LDD R30 , Y + 5
000da6 81fe     +LDD R31 , Y + 5 + 1
000da7 816f     +LDD R22 , Y + 5 + 2
000da8 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000da9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
000daa dff0      	RCALL SUBOPT_0x3F
                +
000dab e0e0     +LDI R30 , LOW ( 0x3F000000 )
000dac e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000dad e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000dae e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000daf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
                +
000db0 81a9     +LDD R26 , Y + 1
000db1 81ba     +LDD R27 , Y + 1 + 1
000db2 818b     +LDD R24 , Y + 1 + 2
000db3 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000db4 940e 0ee2 	CALL __MULF12
000db6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000db7 81ee      	LDD  R30,Y+6
000db8 81ff      	LDD  R31,Y+6+1
000db9 93fa      	ST   -Y,R31
000dba 93ea      	ST   -Y,R30
000dbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
                +
000dbc 87e9     +STD Y + 9 , R30
000dbd 87fa     +STD Y + 9 + 1 , R31
000dbe 876b     +STD Y + 9 + 2 , R22
000dbf 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000dc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x46:
000dc1 81ae      	LDD  R26,Y+6
000dc2 81bf      	LDD  R27,Y+6+1
000dc3 9611      	ADIW R26,1
000dc4 83ae      	STD  Y+6,R26
000dc5 83bf      	STD  Y+6+1,R27
000dc6 9711      	SBIW R26,1
000dc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x47:
                +
000dc8 81aa     +LDD R26 , Y + 2
000dc9 81bb     +LDD R27 , Y + 2 + 1
000dca 818c     +LDD R24 , Y + 2 + 2
000dcb 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000dcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x48:
                +
000dcd 83ea     +STD Y + 2 , R30
000dce 83fb     +STD Y + 2 + 1 , R31
000dcf 836c     +STD Y + 2 + 2 , R22
000dd0 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000dd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x49:
                +
000dd2 81ea     +LDD R30 , Y + 2
000dd3 81fb     +LDD R31 , Y + 2 + 1
000dd4 816c     +LDD R22 , Y + 2 + 2
000dd5 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000dd6 85a9     +LDD R26 , Y + 9
000dd7 85ba     +LDD R27 , Y + 9 + 1
000dd8 858b     +LDD R24 , Y + 9 + 2
000dd9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000dda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
                +
000ddb 85a9     +LDD R26 , Y + 9
000ddc 85ba     +LDD R27 , Y + 9 + 1
000ddd 858b     +LDD R24 , Y + 9 + 2
000dde 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ddf 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000de0 91e9      	ld   r30,y+
000de1 91f9      	ld   r31,y+
000de2 9630      	adiw r30,0
000de3 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000de4 e686     +LDI R24 , LOW ( 0xE66 )
000de5 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000de6 9701     +SBIW R24 , 1
000de7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000de8 95a8      	wdr
000de9 9731      	sbiw r30,1
000dea f7c9      	brne __delay_ms0
                 __delay_ms1:
000deb 9508      	ret
                 
                 __ANEGF1:
000dec 9730      	SBIW R30,0
000ded 4060      	SBCI R22,0
000dee 4070      	SBCI R23,0
000def f009      	BREQ __ANEGF10
000df0 5870      	SUBI R23,0x80
                 __ANEGF10:
000df1 9508      	RET
                 
                 __ROUND_REPACK:
000df2 2355      	TST  R21
000df3 f442      	BRPL __REPACK
000df4 3850      	CPI  R21,0x80
000df5 f411      	BRNE __ROUND_REPACK0
000df6 ffe0      	SBRS R30,0
000df7 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000df8 9631      	ADIW R30,1
000df9 1f69      	ADC  R22,R25
000dfa 1f79      	ADC  R23,R25
000dfb f06b      	BRVS __REPACK1
                 
                 __REPACK:
000dfc e850      	LDI  R21,0x80
000dfd 2757      	EOR  R21,R23
000dfe f411      	BRNE __REPACK0
000dff 935f      	PUSH R21
000e00 c0cf      	RJMP __ZERORES
                 __REPACK0:
000e01 3f5f      	CPI  R21,0xFF
000e02 f031      	BREQ __REPACK1
000e03 0f66      	LSL  R22
000e04 0c00      	LSL  R0
000e05 9557      	ROR  R21
000e06 9567      	ROR  R22
000e07 2f75      	MOV  R23,R21
000e08 9508      	RET
                 __REPACK1:
000e09 935f      	PUSH R21
000e0a 2000      	TST  R0
000e0b f00a      	BRMI __REPACK2
000e0c c0cf      	RJMP __MAXRES
                 __REPACK2:
000e0d c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000e0e e850      	LDI  R21,0x80
000e0f 2e19      	MOV  R1,R25
000e10 2215      	AND  R1,R21
000e11 0f88      	LSL  R24
000e12 1f99      	ROL  R25
000e13 2795      	EOR  R25,R21
000e14 0f55      	LSL  R21
000e15 9587      	ROR  R24
                 
                 __UNPACK1:
000e16 e850      	LDI  R21,0x80
000e17 2e07      	MOV  R0,R23
000e18 2205      	AND  R0,R21
000e19 0f66      	LSL  R22
000e1a 1f77      	ROL  R23
000e1b 2775      	EOR  R23,R21
000e1c 0f55      	LSL  R21
000e1d 9567      	ROR  R22
000e1e 9508      	RET
                 
                 __CFD1U:
000e1f 9468      	SET
000e20 c001      	RJMP __CFD1U0
                 __CFD1:
000e21 94e8      	CLT
                 __CFD1U0:
000e22 935f      	PUSH R21
000e23 dff2      	RCALL __UNPACK1
000e24 3870      	CPI  R23,0x80
000e25 f018      	BRLO __CFD10
000e26 3f7f      	CPI  R23,0xFF
000e27 f408      	BRCC __CFD10
000e28 c0a7      	RJMP __ZERORES
                 __CFD10:
000e29 e156      	LDI  R21,22
000e2a 1b57      	SUB  R21,R23
000e2b f4aa      	BRPL __CFD11
000e2c 9551      	NEG  R21
000e2d 3058      	CPI  R21,8
000e2e f40e      	BRTC __CFD19
000e2f 3059      	CPI  R21,9
                 __CFD19:
000e30 f030      	BRLO __CFD17
000e31 efef      	SER  R30
000e32 efff      	SER  R31
000e33 ef6f      	SER  R22
000e34 e77f      	LDI  R23,0x7F
000e35 f977      	BLD  R23,7
000e36 c01a      	RJMP __CFD15
                 __CFD17:
000e37 2777      	CLR  R23
000e38 2355      	TST  R21
000e39 f0b9      	BREQ __CFD15
                 __CFD18:
000e3a 0fee      	LSL  R30
000e3b 1fff      	ROL  R31
000e3c 1f66      	ROL  R22
000e3d 1f77      	ROL  R23
000e3e 955a      	DEC  R21
000e3f f7d1      	BRNE __CFD18
000e40 c010      	RJMP __CFD15
                 __CFD11:
000e41 2777      	CLR  R23
                 __CFD12:
000e42 3058      	CPI  R21,8
000e43 f028      	BRLO __CFD13
000e44 2fef      	MOV  R30,R31
000e45 2ff6      	MOV  R31,R22
000e46 2f67      	MOV  R22,R23
000e47 5058      	SUBI R21,8
000e48 cff9      	RJMP __CFD12
                 __CFD13:
000e49 2355      	TST  R21
000e4a f031      	BREQ __CFD15
                 __CFD14:
000e4b 9576      	LSR  R23
000e4c 9567      	ROR  R22
000e4d 95f7      	ROR  R31
000e4e 95e7      	ROR  R30
000e4f 955a      	DEC  R21
000e50 f7d1      	BRNE __CFD14
                 __CFD15:
000e51 2000      	TST  R0
000e52 f40a      	BRPL __CFD16
000e53 d149      	RCALL __ANEGD1
                 __CFD16:
000e54 915f      	POP  R21
000e55 9508      	RET
                 
                 __CDF1U:
000e56 9468      	SET
000e57 c001      	RJMP __CDF1U0
                 __CDF1:
000e58 94e8      	CLT
                 __CDF1U0:
000e59 9730      	SBIW R30,0
000e5a 4060      	SBCI R22,0
000e5b 4070      	SBCI R23,0
000e5c f0b1      	BREQ __CDF10
000e5d 2400      	CLR  R0
000e5e f026      	BRTS __CDF11
000e5f 2377      	TST  R23
000e60 f412      	BRPL __CDF11
000e61 9400      	COM  R0
000e62 d13a      	RCALL __ANEGD1
                 __CDF11:
000e63 2e17      	MOV  R1,R23
000e64 e17e      	LDI  R23,30
000e65 2011      	TST  R1
                 __CDF12:
000e66 f032      	BRMI __CDF13
000e67 957a      	DEC  R23
000e68 0fee      	LSL  R30
000e69 1fff      	ROL  R31
000e6a 1f66      	ROL  R22
000e6b 1c11      	ROL  R1
000e6c cff9      	RJMP __CDF12
                 __CDF13:
000e6d 2fef      	MOV  R30,R31
000e6e 2ff6      	MOV  R31,R22
000e6f 2d61      	MOV  R22,R1
000e70 935f      	PUSH R21
000e71 df8a      	RCALL __REPACK
000e72 915f      	POP  R21
                 __CDF10:
000e73 9508      	RET
                 
                 __SWAPACC:
000e74 934f      	PUSH R20
000e75 01af      	MOVW R20,R30
000e76 01fd      	MOVW R30,R26
000e77 01da      	MOVW R26,R20
000e78 01ab      	MOVW R20,R22
000e79 01bc      	MOVW R22,R24
000e7a 01ca      	MOVW R24,R20
000e7b 2d40      	MOV  R20,R0
000e7c 2c01      	MOV  R0,R1
000e7d 2e14      	MOV  R1,R20
000e7e 914f      	POP  R20
000e7f 9508      	RET
                 
                 __UADD12:
000e80 0fea      	ADD  R30,R26
000e81 1ffb      	ADC  R31,R27
000e82 1f68      	ADC  R22,R24
000e83 9508      	RET
                 
                 __NEGMAN1:
000e84 95e0      	COM  R30
000e85 95f0      	COM  R31
000e86 9560      	COM  R22
000e87 5fef      	SUBI R30,-1
000e88 4fff      	SBCI R31,-1
000e89 4f6f      	SBCI R22,-1
000e8a 9508      	RET
                 
                 __SUBF12:
000e8b 935f      	PUSH R21
000e8c df81      	RCALL __UNPACK
000e8d 3890      	CPI  R25,0x80
000e8e f171      	BREQ __ADDF129
000e8f e850      	LDI  R21,0x80
000e90 2615      	EOR  R1,R21
                 
000e91 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000e92 935f      	PUSH R21
000e93 df7a      	RCALL __UNPACK
000e94 3890      	CPI  R25,0x80
000e95 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000e96 3870      	CPI  R23,0x80
000e97 f121      	BREQ __ADDF128
                 __ADDF121:
000e98 2f57      	MOV  R21,R23
000e99 1b59      	SUB  R21,R25
000e9a f12b      	BRVS __ADDF1211
000e9b f412      	BRPL __ADDF122
000e9c dfd7      	RCALL __SWAPACC
000e9d cffa      	RJMP __ADDF121
                 __ADDF122:
000e9e 3158      	CPI  R21,24
000e9f f018      	BRLO __ADDF123
000ea0 27aa      	CLR  R26
000ea1 27bb      	CLR  R27
000ea2 2788      	CLR  R24
                 __ADDF123:
000ea3 3058      	CPI  R21,8
000ea4 f028      	BRLO __ADDF124
000ea5 2fab      	MOV  R26,R27
000ea6 2fb8      	MOV  R27,R24
000ea7 2788      	CLR  R24
000ea8 5058      	SUBI R21,8
000ea9 cff9      	RJMP __ADDF123
                 __ADDF124:
000eaa 2355      	TST  R21
000eab f029      	BREQ __ADDF126
                 __ADDF125:
000eac 9586      	LSR  R24
000ead 95b7      	ROR  R27
000eae 95a7      	ROR  R26
000eaf 955a      	DEC  R21
000eb0 f7d9      	BRNE __ADDF125
                 __ADDF126:
000eb1 2d50      	MOV  R21,R0
000eb2 2551      	EOR  R21,R1
000eb3 f072      	BRMI __ADDF127
000eb4 dfcb      	RCALL __UADD12
000eb5 f438      	BRCC __ADDF129
000eb6 9567      	ROR  R22
000eb7 95f7      	ROR  R31
000eb8 95e7      	ROR  R30
000eb9 9573      	INC  R23
000eba f413      	BRVC __ADDF129
000ebb c020      	RJMP __MAXRES
                 __ADDF128:
000ebc dfb7      	RCALL __SWAPACC
                 __ADDF129:
000ebd df3e      	RCALL __REPACK
000ebe 915f      	POP  R21
000ebf 9508      	RET
                 __ADDF1211:
000ec0 f7d8      	BRCC __ADDF128
000ec1 cffb      	RJMP __ADDF129
                 __ADDF127:
000ec2 1bea      	SUB  R30,R26
000ec3 0bfb      	SBC  R31,R27
000ec4 0b68      	SBC  R22,R24
000ec5 f051      	BREQ __ZERORES
000ec6 f410      	BRCC __ADDF1210
000ec7 9400      	COM  R0
000ec8 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000ec9 2366      	TST  R22
000eca f392      	BRMI __ADDF129
000ecb 0fee      	LSL  R30
000ecc 1fff      	ROL  R31
000ecd 1f66      	ROL  R22
000ece 957a      	DEC  R23
000ecf f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000ed0 27ee      	CLR  R30
000ed1 27ff      	CLR  R31
000ed2 2766      	CLR  R22
000ed3 2777      	CLR  R23
000ed4 915f      	POP  R21
000ed5 9508      	RET
                 
                 __MINRES:
000ed6 efef      	SER  R30
000ed7 efff      	SER  R31
000ed8 e76f      	LDI  R22,0x7F
000ed9 ef7f      	SER  R23
000eda 915f      	POP  R21
000edb 9508      	RET
                 
                 __MAXRES:
000edc efef      	SER  R30
000edd efff      	SER  R31
000ede e76f      	LDI  R22,0x7F
000edf e77f      	LDI  R23,0x7F
000ee0 915f      	POP  R21
000ee1 9508      	RET
                 
                 __MULF12:
000ee2 935f      	PUSH R21
000ee3 df2a      	RCALL __UNPACK
000ee4 3870      	CPI  R23,0x80
000ee5 f351      	BREQ __ZERORES
000ee6 3890      	CPI  R25,0x80
000ee7 f341      	BREQ __ZERORES
000ee8 2401      	EOR  R0,R1
000ee9 9408      	SEC
000eea 1f79      	ADC  R23,R25
000eeb f423      	BRVC __MULF124
000eec f31c      	BRLT __ZERORES
                 __MULF125:
000eed 2000      	TST  R0
000eee f33a      	BRMI __MINRES
000eef cfec      	RJMP __MAXRES
                 __MULF124:
000ef0 920f      	PUSH R0
000ef1 931f      	PUSH R17
000ef2 932f      	PUSH R18
000ef3 933f      	PUSH R19
000ef4 934f      	PUSH R20
000ef5 2711      	CLR  R17
000ef6 2722      	CLR  R18
000ef7 2799      	CLR  R25
000ef8 9f68      	MUL  R22,R24
000ef9 01a0      	MOVW R20,R0
000efa 9f8f      	MUL  R24,R31
000efb 2d30      	MOV  R19,R0
000efc 0d41      	ADD  R20,R1
000efd 1f59      	ADC  R21,R25
000efe 9f6b      	MUL  R22,R27
000eff 0d30      	ADD  R19,R0
000f00 1d41      	ADC  R20,R1
000f01 1f59      	ADC  R21,R25
000f02 9f8e      	MUL  R24,R30
000f03 d027      	RCALL __MULF126
000f04 9fbf      	MUL  R27,R31
000f05 d025      	RCALL __MULF126
000f06 9f6a      	MUL  R22,R26
000f07 d023      	RCALL __MULF126
000f08 9fbe      	MUL  R27,R30
000f09 d01d      	RCALL __MULF127
000f0a 9faf      	MUL  R26,R31
000f0b d01b      	RCALL __MULF127
000f0c 9fae      	MUL  R26,R30
000f0d 0d11      	ADD  R17,R1
000f0e 1f29      	ADC  R18,R25
000f0f 1f39      	ADC  R19,R25
000f10 1f49      	ADC  R20,R25
000f11 1f59      	ADC  R21,R25
000f12 2fe3      	MOV  R30,R19
000f13 2ff4      	MOV  R31,R20
000f14 2f65      	MOV  R22,R21
000f15 2f52      	MOV  R21,R18
000f16 914f      	POP  R20
000f17 913f      	POP  R19
000f18 912f      	POP  R18
000f19 911f      	POP  R17
000f1a 900f      	POP  R0
000f1b 2366      	TST  R22
000f1c f02a      	BRMI __MULF122
000f1d 0f55      	LSL  R21
000f1e 1fee      	ROL  R30
000f1f 1fff      	ROL  R31
000f20 1f66      	ROL  R22
000f21 c002      	RJMP __MULF123
                 __MULF122:
000f22 9573      	INC  R23
000f23 f24b      	BRVS __MULF125
                 __MULF123:
000f24 decd      	RCALL __ROUND_REPACK
000f25 915f      	POP  R21
000f26 9508      	RET
                 
                 __MULF127:
000f27 0d10      	ADD  R17,R0
000f28 1d21      	ADC  R18,R1
000f29 1f39      	ADC  R19,R25
000f2a c002      	RJMP __MULF128
                 __MULF126:
000f2b 0d20      	ADD  R18,R0
000f2c 1d31      	ADC  R19,R1
                 __MULF128:
000f2d 1f49      	ADC  R20,R25
000f2e 1f59      	ADC  R21,R25
000f2f 9508      	RET
                 
                 __DIVF21:
000f30 935f      	PUSH R21
000f31 dedc      	RCALL __UNPACK
000f32 3870      	CPI  R23,0x80
000f33 f421      	BRNE __DIVF210
000f34 2011      	TST  R1
                 __DIVF211:
000f35 f40a      	BRPL __DIVF219
000f36 cf9f      	RJMP __MINRES
                 __DIVF219:
000f37 cfa4      	RJMP __MAXRES
                 __DIVF210:
000f38 3890      	CPI  R25,0x80
000f39 f409      	BRNE __DIVF218
                 __DIVF217:
000f3a cf95      	RJMP __ZERORES
                 __DIVF218:
000f3b 2401      	EOR  R0,R1
000f3c 9408      	SEC
000f3d 0b97      	SBC  R25,R23
000f3e f41b      	BRVC __DIVF216
000f3f f3d4      	BRLT __DIVF217
000f40 2000      	TST  R0
000f41 cff3      	RJMP __DIVF211
                 __DIVF216:
000f42 2f79      	MOV  R23,R25
000f43 931f      	PUSH R17
000f44 932f      	PUSH R18
000f45 933f      	PUSH R19
000f46 934f      	PUSH R20
000f47 2411      	CLR  R1
000f48 2711      	CLR  R17
000f49 2722      	CLR  R18
000f4a 2733      	CLR  R19
000f4b 2744      	CLR  R20
000f4c 2755      	CLR  R21
000f4d e290      	LDI  R25,32
                 __DIVF212:
000f4e 17ae      	CP   R26,R30
000f4f 07bf      	CPC  R27,R31
000f50 0786      	CPC  R24,R22
000f51 0741      	CPC  R20,R17
000f52 f030      	BRLO __DIVF213
000f53 1bae      	SUB  R26,R30
000f54 0bbf      	SBC  R27,R31
000f55 0b86      	SBC  R24,R22
000f56 0b41      	SBC  R20,R17
000f57 9408      	SEC
000f58 c001      	RJMP __DIVF214
                 __DIVF213:
000f59 9488      	CLC
                 __DIVF214:
000f5a 1f55      	ROL  R21
000f5b 1f22      	ROL  R18
000f5c 1f33      	ROL  R19
000f5d 1c11      	ROL  R1
000f5e 1faa      	ROL  R26
000f5f 1fbb      	ROL  R27
000f60 1f88      	ROL  R24
000f61 1f44      	ROL  R20
000f62 959a      	DEC  R25
000f63 f751      	BRNE __DIVF212
000f64 01f9      	MOVW R30,R18
000f65 2d61      	MOV  R22,R1
000f66 914f      	POP  R20
000f67 913f      	POP  R19
000f68 912f      	POP  R18
000f69 911f      	POP  R17
000f6a 2366      	TST  R22
000f6b f032      	BRMI __DIVF215
000f6c 0f55      	LSL  R21
000f6d 1fee      	ROL  R30
000f6e 1fff      	ROL  R31
000f6f 1f66      	ROL  R22
000f70 957a      	DEC  R23
000f71 f243      	BRVS __DIVF217
                 __DIVF215:
000f72 de7f      	RCALL __ROUND_REPACK
000f73 915f      	POP  R21
000f74 9508      	RET
                 
                 __CMPF12:
000f75 2399      	TST  R25
000f76 f09a      	BRMI __CMPF120
000f77 2377      	TST  R23
000f78 f042      	BRMI __CMPF121
000f79 1797      	CP   R25,R23
000f7a f048      	BRLO __CMPF122
000f7b f429      	BRNE __CMPF121
000f7c 17ae      	CP   R26,R30
000f7d 07bf      	CPC  R27,R31
000f7e 0786      	CPC  R24,R22
000f7f f020      	BRLO __CMPF122
000f80 f031      	BREQ __CMPF123
                 __CMPF121:
000f81 9498      	CLZ
000f82 9488      	CLC
000f83 9508      	RET
                 __CMPF122:
000f84 9498      	CLZ
000f85 9408      	SEC
000f86 9508      	RET
                 __CMPF123:
000f87 9418      	SEZ
000f88 9488      	CLC
000f89 9508      	RET
                 __CMPF120:
000f8a 2377      	TST  R23
000f8b f7c2      	BRPL __CMPF122
000f8c 1797      	CP   R25,R23
000f8d f398      	BRLO __CMPF121
000f8e f7a9      	BRNE __CMPF122
000f8f 17ea      	CP   R30,R26
000f90 07fb      	CPC  R31,R27
000f91 0768      	CPC  R22,R24
000f92 f388      	BRLO __CMPF122
000f93 f399      	BREQ __CMPF123
000f94 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000f95 2400      	CLR  R0
000f96 0daf      	ADD  R26,R15
000f97 1db0      	ADC  R27,R0
000f98 9508      	RET
                 
                 __ANEGW1:
000f99 95f1      	NEG  R31
000f9a 95e1      	NEG  R30
000f9b 40f0      	SBCI R31,0
000f9c 9508      	RET
                 
                 __ANEGD1:
000f9d 95f0      	COM  R31
000f9e 9560      	COM  R22
000f9f 9570      	COM  R23
000fa0 95e1      	NEG  R30
000fa1 4fff      	SBCI R31,-1
000fa2 4f6f      	SBCI R22,-1
000fa3 4f7f      	SBCI R23,-1
000fa4 9508      	RET
                 
                 __ASRW8:
000fa5 2fef      	MOV  R30,R31
000fa6 27ff      	CLR  R31
000fa7 fde7      	SBRC R30,7
000fa8 efff      	SER  R31
000fa9 9508      	RET
                 
                 __CBD1:
000faa 2ffe      	MOV  R31,R30
000fab 0fff      	ADD  R31,R31
000fac 0bff      	SBC  R31,R31
000fad 2f6f      	MOV  R22,R31
000fae 2f7f      	MOV  R23,R31
000faf 9508      	RET
                 
                 __CWD1:
000fb0 2f6f      	MOV  R22,R31
000fb1 0f66      	ADD  R22,R22
000fb2 0b66      	SBC  R22,R22
000fb3 2f76      	MOV  R23,R22
000fb4 9508      	RET
                 
                 __CWD2:
000fb5 2f8b      	MOV  R24,R27
000fb6 0f88      	ADD  R24,R24
000fb7 0b88      	SBC  R24,R24
000fb8 2f98      	MOV  R25,R24
000fb9 9508      	RET
                 
                 __MULW12U:
000fba 9ffa      	MUL  R31,R26
000fbb 2df0      	MOV  R31,R0
000fbc 9feb      	MUL  R30,R27
000fbd 0df0      	ADD  R31,R0
000fbe 9fea      	MUL  R30,R26
000fbf 2de0      	MOV  R30,R0
000fc0 0df1      	ADD  R31,R1
000fc1 9508      	RET
                 
                 __DIVB21U:
000fc2 2400      	CLR  R0
000fc3 e098      	LDI  R25,8
                 __DIVB21U1:
000fc4 0faa      	LSL  R26
000fc5 1c00      	ROL  R0
000fc6 1a0e      	SUB  R0,R30
000fc7 f410      	BRCC __DIVB21U2
000fc8 0e0e      	ADD  R0,R30
000fc9 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000fca 60a1      	SBR  R26,1
                 __DIVB21U3:
000fcb 959a      	DEC  R25
000fcc f7b9      	BRNE __DIVB21U1
000fcd 2fea      	MOV  R30,R26
000fce 2da0      	MOV  R26,R0
000fcf 9508      	RET
                 
                 __DIVB21:
000fd0 d039      	RCALL __CHKSIGNB
000fd1 dff0      	RCALL __DIVB21U
000fd2 f40e      	BRTC __DIVB211
000fd3 95e1      	NEG  R30
                 __DIVB211:
000fd4 9508      	RET
                 
                 __DIVD21U:
000fd5 933f      	PUSH R19
000fd6 934f      	PUSH R20
000fd7 935f      	PUSH R21
000fd8 2400      	CLR  R0
000fd9 2411      	CLR  R1
000fda 2744      	CLR  R20
000fdb 2755      	CLR  R21
000fdc e230      	LDI  R19,32
                 __DIVD21U1:
000fdd 0faa      	LSL  R26
000fde 1fbb      	ROL  R27
000fdf 1f88      	ROL  R24
000fe0 1f99      	ROL  R25
000fe1 1c00      	ROL  R0
000fe2 1c11      	ROL  R1
000fe3 1f44      	ROL  R20
000fe4 1f55      	ROL  R21
000fe5 1a0e      	SUB  R0,R30
000fe6 0a1f      	SBC  R1,R31
000fe7 0b46      	SBC  R20,R22
000fe8 0b57      	SBC  R21,R23
000fe9 f428      	BRCC __DIVD21U2
000fea 0e0e      	ADD  R0,R30
000feb 1e1f      	ADC  R1,R31
000fec 1f46      	ADC  R20,R22
000fed 1f57      	ADC  R21,R23
000fee c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000fef 60a1      	SBR  R26,1
                 __DIVD21U3:
000ff0 953a      	DEC  R19
000ff1 f759      	BRNE __DIVD21U1
000ff2 01fd      	MOVW R30,R26
000ff3 01bc      	MOVW R22,R24
000ff4 01d0      	MOVW R26,R0
000ff5 01ca      	MOVW R24,R20
000ff6 915f      	POP  R21
000ff7 914f      	POP  R20
000ff8 913f      	POP  R19
000ff9 9508      	RET
                 
                 __MODB21:
000ffa 94e8      	CLT
000ffb ffa7      	SBRS R26,7
000ffc c002      	RJMP __MODB211
000ffd 95a1      	NEG  R26
000ffe 9468      	SET
                 __MODB211:
000fff fde7      	SBRC R30,7
001000 95e1      	NEG  R30
001001 dfc0      	RCALL __DIVB21U
001002 2fea      	MOV  R30,R26
001003 f40e      	BRTC __MODB212
001004 95e1      	NEG  R30
                 __MODB212:
001005 9508      	RET
                 
                 __MODD21U:
001006 dfce      	RCALL __DIVD21U
001007 01fd      	MOVW R30,R26
001008 01bc      	MOVW R22,R24
001009 9508      	RET
                 
                 __CHKSIGNB:
00100a 94e8      	CLT
00100b ffe7      	SBRS R30,7
00100c c002      	RJMP __CHKSB1
00100d 95e1      	NEG  R30
00100e 9468      	SET
                 __CHKSB1:
00100f ffa7      	SBRS R26,7
001010 c004      	RJMP __CHKSB2
001011 95a1      	NEG  R26
001012 f800      	BLD  R0,0
001013 9403      	INC  R0
001014 fa00      	BST  R0,0
                 __CHKSB2:
001015 9508      	RET
                 
                 __GETW1P:
001016 91ed      	LD   R30,X+
001017 91fc      	LD   R31,X
001018 9711      	SBIW R26,1
001019 9508      	RET
                 
                 __GETD1P:
00101a 91ed      	LD   R30,X+
00101b 91fd      	LD   R31,X+
00101c 916d      	LD   R22,X+
00101d 917c      	LD   R23,X
00101e 9713      	SBIW R26,3
00101f 9508      	RET
                 
                 __PUTDP1:
001020 93ed      	ST   X+,R30
001021 93fd      	ST   X+,R31
001022 936d      	ST   X+,R22
001023 937c      	ST   X,R23
001024 9508      	RET
                 
                 __GETD1S0:
001025 81e8      	LD   R30,Y
001026 81f9      	LDD  R31,Y+1
001027 816a      	LDD  R22,Y+2
001028 817b      	LDD  R23,Y+3
001029 9508      	RET
                 
                 __GETD2S0:
00102a 81a8      	LD   R26,Y
00102b 81b9      	LDD  R27,Y+1
00102c 818a      	LDD  R24,Y+2
00102d 819b      	LDD  R25,Y+3
00102e 9508      	RET
                 
                 __PUTD1S0:
00102f 83e8      	ST   Y,R30
001030 83f9      	STD  Y+1,R31
001031 836a      	STD  Y+2,R22
001032 837b      	STD  Y+3,R23
001033 9508      	RET
                 
                 __PUTPARD1L:
001034 e060      	LDI  R22,0
001035 e070      	LDI  R23,0
                 __PUTPARD1:
001036 937a      	ST   -Y,R23
001037 936a      	ST   -Y,R22
001038 93fa      	ST   -Y,R31
001039 93ea      	ST   -Y,R30
00103a 9508      	RET
                 
                 __CDF2U:
00103b 9468      	SET
00103c c001      	RJMP __CDF2U0
                 __CDF2:
00103d 94e8      	CLT
                 __CDF2U0:
00103e d001      	RCALL __SWAPD12
00103f de19      	RCALL __CDF1U0
                 
                 __SWAPD12:
001040 2e18      	MOV  R1,R24
001041 2f86      	MOV  R24,R22
001042 2d61      	MOV  R22,R1
001043 2e19      	MOV  R1,R25
001044 2f97      	MOV  R25,R23
001045 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001046 2e1b      	MOV  R1,R27
001047 2fbf      	MOV  R27,R31
001048 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001049 2e1a      	MOV  R1,R26
00104a 2fae      	MOV  R26,R30
00104b 2de1      	MOV  R30,R1
00104c 9508      	RET
                 
                 __CPD10:
00104d 9730      	SBIW R30,0
00104e 4060      	SBCI R22,0
00104f 4070      	SBCI R23,0
001050 9508      	RET
                 
                 __CPD02:
001051 2400      	CLR  R0
001052 160a      	CP   R0,R26
001053 060b      	CPC  R0,R27
001054 0608      	CPC  R0,R24
001055 0609      	CPC  R0,R25
001056 9508      	RET
                 
                 __SAVELOCR6:
001057 935a      	ST   -Y,R21
                 __SAVELOCR5:
001058 934a      	ST   -Y,R20
                 __SAVELOCR4:
001059 933a      	ST   -Y,R19
                 __SAVELOCR3:
00105a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00105b 931a      	ST   -Y,R17
00105c 930a      	ST   -Y,R16
00105d 9508      	RET
                 
                 __LOADLOCR6:
00105e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00105f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001060 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001061 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001062 8119      	LDD  R17,Y+1
001063 8108      	LD   R16,Y
001064 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
001065 0fac      	ADD  R26,R28
001066 1fbd      	ADC  R27,R29
                 __INITLOC0:
001067 9005      	LPM  R0,Z+
001068 920d      	ST   X+,R0
001069 958a      	DEC  R24
00106a f7e1      	BRNE __INITLOC0
00106b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 109 r1 :  51 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   6 r9 :   4 r10:   0 r11:   0 r12:   5 r13:   2 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  72 r21: 105 r22: 154 r23: 137 
r24: 102 r25:  87 r26: 310 r27: 160 r28:  98 r29:   2 r30: 827 r31: 355 
x  : 176 y  : 602 z  :  61 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  22 
adiw  :  54 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  69 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  78 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 358 
cbi   :   2 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  71 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  23 cpc   :  28 cpi   : 126 cpse  :   0 dec   :  12 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  26 inc   :   6 jmp   :  54 ld    : 134 ldd   : 284 
ldi   : 420 lds   :  10 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 111 
movw  : 147 mul   :  15 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  30 pop   :  57 push  :  57 rcall :  87 
ret   : 135 reti  :   3 rjmp  : 195 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  68 sbi   :   6 sbic  :   0 sbis  :   2 sbiw  :  46 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 279 std   : 128 sts   :  13 sub   :   6 subi  : 104 
swap  :   0 tst   :  27 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0020d8   8182    226   8408  131072   6.4%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 11 warnings
