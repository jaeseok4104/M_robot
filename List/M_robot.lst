
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Fri Feb 28 14:16:37 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01eb 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 06f6 	JMP  _hall_sensor_detection1
00000c 940c 0704 	JMP  _hall_sensor_detection2
00000e 940c 0712 	JMP  _hall_sensor_detection3
000010 940c 0727 	JMP  _hall_sensor_detection4
000012 940c 04ef 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 050c 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 04fb 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 0536 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0557 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 0000
000169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016a 0000
00016b 0000
00016c 0000
00016d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0000
000174 0000
000175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000176 0000
000177 0000
000178 0000
000179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017a 0000
00017b 0000
00017c 0000
00017d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00017e 0000
00017f 0000
000180 0000
000181 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000182 0000
000183 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
000184 253c
000185 2c64
000186 6425
000187 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
000188 3e64
000189 3c00
00018a 6425
00018b 003e      	.DB  0x64,0x3E,0x0,0x3C,0x25,0x64,0x3E,0x0
00018c 2e25
00018d 6633
00018e 202c
00018f 2e25      	.DB  0x25,0x2E,0x33,0x66,0x2C,0x20,0x25,0x2E
000190 2c64
000191 2520
000192 2c64
000193 2520      	.DB  0x64,0x2C,0x20,0x25,0x64,0x2C,0x20,0x25
000194 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1189): warning: .cseg .db misalignment - padding zero byte
000195 0000      	.DB  0x64,0xA,0x0
                 _0x80003:
000196 0000
000197 0000
000198 0000
000199 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019a 0000
00019b 0000
00019c 0000
00019d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019e 0000
00019f 0000
0001a0 0000
0001a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a2 0000
0001a3 0000
0001a4 0000
0001a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a6 0000
0001a7 0000
0001a8 0000
0001a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001aa 0000
0001ab 0000
0001ac 0000
0001ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ae 0000
0001af 0000
0001b0 0000
0001b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b2 0000
0001b3 0000
0001b4 0000
0001b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b6 0000
0001b7 0000
0001b8 0000
0001b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ba 0000
0001bb 0000
0001bc 0000
0001bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001be 0000
0001bf 0000
0001c0 0000
0001c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c2 0000
0001c3 0000
0001c4 0000
0001c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c6 0000
0001c7 0000
0001c8 0000
0001c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ca 0000
0001cb 0000
0001cc 0000
0001cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ce 0000
0001cf 0000
0001d0 0000
0001d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d2 0000
0001d3 0000
0001d4 0000
0001d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001d6 0000
0001d7 0000
0001d8 0000
0001d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001da 0000
0001db 0000
0001dc 0000
0001dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001de 4e2d
0001df 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1210): warning: .cseg .db misalignment - padding zero byte
0001e0 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1212): warning: .cseg .db misalignment - padding zero byte
0001e1 0001      	.DB  0x1
                 _0x2080000:
0001e2 4e2d
0001e3 4e41
0001e4 4900
0001e5 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1215): warning: .cseg .db misalignment - padding zero byte
0001e6 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001e7 0001      	.DW  0x01
0001e8 058a      	.DW  __seed_G104
0001e9 03c2      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001ea 0000      	.DW  0
                 
                 __RESET:
0001eb 94f8      	CLI
0001ec 27ee      	CLR  R30
0001ed bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001ee e0f1      	LDI  R31,1
0001ef bff5      	OUT  MCUCR,R31
0001f0 bfe5      	OUT  MCUCR,R30
0001f1 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001f3 e1f8      	LDI  R31,0x18
0001f4 bdf1      	OUT  WDTCR,R31
0001f5 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001f6 e08d      	LDI  R24,(14-2)+1
0001f7 e0a2      	LDI  R26,2
0001f8 27bb      	CLR  R27
                 __CLEAR_REG:
0001f9 93ed      	ST   X+,R30
0001fa 958a      	DEC  R24
0001fb f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001fc e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001fd e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001fe e0a0      	LDI  R26,LOW(__SRAM_START)
0001ff e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000200 93ed      	ST   X+,R30
000201 9701      	SBIW R24,1
000202 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000203 ecee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000204 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000205 9185      	LPM  R24,Z+
000206 9195      	LPM  R25,Z+
000207 9700      	SBIW R24,0
000208 f061      	BREQ __GLOBAL_INI_END
000209 91a5      	LPM  R26,Z+
00020a 91b5      	LPM  R27,Z+
00020b 9005      	LPM  R0,Z+
00020c 9015      	LPM  R1,Z+
00020d 01bf      	MOVW R22,R30
00020e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00020f 9005      	LPM  R0,Z+
000210 920d      	ST   X+,R0
000211 9701      	SBIW R24,1
000212 f7e1      	BRNE __GLOBAL_INI_LOOP
000213 01fb      	MOVW R30,R22
000214 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000215 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000216 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000217 bfed      	OUT  SPL,R30
000218 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000219 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00021a e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00021b e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00021c 940c 021e 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define PREDICTION 0.3
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;long int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; 0000 001B     float a_buff;
                 ; 0000 001C     float v_buff;
                 ; 0000 001D 
                 ; 0000 001E     int velocity = 0;
                 ; 0000 001F     int angularV = 0;
                 ; 0000 0020     int velocity_R = 0;
                 ; 0000 0021     int velocity_L = 0;
                 ; 0000 0022     int del_ms = 0;
                 ; 0000 0023     float del_s = 0;
                 ; 0000 0024     float diameter = 0;
                 ; 0000 0025     int d_diameter = 0;
                 ; 0000 0026     float _angular = 0;
                 ; 0000 0027     int d__angular = 0;
                 ; 0000 0028 
                 ; 0000 0029 
                 ; 0000 002A 
                 ; 0000 002B     int currentRPM_R = 0;
                 ; 0000 002C     int currentRPM_L = 0;
                 ; 0000 002D     float currentV_R = 0;
                 ; 0000 002E     float currentV_L = 0;
                 ; 0000 002F     int goal_current_R = 0;
                 ; 0000 0030     int goal_current_L = 0;
                 ; 0000 0031     float goal_currentV_R = 0;
                 ; 0000 0032     float goal_currentV_L = 0;
                 ; 0000 0033 
                 ; 0000 0034 
                 ; 0000 0035     float d_velocity = 0;
                 ; 0000 0036     float d_angularV = 0;
                 ; 0000 0037     float control_time = 0;
                 ; 0000 0038     float g_velocity = 0;
                 ; 0000 0039     float g_angularV = 0;
                 ; 0000 003A 
                 ; 0000 003B     float d_x = 0;
                 ; 0000 003C     float d_y = 0;
                 ; 0000 003D     float d_angular = 0;
                 ; 0000 003E     int d_angular_circula = 0;
                 ; 0000 003F     float g_x = 0;
                 ; 0000 0040     float g_y = 0;
                 ; 0000 0041     float g_angular = 0;
                 ; 0000 0042     int g_angular_circula = 0;
                 ; 0000 0043 
                 ; 0000 0044     float TIMER1_TIME = 0;
                 ; 0000 0045     float TIMER0_TIME = 0;
                 ; 0000 0046     float TIMER0_TIME_print = 0;
                 ; 0000 0047 
                 ; 0000 0048     char rootine_test = 0;
                 ; 0000 0049     char STOP_FLAG = 0;
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C     float hall_x = 0;
                 ; 0000 004D     float hall_y = 0;
                 ; 0000 004E     float hall_angular = 0;
                 ; 0000 004F     int hall_angular_circula = 0;
                 ; 0000 0050 
                 ; 0000 0051     float hall_velocity = 0;
                 ; 0000 0052     float hall_angularV = 0;
                 ; 0000 0053 
                 ; 0000 0054     float motorR_distance = 0;
                 ; 0000 0055     float motorL_distance = 0;
                 ; 0000 0056 
                 ; 0000 0057     unsigned char BUFF[500] = {0,};
                 ; 0000 0058 
                 ; 0000 0059     usart1_init(bps_115200);
00021e 97ef      	SBIW R28,63
00021f 97ef      	SBIW R28,63
000220 9726      	SBIW R28,6
000221 50d2      	SUBI R29,2
                +
000222 e78c     +LDI R24 , LOW ( 636 )
000223 e092     +LDI R25 , HIGH ( 636 )
                 	__GETWRN 24,25,636
000224 e0a0      	LDI  R26,LOW(0)
000225 e0b0      	LDI  R27,HIGH(0)
000226 e8ec      	LDI  R30,LOW(_0x3*2)
000227 e0f0      	LDI  R31,HIGH(_0x3*2)
000228 940e 135d 	CALL __INITLOCW
                 ;	a_buff -> Y+640
                 ;	v_buff -> Y+636
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+634
                 ;	del_ms -> Y+632
                 ;	del_s -> Y+628
                 ;	diameter -> Y+624
                 ;	d_diameter -> Y+622
                 ;	_angular -> Y+618
                 ;	d__angular -> Y+616
                 ;	currentRPM_R -> Y+614
                 ;	currentRPM_L -> Y+612
                 ;	currentV_R -> Y+608
                 ;	currentV_L -> Y+604
                 ;	goal_current_R -> Y+602
                 ;	goal_current_L -> Y+600
                 ;	goal_currentV_R -> Y+596
                 ;	goal_currentV_L -> Y+592
                 ;	d_velocity -> Y+588
                 ;	d_angularV -> Y+584
                 ;	control_time -> Y+580
                 ;	g_velocity -> Y+576
                 ;	g_angularV -> Y+572
                 ;	d_x -> Y+568
                 ;	d_y -> Y+564
                 ;	d_angular -> Y+560
                 ;	d_angular_circula -> Y+558
                 ;	g_x -> Y+554
                 ;	g_y -> Y+550
                 ;	g_angular -> Y+546
                 ;	g_angular_circula -> Y+544
                 ;	TIMER1_TIME -> Y+540
                 ;	TIMER0_TIME -> Y+536
                 ;	TIMER0_TIME_print -> Y+532
                 ;	rootine_test -> Y+531
                 ;	STOP_FLAG -> Y+530
                 ;	hall_x -> Y+526
                 ;	hall_y -> Y+522
                 ;	hall_angular -> Y+518
                 ;	hall_angular_circula -> Y+516
                 ;	hall_velocity -> Y+512
                 ;	hall_angularV -> Y+508
                 ;	motorR_distance -> Y+504
                 ;	motorL_distance -> Y+500
                 ;	BUFF -> Y+0
                +
00022a e000     +LDI R16 , LOW ( 0 )
00022b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00022c e020     +LDI R18 , LOW ( 0 )
00022d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00022e e040     +LDI R20 , LOW ( 0 )
00022f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000230 e0e7      	LDI  R30,LOW(7)
000231 e0f0      	LDI  R31,HIGH(7)
000232 93fa      	ST   -Y,R31
000233 93ea      	ST   -Y,R30
000234 940e 058e 	CALL _usart1_init
                 ; 0000 005A     usart0_init(bps_115200);
000236 e0e7      	LDI  R30,LOW(7)
000237 e0f0      	LDI  R31,HIGH(7)
000238 93fa      	ST   -Y,R31
000239 93ea      	ST   -Y,R30
00023a 940e 05a6 	CALL _usart0_init
                 ; 0000 005B     timer2_init();
00023c d2e1      	RCALL _timer2_init
                 ; 0000 005C     timer0_init();
00023d d2e6      	RCALL _timer0_init
                 ; 0000 005D     timer1_init();
00023e d2e9      	RCALL _timer1_init
                 ; 0000 005E     EXT_INT_init();
00023f 940e 06ed 	CALL _EXT_INT_init
                 ; 0000 005F     SREG |= 0x80;
000241 9478      	BSET 7
                 ; 0000 0060     DDRB.1 = 1;
000242 9ab9      	SBI  0x17,1
                 ; 0000 0061     DDRB.2 = 1;
000243 9aba      	SBI  0x17,2
                 ; 0000 0062     DDRB.3 = 1;
000244 9abb      	SBI  0x17,3
                 ; 0000 0063     delay_ms(5000);
000245 e8e8      	LDI  R30,LOW(5000)
000246 e1f3      	LDI  R31,HIGH(5000)
000247 940e 0de1 	CALL SUBOPT_0x0
                 ; 0000 0064 
                 ; 0000 0065     TIMER0_OVERFLOW = 0;
000249 940e 0de5 	CALL SUBOPT_0x1
                 ; 0000 0066     TCNT0 = 0;
                 ; 0000 0067 
                 ; 0000 0068     while(1)
                 _0xA:
                 ; 0000 0069     {
                 ; 0000 006A         if(CHECK_GETS)
00024b 91e0 0581 	LDS  R30,_CHECK_GETS
00024d 30e0      	CPI  R30,0
00024e f411      	BRNE PC+3
00024f 940c 0350 	JMP _0xD
                 ; 0000 006B         {
                 ; 0000 006C             UCSR1B &= ~(1<<RXEN1);
000251 91e0 009a 	LDS  R30,154
000253 7eef      	ANDI R30,0xEF
000254 93e0 009a 	STS  154,R30
                 ; 0000 006D             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
000256 e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
000257 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000258 93fa      	ST   -Y,R31
000259 93ea      	ST   -Y,R30
                +
00025a e0e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00025b e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00025c 93fa      	ST   -Y,R31
00025d 93ea      	ST   -Y,R30
00025e b7ed      	IN   R30,SPL
00025f b7fe      	IN   R31,SPH
000260 9731      	SBIW R30,1
000261 940e 132e 	CALL __PUTPARD1L
000263 931f      	PUSH R17
000264 930f      	PUSH R16
000265 b7ed      	IN   R30,SPL
000266 b7fe      	IN   R31,SPH
000267 9731      	SBIW R30,1
000268 940e 132e 	CALL __PUTPARD1L
00026a 933f      	PUSH R19
00026b 932f      	PUSH R18
00026c 01fe      	MOVW R30,R28
00026d 57ec      	SUBI R30,LOW(-(644))
00026e 4ffd      	SBCI R31,HIGH(-(644))
00026f 2766      	CLR  R22
000270 2777      	CLR  R23
000271 940e 1330 	CALL __PUTPARD1
000273 e08c      	LDI  R24,12
000274 940e 0bfd 	CALL _sscanf
000276 9660      	ADIW R28,16
000277 912f      	POP  R18
000278 913f      	POP  R19
000279 910f      	POP  R16
00027a 911f      	POP  R17
                 ; 0000 006E             // sscanf(VELOCITY_BUFF,"<%d>", &d_diameter);
                 ; 0000 006F             sscanf(VELOCITY_BUFF, "<%d>",&d__angular);
00027b e6ec      	LDI  R30,LOW(_VELOCITY_BUFF)
00027c e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
00027d 93fa      	ST   -Y,R31
00027e 93ea      	ST   -Y,R30
                +
00027f e1e3     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
000280 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
000281 93fa      	ST   -Y,R31
000282 93ea      	ST   -Y,R30
000283 01fe      	MOVW R30,R28
000284 59e4      	SUBI R30,LOW(-(620))
000285 4ffd      	SBCI R31,HIGH(-(620))
000286 2766      	CLR  R22
000287 2777      	CLR  R23
000288 940e 1330 	CALL __PUTPARD1
00028a e084      	LDI  R24,4
00028b 940e 0bfd 	CALL _sscanf
00028d 9628      	ADIW R28,8
                 ; 0000 0070 
                 ; 0000 0071             if(!del_ms){
00028e 940e 0dec 	CALL SUBOPT_0x2
000290 9730      	SBIW R30,0
000291 f4b1      	BRNE _0xE
                 ; 0000 0072                 d_x = 0;
000292 e0e0      	LDI  R30,LOW(0)
                +
000293 01de     +MOVW R26 , R28
000294 5ca8     +SUBI R26 , LOW ( - 568 )
000295 4fbd     +SBCI R27 , HIGH ( - 568 )
000296 93ed     +ST X + , R30
000297 93ed     +ST X + , R30
000298 93ed     +ST X + , R30
000299 93ec     +ST X , R30
                 	__CLRD1SX 568
                 ; 0000 0073                 d_y = 0;
                +
00029a 01de     +MOVW R26 , R28
00029b 5cac     +SUBI R26 , LOW ( - 564 )
00029c 4fbd     +SBCI R27 , HIGH ( - 564 )
00029d 93ed     +ST X + , R30
00029e 93ed     +ST X + , R30
00029f 93ed     +ST X + , R30
0002a0 93ec     +ST X , R30
                 	__CLRD1SX 564
                 ; 0000 0074                 d_angular = 0;
                +
0002a1 01de     +MOVW R26 , R28
0002a2 5da0     +SUBI R26 , LOW ( - 560 )
0002a3 4fbd     +SBCI R27 , HIGH ( - 560 )
0002a4 93ed     +ST X + , R30
0002a5 93ed     +ST X + , R30
0002a6 93ed     +ST X + , R30
0002a7 93ec     +ST X , R30
                 	__CLRD1SX 560
                 ; 0000 0075             }
                 ; 0000 0076 
                 ; 0000 0077             // if(d_diameter>0){
                 ; 0000 0078             //     diameter = (float)(((float)d_diameter/100)-0.05);
                 ; 0000 0079             //     if((float)(MOTOR_CONT_VELOCITY_MAX_SPEED*MOTOR_DRIVE_VELOCITY_CEL_TIME)<diameter)
                 ; 0000 007A             //     {
                 ; 0000 007B             //         del_s = (float)((diameter + (MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED))/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 007C             //         del_s -= MOTOR_DRIVE_VELOCITY_CEL_TIME;
                 ; 0000 007D             //     }
                 ; 0000 007E             //     else del_s = (float)(((MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED)+diameter)/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 007F             //     del_ms = (int)(del_s*1000);
                 ; 0000 0080             //     v_buff = MOTOR_CONT_VELOCITY_MAX_SPEED;
                 ; 0000 0081             //     a_buff = 0;
                 ; 0000 0082             // }
                 ; 0000 0083             // else{
                 ; 0000 0084             //     diameter = (float)(((float)d_diameter/100)+0.05);
                 ; 0000 0085             //     diameter = -diameter;
                 ; 0000 0086             //     if((float)(MOTOR_CONT_VELOCITY_MAX_SPEED*MOTOR_DRIVE_VELOCITY_CEL_TIME)<diameter)
                 ; 0000 0087             //     {
                 ; 0000 0088             //         del_s = (float)((diameter + (MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED))/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 0089             //         del_s -= MOTOR_DRIVE_VELOCITY_CEL_TIME;
                 ; 0000 008A             //     }
                 ; 0000 008B             //     else del_s = (float)(((MOTOR_DRIVE_VELOCITY_CEL_TIME*MOTOR_CONT_VELOCITY_MAX_SPEED)+diameter)/MOTOR_CONT_VELOCITY_MAX_SPEED);
                 ; 0000 008C             //     del_ms = (int)(del_s*1000);
                 ; 0000 008D 
                 ; 0000 008E             //     v_buff = -MOTOR_CONT_VELOCITY_MAX_SPEED;
                 ; 0000 008F             //     a_buff = 0;
                 ; 0000 0090             // }
                 ; 0000 0091 
                 ; 0000 0092             if(d__angular>0){
                 _0xE:
                +
0002a8 01de     +MOVW R26 , R28
0002a9 59a8     +SUBI R26 , LOW ( - 616 )
0002aa 4fbd     +SBCI R27 , HIGH ( - 616 )
0002ab 900d     +LD R0 , X +
0002ac 91bc     +LD R27 , X
0002ad 2da0     +MOV R26 , R0
                 	__GETW2SX 616
0002ae 940e 134b 	CALL __CPW02
0002b0 f534      	BRGE _0xF
                 ; 0000 0093                 _angular = (float)((float)(d__angular-14.0)/Circular);
0002b1 940e 0df3 	CALL SUBOPT_0x3
0002b3 01df      	MOVW R26,R30
0002b4 01cb      	MOVW R24,R22
                +
0002b5 e0e0     +LDI R30 , LOW ( 0x41600000 )
0002b6 e0f0     +LDI R31 , HIGH ( 0x41600000 )
0002b7 e660     +LDI R22 , BYTE3 ( 0x41600000 )
0002b8 e471     +LDI R23 , BYTE4 ( 0x41600000 )
                 	__GETD1N 0x41600000
0002b9 940e 0dfe 	CALL SUBOPT_0x4
0002bb 940e 0e03 	CALL SUBOPT_0x5
                 ; 0000 0094                 if((float)(MOTOR_CONT_ANGULAR_MAX_SPEED*MOTOR_DRIVE_ANGULAR_CEL_TIME)<_angular)
0002bd 940e 0e13 	CALL SUBOPT_0x6
0002bf 940e 122a 	CALL __CMPF12
0002c1 f428      	BRSH _0x10
                 ; 0000 0095                 {
                 ; 0000 0096                     del_s = (float)((_angular + (MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED))/MOTOR_CONT_ANGULAR_MAX_SPEED);
0002c2 940e 0e18 	CALL SUBOPT_0x7
0002c4 940e 0e2c 	CALL SUBOPT_0x8
                 ; 0000 0097                     del_s -= MOTOR_DRIVE_ANGULAR_CEL_TIME;
0002c6 c002      	RJMP _0x18
                 ; 0000 0098                 }
                 ; 0000 0099                 else del_s = (float)(((MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED)+_angular)/MOTOR_CONT_ANGULAR_MAX_SPEED);
                 _0x10:
0002c7 940e 0e18 	CALL SUBOPT_0x7
                 _0x18:
                +
0002c9 01de     +MOVW R26 , R28
0002ca 58ac     +SUBI R26 , LOW ( - 628 )
0002cb 4fbd     +SBCI R27 , HIGH ( - 628 )
0002cc 93ed     +ST X + , R30
0002cd 93fd     +ST X + , R31
0002ce 936d     +ST X + , R22
0002cf 937c     +ST X , R23
                 	__PUTD1SX 628
                 ; 0000 009A                 del_ms = (int)(del_s*1000);
0002d0 940e 0e3a 	CALL SUBOPT_0x9
                 ; 0000 009B 
                 ; 0000 009C                 v_buff = 0;
                 ; 0000 009D                 a_buff = MOTOR_CONT_ANGULAR_MAX_SPEED;
                +
0002d2 e0e0     +LDI R30 , LOW ( 0x3FC00000 )
0002d3 e0f0     +LDI R31 , HIGH ( 0x3FC00000 )
0002d4 ec60     +LDI R22 , BYTE3 ( 0x3FC00000 )
0002d5 e37f     +LDI R23 , BYTE4 ( 0x3FC00000 )
                 	__GETD1N 0x3FC00000
0002d6 c02c      	RJMP _0x19
                 ; 0000 009E             }
                 ; 0000 009F             else{
                 _0xF:
                 ; 0000 00A0                 _angular = (float)((float)(d__angular+14.0)/Circular);
0002d7 940e 0df3 	CALL SUBOPT_0x3
                +
0002d9 e0a0     +LDI R26 , LOW ( 0x41600000 )
0002da e0b0     +LDI R27 , HIGH ( 0x41600000 )
0002db e680     +LDI R24 , BYTE3 ( 0x41600000 )
0002dc e491     +LDI R25 , BYTE4 ( 0x41600000 )
                 	__GETD2N 0x41600000
0002dd 940e 1147 	CALL __ADDF12
0002df 940e 0e03 	CALL SUBOPT_0x5
                 ; 0000 00A1                 _angular = -_angular;
0002e1 940e 10a1 	CALL __ANEGF1
                +
0002e3 01de     +MOVW R26 , R28
0002e4 59a6     +SUBI R26 , LOW ( - 618 )
0002e5 4fbd     +SBCI R27 , HIGH ( - 618 )
0002e6 93ed     +ST X + , R30
0002e7 93fd     +ST X + , R31
0002e8 936d     +ST X + , R22
0002e9 937c     +ST X , R23
                 	__PUTD1SX 618
                 ; 0000 00A2                 if((float)(MOTOR_CONT_ANGULAR_MAX_SPEED*MOTOR_DRIVE_ANGULAR_CEL_TIME)<_angular)
0002ea 940e 0e13 	CALL SUBOPT_0x6
0002ec 940e 122a 	CALL __CMPF12
0002ee f428      	BRSH _0x13
                 ; 0000 00A3                 {
                 ; 0000 00A4                     del_s = (float)((_angular + (MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED))/MOTOR_CONT_ANGULAR_MAX_SPEED);
0002ef 940e 0e18 	CALL SUBOPT_0x7
0002f1 940e 0e2c 	CALL SUBOPT_0x8
                 ; 0000 00A5                     del_s -= MOTOR_DRIVE_ANGULAR_CEL_TIME;
0002f3 c002      	RJMP _0x1A
                 ; 0000 00A6                 }
                 ; 0000 00A7                 else del_s = (float)(((MOTOR_DRIVE_ANGULAR_CEL_TIME*MOTOR_CONT_ANGULAR_MAX_SPEED)+_angular)/MOTOR_CONT_ANGULAR_MAX_SPEED);
                 _0x13:
0002f4 940e 0e18 	CALL SUBOPT_0x7
                 _0x1A:
                +
0002f6 01de     +MOVW R26 , R28
0002f7 58ac     +SUBI R26 , LOW ( - 628 )
0002f8 4fbd     +SBCI R27 , HIGH ( - 628 )
0002f9 93ed     +ST X + , R30
0002fa 93fd     +ST X + , R31
0002fb 936d     +ST X + , R22
0002fc 937c     +ST X , R23
                 	__PUTD1SX 628
                 ; 0000 00A8                 del_ms = (int)(del_s*1000);
0002fd 940e 0e3a 	CALL SUBOPT_0x9
                 ; 0000 00A9 
                 ; 0000 00AA                 v_buff = 0;
                 ; 0000 00AB                 a_buff = -MOTOR_CONT_ANGULAR_MAX_SPEED;
                +
0002ff e0e0     +LDI R30 , LOW ( 0xBFC00000 )
000300 e0f0     +LDI R31 , HIGH ( 0xBFC00000 )
000301 ec60     +LDI R22 , BYTE3 ( 0xBFC00000 )
000302 eb7f     +LDI R23 , BYTE4 ( 0xBFC00000 )
                 	__GETD1N 0xBFC00000
                 _0x19:
                +
000303 01de     +MOVW R26 , R28
000304 58a0     +SUBI R26 , LOW ( - 640 )
000305 4fbd     +SBCI R27 , HIGH ( - 640 )
000306 93ed     +ST X + , R30
000307 93fd     +ST X + , R31
000308 936d     +ST X + , R22
000309 937c     +ST X , R23
                 	__PUTD1SX 640
                 ; 0000 00AC             }
                 ; 0000 00AD 
                 ; 0000 00AE 
                 ; 0000 00AF             // v_buff = (float)velocity/1000;
                 ; 0000 00B0             // a_buff = (float)angularV/1000;
                 ; 0000 00B1             TIMER0_TIME_print = 0;
00030a e0e0      	LDI  R30,LOW(0)
                +
00030b 01de     +MOVW R26 , R28
00030c 5eac     +SUBI R26 , LOW ( - 532 )
00030d 4fbd     +SBCI R27 , HIGH ( - 532 )
00030e 93ed     +ST X + , R30
00030f 93ed     +ST X + , R30
000310 93ed     +ST X + , R30
000311 93ec     +ST X , R30
                 	__CLRD1SX 532
                 ; 0000 00B2             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000312 01fe      	MOVW R30,R28
000313 58e4      	SUBI R30,LOW(-(636))
000314 4ffd      	SBCI R31,HIGH(-(636))
000315 93fa      	ST   -Y,R31
000316 93ea      	ST   -Y,R30
000317 01fe      	MOVW R30,R28
000318 57ee      	SUBI R30,LOW(-(642))
000319 4ffd      	SBCI R31,HIGH(-(642))
00031a 93fa      	ST   -Y,R31
00031b 93ea      	ST   -Y,R30
00031c b7ed      	IN   R30,SPL
00031d b7fe      	IN   R31,SPH
00031e 9731      	SBIW R30,1
00031f 93fa      	ST   -Y,R31
000320 93ea      	ST   -Y,R30
000321 935f      	PUSH R21
000322 934f      	PUSH R20
000323 01fe      	MOVW R30,R28
000324 58e0      	SUBI R30,LOW(-(640))
000325 4ffd      	SBCI R31,HIGH(-(640))
000326 93fa      	ST   -Y,R31
000327 93ea      	ST   -Y,R30
000328 940e 0653 	CALL _Make_MSPEED
00032a 914f      	POP  R20
00032b 915f      	POP  R21
                 ; 0000 00B3 
                 ; 0000 00B4             oper_Disapath(velocity_R, velocity_L);
00032c 935a      	ST   -Y,R21
00032d 934a      	ST   -Y,R20
                +
00032e 01fe     +MOVW R30 , R28
00032f 58e4     +SUBI R30 , LOW ( - 636 )
000330 4ffd     +SBCI R31 , HIGH ( - 636 )
000331 9001     +LD R0 , Z +
000332 81f0     +LD R31 , Z
000333 2de0     +MOV R30 , R0
                 	__GETW1SX 636
000334 93fa      	ST   -Y,R31
000335 93ea      	ST   -Y,R30
000336 940e 06cf 	CALL _oper_Disapath
                 ; 0000 00B5 
                 ; 0000 00B6             TIMER1_TIME = 0;
000338 e0e0      	LDI  R30,LOW(0)
                +
000339 01de     +MOVW R26 , R28
00033a 5ea4     +SUBI R26 , LOW ( - 540 )
00033b 4fbd     +SBCI R27 , HIGH ( - 540 )
00033c 93ed     +ST X + , R30
00033d 93ed     +ST X + , R30
00033e 93ed     +ST X + , R30
00033f 93ec     +ST X , R30
                 	__CLRD1SX 540
                 ; 0000 00B7             TIMER1_OVERFLOW = 0;
000340 940e 0e58 	CALL SUBOPT_0xA
                 ; 0000 00B8             TCNT1L = 0;
000342 bdec      	OUT  0x2C,R30
                 ; 0000 00B9 
                 ; 0000 00BA             STOP_FLAG = 1;
000343 e0e1      	LDI  R30,LOW(1)
                +
000344 01de     +MOVW R26 , R28
000345 5eae     +SUBI R26 , LOW ( - 530 )
000346 4fbd     +SBCI R27 , HIGH ( - 530 )
000347 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00BB             CHECK_GETS = 0;
000348 e0e0      	LDI  R30,LOW(0)
000349 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0000 00BC             UCSR1B |=(1<<RXEN1);
00034b 91e0 009a 	LDS  R30,154
00034d 61e0      	ORI  R30,0x10
00034e 93e0 009a 	STS  154,R30
                 ; 0000 00BD         }
                 ; 0000 00BE 
                 ; 0000 00BF         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
000350 91e0 0500 	LDS  R30,_TIMER1_OVERFLOW
000352 91f0 0501 	LDS  R31,_TIMER1_OVERFLOW+1
000354 9160 0502 	LDS  R22,_TIMER1_OVERFLOW+2
000356 9170 0503 	LDS  R23,_TIMER1_OVERFLOW+3
                +
000358 efaf     +LDI R26 , LOW ( 0xFF )
000359 e0b0     +LDI R27 , HIGH ( 0xFF )
00035a e080     +LDI R24 , BYTE3 ( 0xFF )
00035b e090     +LDI R25 , BYTE4 ( 0xFF )
                 	__GETD2N 0xFF
00035c 940e 129a 	CALL __MULD12
00035e 01df      	MOVW R26,R30
00035f 01cb      	MOVW R24,R22
000360 b5ec      	IN   R30,0x2C
000361 e0f0      	LDI  R31,0
000362 940e 126a 	CALL __CWD1
000364 940e 124e 	CALL __ADDD12
000366 940e 110d 	CALL __CDF1
                +
000368 edae     +LDI R26 , LOW ( 0x3D8E38DE )
000369 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00036a e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00036b e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
00036c 940e 1197 	CALL __MULF12
                +
00036e 01de     +MOVW R26 , R28
00036f 5ea4     +SUBI R26 , LOW ( - 540 )
000370 4fbd     +SBCI R27 , HIGH ( - 540 )
000371 93ed     +ST X + , R30
000372 93fd     +ST X + , R31
000373 936d     +ST X + , R22
000374 937c     +ST X , R23
                 	__PUTD1SX 540
                 ; 0000 00C0 
                 ; 0000 00C1         if(del_ms<TIMER1_TIME)
                +
000375 01de     +MOVW R26 , R28
000376 58a8     +SUBI R26 , LOW ( - 632 )
000377 4fbd     +SBCI R27 , HIGH ( - 632 )
000378 900d     +LD R0 , X +
000379 91bc     +LD R27 , X
00037a 2da0     +MOV R26 , R0
                 	__GETW2SX 632
00037b 940e 126f 	CALL __CWD2
00037d 940e 1337 	CALL __CDF2
00037f 940e 122a 	CALL __CMPF12
000381 f4e8      	BRSH _0x15
                 ; 0000 00C2         {
                 ; 0000 00C3             oper_Disapath(0,0);
000382 e0e0      	LDI  R30,LOW(0)
000383 e0f0      	LDI  R31,HIGH(0)
000384 93fa      	ST   -Y,R31
000385 93ea      	ST   -Y,R30
000386 93fa      	ST   -Y,R31
000387 93ea      	ST   -Y,R30
000388 940e 06cf 	CALL _oper_Disapath
                 ; 0000 00C4             TIMER1_OVERFLOW = 0;
00038a 940e 0e58 	CALL SUBOPT_0xA
                 ; 0000 00C5             v_buff = 0;
                +
00038c 01de     +MOVW R26 , R28
00038d 58a4     +SUBI R26 , LOW ( - 636 )
00038e 4fbd     +SBCI R27 , HIGH ( - 636 )
00038f 93ed     +ST X + , R30
000390 93ed     +ST X + , R30
000391 93ed     +ST X + , R30
000392 93ec     +ST X , R30
                 	__CLRD1SX 636
                 ; 0000 00C6             a_buff = 0;
000393 e0e0      	LDI  R30,LOW(0)
                +
000394 01de     +MOVW R26 , R28
000395 58a0     +SUBI R26 , LOW ( - 640 )
000396 4fbd     +SBCI R27 , HIGH ( - 640 )
000397 93ed     +ST X + , R30
000398 93ed     +ST X + , R30
000399 93ed     +ST X + , R30
00039a 93ec     +ST X , R30
                 	__CLRD1SX 640
                 ; 0000 00C7             STOP_FLAG = 0;
                +
00039b 01de     +MOVW R26 , R28
00039c 5eae     +SUBI R26 , LOW ( - 530 )
00039d 4fbd     +SBCI R27 , HIGH ( - 530 )
00039e 93ec     +ST X , R30
                 	__PUTB1SX 530
                 ; 0000 00C8         }
                 ; 0000 00C9         // if(goal_currentV_R==0 && goal_currentV_L==0) TIMER0_TIME_print = 0;
                 ; 0000 00CA 
                 ; 0000 00CB         // delay_ms(5);
                 ; 0000 00CC         // RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
                 ; 0000 00CD         // delay_ms(5);
                 ; 0000 00CE         // currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
                 ; 0000 00CF         // RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
                 ; 0000 00D0         // delay_ms(5);
                 ; 0000 00D1         // currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
                 ; 0000 00D2 
                 ; 0000 00D3         // currentV_R = (float)(currentRPM_R/(60/(0.4)*Gearratio));
                 ; 0000 00D4         // currentV_L = (float)(currentRPM_L/(60/(0.4)*Gearratio));
                 ; 0000 00D5 
                 ; 0000 00D6         // goal_currentV_R = (float)(goal_current_R/(60/(0.4)*Gearratio));
                 ; 0000 00D7         // goal_currentV_L = (float)(-goal_current_L/(60/(0.4)*Gearratio));
                 ; 0000 00D8 
                 ; 0000 00D9         // d_velocity = (currentV_R + currentV_L)/2;
                 ; 0000 00DA         // d_angularV = (currentV_R-currentV_L)/Length;
                 ; 0000 00DB         // g_velocity = (goal_currentV_R+goal_currentV_L)/2;
                 ; 0000 00DC         // g_angularV = (goal_currentV_R-goal_currentV_L)/Length;
                 ; 0000 00DD 
                 ; 0000 00DE         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
                 _0x15:
00039f 91a0 056a 	LDS  R26,_TIMER0_OVERFLOW
0003a1 91b0 056b 	LDS  R27,_TIMER0_OVERFLOW+1
0003a3 efef      	LDI  R30,LOW(255)
0003a4 940e 1294 	CALL __MULB1W2U
0003a6 01df      	MOVW R26,R30
0003a7 b7e2      	IN   R30,0x32
0003a8 e0f0      	LDI  R31,0
0003a9 0fea      	ADD  R30,R26
0003aa 1ffb      	ADC  R31,R27
0003ab 2766      	CLR  R22
0003ac 2777      	CLR  R23
0003ad 940e 110d 	CALL __CDF1
                +
0003af eaae     +LDI R26 , LOW ( 0x3891A2AE )
0003b0 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
0003b1 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
0003b2 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
0003b3 940e 1197 	CALL __MULF12
                +
0003b5 01de     +MOVW R26 , R28
0003b6 5bac     +SUBI R26 , LOW ( - 580 )
0003b7 4fbd     +SBCI R27 , HIGH ( - 580 )
0003b8 93ed     +ST X + , R30
0003b9 93fd     +ST X + , R31
0003ba 936d     +ST X + , R22
0003bb 937c     +ST X , R23
                 	__PUTD1SX 580
                 ; 0000 00DF         TIMER0_OVERFLOW = 0;
0003bc 940e 0de5 	CALL SUBOPT_0x1
                 ; 0000 00E0         TCNT0 = 0;
                 ; 0000 00E1 
                 ; 0000 00E2         // d_angular += control_time*d_angularV;
                 ; 0000 00E3         // d_x += d_velocity*control_time*cos(d_angular);
                 ; 0000 00E4         // d_y += d_velocity*control_time*sin(d_angular);
                 ; 0000 00E5         // d_angular_circula = (int)(d_angular*Circular);
                 ; 0000 00E6 
                 ; 0000 00E7         // g_angular += control_time*g_angularV;
                 ; 0000 00E8         // g_x += g_velocity*control_time*cos(g_angular);
                 ; 0000 00E9         // g_y += g_velocity*control_time*sin(g_angular);
                 ; 0000 00EA         // g_angular_circula = (int)(g_angular*Circular);
                 ; 0000 00EB 
                 ; 0000 00EC         // motorR_distance = (float)(MOTORR_HALL*0.1325*Pi/160);
                 ; 0000 00ED         // motorL_distance = (float)(MOTORL_HALL*0.1325*Pi/160);
                 ; 0000 00EE         motorR_distance = (float)(MOTORR_HALL*0.4/160);
0003be 91e0 0582 	LDS  R30,_MOTORR_HALL
0003c0 91f0 0583 	LDS  R31,_MOTORR_HALL+1
0003c2 9160 0584 	LDS  R22,_MOTORR_HALL+2
0003c4 9170 0585 	LDS  R23,_MOTORR_HALL+3
0003c6 940e 0e62 	CALL SUBOPT_0xB
                +
0003c8 01de     +MOVW R26 , R28
0003c9 50a8     +SUBI R26 , LOW ( - 504 )
0003ca 4fbe     +SBCI R27 , HIGH ( - 504 )
0003cb 93ed     +ST X + , R30
0003cc 93fd     +ST X + , R31
0003cd 936d     +ST X + , R22
0003ce 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 00EF         motorL_distance = (float)(MOTORL_HALL*0.4/160);
0003cf 91e0 0586 	LDS  R30,_MOTORL_HALL
0003d1 91f0 0587 	LDS  R31,_MOTORL_HALL+1
0003d3 9160 0588 	LDS  R22,_MOTORL_HALL+2
0003d5 9170 0589 	LDS  R23,_MOTORL_HALL+3
0003d7 940e 0e62 	CALL SUBOPT_0xB
                +
0003d9 01de     +MOVW R26 , R28
0003da 50ac     +SUBI R26 , LOW ( - 500 )
0003db 4fbe     +SBCI R27 , HIGH ( - 500 )
0003dc 93ed     +ST X + , R30
0003dd 93fd     +ST X + , R31
0003de 936d     +ST X + , R22
0003df 937c     +ST X , R23
                 	__PUTD1SX 500
                 ; 0000 00F0 
                 ; 0000 00F1         TIMER0_TIME += control_time;
                +
0003e0 01fe     +MOVW R30 , R28
0003e1 5bec     +SUBI R30 , LOW ( - 580 )
0003e2 4ffd     +SBCI R31 , HIGH ( - 580 )
0003e3 9001     +LD R0 , Z +
0003e4 9011     +LD R1 , Z +
0003e5 9161     +LD R22 , Z +
0003e6 8170     +LD R23 , Z
0003e7 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
0003e8 940e 0e73 	CALL SUBOPT_0xC
0003ea 940e 1147 	CALL __ADDF12
                +
0003ec 01de     +MOVW R26 , R28
0003ed 5ea8     +SUBI R26 , LOW ( - 536 )
0003ee 4fbd     +SBCI R27 , HIGH ( - 536 )
0003ef 93ed     +ST X + , R30
0003f0 93fd     +ST X + , R31
0003f1 936d     +ST X + , R22
0003f2 937c     +ST X , R23
                 	__PUTD1SX 536
                 ; 0000 00F2         if(TIMER0_TIME>0.03){
0003f3 940e 0e73 	CALL SUBOPT_0xC
                +
0003f5 e8ef     +LDI R30 , LOW ( 0x3CF5C28F )
0003f6 ecf2     +LDI R31 , HIGH ( 0x3CF5C28F )
0003f7 ef65     +LDI R22 , BYTE3 ( 0x3CF5C28F )
0003f8 e37c     +LDI R23 , BYTE4 ( 0x3CF5C28F )
                 	__GETD1N 0x3CF5C28F
0003f9 940e 122a 	CALL __CMPF12
0003fb f009      	BREQ PC+2
0003fc f410      	BRCC PC+3
0003fd 940c 04ed 	JMP  _0x16
                 ; 0000 00F3             TIMER0_TIME_print += TIMER0_TIME;
0003ff 940e 0e7c 	CALL SUBOPT_0xD
                +
000401 01de     +MOVW R26 , R28
000402 5eac     +SUBI R26 , LOW ( - 532 )
000403 4fbd     +SBCI R27 , HIGH ( - 532 )
000404 900d     +LD R0 , X +
000405 901d     +LD R1 , X +
000406 918d     +LD R24 , X +
000407 919c     +LD R25 , X
000408 01d0     +MOVW R26 , R0
                 	__GETD2SX 532
000409 940e 1147 	CALL __ADDF12
                +
00040b 01de     +MOVW R26 , R28
00040c 5eac     +SUBI R26 , LOW ( - 532 )
00040d 4fbd     +SBCI R27 , HIGH ( - 532 )
00040e 93ed     +ST X + , R30
00040f 93fd     +ST X + , R31
000410 936d     +ST X + , R22
000411 937c     +ST X , R23
                 	__PUTD1SX 532
                 ; 0000 00F4             MOTORR_HALL = 0;
000412 e0e0      	LDI  R30,LOW(0)
000413 93e0 0582 	STS  _MOTORR_HALL,R30
000415 93e0 0583 	STS  _MOTORR_HALL+1,R30
000417 93e0 0584 	STS  _MOTORR_HALL+2,R30
000419 93e0 0585 	STS  _MOTORR_HALL+3,R30
                 ; 0000 00F5             MOTORL_HALL = 0;
00041b 93e0 0586 	STS  _MOTORL_HALL,R30
00041d 93e0 0587 	STS  _MOTORL_HALL+1,R30
00041f 93e0 0588 	STS  _MOTORL_HALL+2,R30
000421 93e0 0589 	STS  _MOTORL_HALL+3,R30
                 ; 0000 00F6 
                 ; 0000 00F7             hall_velocity = (float)((motorR_distance+motorL_distance)/(2*TIMER0_TIME));
000423 940e 0e85 	CALL SUBOPT_0xE
000425 937f      	PUSH R23
000426 936f      	PUSH R22
000427 93ff      	PUSH R31
000428 93ef      	PUSH R30
000429 940e 0e7c 	CALL SUBOPT_0xD
                +
00042b e0a0     +LDI R26 , LOW ( 0x40000000 )
00042c e0b0     +LDI R27 , HIGH ( 0x40000000 )
00042d e080     +LDI R24 , BYTE3 ( 0x40000000 )
00042e e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00042f 940e 1197 	CALL __MULF12
000431 91af      	POP  R26
000432 91bf      	POP  R27
000433 918f      	POP  R24
000434 919f      	POP  R25
000435 940e 11e5 	CALL __DIVF21
                +
000437 01de     +MOVW R26 , R28
000438 50a0     +SUBI R26 , LOW ( - 512 )
000439 4fbe     +SBCI R27 , HIGH ( - 512 )
00043a 93ed     +ST X + , R30
00043b 93fd     +ST X + , R31
00043c 936d     +ST X + , R22
00043d 937c     +ST X , R23
                 	__PUTD1SX 512
                 ; 0000 00F8             hall_angularV = (float)((motorR_distance-motorL_distance)/(Length*TIMER0_TIME));
00043e 940e 0e98 	CALL SUBOPT_0xF
000440 937f      	PUSH R23
000441 936f      	PUSH R22
000442 93ff      	PUSH R31
000443 93ef      	PUSH R30
000444 940e 0e7c 	CALL SUBOPT_0xD
000446 940e 0eab 	CALL SUBOPT_0x10
000448 91af      	POP  R26
000449 91bf      	POP  R27
00044a 918f      	POP  R24
00044b 919f      	POP  R25
00044c 940e 11e5 	CALL __DIVF21
                +
00044e 01de     +MOVW R26 , R28
00044f 50a4     +SUBI R26 , LOW ( - 508 )
000450 4fbe     +SBCI R27 , HIGH ( - 508 )
000451 93ed     +ST X + , R30
000452 93fd     +ST X + , R31
000453 936d     +ST X + , R22
000454 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 00F9             hall_angular += (float)((motorR_distance-motorL_distance)/Length);
000455 940e 0e98 	CALL SUBOPT_0xF
000457 01df      	MOVW R26,R30
000458 01cb      	MOVW R24,R22
                +
000459 e1e7     +LDI R30 , LOW ( 0x3E8ED917 )
00045a edf9     +LDI R31 , HIGH ( 0x3E8ED917 )
00045b e86e     +LDI R22 , BYTE3 ( 0x3E8ED917 )
00045c e37e     +LDI R23 , BYTE4 ( 0x3E8ED917 )
                 	__GETD1N 0x3E8ED917
00045d 940e 11e5 	CALL __DIVF21
00045f 940e 0eb2 	CALL SUBOPT_0x11
000461 940e 1147 	CALL __ADDF12
                +
000463 01de     +MOVW R26 , R28
000464 5faa     +SUBI R26 , LOW ( - 518 )
000465 4fbd     +SBCI R27 , HIGH ( - 518 )
000466 93ed     +ST X + , R30
000467 93fd     +ST X + , R31
000468 936d     +ST X + , R22
000469 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 00FA             hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
00046a 940e 0e85 	CALL SUBOPT_0xE
00046c 940e 0ebb 	CALL SUBOPT_0x12
00046e 937f      	PUSH R23
00046f 936f      	PUSH R22
000470 93ff      	PUSH R31
000471 93ef      	PUSH R30
000472 940e 0ec4 	CALL SUBOPT_0x13
000474 940e 0cf8 	CALL _cos
000476 91af      	POP  R26
000477 91bf      	POP  R27
000478 918f      	POP  R24
000479 919f      	POP  R25
00047a 940e 1197 	CALL __MULF12
                +
00047c 01de     +MOVW R26 , R28
00047d 5fa2     +SUBI R26 , LOW ( - 526 )
00047e 4fbd     +SBCI R27 , HIGH ( - 526 )
00047f 900d     +LD R0 , X +
000480 901d     +LD R1 , X +
000481 918d     +LD R24 , X +
000482 919c     +LD R25 , X
000483 01d0     +MOVW R26 , R0
                 	__GETD2SX 526
000484 940e 1147 	CALL __ADDF12
                +
000486 01de     +MOVW R26 , R28
000487 5fa2     +SUBI R26 , LOW ( - 526 )
000488 4fbd     +SBCI R27 , HIGH ( - 526 )
000489 93ed     +ST X + , R30
00048a 93fd     +ST X + , R31
00048b 936d     +ST X + , R22
00048c 937c     +ST X , R23
                 	__PUTD1SX 526
                 ; 0000 00FB             hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
00048d 940e 0e85 	CALL SUBOPT_0xE
00048f 940e 0ebb 	CALL SUBOPT_0x12
000491 937f      	PUSH R23
000492 936f      	PUSH R22
000493 93ff      	PUSH R31
000494 93ef      	PUSH R30
000495 940e 0ec4 	CALL SUBOPT_0x13
000497 940e 0c71 	CALL _sin
000499 91af      	POP  R26
00049a 91bf      	POP  R27
00049b 918f      	POP  R24
00049c 919f      	POP  R25
00049d 940e 1197 	CALL __MULF12
                +
00049f 01de     +MOVW R26 , R28
0004a0 5fa6     +SUBI R26 , LOW ( - 522 )
0004a1 4fbd     +SBCI R27 , HIGH ( - 522 )
0004a2 900d     +LD R0 , X +
0004a3 901d     +LD R1 , X +
0004a4 918d     +LD R24 , X +
0004a5 919c     +LD R25 , X
0004a6 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
0004a7 940e 1147 	CALL __ADDF12
                +
0004a9 01de     +MOVW R26 , R28
0004aa 5fa6     +SUBI R26 , LOW ( - 522 )
0004ab 4fbd     +SBCI R27 , HIGH ( - 522 )
0004ac 93ed     +ST X + , R30
0004ad 93fd     +ST X + , R31
0004ae 936d     +ST X + , R22
0004af 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 00FC             hall_angular_circula = (int)(hall_angular*Circular);
0004b0 940e 0eb2 	CALL SUBOPT_0x11
                +
0004b2 efe6     +LDI R30 , LOW ( 0x426528F6 )
0004b3 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
0004b4 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
0004b5 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
0004b6 940e 0ecf 	CALL SUBOPT_0x14
                +
0004b8 01de     +MOVW R26 , R28
0004b9 5fac     +SUBI R26 , LOW ( - 516 )
0004ba 4fbd     +SBCI R27 , HIGH ( - 516 )
0004bb 93ed     +ST X + , R30
0004bc 93fc     +ST X , R31
                 	__PUTW1SX 516
                 ; 0000 00FD             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 00FE             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 00FF             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 0100             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d, %d\n", TIMER0_TIME_print, d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 0101             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d, %.3f\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula, TIMER0_TIME_print);
                 ; 0000 0102             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f \n",TIMER0_TIME_print, g_velocity, d_velocity, hall_velocity);
                 ; 0000 0103             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %.3f, %d\n",TIMER0_TIME_print,g_velocity, hall_velocity, g_x, hall_x, del_ms);
                 ; 0000 0104             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n",TIMER0_TIME_print,g_velocity, d_velocity, hall_velocity,);
                 ; 0000 0105             sprintf(BUFF, "%.3f, %.d, %d, %d\n", TIMER0_TIME_print, g_angular_circula, hall_angular_circula,d__angular);
0004bd 01fe      	MOVW R30,R28
0004be 93fa      	ST   -Y,R31
0004bf 93ea      	ST   -Y,R30
                +
0004c0 e1e8     +LDI R30 , LOW ( 2 * _0x0 + ( 16 ) )
0004c1 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW1FN _0x0,16
0004c2 93fa      	ST   -Y,R31
0004c3 93ea      	ST   -Y,R30
0004c4 940e 0e7c 	CALL SUBOPT_0xD
0004c6 940e 1330 	CALL __PUTPARD1
                +
0004c8 01fe     +MOVW R30 , R28
0004c9 5de8     +SUBI R30 , LOW ( - 552 )
0004ca 4ffd     +SBCI R31 , HIGH ( - 552 )
0004cb 9001     +LD R0 , Z +
0004cc 81f0     +LD R31 , Z
0004cd 2de0     +MOV R30 , R0
                 	__GETW1SX 552
0004ce 940e 0ed4 	CALL SUBOPT_0x15
                +
0004d0 01fe     +MOVW R30 , R28
0004d1 5fe0     +SUBI R30 , LOW ( - 528 )
0004d2 4ffd     +SBCI R31 , HIGH ( - 528 )
0004d3 9001     +LD R0 , Z +
0004d4 81f0     +LD R31 , Z
0004d5 2de0     +MOV R30 , R0
                 	__GETW1SX 528
0004d6 940e 0ed4 	CALL SUBOPT_0x15
0004d8 940e 0dec 	CALL SUBOPT_0x2
0004da 940e 0ed4 	CALL SUBOPT_0x15
0004dc e180      	LDI  R24,16
0004dd 940e 0a67 	CALL _sprintf
0004df 9664      	ADIW R28,20
                 ; 0000 0106             // sprintf(BUFF, "%.3f, %.3f\n", TIMER0_TIME_print, hall_x);
                 ; 0000 0107 
                 ; 0000 0108             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 0109             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 010A             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 010B             //                                                   d_velocity, g_velocity, d_x, g_x, TIMER0_TIME_print);
                 ; 0000 010C             // sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L);
                 ; 0000 010D             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -_buff);
                 ; 0000 010E             puts_USART1(BUFF);
0004e0 01fe      	MOVW R30,R28
0004e1 93fa      	ST   -Y,R31
0004e2 93ea      	ST   -Y,R30
0004e3 940e 05c4 	CALL _puts_USART1
                 ; 0000 010F             TIMER0_TIME = 0;
0004e5 e0e0      	LDI  R30,LOW(0)
                +
0004e6 01de     +MOVW R26 , R28
0004e7 5ea8     +SUBI R26 , LOW ( - 536 )
0004e8 4fbd     +SBCI R27 , HIGH ( - 536 )
0004e9 93ed     +ST X + , R30
0004ea 93ed     +ST X + , R30
0004eb 93ed     +ST X + , R30
0004ec 93ec     +ST X , R30
                 	__CLRD1SX 536
                 ; 0000 0110         }
                 ; 0000 0111     }
                 _0x16:
0004ed cd5d      	RJMP _0xA
                 ; 0000 0112 }
                 _0x17:
0004ee cfff      	RJMP _0x17
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
0004ef 93ea      	ST   -Y,R30
0004f0 b7ef      	IN   R30,SREG
0004f1 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
0004f2 91e0 0504 	LDS  R30,_TIMER2_OVERFLOW
0004f4 5fef      	SUBI R30,-LOW(1)
0004f5 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
0004f7 91e9      	LD   R30,Y+
0004f8 bfef      	OUT  SREG,R30
0004f9 91e9      	LD   R30,Y+
0004fa 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
0004fb 93aa      	ST   -Y,R26
0004fc 93ba      	ST   -Y,R27
0004fd 93ea      	ST   -Y,R30
0004fe 93fa      	ST   -Y,R31
0004ff b7ef      	IN   R30,SREG
000500 93ea      	ST   -Y,R30
                 ; 0001 0010     TIMER0_OVERFLOW++;
000501 e6aa      	LDI  R26,LOW(_TIMER0_OVERFLOW)
000502 e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
000503 940e 0ed9 	CALL SUBOPT_0x16
                 ; 0001 0011 }
000505 91e9      	LD   R30,Y+
000506 bfef      	OUT  SREG,R30
000507 91f9      	LD   R31,Y+
000508 91e9      	LD   R30,Y+
000509 91b9      	LD   R27,Y+
00050a 91a9      	LD   R26,Y+
00050b 9518      	RETI
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
00050c 940e 0edf 	CALL SUBOPT_0x17
                 ; 0001 0016     TIMER1_OVERFLOW++;
00050e e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
00050f e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
000510 940e 0ee8 	CALL SUBOPT_0x18
                 ; 0001 0017     TCNT1H = 0x00;
000512 e0e0      	LDI  R30,LOW(0)
000513 bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
000514 bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
000515 91e9      	LD   R30,Y+
000516 bfef      	OUT  SREG,R30
000517 91f9      	LD   R31,Y+
000518 91e9      	LD   R30,Y+
000519 91b9      	LD   R27,Y+
00051a 91a9      	LD   R26,Y+
00051b 9179      	LD   R23,Y+
00051c 9169      	LD   R22,Y+
00051d 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
00051e e0ed      	LDI  R30,LOW(13)
00051f bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
000520 e2e8      	LDI  R30,LOW(40)
000521 bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
000522 e8e2      	LDI  R30,LOW(130)
000523 c010      	RJMP _0x20A000E
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
000524 e0e7      	LDI  R30,LOW(7)
000525 bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
000526 e8e1      	LDI  R30,LOW(129)
000527 c00c      	RJMP _0x20A000E
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
000528 e1ed      	LDI  R30,LOW(29)
000529 bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
00052a efef      	LDI  R30,LOW(255)
00052b e0f0      	LDI  R31,HIGH(255)
00052c bdf9      	OUT  0x28+1,R31
00052d bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
00052e ebe0      	LDI  R30,LOW(1200)
00052f e0f4      	LDI  R31,HIGH(1200)
000530 bdf7      	OUT  0x26+1,R31
000531 bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
000532 b7e7      	IN   R30,0x37
000533 60e8      	ORI  R30,8
                 _0x20A000E:
000534 bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
000535 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
000536 93aa      	ST   -Y,R26
000537 93ba      	ST   -Y,R27
000538 93ea      	ST   -Y,R30
000539 b7ef      	IN   R30,SREG
00053a 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
00053b b5e4      	IN   R30,0x24
00053c 31e9      	CPI  R30,LOW(0x19)
00053d f420      	BRSH _0x40004
00053e 91a0 0504 	LDS  R26,_TIMER2_OVERFLOW
000540 30a0      	CPI  R26,LOW(0x0)
000541 f021      	BREQ _0x40006
                 _0x40004:
000542 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
000544 30a0      	CPI  R26,LOW(0x0)
000545 f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000546 940e 0ef1 	CALL SUBOPT_0x19
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
000548 c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
000549 e0e0      	LDI  R30,LOW(0)
00054a 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
00054c 940e 0ef1 	CALL SUBOPT_0x19
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
00054e e0e0      	LDI  R30,LOW(0)
00054f 93e0 0504 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
000551 91e9      	LD   R30,Y+
000552 bfef      	OUT  SREG,R30
000553 91e9      	LD   R30,Y+
000554 91b9      	LD   R27,Y+
000555 91a9      	LD   R26,Y+
000556 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
000557 93aa      	ST   -Y,R26
000558 93ea      	ST   -Y,R30
000559 93fa      	ST   -Y,R31
00055a b7ef      	IN   R30,SREG
00055b 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
00055c 931a      	ST   -Y,R17
                 ;	i -> R17
00055d e010      	LDI  R17,0
00055e 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
000560 331c      	CPI  R17,60
000561 f421      	BRNE _0x4000A
000562 91a0 0581 	LDS  R26,_CHECK_GETS
000564 30a0      	CPI  R26,LOW(0x0)
000565 f009      	BREQ _0x4000B
                 _0x4000A:
000566 c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
000567 9bc3      	SBIS 0x18,3
000568 c002      	RJMP _0x4000C
000569 98c3      	CBI  0x18,3
00056a c001      	RJMP _0x4000D
                 _0x4000C:
00056b 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
00056c e0e0      	LDI  R30,LOW(0)
00056d 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00056f c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
000570 331e      	CPI  R17,62
000571 f421      	BRNE _0x40010
000572 91a0 0581 	LDS  R26,_CHECK_GETS
000574 30a0      	CPI  R26,LOW(0x0)
000575 f009      	BREQ _0x40011
                 _0x40010:
000576 c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000577 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000579 940e 0f00 	CALL SUBOPT_0x1A
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
00057b e0e1      	LDI  R30,LOW(1)
00057c 93e0 0581 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
00057e c008      	RJMP _0x40012
                 _0x4000F:
00057f 91e0 0581 	LDS  R30,_CHECK_GETS
000581 30e0      	CPI  R30,0
000582 f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
000583 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000585 940e 0f00 	CALL SUBOPT_0x1A
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
000587 9119      	LD   R17,Y+
000588 91e9      	LD   R30,Y+
000589 bfef      	OUT  SREG,R30
00058a 91f9      	LD   R31,Y+
00058b 91e9      	LD   R30,Y+
00058c 91a9      	LD   R26,Y+
00058d 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
00058e e0e0      	LDI  R30,LOW(0)
00058f 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
000591 e9e8      	LDI  R30,LOW(152)
000592 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
000594 e0e6      	LDI  R30,LOW(6)
000595 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
000597 91e0 009d 	LDS  R30,157
000599 7bef      	ANDI R30,0xBF
00059a 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
00059c 81e8      	LD   R30,Y
00059d 81f9      	LDD  R31,Y+1
00059e 940e 125f 	CALL __ASRW8
0005a0 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
0005a2 81e8      	LD   R30,Y
0005a3 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
0005a5 c014      	RJMP _0x20A000D
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
0005a6 e0e0      	LDI  R30,LOW(0)
0005a7 b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0005a8 e9e8      	LDI  R30,LOW(152)
0005a9 b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0005aa e0e6      	LDI  R30,LOW(6)
0005ab 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
0005ad 91e0 0095 	LDS  R30,149
0005af 7bef      	ANDI R30,0xBF
0005b0 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0005b2 81e8      	LD   R30,Y
0005b3 81f9      	LDD  R31,Y+1
0005b4 940e 125f 	CALL __ASRW8
0005b6 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
0005b8 81e8      	LD   R30,Y
0005b9 b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000D:
0005ba 9622      	ADIW R28,2
0005bb 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
0005bc 91e0 009b 	LDS  R30,155
0005be 72e0      	ANDI R30,LOW(0x20)
0005bf f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
0005c0 81e8      	LD   R30,Y
0005c1 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
0005c3 c023      	RJMP _0x20A000C
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
0005c4 931a      	ST   -Y,R17
0005c5 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
0005c6 e010      	LDI  R17,0
0005c7 e000      	LDI  R16,0
0005c8 e010      	LDI  R17,LOW(0)
                 _0x40018:
0005c9 940e 0f0a 	CALL SUBOPT_0x1B
0005cb 30e0      	CPI  R30,0
0005cc f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
0005cd 940e 0f0a 	CALL SUBOPT_0x1B
0005cf 93ea      	ST   -Y,R30
0005d0 dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
0005d1 5f1f      	SUBI R17,-1
0005d2 cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
0005d3 e000      	LDI  R16,LOW(0)
                 _0x4001B:
0005d4 1701      	CP   R16,R17
0005d5 f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
0005d6 81aa      	LDD  R26,Y+2
0005d7 81bb      	LDD  R27,Y+2+1
0005d8 9611      	ADIW R26,1
0005d9 83aa      	STD  Y+2,R26
0005da 83bb      	STD  Y+2+1,R27
0005db 9711      	SBIW R26,1
0005dc e0e0      	LDI  R30,LOW(0)
0005dd 93ec      	ST   X,R30
                 ; 0002 0054     }
0005de 5f0f      	SUBI R16,-1
0005df cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
0005e0 8119      	LDD  R17,Y+1
0005e1 8108      	LDD  R16,Y+0
0005e2 c108      	RJMP _0x20A000B
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
0005e3 9b5d      	SBIS 0xB,5
0005e4 cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
0005e5 81e8      	LD   R30,Y
0005e6 b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000C:
0005e7 9621      	ADIW R28,1
0005e8 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
0005e9 940e 134f 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
0005eb ef2f     +LDI R18 , LOW ( - 1 )
0005ec ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
0005ed 81ee      	LDD  R30,Y+6
0005ee 81ff      	LDD  R31,Y+6+1
0005ef 9731      	SBIW R30,1
0005f0 83ee      	STD  Y+6,R30
0005f1 83ff      	STD  Y+6+1,R31
0005f2 9631      	ADIW R30,1
0005f3 f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
0005f4 85a8      	LDD  R26,Y+8
0005f5 85b9      	LDD  R27,Y+8+1
0005f6 91ed      	LD   R30,X+
0005f7 87a8      	STD  Y+8,R26
0005f8 87b9      	STD  Y+8+1,R27
0005f9 e0f0      	LDI  R31,0
                +
0005fa 272e     +EOR R18 , R30
0005fb 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
0005fc e000     +LDI R16 , LOW ( 0 )
0005fd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
0005fe 3008     +CPI R16 , LOW ( 8 )
0005ff e0e0     +LDI R30 , HIGH ( 8 )
000600 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000601 f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
000602 01f9      	MOVW R30,R18
000603 70e1      	ANDI R30,LOW(0x1)
000604 70f0      	ANDI R31,HIGH(0x1)
000605 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
000606 9536      	LSR  R19
000607 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
000608 2e04      	MOV  R0,R20
000609 2a05      	OR   R0,R21
00060a f021      	BREQ _0x4002D
00060b e0e1      	LDI  R30,LOW(40961)
00060c eaf0      	LDI  R31,HIGH(40961)
                +
00060d 272e     +EOR R18 , R30
00060e 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
00060f 5f0f     +SUBI R16 , LOW ( - 1 )
000610 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000611 cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
000612 cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
000613 01f9      	MOVW R30,R18
000614 940e 1356 	CALL __LOADLOCR6
000616 962a      	ADIW R28,10
000617 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
000618 9728      	SBIW R28,8
000619 940e 1351 	CALL __SAVELOCR4
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                +
00061b e020     +LDI R18 , LOW ( 0 )
00061c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00061d 89e8      	LDD  R30,Y+16
00061e 83ec      	STD  Y+4,R30
                 ; 0002 0083     protocol[1]=0x06;
00061f e0e6      	LDI  R30,LOW(6)
000620 83ed      	STD  Y+5,R30
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
000621 85ee      	LDD  R30,Y+14
000622 85ff      	LDD  R31,Y+14+1
000623 940e 125f 	CALL __ASRW8
000625 83ee      	STD  Y+6,R30
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
000626 85ee      	LDD  R30,Y+14
000627 83ef      	STD  Y+7,R30
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
000628 85ec      	LDD  R30,Y+12
000629 85fd      	LDD  R31,Y+12+1
00062a 940e 125f 	CALL __ASRW8
00062c 87e8      	STD  Y+8,R30
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
00062d 85ec      	LDD  R30,Y+12
00062e 87e9      	STD  Y+9,R30
                 ; 0002 0088     protocol[6]=0;
00062f e0e0      	LDI  R30,LOW(0)
000630 87ea      	STD  Y+10,R30
                 ; 0002 0089     protocol[7]=0;
000631 87eb      	STD  Y+11,R30
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
000632 01fe      	MOVW R30,R28
000633 9634      	ADIW R30,4
000634 93fa      	ST   -Y,R31
000635 93ea      	ST   -Y,R30
000636 e0e6      	LDI  R30,LOW(6)
000637 e0f0      	LDI  R31,HIGH(6)
000638 93fa      	ST   -Y,R31
000639 93ea      	ST   -Y,R30
00063a dfae      	RCALL _CRC16
00063b 018f      	MOVW R16,R30
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
00063c 01f8      	MOVW R30,R16
00063d 87ea      	STD  Y+10,R30
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                +
00063e 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                +
00063f e020     +LDI R18 , LOW ( 0 )
000640 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002F:
                +
000641 3028     +CPI R18 , LOW ( 8 )
000642 e0e0     +LDI R30 , HIGH ( 8 )
000643 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000644 f454      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
000645 01de      	MOVW R26,R28
000646 9614      	ADIW R26,4
000647 0fa2      	ADD  R26,R18
000648 1fb3      	ADC  R27,R19
000649 91ec      	LD   R30,X
00064a 93ea      	ST   -Y,R30
00064b df97      	RCALL _putch_USART0
                 ; 0002 0094     }
                +
00064c 5f2f     +SUBI R18 , LOW ( - 1 )
00064d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00064e cff2      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
00064f 940e 1358 	CALL __LOADLOCR4
000651 9661      	ADIW R28,17
000652 9508      	RET
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
                 ; 0002 00B0     }
                 ; 0002 00B1 }
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
000653 9728      	SBIW R28,8
000654 940e 0f11 	CALL SUBOPT_0x1C
000656 e0e0      	LDI  R30,LOW(0)
000657 83ea      	STD  Y+2,R30
000658 83eb      	STD  Y+3,R30
000659 83ec      	STD  Y+4,R30
00065a 83ed      	STD  Y+5,R30
00065b 83ee      	STD  Y+6,R30
00065c 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
00065d 940e 0f15 	CALL SUBOPT_0x1D
00065f 2377      	TST  R23
000660 f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
000661 940e 0f1a 	CALL SUBOPT_0x1E
000663 940e 10a1 	CALL __ANEGF1
000665 85ac      	LDD  R26,Y+12
000666 85bd      	LDD  R27,Y+12+1
000667 940e 1315 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
000669 940e 0f15 	CALL SUBOPT_0x1D
00066b 937f      	PUSH R23
00066c 936f      	PUSH R22
00066d 93ff      	PUSH R31
00066e 93ef      	PUSH R30
00066f 940e 0f1a 	CALL SUBOPT_0x1E
000671 940e 0eab 	CALL SUBOPT_0x10
000673 940e 0ebb 	CALL SUBOPT_0x12
000675 91af      	POP  R26
000676 91bf      	POP  R27
000677 918f      	POP  R24
000678 919f      	POP  R25
000679 940e 1147 	CALL __ADDF12
00067b 940e 0f1f 	CALL SUBOPT_0x1F
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
00067d 940e 0f15 	CALL SUBOPT_0x1D
00067f 937f      	PUSH R23
000680 936f      	PUSH R22
000681 93ff      	PUSH R31
000682 93ef      	PUSH R30
000683 940e 0f1a 	CALL SUBOPT_0x1E
000685 940e 0eab 	CALL SUBOPT_0x10
000687 940e 0ebb 	CALL SUBOPT_0x12
000689 91af      	POP  R26
00068a 91bf      	POP  R27
00068b 918f      	POP  R24
00068c 919f      	POP  R25
00068d 940e 0dfe 	CALL SUBOPT_0x4
00068f 940e 1329 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(VelocityR*(60/(0.4)*Gearratio));
000691 940e 0f24 	CALL SUBOPT_0x20
000693 940e 0f29 	CALL SUBOPT_0x21
000695 85aa      	LDD  R26,Y+10
000696 85bb      	LDD  R27,Y+10+1
000697 93ed      	ST   X+,R30
000698 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(VelocityL*(60/(0.4)*Gearratio));
000699 940e 1324 	CALL __GETD2S0
00069b 940e 0f29 	CALL SUBOPT_0x21
00069d 85a8      	LDD  R26,Y+8
00069e 85b9      	LDD  R27,Y+8+1
00069f 93ed      	ST   X+,R30
0006a0 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0006a1 85aa      	LDD  R26,Y+10
0006a2 85bb      	LDD  R27,Y+10+1
0006a3 940e 1306 	CALL __GETW1P
0006a5 32ec      	CPI  R30,LOW(0x12C)
0006a6 e0a1      	LDI  R26,HIGH(0x12C)
0006a7 07fa      	CPC  R31,R26
0006a8 f434      	BRGE _0x40036
0006a9 01df      	MOVW R26,R30
0006aa ede4      	LDI  R30,LOW(65236)
0006ab effe      	LDI  R31,HIGH(65236)
0006ac 17ea      	CP   R30,R26
0006ad 07fb      	CPC  R31,R27
0006ae f00c      	BRLT _0x40037
                 _0x40036:
0006af c014      	RJMP _0x40038
                 _0x40037:
0006b0 85a8      	LDD  R26,Y+8
0006b1 85b9      	LDD  R27,Y+8+1
0006b2 940e 1306 	CALL __GETW1P
0006b4 32ec      	CPI  R30,LOW(0x12C)
0006b5 e0a1      	LDI  R26,HIGH(0x12C)
0006b6 07fa      	CPC  R31,R26
0006b7 f454      	BRGE _0x40039
0006b8 85a8      	LDD  R26,Y+8
0006b9 85b9      	LDD  R27,Y+8+1
0006ba 940e 1306 	CALL __GETW1P
0006bc 01df      	MOVW R26,R30
0006bd ede4      	LDI  R30,LOW(65236)
0006be effe      	LDI  R31,HIGH(65236)
0006bf 17ea      	CP   R30,R26
0006c0 07fb      	CPC  R31,R27
0006c1 f00c      	BRLT _0x4003A
                 _0x40039:
0006c2 c001      	RJMP _0x40038
                 _0x4003A:
0006c3 c001      	RJMP _0x4003B
                 _0x40038:
0006c4 c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
0006c5 85aa      	LDD  R26,Y+10
0006c6 85bb      	LDD  R27,Y+10+1
0006c7 940e 0f2e 	CALL SUBOPT_0x22
                 ; 0002 00C4         *L_RPM = 0;
0006c9 85a8      	LDD  R26,Y+8
0006ca 85b9      	LDD  R27,Y+8+1
0006cb 940e 0f2e 	CALL SUBOPT_0x22
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
0006cd 940c 0849 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0006cf e0e1      	LDI  R30,LOW(1)
0006d0 93ea      	ST   -Y,R30
0006d1 e7e9      	LDI  R30,LOW(121)
0006d2 e0f0      	LDI  R31,HIGH(121)
0006d3 93fa      	ST   -Y,R31
0006d4 93ea      	ST   -Y,R30
0006d5 81ed      	LDD  R30,Y+5
0006d6 81fe      	LDD  R31,Y+5+1
0006d7 940e 0f33 	CALL SUBOPT_0x23
                 ; 0002 00CB     delay_ms(1);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0006d9 e0e2      	LDI  R30,LOW(2)
0006da 93ea      	ST   -Y,R30
0006db e7e9      	LDI  R30,LOW(121)
0006dc e0f0      	LDI  R31,HIGH(121)
0006dd 93fa      	ST   -Y,R31
0006de 93ea      	ST   -Y,R30
0006df 81eb      	LDD  R30,Y+3
0006e0 81fc      	LDD  R31,Y+3+1
0006e1 940e 1253 	CALL __ANEGW1
0006e3 940e 0f33 	CALL SUBOPT_0x23
                 ; 0002 00CE     delay_ms(1);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
0006e5 e0e1      	LDI  R30,LOW(1)
0006e6 940e 0f3a 	CALL SUBOPT_0x24
                 ; 0002 00D1     delay_ms(1);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
0006e8 e0e2      	LDI  R30,LOW(2)
0006e9 940e 0f3a 	CALL SUBOPT_0x24
                 ; 0002 00D4     delay_ms(1);
                 ; 0002 00D5 }
                 _0x20A000B:
0006eb 9624      	ADIW R28,4
0006ec 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
                 ; 0002 00E1         return RPM;
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
0006ed e5e5      	LDI  R30,LOW(85)
0006ee bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
0006ef efe0      	LDI  R30,LOW(240)
0006f0 bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
0006f1 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
0006f2 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
0006f3 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
0006f4 9817      	CBI  0x2,7
                 ; 0003 000C }
0006f5 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
0006f6 940e 0f42 	CALL SUBOPT_0x25
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
0006f8 f041      	BREQ _0x6000B
0006f9 e8a2      	LDI  R26,LOW(_MOTORR_HALL)
0006fa e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
0006fb 940e 0ee8 	CALL SUBOPT_0x18
0006fd 9731      	SBIW R30,1
0006fe 4060      	SBCI R22,0
0006ff 4070      	SBCI R23,0
                 ; 0003 0011     else MOTORR_HALL--;
000700 c002      	RJMP _0x6000C
                 _0x6000B:
000701 940e 0f4b 	CALL SUBOPT_0x26
                 ; 0003 0012 }
                 _0x6000C:
000703 c037      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
000704 940e 0f42 	CALL SUBOPT_0x25
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
000706 f019      	BREQ _0x6000D
000707 940e 0f4b 	CALL SUBOPT_0x26
                 ; 0003 0017     else MOTORR_HALL++;
000709 c007      	RJMP _0x6000E
                 _0x6000D:
00070a e8a2      	LDI  R26,LOW(_MOTORR_HALL)
00070b e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
00070c 940e 0ee8 	CALL SUBOPT_0x18
00070e 9731      	SBIW R30,1
00070f 4060      	SBCI R22,0
000710 4070      	SBCI R23,0
                 ; 0003 0018 }
                 _0x6000E:
000711 c029      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
000712 940e 0edf 	CALL SUBOPT_0x17
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
000714 e0a0      	LDI  R26,0
000715 990e      	SBIC 0x1,6
000716 e0a1      	LDI  R26,1
000717 e0e0      	LDI  R30,0
000718 990f      	SBIC 0x1,7
000719 e0e1      	LDI  R30,1
00071a 17ea      	CP   R30,R26
00071b f019      	BREQ _0x6000F
00071c 940e 0f59 	CALL SUBOPT_0x27
                 ; 0003 001D     else MOTORL_HALL++;
00071e c007      	RJMP _0x60010
                 _0x6000F:
00071f e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000720 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000721 940e 0ee8 	CALL SUBOPT_0x18
000723 9731      	SBIW R30,1
000724 4060      	SBCI R22,0
000725 4070      	SBCI R23,0
                 ; 0003 001E }
                 _0x60010:
000726 c014      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
000727 940e 0edf 	CALL SUBOPT_0x17
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
000729 e0a0      	LDI  R26,0
00072a 990f      	SBIC 0x1,7
00072b e0a1      	LDI  R26,1
00072c e0e0      	LDI  R30,0
00072d 990e      	SBIC 0x1,6
00072e e0e1      	LDI  R30,1
00072f 17ea      	CP   R30,R26
000730 f041      	BREQ _0x60011
000731 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000732 e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000733 940e 0ee8 	CALL SUBOPT_0x18
000735 9731      	SBIW R30,1
000736 4060      	SBCI R22,0
000737 4070      	SBCI R23,0
                 ; 0003 0023     else MOTORL_HALL--;
000738 c002      	RJMP _0x60012
                 _0x60011:
000739 940e 0f59 	CALL SUBOPT_0x27
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
00073b 91e9      	LD   R30,Y+
00073c bfef      	OUT  SREG,R30
00073d 91f9      	LD   R31,Y+
00073e 91e9      	LD   R30,Y+
00073f 91b9      	LD   R27,Y+
000740 91a9      	LD   R26,Y+
000741 9179      	LD   R23,Y+
000742 9169      	LD   R22,Y+
000743 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000744 931a      	ST   -Y,R17
000745 930a      	ST   -Y,R16
000746 81aa      	LDD  R26,Y+2
000747 81bb      	LDD  R27,Y+2+1
000748 9612      	ADIW R26,2
000749 940e 1306 	CALL __GETW1P
00074b 9730      	SBIW R30,0
00074c f129      	BREQ _0x2000010
00074d 81aa      	LDD  R26,Y+2
00074e 81bb      	LDD  R27,Y+2+1
00074f 9614      	ADIW R26,4
000750 940e 1306 	CALL __GETW1P
000752 018f      	MOVW R16,R30
000753 9730      	SBIW R30,0
000754 f061      	BREQ _0x2000012
                +
000755 3002     +CPI R16 , LOW ( 2 )
000756 e0e0     +LDI R30 , HIGH ( 2 )
000757 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000758 f0c0      	BRLO _0x2000013
000759 01f8      	MOVW R30,R16
00075a 9731      	SBIW R30,1
00075b 018f      	MOVW R16,R30
                +
00075c 81aa     +LDD R26 , Y + 2
00075d 81bb     +LDD R27 , Y + 2 + 1
00075e 9614     +ADIW R26 , 4
00075f 93ed     +ST X + , R30
000760 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000761 81aa      	LDD  R26,Y+2
000762 81bb      	LDD  R27,Y+2+1
000763 9612      	ADIW R26,2
000764 940e 0ed9 	CALL SUBOPT_0x16
000766 9731      	SBIW R30,1
000767 81ac      	LDD  R26,Y+4
000768 83a0      	STD  Z+0,R26
000769 81aa      	LDD  R26,Y+2
00076a 81bb      	LDD  R27,Y+2+1
00076b 940e 1306 	CALL __GETW1P
00076d 23ff      	TST  R31
00076e f012      	BRMI _0x2000014
00076f 940e 0ed9 	CALL SUBOPT_0x16
                 _0x2000014:
                 _0x2000013:
000771 c006      	RJMP _0x2000015
                 _0x2000010:
000772 81aa      	LDD  R26,Y+2
000773 81bb      	LDD  R27,Y+2+1
000774 efef      	LDI  R30,LOW(65535)
000775 efff      	LDI  R31,HIGH(65535)
000776 93ed      	ST   X+,R30
000777 93fc      	ST   X,R31
                 _0x2000015:
000778 8119      	LDD  R17,Y+1
000779 8108      	LDD  R16,Y+0
00077a c346      	RJMP _0x20A0007
                 __ftoe_G100:
00077b 9724      	SBIW R28,4
00077c 940e 0f11 	CALL SUBOPT_0x1C
00077e e8e0      	LDI  R30,LOW(128)
00077f 83ea      	STD  Y+2,R30
000780 e3ef      	LDI  R30,LOW(63)
000781 83eb      	STD  Y+3,R30
000782 940e 1351 	CALL __SAVELOCR4
000784 85ee      	LDD  R30,Y+14
000785 85ff      	LDD  R31,Y+14+1
000786 3fef      	CPI  R30,LOW(0xFFFF)
000787 efaf      	LDI  R26,HIGH(0xFFFF)
000788 07fa      	CPC  R31,R26
000789 f449      	BRNE _0x2000019
00078a 85e8      	LDD  R30,Y+8
00078b 85f9      	LDD  R31,Y+8+1
00078c 93fa      	ST   -Y,R31
00078d 93ea      	ST   -Y,R30
                +
00078e ebec     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00078f e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
000790 940e 0f67 	CALL SUBOPT_0x28
000792 c0b4      	RJMP _0x20A0009
                 _0x2000019:
000793 3fef      	CPI  R30,LOW(0x7FFF)
000794 e7af      	LDI  R26,HIGH(0x7FFF)
000795 07fa      	CPC  R31,R26
000796 f449      	BRNE _0x2000018
000797 85e8      	LDD  R30,Y+8
000798 85f9      	LDD  R31,Y+8+1
000799 93fa      	ST   -Y,R31
00079a 93ea      	ST   -Y,R30
                +
00079b ebed     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00079c e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00079d 940e 0f67 	CALL SUBOPT_0x28
00079f c0a7      	RJMP _0x20A0009
                 _0x2000018:
0007a0 85ab      	LDD  R26,Y+11
0007a1 30a7      	CPI  R26,LOW(0x7)
0007a2 f010      	BRLO _0x200001B
0007a3 e0e6      	LDI  R30,LOW(6)
0007a4 87eb      	STD  Y+11,R30
                 _0x200001B:
0007a5 851b      	LDD  R17,Y+11
                 _0x200001C:
0007a6 2fe1      	MOV  R30,R17
0007a7 5011      	SUBI R17,1
0007a8 30e0      	CPI  R30,0
0007a9 f019      	BREQ _0x200001E
0007aa 940e 0f6b 	CALL SUBOPT_0x29
0007ac cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0007ad 85ec     +LDD R30 , Y + 12
0007ae 85fd     +LDD R31 , Y + 12 + 1
0007af 856e     +LDD R22 , Y + 12 + 2
0007b0 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0007b1 940e 1347 	CALL __CPD10
0007b3 f421      	BRNE _0x200001F
0007b4 e030      	LDI  R19,LOW(0)
0007b5 940e 0f6b 	CALL SUBOPT_0x29
0007b7 c02e      	RJMP _0x2000020
                 _0x200001F:
0007b8 853b      	LDD  R19,Y+11
0007b9 940e 0f73 	CALL SUBOPT_0x2A
0007bb f009      	BREQ PC+2
0007bc f410      	BRCC PC+3
0007bd 940c 07ca 	JMP  _0x2000021
0007bf 940e 0f6b 	CALL SUBOPT_0x29
                 _0x2000022:
0007c1 940e 0f73 	CALL SUBOPT_0x2A
0007c3 f028      	BRLO _0x2000024
0007c4 940e 0f7e 	CALL SUBOPT_0x2B
0007c6 940e 0f83 	CALL SUBOPT_0x2C
0007c8 cff8      	RJMP _0x2000022
                 _0x2000024:
0007c9 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
0007ca 940e 0f73 	CALL SUBOPT_0x2A
0007cc f440      	BRSH _0x2000028
0007cd 940e 0f7e 	CALL SUBOPT_0x2B
0007cf 940e 0f8f 	CALL SUBOPT_0x2D
0007d1 940e 0f96 	CALL SUBOPT_0x2E
0007d3 5031      	SUBI R19,LOW(1)
0007d4 cff5      	RJMP _0x2000026
                 _0x2000028:
0007d5 940e 0f6b 	CALL SUBOPT_0x29
                 _0x2000025:
                +
0007d7 85ec     +LDD R30 , Y + 12
0007d8 85fd     +LDD R31 , Y + 12 + 1
0007d9 856e     +LDD R22 , Y + 12 + 2
0007da 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0007db 940e 0f9b 	CALL SUBOPT_0x2F
0007dd 940e 0f96 	CALL SUBOPT_0x2E
0007df 940e 0f73 	CALL SUBOPT_0x2A
0007e1 f020      	BRLO _0x2000029
0007e2 940e 0f7e 	CALL SUBOPT_0x2B
0007e4 940e 0f83 	CALL SUBOPT_0x2C
                 _0x2000029:
                 _0x2000020:
0007e6 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0007e7 85eb      	LDD  R30,Y+11
0007e8 17e1      	CP   R30,R17
0007e9 f188      	BRLO _0x200002C
0007ea 940e 0f24 	CALL SUBOPT_0x20
0007ec 940e 0fa2 	CALL SUBOPT_0x30
0007ee 940e 0f9b 	CALL SUBOPT_0x2F
0007f0 940e 0fa9 	CALL SUBOPT_0x31
0007f2 940e 0f1f 	CALL SUBOPT_0x1F
                +
0007f4 81ec     +LDD R30 , Y + 4
0007f5 81fd     +LDD R31 , Y + 4 + 1
0007f6 816e     +LDD R22 , Y + 4 + 2
0007f7 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0007f8 940e 0f7e 	CALL SUBOPT_0x2B
0007fa 940e 11e5 	CALL __DIVF21
0007fc 940e 10d4 	CALL __CFD1U
0007fe 2f0e      	MOV  R16,R30
0007ff 940e 0fad 	CALL SUBOPT_0x32
000801 940e 0fb4 	CALL SUBOPT_0x33
000803 27ff      	CLR  R31
000804 2766      	CLR  R22
000805 2777      	CLR  R23
000806 940e 110d 	CALL __CDF1
000808 940e 0f24 	CALL SUBOPT_0x20
00080a 940e 1197 	CALL __MULF12
00080c 940e 0f7e 	CALL SUBOPT_0x2B
00080e 940e 0dfe 	CALL SUBOPT_0x4
000810 940e 0f96 	CALL SUBOPT_0x2E
000812 2fe1      	MOV  R30,R17
000813 5f1f      	SUBI R17,-1
000814 30e0      	CPI  R30,0
000815 f689      	BRNE _0x200002A
000816 940e 0fad 	CALL SUBOPT_0x32
000818 e2ee      	LDI  R30,LOW(46)
000819 93ec      	ST   X,R30
00081a cfcc      	RJMP _0x200002A
                 _0x200002C:
00081b 940e 0fb9 	CALL SUBOPT_0x34
00081d 9731      	SBIW R30,1
00081e 85aa      	LDD  R26,Y+10
00081f 83a0      	STD  Z+0,R26
000820 3030      	CPI  R19,0
000821 f42c      	BRGE _0x200002E
000822 9531      	NEG  R19
000823 85a8      	LDD  R26,Y+8
000824 85b9      	LDD  R27,Y+8+1
000825 e2ed      	LDI  R30,LOW(45)
000826 c003      	RJMP _0x2000111
                 _0x200002E:
000827 85a8      	LDD  R26,Y+8
000828 85b9      	LDD  R27,Y+8+1
000829 e2eb      	LDI  R30,LOW(43)
                 _0x2000111:
00082a 93ec      	ST   X,R30
00082b 940e 0fb9 	CALL SUBOPT_0x34
00082d 940e 0fb9 	CALL SUBOPT_0x34
00082f 9731      	SBIW R30,1
000830 01bf      	MOVW R22,R30
000831 2fa3      	MOV  R26,R19
000832 e0ea      	LDI  R30,LOW(10)
000833 940e 12ad 	CALL __DIVB21
000835 5de0      	SUBI R30,-LOW(48)
000836 01db      	MOVW R26,R22
000837 93ec      	ST   X,R30
000838 940e 0fb9 	CALL SUBOPT_0x34
00083a 9731      	SBIW R30,1
00083b 01bf      	MOVW R22,R30
00083c 2fa3      	MOV  R26,R19
00083d e0ea      	LDI  R30,LOW(10)
00083e 940e 12d7 	CALL __MODB21
000840 5de0      	SUBI R30,-LOW(48)
000841 01db      	MOVW R26,R22
000842 93ec      	ST   X,R30
000843 85a8      	LDD  R26,Y+8
000844 85b9      	LDD  R27,Y+8+1
000845 e0e0      	LDI  R30,LOW(0)
000846 93ec      	ST   X,R30
                 _0x20A0009:
000847 940e 1358 	CALL __LOADLOCR4
                 _0x20A000A:
000849 9660      	ADIW R28,16
00084a 9508      	RET
                 __print_G100:
00084b 97ef      	SBIW R28,63
00084c 9761      	SBIW R28,17
00084d 940e 134f 	CALL __SAVELOCR6
00084f e010      	LDI  R17,0
                +
000850 01fe     +MOVW R30 , R28
000851 5ae8     +SUBI R30 , LOW ( - 88 )
000852 4fff     +SBCI R31 , HIGH ( - 88 )
000853 9001     +LD R0 , Z +
000854 81f0     +LD R31 , Z
000855 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000856 87e8      	STD  Y+8,R30
000857 87f9      	STD  Y+8+1,R31
                +
000858 01fe     +MOVW R30 , R28
000859 5aea     +SUBI R30 , LOW ( - 86 )
00085a 4fff     +SBCI R31 , HIGH ( - 86 )
00085b 9001     +LD R0 , Z +
00085c 81f0     +LD R31 , Z
00085d 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00085e 83ee      	STD  Y+6,R30
00085f 83ff      	STD  Y+6+1,R31
000860 81ae      	LDD  R26,Y+6
000861 81bf      	LDD  R27,Y+6+1
000862 940e 0f2e 	CALL SUBOPT_0x22
                 _0x2000030:
000864 01de      	MOVW R26,R28
000865 5aa4      	SUBI R26,LOW(-(92))
000866 4fbf      	SBCI R27,HIGH(-(92))
000867 940e 0ed9 	CALL SUBOPT_0x16
000869 9731      	SBIW R30,1
00086a 91e4      	LPM  R30,Z
00086b 2f2e      	MOV  R18,R30
00086c 30e0      	CPI  R30,0
00086d f411      	BRNE PC+3
00086e 940c 0a5e 	JMP _0x2000032
000870 2fe1      	MOV  R30,R17
000871 30e0      	CPI  R30,0
000872 f439      	BRNE _0x2000036
000873 3225      	CPI  R18,37
000874 f411      	BRNE _0x2000037
000875 e011      	LDI  R17,LOW(1)
000876 c002      	RJMP _0x2000038
                 _0x2000037:
000877 940e 0fbf 	CALL SUBOPT_0x35
                 _0x2000038:
000879 c1e3      	RJMP _0x2000035
                 _0x2000036:
00087a 30e1      	CPI  R30,LOW(0x1)
00087b f4c1      	BRNE _0x2000039
00087c 3225      	CPI  R18,37
00087d f419      	BRNE _0x200003A
00087e 940e 0fbf 	CALL SUBOPT_0x35
000880 c1db      	RJMP _0x2000112
                 _0x200003A:
000881 e012      	LDI  R17,LOW(2)
000882 e0e0      	LDI  R30,LOW(0)
000883 8bed      	STD  Y+21,R30
000884 e000      	LDI  R16,LOW(0)
000885 322d      	CPI  R18,45
000886 f411      	BRNE _0x200003B
000887 e001      	LDI  R16,LOW(1)
000888 c1d4      	RJMP _0x2000035
                 _0x200003B:
000889 322b      	CPI  R18,43
00088a f419      	BRNE _0x200003C
00088b e2eb      	LDI  R30,LOW(43)
00088c 8bed      	STD  Y+21,R30
00088d c1cf      	RJMP _0x2000035
                 _0x200003C:
00088e 3220      	CPI  R18,32
00088f f419      	BRNE _0x200003D
000890 e2e0      	LDI  R30,LOW(32)
000891 8bed      	STD  Y+21,R30
000892 c1ca      	RJMP _0x2000035
                 _0x200003D:
000893 c002      	RJMP _0x200003E
                 _0x2000039:
000894 30e2      	CPI  R30,LOW(0x2)
000895 f439      	BRNE _0x200003F
                 _0x200003E:
000896 e050      	LDI  R21,LOW(0)
000897 e013      	LDI  R17,LOW(3)
000898 3320      	CPI  R18,48
000899 f411      	BRNE _0x2000040
00089a 6800      	ORI  R16,LOW(128)
00089b c1c1      	RJMP _0x2000035
                 _0x2000040:
00089c c002      	RJMP _0x2000041
                 _0x200003F:
00089d 30e3      	CPI  R30,LOW(0x3)
00089e f491      	BRNE _0x2000042
                 _0x2000041:
00089f 3320      	CPI  R18,48
0008a0 f010      	BRLO _0x2000044
0008a1 332a      	CPI  R18,58
0008a2 f008      	BRLO _0x2000045
                 _0x2000044:
0008a3 c007      	RJMP _0x2000043
                 _0x2000045:
0008a4 e0aa      	LDI  R26,LOW(10)
0008a5 9f5a      	MUL  R21,R26
0008a6 2d50      	MOV  R21,R0
0008a7 2fe2      	MOV  R30,R18
0008a8 53e0      	SUBI R30,LOW(48)
0008a9 0f5e      	ADD  R21,R30
0008aa c1b2      	RJMP _0x2000035
                 _0x2000043:
0008ab e040      	LDI  R20,LOW(0)
0008ac 322e      	CPI  R18,46
0008ad f411      	BRNE _0x2000046
0008ae e014      	LDI  R17,LOW(4)
0008af c1ad      	RJMP _0x2000035
                 _0x2000046:
0008b0 c00f      	RJMP _0x2000047
                 _0x2000042:
0008b1 30e4      	CPI  R30,LOW(0x4)
0008b2 f499      	BRNE _0x2000049
0008b3 3320      	CPI  R18,48
0008b4 f010      	BRLO _0x200004B
0008b5 332a      	CPI  R18,58
0008b6 f008      	BRLO _0x200004C
                 _0x200004B:
0008b7 c008      	RJMP _0x200004A
                 _0x200004C:
0008b8 6200      	ORI  R16,LOW(32)
0008b9 e0aa      	LDI  R26,LOW(10)
0008ba 9f4a      	MUL  R20,R26
0008bb 2d40      	MOV  R20,R0
0008bc 2fe2      	MOV  R30,R18
0008bd 53e0      	SUBI R30,LOW(48)
0008be 0f4e      	ADD  R20,R30
0008bf c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0008c0 362c      	CPI  R18,108
0008c1 f419      	BRNE _0x200004D
0008c2 6002      	ORI  R16,LOW(2)
0008c3 e015      	LDI  R17,LOW(5)
0008c4 c198      	RJMP _0x2000035
                 _0x200004D:
0008c5 c004      	RJMP _0x200004E
                 _0x2000049:
0008c6 30e5      	CPI  R30,LOW(0x5)
0008c7 f011      	BREQ PC+3
0008c8 940c 0a5d 	JMP _0x2000035
                 _0x200004E:
0008ca 2fe2      	MOV  R30,R18
0008cb 36e3      	CPI  R30,LOW(0x63)
0008cc f459      	BRNE _0x2000053
0008cd 940e 0fc8 	CALL SUBOPT_0x36
0008cf 940e 0fcf 	CALL SUBOPT_0x37
0008d1 940e 0fc8 	CALL SUBOPT_0x36
0008d3 81a4      	LDD  R26,Z+4
0008d4 93aa      	ST   -Y,R26
0008d5 940e 0fd6 	CALL SUBOPT_0x38
0008d7 c184      	RJMP _0x2000054
                 _0x2000053:
0008d8 34e5      	CPI  R30,LOW(0x45)
0008d9 f011      	BREQ _0x2000057
0008da 36e5      	CPI  R30,LOW(0x65)
0008db f409      	BRNE _0x2000058
                 _0x2000057:
0008dc c004      	RJMP _0x2000059
                 _0x2000058:
0008dd 36e6      	CPI  R30,LOW(0x66)
0008de f011      	BREQ PC+3
0008df 940c 092b 	JMP _0x200005A
                 _0x2000059:
0008e1 01fe      	MOVW R30,R28
0008e2 9676      	ADIW R30,22
0008e3 87ee      	STD  Y+14,R30
0008e4 87ff      	STD  Y+14+1,R31
0008e5 940e 0fde 	CALL SUBOPT_0x39
0008e7 940e 130a 	CALL __GETD1P
0008e9 940e 0fe5 	CALL SUBOPT_0x3A
0008eb 940e 0fea 	CALL SUBOPT_0x3B
0008ed 85ad      	LDD  R26,Y+13
0008ee 23aa      	TST  R26
0008ef f022      	BRMI _0x200005B
0008f0 89ad      	LDD  R26,Y+21
0008f1 32ab      	CPI  R26,LOW(0x2B)
0008f2 f049      	BREQ _0x200005D
0008f3 c017      	RJMP _0x200005E
                 _0x200005B:
0008f4 940e 0fec 	CALL SUBOPT_0x3C
0008f6 940e 10a1 	CALL __ANEGF1
0008f8 940e 0fe5 	CALL SUBOPT_0x3A
0008fa e2ed      	LDI  R30,LOW(45)
0008fb 8bed      	STD  Y+21,R30
                 _0x200005D:
0008fc ff07      	SBRS R16,7
0008fd c005      	RJMP _0x200005F
0008fe 89ed      	LDD  R30,Y+21
0008ff 93ea      	ST   -Y,R30
000900 940e 0fd6 	CALL SUBOPT_0x38
000902 c008      	RJMP _0x2000060
                 _0x200005F:
000903 85ee      	LDD  R30,Y+14
000904 85ff      	LDD  R31,Y+14+1
000905 9631      	ADIW R30,1
000906 87ee      	STD  Y+14,R30
000907 87ff      	STD  Y+14+1,R31
000908 9731      	SBIW R30,1
000909 89ad      	LDD  R26,Y+21
00090a 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
00090b ff05      	SBRS R16,5
00090c e046      	LDI  R20,LOW(6)
00090d 3626      	CPI  R18,102
00090e f461      	BRNE _0x2000062
00090f 940e 0fec 	CALL SUBOPT_0x3C
000911 940e 1330 	CALL __PUTPARD1
000913 934a      	ST   -Y,R20
000914 89eb      	LDD  R30,Y+19
000915 89fc      	LDD  R31,Y+19+1
000916 93fa      	ST   -Y,R31
000917 93ea      	ST   -Y,R30
000918 940e 0d45 	CALL _ftoa
00091a c00b      	RJMP _0x2000063
                 _0x2000062:
00091b 940e 0fec 	CALL SUBOPT_0x3C
00091d 940e 1330 	CALL __PUTPARD1
00091f 934a      	ST   -Y,R20
000920 932a      	ST   -Y,R18
000921 89ec      	LDD  R30,Y+20
000922 89fd      	LDD  R31,Y+20+1
000923 93fa      	ST   -Y,R31
000924 93ea      	ST   -Y,R30
000925 de55      	RCALL __ftoe_G100
                 _0x2000063:
000926 01fe      	MOVW R30,R28
000927 9676      	ADIW R30,22
000928 940e 0ff1 	CALL SUBOPT_0x3D
00092a c01e      	RJMP _0x2000064
                 _0x200005A:
00092b 37e3      	CPI  R30,LOW(0x73)
00092c f439      	BRNE _0x2000066
00092d 940e 0fea 	CALL SUBOPT_0x3B
00092f 940e 0ff9 	CALL SUBOPT_0x3E
000931 940e 0ff1 	CALL SUBOPT_0x3D
000933 c00e      	RJMP _0x2000067
                 _0x2000066:
000934 37e0      	CPI  R30,LOW(0x70)
000935 f4c1      	BRNE _0x2000069
000936 940e 0fea 	CALL SUBOPT_0x3B
000938 940e 0ff9 	CALL SUBOPT_0x3E
00093a 87ee      	STD  Y+14,R30
00093b 87ff      	STD  Y+14+1,R31
00093c 93fa      	ST   -Y,R31
00093d 93ea      	ST   -Y,R30
00093e 940e 0d3a 	CALL _strlenf
000940 2f1e      	MOV  R17,R30
000941 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000942 770f      	ANDI R16,LOW(127)
000943 3040      	CPI  R20,0
000944 f011      	BREQ _0x200006B
000945 1741      	CP   R20,R17
000946 f008      	BRLO _0x200006C
                 _0x200006B:
000947 c001      	RJMP _0x200006A
                 _0x200006C:
000948 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000949 e040      	LDI  R20,LOW(0)
00094a e0e0      	LDI  R30,LOW(0)
00094b 8bec      	STD  Y+20,R30
00094c e030      	LDI  R19,LOW(0)
00094d c06e      	RJMP _0x200006D
                 _0x2000069:
00094e 36e4      	CPI  R30,LOW(0x64)
00094f f011      	BREQ _0x2000070
000950 36e9      	CPI  R30,LOW(0x69)
000951 f411      	BRNE _0x2000071
                 _0x2000070:
000952 6004      	ORI  R16,LOW(4)
000953 c002      	RJMP _0x2000072
                 _0x2000071:
000954 37e5      	CPI  R30,LOW(0x75)
000955 f4a1      	BRNE _0x2000073
                 _0x2000072:
000956 e0ea      	LDI  R30,LOW(10)
000957 8bec      	STD  Y+20,R30
000958 ff01      	SBRS R16,1
000959 c008      	RJMP _0x2000074
                +
00095a e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00095b ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00095c e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00095d e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00095e 940e 0ffe 	CALL SUBOPT_0x3F
000960 e01a      	LDI  R17,LOW(10)
000961 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000962 e1e0     +LDI R30 , LOW ( 0x2710 )
000963 e2f7     +LDI R31 , HIGH ( 0x2710 )
000964 e060     +LDI R22 , BYTE3 ( 0x2710 )
000965 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000966 940e 0ffe 	CALL SUBOPT_0x3F
000968 e015      	LDI  R17,LOW(5)
000969 c01b      	RJMP _0x2000075
                 _0x2000073:
00096a 35e8      	CPI  R30,LOW(0x58)
00096b f411      	BRNE _0x2000077
00096c 6008      	ORI  R16,LOW(8)
00096d c004      	RJMP _0x2000078
                 _0x2000077:
00096e 37e8      	CPI  R30,LOW(0x78)
00096f f011      	BREQ PC+3
000970 940c 0a5c 	JMP _0x20000B6
                 _0x2000078:
000972 e1e0      	LDI  R30,LOW(16)
000973 8bec      	STD  Y+20,R30
000974 ff01      	SBRS R16,1
000975 c008      	RJMP _0x200007A
                +
000976 e0e0     +LDI R30 , LOW ( 0x10000000 )
000977 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000978 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000979 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00097a 940e 0ffe 	CALL SUBOPT_0x3F
00097c e018      	LDI  R17,LOW(8)
00097d c007      	RJMP _0x2000075
                 _0x200007A:
                +
00097e e0e0     +LDI R30 , LOW ( 0x1000 )
00097f e1f0     +LDI R31 , HIGH ( 0x1000 )
000980 e060     +LDI R22 , BYTE3 ( 0x1000 )
000981 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000982 940e 0ffe 	CALL SUBOPT_0x3F
000984 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000985 3040      	CPI  R20,0
000986 f011      	BREQ _0x200007B
000987 770f      	ANDI R16,LOW(127)
000988 c001      	RJMP _0x200007C
                 _0x200007B:
000989 e041      	LDI  R20,LOW(1)
                 _0x200007C:
00098a ff01      	SBRS R16,1
00098b c008      	RJMP _0x200007D
00098c 940e 0fea 	CALL SUBOPT_0x3B
00098e 940e 0fde 	CALL SUBOPT_0x39
000990 9614      	ADIW R26,4
000991 940e 130a 	CALL __GETD1P
000993 c00f      	RJMP _0x2000113
                 _0x200007D:
000994 ff02      	SBRS R16,2
000995 c007      	RJMP _0x200007F
000996 940e 0fea 	CALL SUBOPT_0x3B
000998 940e 0ff9 	CALL SUBOPT_0x3E
00099a 940e 126a 	CALL __CWD1
00099c c006      	RJMP _0x2000113
                 _0x200007F:
00099d 940e 0fea 	CALL SUBOPT_0x3B
00099f 940e 0ff9 	CALL SUBOPT_0x3E
0009a1 2766      	CLR  R22
0009a2 2777      	CLR  R23
                 _0x2000113:
                +
0009a3 87ea     +STD Y + 10 , R30
0009a4 87fb     +STD Y + 10 + 1 , R31
0009a5 876c     +STD Y + 10 + 2 , R22
0009a6 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0009a7 ff02      	SBRS R16,2
0009a8 c012      	RJMP _0x2000081
0009a9 85ad      	LDD  R26,Y+13
0009aa 23aa      	TST  R26
0009ab f442      	BRPL _0x2000082
0009ac 940e 0fec 	CALL SUBOPT_0x3C
0009ae 940e 1257 	CALL __ANEGD1
0009b0 940e 0fe5 	CALL SUBOPT_0x3A
0009b2 e2ed      	LDI  R30,LOW(45)
0009b3 8bed      	STD  Y+21,R30
                 _0x2000082:
0009b4 89ed      	LDD  R30,Y+21
0009b5 30e0      	CPI  R30,0
0009b6 f019      	BREQ _0x2000083
0009b7 5f1f      	SUBI R17,-LOW(1)
0009b8 5f4f      	SUBI R20,-LOW(1)
0009b9 c001      	RJMP _0x2000084
                 _0x2000083:
0009ba 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
0009bb 2f34      	MOV  R19,R20
                 _0x200006D:
0009bc fd00      	SBRC R16,0
0009bd c014      	RJMP _0x2000085
                 _0x2000086:
0009be 1715      	CP   R17,R21
0009bf f410      	BRSH _0x2000089
0009c0 1735      	CP   R19,R21
0009c1 f008      	BRLO _0x200008A
                 _0x2000089:
0009c2 c00f      	RJMP _0x2000088
                 _0x200008A:
0009c3 ff07      	SBRS R16,7
0009c4 c008      	RJMP _0x200008B
0009c5 ff02      	SBRS R16,2
0009c6 c004      	RJMP _0x200008C
0009c7 7f0b      	ANDI R16,LOW(251)
0009c8 892d      	LDD  R18,Y+21
0009c9 5011      	SUBI R17,LOW(1)
0009ca c001      	RJMP _0x200008D
                 _0x200008C:
0009cb e320      	LDI  R18,LOW(48)
                 _0x200008D:
0009cc c001      	RJMP _0x200008E
                 _0x200008B:
0009cd e220      	LDI  R18,LOW(32)
                 _0x200008E:
0009ce 940e 0fbf 	CALL SUBOPT_0x35
0009d0 5051      	SUBI R21,LOW(1)
0009d1 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0009d2 1714      	CP   R17,R20
0009d3 f490      	BRSH _0x2000091
0009d4 6100      	ORI  R16,LOW(16)
0009d5 ff02      	SBRS R16,2
0009d6 c006      	RJMP _0x2000092
0009d7 940e 1003 	CALL SUBOPT_0x40
0009d9 f009      	BREQ _0x2000093
0009da 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0009db 5011      	SUBI R17,LOW(1)
0009dc 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0009dd e3e0      	LDI  R30,LOW(48)
0009de 93ea      	ST   -Y,R30
0009df 940e 0fd6 	CALL SUBOPT_0x38
0009e1 3050      	CPI  R21,0
0009e2 f009      	BREQ _0x2000094
0009e3 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0009e4 5041      	SUBI R20,LOW(1)
0009e5 cfec      	RJMP _0x200008F
                 _0x2000091:
0009e6 2f31      	MOV  R19,R17
0009e7 89ec      	LDD  R30,Y+20
0009e8 30e0      	CPI  R30,0
0009e9 f4b9      	BRNE _0x2000095
                 _0x2000096:
0009ea 3030      	CPI  R19,0
0009eb f0a1      	BREQ _0x2000098
0009ec ff03      	SBRS R16,3
0009ed c006      	RJMP _0x2000099
0009ee 85ee      	LDD  R30,Y+14
0009ef 85ff      	LDD  R31,Y+14+1
0009f0 9125      	LPM  R18,Z+
0009f1 87ee      	STD  Y+14,R30
0009f2 87ff      	STD  Y+14+1,R31
0009f3 c005      	RJMP _0x200009A
                 _0x2000099:
0009f4 85ae      	LDD  R26,Y+14
0009f5 85bf      	LDD  R27,Y+14+1
0009f6 912d      	LD   R18,X+
0009f7 87ae      	STD  Y+14,R26
0009f8 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0009f9 940e 0fbf 	CALL SUBOPT_0x35
0009fb 3050      	CPI  R21,0
0009fc f009      	BREQ _0x200009B
0009fd 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0009fe 5031      	SUBI R19,LOW(1)
0009ff cfea      	RJMP _0x2000096
                 _0x2000098:
000a00 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000a01 940e 1017 	CALL SUBOPT_0x41
000a03 940e 12b2 	CALL __DIVD21U
000a05 2f2e      	MOV  R18,R30
000a06 302a      	CPI  R18,10
000a07 f030      	BRLO _0x20000A0
000a08 ff03      	SBRS R16,3
000a09 c002      	RJMP _0x20000A1
000a0a 5c29      	SUBI R18,-LOW(55)
000a0b c001      	RJMP _0x20000A2
                 _0x20000A1:
000a0c 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000a0d c001      	RJMP _0x20000A3
                 _0x20000A0:
000a0e 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000a0f fd04      	SBRC R16,4
000a10 c021      	RJMP _0x20000A5
000a11 3321      	CPI  R18,49
000a12 f460      	BRSH _0x20000A7
                +
000a13 89a8     +LDD R26 , Y + 16
000a14 89b9     +LDD R27 , Y + 16 + 1
000a15 898a     +LDD R24 , Y + 16 + 2
000a16 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000a17 30a1     +CPI R26 , LOW ( 0x1 )
000a18 e0e0     +LDI R30 , HIGH ( 0x1 )
000a19 07be     +CPC R27 , R30
000a1a e0e0     +LDI R30 , BYTE3 ( 0x1 )
000a1b 078e     +CPC R24 , R30
000a1c e0e0     +LDI R30 , BYTE4 ( 0x1 )
000a1d 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000a1e f409      	BRNE _0x20000A6
                 _0x20000A7:
000a1f c00b      	RJMP _0x20000A9
                 _0x20000A6:
000a20 1743      	CP   R20,R19
000a21 f440      	BRSH _0x2000114
000a22 1753      	CP   R21,R19
000a23 f010      	BRLO _0x20000AC
000a24 ff00      	SBRS R16,0
000a25 c001      	RJMP _0x20000AD
                 _0x20000AC:
000a26 c010      	RJMP _0x20000AB
                 _0x20000AD:
000a27 e220      	LDI  R18,LOW(32)
000a28 ff07      	SBRS R16,7
000a29 c008      	RJMP _0x20000AE
                 _0x2000114:
000a2a e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000a2b 6100      	ORI  R16,LOW(16)
000a2c ff02      	SBRS R16,2
000a2d c004      	RJMP _0x20000AF
000a2e 940e 1003 	CALL SUBOPT_0x40
000a30 f009      	BREQ _0x20000B0
000a31 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000a32 940e 0fbf 	CALL SUBOPT_0x35
000a34 3050      	CPI  R21,0
000a35 f009      	BREQ _0x20000B1
000a36 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000a37 5031      	SUBI R19,LOW(1)
000a38 940e 1017 	CALL SUBOPT_0x41
000a3a 940e 12e3 	CALL __MODD21U
000a3c 940e 0fe5 	CALL SUBOPT_0x3A
000a3e 89ec      	LDD  R30,Y+20
                +
000a3f 89a8     +LDD R26 , Y + 16
000a40 89b9     +LDD R27 , Y + 16 + 1
000a41 898a     +LDD R24 , Y + 16 + 2
000a42 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000a43 27ff      	CLR  R31
000a44 2766      	CLR  R22
000a45 2777      	CLR  R23
000a46 940e 12b2 	CALL __DIVD21U
000a48 940e 0ffe 	CALL SUBOPT_0x3F
                +
000a4a 89e8     +LDD R30 , Y + 16
000a4b 89f9     +LDD R31 , Y + 16 + 1
000a4c 896a     +LDD R22 , Y + 16 + 2
000a4d 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000a4e 940e 1347 	CALL __CPD10
000a50 f009      	BREQ _0x200009F
000a51 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000a52 ff00      	SBRS R16,0
000a53 c008      	RJMP _0x20000B2
                 _0x20000B3:
000a54 3050      	CPI  R21,0
000a55 f031      	BREQ _0x20000B5
000a56 5051      	SUBI R21,LOW(1)
000a57 e2e0      	LDI  R30,LOW(32)
000a58 93ea      	ST   -Y,R30
000a59 940e 0fd6 	CALL SUBOPT_0x38
000a5b cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x2000112:
000a5c e010      	LDI  R17,LOW(0)
                 _0x2000035:
000a5d ce06      	RJMP _0x2000030
                 _0x2000032:
000a5e 81ae      	LDD  R26,Y+6
000a5f 81bf      	LDD  R27,Y+6+1
000a60 940e 1306 	CALL __GETW1P
000a62 940e 1356 	CALL __LOADLOCR6
000a64 96ef      	ADIW R28,63
000a65 966f      	ADIW R28,31
000a66 9508      	RET
                 _sprintf:
000a67 92ff      	PUSH R15
000a68 2ef8      	MOV  R15,R24
000a69 9726      	SBIW R28,6
000a6a 940e 1351 	CALL __SAVELOCR4
000a6c 940e 1020 	CALL SUBOPT_0x42
000a6e 9730      	SBIW R30,0
000a6f f419      	BRNE _0x20000B7
000a70 efef      	LDI  R30,LOW(65535)
000a71 efff      	LDI  R31,HIGH(65535)
000a72 c023      	RJMP _0x20A0008
                 _0x20000B7:
000a73 01de      	MOVW R26,R28
000a74 9616      	ADIW R26,6
000a75 940e 124a 	CALL __ADDW2R15
000a77 018d      	MOVW R16,R26
000a78 940e 1020 	CALL SUBOPT_0x42
000a7a 83ee      	STD  Y+6,R30
000a7b 83ff      	STD  Y+6+1,R31
000a7c e0e0      	LDI  R30,LOW(0)
000a7d 87e8      	STD  Y+8,R30
000a7e 87e9      	STD  Y+8+1,R30
000a7f 01de      	MOVW R26,R28
000a80 961a      	ADIW R26,10
000a81 940e 1027 	CALL SUBOPT_0x43
000a83 93fa      	ST   -Y,R31
000a84 93ea      	ST   -Y,R30
000a85 931a      	ST   -Y,R17
000a86 930a      	ST   -Y,R16
000a87 e4e4      	LDI  R30,LOW(_put_buff_G100)
000a88 e0f7      	LDI  R31,HIGH(_put_buff_G100)
000a89 93fa      	ST   -Y,R31
000a8a 93ea      	ST   -Y,R30
000a8b 01fe      	MOVW R30,R28
000a8c 963a      	ADIW R30,10
000a8d 93fa      	ST   -Y,R31
000a8e 93ea      	ST   -Y,R30
000a8f ddbb      	RCALL __print_G100
000a90 019f      	MOVW R18,R30
000a91 81ae      	LDD  R26,Y+6
000a92 81bf      	LDD  R27,Y+6+1
000a93 e0e0      	LDI  R30,LOW(0)
000a94 93ec      	ST   X,R30
000a95 01f9      	MOVW R30,R18
                 _0x20A0008:
000a96 940e 1358 	CALL __LOADLOCR4
000a98 962a      	ADIW R28,10
000a99 90ff      	POP  R15
000a9a 9508      	RET
                 _get_buff_G100:
000a9b 931a      	ST   -Y,R17
000a9c 81a9      	LDD  R26,Y+1
000a9d 81ba      	LDD  R27,Y+1+1
000a9e e0e0      	LDI  R30,LOW(0)
000a9f 93ec      	ST   X,R30
000aa0 81ab      	LDD  R26,Y+3
000aa1 81bc      	LDD  R27,Y+3+1
000aa2 91ec      	LD   R30,X
000aa3 2f1e      	MOV  R17,R30
000aa4 30e0      	CPI  R30,0
000aa5 f019      	BREQ _0x20000BF
000aa6 e0e0      	LDI  R30,LOW(0)
000aa7 93ec      	ST   X,R30
000aa8 c016      	RJMP _0x20000C0
                 _0x20000BF:
000aa9 81a9      	LDD  R26,Y+1
000aaa 81ba      	LDD  R27,Y+1+1
000aab 9611      	ADIW R26,1
000aac 940e 1306 	CALL __GETW1P
000aae 9730      	SBIW R30,0
000aaf f071      	BREQ _0x20000C1
000ab0 81e9      	LDD  R30,Y+1
000ab1 81fa      	LDD  R31,Y+1+1
000ab2 81a1      	LDD  R26,Z+1
000ab3 81b2      	LDD  R27,Z+2
000ab4 91ec      	LD   R30,X
000ab5 2f1e      	MOV  R17,R30
000ab6 30e0      	CPI  R30,0
000ab7 f029      	BREQ _0x20000C2
000ab8 81a9      	LDD  R26,Y+1
000ab9 81ba      	LDD  R27,Y+1+1
000aba 9611      	ADIW R26,1
000abb 940e 0ed9 	CALL SUBOPT_0x16
                 _0x20000C2:
000abd c001      	RJMP _0x20000C3
                 _0x20000C1:
000abe e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000abf 2fe1      	MOV  R30,R17
000ac0 8118      	LDD  R17,Y+0
                 _0x20A0007:
000ac1 9625      	ADIW R28,5
000ac2 9508      	RET
                 __scanf_G100:
000ac3 9728      	SBIW R28,8
000ac4 940e 134f 	CALL __SAVELOCR6
000ac6 e0e0      	LDI  R30,LOW(0)
000ac7 e0f0      	LDI  R31,HIGH(0)
000ac8 87ea      	STD  Y+10,R30
000ac9 87fb      	STD  Y+10+1,R31
000aca 87ed      	STD  Y+13,R30
                 _0x20000C4:
000acb 89ec      	LDD  R30,Y+20
000acc 89fd      	LDD  R31,Y+20+1
000acd 9631      	ADIW R30,1
000ace 8bec      	STD  Y+20,R30
000acf 8bfd      	STD  Y+20+1,R31
000ad0 9731      	SBIW R30,1
000ad1 91e4      	LPM  R30,Z
000ad2 2f3e      	MOV  R19,R30
000ad3 30e0      	CPI  R30,0
000ad4 f411      	BRNE PC+3
000ad5 940c 0bf7 	JMP _0x20000C6
000ad7 940e 102c 	CALL SUBOPT_0x44
000ad9 f091      	BREQ _0x20000C7
                 _0x20000C8:
000ada 940e 1031 	CALL SUBOPT_0x45
000adc 2f3e      	MOV  R19,R30
000add 30e0      	CPI  R30,0
000ade f019      	BREQ _0x20000CB
000adf 940e 102c 	CALL SUBOPT_0x44
000ae1 f409      	BRNE _0x20000CC
                 _0x20000CB:
000ae2 c007      	RJMP _0x20000CA
                 _0x20000CC:
000ae3 940e 103d 	CALL SUBOPT_0x46
000ae5 f41c      	BRGE _0x20000CD
000ae6 efef      	LDI  R30,LOW(65535)
000ae7 efff      	LDI  R31,HIGH(65535)
000ae8 c110      	RJMP _0x20A0005
                 _0x20000CD:
000ae9 cff0      	RJMP _0x20000C8
                 _0x20000CA:
                +
000aea 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000aeb c10a      	RJMP _0x20000CE
                 _0x20000C7:
000aec 3235      	CPI  R19,37
000aed f011      	BREQ PC+3
000aee 940c 0be4 	JMP _0x20000CF
000af0 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000af1 89ec      	LDD  R30,Y+20
000af2 89fd      	LDD  R31,Y+20+1
000af3 9135      	LPM  R19,Z+
000af4 8bec      	STD  Y+20,R30
000af5 8bfd      	STD  Y+20+1,R31
000af6 3330      	CPI  R19,48
000af7 f010      	BRLO _0x20000D4
000af8 333a      	CPI  R19,58
000af9 f008      	BRLO _0x20000D3
                 _0x20000D4:
000afa c007      	RJMP _0x20000D2
                 _0x20000D3:
000afb e0aa      	LDI  R26,LOW(10)
000afc 9f5a      	MUL  R21,R26
000afd 2d50      	MOV  R21,R0
000afe 2fe3      	MOV  R30,R19
000aff 53e0      	SUBI R30,LOW(48)
000b00 0f5e      	ADD  R21,R30
000b01 cfef      	RJMP _0x20000D0
                 _0x20000D2:
000b02 3030      	CPI  R19,0
000b03 f409      	BRNE _0x20000D6
000b04 c0f2      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000b05 940e 1031 	CALL SUBOPT_0x45
000b07 2f2e      	MOV  R18,R30
000b08 93ea      	ST   -Y,R30
000b09 940e 0d0d 	CALL _isspace
000b0b 30e0      	CPI  R30,0
000b0c f039      	BREQ _0x20000D9
000b0d 940e 103d 	CALL SUBOPT_0x46
000b0f f41c      	BRGE _0x20000DA
000b10 efef      	LDI  R30,LOW(65535)
000b11 efff      	LDI  R31,HIGH(65535)
000b12 c0e6      	RJMP _0x20A0005
                 _0x20000DA:
000b13 cff1      	RJMP _0x20000D7
                 _0x20000D9:
000b14 3020      	CPI  R18,0
000b15 f409      	BRNE _0x20000DB
000b16 c0d7      	RJMP _0x20000DC
                 _0x20000DB:
                +
000b17 872d     +STD Y + 13 , R18
                 	__PUTBSR 18,13
000b18 3050      	CPI  R21,0
000b19 f409      	BRNE _0x20000DD
000b1a ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000b1b e040      	LDI  R20,LOW(0)
000b1c 2fe3      	MOV  R30,R19
000b1d 36e3      	CPI  R30,LOW(0x63)
000b1e f469      	BRNE _0x20000E1
000b1f 940e 1042 	CALL SUBOPT_0x47
000b21 940e 1031 	CALL SUBOPT_0x45
000b23 01d8      	MOVW R26,R16
000b24 93ec      	ST   X,R30
000b25 940e 103d 	CALL SUBOPT_0x46
000b27 f41c      	BRGE _0x20000E2
000b28 efef      	LDI  R30,LOW(65535)
000b29 efff      	LDI  R31,HIGH(65535)
000b2a c0ce      	RJMP _0x20A0005
                 _0x20000E2:
000b2b c0b2      	RJMP _0x20000E0
                 _0x20000E1:
000b2c 37e3      	CPI  R30,LOW(0x73)
000b2d f511      	BRNE _0x20000E3
000b2e 940e 1042 	CALL SUBOPT_0x47
                 _0x20000E4:
000b30 2fe5      	MOV  R30,R21
000b31 5051      	SUBI R21,1
000b32 30e0      	CPI  R30,0
000b33 f0c1      	BREQ _0x20000E6
000b34 940e 1031 	CALL SUBOPT_0x45
000b36 2f3e      	MOV  R19,R30
000b37 30e0      	CPI  R30,0
000b38 f019      	BREQ _0x20000E8
000b39 940e 102c 	CALL SUBOPT_0x44
000b3b f039      	BREQ _0x20000E7
                 _0x20000E8:
000b3c 940e 103d 	CALL SUBOPT_0x46
000b3e f41c      	BRGE _0x20000EA
000b3f efef      	LDI  R30,LOW(65535)
000b40 efff      	LDI  R31,HIGH(65535)
000b41 c0b7      	RJMP _0x20A0005
                 _0x20000EA:
000b42 c009      	RJMP _0x20000E6
                 _0x20000E7:
000b43 931f      	PUSH R17
000b44 930f      	PUSH R16
                +
000b45 5f0f     +SUBI R16 , LOW ( - 1 )
000b46 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000b47 2fe3      	MOV  R30,R19
000b48 91af      	POP  R26
000b49 91bf      	POP  R27
000b4a 93ec      	ST   X,R30
000b4b cfe4      	RJMP _0x20000E4
                 _0x20000E6:
000b4c 01d8      	MOVW R26,R16
000b4d e0e0      	LDI  R30,LOW(0)
000b4e 93ec      	ST   X,R30
000b4f c08e      	RJMP _0x20000E0
                 _0x20000E3:
000b50 36ec      	CPI  R30,LOW(0x6C)
000b51 f431      	BRNE _0x20000EC
000b52 e041      	LDI  R20,LOW(1)
000b53 89ec      	LDD  R30,Y+20
000b54 89fd      	LDD  R31,Y+20+1
000b55 9135      	LPM  R19,Z+
000b56 8bec      	STD  Y+20,R30
000b57 8bfd      	STD  Y+20+1,R31
                 _0x20000EC:
000b58 e0e1      	LDI  R30,LOW(1)
000b59 87ec      	STD  Y+12,R30
000b5a 2fe3      	MOV  R30,R19
000b5b 36e4      	CPI  R30,LOW(0x64)
000b5c f011      	BREQ _0x20000F1
000b5d 36e9      	CPI  R30,LOW(0x69)
000b5e f419      	BRNE _0x20000F2
                 _0x20000F1:
000b5f e0e0      	LDI  R30,LOW(0)
000b60 87ec      	STD  Y+12,R30
000b61 c002      	RJMP _0x20000F3
                 _0x20000F2:
000b62 37e5      	CPI  R30,LOW(0x75)
000b63 f411      	BRNE _0x20000F4
                 _0x20000F3:
000b64 e02a      	LDI  R18,LOW(10)
000b65 c008      	RJMP _0x20000EF
                 _0x20000F4:
000b66 37e8      	CPI  R30,LOW(0x78)
000b67 f411      	BRNE _0x20000F5
000b68 e120      	LDI  R18,LOW(16)
000b69 c004      	RJMP _0x20000EF
                 _0x20000F5:
000b6a 32e5      	CPI  R30,LOW(0x25)
000b6b f409      	BRNE _0x20000F8
000b6c c077      	RJMP _0x20000F7
                 _0x20000F8:
000b6d c089      	RJMP _0x20A0006
                 _0x20000EF:
000b6e e0e0      	LDI  R30,LOW(0)
                +
000b6f 83ee     +STD Y + 6 , R30
000b70 83ef     +STD Y + 6 + 1 , R30
000b71 87e8     +STD Y + 6 + 2 , R30
000b72 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
                 _0x20000F9:
000b73 2fe5      	MOV  R30,R21
000b74 5051      	SUBI R21,1
000b75 30e0      	CPI  R30,0
000b76 f411      	BRNE PC+3
000b77 940c 0bbe 	JMP _0x20000FB
000b79 940e 1031 	CALL SUBOPT_0x45
000b7b 2f3e      	MOV  R19,R30
000b7c 32e1      	CPI  R30,LOW(0x21)
000b7d f438      	BRSH _0x20000FC
000b7e 940e 103d 	CALL SUBOPT_0x46
000b80 f41c      	BRGE _0x20000FD
000b81 efef      	LDI  R30,LOW(65535)
000b82 efff      	LDI  R31,HIGH(65535)
000b83 c075      	RJMP _0x20A0005
                 _0x20000FD:
000b84 c017      	RJMP _0x20000FE
                 _0x20000FC:
000b85 85ec      	LDD  R30,Y+12
000b86 30e0      	CPI  R30,0
000b87 f439      	BRNE _0x20000FF
000b88 323d      	CPI  R19,45
000b89 f419      	BRNE _0x2000100
000b8a efef      	LDI  R30,LOW(255)
000b8b 87ec      	STD  Y+12,R30
000b8c cfe6      	RJMP _0x20000F9
                 _0x2000100:
000b8d e0e1      	LDI  R30,LOW(1)
000b8e 87ec      	STD  Y+12,R30
                 _0x20000FF:
000b8f 3120      	CPI  R18,16
000b90 f431      	BRNE _0x2000102
000b91 933a      	ST   -Y,R19
000b92 940e 0d17 	CALL _isxdigit
000b94 30e0      	CPI  R30,0
000b95 f031      	BREQ _0x20000FE
000b96 c007      	RJMP _0x2000104
                 _0x2000102:
000b97 933a      	ST   -Y,R19
000b98 940e 0d05 	CALL _isdigit
000b9a 30e0      	CPI  R30,0
000b9b f411      	BRNE _0x2000105
                 _0x20000FE:
                +
000b9c 873d     +STD Y + 13 , R19
                 	__PUTBSR 19,13
000b9d c020      	RJMP _0x20000FB
                 _0x2000105:
                 _0x2000104:
000b9e 3631      	CPI  R19,97
000b9f f010      	BRLO _0x2000106
000ba0 5537      	SUBI R19,LOW(87)
000ba1 c005      	RJMP _0x2000107
                 _0x2000106:
000ba2 3431      	CPI  R19,65
000ba3 f010      	BRLO _0x2000108
000ba4 5337      	SUBI R19,LOW(55)
000ba5 c001      	RJMP _0x2000109
                 _0x2000108:
000ba6 5330      	SUBI R19,LOW(48)
                 _0x2000109:
                 _0x2000107:
000ba7 2fe2      	MOV  R30,R18
                +
000ba8 81ae     +LDD R26 , Y + 6
000ba9 81bf     +LDD R27 , Y + 6 + 1
000baa 8588     +LDD R24 , Y + 6 + 2
000bab 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000bac 27ff      	CLR  R31
000bad 2766      	CLR  R22
000bae 2777      	CLR  R23
000baf 940e 1274 	CALL __MULD12U
000bb1 01df      	MOVW R26,R30
000bb2 01cb      	MOVW R24,R22
000bb3 2fe3      	MOV  R30,R19
000bb4 27ff      	CLR  R31
000bb5 2766      	CLR  R22
000bb6 2777      	CLR  R23
000bb7 940e 124e 	CALL __ADDD12
                +
000bb9 83ee     +STD Y + 6 , R30
000bba 83ff     +STD Y + 6 + 1 , R31
000bbb 8768     +STD Y + 6 + 2 , R22
000bbc 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000bbd cfb5      	RJMP _0x20000F9
                 _0x20000FB:
000bbe 85ec      	LDD  R30,Y+12
                +
000bbf 81ae     +LDD R26 , Y + 6
000bc0 81bf     +LDD R27 , Y + 6 + 1
000bc1 8588     +LDD R24 , Y + 6 + 2
000bc2 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000bc3 940e 1264 	CALL __CBD1
000bc5 940e 1274 	CALL __MULD12U
                +
000bc7 83ee     +STD Y + 6 , R30
000bc8 83ff     +STD Y + 6 + 1 , R31
000bc9 8768     +STD Y + 6 + 2 , R22
000bca 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000bcb 3040      	CPI  R20,0
000bcc f051      	BREQ _0x200010A
000bcd 940e 1042 	CALL SUBOPT_0x47
                +
000bcf 81ee     +LDD R30 , Y + 6
000bd0 81ff     +LDD R31 , Y + 6 + 1
000bd1 8568     +LDD R22 , Y + 6 + 2
000bd2 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000bd3 01d8      	MOVW R26,R16
000bd4 940e 1315 	CALL __PUTDP1
000bd6 c007      	RJMP _0x200010B
                 _0x200010A:
000bd7 940e 1042 	CALL SUBOPT_0x47
000bd9 81ee      	LDD  R30,Y+6
000bda 81ff      	LDD  R31,Y+6+1
000bdb 01d8      	MOVW R26,R16
000bdc 93ed      	ST   X+,R30
000bdd 93fc      	ST   X,R31
                 _0x200010B:
                 _0x20000E0:
000bde 85ea      	LDD  R30,Y+10
000bdf 85fb      	LDD  R31,Y+10+1
000be0 9631      	ADIW R30,1
000be1 87ea      	STD  Y+10,R30
000be2 87fb      	STD  Y+10+1,R31
000be3 c012      	RJMP _0x200010C
                 _0x20000CF:
                 _0x20000F7:
000be4 940e 1031 	CALL SUBOPT_0x45
000be6 17e3      	CP   R30,R19
000be7 f071      	BREQ _0x200010D
000be8 940e 103d 	CALL SUBOPT_0x46
000bea f41c      	BRGE _0x200010E
000beb efef      	LDI  R30,LOW(65535)
000bec efff      	LDI  R31,HIGH(65535)
000bed c00b      	RJMP _0x20A0005
                 _0x200010E:
                 _0x20000DC:
000bee 85ea      	LDD  R30,Y+10
000bef 85fb      	LDD  R31,Y+10+1
000bf0 9730      	SBIW R30,0
000bf1 f419      	BRNE _0x200010F
000bf2 efef      	LDI  R30,LOW(65535)
000bf3 efff      	LDI  R31,HIGH(65535)
000bf4 c004      	RJMP _0x20A0005
                 _0x200010F:
000bf5 c001      	RJMP _0x20000C6
                 _0x200010D:
                 _0x200010C:
                 _0x20000CE:
000bf6 ced4      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000bf7 85ea      	LDD  R30,Y+10
000bf8 85fb      	LDD  R31,Y+10+1
                 _0x20A0005:
000bf9 940e 1356 	CALL __LOADLOCR6
000bfb 9666      	ADIW R28,22
000bfc 9508      	RET
                 _sscanf:
000bfd 92ff      	PUSH R15
000bfe 2ef8      	MOV  R15,R24
000bff 9723      	SBIW R28,3
000c00 931a      	ST   -Y,R17
000c01 930a      	ST   -Y,R16
000c02 01de      	MOVW R26,R28
000c03 9617      	ADIW R26,7
000c04 940e 1027 	CALL SUBOPT_0x43
000c06 9730      	SBIW R30,0
000c07 f419      	BRNE _0x2000110
000c08 efef      	LDI  R30,LOW(65535)
000c09 efff      	LDI  R31,HIGH(65535)
000c0a c01c      	RJMP _0x20A0004
                 _0x2000110:
000c0b 01de      	MOVW R26,R28
000c0c 9611      	ADIW R26,1
000c0d 940e 124a 	CALL __ADDW2R15
000c0f 018d      	MOVW R16,R26
000c10 01de      	MOVW R26,R28
000c11 9617      	ADIW R26,7
000c12 940e 1027 	CALL SUBOPT_0x43
000c14 83eb      	STD  Y+3,R30
000c15 83fc      	STD  Y+3+1,R31
000c16 01de      	MOVW R26,R28
000c17 9615      	ADIW R26,5
000c18 940e 1027 	CALL SUBOPT_0x43
000c1a 93fa      	ST   -Y,R31
000c1b 93ea      	ST   -Y,R30
000c1c 931a      	ST   -Y,R17
000c1d 930a      	ST   -Y,R16
000c1e e9eb      	LDI  R30,LOW(_get_buff_G100)
000c1f e0fa      	LDI  R31,HIGH(_get_buff_G100)
000c20 93fa      	ST   -Y,R31
000c21 93ea      	ST   -Y,R30
000c22 01fe      	MOVW R30,R28
000c23 9638      	ADIW R30,8
000c24 93fa      	ST   -Y,R31
000c25 93ea      	ST   -Y,R30
000c26 de9c      	RCALL __scanf_G100
                 _0x20A0004:
000c27 8119      	LDD  R17,Y+1
000c28 8108      	LDD  R16,Y+0
000c29 9625      	ADIW R28,5
000c2a 90ff      	POP  R15
000c2b 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000c2c 817b         ldd  r23,y+3
000c2d 816a         ldd  r22,y+2
000c2e 81f9         ldd  r31,y+1
000c2f 81e8         ld   r30,y
000c30 fb77         bst  r23,7
000c31 0f77         lsl  r23
000c32 fd67         sbrc r22,7
000c33 6071         sbr  r23,1
000c34 2f97         mov  r25,r23
000c35 579e         subi r25,0x7e
000c36 f081         breq __ftrunc0
000c37 f078         brcs __ftrunc0
000c38 3198         cpi  r25,24
000c39 f490         brsh __ftrunc1
000c3a 27aa         clr  r26
000c3b 27bb         clr  r27
000c3c 2788         clr  r24
                 __ftrunc2:
000c3d 9408         sec
000c3e 9587         ror  r24
000c3f 95b7         ror  r27
000c40 95a7         ror  r26
000c41 959a         dec  r25
000c42 f7d1         brne __ftrunc2
000c43 23ea         and  r30,r26
000c44 23fb         and  r31,r27
000c45 2368         and  r22,r24
000c46 c005         rjmp __ftrunc1
                 __ftrunc0:
000c47 94e8         clt
000c48 2777         clr  r23
000c49 27ee         clr  r30
000c4a 27ff         clr  r31
000c4b 2766         clr  r22
                 __ftrunc1:
000c4c 776f         cbr  r22,0x80
000c4d 9576         lsr  r23
000c4e f408         brcc __ftrunc3
000c4f 6860         sbr  r22,0x80
                 __ftrunc3:
000c50 f977         bld  r23,7
000c51 91a9         ld   r26,y+
000c52 91b9         ld   r27,y+
000c53 9189         ld   r24,y+
000c54 9199         ld   r25,y+
000c55 17ea         cp   r30,r26
000c56 07fb         cpc  r31,r27
000c57 0768         cpc  r22,r24
000c58 0779         cpc  r23,r25
000c59 fb97         bst  r25,7
000c5a 9508         ret
                 _floor:
000c5b 940e 104d 	CALL SUBOPT_0x48
000c5d 940e 1330 	CALL __PUTPARD1
000c5f 940e 0c2c 	CALL _ftrunc
000c61 940e 1329 	CALL __PUTD1S0
000c63 f419          brne __floor1
                 __floor0:
000c64 940e 104d 	CALL SUBOPT_0x48
000c66 c09c      	RJMP _0x20A0003
                 __floor1:
000c67 f7e6          brtc __floor0
000c68 940e 104d 	CALL SUBOPT_0x48
                +
000c6a e0a0     +LDI R26 , LOW ( 0x3F800000 )
000c6b e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000c6c e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000c6d e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000c6e 940e 1140 	CALL __SUBF12
000c70 c092      	RJMP _0x20A0003
                 _sin:
000c71 9724      	SBIW R28,4
000c72 931a      	ST   -Y,R17
000c73 e010      	LDI  R17,0
000c74 940e 1050 	CALL SUBOPT_0x49
                +
000c76 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000c77 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000c78 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000c79 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000c7a 940e 1197 	CALL __MULF12
000c7c 940e 1055 	CALL SUBOPT_0x4A
000c7e 940e 105a 	CALL SUBOPT_0x4B
000c80 940e 0fa9 	CALL SUBOPT_0x31
000c82 940e 1050 	CALL SUBOPT_0x49
000c84 940e 0dfe 	CALL SUBOPT_0x4
000c86 940e 1055 	CALL SUBOPT_0x4A
000c88 940e 105f 	CALL SUBOPT_0x4C
000c8a 940e 122a 	CALL __CMPF12
000c8c f009      	BREQ PC+2
000c8d f410      	BRCC PC+3
000c8e 940c 0c9b 	JMP  _0x2020017
000c90 940e 105a 	CALL SUBOPT_0x4B
                +
000c92 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000c93 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000c94 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000c95 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000c96 940e 1140 	CALL __SUBF12
000c98 940e 1055 	CALL SUBOPT_0x4A
000c9a e011      	LDI  R17,LOW(1)
                 _0x2020017:
000c9b 940e 1050 	CALL SUBOPT_0x49
                +
000c9d e0e0     +LDI R30 , LOW ( 0x3E800000 )
000c9e e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000c9f e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000ca0 e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000ca1 940e 122a 	CALL __CMPF12
000ca3 f009      	BREQ PC+2
000ca4 f410      	BRCC PC+3
000ca5 940c 0cad 	JMP  _0x2020018
000ca7 940e 105f 	CALL SUBOPT_0x4C
000ca9 940e 1140 	CALL __SUBF12
000cab 940e 1055 	CALL SUBOPT_0x4A
                 _0x2020018:
000cad 3010      	CPI  R17,0
000cae f031      	BREQ _0x2020019
000caf 940e 105a 	CALL SUBOPT_0x4B
000cb1 940e 10a1 	CALL __ANEGF1
000cb3 940e 1055 	CALL SUBOPT_0x4A
                 _0x2020019:
000cb5 940e 105a 	CALL SUBOPT_0x4B
000cb7 940e 1050 	CALL SUBOPT_0x49
000cb9 940e 1197 	CALL __MULF12
                +
000cbb 83e9     +STD Y + 1 , R30
000cbc 83fa     +STD Y + 1 + 1 , R31
000cbd 836b     +STD Y + 1 + 2 , R22
000cbe 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000cbf eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000cc0 ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000cc1 e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000cc2 e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000cc3 940e 1197 	CALL __MULF12
000cc5 01df      	MOVW R26,R30
000cc6 01cb      	MOVW R24,R22
                +
000cc7 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000cc8 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000cc9 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000cca e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000ccb 940e 0dfe 	CALL SUBOPT_0x4
000ccd 940e 1065 	CALL SUBOPT_0x4D
                +
000ccf e4ac     +LDI R26 , LOW ( 0x4104534C )
000cd0 e5b3     +LDI R27 , HIGH ( 0x4104534C )
000cd1 e084     +LDI R24 , BYTE3 ( 0x4104534C )
000cd2 e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000cd3 940e 1147 	CALL __ADDF12
000cd5 940e 1050 	CALL SUBOPT_0x49
000cd7 940e 1197 	CALL __MULF12
000cd9 937f      	PUSH R23
000cda 936f      	PUSH R22
000cdb 93ff      	PUSH R31
000cdc 93ef      	PUSH R30
                +
000cdd 81e9     +LDD R30 , Y + 1
000cde 81fa     +LDD R31 , Y + 1 + 1
000cdf 816b     +LDD R22 , Y + 1 + 2
000ce0 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000ce1 e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000ce2 eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000ce3 ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000ce4 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000ce5 940e 1147 	CALL __ADDF12
000ce7 940e 1065 	CALL SUBOPT_0x4D
                +
000ce9 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000cea e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000ceb ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000cec e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000ced 940e 1147 	CALL __ADDF12
000cef 91af      	POP  R26
000cf0 91bf      	POP  R27
000cf1 918f      	POP  R24
000cf2 919f      	POP  R25
000cf3 940e 11e5 	CALL __DIVF21
000cf5 8118      	LDD  R17,Y+0
000cf6 9629      	ADIW R28,9
000cf7 9508      	RET
                 _cos:
000cf8 940e 1324 	CALL __GETD2S0
                +
000cfa edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000cfb e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000cfc ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000cfd e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000cfe 940e 1140 	CALL __SUBF12
000d00 940e 1330 	CALL __PUTPARD1
000d02 df6e      	RCALL _sin
                 _0x20A0003:
000d03 9624      	ADIW R28,4
000d04 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000d05 e0e1          ldi  r30,1
000d06 91f9          ld   r31,y+
000d07 33f0          cpi  r31,'0'
000d08 f010          brlo isdigit0
000d09 33fa          cpi  r31,'9'+1
000d0a f008          brlo isdigit1
                 isdigit0:
000d0b 27ee          clr  r30
                 isdigit1:
000d0c 9508          ret
                 _isspace:
000d0d e0e1          ldi  r30,1
000d0e 91f9          ld   r31,y+
000d0f 32f0          cpi  r31,' '
000d10 f029          breq isspace1
000d11 30f9          cpi  r31,9
000d12 f010          brlo isspace0
000d13 30fe          cpi  r31,13+1
000d14 f008          brlo isspace1
                 isspace0:
000d15 27ee          clr  r30
                 isspace1:
000d16 9508          ret
                 _isxdigit:
000d17 e0e1          ldi  r30,1
000d18 91f9          ld   r31,y+
000d19 53f0          subi r31,0x30
000d1a f040          brcs isxdigit0
000d1b 30fa          cpi  r31,10
000d1c f038          brcs isxdigit1
000d1d 75ff          andi r31,0x5f
000d1e 50f7          subi r31,7
000d1f 30fa          cpi  r31,10
000d20 f010          brcs isxdigit0
000d21 31f0          cpi  r31,16
000d22 f008          brcs isxdigit1
                 isxdigit0:
000d23 27ee          clr  r30
                 isxdigit1:
000d24 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000d25 91e9          ld   r30,y+
000d26 91f9          ld   r31,y+
000d27 91a9          ld   r26,y+
000d28 91b9          ld   r27,y+
000d29 01cd          movw r24,r26
                 strcpyf0:
000d2a 9005      	lpm  r0,z+
000d2b 920d          st   x+,r0
000d2c 2000          tst  r0
000d2d f7e1          brne strcpyf0
000d2e 01fc          movw r30,r24
000d2f 9508          ret
                 _strlen:
000d30 91a9          ld   r26,y+
000d31 91b9          ld   r27,y+
000d32 27ee          clr  r30
000d33 27ff          clr  r31
                 strlen0:
000d34 916d          ld   r22,x+
000d35 2366          tst  r22
000d36 f011          breq strlen1
000d37 9631          adiw r30,1
000d38 cffb          rjmp strlen0
                 strlen1:
000d39 9508          ret
                 _strlenf:
000d3a 27aa          clr  r26
000d3b 27bb          clr  r27
000d3c 91e9          ld   r30,y+
000d3d 91f9          ld   r31,y+
                 strlenf0:
000d3e 9005      	lpm  r0,z+
000d3f 2000          tst  r0
000d40 f011          breq strlenf1
000d41 9611          adiw r26,1
000d42 cffb          rjmp strlenf0
                 strlenf1:
000d43 01fd          movw r30,r26
000d44 9508          ret
                 
                 	.CSEG
                 _ftoa:
000d45 9724      	SBIW R28,4
000d46 d1ca      	RCALL SUBOPT_0x1C
000d47 e0e0      	LDI  R30,LOW(0)
000d48 83ea      	STD  Y+2,R30
000d49 e3ef      	LDI  R30,LOW(63)
000d4a 83eb      	STD  Y+3,R30
000d4b 931a      	ST   -Y,R17
000d4c 930a      	ST   -Y,R16
000d4d 85eb      	LDD  R30,Y+11
000d4e 85fc      	LDD  R31,Y+11+1
000d4f 3fef      	CPI  R30,LOW(0xFFFF)
000d50 efaf      	LDI  R26,HIGH(0xFFFF)
000d51 07fa      	CPC  R31,R26
000d52 f429      	BRNE _0x208000D
000d53 d318      	RCALL SUBOPT_0x4E
                +
000d54 ece4     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000d55 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000d56 d210      	RCALL SUBOPT_0x28
000d57 c085      	RJMP _0x20A0002
                 _0x208000D:
000d58 3fef      	CPI  R30,LOW(0x7FFF)
000d59 e7af      	LDI  R26,HIGH(0x7FFF)
000d5a 07fa      	CPC  R31,R26
000d5b f429      	BRNE _0x208000C
000d5c d30f      	RCALL SUBOPT_0x4E
                +
000d5d ece5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000d5e e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000d5f d207      	RCALL SUBOPT_0x28
000d60 c07c      	RJMP _0x20A0002
                 _0x208000C:
000d61 85ac      	LDD  R26,Y+12
000d62 23aa      	TST  R26
000d63 f452      	BRPL _0x208000F
                +
000d64 85e9     +LDD R30 , Y + 9
000d65 85fa     +LDD R31 , Y + 9 + 1
000d66 856b     +LDD R22 , Y + 9 + 2
000d67 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000d68 940e 10a1 	CALL __ANEGF1
000d6a d306      	RCALL SUBOPT_0x4F
000d6b d30a      	RCALL SUBOPT_0x50
000d6c e2ed      	LDI  R30,LOW(45)
000d6d 93ec      	ST   X,R30
                 _0x208000F:
000d6e 85a8      	LDD  R26,Y+8
000d6f 30a7      	CPI  R26,LOW(0x7)
000d70 f010      	BRLO _0x2080010
000d71 e0e6      	LDI  R30,LOW(6)
000d72 87e8      	STD  Y+8,R30
                 _0x2080010:
000d73 8518      	LDD  R17,Y+8
                 _0x2080011:
000d74 2fe1      	MOV  R30,R17
000d75 5011      	SUBI R17,1
000d76 30e0      	CPI  R30,0
000d77 f021      	BREQ _0x2080013
000d78 d304      	RCALL SUBOPT_0x51
000d79 d228      	RCALL SUBOPT_0x30
000d7a d307      	RCALL SUBOPT_0x52
000d7b cff8      	RJMP _0x2080011
                 _0x2080013:
000d7c d30a      	RCALL SUBOPT_0x53
000d7d 940e 1147 	CALL __ADDF12
000d7f d2f1      	RCALL SUBOPT_0x4F
000d80 e010      	LDI  R17,LOW(0)
                +
000d81 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000d82 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000d83 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000d84 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000d85 d2fc      	RCALL SUBOPT_0x52
                 _0x2080014:
000d86 d300      	RCALL SUBOPT_0x53
000d87 940e 122a 	CALL __CMPF12
000d89 f060      	BRLO _0x2080016
000d8a d2f2      	RCALL SUBOPT_0x51
000d8b d203      	RCALL SUBOPT_0x2D
000d8c d2f5      	RCALL SUBOPT_0x52
000d8d 5f1f      	SUBI R17,-LOW(1)
000d8e 3217      	CPI  R17,39
000d8f f028      	BRLO _0x2080017
000d90 d2db      	RCALL SUBOPT_0x4E
                +
000d91 ece9     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000d92 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000d93 d1d3      	RCALL SUBOPT_0x28
000d94 c048      	RJMP _0x20A0002
                 _0x2080017:
000d95 cff0      	RJMP _0x2080014
                 _0x2080016:
000d96 3010      	CPI  R17,0
000d97 f421      	BRNE _0x2080018
000d98 d2dd      	RCALL SUBOPT_0x50
000d99 e3e0      	LDI  R30,LOW(48)
000d9a 93ec      	ST   X,R30
000d9b c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000d9c 2fe1      	MOV  R30,R17
000d9d 5011      	SUBI R17,1
000d9e 30e0      	CPI  R30,0
000d9f f0c9      	BREQ _0x208001C
000da0 d2dc      	RCALL SUBOPT_0x51
000da1 d200      	RCALL SUBOPT_0x30
000da2 d1f8      	RCALL SUBOPT_0x2F
000da3 d205      	RCALL SUBOPT_0x31
000da4 d2dd      	RCALL SUBOPT_0x52
000da5 d2e1      	RCALL SUBOPT_0x53
000da6 940e 11e5 	CALL __DIVF21
000da8 940e 10d4 	CALL __CFD1U
000daa 2f0e      	MOV  R16,R30
000dab d2ca      	RCALL SUBOPT_0x50
000dac d207      	RCALL SUBOPT_0x33
000dad e0f0      	LDI  R31,0
000dae d2ce      	RCALL SUBOPT_0x51
000daf 940e 126a 	CALL __CWD1
000db1 940e 110d 	CALL __CDF1
000db3 940e 1197 	CALL __MULF12
000db5 d2da      	RCALL SUBOPT_0x54
000db6 d047      	RCALL SUBOPT_0x4
000db7 d2b9      	RCALL SUBOPT_0x4F
000db8 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000db9 85e8      	LDD  R30,Y+8
000dba 30e0      	CPI  R30,0
000dbb f0e9      	BREQ _0x20A0001
000dbc d2b9      	RCALL SUBOPT_0x50
000dbd e2ee      	LDI  R30,LOW(46)
000dbe 93ec      	ST   X,R30
                 _0x208001E:
000dbf 85e8      	LDD  R30,Y+8
000dc0 50e1      	SUBI R30,LOW(1)
000dc1 87e8      	STD  Y+8,R30
000dc2 5fef      	SUBI R30,-LOW(1)
000dc3 f0a9      	BREQ _0x2080020
000dc4 d2cb      	RCALL SUBOPT_0x54
000dc5 d1c9      	RCALL SUBOPT_0x2D
000dc6 d2aa      	RCALL SUBOPT_0x4F
                +
000dc7 85e9     +LDD R30 , Y + 9
000dc8 85fa     +LDD R31 , Y + 9 + 1
000dc9 856b     +LDD R22 , Y + 9 + 2
000dca 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000dcb 940e 10d4 	CALL __CFD1U
000dcd 2f0e      	MOV  R16,R30
000dce d2a7      	RCALL SUBOPT_0x50
000dcf d1e4      	RCALL SUBOPT_0x33
000dd0 e0f0      	LDI  R31,0
000dd1 d2be      	RCALL SUBOPT_0x54
000dd2 940e 126a 	CALL __CWD1
000dd4 940e 110d 	CALL __CDF1
000dd6 d027      	RCALL SUBOPT_0x4
000dd7 d299      	RCALL SUBOPT_0x4F
000dd8 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000dd9 81ae      	LDD  R26,Y+6
000dda 81bf      	LDD  R27,Y+6+1
000ddb e0e0      	LDI  R30,LOW(0)
000ddc 93ec      	ST   X,R30
                 _0x20A0002:
000ddd 8119      	LDD  R17,Y+1
000dde 8108      	LDD  R16,Y+0
000ddf 962d      	ADIW R28,13
000de0 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x4
                 _TIMER2_OVERFLOW:
000504           	.BYTE 0x1
                 _PACKET_BUFF:
000505           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000569           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
00056a           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056c           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
000580           	.BYTE 0x1
                 _CHECK_GETS:
000581           	.BYTE 0x1
                 _MOTORR_HALL:
000582           	.BYTE 0x4
                 _MOTORL_HALL:
000586           	.BYTE 0x4
                 __seed_G104:
00058a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000de1 93fa      	ST   -Y,R31
000de2 93ea      	ST   -Y,R30
000de3 940c 1095 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000de5 e0e0      	LDI  R30,LOW(0)
000de6 93e0 056a 	STS  _TIMER0_OVERFLOW,R30
000de8 93e0 056b 	STS  _TIMER0_OVERFLOW+1,R30
000dea bfe2      	OUT  0x32,R30
000deb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
                +
000dec 01fe     +MOVW R30 , R28
000ded 58e8     +SUBI R30 , LOW ( - 632 )
000dee 4ffd     +SBCI R31 , HIGH ( - 632 )
000def 9001     +LD R0 , Z +
000df0 81f0     +LD R31 , Z
000df1 2de0     +MOV R30 , R0
                 	__GETW1SX 632
000df2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
                +
000df3 01fe     +MOVW R30 , R28
000df4 59e8     +SUBI R30 , LOW ( - 616 )
000df5 4ffd     +SBCI R31 , HIGH ( - 616 )
000df6 9001     +LD R0 , Z +
000df7 81f0     +LD R31 , Z
000df8 2de0     +MOV R30 , R0
                 	__GETW1SX 616
000df9 940e 126a 	CALL __CWD1
000dfb 940e 110d 	CALL __CDF1
000dfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000dfe 940e 133a 	CALL __SWAPD12
000e00 940e 1140 	CALL __SUBF12
000e02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
000e03 01df      	MOVW R26,R30
000e04 01cb      	MOVW R24,R22
                +
000e05 efe6     +LDI R30 , LOW ( 0x426528F6 )
000e06 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
000e07 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
000e08 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
000e09 940e 11e5 	CALL __DIVF21
                +
000e0b 01de     +MOVW R26 , R28
000e0c 59a6     +SUBI R26 , LOW ( - 618 )
000e0d 4fbd     +SBCI R27 , HIGH ( - 618 )
000e0e 93ed     +ST X + , R30
000e0f 93fd     +ST X + , R31
000e10 936d     +ST X + , R22
000e11 937c     +ST X , R23
                 	__PUTD1SX 618
000e12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6:
                +
000e13 e7a1     +LDI R26 , LOW ( 0x3F0A3D71 )
000e14 e3bd     +LDI R27 , HIGH ( 0x3F0A3D71 )
000e15 e08a     +LDI R24 , BYTE3 ( 0x3F0A3D71 )
000e16 e39f     +LDI R25 , BYTE4 ( 0x3F0A3D71 )
                 	__GETD2N 0x3F0A3D71
000e17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x7:
                +
000e18 01fe     +MOVW R30 , R28
000e19 59e6     +SUBI R30 , LOW ( - 618 )
000e1a 4ffd     +SBCI R31 , HIGH ( - 618 )
000e1b 9001     +LD R0 , Z +
000e1c 9011     +LD R1 , Z +
000e1d 9161     +LD R22 , Z +
000e1e 8170     +LD R23 , Z
000e1f 01f0     +MOVW R30 , R0
                 	__GETD1SX 618
000e20 dff2      	RCALL SUBOPT_0x6
000e21 940e 1147 	CALL __ADDF12
000e23 01df      	MOVW R26,R30
000e24 01cb      	MOVW R24,R22
                +
000e25 e0e0     +LDI R30 , LOW ( 0x3FC00000 )
000e26 e0f0     +LDI R31 , HIGH ( 0x3FC00000 )
000e27 ec60     +LDI R22 , BYTE3 ( 0x3FC00000 )
000e28 e37f     +LDI R23 , BYTE4 ( 0x3FC00000 )
                 	__GETD1N 0x3FC00000
000e29 940e 11e5 	CALL __DIVF21
000e2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x8:
                +
000e2c 01de     +MOVW R26 , R28
000e2d 58ac     +SUBI R26 , LOW ( - 628 )
000e2e 4fbd     +SBCI R27 , HIGH ( - 628 )
000e2f 93ed     +ST X + , R30
000e30 93fd     +ST X + , R31
000e31 936d     +ST X + , R22
000e32 937c     +ST X , R23
                 	__PUTD1SX 628
                +
000e33 eeac     +LDI R26 , LOW ( 0x3EB851EC )
000e34 e5b1     +LDI R27 , HIGH ( 0x3EB851EC )
000e35 eb88     +LDI R24 , BYTE3 ( 0x3EB851EC )
000e36 e39e     +LDI R25 , BYTE4 ( 0x3EB851EC )
                 	__GETD2N 0x3EB851EC
000e37 940e 1140 	CALL __SUBF12
000e39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x9:
                +
000e3a 01de     +MOVW R26 , R28
000e3b 58ac     +SUBI R26 , LOW ( - 628 )
000e3c 4fbd     +SBCI R27 , HIGH ( - 628 )
000e3d 900d     +LD R0 , X +
000e3e 901d     +LD R1 , X +
000e3f 918d     +LD R24 , X +
000e40 919c     +LD R25 , X
000e41 01d0     +MOVW R26 , R0
                 	__GETD2SX 628
                +
000e42 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000e43 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000e44 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000e45 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000e46 940e 1197 	CALL __MULF12
000e48 940e 10d6 	CALL __CFD1
                +
000e4a 01de     +MOVW R26 , R28
000e4b 58a8     +SUBI R26 , LOW ( - 632 )
000e4c 4fbd     +SBCI R27 , HIGH ( - 632 )
000e4d 93ed     +ST X + , R30
000e4e 93fc     +ST X , R31
                 	__PUTW1SX 632
000e4f e0e0      	LDI  R30,LOW(0)
                +
000e50 01de     +MOVW R26 , R28
000e51 58a4     +SUBI R26 , LOW ( - 636 )
000e52 4fbd     +SBCI R27 , HIGH ( - 636 )
000e53 93ed     +ST X + , R30
000e54 93ed     +ST X + , R30
000e55 93ed     +ST X + , R30
000e56 93ec     +ST X , R30
                 	__CLRD1SX 636
000e57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000e58 e0e0      	LDI  R30,LOW(0)
000e59 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000e5b 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000e5d 93e0 0502 	STS  _TIMER1_OVERFLOW+2,R30
000e5f 93e0 0503 	STS  _TIMER1_OVERFLOW+3,R30
000e61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xB:
000e62 940e 110d 	CALL __CDF1
                +
000e64 ecad     +LDI R26 , LOW ( 0x3ECCCCCD )
000e65 ecbc     +LDI R27 , HIGH ( 0x3ECCCCCD )
000e66 ec8c     +LDI R24 , BYTE3 ( 0x3ECCCCCD )
000e67 e39e     +LDI R25 , BYTE4 ( 0x3ECCCCCD )
                 	__GETD2N 0x3ECCCCCD
000e68 940e 1197 	CALL __MULF12
000e6a 01df      	MOVW R26,R30
000e6b 01cb      	MOVW R24,R22
                +
000e6c e0e0     +LDI R30 , LOW ( 0x43200000 )
000e6d e0f0     +LDI R31 , HIGH ( 0x43200000 )
000e6e e260     +LDI R22 , BYTE3 ( 0x43200000 )
000e6f e473     +LDI R23 , BYTE4 ( 0x43200000 )
                 	__GETD1N 0x43200000
000e70 940e 11e5 	CALL __DIVF21
000e72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
                +
000e73 01de     +MOVW R26 , R28
000e74 5ea8     +SUBI R26 , LOW ( - 536 )
000e75 4fbd     +SBCI R27 , HIGH ( - 536 )
000e76 900d     +LD R0 , X +
000e77 901d     +LD R1 , X +
000e78 918d     +LD R24 , X +
000e79 919c     +LD R25 , X
000e7a 01d0     +MOVW R26 , R0
                 	__GETD2SX 536
000e7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xD:
                +
000e7c 01fe     +MOVW R30 , R28
000e7d 5ee8     +SUBI R30 , LOW ( - 536 )
000e7e 4ffd     +SBCI R31 , HIGH ( - 536 )
000e7f 9001     +LD R0 , Z +
000e80 9011     +LD R1 , Z +
000e81 9161     +LD R22 , Z +
000e82 8170     +LD R23 , Z
000e83 01f0     +MOVW R30 , R0
                 	__GETD1SX 536
000e84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0xE:
                +
000e85 01fe     +MOVW R30 , R28
000e86 50ec     +SUBI R30 , LOW ( - 500 )
000e87 4ffe     +SBCI R31 , HIGH ( - 500 )
000e88 9001     +LD R0 , Z +
000e89 9011     +LD R1 , Z +
000e8a 9161     +LD R22 , Z +
000e8b 8170     +LD R23 , Z
000e8c 01f0     +MOVW R30 , R0
                 	__GETD1SX 500
                +
000e8d 01de     +MOVW R26 , R28
000e8e 50a8     +SUBI R26 , LOW ( - 504 )
000e8f 4fbe     +SBCI R27 , HIGH ( - 504 )
000e90 900d     +LD R0 , X +
000e91 901d     +LD R1 , X +
000e92 918d     +LD R24 , X +
000e93 919c     +LD R25 , X
000e94 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
000e95 940e 1147 	CALL __ADDF12
000e97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xF:
                +
000e98 01de     +MOVW R26 , R28
000e99 50ac     +SUBI R26 , LOW ( - 500 )
000e9a 4fbe     +SBCI R27 , HIGH ( - 500 )
000e9b 900d     +LD R0 , X +
000e9c 901d     +LD R1 , X +
000e9d 918d     +LD R24 , X +
000e9e 919c     +LD R25 , X
000e9f 01d0     +MOVW R26 , R0
                 	__GETD2SX 500
                +
000ea0 01fe     +MOVW R30 , R28
000ea1 50e8     +SUBI R30 , LOW ( - 504 )
000ea2 4ffe     +SBCI R31 , HIGH ( - 504 )
000ea3 9001     +LD R0 , Z +
000ea4 9011     +LD R1 , Z +
000ea5 9161     +LD R22 , Z +
000ea6 8170     +LD R23 , Z
000ea7 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
000ea8 940e 1140 	CALL __SUBF12
000eaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
000eab e1a7     +LDI R26 , LOW ( 0x3E8ED917 )
000eac edb9     +LDI R27 , HIGH ( 0x3E8ED917 )
000ead e88e     +LDI R24 , BYTE3 ( 0x3E8ED917 )
000eae e39e     +LDI R25 , BYTE4 ( 0x3E8ED917 )
                 	__GETD2N 0x3E8ED917
000eaf 940e 1197 	CALL __MULF12
000eb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
                +
000eb2 01de     +MOVW R26 , R28
000eb3 5faa     +SUBI R26 , LOW ( - 518 )
000eb4 4fbd     +SBCI R27 , HIGH ( - 518 )
000eb5 900d     +LD R0 , X +
000eb6 901d     +LD R1 , X +
000eb7 918d     +LD R24 , X +
000eb8 919c     +LD R25 , X
000eb9 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
000eba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x12:
000ebb 01df      	MOVW R26,R30
000ebc 01cb      	MOVW R24,R22
                +
000ebd e0e0     +LDI R30 , LOW ( 0x40000000 )
000ebe e0f0     +LDI R31 , HIGH ( 0x40000000 )
000ebf e060     +LDI R22 , BYTE3 ( 0x40000000 )
000ec0 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000ec1 940e 11e5 	CALL __DIVF21
000ec3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
                +
000ec4 01fe     +MOVW R30 , R28
000ec5 5fea     +SUBI R30 , LOW ( - 518 )
000ec6 4ffd     +SBCI R31 , HIGH ( - 518 )
000ec7 9001     +LD R0 , Z +
000ec8 9011     +LD R1 , Z +
000ec9 9161     +LD R22 , Z +
000eca 8170     +LD R23 , Z
000ecb 01f0     +MOVW R30 , R0
                 	__GETD1SX 518
000ecc 940e 1330 	CALL __PUTPARD1
000ece 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000ecf 940e 1197 	CALL __MULF12
000ed1 940e 10d6 	CALL __CFD1
000ed3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000ed4 940e 126a 	CALL __CWD1
000ed6 940e 1330 	CALL __PUTPARD1
000ed8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
000ed9 91ed      	LD   R30,X+
000eda 91fd      	LD   R31,X+
000edb 9631      	ADIW R30,1
000edc 93fe      	ST   -X,R31
000edd 93ee      	ST   -X,R30
000ede 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x17:
000edf 936a      	ST   -Y,R22
000ee0 937a      	ST   -Y,R23
000ee1 93aa      	ST   -Y,R26
000ee2 93ba      	ST   -Y,R27
000ee3 93ea      	ST   -Y,R30
000ee4 93fa      	ST   -Y,R31
000ee5 b7ef      	IN   R30,SREG
000ee6 93ea      	ST   -Y,R30
000ee7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x18:
000ee8 940e 1310 	CALL __GETD1P_INC
                +
000eea 5fef     +SUBI R30 , LOW ( - 1 )
000eeb 4fff     +SBCI R31 , HIGH ( - 1 )
000eec 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000eed 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000eee 940e 131a 	CALL __PUTDP1_DEC
000ef0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x19:
000ef1 91a0 0569 	LDS  R26,_PACKET_BUFF_IDX
000ef3 e0b0      	LDI  R27,0
000ef4 5fab      	SUBI R26,LOW(-_PACKET_BUFF)
000ef5 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
000ef6 b1ec      	IN   R30,0xC
000ef7 93ec      	ST   X,R30
000ef8 91e0 0569 	LDS  R30,_PACKET_BUFF_IDX
000efa 5fef      	SUBI R30,-LOW(1)
000efb 93e0 0569 	STS  _PACKET_BUFF_IDX,R30
000efd e0e0      	LDI  R30,LOW(0)
000efe bde4      	OUT  0x24,R30
000eff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1A:
000f00 e0f0      	LDI  R31,0
000f01 59e4      	SUBI R30,LOW(-_VELOCITY_BUFF)
000f02 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000f03 8310      	ST   Z,R17
000f04 91e0 0580 	LDS  R30,_VELOCITY_BUFF_IDX
000f06 5fef      	SUBI R30,-LOW(1)
000f07 93e0 0580 	STS  _VELOCITY_BUFF_IDX,R30
000f09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000f0a 81aa      	LDD  R26,Y+2
000f0b 81bb      	LDD  R27,Y+2+1
000f0c 27ee      	CLR  R30
000f0d 0fa1      	ADD  R26,R17
000f0e 1fbe      	ADC  R27,R30
000f0f 91ec      	LD   R30,X
000f10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000f11 e0e0      	LDI  R30,LOW(0)
000f12 83e8      	ST   Y,R30
000f13 83e9      	STD  Y+1,R30
000f14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000f15 85ae      	LDD  R26,Y+14
000f16 85bf      	LDD  R27,Y+14+1
000f17 940e 130a 	CALL __GETD1P
000f19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000f1a 85ac      	LDD  R26,Y+12
000f1b 85bd      	LDD  R27,Y+12+1
000f1c 940e 130a 	CALL __GETD1P
000f1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1F:
                +
000f1f 83ec     +STD Y + 4 , R30
000f20 83fd     +STD Y + 4 + 1 , R31
000f21 836e     +STD Y + 4 + 2 , R22
000f22 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000f23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
                +
000f24 81ac     +LDD R26 , Y + 4
000f25 81bd     +LDD R27 , Y + 4 + 1
000f26 818e     +LDD R24 , Y + 4 + 2
000f27 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000f28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
                +
000f29 e0e0     +LDI R30 , LOW ( 0x453B8000 )
000f2a e8f0     +LDI R31 , HIGH ( 0x453B8000 )
000f2b e36b     +LDI R22 , BYTE3 ( 0x453B8000 )
000f2c e475     +LDI R23 , BYTE4 ( 0x453B8000 )
                 	__GETD1N 0x453B8000
000f2d cfa1      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000f2e e0e0      	LDI  R30,LOW(0)
000f2f e0f0      	LDI  R31,HIGH(0)
000f30 93ed      	ST   X+,R30
000f31 93fc      	ST   X,R31
000f32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x23:
000f33 93fa      	ST   -Y,R31
000f34 93ea      	ST   -Y,R30
000f35 940e 0618 	CALL _RTU_WriteOperate0
000f37 e0e1      	LDI  R30,LOW(1)
000f38 e0f0      	LDI  R31,HIGH(1)
000f39 cea7      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x24:
000f3a 93ea      	ST   -Y,R30
000f3b e7e8      	LDI  R30,LOW(120)
000f3c e0f0      	LDI  R31,HIGH(120)
000f3d 93fa      	ST   -Y,R31
000f3e 93ea      	ST   -Y,R30
000f3f e0e1      	LDI  R30,LOW(1)
000f40 e0f0      	LDI  R31,HIGH(1)
000f41 cff1      	RJMP SUBOPT_0x23
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x25:
000f42 df9c      	RCALL SUBOPT_0x17
000f43 e0a0      	LDI  R26,0
000f44 990c      	SBIC 0x1,4
000f45 e0a1      	LDI  R26,1
000f46 e0e0      	LDI  R30,0
000f47 990d      	SBIC 0x1,5
000f48 e0e1      	LDI  R30,1
000f49 17ea      	CP   R30,R26
000f4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x26:
000f4b e8a2      	LDI  R26,LOW(_MOTORR_HALL)
000f4c e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
000f4d 940e 1310 	CALL __GETD1P_INC
000f4f 9731      	SBIW R30,1
000f50 4060      	SBCI R22,0
000f51 4070      	SBCI R23,0
000f52 940e 131a 	CALL __PUTDP1_DEC
                +
000f54 5fef     +SUBI R30 , LOW ( - 1 )
000f55 4fff     +SBCI R31 , HIGH ( - 1 )
000f56 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000f57 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000f58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x27:
000f59 e8a6      	LDI  R26,LOW(_MOTORL_HALL)
000f5a e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
000f5b 940e 1310 	CALL __GETD1P_INC
000f5d 9731      	SBIW R30,1
000f5e 4060      	SBCI R22,0
000f5f 4070      	SBCI R23,0
000f60 940e 131a 	CALL __PUTDP1_DEC
                +
000f62 5fef     +SUBI R30 , LOW ( - 1 )
000f63 4fff     +SBCI R31 , HIGH ( - 1 )
000f64 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000f65 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
000f66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
000f67 93fa      	ST   -Y,R31
000f68 93ea      	ST   -Y,R30
000f69 940c 0d25 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x29:
000f6b dfb8      	RCALL SUBOPT_0x20
                +
000f6c e0e0     +LDI R30 , LOW ( 0x41200000 )
000f6d e0f0     +LDI R31 , HIGH ( 0x41200000 )
000f6e e260     +LDI R22 , BYTE3 ( 0x41200000 )
000f6f e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000f70 940e 1197 	CALL __MULF12
000f72 cfac      	RJMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2A:
                +
000f73 81ec     +LDD R30 , Y + 4
000f74 81fd     +LDD R31 , Y + 4 + 1
000f75 816e     +LDD R22 , Y + 4 + 2
000f76 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000f77 85ac     +LDD R26 , Y + 12
000f78 85bd     +LDD R27 , Y + 12 + 1
000f79 858e     +LDD R24 , Y + 12 + 2
000f7a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000f7b 940e 122a 	CALL __CMPF12
000f7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B:
                +
000f7e 85ac     +LDD R26 , Y + 12
000f7f 85bd     +LDD R27 , Y + 12 + 1
000f80 858e     +LDD R24 , Y + 12 + 2
000f81 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000f82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C:
                +
000f83 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000f84 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000f85 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000f86 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000f87 940e 1197 	CALL __MULF12
                +
000f89 87ec     +STD Y + 12 , R30
000f8a 87fd     +STD Y + 12 + 1 , R31
000f8b 876e     +STD Y + 12 + 2 , R22
000f8c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000f8d 5f3f      	SUBI R19,-LOW(1)
000f8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D:
                +
000f8f e0e0     +LDI R30 , LOW ( 0x41200000 )
000f90 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000f91 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000f92 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000f93 940e 1197 	CALL __MULF12
000f95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
                +
000f96 87ec     +STD Y + 12 , R30
000f97 87fd     +STD Y + 12 + 1 , R31
000f98 876e     +STD Y + 12 + 2 , R22
000f99 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000f9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F:
                +
000f9b e0a0     +LDI R26 , LOW ( 0x3F000000 )
000f9c e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000f9d e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000f9e e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000f9f 940e 1147 	CALL __ADDF12
000fa1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30:
                +
000fa2 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000fa3 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000fa4 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000fa5 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000fa6 940e 1197 	CALL __MULF12
000fa8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
000fa9 940e 1330 	CALL __PUTPARD1
000fab 940c 0c5b 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000fad 85a8      	LDD  R26,Y+8
000fae 85b9      	LDD  R27,Y+8+1
000faf 9611      	ADIW R26,1
000fb0 87a8      	STD  Y+8,R26
000fb1 87b9      	STD  Y+8+1,R27
000fb2 9711      	SBIW R26,1
000fb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
000fb4 2fe0      	MOV  R30,R16
000fb5 5de0      	SUBI R30,-LOW(48)
000fb6 93ec      	ST   X,R30
000fb7 2fe0      	MOV  R30,R16
000fb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x34:
000fb9 85e8      	LDD  R30,Y+8
000fba 85f9      	LDD  R31,Y+8+1
000fbb 9631      	ADIW R30,1
000fbc 87e8      	STD  Y+8,R30
000fbd 87f9      	STD  Y+8+1,R31
000fbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
000fbf 932a      	ST   -Y,R18
000fc0 81ef      	LDD  R30,Y+7
000fc1 85f8      	LDD  R31,Y+7+1
000fc2 93fa      	ST   -Y,R31
000fc3 93ea      	ST   -Y,R30
000fc4 85eb      	LDD  R30,Y+11
000fc5 85fc      	LDD  R31,Y+11+1
000fc6 9509      	ICALL
000fc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x36:
                +
000fc8 01fe     +MOVW R30 , R28
000fc9 5ae6     +SUBI R30 , LOW ( - 90 )
000fca 4fff     +SBCI R31 , HIGH ( - 90 )
000fcb 9001     +LD R0 , Z +
000fcc 81f0     +LD R31 , Z
000fcd 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000fce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x37:
000fcf 9734      	SBIW R30,4
                +
000fd0 01de     +MOVW R26 , R28
000fd1 5aa6     +SUBI R26 , LOW ( - 90 )
000fd2 4fbf     +SBCI R27 , HIGH ( - 90 )
000fd3 93ed     +ST X + , R30
000fd4 93fc     +ST X , R31
                 	__PUTW1SX 90
000fd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x38:
000fd6 81ef      	LDD  R30,Y+7
000fd7 85f8      	LDD  R31,Y+7+1
000fd8 93fa      	ST   -Y,R31
000fd9 93ea      	ST   -Y,R30
000fda 85eb      	LDD  R30,Y+11
000fdb 85fc      	LDD  R31,Y+11+1
000fdc 9509      	ICALL
000fdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x39:
                +
000fde 01de     +MOVW R26 , R28
000fdf 5aa6     +SUBI R26 , LOW ( - 90 )
000fe0 4fbf     +SBCI R27 , HIGH ( - 90 )
000fe1 900d     +LD R0 , X +
000fe2 91bc     +LD R27 , X
000fe3 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000fe4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
                +
000fe5 87ea     +STD Y + 10 , R30
000fe6 87fb     +STD Y + 10 + 1 , R31
000fe7 876c     +STD Y + 10 + 2 , R22
000fe8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000fe9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3B:
000fea dfdd      	RCALL SUBOPT_0x36
000feb cfe3      	RJMP SUBOPT_0x37
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
                +
000fec 85ea     +LDD R30 , Y + 10
000fed 85fb     +LDD R31 , Y + 10 + 1
000fee 856c     +LDD R22 , Y + 10 + 2
000fef 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000ff0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3D:
000ff1 87ee      	STD  Y+14,R30
000ff2 87ff      	STD  Y+14+1,R31
000ff3 93fa      	ST   -Y,R31
000ff4 93ea      	ST   -Y,R30
000ff5 940e 0d30 	CALL _strlen
000ff7 2f1e      	MOV  R17,R30
000ff8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3E:
000ff9 dfe4      	RCALL SUBOPT_0x39
000ffa 9614      	ADIW R26,4
000ffb 940e 1306 	CALL __GETW1P
000ffd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F:
                +
000ffe 8be8     +STD Y + 16 , R30
000fff 8bf9     +STD Y + 16 + 1 , R31
001000 8b6a     +STD Y + 16 + 2 , R22
001001 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
001002 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x40:
001003 7f0b      	ANDI R16,LOW(251)
001004 89ed      	LDD  R30,Y+21
001005 93ea      	ST   -Y,R30
                +
001006 01fe     +MOVW R30 , R28
001007 5ae9     +SUBI R30 , LOW ( - 87 )
001008 4fff     +SBCI R31 , HIGH ( - 87 )
001009 9001     +LD R0 , Z +
00100a 81f0     +LD R31 , Z
00100b 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00100c 93fa      	ST   -Y,R31
00100d 93ea      	ST   -Y,R30
                +
00100e 01fe     +MOVW R30 , R28
00100f 5ae5     +SUBI R30 , LOW ( - 91 )
001010 4fff     +SBCI R31 , HIGH ( - 91 )
001011 9001     +LD R0 , Z +
001012 81f0     +LD R31 , Z
001013 2de0     +MOV R30 , R0
                 	__GETW1SX 91
001014 9509      	ICALL
001015 3050      	CPI  R21,0
001016 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41:
                +
001017 89e8     +LDD R30 , Y + 16
001018 89f9     +LDD R31 , Y + 16 + 1
001019 896a     +LDD R22 , Y + 16 + 2
00101a 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00101b 85aa     +LDD R26 , Y + 10
00101c 85bb     +LDD R27 , Y + 10 + 1
00101d 858c     +LDD R24 , Y + 10 + 2
00101e 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00101f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
001020 01de      	MOVW R26,R28
001021 961c      	ADIW R26,12
001022 940e 124a 	CALL __ADDW2R15
001024 940e 1306 	CALL __GETW1P
001026 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x43:
001027 940e 124a 	CALL __ADDW2R15
001029 940e 1306 	CALL __GETW1P
00102b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
00102c 933a      	ST   -Y,R19
00102d 940e 0d0d 	CALL _isspace
00102f 30e0      	CPI  R30,0
001030 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x45:
001031 01fe      	MOVW R30,R28
001032 963d      	ADIW R30,13
001033 93fa      	ST   -Y,R31
001034 93ea      	ST   -Y,R30
001035 89e8      	LDD  R30,Y+16
001036 89f9      	LDD  R31,Y+16+1
001037 93fa      	ST   -Y,R31
001038 93ea      	ST   -Y,R30
001039 89ec      	LDD  R30,Y+20
00103a 89fd      	LDD  R31,Y+20+1
00103b 9509      	ICALL
00103c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x46:
00103d 85ae      	LDD  R26,Y+14
00103e 85bf      	LDD  R27,Y+14+1
00103f 91ac      	LD   R26,X
001040 30a0      	CPI  R26,0
001041 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
001042 89ea      	LDD  R30,Y+18
001043 89fb      	LDD  R31,Y+18+1
001044 9734      	SBIW R30,4
001045 8bea      	STD  Y+18,R30
001046 8bfb      	STD  Y+18+1,R31
001047 89aa      	LDD  R26,Y+18
001048 89bb      	LDD  R27,Y+18+1
001049 9614      	ADIW R26,4
00104a 910d      	LD   R16,X+
00104b 911c      	LD   R17,X
00104c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x48:
00104d 940e 131f 	CALL __GETD1S0
00104f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x49:
                +
001050 81ad     +LDD R26 , Y + 5
001051 81be     +LDD R27 , Y + 5 + 1
001052 818f     +LDD R24 , Y + 5 + 2
001053 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001054 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4A:
                +
001055 83ed     +STD Y + 5 , R30
001056 83fe     +STD Y + 5 + 1 , R31
001057 836f     +STD Y + 5 + 2 , R22
001058 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
001059 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4B:
                +
00105a 81ed     +LDD R30 , Y + 5
00105b 81fe     +LDD R31 , Y + 5 + 1
00105c 816f     +LDD R22 , Y + 5 + 2
00105d 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00105e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4C:
00105f dff0      	RCALL SUBOPT_0x49
                +
001060 e0e0     +LDI R30 , LOW ( 0x3F000000 )
001061 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
001062 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
001063 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
001064 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4D:
                +
001065 81a9     +LDD R26 , Y + 1
001066 81ba     +LDD R27 , Y + 1 + 1
001067 818b     +LDD R24 , Y + 1 + 2
001068 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001069 940e 1197 	CALL __MULF12
00106b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4E:
00106c 81ee      	LDD  R30,Y+6
00106d 81ff      	LDD  R31,Y+6+1
00106e 93fa      	ST   -Y,R31
00106f 93ea      	ST   -Y,R30
001070 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4F:
                +
001071 87e9     +STD Y + 9 , R30
001072 87fa     +STD Y + 9 + 1 , R31
001073 876b     +STD Y + 9 + 2 , R22
001074 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
001075 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x50:
001076 81ae      	LDD  R26,Y+6
001077 81bf      	LDD  R27,Y+6+1
001078 9611      	ADIW R26,1
001079 83ae      	STD  Y+6,R26
00107a 83bf      	STD  Y+6+1,R27
00107b 9711      	SBIW R26,1
00107c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x51:
                +
00107d 81aa     +LDD R26 , Y + 2
00107e 81bb     +LDD R27 , Y + 2 + 1
00107f 818c     +LDD R24 , Y + 2 + 2
001080 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001081 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x52:
                +
001082 83ea     +STD Y + 2 , R30
001083 83fb     +STD Y + 2 + 1 , R31
001084 836c     +STD Y + 2 + 2 , R22
001085 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
001086 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x53:
                +
001087 81ea     +LDD R30 , Y + 2
001088 81fb     +LDD R31 , Y + 2 + 1
001089 816c     +LDD R22 , Y + 2 + 2
00108a 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00108b 85a9     +LDD R26 , Y + 9
00108c 85ba     +LDD R27 , Y + 9 + 1
00108d 858b     +LDD R24 , Y + 9 + 2
00108e 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00108f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x54:
                +
001090 85a9     +LDD R26 , Y + 9
001091 85ba     +LDD R27 , Y + 9 + 1
001092 858b     +LDD R24 , Y + 9 + 2
001093 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001094 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001095 91e9      	ld   r30,y+
001096 91f9      	ld   r31,y+
001097 9630      	adiw r30,0
001098 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001099 e686     +LDI R24 , LOW ( 0xE66 )
00109a e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
00109b 9701     +SBIW R24 , 1
00109c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
00109d 95a8      	wdr
00109e 9731      	sbiw r30,1
00109f f7c9      	brne __delay_ms0
                 __delay_ms1:
0010a0 9508      	ret
                 
                 __ANEGF1:
0010a1 9730      	SBIW R30,0
0010a2 4060      	SBCI R22,0
0010a3 4070      	SBCI R23,0
0010a4 f009      	BREQ __ANEGF10
0010a5 5870      	SUBI R23,0x80
                 __ANEGF10:
0010a6 9508      	RET
                 
                 __ROUND_REPACK:
0010a7 2355      	TST  R21
0010a8 f442      	BRPL __REPACK
0010a9 3850      	CPI  R21,0x80
0010aa f411      	BRNE __ROUND_REPACK0
0010ab ffe0      	SBRS R30,0
0010ac c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0010ad 9631      	ADIW R30,1
0010ae 1f69      	ADC  R22,R25
0010af 1f79      	ADC  R23,R25
0010b0 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0010b1 e850      	LDI  R21,0x80
0010b2 2757      	EOR  R21,R23
0010b3 f411      	BRNE __REPACK0
0010b4 935f      	PUSH R21
0010b5 c0cf      	RJMP __ZERORES
                 __REPACK0:
0010b6 3f5f      	CPI  R21,0xFF
0010b7 f031      	BREQ __REPACK1
0010b8 0f66      	LSL  R22
0010b9 0c00      	LSL  R0
0010ba 9557      	ROR  R21
0010bb 9567      	ROR  R22
0010bc 2f75      	MOV  R23,R21
0010bd 9508      	RET
                 __REPACK1:
0010be 935f      	PUSH R21
0010bf 2000      	TST  R0
0010c0 f00a      	BRMI __REPACK2
0010c1 c0cf      	RJMP __MAXRES
                 __REPACK2:
0010c2 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0010c3 e850      	LDI  R21,0x80
0010c4 2e19      	MOV  R1,R25
0010c5 2215      	AND  R1,R21
0010c6 0f88      	LSL  R24
0010c7 1f99      	ROL  R25
0010c8 2795      	EOR  R25,R21
0010c9 0f55      	LSL  R21
0010ca 9587      	ROR  R24
                 
                 __UNPACK1:
0010cb e850      	LDI  R21,0x80
0010cc 2e07      	MOV  R0,R23
0010cd 2205      	AND  R0,R21
0010ce 0f66      	LSL  R22
0010cf 1f77      	ROL  R23
0010d0 2775      	EOR  R23,R21
0010d1 0f55      	LSL  R21
0010d2 9567      	ROR  R22
0010d3 9508      	RET
                 
                 __CFD1U:
0010d4 9468      	SET
0010d5 c001      	RJMP __CFD1U0
                 __CFD1:
0010d6 94e8      	CLT
                 __CFD1U0:
0010d7 935f      	PUSH R21
0010d8 dff2      	RCALL __UNPACK1
0010d9 3870      	CPI  R23,0x80
0010da f018      	BRLO __CFD10
0010db 3f7f      	CPI  R23,0xFF
0010dc f408      	BRCC __CFD10
0010dd c0a7      	RJMP __ZERORES
                 __CFD10:
0010de e156      	LDI  R21,22
0010df 1b57      	SUB  R21,R23
0010e0 f4aa      	BRPL __CFD11
0010e1 9551      	NEG  R21
0010e2 3058      	CPI  R21,8
0010e3 f40e      	BRTC __CFD19
0010e4 3059      	CPI  R21,9
                 __CFD19:
0010e5 f030      	BRLO __CFD17
0010e6 efef      	SER  R30
0010e7 efff      	SER  R31
0010e8 ef6f      	SER  R22
0010e9 e77f      	LDI  R23,0x7F
0010ea f977      	BLD  R23,7
0010eb c01a      	RJMP __CFD15
                 __CFD17:
0010ec 2777      	CLR  R23
0010ed 2355      	TST  R21
0010ee f0b9      	BREQ __CFD15
                 __CFD18:
0010ef 0fee      	LSL  R30
0010f0 1fff      	ROL  R31
0010f1 1f66      	ROL  R22
0010f2 1f77      	ROL  R23
0010f3 955a      	DEC  R21
0010f4 f7d1      	BRNE __CFD18
0010f5 c010      	RJMP __CFD15
                 __CFD11:
0010f6 2777      	CLR  R23
                 __CFD12:
0010f7 3058      	CPI  R21,8
0010f8 f028      	BRLO __CFD13
0010f9 2fef      	MOV  R30,R31
0010fa 2ff6      	MOV  R31,R22
0010fb 2f67      	MOV  R22,R23
0010fc 5058      	SUBI R21,8
0010fd cff9      	RJMP __CFD12
                 __CFD13:
0010fe 2355      	TST  R21
0010ff f031      	BREQ __CFD15
                 __CFD14:
001100 9576      	LSR  R23
001101 9567      	ROR  R22
001102 95f7      	ROR  R31
001103 95e7      	ROR  R30
001104 955a      	DEC  R21
001105 f7d1      	BRNE __CFD14
                 __CFD15:
001106 2000      	TST  R0
001107 f40a      	BRPL __CFD16
001108 d14e      	RCALL __ANEGD1
                 __CFD16:
001109 915f      	POP  R21
00110a 9508      	RET
                 
                 __CDF1U:
00110b 9468      	SET
00110c c001      	RJMP __CDF1U0
                 __CDF1:
00110d 94e8      	CLT
                 __CDF1U0:
00110e 9730      	SBIW R30,0
00110f 4060      	SBCI R22,0
001110 4070      	SBCI R23,0
001111 f0b1      	BREQ __CDF10
001112 2400      	CLR  R0
001113 f026      	BRTS __CDF11
001114 2377      	TST  R23
001115 f412      	BRPL __CDF11
001116 9400      	COM  R0
001117 d13f      	RCALL __ANEGD1
                 __CDF11:
001118 2e17      	MOV  R1,R23
001119 e17e      	LDI  R23,30
00111a 2011      	TST  R1
                 __CDF12:
00111b f032      	BRMI __CDF13
00111c 957a      	DEC  R23
00111d 0fee      	LSL  R30
00111e 1fff      	ROL  R31
00111f 1f66      	ROL  R22
001120 1c11      	ROL  R1
001121 cff9      	RJMP __CDF12
                 __CDF13:
001122 2fef      	MOV  R30,R31
001123 2ff6      	MOV  R31,R22
001124 2d61      	MOV  R22,R1
001125 935f      	PUSH R21
001126 df8a      	RCALL __REPACK
001127 915f      	POP  R21
                 __CDF10:
001128 9508      	RET
                 
                 __SWAPACC:
001129 934f      	PUSH R20
00112a 01af      	MOVW R20,R30
00112b 01fd      	MOVW R30,R26
00112c 01da      	MOVW R26,R20
00112d 01ab      	MOVW R20,R22
00112e 01bc      	MOVW R22,R24
00112f 01ca      	MOVW R24,R20
001130 2d40      	MOV  R20,R0
001131 2c01      	MOV  R0,R1
001132 2e14      	MOV  R1,R20
001133 914f      	POP  R20
001134 9508      	RET
                 
                 __UADD12:
001135 0fea      	ADD  R30,R26
001136 1ffb      	ADC  R31,R27
001137 1f68      	ADC  R22,R24
001138 9508      	RET
                 
                 __NEGMAN1:
001139 95e0      	COM  R30
00113a 95f0      	COM  R31
00113b 9560      	COM  R22
00113c 5fef      	SUBI R30,-1
00113d 4fff      	SBCI R31,-1
00113e 4f6f      	SBCI R22,-1
00113f 9508      	RET
                 
                 __SUBF12:
001140 935f      	PUSH R21
001141 df81      	RCALL __UNPACK
001142 3890      	CPI  R25,0x80
001143 f171      	BREQ __ADDF129
001144 e850      	LDI  R21,0x80
001145 2615      	EOR  R1,R21
                 
001146 c004      	RJMP __ADDF120
                 
                 __ADDF12:
001147 935f      	PUSH R21
001148 df7a      	RCALL __UNPACK
001149 3890      	CPI  R25,0x80
00114a f139      	BREQ __ADDF129
                 
                 __ADDF120:
00114b 3870      	CPI  R23,0x80
00114c f121      	BREQ __ADDF128
                 __ADDF121:
00114d 2f57      	MOV  R21,R23
00114e 1b59      	SUB  R21,R25
00114f f12b      	BRVS __ADDF1211
001150 f412      	BRPL __ADDF122
001151 dfd7      	RCALL __SWAPACC
001152 cffa      	RJMP __ADDF121
                 __ADDF122:
001153 3158      	CPI  R21,24
001154 f018      	BRLO __ADDF123
001155 27aa      	CLR  R26
001156 27bb      	CLR  R27
001157 2788      	CLR  R24
                 __ADDF123:
001158 3058      	CPI  R21,8
001159 f028      	BRLO __ADDF124
00115a 2fab      	MOV  R26,R27
00115b 2fb8      	MOV  R27,R24
00115c 2788      	CLR  R24
00115d 5058      	SUBI R21,8
00115e cff9      	RJMP __ADDF123
                 __ADDF124:
00115f 2355      	TST  R21
001160 f029      	BREQ __ADDF126
                 __ADDF125:
001161 9586      	LSR  R24
001162 95b7      	ROR  R27
001163 95a7      	ROR  R26
001164 955a      	DEC  R21
001165 f7d9      	BRNE __ADDF125
                 __ADDF126:
001166 2d50      	MOV  R21,R0
001167 2551      	EOR  R21,R1
001168 f072      	BRMI __ADDF127
001169 dfcb      	RCALL __UADD12
00116a f438      	BRCC __ADDF129
00116b 9567      	ROR  R22
00116c 95f7      	ROR  R31
00116d 95e7      	ROR  R30
00116e 9573      	INC  R23
00116f f413      	BRVC __ADDF129
001170 c020      	RJMP __MAXRES
                 __ADDF128:
001171 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001172 df3e      	RCALL __REPACK
001173 915f      	POP  R21
001174 9508      	RET
                 __ADDF1211:
001175 f7d8      	BRCC __ADDF128
001176 cffb      	RJMP __ADDF129
                 __ADDF127:
001177 1bea      	SUB  R30,R26
001178 0bfb      	SBC  R31,R27
001179 0b68      	SBC  R22,R24
00117a f051      	BREQ __ZERORES
00117b f410      	BRCC __ADDF1210
00117c 9400      	COM  R0
00117d dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00117e 2366      	TST  R22
00117f f392      	BRMI __ADDF129
001180 0fee      	LSL  R30
001181 1fff      	ROL  R31
001182 1f66      	ROL  R22
001183 957a      	DEC  R23
001184 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001185 27ee      	CLR  R30
001186 27ff      	CLR  R31
001187 2766      	CLR  R22
001188 2777      	CLR  R23
001189 915f      	POP  R21
00118a 9508      	RET
                 
                 __MINRES:
00118b efef      	SER  R30
00118c efff      	SER  R31
00118d e76f      	LDI  R22,0x7F
00118e ef7f      	SER  R23
00118f 915f      	POP  R21
001190 9508      	RET
                 
                 __MAXRES:
001191 efef      	SER  R30
001192 efff      	SER  R31
001193 e76f      	LDI  R22,0x7F
001194 e77f      	LDI  R23,0x7F
001195 915f      	POP  R21
001196 9508      	RET
                 
                 __MULF12:
001197 935f      	PUSH R21
001198 df2a      	RCALL __UNPACK
001199 3870      	CPI  R23,0x80
00119a f351      	BREQ __ZERORES
00119b 3890      	CPI  R25,0x80
00119c f341      	BREQ __ZERORES
00119d 2401      	EOR  R0,R1
00119e 9408      	SEC
00119f 1f79      	ADC  R23,R25
0011a0 f423      	BRVC __MULF124
0011a1 f31c      	BRLT __ZERORES
                 __MULF125:
0011a2 2000      	TST  R0
0011a3 f33a      	BRMI __MINRES
0011a4 cfec      	RJMP __MAXRES
                 __MULF124:
0011a5 920f      	PUSH R0
0011a6 931f      	PUSH R17
0011a7 932f      	PUSH R18
0011a8 933f      	PUSH R19
0011a9 934f      	PUSH R20
0011aa 2711      	CLR  R17
0011ab 2722      	CLR  R18
0011ac 2799      	CLR  R25
0011ad 9f68      	MUL  R22,R24
0011ae 01a0      	MOVW R20,R0
0011af 9f8f      	MUL  R24,R31
0011b0 2d30      	MOV  R19,R0
0011b1 0d41      	ADD  R20,R1
0011b2 1f59      	ADC  R21,R25
0011b3 9f6b      	MUL  R22,R27
0011b4 0d30      	ADD  R19,R0
0011b5 1d41      	ADC  R20,R1
0011b6 1f59      	ADC  R21,R25
0011b7 9f8e      	MUL  R24,R30
0011b8 d027      	RCALL __MULF126
0011b9 9fbf      	MUL  R27,R31
0011ba d025      	RCALL __MULF126
0011bb 9f6a      	MUL  R22,R26
0011bc d023      	RCALL __MULF126
0011bd 9fbe      	MUL  R27,R30
0011be d01d      	RCALL __MULF127
0011bf 9faf      	MUL  R26,R31
0011c0 d01b      	RCALL __MULF127
0011c1 9fae      	MUL  R26,R30
0011c2 0d11      	ADD  R17,R1
0011c3 1f29      	ADC  R18,R25
0011c4 1f39      	ADC  R19,R25
0011c5 1f49      	ADC  R20,R25
0011c6 1f59      	ADC  R21,R25
0011c7 2fe3      	MOV  R30,R19
0011c8 2ff4      	MOV  R31,R20
0011c9 2f65      	MOV  R22,R21
0011ca 2f52      	MOV  R21,R18
0011cb 914f      	POP  R20
0011cc 913f      	POP  R19
0011cd 912f      	POP  R18
0011ce 911f      	POP  R17
0011cf 900f      	POP  R0
0011d0 2366      	TST  R22
0011d1 f02a      	BRMI __MULF122
0011d2 0f55      	LSL  R21
0011d3 1fee      	ROL  R30
0011d4 1fff      	ROL  R31
0011d5 1f66      	ROL  R22
0011d6 c002      	RJMP __MULF123
                 __MULF122:
0011d7 9573      	INC  R23
0011d8 f24b      	BRVS __MULF125
                 __MULF123:
0011d9 decd      	RCALL __ROUND_REPACK
0011da 915f      	POP  R21
0011db 9508      	RET
                 
                 __MULF127:
0011dc 0d10      	ADD  R17,R0
0011dd 1d21      	ADC  R18,R1
0011de 1f39      	ADC  R19,R25
0011df c002      	RJMP __MULF128
                 __MULF126:
0011e0 0d20      	ADD  R18,R0
0011e1 1d31      	ADC  R19,R1
                 __MULF128:
0011e2 1f49      	ADC  R20,R25
0011e3 1f59      	ADC  R21,R25
0011e4 9508      	RET
                 
                 __DIVF21:
0011e5 935f      	PUSH R21
0011e6 dedc      	RCALL __UNPACK
0011e7 3870      	CPI  R23,0x80
0011e8 f421      	BRNE __DIVF210
0011e9 2011      	TST  R1
                 __DIVF211:
0011ea f40a      	BRPL __DIVF219
0011eb cf9f      	RJMP __MINRES
                 __DIVF219:
0011ec cfa4      	RJMP __MAXRES
                 __DIVF210:
0011ed 3890      	CPI  R25,0x80
0011ee f409      	BRNE __DIVF218
                 __DIVF217:
0011ef cf95      	RJMP __ZERORES
                 __DIVF218:
0011f0 2401      	EOR  R0,R1
0011f1 9408      	SEC
0011f2 0b97      	SBC  R25,R23
0011f3 f41b      	BRVC __DIVF216
0011f4 f3d4      	BRLT __DIVF217
0011f5 2000      	TST  R0
0011f6 cff3      	RJMP __DIVF211
                 __DIVF216:
0011f7 2f79      	MOV  R23,R25
0011f8 931f      	PUSH R17
0011f9 932f      	PUSH R18
0011fa 933f      	PUSH R19
0011fb 934f      	PUSH R20
0011fc 2411      	CLR  R1
0011fd 2711      	CLR  R17
0011fe 2722      	CLR  R18
0011ff 2733      	CLR  R19
001200 2744      	CLR  R20
001201 2755      	CLR  R21
001202 e290      	LDI  R25,32
                 __DIVF212:
001203 17ae      	CP   R26,R30
001204 07bf      	CPC  R27,R31
001205 0786      	CPC  R24,R22
001206 0741      	CPC  R20,R17
001207 f030      	BRLO __DIVF213
001208 1bae      	SUB  R26,R30
001209 0bbf      	SBC  R27,R31
00120a 0b86      	SBC  R24,R22
00120b 0b41      	SBC  R20,R17
00120c 9408      	SEC
00120d c001      	RJMP __DIVF214
                 __DIVF213:
00120e 9488      	CLC
                 __DIVF214:
00120f 1f55      	ROL  R21
001210 1f22      	ROL  R18
001211 1f33      	ROL  R19
001212 1c11      	ROL  R1
001213 1faa      	ROL  R26
001214 1fbb      	ROL  R27
001215 1f88      	ROL  R24
001216 1f44      	ROL  R20
001217 959a      	DEC  R25
001218 f751      	BRNE __DIVF212
001219 01f9      	MOVW R30,R18
00121a 2d61      	MOV  R22,R1
00121b 914f      	POP  R20
00121c 913f      	POP  R19
00121d 912f      	POP  R18
00121e 911f      	POP  R17
00121f 2366      	TST  R22
001220 f032      	BRMI __DIVF215
001221 0f55      	LSL  R21
001222 1fee      	ROL  R30
001223 1fff      	ROL  R31
001224 1f66      	ROL  R22
001225 957a      	DEC  R23
001226 f243      	BRVS __DIVF217
                 __DIVF215:
001227 de7f      	RCALL __ROUND_REPACK
001228 915f      	POP  R21
001229 9508      	RET
                 
                 __CMPF12:
00122a 2399      	TST  R25
00122b f09a      	BRMI __CMPF120
00122c 2377      	TST  R23
00122d f042      	BRMI __CMPF121
00122e 1797      	CP   R25,R23
00122f f048      	BRLO __CMPF122
001230 f429      	BRNE __CMPF121
001231 17ae      	CP   R26,R30
001232 07bf      	CPC  R27,R31
001233 0786      	CPC  R24,R22
001234 f020      	BRLO __CMPF122
001235 f031      	BREQ __CMPF123
                 __CMPF121:
001236 9498      	CLZ
001237 9488      	CLC
001238 9508      	RET
                 __CMPF122:
001239 9498      	CLZ
00123a 9408      	SEC
00123b 9508      	RET
                 __CMPF123:
00123c 9418      	SEZ
00123d 9488      	CLC
00123e 9508      	RET
                 __CMPF120:
00123f 2377      	TST  R23
001240 f7c2      	BRPL __CMPF122
001241 1797      	CP   R25,R23
001242 f398      	BRLO __CMPF121
001243 f7a9      	BRNE __CMPF122
001244 17ea      	CP   R30,R26
001245 07fb      	CPC  R31,R27
001246 0768      	CPC  R22,R24
001247 f388      	BRLO __CMPF122
001248 f399      	BREQ __CMPF123
001249 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00124a 2400      	CLR  R0
00124b 0daf      	ADD  R26,R15
00124c 1db0      	ADC  R27,R0
00124d 9508      	RET
                 
                 __ADDD12:
00124e 0fea      	ADD  R30,R26
00124f 1ffb      	ADC  R31,R27
001250 1f68      	ADC  R22,R24
001251 1f79      	ADC  R23,R25
001252 9508      	RET
                 
                 __ANEGW1:
001253 95f1      	NEG  R31
001254 95e1      	NEG  R30
001255 40f0      	SBCI R31,0
001256 9508      	RET
                 
                 __ANEGD1:
001257 95f0      	COM  R31
001258 9560      	COM  R22
001259 9570      	COM  R23
00125a 95e1      	NEG  R30
00125b 4fff      	SBCI R31,-1
00125c 4f6f      	SBCI R22,-1
00125d 4f7f      	SBCI R23,-1
00125e 9508      	RET
                 
                 __ASRW8:
00125f 2fef      	MOV  R30,R31
001260 27ff      	CLR  R31
001261 fde7      	SBRC R30,7
001262 efff      	SER  R31
001263 9508      	RET
                 
                 __CBD1:
001264 2ffe      	MOV  R31,R30
001265 0fff      	ADD  R31,R31
001266 0bff      	SBC  R31,R31
001267 2f6f      	MOV  R22,R31
001268 2f7f      	MOV  R23,R31
001269 9508      	RET
                 
                 __CWD1:
00126a 2f6f      	MOV  R22,R31
00126b 0f66      	ADD  R22,R22
00126c 0b66      	SBC  R22,R22
00126d 2f76      	MOV  R23,R22
00126e 9508      	RET
                 
                 __CWD2:
00126f 2f8b      	MOV  R24,R27
001270 0f88      	ADD  R24,R24
001271 0b88      	SBC  R24,R24
001272 2f98      	MOV  R25,R24
001273 9508      	RET
                 
                 __MULD12U:
001274 9f7a      	MUL  R23,R26
001275 2d70      	MOV  R23,R0
001276 9f6b      	MUL  R22,R27
001277 0d70      	ADD  R23,R0
001278 9ff8      	MUL  R31,R24
001279 0d70      	ADD  R23,R0
00127a 9fe9      	MUL  R30,R25
00127b 0d70      	ADD  R23,R0
00127c 9f6a      	MUL  R22,R26
00127d 2d60      	MOV  R22,R0
00127e 0d71      	ADD  R23,R1
00127f 9ffb      	MUL  R31,R27
001280 0d60      	ADD  R22,R0
001281 1d71      	ADC  R23,R1
001282 9fe8      	MUL  R30,R24
001283 0d60      	ADD  R22,R0
001284 1d71      	ADC  R23,R1
001285 2788      	CLR  R24
001286 9ffa      	MUL  R31,R26
001287 2df0      	MOV  R31,R0
001288 0d61      	ADD  R22,R1
001289 1f78      	ADC  R23,R24
00128a 9feb      	MUL  R30,R27
00128b 0df0      	ADD  R31,R0
00128c 1d61      	ADC  R22,R1
00128d 1f78      	ADC  R23,R24
00128e 9fea      	MUL  R30,R26
00128f 2de0      	MOV  R30,R0
001290 0df1      	ADD  R31,R1
001291 1f68      	ADC  R22,R24
001292 1f78      	ADC  R23,R24
001293 9508      	RET
                 
                 __MULB1W2U:
001294 2f6e      	MOV  R22,R30
001295 9f6a      	MUL  R22,R26
001296 01f0      	MOVW R30,R0
001297 9f6b      	MUL  R22,R27
001298 0df0      	ADD  R31,R0
001299 9508      	RET
                 
                 __MULD12:
00129a d058      	RCALL __CHKSIGND
00129b dfd8      	RCALL __MULD12U
00129c f40e      	BRTC __MULD121
00129d dfb9      	RCALL __ANEGD1
                 __MULD121:
00129e 9508      	RET
                 
                 __DIVB21U:
00129f 2400      	CLR  R0
0012a0 e098      	LDI  R25,8
                 __DIVB21U1:
0012a1 0faa      	LSL  R26
0012a2 1c00      	ROL  R0
0012a3 1a0e      	SUB  R0,R30
0012a4 f410      	BRCC __DIVB21U2
0012a5 0e0e      	ADD  R0,R30
0012a6 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0012a7 60a1      	SBR  R26,1
                 __DIVB21U3:
0012a8 959a      	DEC  R25
0012a9 f7b9      	BRNE __DIVB21U1
0012aa 2fea      	MOV  R30,R26
0012ab 2da0      	MOV  R26,R0
0012ac 9508      	RET
                 
                 __DIVB21:
0012ad d039      	RCALL __CHKSIGNB
0012ae dff0      	RCALL __DIVB21U
0012af f40e      	BRTC __DIVB211
0012b0 95e1      	NEG  R30
                 __DIVB211:
0012b1 9508      	RET
                 
                 __DIVD21U:
0012b2 933f      	PUSH R19
0012b3 934f      	PUSH R20
0012b4 935f      	PUSH R21
0012b5 2400      	CLR  R0
0012b6 2411      	CLR  R1
0012b7 2744      	CLR  R20
0012b8 2755      	CLR  R21
0012b9 e230      	LDI  R19,32
                 __DIVD21U1:
0012ba 0faa      	LSL  R26
0012bb 1fbb      	ROL  R27
0012bc 1f88      	ROL  R24
0012bd 1f99      	ROL  R25
0012be 1c00      	ROL  R0
0012bf 1c11      	ROL  R1
0012c0 1f44      	ROL  R20
0012c1 1f55      	ROL  R21
0012c2 1a0e      	SUB  R0,R30
0012c3 0a1f      	SBC  R1,R31
0012c4 0b46      	SBC  R20,R22
0012c5 0b57      	SBC  R21,R23
0012c6 f428      	BRCC __DIVD21U2
0012c7 0e0e      	ADD  R0,R30
0012c8 1e1f      	ADC  R1,R31
0012c9 1f46      	ADC  R20,R22
0012ca 1f57      	ADC  R21,R23
0012cb c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0012cc 60a1      	SBR  R26,1
                 __DIVD21U3:
0012cd 953a      	DEC  R19
0012ce f759      	BRNE __DIVD21U1
0012cf 01fd      	MOVW R30,R26
0012d0 01bc      	MOVW R22,R24
0012d1 01d0      	MOVW R26,R0
0012d2 01ca      	MOVW R24,R20
0012d3 915f      	POP  R21
0012d4 914f      	POP  R20
0012d5 913f      	POP  R19
0012d6 9508      	RET
                 
                 __MODB21:
0012d7 94e8      	CLT
0012d8 ffa7      	SBRS R26,7
0012d9 c002      	RJMP __MODB211
0012da 95a1      	NEG  R26
0012db 9468      	SET
                 __MODB211:
0012dc fde7      	SBRC R30,7
0012dd 95e1      	NEG  R30
0012de dfc0      	RCALL __DIVB21U
0012df 2fea      	MOV  R30,R26
0012e0 f40e      	BRTC __MODB212
0012e1 95e1      	NEG  R30
                 __MODB212:
0012e2 9508      	RET
                 
                 __MODD21U:
0012e3 dfce      	RCALL __DIVD21U
0012e4 01fd      	MOVW R30,R26
0012e5 01bc      	MOVW R22,R24
0012e6 9508      	RET
                 
                 __CHKSIGNB:
0012e7 94e8      	CLT
0012e8 ffe7      	SBRS R30,7
0012e9 c002      	RJMP __CHKSB1
0012ea 95e1      	NEG  R30
0012eb 9468      	SET
                 __CHKSB1:
0012ec ffa7      	SBRS R26,7
0012ed c004      	RJMP __CHKSB2
0012ee 95a1      	NEG  R26
0012ef f800      	BLD  R0,0
0012f0 9403      	INC  R0
0012f1 fa00      	BST  R0,0
                 __CHKSB2:
0012f2 9508      	RET
                 
                 __CHKSIGND:
0012f3 94e8      	CLT
0012f4 ff77      	SBRS R23,7
0012f5 c002      	RJMP __CHKSD1
0012f6 df60      	RCALL __ANEGD1
0012f7 9468      	SET
                 __CHKSD1:
0012f8 ff97      	SBRS R25,7
0012f9 c00b      	RJMP __CHKSD2
0012fa 2400      	CLR  R0
0012fb 95a0      	COM  R26
0012fc 95b0      	COM  R27
0012fd 9580      	COM  R24
0012fe 9590      	COM  R25
0012ff 9611      	ADIW R26,1
001300 1d80      	ADC  R24,R0
001301 1d90      	ADC  R25,R0
001302 f800      	BLD  R0,0
001303 9403      	INC  R0
001304 fa00      	BST  R0,0
                 __CHKSD2:
001305 9508      	RET
                 
                 __GETW1P:
001306 91ed      	LD   R30,X+
001307 91fc      	LD   R31,X
001308 9711      	SBIW R26,1
001309 9508      	RET
                 
                 __GETD1P:
00130a 91ed      	LD   R30,X+
00130b 91fd      	LD   R31,X+
00130c 916d      	LD   R22,X+
00130d 917c      	LD   R23,X
00130e 9713      	SBIW R26,3
00130f 9508      	RET
                 
                 __GETD1P_INC:
001310 91ed      	LD   R30,X+
001311 91fd      	LD   R31,X+
001312 916d      	LD   R22,X+
001313 917d      	LD   R23,X+
001314 9508      	RET
                 
                 __PUTDP1:
001315 93ed      	ST   X+,R30
001316 93fd      	ST   X+,R31
001317 936d      	ST   X+,R22
001318 937c      	ST   X,R23
001319 9508      	RET
                 
                 __PUTDP1_DEC:
00131a 937e      	ST   -X,R23
00131b 936e      	ST   -X,R22
00131c 93fe      	ST   -X,R31
00131d 93ee      	ST   -X,R30
00131e 9508      	RET
                 
                 __GETD1S0:
00131f 81e8      	LD   R30,Y
001320 81f9      	LDD  R31,Y+1
001321 816a      	LDD  R22,Y+2
001322 817b      	LDD  R23,Y+3
001323 9508      	RET
                 
                 __GETD2S0:
001324 81a8      	LD   R26,Y
001325 81b9      	LDD  R27,Y+1
001326 818a      	LDD  R24,Y+2
001327 819b      	LDD  R25,Y+3
001328 9508      	RET
                 
                 __PUTD1S0:
001329 83e8      	ST   Y,R30
00132a 83f9      	STD  Y+1,R31
00132b 836a      	STD  Y+2,R22
00132c 837b      	STD  Y+3,R23
00132d 9508      	RET
                 
                 __PUTPARD1L:
00132e e060      	LDI  R22,0
00132f e070      	LDI  R23,0
                 __PUTPARD1:
001330 937a      	ST   -Y,R23
001331 936a      	ST   -Y,R22
001332 93fa      	ST   -Y,R31
001333 93ea      	ST   -Y,R30
001334 9508      	RET
                 
                 __CDF2U:
001335 9468      	SET
001336 c001      	RJMP __CDF2U0
                 __CDF2:
001337 94e8      	CLT
                 __CDF2U0:
001338 d001      	RCALL __SWAPD12
001339 ddd4      	RCALL __CDF1U0
                 
                 __SWAPD12:
00133a 2e18      	MOV  R1,R24
00133b 2f86      	MOV  R24,R22
00133c 2d61      	MOV  R22,R1
00133d 2e19      	MOV  R1,R25
00133e 2f97      	MOV  R25,R23
00133f 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001340 2e1b      	MOV  R1,R27
001341 2fbf      	MOV  R27,R31
001342 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001343 2e1a      	MOV  R1,R26
001344 2fae      	MOV  R26,R30
001345 2de1      	MOV  R30,R1
001346 9508      	RET
                 
                 __CPD10:
001347 9730      	SBIW R30,0
001348 4060      	SBCI R22,0
001349 4070      	SBCI R23,0
00134a 9508      	RET
                 
                 __CPW02:
00134b 2400      	CLR  R0
00134c 160a      	CP   R0,R26
00134d 060b      	CPC  R0,R27
00134e 9508      	RET
                 
                 __SAVELOCR6:
00134f 935a      	ST   -Y,R21
                 __SAVELOCR5:
001350 934a      	ST   -Y,R20
                 __SAVELOCR4:
001351 933a      	ST   -Y,R19
                 __SAVELOCR3:
001352 932a      	ST   -Y,R18
                 __SAVELOCR2:
001353 931a      	ST   -Y,R17
001354 930a      	ST   -Y,R16
001355 9508      	RET
                 
                 __LOADLOCR6:
001356 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
001357 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
001358 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001359 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00135a 8119      	LDD  R17,Y+1
00135b 8108      	LD   R16,Y
00135c 9508      	RET
                 
                 __INITLOCW:
00135d 0fac      	ADD  R26,R28
00135e 1fbd      	ADC  R27,R29
                 __INITLOC0:
00135f 9005      	LPM  R0,Z+
001360 920d      	ST   X+,R0
001361 9701      	SBIW R24,1
001362 f7e1      	BRNE __INITLOC0
001363 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 128 r1 :  54 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  75 r17:  94 r18:  69 r19:  74 r20:  59 r21: 105 r22: 204 r23: 185 
r24: 119 r25:  96 r26: 371 r27: 188 r28: 113 r29:   3 r30: 912 r31: 379 
x  : 217 y  : 637 z  :  66 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  37 add   :  30 
adiw  :  55 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  74 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  78 brpl  :   9 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   4 call  : 407 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  67 cls   :   0 clt   :   7 clv   :   0 clz   :   2 com   :  12 
cp    :  21 cpc   :  25 cpi   : 133 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  16 inc   :   4 jmp   :  52 ld    : 161 ldd   : 289 
ldi   : 470 lds   :  32 lpm   :  17 lsl   :  14 lsr   :   4 mov   : 110 
movw  : 156 mul   :  24 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  34 pop   :  59 push  :  59 rcall :  87 
ret   : 152 reti  :   6 rjmp  : 203 rol   :  32 ror   :  16 sbc   :  12 
sbci  : 102 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  54 sbr   :   4 
sbrc  :   5 sbrs  :  22 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   9 ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 311 std   : 144 sts   :  35 sub   :   6 subi  : 123 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0026c8   9086    842   9928  131072   7.6%
[.dseg] 0x000100 0x00058e      0    142    142    4351   3.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
