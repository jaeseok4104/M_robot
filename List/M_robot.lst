
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Thu Jan 16 19:49:12 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r7 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R7
                 	.DEF _VELOCITY_BUFF_IDX=R6
                 	.DEF _CHECK_GETS=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 009c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0160 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0164 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0127 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0142 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3E:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x49:
000080 0000
000081 0000
000082 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000083 253c
000084 2c64
000085 6425
000086 003e      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x3E,0x0
000087 253c
000088 2c64
000089 6c25
00008a 3e66      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x6C,0x66,0x3E
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1131): warning: .cseg .db misalignment - padding zero byte
00008b 0000      	.DB  0x0
                 _0x2000000:
00008c 4e2d
00008d 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1133): warning: .cseg .db misalignment - padding zero byte
00008e 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1135): warning: .cseg .db misalignment - padding zero byte
00008f 0001      	.DB  0x1
                 _0x2080000:
000090 4e2d
000091 4e41
000092 4900
000093 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1138): warning: .cseg .db misalignment - padding zero byte
000094 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000095 0006      	.DW  0x06
000096 0004      	.DW  0x04
000097 0100      	.DW  _0x49*2
                 
000098 0001      	.DW  0x01
000099 0578      	.DW  __seed_G104
00009a 011e      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
00009b 0000      	.DW  0
                 
                 __RESET:
00009c 94f8      	CLI
00009d 27ee      	CLR  R30
00009e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00009f e0f1      	LDI  R31,1
0000a0 bff5      	OUT  MCUCR,R31
0000a1 bfe5      	OUT  MCUCR,R30
0000a2 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0000a4 e1f8      	LDI  R31,0x18
0000a5 bdf1      	OUT  WDTCR,R31
0000a6 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0000a7 e08d      	LDI  R24,(14-2)+1
0000a8 e0a2      	LDI  R26,2
0000a9 27bb      	CLR  R27
                 __CLEAR_REG:
0000aa 93ed      	ST   X+,R30
0000ab 958a      	DEC  R24
0000ac f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000ad e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000ae e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000af e0a0      	LDI  R26,LOW(__SRAM_START)
0000b0 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000b1 93ed      	ST   X+,R30
0000b2 9701      	SBIW R24,1
0000b3 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000b4 e2ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000b5 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000b6 9185      	LPM  R24,Z+
0000b7 9195      	LPM  R25,Z+
0000b8 9700      	SBIW R24,0
0000b9 f061      	BREQ __GLOBAL_INI_END
0000ba 91a5      	LPM  R26,Z+
0000bb 91b5      	LPM  R27,Z+
0000bc 9005      	LPM  R0,Z+
0000bd 9015      	LPM  R1,Z+
0000be 01bf      	MOVW R22,R30
0000bf 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000c0 9005      	LPM  R0,Z+
0000c1 920d      	ST   X+,R0
0000c2 9701      	SBIW R24,1
0000c3 f7e1      	BRNE __GLOBAL_INI_LOOP
0000c4 01fb      	MOVW R30,R22
0000c5 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000c6 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000c7 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000c8 bfed      	OUT  SPL,R30
0000c9 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000ca bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000cb e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000cc e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000cd 940c 016a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 25
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;
                 ;#define Length 0.29
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned char TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 001A {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 001B     UCSR1A = 0x00;
                 ;	bps -> Y+0
0000cf e0e0      	LDI  R30,LOW(0)
0000d0 93e0 009b 	STS  155,R30
                 ; 0000 001C     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0000d2 e9e8      	LDI  R30,LOW(152)
0000d3 93e0 009a 	STS  154,R30
                 ; 0000 001D     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0000d5 e0e6      	LDI  R30,LOW(6)
0000d6 93e0 009d 	STS  157,R30
                 ; 0000 001E     UCSR1C &= ~(1<<UMSEL1);
0000d8 91e0 009d 	LDS  R30,157
0000da 7bef      	ANDI R30,0xBF
0000db 93e0 009d 	STS  157,R30
                 ; 0000 001F 
                 ; 0000 0020     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0000dd 81e8      	LD   R30,Y
0000de 81f9      	LDD  R31,Y+1
0000df 940e 0b00 	CALL __ASRW8
0000e1 93e0 0098 	STS  152,R30
                 ; 0000 0021     UBRR1L = (unsigned char)(bps & 0x00ff);
0000e3 81e8      	LD   R30,Y
0000e4 93e0 0099 	STS  153,R30
                 ; 0000 0022 }
0000e6 c014      	RJMP _0x20A000A
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 0025 {
                 _usart0_init:
                 ; 0000 0026     UCSR0A = 0x00;
                 ;	bps -> Y+0
0000e7 e0e0      	LDI  R30,LOW(0)
0000e8 b9eb      	OUT  0xB,R30
                 ; 0000 0027     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0000e9 e9e8      	LDI  R30,LOW(152)
0000ea b9ea      	OUT  0xA,R30
                 ; 0000 0028     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0000eb e0e6      	LDI  R30,LOW(6)
0000ec 93e0 0095 	STS  149,R30
                 ; 0000 0029     UCSR0C &= ~(1<<UMSEL0);
0000ee 91e0 0095 	LDS  R30,149
0000f0 7bef      	ANDI R30,0xBF
0000f1 93e0 0095 	STS  149,R30
                 ; 0000 002A 
                 ; 0000 002B     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0000f3 81e8      	LD   R30,Y
0000f4 81f9      	LDD  R31,Y+1
0000f5 940e 0b00 	CALL __ASRW8
0000f7 93e0 0090 	STS  144,R30
                 ; 0000 002C     UBRR0L = (unsigned char)(bps & 0x00ff);
0000f9 81e8      	LD   R30,Y
0000fa b9e9      	OUT  0x9,R30
                 ; 0000 002D }
                 _0x20A000A:
0000fb 9622      	ADIW R28,2
0000fc 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 0030 {
                 _timer2_init:
                 ; 0000 0031     //TIMER2
                 ; 0000 0032     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
0000fd e0ed      	LDI  R30,LOW(13)
0000fe bde5      	OUT  0x25,R30
                 ; 0000 0033 
                 ; 0000 0034     OCR2 = 40;
0000ff e2e8      	LDI  R30,LOW(40)
000100 bde3      	OUT  0x23,R30
                 ; 0000 0035     TIMSK = (1<<OCIE2)|(1<<OCIE0);
000101 e8e2      	LDI  R30,LOW(130)
000102 bfe7      	OUT  0x37,R30
                 ; 0000 0036     //TIMSK = (1<<OCIE2);
                 ; 0000 0037 }
000103 9508      	RET
                 ;void timer0_init(void)
                 ; 0000 0039 {
                 ; 0000 003A     TCCR0 = (1<<WGM01)|(1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
                 ; 0000 003B     OCR0 = 40;
                 ; 0000 003C     TIMSK = (1<<OCIE2)|(1<<OCIE0);
                 ; 0000 003D }
                 ;
                 ;void putch_USART1(char data)
                 ; 0000 0040 {
                 _putch_USART1:
                 ; 0000 0041     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
000104 91e0 009b 	LDS  R30,155
000106 72e0      	ANDI R30,LOW(0x20)
000107 f3e1      	BREQ _0x3
                 ; 0000 0042     UDR1 = data;
000108 81e8      	LD   R30,Y
000109 93e0 009c 	STS  156,R30
                 ; 0000 0043 }
00010b 9621      	ADIW R28,1
00010c 9508      	RET
                 ;
                 ;//USART 문자열 송신
                 ;void puts_USART1(char *str,char IDX)
                 ; 0000 0047 {
                 _puts_USART1:
                 ; 0000 0048     unsigned char i = 0;
                 ; 0000 0049 
                 ; 0000 004A     for(i = 0;i<IDX;i++)
00010d 931a      	ST   -Y,R17
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
00010e e010      	LDI  R17,0
00010f e010      	LDI  R17,LOW(0)
                 _0x7:
000110 81e9      	LDD  R30,Y+1
000111 171e      	CP   R17,R30
000112 f438      	BRSH _0x8
                 ; 0000 004B     {
                 ; 0000 004C         putch_USART1(*(str+i));
000113 940e 07fc 	CALL SUBOPT_0x0
000115 91ec      	LD   R30,X
000116 93ea      	ST   -Y,R30
000117 dfec      	RCALL _putch_USART1
                 ; 0000 004D     }
000118 5f1f      	SUBI R17,-1
000119 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 004E 
                 ; 0000 004F     for(i = 0; i<IDX; i++)
00011a e010      	LDI  R17,LOW(0)
                 _0xA:
00011b 81e9      	LDD  R30,Y+1
00011c 171e      	CP   R17,R30
00011d f430      	BRSH _0xB
                 ; 0000 0050     {
                 ; 0000 0051         *(str+i) = 0;
00011e 940e 07fc 	CALL SUBOPT_0x0
000120 e0e0      	LDI  R30,LOW(0)
000121 93ec      	ST   X,R30
                 ; 0000 0052     }
000122 5f1f      	SUBI R17,-1
000123 cff7      	RJMP _0xA
                 _0xB:
                 ; 0000 0053 }
000124 8118      	LDD  R17,Y+0
000125 9624      	ADIW R28,4
000126 9508      	RET
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0056 {
                 ; 0000 0057     unsigned char i = 0;
                 ; 0000 0058     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 0059     if(TIMER2_OVERFLOW>0)
                 ; 0000 005A     {
                 ; 0000 005B         for(i = 0;i<IDX-1;i++) putch_USART1(*(str+i));
                 ; 0000 005D for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 005E }
                 ; 0000 005F     UCSR0B |= (1<<RXEN0);
                 ; 0000 0060 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0063 {
                 ; 0000 0064     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 ; 0000 0065     UDR0 = data;
                 ; 0000 0066 }
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 0069 {
                 ; 0000 006A     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 006B     unsigned char i = 0;
                 ; 0000 006C     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 006D     {
                 ; 0000 006E         putch_USART1(*(str+i));
                 ; 0000 006F     }
                 ; 0000 0070 
                 ; 0000 0071     for(i = 0; i<IDX; i++)
                 ; 0000 0072     {
                 ; 0000 0073         *(str+i) = 0;
                 ; 0000 0074     }
                 ; 0000 0075 }
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 0078 {
                 ; 0000 0079     int i;
                 ; 0000 007A     unsigned short crc, flag;
                 ; 0000 007B     crc = 0xffff;
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                 ; 0000 007C 
                 ; 0000 007D     while(usDataLen--){
                 ; 0000 007E         crc ^= *puchMsg++;
                 ; 0000 007F 
                 ; 0000 0080         for (i=0; i<8; i++){
                 ; 0000 0081             flag = crc & 0x0001;
                 ; 0000 0082             crc >>= 1;
                 ; 0000 0083             if(flag) crc ^= POLYNORMIAL;
                 ; 0000 0084         }
                 ; 0000 0085     }
                 ; 0000 0086     return crc;
                 ; 0000 0087 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 008A {
                 ; 0000 008B     char protocol[8];
                 ; 0000 008C     unsigned short crc16;
                 ; 0000 008D     int i=0;
                 ; 0000 008E     //PACKET_BUFF_IDX = 0;
                 ; 0000 008F 
                 ; 0000 0090     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 0091     protocol[1]=0x06;
                 ; 0000 0092     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 0093     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 0094     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 0095     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 0096     protocol[6]=0;
                 ; 0000 0097     protocol[7]=0;
                 ; 0000 0098 
                 ; 0000 0099     crc16 = CRC16(protocol, 6);
                 ; 0000 009A 
                 ; 0000 009B     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 009C     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 009D 
                 ; 0000 009E 
                 ; 0000 009F     for(i=0;i<8;i++)
                 ; 0000 00A0     {
                 ; 0000 00A1         putch_USART0(*(protocol+i));
                 ; 0000 00A2     }
                 ; 0000 00A3 }
                 ;
                 ;int RTU_WriteOperate1(char device_address,int starting_address,int data)
                 ; 0000 00A6 {
                 ; 0000 00A7     char protocol[8];
                 ; 0000 00A8     unsigned short crc16;
                 ; 0000 00A9     int i=0;
                 ; 0000 00AA    // PACKET_BUFF_IDX = 0;
                 ; 0000 00AB 
                 ; 0000 00AC     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00AD     protocol[1]=0x06;
                 ; 0000 00AE     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00AF     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00B0     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00B1     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00B2     protocol[6]=0;
                 ; 0000 00B3     protocol[7]=0;
                 ; 0000 00B4 
                 ; 0000 00B5     crc16 = CRC16(protocol, 6);
                 ; 0000 00B6 
                 ; 0000 00B7     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00B8     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00B9 
                 ; 0000 00BA 
                 ; 0000 00BB     for(i=0;i<8;i++)
                 ; 0000 00BC     {
                 ; 0000 00BD         putch_USART1(*(protocol+i));
                 ; 0000 00BE     }
                 ; 0000 00BF }
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00C2 {
                 ; 0000 00C3     char protocol[8];
                 ; 0000 00C4     unsigned short crc16;
                 ; 0000 00C5     int i=0;
                 ; 0000 00C6     //PACKET_BUFF_IDX = 0;
                 ; 0000 00C7 
                 ; 0000 00C8     protocol[0]=device_address;
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00C9     protocol[1]=0x03;
                 ; 0000 00CA     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00CB     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00CC     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00CD     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00CE     protocol[6]=0;
                 ; 0000 00CF     protocol[7]=0;
                 ; 0000 00D0 
                 ; 0000 00D1     crc16 = CRC16(protocol, 6);
                 ; 0000 00D2 
                 ; 0000 00D3     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00D4     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00D5 
                 ; 0000 00D6 
                 ; 0000 00D7     for(i=0;i<8;i++)
                 ; 0000 00D8     {
                 ; 0000 00D9         putch_USART0(*(protocol+i));
                 ; 0000 00DA     }
                 ; 0000 00DB }
                 ;
                 ;void Make_MSPEED(float _velocity, float _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 00DE {
                 ; 0000 00DF     float VelocityR = 0;
                 ; 0000 00E0     float VelocityL = 0;
                 ; 0000 00E1 
                 ; 0000 00E2     if(_velocity>=0){
                 ;	_velocity -> Y+16
                 ;	_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
                 ; 0000 00E3         _angularV = -(_angularV);
                 ; 0000 00E4     }
                 ; 0000 00E5 
                 ; 0000 00E6     VelocityR = _velocity+(_angularV*Length)/4;
                 ; 0000 00E7     VelocityL = _velocity-(_angularV*Length)/4;
                 ; 0000 00E8 
                 ; 0000 00E9     *R_RPM = 152.788*VelocityR*25;
                 ; 0000 00EA     *L_RPM = 152.788*VelocityL*25;
                 ; 0000 00EB     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
                 ; 0000 00EC         *R_RPM = 0;
                 ; 0000 00ED         *L_RPM = 0;
                 ; 0000 00EE     }
                 ; 0000 00EF }
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 00F2 {
                 _usart0_rxc:
000127 93aa      	ST   -Y,R26
000128 93ba      	ST   -Y,R27
000129 93ea      	ST   -Y,R30
00012a b7ef      	IN   R30,SREG
00012b 93ea      	ST   -Y,R30
                 ; 0000 00F3     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
00012c b5e4      	IN   R30,0x24
00012d 31e9      	CPI  R30,LOW(0x19)
00012e f418      	BRSH _0x35
00012f e0e0      	LDI  R30,LOW(0)
000130 15e5      	CP   R30,R5
000131 f019      	BREQ _0x37
                 _0x35:
000132 e0e0      	LDI  R30,LOW(0)
000133 15e4      	CP   R30,R4
000134 f419      	BRNE _0x34
                 _0x37:
                 ; 0000 00F4     {
                 ; 0000 00F5         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000135 940e 0803 	CALL SUBOPT_0x1
                 ; 0000 00F6         PACKET_BUFF_IDX++;
                 ; 0000 00F7         TCNT2 = 0;
                 ; 0000 00F8     }
                 ; 0000 00F9     else {
000137 c004      	RJMP _0x39
                 _0x34:
                 ; 0000 00FA         PACKET_BUFF_IDX = 0;
000138 2444      	CLR  R4
                 ; 0000 00FB         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000139 940e 0803 	CALL SUBOPT_0x1
                 ; 0000 00FC         PACKET_BUFF_IDX++;
                 ; 0000 00FD         TCNT2 = 0;
                 ; 0000 00FE         TIMER2_OVERFLOW = 0;
00013b 2455      	CLR  R5
                 ; 0000 00FF     }
                 _0x39:
                 ; 0000 0100 }
00013c 91e9      	LD   R30,Y+
00013d bfef      	OUT  SREG,R30
00013e 91e9      	LD   R30,Y+
00013f 91b9      	LD   R27,Y+
000140 91a9      	LD   R26,Y+
000141 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 0103 {
                 _usart1_rxc:
000142 93ea      	ST   -Y,R30
000143 93fa      	ST   -Y,R31
000144 b7ef      	IN   R30,SREG
000145 93ea      	ST   -Y,R30
                 ; 0000 0104     unsigned char i = 0;
                 ; 0000 0105     i = UDR1;
000146 931a      	ST   -Y,R17
                 ;	i -> R17
000147 e010      	LDI  R17,0
000148 9110 009c 	LDS  R17,156
                 ; 0000 0106     if(i == '<'){
00014a 331c      	CPI  R17,60
00014b f431      	BRNE _0x3A
                 ; 0000 0107         VELOCITY_BUFF_IDX = 0;
00014c 2466      	CLR  R6
                 ; 0000 0108         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
00014d 940e 080d 	CALL SUBOPT_0x2
                 ; 0000 0109         VELOCITY_BUFF_IDX++;
                 ; 0000 010A         CHECK_GETS = 1;
00014f e0e1      	LDI  R30,LOW(1)
000150 2e9e      	MOV  R9,R30
                 ; 0000 010B     }
                 ; 0000 010C     else if(i == '>'){
000151 c008      	RJMP _0x3B
                 _0x3A:
000152 331e      	CPI  R17,62
000153 f421      	BRNE _0x3C
                 ; 0000 010D         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000154 940e 080d 	CALL SUBOPT_0x2
                 ; 0000 010E         VELOCITY_BUFF_IDX++;
                 ; 0000 010F         CHECK_GETS = 0;
000156 2499      	CLR  R9
                 ; 0000 0110     }
                 ; 0000 0111     else{
000157 c002      	RJMP _0x3D
                 _0x3C:
                 ; 0000 0112         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000158 940e 080d 	CALL SUBOPT_0x2
                 ; 0000 0113         VELOCITY_BUFF_IDX++;
                 ; 0000 0114     }
                 _0x3D:
                 _0x3B:
                 ; 0000 0115 }
00015a 9119      	LD   R17,Y+
00015b 91e9      	LD   R30,Y+
00015c bfef      	OUT  SREG,R30
00015d 91f9      	LD   R31,Y+
00015e 91e9      	LD   R30,Y+
00015f 9518      	RETI
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 0118 {
                 _timer2_comp:
000160 93ea      	ST   -Y,R30
000161 b7ef      	IN   R30,SREG
                 ; 0000 0119     TIMER2_OVERFLOW++;
000162 9453      	INC  R5
                 ; 0000 011A }
000163 c003      	RJMP _0x48
                 ;
                 ;interrupt [TIM0_COMP] void timer0_comp(void)
                 ; 0000 011D {
                 _timer0_comp:
000164 93ea      	ST   -Y,R30
000165 b7ef      	IN   R30,SREG
                 ; 0000 011E     TIMER0_OVERFLOW++;
000166 9473      	INC  R7
                 ; 0000 011F }
                 _0x48:
000167 bfef      	OUT  SREG,R30
000168 91e9      	LD   R30,Y+
000169 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 0122 {
                 _main:
                 ; 0000 0123     float velocity = 0;
                 ; 0000 0124     float angularV = 0;
                 ; 0000 0125     float test1;
                 ; 0000 0126     float test2;
                 ; 0000 0127     int velocity_R = 0;
                 ; 0000 0128     int velocity_L = 0;
                 ; 0000 0129     unsigned char BUFF[100] = {0,};
                 ; 0000 012A 
                 ; 0000 012B     usart1_init(bps_115200);
00016a 97ef      	SBIW R28,63
00016b 97e5      	SBIW R28,53
00016c e784      	LDI  R24,116
00016d e0a0      	LDI  R26,LOW(0)
00016e e0b0      	LDI  R27,HIGH(0)
00016f e8ec      	LDI  R30,LOW(_0x3E*2)
000170 e0f0      	LDI  R31,HIGH(_0x3E*2)
000171 940e 0ba4 	CALL __INITLOCB
                 ;	velocity -> Y+112
                 ;	angularV -> Y+108
                 ;	test1 -> Y+104
                 ;	test2 -> Y+100
                 ;	velocity_R -> R16,R17
                 ;	velocity_L -> R18,R19
                 ;	BUFF -> Y+0
                +
000173 e000     +LDI R16 , LOW ( 0 )
000174 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000175 e020     +LDI R18 , LOW ( 0 )
000176 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000177 e0e7      	LDI  R30,LOW(7)
000178 e0f0      	LDI  R31,HIGH(7)
000179 93fa      	ST   -Y,R31
00017a 93ea      	ST   -Y,R30
00017b df53      	RCALL _usart1_init
                 ; 0000 012C     usart0_init(bps_115200);
00017c e0e7      	LDI  R30,LOW(7)
00017d e0f0      	LDI  R31,HIGH(7)
00017e 93fa      	ST   -Y,R31
00017f 93ea      	ST   -Y,R30
000180 df66      	RCALL _usart0_init
                 ; 0000 012D     timer2_init();
000181 df7b      	RCALL _timer2_init
                 ; 0000 012E     SREG |= 0x80;
000182 9478      	BSET 7
                 ; 0000 012F     DDRB.1 = 1;
000183 9ab9      	SBI  0x17,1
                 ; 0000 0130     PORTB.1 = 0;
000184 98c1      	CBI  0x18,1
                 ; 0000 0131     delay_ms(5000);
000185 e8e8      	LDI  R30,LOW(5000)
000186 e1f3      	LDI  R31,HIGH(5000)
000187 93fa      	ST   -Y,R31
000188 93ea      	ST   -Y,R30
000189 940e 093f 	CALL _delay_ms
                 ; 0000 0132     while(1)
                 _0x43:
                 ; 0000 0133     {
                 ; 0000 0134         if(CHECK_GETS == 0)
00018b 2099      	TST  R9
00018c f011      	BREQ PC+3
00018d 940c 01eb 	JMP _0x46
                 ; 0000 0135         {
                 ; 0000 0136             //UCSR1B &= ~(1<<RXEN1);
                 ; 0000 0137             sscanf(VELOCITY_BUFF,"<%d,%d>", &velocity, &angularV);
00018f e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
000190 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000191 93fa      	ST   -Y,R31
000192 93ea      	ST   -Y,R30
                +
000193 e0e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000194 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000195 93fa      	ST   -Y,R31
000196 93ea      	ST   -Y,R30
000197 940e 0814 	CALL SUBOPT_0x3
000199 940e 0814 	CALL SUBOPT_0x3
00019b e088      	LDI  R24,8
00019c 940e 06a7 	CALL _sscanf
00019e 962c      	ADIW R28,12
                 ; 0000 0138 
                 ; 0000 0139             test1 = (float)velocity/100;
                +
00019f 01de     +MOVW R26 , R28
0001a0 59a0     +SUBI R26 , LOW ( - 112 )
0001a1 4fbf     +SBCI R27 , HIGH ( - 112 )
0001a2 900d     +LD R0 , X +
0001a3 901d     +LD R1 , X +
0001a4 918d     +LD R24 , X +
0001a5 919c     +LD R25 , X
0001a6 01d0     +MOVW R26 , R0
                 	__GETD2SX 112
0001a7 940e 081c 	CALL SUBOPT_0x4
                +
0001a9 01de     +MOVW R26 , R28
0001aa 59a8     +SUBI R26 , LOW ( - 104 )
0001ab 4fbf     +SBCI R27 , HIGH ( - 104 )
0001ac 93ed     +ST X + , R30
0001ad 93fd     +ST X + , R31
0001ae 936d     +ST X + , R22
0001af 937c     +ST X , R23
                 	__PUTD1SX 104
                 ; 0000 013A             test2 = (float)angularV/100;
                +
0001b0 01de     +MOVW R26 , R28
0001b1 59a4     +SUBI R26 , LOW ( - 108 )
0001b2 4fbf     +SBCI R27 , HIGH ( - 108 )
0001b3 900d     +LD R0 , X +
0001b4 901d     +LD R1 , X +
0001b5 918d     +LD R24 , X +
0001b6 919c     +LD R25 , X
0001b7 01d0     +MOVW R26 , R0
                 	__GETD2SX 108
0001b8 940e 081c 	CALL SUBOPT_0x4
                +
0001ba 01de     +MOVW R26 , R28
0001bb 59ac     +SUBI R26 , LOW ( - 100 )
0001bc 4fbf     +SBCI R27 , HIGH ( - 100 )
0001bd 93ed     +ST X + , R30
0001be 93fd     +ST X + , R31
0001bf 936d     +ST X + , R22
0001c0 937c     +ST X , R23
                 	__PUTD1SX 100
                 ; 0000 013B 
                 ; 0000 013C             //Make_MSPEED(velocity, angularV, &velocity_R, &velocity_L);
                 ; 0000 013D             sprintf(BUFF,"<%d,%lf>", velocity, test2);
0001c1 01fe      	MOVW R30,R28
0001c2 93fa      	ST   -Y,R31
0001c3 93ea      	ST   -Y,R30
                +
0001c4 e0ee     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
0001c5 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
0001c6 93fa      	ST   -Y,R31
0001c7 93ea      	ST   -Y,R30
                +
0001c8 01fe     +MOVW R30 , R28
0001c9 58ec     +SUBI R30 , LOW ( - 116 )
0001ca 4fff     +SBCI R31 , HIGH ( - 116 )
0001cb 9001     +LD R0 , Z +
0001cc 9011     +LD R1 , Z +
0001cd 9161     +LD R22 , Z +
0001ce 8170     +LD R23 , Z
0001cf 01f0     +MOVW R30 , R0
                 	__GETD1SX 116
0001d0 940e 0b80 	CALL __PUTPARD1
                +
0001d2 01fe     +MOVW R30 , R28
0001d3 59e4     +SUBI R30 , LOW ( - 108 )
0001d4 4fff     +SBCI R31 , HIGH ( - 108 )
0001d5 9001     +LD R0 , Z +
0001d6 9011     +LD R1 , Z +
0001d7 9161     +LD R22 , Z +
0001d8 8170     +LD R23 , Z
0001d9 01f0     +MOVW R30 , R0
                 	__GETD1SX 108
0001da 940e 0b80 	CALL __PUTPARD1
0001dc e088      	LDI  R24,8
0001dd 940e 0517 	CALL _sprintf
0001df 962c      	ADIW R28,12
                 ; 0000 013E 
                 ; 0000 013F             //UCSR1B |=(1<<RXEN1);
                 ; 0000 0140             puts_USART1(BUFF,VELOCITY_BUFF_IDX);
0001e0 01fe      	MOVW R30,R28
0001e1 93fa      	ST   -Y,R31
0001e2 93ea      	ST   -Y,R30
0001e3 926a      	ST   -Y,R6
0001e4 df28      	RCALL _puts_USART1
                 ; 0000 0141             delay_ms(50);
0001e5 e3e2      	LDI  R30,LOW(50)
0001e6 e0f0      	LDI  R31,HIGH(50)
0001e7 93fa      	ST   -Y,R31
0001e8 93ea      	ST   -Y,R30
0001e9 940e 093f 	CALL _delay_ms
                 ; 0000 0142 
                 ; 0000 0143             // RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ; 0000 0144             // delay_ms(5);
                 ; 0000 0145 
                 ; 0000 0146             // RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
                 ; 0000 0147             // delay_ms(5);
                 ; 0000 0148 
                 ; 0000 0149             // RTU_WriteOperate0(R,(unsigned int)120,(int)(1));
                 ; 0000 014A             // delay_ms(5);
                 ; 0000 014B 
                 ; 0000 014C             // RTU_WriteOperate0(L,(unsigned int)120,(int)(1));
                 ; 0000 014D             // delay_ms(5);
                 ; 0000 014E         }
                 ; 0000 014F     }
                 _0x46:
0001eb cf9f      	RJMP _0x43
                 ; 0000 0150 }
                 _0x47:
0001ec cfff      	RJMP _0x47
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0001ed 931a      	ST   -Y,R17
0001ee 930a      	ST   -Y,R16
0001ef 81aa      	LDD  R26,Y+2
0001f0 81bb      	LDD  R27,Y+2+1
0001f1 9612      	ADIW R26,2
0001f2 940e 0b6c 	CALL __GETW1P
0001f4 9730      	SBIW R30,0
0001f5 f129      	BREQ _0x2000010
0001f6 81aa      	LDD  R26,Y+2
0001f7 81bb      	LDD  R27,Y+2+1
0001f8 9614      	ADIW R26,4
0001f9 940e 0b6c 	CALL __GETW1P
0001fb 018f      	MOVW R16,R30
0001fc 9730      	SBIW R30,0
0001fd f061      	BREQ _0x2000012
                +
0001fe 3002     +CPI R16 , LOW ( 2 )
0001ff e0e0     +LDI R30 , HIGH ( 2 )
000200 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000201 f0c0      	BRLO _0x2000013
000202 01f8      	MOVW R30,R16
000203 9731      	SBIW R30,1
000204 018f      	MOVW R16,R30
                +
000205 81aa     +LDD R26 , Y + 2
000206 81bb     +LDD R27 , Y + 2 + 1
000207 9614     +ADIW R26 , 4
000208 93ed     +ST X + , R30
000209 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00020a 81aa      	LDD  R26,Y+2
00020b 81bb      	LDD  R27,Y+2+1
00020c 9612      	ADIW R26,2
00020d 940e 0823 	CALL SUBOPT_0x5
00020f 9731      	SBIW R30,1
000210 81ac      	LDD  R26,Y+4
000211 83a0      	STD  Z+0,R26
000212 81aa      	LDD  R26,Y+2
000213 81bb      	LDD  R27,Y+2+1
000214 940e 0b6c 	CALL __GETW1P
000216 23ff      	TST  R31
000217 f012      	BRMI _0x2000014
000218 940e 0823 	CALL SUBOPT_0x5
                 _0x2000014:
                 _0x2000013:
00021a c006      	RJMP _0x2000015
                 _0x2000010:
00021b 81aa      	LDD  R26,Y+2
00021c 81bb      	LDD  R27,Y+2+1
00021d efef      	LDI  R30,LOW(65535)
00021e efff      	LDI  R31,HIGH(65535)
00021f 93ed      	ST   X+,R30
000220 93fc      	ST   X,R31
                 _0x2000015:
000221 8119      	LDD  R17,Y+1
000222 8108      	LDD  R16,Y+0
000223 c34d      	RJMP _0x20A0007
                 __ftoe_G100:
000224 9724      	SBIW R28,4
000225 e0e0      	LDI  R30,LOW(0)
000226 83e8      	ST   Y,R30
000227 83e9      	STD  Y+1,R30
000228 e8e0      	LDI  R30,LOW(128)
000229 83ea      	STD  Y+2,R30
00022a e3ef      	LDI  R30,LOW(63)
00022b 83eb      	STD  Y+3,R30
00022c 940e 0b98 	CALL __SAVELOCR4
00022e 85ee      	LDD  R30,Y+14
00022f 85ff      	LDD  R31,Y+14+1
000230 3fef      	CPI  R30,LOW(0xFFFF)
000231 efaf      	LDI  R26,HIGH(0xFFFF)
000232 07fa      	CPC  R31,R26
000233 f449      	BRNE _0x2000019
000234 85e8      	LDD  R30,Y+8
000235 85f9      	LDD  R31,Y+8+1
000236 93fa      	ST   -Y,R31
000237 93ea      	ST   -Y,R30
                +
000238 e1e8     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
000239 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00023a 940e 0829 	CALL SUBOPT_0x6
00023c c0b8      	RJMP _0x20A0009
                 _0x2000019:
00023d 3fef      	CPI  R30,LOW(0x7FFF)
00023e e7af      	LDI  R26,HIGH(0x7FFF)
00023f 07fa      	CPC  R31,R26
000240 f449      	BRNE _0x2000018
000241 85e8      	LDD  R30,Y+8
000242 85f9      	LDD  R31,Y+8+1
000243 93fa      	ST   -Y,R31
000244 93ea      	ST   -Y,R30
                +
000245 e1e9     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
000246 e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
000247 940e 0829 	CALL SUBOPT_0x6
000249 c0ab      	RJMP _0x20A0009
                 _0x2000018:
00024a 85ab      	LDD  R26,Y+11
00024b 30a7      	CPI  R26,LOW(0x7)
00024c f010      	BRLO _0x200001B
00024d e0e6      	LDI  R30,LOW(6)
00024e 87eb      	STD  Y+11,R30
                 _0x200001B:
00024f 851b      	LDD  R17,Y+11
                 _0x200001C:
000250 2fe1      	MOV  R30,R17
000251 5011      	SUBI R17,1
000252 30e0      	CPI  R30,0
000253 f019      	BREQ _0x200001E
000254 940e 082d 	CALL SUBOPT_0x7
000256 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000257 85ec     +LDD R30 , Y + 12
000258 85fd     +LDD R31 , Y + 12 + 1
000259 856e     +LDD R22 , Y + 12 + 2
00025a 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00025b 940e 0b92 	CALL __CPD10
00025d f421      	BRNE _0x200001F
00025e e030      	LDI  R19,LOW(0)
00025f 940e 082d 	CALL SUBOPT_0x7
000261 c02e      	RJMP _0x2000020
                 _0x200001F:
000262 853b      	LDD  R19,Y+11
000263 940e 083c 	CALL SUBOPT_0x8
000265 f009      	BREQ PC+2
000266 f410      	BRCC PC+3
000267 940c 0274 	JMP  _0x2000021
000269 940e 082d 	CALL SUBOPT_0x7
                 _0x2000022:
00026b 940e 083c 	CALL SUBOPT_0x8
00026d f028      	BRLO _0x2000024
00026e 940e 0847 	CALL SUBOPT_0x9
000270 940e 084c 	CALL SUBOPT_0xA
000272 cff8      	RJMP _0x2000022
                 _0x2000024:
000273 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000274 940e 083c 	CALL SUBOPT_0x8
000276 f440      	BRSH _0x2000028
000277 940e 0847 	CALL SUBOPT_0x9
000279 940e 0858 	CALL SUBOPT_0xB
00027b 940e 085f 	CALL SUBOPT_0xC
00027d 5031      	SUBI R19,LOW(1)
00027e cff5      	RJMP _0x2000026
                 _0x2000028:
00027f 940e 082d 	CALL SUBOPT_0x7
                 _0x2000025:
                +
000281 85ec     +LDD R30 , Y + 12
000282 85fd     +LDD R31 , Y + 12 + 1
000283 856e     +LDD R22 , Y + 12 + 2
000284 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000285 940e 0864 	CALL SUBOPT_0xD
000287 940e 085f 	CALL SUBOPT_0xC
000289 940e 083c 	CALL SUBOPT_0x8
00028b f020      	BRLO _0x2000029
00028c 940e 0847 	CALL SUBOPT_0x9
00028e 940e 084c 	CALL SUBOPT_0xA
                 _0x2000029:
                 _0x2000020:
000290 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000291 85eb      	LDD  R30,Y+11
000292 17e1      	CP   R30,R17
000293 f1a8      	BRLO _0x200002C
                +
000294 81ac     +LDD R26 , Y + 4
000295 81bd     +LDD R27 , Y + 4 + 1
000296 818e     +LDD R24 , Y + 4 + 2
000297 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000298 940e 086b 	CALL SUBOPT_0xE
00029a 940e 0864 	CALL SUBOPT_0xD
00029c 940e 0b80 	CALL __PUTPARD1
00029e 940e 0745 	CALL _floor
                +
0002a0 83ec     +STD Y + 4 , R30
0002a1 83fd     +STD Y + 4 + 1 , R31
0002a2 836e     +STD Y + 4 + 2 , R22
0002a3 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0002a4 940e 0847 	CALL SUBOPT_0x9
0002a6 940e 0a8f 	CALL __DIVF21
0002a8 940e 097e 	CALL __CFD1U
0002aa 2f0e      	MOV  R16,R30
0002ab 940e 0872 	CALL SUBOPT_0xF
0002ad 940e 0879 	CALL SUBOPT_0x10
0002af 27ff      	CLR  R31
0002b0 2766      	CLR  R22
0002b1 2777      	CLR  R23
0002b2 940e 09b7 	CALL __CDF1
                +
0002b4 81ac     +LDD R26 , Y + 4
0002b5 81bd     +LDD R27 , Y + 4 + 1
0002b6 818e     +LDD R24 , Y + 4 + 2
0002b7 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002b8 940e 0a41 	CALL __MULF12
0002ba 940e 0847 	CALL SUBOPT_0x9
0002bc 940e 087e 	CALL SUBOPT_0x11
0002be 940e 085f 	CALL SUBOPT_0xC
0002c0 2fe1      	MOV  R30,R17
0002c1 5f1f      	SUBI R17,-1
0002c2 30e0      	CPI  R30,0
0002c3 f669      	BRNE _0x200002A
0002c4 940e 0872 	CALL SUBOPT_0xF
0002c6 e2ee      	LDI  R30,LOW(46)
0002c7 93ec      	ST   X,R30
0002c8 cfc8      	RJMP _0x200002A
                 _0x200002C:
0002c9 940e 0883 	CALL SUBOPT_0x12
0002cb 9731      	SBIW R30,1
0002cc 85aa      	LDD  R26,Y+10
0002cd 83a0      	STD  Z+0,R26
0002ce 3030      	CPI  R19,0
0002cf f42c      	BRGE _0x200002E
0002d0 9531      	NEG  R19
0002d1 85a8      	LDD  R26,Y+8
0002d2 85b9      	LDD  R27,Y+8+1
0002d3 e2ed      	LDI  R30,LOW(45)
0002d4 c003      	RJMP _0x200010E
                 _0x200002E:
0002d5 85a8      	LDD  R26,Y+8
0002d6 85b9      	LDD  R27,Y+8+1
0002d7 e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
0002d8 93ec      	ST   X,R30
0002d9 940e 0883 	CALL SUBOPT_0x12
0002db 940e 0883 	CALL SUBOPT_0x12
0002dd 9731      	SBIW R30,1
0002de 01bf      	MOVW R22,R30
0002df 2fa3      	MOV  R26,R19
0002e0 e0ea      	LDI  R30,LOW(10)
0002e1 940e 0b26 	CALL __DIVB21
0002e3 5de0      	SUBI R30,-LOW(48)
0002e4 01db      	MOVW R26,R22
0002e5 93ec      	ST   X,R30
0002e6 940e 0883 	CALL SUBOPT_0x12
0002e8 9731      	SBIW R30,1
0002e9 01bf      	MOVW R22,R30
0002ea 2fa3      	MOV  R26,R19
0002eb e0ea      	LDI  R30,LOW(10)
0002ec 940e 0b50 	CALL __MODB21
0002ee 5de0      	SUBI R30,-LOW(48)
0002ef 01db      	MOVW R26,R22
0002f0 93ec      	ST   X,R30
0002f1 85a8      	LDD  R26,Y+8
0002f2 85b9      	LDD  R27,Y+8+1
0002f3 e0e0      	LDI  R30,LOW(0)
0002f4 93ec      	ST   X,R30
                 _0x20A0009:
0002f5 940e 0b9f 	CALL __LOADLOCR4
0002f7 9660      	ADIW R28,16
0002f8 9508      	RET
                 __print_G100:
0002f9 97ef      	SBIW R28,63
0002fa 9761      	SBIW R28,17
0002fb 940e 0b96 	CALL __SAVELOCR6
0002fd e010      	LDI  R17,0
                +
0002fe 01fe     +MOVW R30 , R28
0002ff 5ae8     +SUBI R30 , LOW ( - 88 )
000300 4fff     +SBCI R31 , HIGH ( - 88 )
000301 9001     +LD R0 , Z +
000302 81f0     +LD R31 , Z
000303 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000304 87e8      	STD  Y+8,R30
000305 87f9      	STD  Y+8+1,R31
                +
000306 01fe     +MOVW R30 , R28
000307 5aea     +SUBI R30 , LOW ( - 86 )
000308 4fff     +SBCI R31 , HIGH ( - 86 )
000309 9001     +LD R0 , Z +
00030a 81f0     +LD R31 , Z
00030b 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00030c 83ee      	STD  Y+6,R30
00030d 83ff      	STD  Y+6+1,R31
00030e 81ae      	LDD  R26,Y+6
00030f 81bf      	LDD  R27,Y+6+1
000310 e0e0      	LDI  R30,LOW(0)
000311 e0f0      	LDI  R31,HIGH(0)
000312 93ed      	ST   X+,R30
000313 93fc      	ST   X,R31
                 _0x2000030:
000314 01de      	MOVW R26,R28
000315 5aa4      	SUBI R26,LOW(-(92))
000316 4fbf      	SBCI R27,HIGH(-(92))
000317 940e 0823 	CALL SUBOPT_0x5
000319 9731      	SBIW R30,1
00031a 91e4      	LPM  R30,Z
00031b 2f2e      	MOV  R18,R30
00031c 30e0      	CPI  R30,0
00031d f411      	BRNE PC+3
00031e 940c 050e 	JMP _0x2000032
000320 2fe1      	MOV  R30,R17
000321 30e0      	CPI  R30,0
000322 f439      	BRNE _0x2000036
000323 3225      	CPI  R18,37
000324 f411      	BRNE _0x2000037
000325 e011      	LDI  R17,LOW(1)
000326 c002      	RJMP _0x2000038
                 _0x2000037:
000327 940e 0889 	CALL SUBOPT_0x13
                 _0x2000038:
000329 c1e3      	RJMP _0x2000035
                 _0x2000036:
00032a 30e1      	CPI  R30,LOW(0x1)
00032b f4c1      	BRNE _0x2000039
00032c 3225      	CPI  R18,37
00032d f419      	BRNE _0x200003A
00032e 940e 0889 	CALL SUBOPT_0x13
000330 c1db      	RJMP _0x200010F
                 _0x200003A:
000331 e012      	LDI  R17,LOW(2)
000332 e0e0      	LDI  R30,LOW(0)
000333 8bed      	STD  Y+21,R30
000334 e000      	LDI  R16,LOW(0)
000335 322d      	CPI  R18,45
000336 f411      	BRNE _0x200003B
000337 e001      	LDI  R16,LOW(1)
000338 c1d4      	RJMP _0x2000035
                 _0x200003B:
000339 322b      	CPI  R18,43
00033a f419      	BRNE _0x200003C
00033b e2eb      	LDI  R30,LOW(43)
00033c 8bed      	STD  Y+21,R30
00033d c1cf      	RJMP _0x2000035
                 _0x200003C:
00033e 3220      	CPI  R18,32
00033f f419      	BRNE _0x200003D
000340 e2e0      	LDI  R30,LOW(32)
000341 8bed      	STD  Y+21,R30
000342 c1ca      	RJMP _0x2000035
                 _0x200003D:
000343 c002      	RJMP _0x200003E
                 _0x2000039:
000344 30e2      	CPI  R30,LOW(0x2)
000345 f439      	BRNE _0x200003F
                 _0x200003E:
000346 e050      	LDI  R21,LOW(0)
000347 e013      	LDI  R17,LOW(3)
000348 3320      	CPI  R18,48
000349 f411      	BRNE _0x2000040
00034a 6800      	ORI  R16,LOW(128)
00034b c1c1      	RJMP _0x2000035
                 _0x2000040:
00034c c002      	RJMP _0x2000041
                 _0x200003F:
00034d 30e3      	CPI  R30,LOW(0x3)
00034e f491      	BRNE _0x2000042
                 _0x2000041:
00034f 3320      	CPI  R18,48
000350 f010      	BRLO _0x2000044
000351 332a      	CPI  R18,58
000352 f008      	BRLO _0x2000045
                 _0x2000044:
000353 c007      	RJMP _0x2000043
                 _0x2000045:
000354 e0aa      	LDI  R26,LOW(10)
000355 9f5a      	MUL  R21,R26
000356 2d50      	MOV  R21,R0
000357 2fe2      	MOV  R30,R18
000358 53e0      	SUBI R30,LOW(48)
000359 0f5e      	ADD  R21,R30
00035a c1b2      	RJMP _0x2000035
                 _0x2000043:
00035b e040      	LDI  R20,LOW(0)
00035c 322e      	CPI  R18,46
00035d f411      	BRNE _0x2000046
00035e e014      	LDI  R17,LOW(4)
00035f c1ad      	RJMP _0x2000035
                 _0x2000046:
000360 c00f      	RJMP _0x2000047
                 _0x2000042:
000361 30e4      	CPI  R30,LOW(0x4)
000362 f499      	BRNE _0x2000049
000363 3320      	CPI  R18,48
000364 f010      	BRLO _0x200004B
000365 332a      	CPI  R18,58
000366 f008      	BRLO _0x200004C
                 _0x200004B:
000367 c008      	RJMP _0x200004A
                 _0x200004C:
000368 6200      	ORI  R16,LOW(32)
000369 e0aa      	LDI  R26,LOW(10)
00036a 9f4a      	MUL  R20,R26
00036b 2d40      	MOV  R20,R0
00036c 2fe2      	MOV  R30,R18
00036d 53e0      	SUBI R30,LOW(48)
00036e 0f4e      	ADD  R20,R30
00036f c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000370 362c      	CPI  R18,108
000371 f419      	BRNE _0x200004D
000372 6002      	ORI  R16,LOW(2)
000373 e015      	LDI  R17,LOW(5)
000374 c198      	RJMP _0x2000035
                 _0x200004D:
000375 c004      	RJMP _0x200004E
                 _0x2000049:
000376 30e5      	CPI  R30,LOW(0x5)
000377 f011      	BREQ PC+3
000378 940c 050d 	JMP _0x2000035
                 _0x200004E:
00037a 2fe2      	MOV  R30,R18
00037b 36e3      	CPI  R30,LOW(0x63)
00037c f459      	BRNE _0x2000053
00037d 940e 0892 	CALL SUBOPT_0x14
00037f 940e 0899 	CALL SUBOPT_0x15
000381 940e 0892 	CALL SUBOPT_0x14
000383 81a4      	LDD  R26,Z+4
000384 93aa      	ST   -Y,R26
000385 940e 08a0 	CALL SUBOPT_0x16
000387 c184      	RJMP _0x2000054
                 _0x2000053:
000388 34e5      	CPI  R30,LOW(0x45)
000389 f011      	BREQ _0x2000057
00038a 36e5      	CPI  R30,LOW(0x65)
00038b f409      	BRNE _0x2000058
                 _0x2000057:
00038c c004      	RJMP _0x2000059
                 _0x2000058:
00038d 36e6      	CPI  R30,LOW(0x66)
00038e f011      	BREQ PC+3
00038f 940c 03db 	JMP _0x200005A
                 _0x2000059:
000391 01fe      	MOVW R30,R28
000392 9676      	ADIW R30,22
000393 87ee      	STD  Y+14,R30
000394 87ff      	STD  Y+14+1,R31
000395 940e 08a8 	CALL SUBOPT_0x17
000397 940e 0b70 	CALL __GETD1P
000399 940e 08af 	CALL SUBOPT_0x18
00039b 940e 08b4 	CALL SUBOPT_0x19
00039d 85ad      	LDD  R26,Y+13
00039e 23aa      	TST  R26
00039f f022      	BRMI _0x200005B
0003a0 89ad      	LDD  R26,Y+21
0003a1 32ab      	CPI  R26,LOW(0x2B)
0003a2 f049      	BREQ _0x200005D
0003a3 c017      	RJMP _0x200005E
                 _0x200005B:
0003a4 940e 08b6 	CALL SUBOPT_0x1A
0003a6 940e 094b 	CALL __ANEGF1
0003a8 940e 08af 	CALL SUBOPT_0x18
0003aa e2ed      	LDI  R30,LOW(45)
0003ab 8bed      	STD  Y+21,R30
                 _0x200005D:
0003ac ff07      	SBRS R16,7
0003ad c005      	RJMP _0x200005F
0003ae 89ed      	LDD  R30,Y+21
0003af 93ea      	ST   -Y,R30
0003b0 940e 08a0 	CALL SUBOPT_0x16
0003b2 c008      	RJMP _0x2000060
                 _0x200005F:
0003b3 85ee      	LDD  R30,Y+14
0003b4 85ff      	LDD  R31,Y+14+1
0003b5 9631      	ADIW R30,1
0003b6 87ee      	STD  Y+14,R30
0003b7 87ff      	STD  Y+14+1,R31
0003b8 9731      	SBIW R30,1
0003b9 89ad      	LDD  R26,Y+21
0003ba 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0003bb ff05      	SBRS R16,5
0003bc e046      	LDI  R20,LOW(6)
0003bd 3626      	CPI  R18,102
0003be f461      	BRNE _0x2000062
0003bf 940e 08b6 	CALL SUBOPT_0x1A
0003c1 940e 0b80 	CALL __PUTPARD1
0003c3 934a      	ST   -Y,R20
0003c4 89eb      	LDD  R30,Y+19
0003c5 89fc      	LDD  R31,Y+19+1
0003c6 93fa      	ST   -Y,R31
0003c7 93ea      	ST   -Y,R30
0003c8 940e 075c 	CALL _ftoa
0003ca c00b      	RJMP _0x2000063
                 _0x2000062:
0003cb 940e 08b6 	CALL SUBOPT_0x1A
0003cd 940e 0b80 	CALL __PUTPARD1
0003cf 934a      	ST   -Y,R20
0003d0 932a      	ST   -Y,R18
0003d1 89ec      	LDD  R30,Y+20
0003d2 89fd      	LDD  R31,Y+20+1
0003d3 93fa      	ST   -Y,R31
0003d4 93ea      	ST   -Y,R30
0003d5 de4e      	RCALL __ftoe_G100
                 _0x2000063:
0003d6 01fe      	MOVW R30,R28
0003d7 9676      	ADIW R30,22
0003d8 940e 08bb 	CALL SUBOPT_0x1B
0003da c01e      	RJMP _0x2000064
                 _0x200005A:
0003db 37e3      	CPI  R30,LOW(0x73)
0003dc f439      	BRNE _0x2000066
0003dd 940e 08b4 	CALL SUBOPT_0x19
0003df 940e 08c3 	CALL SUBOPT_0x1C
0003e1 940e 08bb 	CALL SUBOPT_0x1B
0003e3 c00e      	RJMP _0x2000067
                 _0x2000066:
0003e4 37e0      	CPI  R30,LOW(0x70)
0003e5 f4c1      	BRNE _0x2000069
0003e6 940e 08b4 	CALL SUBOPT_0x19
0003e8 940e 08c3 	CALL SUBOPT_0x1C
0003ea 87ee      	STD  Y+14,R30
0003eb 87ff      	STD  Y+14+1,R31
0003ec 93fa      	ST   -Y,R31
0003ed 93ea      	ST   -Y,R30
0003ee 940e 070b 	CALL _strlenf
0003f0 2f1e      	MOV  R17,R30
0003f1 6008      	ORI  R16,LOW(8)
                 _0x2000067:
0003f2 770f      	ANDI R16,LOW(127)
0003f3 3040      	CPI  R20,0
0003f4 f011      	BREQ _0x200006B
0003f5 1741      	CP   R20,R17
0003f6 f008      	BRLO _0x200006C
                 _0x200006B:
0003f7 c001      	RJMP _0x200006A
                 _0x200006C:
0003f8 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
0003f9 e040      	LDI  R20,LOW(0)
0003fa e0e0      	LDI  R30,LOW(0)
0003fb 8bec      	STD  Y+20,R30
0003fc e030      	LDI  R19,LOW(0)
0003fd c06e      	RJMP _0x200006D
                 _0x2000069:
0003fe 36e4      	CPI  R30,LOW(0x64)
0003ff f011      	BREQ _0x2000070
000400 36e9      	CPI  R30,LOW(0x69)
000401 f411      	BRNE _0x2000071
                 _0x2000070:
000402 6004      	ORI  R16,LOW(4)
000403 c002      	RJMP _0x2000072
                 _0x2000071:
000404 37e5      	CPI  R30,LOW(0x75)
000405 f4a1      	BRNE _0x2000073
                 _0x2000072:
000406 e0ea      	LDI  R30,LOW(10)
000407 8bec      	STD  Y+20,R30
000408 ff01      	SBRS R16,1
000409 c008      	RJMP _0x2000074
                +
00040a e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00040b ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00040c e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00040d e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00040e 940e 08c8 	CALL SUBOPT_0x1D
000410 e01a      	LDI  R17,LOW(10)
000411 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000412 e1e0     +LDI R30 , LOW ( 0x2710 )
000413 e2f7     +LDI R31 , HIGH ( 0x2710 )
000414 e060     +LDI R22 , BYTE3 ( 0x2710 )
000415 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000416 940e 08c8 	CALL SUBOPT_0x1D
000418 e015      	LDI  R17,LOW(5)
000419 c01b      	RJMP _0x2000075
                 _0x2000073:
00041a 35e8      	CPI  R30,LOW(0x58)
00041b f411      	BRNE _0x2000077
00041c 6008      	ORI  R16,LOW(8)
00041d c004      	RJMP _0x2000078
                 _0x2000077:
00041e 37e8      	CPI  R30,LOW(0x78)
00041f f011      	BREQ PC+3
000420 940c 050c 	JMP _0x20000B6
                 _0x2000078:
000422 e1e0      	LDI  R30,LOW(16)
000423 8bec      	STD  Y+20,R30
000424 ff01      	SBRS R16,1
000425 c008      	RJMP _0x200007A
                +
000426 e0e0     +LDI R30 , LOW ( 0x10000000 )
000427 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000428 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000429 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00042a 940e 08c8 	CALL SUBOPT_0x1D
00042c e018      	LDI  R17,LOW(8)
00042d c007      	RJMP _0x2000075
                 _0x200007A:
                +
00042e e0e0     +LDI R30 , LOW ( 0x1000 )
00042f e1f0     +LDI R31 , HIGH ( 0x1000 )
000430 e060     +LDI R22 , BYTE3 ( 0x1000 )
000431 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000432 940e 08c8 	CALL SUBOPT_0x1D
000434 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000435 3040      	CPI  R20,0
000436 f011      	BREQ _0x200007B
000437 770f      	ANDI R16,LOW(127)
000438 c001      	RJMP _0x200007C
                 _0x200007B:
000439 e041      	LDI  R20,LOW(1)
                 _0x200007C:
00043a ff01      	SBRS R16,1
00043b c008      	RJMP _0x200007D
00043c 940e 08b4 	CALL SUBOPT_0x19
00043e 940e 08a8 	CALL SUBOPT_0x17
000440 9614      	ADIW R26,4
000441 940e 0b70 	CALL __GETD1P
000443 c00f      	RJMP _0x2000110
                 _0x200007D:
000444 ff02      	SBRS R16,2
000445 c007      	RJMP _0x200007F
000446 940e 08b4 	CALL SUBOPT_0x19
000448 940e 08c3 	CALL SUBOPT_0x1C
00044a 940e 0b0b 	CALL __CWD1
00044c c006      	RJMP _0x2000110
                 _0x200007F:
00044d 940e 08b4 	CALL SUBOPT_0x19
00044f 940e 08c3 	CALL SUBOPT_0x1C
000451 2766      	CLR  R22
000452 2777      	CLR  R23
                 _0x2000110:
                +
000453 87ea     +STD Y + 10 , R30
000454 87fb     +STD Y + 10 + 1 , R31
000455 876c     +STD Y + 10 + 2 , R22
000456 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000457 ff02      	SBRS R16,2
000458 c012      	RJMP _0x2000081
000459 85ad      	LDD  R26,Y+13
00045a 23aa      	TST  R26
00045b f442      	BRPL _0x2000082
00045c 940e 08b6 	CALL SUBOPT_0x1A
00045e 940e 0af8 	CALL __ANEGD1
000460 940e 08af 	CALL SUBOPT_0x18
000462 e2ed      	LDI  R30,LOW(45)
000463 8bed      	STD  Y+21,R30
                 _0x2000082:
000464 89ed      	LDD  R30,Y+21
000465 30e0      	CPI  R30,0
000466 f019      	BREQ _0x2000083
000467 5f1f      	SUBI R17,-LOW(1)
000468 5f4f      	SUBI R20,-LOW(1)
000469 c001      	RJMP _0x2000084
                 _0x2000083:
00046a 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
00046b 2f34      	MOV  R19,R20
                 _0x200006D:
00046c fd00      	SBRC R16,0
00046d c014      	RJMP _0x2000085
                 _0x2000086:
00046e 1715      	CP   R17,R21
00046f f410      	BRSH _0x2000089
000470 1735      	CP   R19,R21
000471 f008      	BRLO _0x200008A
                 _0x2000089:
000472 c00f      	RJMP _0x2000088
                 _0x200008A:
000473 ff07      	SBRS R16,7
000474 c008      	RJMP _0x200008B
000475 ff02      	SBRS R16,2
000476 c004      	RJMP _0x200008C
000477 7f0b      	ANDI R16,LOW(251)
000478 892d      	LDD  R18,Y+21
000479 5011      	SUBI R17,LOW(1)
00047a c001      	RJMP _0x200008D
                 _0x200008C:
00047b e320      	LDI  R18,LOW(48)
                 _0x200008D:
00047c c001      	RJMP _0x200008E
                 _0x200008B:
00047d e220      	LDI  R18,LOW(32)
                 _0x200008E:
00047e 940e 0889 	CALL SUBOPT_0x13
000480 5051      	SUBI R21,LOW(1)
000481 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000482 1714      	CP   R17,R20
000483 f490      	BRSH _0x2000091
000484 6100      	ORI  R16,LOW(16)
000485 ff02      	SBRS R16,2
000486 c006      	RJMP _0x2000092
000487 940e 08cd 	CALL SUBOPT_0x1E
000489 f009      	BREQ _0x2000093
00048a 5051      	SUBI R21,LOW(1)
                 _0x2000093:
00048b 5011      	SUBI R17,LOW(1)
00048c 5041      	SUBI R20,LOW(1)
                 _0x2000092:
00048d e3e0      	LDI  R30,LOW(48)
00048e 93ea      	ST   -Y,R30
00048f 940e 08a0 	CALL SUBOPT_0x16
000491 3050      	CPI  R21,0
000492 f009      	BREQ _0x2000094
000493 5051      	SUBI R21,LOW(1)
                 _0x2000094:
000494 5041      	SUBI R20,LOW(1)
000495 cfec      	RJMP _0x200008F
                 _0x2000091:
000496 2f31      	MOV  R19,R17
000497 89ec      	LDD  R30,Y+20
000498 30e0      	CPI  R30,0
000499 f4b9      	BRNE _0x2000095
                 _0x2000096:
00049a 3030      	CPI  R19,0
00049b f0a1      	BREQ _0x2000098
00049c ff03      	SBRS R16,3
00049d c006      	RJMP _0x2000099
00049e 85ee      	LDD  R30,Y+14
00049f 85ff      	LDD  R31,Y+14+1
0004a0 9125      	LPM  R18,Z+
0004a1 87ee      	STD  Y+14,R30
0004a2 87ff      	STD  Y+14+1,R31
0004a3 c005      	RJMP _0x200009A
                 _0x2000099:
0004a4 85ae      	LDD  R26,Y+14
0004a5 85bf      	LDD  R27,Y+14+1
0004a6 912d      	LD   R18,X+
0004a7 87ae      	STD  Y+14,R26
0004a8 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0004a9 940e 0889 	CALL SUBOPT_0x13
0004ab 3050      	CPI  R21,0
0004ac f009      	BREQ _0x200009B
0004ad 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0004ae 5031      	SUBI R19,LOW(1)
0004af cfea      	RJMP _0x2000096
                 _0x2000098:
0004b0 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0004b1 940e 08e1 	CALL SUBOPT_0x1F
0004b3 940e 0b2b 	CALL __DIVD21U
0004b5 2f2e      	MOV  R18,R30
0004b6 302a      	CPI  R18,10
0004b7 f030      	BRLO _0x20000A0
0004b8 ff03      	SBRS R16,3
0004b9 c002      	RJMP _0x20000A1
0004ba 5c29      	SUBI R18,-LOW(55)
0004bb c001      	RJMP _0x20000A2
                 _0x20000A1:
0004bc 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0004bd c001      	RJMP _0x20000A3
                 _0x20000A0:
0004be 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0004bf fd04      	SBRC R16,4
0004c0 c021      	RJMP _0x20000A5
0004c1 3321      	CPI  R18,49
0004c2 f460      	BRSH _0x20000A7
                +
0004c3 89a8     +LDD R26 , Y + 16
0004c4 89b9     +LDD R27 , Y + 16 + 1
0004c5 898a     +LDD R24 , Y + 16 + 2
0004c6 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0004c7 30a1     +CPI R26 , LOW ( 0x1 )
0004c8 e0e0     +LDI R30 , HIGH ( 0x1 )
0004c9 07be     +CPC R27 , R30
0004ca e0e0     +LDI R30 , BYTE3 ( 0x1 )
0004cb 078e     +CPC R24 , R30
0004cc e0e0     +LDI R30 , BYTE4 ( 0x1 )
0004cd 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0004ce f409      	BRNE _0x20000A6
                 _0x20000A7:
0004cf c00b      	RJMP _0x20000A9
                 _0x20000A6:
0004d0 1743      	CP   R20,R19
0004d1 f440      	BRSH _0x2000111
0004d2 1753      	CP   R21,R19
0004d3 f010      	BRLO _0x20000AC
0004d4 ff00      	SBRS R16,0
0004d5 c001      	RJMP _0x20000AD
                 _0x20000AC:
0004d6 c010      	RJMP _0x20000AB
                 _0x20000AD:
0004d7 e220      	LDI  R18,LOW(32)
0004d8 ff07      	SBRS R16,7
0004d9 c008      	RJMP _0x20000AE
                 _0x2000111:
0004da e320      	LDI  R18,LOW(48)
                 _0x20000A9:
0004db 6100      	ORI  R16,LOW(16)
0004dc ff02      	SBRS R16,2
0004dd c004      	RJMP _0x20000AF
0004de 940e 08cd 	CALL SUBOPT_0x1E
0004e0 f009      	BREQ _0x20000B0
0004e1 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
0004e2 940e 0889 	CALL SUBOPT_0x13
0004e4 3050      	CPI  R21,0
0004e5 f009      	BREQ _0x20000B1
0004e6 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
0004e7 5031      	SUBI R19,LOW(1)
0004e8 940e 08e1 	CALL SUBOPT_0x1F
0004ea 940e 0b5c 	CALL __MODD21U
0004ec 940e 08af 	CALL SUBOPT_0x18
0004ee 89ec      	LDD  R30,Y+20
                +
0004ef 89a8     +LDD R26 , Y + 16
0004f0 89b9     +LDD R27 , Y + 16 + 1
0004f1 898a     +LDD R24 , Y + 16 + 2
0004f2 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0004f3 27ff      	CLR  R31
0004f4 2766      	CLR  R22
0004f5 2777      	CLR  R23
0004f6 940e 0b2b 	CALL __DIVD21U
0004f8 940e 08c8 	CALL SUBOPT_0x1D
                +
0004fa 89e8     +LDD R30 , Y + 16
0004fb 89f9     +LDD R31 , Y + 16 + 1
0004fc 896a     +LDD R22 , Y + 16 + 2
0004fd 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0004fe 940e 0b92 	CALL __CPD10
000500 f009      	BREQ _0x200009F
000501 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000502 ff00      	SBRS R16,0
000503 c008      	RJMP _0x20000B2
                 _0x20000B3:
000504 3050      	CPI  R21,0
000505 f031      	BREQ _0x20000B5
000506 5051      	SUBI R21,LOW(1)
000507 e2e0      	LDI  R30,LOW(32)
000508 93ea      	ST   -Y,R30
000509 940e 08a0 	CALL SUBOPT_0x16
00050b cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
00050c e010      	LDI  R17,LOW(0)
                 _0x2000035:
00050d ce06      	RJMP _0x2000030
                 _0x2000032:
00050e 81ae      	LDD  R26,Y+6
00050f 81bf      	LDD  R27,Y+6+1
000510 940e 0b6c 	CALL __GETW1P
000512 940e 0b9d 	CALL __LOADLOCR6
000514 96ef      	ADIW R28,63
000515 966f      	ADIW R28,31
000516 9508      	RET
                 _sprintf:
000517 92ff      	PUSH R15
000518 2ef8      	MOV  R15,R24
000519 9726      	SBIW R28,6
00051a 940e 0b98 	CALL __SAVELOCR4
00051c 940e 08ea 	CALL SUBOPT_0x20
00051e 9730      	SBIW R30,0
00051f f419      	BRNE _0x20000B7
000520 efef      	LDI  R30,LOW(65535)
000521 efff      	LDI  R31,HIGH(65535)
000522 c023      	RJMP _0x20A0008
                 _0x20000B7:
000523 01de      	MOVW R26,R28
000524 9616      	ADIW R26,6
000525 940e 0af4 	CALL __ADDW2R15
000527 018d      	MOVW R16,R26
000528 940e 08ea 	CALL SUBOPT_0x20
00052a 83ee      	STD  Y+6,R30
00052b 83ff      	STD  Y+6+1,R31
00052c e0e0      	LDI  R30,LOW(0)
00052d 87e8      	STD  Y+8,R30
00052e 87e9      	STD  Y+8+1,R30
00052f 01de      	MOVW R26,R28
000530 961a      	ADIW R26,10
000531 940e 08f1 	CALL SUBOPT_0x21
000533 93fa      	ST   -Y,R31
000534 93ea      	ST   -Y,R30
000535 931a      	ST   -Y,R17
000536 930a      	ST   -Y,R16
000537 eeed      	LDI  R30,LOW(_put_buff_G100)
000538 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000539 93fa      	ST   -Y,R31
00053a 93ea      	ST   -Y,R30
00053b 01fe      	MOVW R30,R28
00053c 963a      	ADIW R30,10
00053d 93fa      	ST   -Y,R31
00053e 93ea      	ST   -Y,R30
00053f ddb9      	RCALL __print_G100
000540 019f      	MOVW R18,R30
000541 81ae      	LDD  R26,Y+6
000542 81bf      	LDD  R27,Y+6+1
000543 e0e0      	LDI  R30,LOW(0)
000544 93ec      	ST   X,R30
000545 01f9      	MOVW R30,R18
                 _0x20A0008:
000546 940e 0b9f 	CALL __LOADLOCR4
000548 962a      	ADIW R28,10
000549 90ff      	POP  R15
00054a 9508      	RET
                 _get_buff_G100:
00054b 931a      	ST   -Y,R17
00054c 81a9      	LDD  R26,Y+1
00054d 81ba      	LDD  R27,Y+1+1
00054e e0e0      	LDI  R30,LOW(0)
00054f 93ec      	ST   X,R30
000550 81ab      	LDD  R26,Y+3
000551 81bc      	LDD  R27,Y+3+1
000552 91ec      	LD   R30,X
000553 2f1e      	MOV  R17,R30
000554 30e0      	CPI  R30,0
000555 f019      	BREQ _0x20000BF
000556 e0e0      	LDI  R30,LOW(0)
000557 93ec      	ST   X,R30
000558 c016      	RJMP _0x20000C0
                 _0x20000BF:
000559 81a9      	LDD  R26,Y+1
00055a 81ba      	LDD  R27,Y+1+1
00055b 9611      	ADIW R26,1
00055c 940e 0b6c 	CALL __GETW1P
00055e 9730      	SBIW R30,0
00055f f071      	BREQ _0x20000C1
000560 81e9      	LDD  R30,Y+1
000561 81fa      	LDD  R31,Y+1+1
000562 81a1      	LDD  R26,Z+1
000563 81b2      	LDD  R27,Z+2
000564 91ec      	LD   R30,X
000565 2f1e      	MOV  R17,R30
000566 30e0      	CPI  R30,0
000567 f029      	BREQ _0x20000C2
000568 81a9      	LDD  R26,Y+1
000569 81ba      	LDD  R27,Y+1+1
00056a 9611      	ADIW R26,1
00056b 940e 0823 	CALL SUBOPT_0x5
                 _0x20000C2:
00056d c001      	RJMP _0x20000C3
                 _0x20000C1:
00056e e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
00056f 2fe1      	MOV  R30,R17
000570 8118      	LDD  R17,Y+0
                 _0x20A0007:
000571 9625      	ADIW R28,5
000572 9508      	RET
                 __scanf_G100:
000573 9725      	SBIW R28,5
000574 940e 0b96 	CALL __SAVELOCR6
000576 e0e0      	LDI  R30,LOW(0)
000577 e0f0      	LDI  R31,HIGH(0)
000578 87e8      	STD  Y+8,R30
000579 87f9      	STD  Y+8+1,R31
00057a 2f4e      	MOV  R20,R30
                 _0x20000C4:
00057b 89e9      	LDD  R30,Y+17
00057c 89fa      	LDD  R31,Y+17+1
00057d 9631      	ADIW R30,1
00057e 8be9      	STD  Y+17,R30
00057f 8bfa      	STD  Y+17+1,R31
000580 9731      	SBIW R30,1
000581 91e4      	LPM  R30,Z
000582 2f3e      	MOV  R19,R30
000583 30e0      	CPI  R30,0
000584 f411      	BRNE PC+3
000585 940c 06a1 	JMP _0x20000C6
000587 940e 08f6 	CALL SUBOPT_0x22
000589 f0c1      	BREQ _0x20000C7
                 _0x20000C8:
00058a b7ed      	IN   R30,SPL
00058b b7fe      	IN   R31,SPH
00058c 93fa      	ST   -Y,R31
00058d 93ea      	ST   -Y,R30
00058e 934f      	PUSH R20
00058f 940e 08fb 	CALL SUBOPT_0x23
000591 914f      	POP  R20
000592 2f3e      	MOV  R19,R30
000593 30e0      	CPI  R30,0
000594 f019      	BREQ _0x20000CB
000595 940e 08f6 	CALL SUBOPT_0x22
000597 f409      	BRNE _0x20000CC
                 _0x20000CB:
000598 c007      	RJMP _0x20000CA
                 _0x20000CC:
000599 940e 0903 	CALL SUBOPT_0x24
00059b f41c      	BRGE _0x20000CD
00059c efef      	LDI  R30,LOW(65535)
00059d efff      	LDI  R31,HIGH(65535)
00059e c104      	RJMP _0x20A0005
                 _0x20000CD:
00059f cfea      	RJMP _0x20000C8
                 _0x20000CA:
0005a0 2f43      	MOV  R20,R19
0005a1 c0fe      	RJMP _0x20000CE
                 _0x20000C7:
0005a2 3235      	CPI  R19,37
0005a3 f011      	BREQ PC+3
0005a4 940c 0688 	JMP _0x20000CF
0005a6 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0005a7 89e9      	LDD  R30,Y+17
0005a8 89fa      	LDD  R31,Y+17+1
0005a9 9135      	LPM  R19,Z+
0005aa 8be9      	STD  Y+17,R30
0005ab 8bfa      	STD  Y+17+1,R31
0005ac 3330      	CPI  R19,48
0005ad f010      	BRLO _0x20000D4
0005ae 333a      	CPI  R19,58
0005af f008      	BRLO _0x20000D3
                 _0x20000D4:
0005b0 c007      	RJMP _0x20000D2
                 _0x20000D3:
0005b1 e0aa      	LDI  R26,LOW(10)
0005b2 9f5a      	MUL  R21,R26
0005b3 2d50      	MOV  R21,R0
0005b4 2fe3      	MOV  R30,R19
0005b5 53e0      	SUBI R30,LOW(48)
0005b6 0f5e      	ADD  R21,R30
0005b7 cfef      	RJMP _0x20000D0
                 _0x20000D2:
0005b8 3030      	CPI  R19,0
0005b9 f409      	BRNE _0x20000D6
0005ba c0e6      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0005bb b7ed      	IN   R30,SPL
0005bc b7fe      	IN   R31,SPH
0005bd 93fa      	ST   -Y,R31
0005be 93ea      	ST   -Y,R30
0005bf 934f      	PUSH R20
0005c0 940e 08fb 	CALL SUBOPT_0x23
0005c2 914f      	POP  R20
0005c3 2f2e      	MOV  R18,R30
0005c4 93ea      	ST   -Y,R30
0005c5 940e 06de 	CALL _isspace
0005c7 30e0      	CPI  R30,0
0005c8 f039      	BREQ _0x20000D9
0005c9 940e 0903 	CALL SUBOPT_0x24
0005cb f41c      	BRGE _0x20000DA
0005cc efef      	LDI  R30,LOW(65535)
0005cd efff      	LDI  R31,HIGH(65535)
0005ce c0d4      	RJMP _0x20A0005
                 _0x20000DA:
0005cf cfeb      	RJMP _0x20000D7
                 _0x20000D9:
0005d0 3020      	CPI  R18,0
0005d1 f409      	BRNE _0x20000DB
0005d2 c0c5      	RJMP _0x20000DC
                 _0x20000DB:
0005d3 2f42      	MOV  R20,R18
0005d4 3050      	CPI  R21,0
0005d5 f409      	BRNE _0x20000DD
0005d6 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
0005d7 2fe3      	MOV  R30,R19
0005d8 36e3      	CPI  R30,LOW(0x63)
0005d9 f499      	BRNE _0x20000E1
0005da 940e 0908 	CALL SUBOPT_0x25
0005dc b7ed      	IN   R30,SPL
0005dd b7fe      	IN   R31,SPH
0005de 93fa      	ST   -Y,R31
0005df 93ea      	ST   -Y,R30
0005e0 934f      	PUSH R20
0005e1 940e 08fb 	CALL SUBOPT_0x23
0005e3 914f      	POP  R20
0005e4 01d8      	MOVW R26,R16
0005e5 93ec      	ST   X,R30
0005e6 940e 0903 	CALL SUBOPT_0x24
0005e8 f41c      	BRGE _0x20000E2
0005e9 efef      	LDI  R30,LOW(65535)
0005ea efff      	LDI  R31,HIGH(65535)
0005eb c0b7      	RJMP _0x20A0005
                 _0x20000E2:
0005ec c098      	RJMP _0x20000E0
                 _0x20000E1:
0005ed 37e3      	CPI  R30,LOW(0x73)
0005ee f541      	BRNE _0x20000EB
0005ef 940e 0908 	CALL SUBOPT_0x25
                 _0x20000E4:
0005f1 2fe5      	MOV  R30,R21
0005f2 5051      	SUBI R21,1
0005f3 30e0      	CPI  R30,0
0005f4 f0f1      	BREQ _0x20000E6
0005f5 b7ed      	IN   R30,SPL
0005f6 b7fe      	IN   R31,SPH
0005f7 93fa      	ST   -Y,R31
0005f8 93ea      	ST   -Y,R30
0005f9 934f      	PUSH R20
0005fa 940e 08fb 	CALL SUBOPT_0x23
0005fc 914f      	POP  R20
0005fd 2f3e      	MOV  R19,R30
0005fe 30e0      	CPI  R30,0
0005ff f019      	BREQ _0x20000E8
000600 940e 08f6 	CALL SUBOPT_0x22
000602 f039      	BREQ _0x20000E7
                 _0x20000E8:
000603 940e 0903 	CALL SUBOPT_0x24
000605 f41c      	BRGE _0x20000EA
000606 efef      	LDI  R30,LOW(65535)
000607 efff      	LDI  R31,HIGH(65535)
000608 c09a      	RJMP _0x20A0005
                 _0x20000EA:
000609 c009      	RJMP _0x20000E6
                 _0x20000E7:
00060a 931f      	PUSH R17
00060b 930f      	PUSH R16
                +
00060c 5f0f     +SUBI R16 , LOW ( - 1 )
00060d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00060e 2fe3      	MOV  R30,R19
00060f 91af      	POP  R26
000610 91bf      	POP  R27
000611 93ec      	ST   X,R30
000612 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000613 01d8      	MOVW R26,R16
000614 e0e0      	LDI  R30,LOW(0)
000615 93ec      	ST   X,R30
000616 c06e      	RJMP _0x20000E0
                 _0x20000EB:
000617 e0e1      	LDI  R30,LOW(1)
000618 87ea      	STD  Y+10,R30
000619 2fe3      	MOV  R30,R19
00061a 36e4      	CPI  R30,LOW(0x64)
00061b f011      	BREQ _0x20000F0
00061c 36e9      	CPI  R30,LOW(0x69)
00061d f419      	BRNE _0x20000F1
                 _0x20000F0:
00061e e0e0      	LDI  R30,LOW(0)
00061f 87ea      	STD  Y+10,R30
000620 c002      	RJMP _0x20000F2
                 _0x20000F1:
000621 37e5      	CPI  R30,LOW(0x75)
000622 f411      	BRNE _0x20000F3
                 _0x20000F2:
000623 e02a      	LDI  R18,LOW(10)
000624 c008      	RJMP _0x20000EE
                 _0x20000F3:
000625 37e8      	CPI  R30,LOW(0x78)
000626 f411      	BRNE _0x20000F4
000627 e120      	LDI  R18,LOW(16)
000628 c004      	RJMP _0x20000EE
                 _0x20000F4:
000629 32e5      	CPI  R30,LOW(0x25)
00062a f409      	BRNE _0x20000F7
00062b c05c      	RJMP _0x20000F6
                 _0x20000F7:
00062c c074      	RJMP _0x20A0006
                 _0x20000EE:
00062d e0e0      	LDI  R30,LOW(0)
00062e 83ee      	STD  Y+6,R30
00062f 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000630 2fe5      	MOV  R30,R21
000631 5051      	SUBI R21,1
000632 30e0      	CPI  R30,0
000633 f411      	BRNE PC+3
000634 940c 0678 	JMP _0x20000FA
000636 b7ed      	IN   R30,SPL
000637 b7fe      	IN   R31,SPH
000638 93fa      	ST   -Y,R31
000639 93ea      	ST   -Y,R30
00063a 934f      	PUSH R20
00063b 940e 08fb 	CALL SUBOPT_0x23
00063d 914f      	POP  R20
00063e 2f3e      	MOV  R19,R30
00063f 32e1      	CPI  R30,LOW(0x21)
000640 f438      	BRSH _0x20000FB
000641 940e 0903 	CALL SUBOPT_0x24
000643 f41c      	BRGE _0x20000FC
000644 efef      	LDI  R30,LOW(65535)
000645 efff      	LDI  R31,HIGH(65535)
000646 c05c      	RJMP _0x20A0005
                 _0x20000FC:
000647 c017      	RJMP _0x20000FD
                 _0x20000FB:
000648 85ea      	LDD  R30,Y+10
000649 30e0      	CPI  R30,0
00064a f439      	BRNE _0x20000FE
00064b 323d      	CPI  R19,45
00064c f419      	BRNE _0x20000FF
00064d efef      	LDI  R30,LOW(255)
00064e 87ea      	STD  Y+10,R30
00064f cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000650 e0e1      	LDI  R30,LOW(1)
000651 87ea      	STD  Y+10,R30
                 _0x20000FE:
000652 3120      	CPI  R18,16
000653 f431      	BRNE _0x2000101
000654 933a      	ST   -Y,R19
000655 940e 06e8 	CALL _isxdigit
000657 30e0      	CPI  R30,0
000658 f031      	BREQ _0x20000FD
000659 c007      	RJMP _0x2000103
                 _0x2000101:
00065a 933a      	ST   -Y,R19
00065b 940e 06d6 	CALL _isdigit
00065d 30e0      	CPI  R30,0
00065e f411      	BRNE _0x2000104
                 _0x20000FD:
00065f 2f43      	MOV  R20,R19
000660 c017      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000661 3631      	CPI  R19,97
000662 f010      	BRLO _0x2000105
000663 5537      	SUBI R19,LOW(87)
000664 c005      	RJMP _0x2000106
                 _0x2000105:
000665 3431      	CPI  R19,65
000666 f010      	BRLO _0x2000107
000667 5337      	SUBI R19,LOW(55)
000668 c001      	RJMP _0x2000108
                 _0x2000107:
000669 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
00066a 2fe2      	MOV  R30,R18
00066b 81ae      	LDD  R26,Y+6
00066c 81bf      	LDD  R27,Y+6+1
00066d e0f0      	LDI  R31,0
00066e 940e 0b10 	CALL __MULW12U
000670 01df      	MOVW R26,R30
000671 2fe3      	MOV  R30,R19
000672 e0f0      	LDI  R31,0
000673 0fea      	ADD  R30,R26
000674 1ffb      	ADC  R31,R27
000675 83ee      	STD  Y+6,R30
000676 83ff      	STD  Y+6+1,R31
000677 cfb8      	RJMP _0x20000F8
                 _0x20000FA:
000678 940e 0908 	CALL SUBOPT_0x25
00067a 85ea      	LDD  R30,Y+10
00067b 81ae      	LDD  R26,Y+6
00067c 81bf      	LDD  R27,Y+6+1
00067d e0f0      	LDI  R31,0
00067e fde7      	SBRC R30,7
00067f efff      	SER  R31
000680 940e 0b10 	CALL __MULW12U
000682 01d8      	MOVW R26,R16
000683 93ed      	ST   X+,R30
000684 93fc      	ST   X,R31
                 _0x20000E0:
000685 940e 0883 	CALL SUBOPT_0x12
000687 c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000688 b7ed      	IN   R30,SPL
000689 b7fe      	IN   R31,SPH
00068a 93fa      	ST   -Y,R31
00068b 93ea      	ST   -Y,R30
00068c 934f      	PUSH R20
00068d 940e 08fb 	CALL SUBOPT_0x23
00068f 914f      	POP  R20
000690 17e3      	CP   R30,R19
000691 f071      	BREQ _0x200010A
000692 940e 0903 	CALL SUBOPT_0x24
000694 f41c      	BRGE _0x200010B
000695 efef      	LDI  R30,LOW(65535)
000696 efff      	LDI  R31,HIGH(65535)
000697 c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000698 85e8      	LDD  R30,Y+8
000699 85f9      	LDD  R31,Y+8+1
00069a 9730      	SBIW R30,0
00069b f419      	BRNE _0x200010C
00069c efef      	LDI  R30,LOW(65535)
00069d efff      	LDI  R31,HIGH(65535)
00069e c004      	RJMP _0x20A0005
                 _0x200010C:
00069f c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
0006a0 ceda      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
0006a1 85e8      	LDD  R30,Y+8
0006a2 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
0006a3 940e 0b9d 	CALL __LOADLOCR6
0006a5 9663      	ADIW R28,19
0006a6 9508      	RET
                 _sscanf:
0006a7 92ff      	PUSH R15
0006a8 2ef8      	MOV  R15,R24
0006a9 9723      	SBIW R28,3
0006aa 931a      	ST   -Y,R17
0006ab 930a      	ST   -Y,R16
0006ac 01de      	MOVW R26,R28
0006ad 9617      	ADIW R26,7
0006ae 940e 08f1 	CALL SUBOPT_0x21
0006b0 9730      	SBIW R30,0
0006b1 f419      	BRNE _0x200010D
0006b2 efef      	LDI  R30,LOW(65535)
0006b3 efff      	LDI  R31,HIGH(65535)
0006b4 c01c      	RJMP _0x20A0004
                 _0x200010D:
0006b5 01de      	MOVW R26,R28
0006b6 9611      	ADIW R26,1
0006b7 940e 0af4 	CALL __ADDW2R15
0006b9 018d      	MOVW R16,R26
0006ba 01de      	MOVW R26,R28
0006bb 9617      	ADIW R26,7
0006bc 940e 08f1 	CALL SUBOPT_0x21
0006be 83eb      	STD  Y+3,R30
0006bf 83fc      	STD  Y+3+1,R31
0006c0 01de      	MOVW R26,R28
0006c1 9615      	ADIW R26,5
0006c2 940e 08f1 	CALL SUBOPT_0x21
0006c4 93fa      	ST   -Y,R31
0006c5 93ea      	ST   -Y,R30
0006c6 931a      	ST   -Y,R17
0006c7 930a      	ST   -Y,R16
0006c8 e4eb      	LDI  R30,LOW(_get_buff_G100)
0006c9 e0f5      	LDI  R31,HIGH(_get_buff_G100)
0006ca 93fa      	ST   -Y,R31
0006cb 93ea      	ST   -Y,R30
0006cc 01fe      	MOVW R30,R28
0006cd 9638      	ADIW R30,8
0006ce 93fa      	ST   -Y,R31
0006cf 93ea      	ST   -Y,R30
0006d0 dea2      	RCALL __scanf_G100
                 _0x20A0004:
0006d1 8119      	LDD  R17,Y+1
0006d2 8108      	LDD  R16,Y+0
0006d3 9625      	ADIW R28,5
0006d4 90ff      	POP  R15
0006d5 9508      	RET
                 
                 	.CSEG
                 _isdigit:
0006d6 e0e1          ldi  r30,1
0006d7 91f9          ld   r31,y+
0006d8 33f0          cpi  r31,'0'
0006d9 f010          brlo isdigit0
0006da 33fa          cpi  r31,'9'+1
0006db f008          brlo isdigit1
                 isdigit0:
0006dc 27ee          clr  r30
                 isdigit1:
0006dd 9508          ret
                 _isspace:
0006de e0e1          ldi  r30,1
0006df 91f9          ld   r31,y+
0006e0 32f0          cpi  r31,' '
0006e1 f029          breq isspace1
0006e2 30f9          cpi  r31,9
0006e3 f010          brlo isspace0
0006e4 30fe          cpi  r31,13+1
0006e5 f008          brlo isspace1
                 isspace0:
0006e6 27ee          clr  r30
                 isspace1:
0006e7 9508          ret
                 _isxdigit:
0006e8 e0e1          ldi  r30,1
0006e9 91f9          ld   r31,y+
0006ea 53f0          subi r31,0x30
0006eb f040          brcs isxdigit0
0006ec 30fa          cpi  r31,10
0006ed f038          brcs isxdigit1
0006ee 75ff          andi r31,0x5f
0006ef 50f7          subi r31,7
0006f0 30fa          cpi  r31,10
0006f1 f010          brcs isxdigit0
0006f2 31f0          cpi  r31,16
0006f3 f008          brcs isxdigit1
                 isxdigit0:
0006f4 27ee          clr  r30
                 isxdigit1:
0006f5 9508          ret
                 
                 	.CSEG
                 _strcpyf:
0006f6 91e9          ld   r30,y+
0006f7 91f9          ld   r31,y+
0006f8 91a9          ld   r26,y+
0006f9 91b9          ld   r27,y+
0006fa 01cd          movw r24,r26
                 strcpyf0:
0006fb 9005      	lpm  r0,z+
0006fc 920d          st   x+,r0
0006fd 2000          tst  r0
0006fe f7e1          brne strcpyf0
0006ff 01fc          movw r30,r24
000700 9508          ret
                 _strlen:
000701 91a9          ld   r26,y+
000702 91b9          ld   r27,y+
000703 27ee          clr  r30
000704 27ff          clr  r31
                 strlen0:
000705 916d          ld   r22,x+
000706 2366          tst  r22
000707 f011          breq strlen1
000708 9631          adiw r30,1
000709 cffb          rjmp strlen0
                 strlen1:
00070a 9508          ret
                 _strlenf:
00070b 27aa          clr  r26
00070c 27bb          clr  r27
00070d 91e9          ld   r30,y+
00070e 91f9          ld   r31,y+
                 strlenf0:
00070f 9005      	lpm  r0,z+
000710 2000          tst  r0
000711 f011          breq strlenf1
000712 9611          adiw r26,1
000713 cffb          rjmp strlenf0
                 strlenf1:
000714 01fd          movw r30,r26
000715 9508          ret
                 
                 	.CSEG
                 _ftrunc:
000716 817b         ldd  r23,y+3
000717 816a         ldd  r22,y+2
000718 81f9         ldd  r31,y+1
000719 81e8         ld   r30,y
00071a fb77         bst  r23,7
00071b 0f77         lsl  r23
00071c fd67         sbrc r22,7
00071d 6071         sbr  r23,1
00071e 2f97         mov  r25,r23
00071f 579e         subi r25,0x7e
000720 f081         breq __ftrunc0
000721 f078         brcs __ftrunc0
000722 3198         cpi  r25,24
000723 f490         brsh __ftrunc1
000724 27aa         clr  r26
000725 27bb         clr  r27
000726 2788         clr  r24
                 __ftrunc2:
000727 9408         sec
000728 9587         ror  r24
000729 95b7         ror  r27
00072a 95a7         ror  r26
00072b 959a         dec  r25
00072c f7d1         brne __ftrunc2
00072d 23ea         and  r30,r26
00072e 23fb         and  r31,r27
00072f 2368         and  r22,r24
000730 c005         rjmp __ftrunc1
                 __ftrunc0:
000731 94e8         clt
000732 2777         clr  r23
000733 27ee         clr  r30
000734 27ff         clr  r31
000735 2766         clr  r22
                 __ftrunc1:
000736 776f         cbr  r22,0x80
000737 9576         lsr  r23
000738 f408         brcc __ftrunc3
000739 6860         sbr  r22,0x80
                 __ftrunc3:
00073a f977         bld  r23,7
00073b 91a9         ld   r26,y+
00073c 91b9         ld   r27,y+
00073d 9189         ld   r24,y+
00073e 9199         ld   r25,y+
00073f 17ea         cp   r30,r26
000740 07fb         cpc  r31,r27
000741 0768         cpc  r22,r24
000742 0779         cpc  r23,r25
000743 fb97         bst  r25,7
000744 9508         ret
                 _floor:
000745 940e 0913 	CALL SUBOPT_0x26
000747 940e 0b80 	CALL __PUTPARD1
000749 940e 0716 	CALL _ftrunc
00074b 940e 0b7b 	CALL __PUTD1S0
00074d f419          brne __floor1
                 __floor0:
00074e 940e 0913 	CALL SUBOPT_0x26
000750 c009      	RJMP _0x20A0003
                 __floor1:
000751 f7e6          brtc __floor0
000752 940e 0913 	CALL SUBOPT_0x26
                +
000754 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000755 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000756 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000757 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000758 940e 09ea 	CALL __SUBF12
                 _0x20A0003:
00075a 9624      	ADIW R28,4
00075b 9508      	RET
                 
                 	.CSEG
                 _ftoa:
00075c 9724      	SBIW R28,4
00075d e0e0      	LDI  R30,LOW(0)
00075e 83e8      	ST   Y,R30
00075f 83e9      	STD  Y+1,R30
000760 83ea      	STD  Y+2,R30
000761 e3ef      	LDI  R30,LOW(63)
000762 83eb      	STD  Y+3,R30
000763 931a      	ST   -Y,R17
000764 930a      	ST   -Y,R16
000765 85eb      	LDD  R30,Y+11
000766 85fc      	LDD  R31,Y+11+1
000767 3fef      	CPI  R30,LOW(0xFFFF)
000768 efaf      	LDI  R26,HIGH(0xFFFF)
000769 07fa      	CPC  R31,R26
00076a f429      	BRNE _0x208000D
00076b d1aa      	RCALL SUBOPT_0x27
                +
00076c e2e0     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
00076d e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
00076e d0ba      	RCALL SUBOPT_0x6
00076f c088      	RJMP _0x20A0002
                 _0x208000D:
000770 3fef      	CPI  R30,LOW(0x7FFF)
000771 e7af      	LDI  R26,HIGH(0x7FFF)
000772 07fa      	CPC  R31,R26
000773 f429      	BRNE _0x208000C
000774 d1a1      	RCALL SUBOPT_0x27
                +
000775 e2e1     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000776 e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000777 d0b1      	RCALL SUBOPT_0x6
000778 c07f      	RJMP _0x20A0002
                 _0x208000C:
000779 85ac      	LDD  R26,Y+12
00077a 23aa      	TST  R26
00077b f452      	BRPL _0x208000F
                +
00077c 85e9     +LDD R30 , Y + 9
00077d 85fa     +LDD R31 , Y + 9 + 1
00077e 856b     +LDD R22 , Y + 9 + 2
00077f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000780 940e 094b 	CALL __ANEGF1
000782 d198      	RCALL SUBOPT_0x28
000783 d19c      	RCALL SUBOPT_0x29
000784 e2ed      	LDI  R30,LOW(45)
000785 93ec      	ST   X,R30
                 _0x208000F:
000786 85a8      	LDD  R26,Y+8
000787 30a7      	CPI  R26,LOW(0x7)
000788 f010      	BRLO _0x2080010
000789 e0e6      	LDI  R30,LOW(6)
00078a 87e8      	STD  Y+8,R30
                 _0x2080010:
00078b 8518      	LDD  R17,Y+8
                 _0x2080011:
00078c 2fe1      	MOV  R30,R17
00078d 5011      	SUBI R17,1
00078e 30e0      	CPI  R30,0
00078f f021      	BREQ _0x2080013
000790 d196      	RCALL SUBOPT_0x2A
000791 d0d9      	RCALL SUBOPT_0xE
000792 d199      	RCALL SUBOPT_0x2B
000793 cff8      	RJMP _0x2080011
                 _0x2080013:
000794 d19c      	RCALL SUBOPT_0x2C
000795 940e 09f1 	CALL __ADDF12
000797 d183      	RCALL SUBOPT_0x28
000798 e010      	LDI  R17,LOW(0)
                +
000799 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00079a e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00079b e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00079c e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00079d d18e      	RCALL SUBOPT_0x2B
                 _0x2080014:
00079e d192      	RCALL SUBOPT_0x2C
00079f 940e 0ad4 	CALL __CMPF12
0007a1 f060      	BRLO _0x2080016
0007a2 d184      	RCALL SUBOPT_0x2A
0007a3 d0b4      	RCALL SUBOPT_0xB
0007a4 d187      	RCALL SUBOPT_0x2B
0007a5 5f1f      	SUBI R17,-LOW(1)
0007a6 3217      	CPI  R17,39
0007a7 f028      	BRLO _0x2080017
0007a8 d16d      	RCALL SUBOPT_0x27
                +
0007a9 e2e5     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
0007aa e0f1     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
0007ab d07d      	RCALL SUBOPT_0x6
0007ac c04b      	RJMP _0x20A0002
                 _0x2080017:
0007ad cff0      	RJMP _0x2080014
                 _0x2080016:
0007ae 3010      	CPI  R17,0
0007af f421      	BRNE _0x2080018
0007b0 d16f      	RCALL SUBOPT_0x29
0007b1 e3e0      	LDI  R30,LOW(48)
0007b2 93ec      	ST   X,R30
0007b3 c020      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
0007b4 2fe1      	MOV  R30,R17
0007b5 5011      	SUBI R17,1
0007b6 30e0      	CPI  R30,0
0007b7 f0e1      	BREQ _0x208001C
0007b8 d16e      	RCALL SUBOPT_0x2A
0007b9 d0b1      	RCALL SUBOPT_0xE
0007ba d0a9      	RCALL SUBOPT_0xD
0007bb 940e 0b80 	CALL __PUTPARD1
0007bd 940e 0745 	CALL _floor
0007bf d16c      	RCALL SUBOPT_0x2B
0007c0 d170      	RCALL SUBOPT_0x2C
0007c1 940e 0a8f 	CALL __DIVF21
0007c3 940e 097e 	CALL __CFD1U
0007c5 2f0e      	MOV  R16,R30
0007c6 d159      	RCALL SUBOPT_0x29
0007c7 d0b1      	RCALL SUBOPT_0x10
0007c8 e0f0      	LDI  R31,0
0007c9 d15d      	RCALL SUBOPT_0x2A
0007ca 940e 0b0b 	CALL __CWD1
0007cc 940e 09b7 	CALL __CDF1
0007ce 940e 0a41 	CALL __MULF12
0007d0 d169      	RCALL SUBOPT_0x2D
0007d1 d0ac      	RCALL SUBOPT_0x11
0007d2 d148      	RCALL SUBOPT_0x28
0007d3 cfe0      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
0007d4 85e8      	LDD  R30,Y+8
0007d5 30e0      	CPI  R30,0
0007d6 f0e9      	BREQ _0x20A0001
0007d7 d148      	RCALL SUBOPT_0x29
0007d8 e2ee      	LDI  R30,LOW(46)
0007d9 93ec      	ST   X,R30
                 _0x208001E:
0007da 85e8      	LDD  R30,Y+8
0007db 50e1      	SUBI R30,LOW(1)
0007dc 87e8      	STD  Y+8,R30
0007dd 5fef      	SUBI R30,-LOW(1)
0007de f0a9      	BREQ _0x2080020
0007df d15a      	RCALL SUBOPT_0x2D
0007e0 d077      	RCALL SUBOPT_0xB
0007e1 d139      	RCALL SUBOPT_0x28
                +
0007e2 85e9     +LDD R30 , Y + 9
0007e3 85fa     +LDD R31 , Y + 9 + 1
0007e4 856b     +LDD R22 , Y + 9 + 2
0007e5 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0007e6 940e 097e 	CALL __CFD1U
0007e8 2f0e      	MOV  R16,R30
0007e9 d136      	RCALL SUBOPT_0x29
0007ea d08e      	RCALL SUBOPT_0x10
0007eb e0f0      	LDI  R31,0
0007ec d14d      	RCALL SUBOPT_0x2D
0007ed 940e 0b0b 	CALL __CWD1
0007ef 940e 09b7 	CALL __CDF1
0007f1 d08c      	RCALL SUBOPT_0x11
0007f2 d128      	RCALL SUBOPT_0x28
0007f3 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
0007f4 81ae      	LDD  R26,Y+6
0007f5 81bf      	LDD  R27,Y+6+1
0007f6 e0e0      	LDI  R30,LOW(0)
0007f7 93ec      	ST   X,R30
                 _0x20A0002:
0007f8 8119      	LDD  R17,Y+1
0007f9 8108      	LDD  R16,Y+0
0007fa 962d      	ADIW R28,13
0007fb 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 __seed_G104:
000578           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0007fc 2fe1      	MOV  R30,R17
0007fd e0f0      	LDI  R31,0
0007fe 81aa      	LDD  R26,Y+2
0007ff 81bb      	LDD  R27,Y+2+1
000800 0fae      	ADD  R26,R30
000801 1fbf      	ADC  R27,R31
000802 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1:
000803 2da4      	MOV  R26,R4
000804 e0b0      	LDI  R27,0
000805 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000806 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000807 b1ec      	IN   R30,0xC
000808 93ec      	ST   X,R30
000809 9443      	INC  R4
00080a e0e0      	LDI  R30,LOW(0)
00080b bde4      	OUT  0x24,R30
00080c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
00080d 2de6      	MOV  R30,R6
00080e e0f0      	LDI  R31,0
00080f 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000810 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000811 8310      	ST   Z,R17
000812 9463      	INC  R6
000813 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
000814 01fe      	MOVW R30,R28
000815 58ec      	SUBI R30,LOW(-(116))
000816 4fff      	SBCI R31,HIGH(-(116))
000817 2766      	CLR  R22
000818 2777      	CLR  R23
000819 940e 0b80 	CALL __PUTPARD1
00081b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
                +
00081c e0e0     +LDI R30 , LOW ( 0x42C80000 )
00081d e0f0     +LDI R31 , HIGH ( 0x42C80000 )
00081e ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
00081f e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000820 940e 0a8f 	CALL __DIVF21
000822 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000823 91ed      	LD   R30,X+
000824 91fd      	LD   R31,X+
000825 9631      	ADIW R30,1
000826 93fe      	ST   -X,R31
000827 93ee      	ST   -X,R30
000828 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
000829 93fa      	ST   -Y,R31
00082a 93ea      	ST   -Y,R30
00082b 940c 06f6 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x7:
                +
00082d 81ac     +LDD R26 , Y + 4
00082e 81bd     +LDD R27 , Y + 4 + 1
00082f 818e     +LDD R24 , Y + 4 + 2
000830 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000831 e0e0     +LDI R30 , LOW ( 0x41200000 )
000832 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000833 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000834 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000835 940e 0a41 	CALL __MULF12
                +
000837 83ec     +STD Y + 4 , R30
000838 83fd     +STD Y + 4 + 1 , R31
000839 836e     +STD Y + 4 + 2 , R22
00083a 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00083b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8:
                +
00083c 81ec     +LDD R30 , Y + 4
00083d 81fd     +LDD R31 , Y + 4 + 1
00083e 816e     +LDD R22 , Y + 4 + 2
00083f 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000840 85ac     +LDD R26 , Y + 12
000841 85bd     +LDD R27 , Y + 12 + 1
000842 858e     +LDD R24 , Y + 12 + 2
000843 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000844 940e 0ad4 	CALL __CMPF12
000846 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
                +
000847 85ac     +LDD R26 , Y + 12
000848 85bd     +LDD R27 , Y + 12 + 1
000849 858e     +LDD R24 , Y + 12 + 2
00084a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00084b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
                +
00084c eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00084d ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00084e ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00084f e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000850 940e 0a41 	CALL __MULF12
                +
000852 87ec     +STD Y + 12 , R30
000853 87fd     +STD Y + 12 + 1 , R31
000854 876e     +STD Y + 12 + 2 , R22
000855 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000856 5f3f      	SUBI R19,-LOW(1)
000857 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
                +
000858 e0e0     +LDI R30 , LOW ( 0x41200000 )
000859 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00085a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00085b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00085c 940e 0a41 	CALL __MULF12
00085e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
00085f 87ec     +STD Y + 12 , R30
000860 87fd     +STD Y + 12 + 1 , R31
000861 876e     +STD Y + 12 + 2 , R22
000862 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000863 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
000864 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000865 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000866 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000867 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000868 940e 09f1 	CALL __ADDF12
00086a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
00086b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00086c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00086d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00086e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00086f 940e 0a41 	CALL __MULF12
000871 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000872 85a8      	LDD  R26,Y+8
000873 85b9      	LDD  R27,Y+8+1
000874 9611      	ADIW R26,1
000875 87a8      	STD  Y+8,R26
000876 87b9      	STD  Y+8+1,R27
000877 9711      	SBIW R26,1
000878 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000879 2fe0      	MOV  R30,R16
00087a 5de0      	SUBI R30,-LOW(48)
00087b 93ec      	ST   X,R30
00087c 2fe0      	MOV  R30,R16
00087d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
00087e 940e 0b85 	CALL __SWAPD12
000880 940e 09ea 	CALL __SUBF12
000882 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
000883 85e8      	LDD  R30,Y+8
000884 85f9      	LDD  R31,Y+8+1
000885 9631      	ADIW R30,1
000886 87e8      	STD  Y+8,R30
000887 87f9      	STD  Y+8+1,R31
000888 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x13:
000889 932a      	ST   -Y,R18
00088a 81ef      	LDD  R30,Y+7
00088b 85f8      	LDD  R31,Y+7+1
00088c 93fa      	ST   -Y,R31
00088d 93ea      	ST   -Y,R30
00088e 85eb      	LDD  R30,Y+11
00088f 85fc      	LDD  R31,Y+11+1
000890 9509      	ICALL
000891 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x14:
                +
000892 01fe     +MOVW R30 , R28
000893 5ae6     +SUBI R30 , LOW ( - 90 )
000894 4fff     +SBCI R31 , HIGH ( - 90 )
000895 9001     +LD R0 , Z +
000896 81f0     +LD R31 , Z
000897 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000898 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x15:
000899 9734      	SBIW R30,4
                +
00089a 01de     +MOVW R26 , R28
00089b 5aa6     +SUBI R26 , LOW ( - 90 )
00089c 4fbf     +SBCI R27 , HIGH ( - 90 )
00089d 93ed     +ST X + , R30
00089e 93fc     +ST X , R31
                 	__PUTW1SX 90
00089f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x16:
0008a0 81ef      	LDD  R30,Y+7
0008a1 85f8      	LDD  R31,Y+7+1
0008a2 93fa      	ST   -Y,R31
0008a3 93ea      	ST   -Y,R30
0008a4 85eb      	LDD  R30,Y+11
0008a5 85fc      	LDD  R31,Y+11+1
0008a6 9509      	ICALL
0008a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17:
                +
0008a8 01de     +MOVW R26 , R28
0008a9 5aa6     +SUBI R26 , LOW ( - 90 )
0008aa 4fbf     +SBCI R27 , HIGH ( - 90 )
0008ab 900d     +LD R0 , X +
0008ac 91bc     +LD R27 , X
0008ad 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0008ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
                +
0008af 87ea     +STD Y + 10 , R30
0008b0 87fb     +STD Y + 10 + 1 , R31
0008b1 876c     +STD Y + 10 + 2 , R22
0008b2 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0008b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x19:
0008b4 dfdd      	RCALL SUBOPT_0x14
0008b5 cfe3      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
                +
0008b6 85ea     +LDD R30 , Y + 10
0008b7 85fb     +LDD R31 , Y + 10 + 1
0008b8 856c     +LDD R22 , Y + 10 + 2
0008b9 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0008ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1B:
0008bb 87ee      	STD  Y+14,R30
0008bc 87ff      	STD  Y+14+1,R31
0008bd 93fa      	ST   -Y,R31
0008be 93ea      	ST   -Y,R30
0008bf 940e 0701 	CALL _strlen
0008c1 2f1e      	MOV  R17,R30
0008c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
0008c3 dfe4      	RCALL SUBOPT_0x17
0008c4 9614      	ADIW R26,4
0008c5 940e 0b6c 	CALL __GETW1P
0008c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
0008c8 8be8     +STD Y + 16 , R30
0008c9 8bf9     +STD Y + 16 + 1 , R31
0008ca 8b6a     +STD Y + 16 + 2 , R22
0008cb 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0008cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x1E:
0008cd 7f0b      	ANDI R16,LOW(251)
0008ce 89ed      	LDD  R30,Y+21
0008cf 93ea      	ST   -Y,R30
                +
0008d0 01fe     +MOVW R30 , R28
0008d1 5ae9     +SUBI R30 , LOW ( - 87 )
0008d2 4fff     +SBCI R31 , HIGH ( - 87 )
0008d3 9001     +LD R0 , Z +
0008d4 81f0     +LD R31 , Z
0008d5 2de0     +MOV R30 , R0
                 	__GETW1SX 87
0008d6 93fa      	ST   -Y,R31
0008d7 93ea      	ST   -Y,R30
                +
0008d8 01fe     +MOVW R30 , R28
0008d9 5ae5     +SUBI R30 , LOW ( - 91 )
0008da 4fff     +SBCI R31 , HIGH ( - 91 )
0008db 9001     +LD R0 , Z +
0008dc 81f0     +LD R31 , Z
0008dd 2de0     +MOV R30 , R0
                 	__GETW1SX 91
0008de 9509      	ICALL
0008df 3050      	CPI  R21,0
0008e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
0008e1 89e8     +LDD R30 , Y + 16
0008e2 89f9     +LDD R31 , Y + 16 + 1
0008e3 896a     +LDD R22 , Y + 16 + 2
0008e4 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0008e5 85aa     +LDD R26 , Y + 10
0008e6 85bb     +LDD R27 , Y + 10 + 1
0008e7 858c     +LDD R24 , Y + 10 + 2
0008e8 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0008e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
0008ea 01de      	MOVW R26,R28
0008eb 961c      	ADIW R26,12
0008ec 940e 0af4 	CALL __ADDW2R15
0008ee 940e 0b6c 	CALL __GETW1P
0008f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
0008f1 940e 0af4 	CALL __ADDW2R15
0008f3 940e 0b6c 	CALL __GETW1P
0008f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
0008f6 933a      	ST   -Y,R19
0008f7 940e 06de 	CALL _isspace
0008f9 30e0      	CPI  R30,0
0008fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x23:
0008fb 85ed      	LDD  R30,Y+13
0008fc 85fe      	LDD  R31,Y+13+1
0008fd 93fa      	ST   -Y,R31
0008fe 93ea      	ST   -Y,R30
0008ff 89e9      	LDD  R30,Y+17
000900 89fa      	LDD  R31,Y+17+1
000901 9509      	ICALL
000902 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24:
000903 85ab      	LDD  R26,Y+11
000904 85bc      	LDD  R27,Y+11+1
000905 91ac      	LD   R26,X
000906 30a0      	CPI  R26,0
000907 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25:
000908 85ef      	LDD  R30,Y+15
000909 89f8      	LDD  R31,Y+15+1
00090a 9734      	SBIW R30,4
00090b 87ef      	STD  Y+15,R30
00090c 8bf8      	STD  Y+15+1,R31
00090d 85af      	LDD  R26,Y+15
00090e 89b8      	LDD  R27,Y+15+1
00090f 9614      	ADIW R26,4
000910 910d      	LD   R16,X+
000911 911c      	LD   R17,X
000912 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
000913 940e 0b76 	CALL __GETD1S0
000915 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000916 81ee      	LDD  R30,Y+6
000917 81ff      	LDD  R31,Y+6+1
000918 93fa      	ST   -Y,R31
000919 93ea      	ST   -Y,R30
00091a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
                +
00091b 87e9     +STD Y + 9 , R30
00091c 87fa     +STD Y + 9 + 1 , R31
00091d 876b     +STD Y + 9 + 2 , R22
00091e 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00091f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x29:
000920 81ae      	LDD  R26,Y+6
000921 81bf      	LDD  R27,Y+6+1
000922 9611      	ADIW R26,1
000923 83ae      	STD  Y+6,R26
000924 83bf      	STD  Y+6+1,R27
000925 9711      	SBIW R26,1
000926 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
                +
000927 81aa     +LDD R26 , Y + 2
000928 81bb     +LDD R27 , Y + 2 + 1
000929 818c     +LDD R24 , Y + 2 + 2
00092a 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00092b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2B:
                +
00092c 83ea     +STD Y + 2 , R30
00092d 83fb     +STD Y + 2 + 1 , R31
00092e 836c     +STD Y + 2 + 2 , R22
00092f 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000930 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C:
                +
000931 81ea     +LDD R30 , Y + 2
000932 81fb     +LDD R31 , Y + 2 + 1
000933 816c     +LDD R22 , Y + 2 + 2
000934 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000935 85a9     +LDD R26 , Y + 9
000936 85ba     +LDD R27 , Y + 9 + 1
000937 858b     +LDD R24 , Y + 9 + 2
000938 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000939 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
00093a 85a9     +LDD R26 , Y + 9
00093b 85ba     +LDD R27 , Y + 9 + 1
00093c 858b     +LDD R24 , Y + 9 + 2
00093d 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00093e 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00093f 91e9      	ld   r30,y+
000940 91f9      	ld   r31,y+
000941 9630      	adiw r30,0
000942 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000943 e686     +LDI R24 , LOW ( 0xE66 )
000944 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000945 9701     +SBIW R24 , 1
000946 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000947 95a8      	wdr
000948 9731      	sbiw r30,1
000949 f7c9      	brne __delay_ms0
                 __delay_ms1:
00094a 9508      	ret
                 
                 __ANEGF1:
00094b 9730      	SBIW R30,0
00094c 4060      	SBCI R22,0
00094d 4070      	SBCI R23,0
00094e f009      	BREQ __ANEGF10
00094f 5870      	SUBI R23,0x80
                 __ANEGF10:
000950 9508      	RET
                 
                 __ROUND_REPACK:
000951 2355      	TST  R21
000952 f442      	BRPL __REPACK
000953 3850      	CPI  R21,0x80
000954 f411      	BRNE __ROUND_REPACK0
000955 ffe0      	SBRS R30,0
000956 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000957 9631      	ADIW R30,1
000958 1f69      	ADC  R22,R25
000959 1f79      	ADC  R23,R25
00095a f06b      	BRVS __REPACK1
                 
                 __REPACK:
00095b e850      	LDI  R21,0x80
00095c 2757      	EOR  R21,R23
00095d f411      	BRNE __REPACK0
00095e 935f      	PUSH R21
00095f c0cf      	RJMP __ZERORES
                 __REPACK0:
000960 3f5f      	CPI  R21,0xFF
000961 f031      	BREQ __REPACK1
000962 0f66      	LSL  R22
000963 0c00      	LSL  R0
000964 9557      	ROR  R21
000965 9567      	ROR  R22
000966 2f75      	MOV  R23,R21
000967 9508      	RET
                 __REPACK1:
000968 935f      	PUSH R21
000969 2000      	TST  R0
00096a f00a      	BRMI __REPACK2
00096b c0cf      	RJMP __MAXRES
                 __REPACK2:
00096c c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00096d e850      	LDI  R21,0x80
00096e 2e19      	MOV  R1,R25
00096f 2215      	AND  R1,R21
000970 0f88      	LSL  R24
000971 1f99      	ROL  R25
000972 2795      	EOR  R25,R21
000973 0f55      	LSL  R21
000974 9587      	ROR  R24
                 
                 __UNPACK1:
000975 e850      	LDI  R21,0x80
000976 2e07      	MOV  R0,R23
000977 2205      	AND  R0,R21
000978 0f66      	LSL  R22
000979 1f77      	ROL  R23
00097a 2775      	EOR  R23,R21
00097b 0f55      	LSL  R21
00097c 9567      	ROR  R22
00097d 9508      	RET
                 
                 __CFD1U:
00097e 9468      	SET
00097f c001      	RJMP __CFD1U0
                 __CFD1:
000980 94e8      	CLT
                 __CFD1U0:
000981 935f      	PUSH R21
000982 dff2      	RCALL __UNPACK1
000983 3870      	CPI  R23,0x80
000984 f018      	BRLO __CFD10
000985 3f7f      	CPI  R23,0xFF
000986 f408      	BRCC __CFD10
000987 c0a7      	RJMP __ZERORES
                 __CFD10:
000988 e156      	LDI  R21,22
000989 1b57      	SUB  R21,R23
00098a f4aa      	BRPL __CFD11
00098b 9551      	NEG  R21
00098c 3058      	CPI  R21,8
00098d f40e      	BRTC __CFD19
00098e 3059      	CPI  R21,9
                 __CFD19:
00098f f030      	BRLO __CFD17
000990 efef      	SER  R30
000991 efff      	SER  R31
000992 ef6f      	SER  R22
000993 e77f      	LDI  R23,0x7F
000994 f977      	BLD  R23,7
000995 c01a      	RJMP __CFD15
                 __CFD17:
000996 2777      	CLR  R23
000997 2355      	TST  R21
000998 f0b9      	BREQ __CFD15
                 __CFD18:
000999 0fee      	LSL  R30
00099a 1fff      	ROL  R31
00099b 1f66      	ROL  R22
00099c 1f77      	ROL  R23
00099d 955a      	DEC  R21
00099e f7d1      	BRNE __CFD18
00099f c010      	RJMP __CFD15
                 __CFD11:
0009a0 2777      	CLR  R23
                 __CFD12:
0009a1 3058      	CPI  R21,8
0009a2 f028      	BRLO __CFD13
0009a3 2fef      	MOV  R30,R31
0009a4 2ff6      	MOV  R31,R22
0009a5 2f67      	MOV  R22,R23
0009a6 5058      	SUBI R21,8
0009a7 cff9      	RJMP __CFD12
                 __CFD13:
0009a8 2355      	TST  R21
0009a9 f031      	BREQ __CFD15
                 __CFD14:
0009aa 9576      	LSR  R23
0009ab 9567      	ROR  R22
0009ac 95f7      	ROR  R31
0009ad 95e7      	ROR  R30
0009ae 955a      	DEC  R21
0009af f7d1      	BRNE __CFD14
                 __CFD15:
0009b0 2000      	TST  R0
0009b1 f40a      	BRPL __CFD16
0009b2 d145      	RCALL __ANEGD1
                 __CFD16:
0009b3 915f      	POP  R21
0009b4 9508      	RET
                 
                 __CDF1U:
0009b5 9468      	SET
0009b6 c001      	RJMP __CDF1U0
                 __CDF1:
0009b7 94e8      	CLT
                 __CDF1U0:
0009b8 9730      	SBIW R30,0
0009b9 4060      	SBCI R22,0
0009ba 4070      	SBCI R23,0
0009bb f0b1      	BREQ __CDF10
0009bc 2400      	CLR  R0
0009bd f026      	BRTS __CDF11
0009be 2377      	TST  R23
0009bf f412      	BRPL __CDF11
0009c0 9400      	COM  R0
0009c1 d136      	RCALL __ANEGD1
                 __CDF11:
0009c2 2e17      	MOV  R1,R23
0009c3 e17e      	LDI  R23,30
0009c4 2011      	TST  R1
                 __CDF12:
0009c5 f032      	BRMI __CDF13
0009c6 957a      	DEC  R23
0009c7 0fee      	LSL  R30
0009c8 1fff      	ROL  R31
0009c9 1f66      	ROL  R22
0009ca 1c11      	ROL  R1
0009cb cff9      	RJMP __CDF12
                 __CDF13:
0009cc 2fef      	MOV  R30,R31
0009cd 2ff6      	MOV  R31,R22
0009ce 2d61      	MOV  R22,R1
0009cf 935f      	PUSH R21
0009d0 df8a      	RCALL __REPACK
0009d1 915f      	POP  R21
                 __CDF10:
0009d2 9508      	RET
                 
                 __SWAPACC:
0009d3 934f      	PUSH R20
0009d4 01af      	MOVW R20,R30
0009d5 01fd      	MOVW R30,R26
0009d6 01da      	MOVW R26,R20
0009d7 01ab      	MOVW R20,R22
0009d8 01bc      	MOVW R22,R24
0009d9 01ca      	MOVW R24,R20
0009da 2d40      	MOV  R20,R0
0009db 2c01      	MOV  R0,R1
0009dc 2e14      	MOV  R1,R20
0009dd 914f      	POP  R20
0009de 9508      	RET
                 
                 __UADD12:
0009df 0fea      	ADD  R30,R26
0009e0 1ffb      	ADC  R31,R27
0009e1 1f68      	ADC  R22,R24
0009e2 9508      	RET
                 
                 __NEGMAN1:
0009e3 95e0      	COM  R30
0009e4 95f0      	COM  R31
0009e5 9560      	COM  R22
0009e6 5fef      	SUBI R30,-1
0009e7 4fff      	SBCI R31,-1
0009e8 4f6f      	SBCI R22,-1
0009e9 9508      	RET
                 
                 __SUBF12:
0009ea 935f      	PUSH R21
0009eb df81      	RCALL __UNPACK
0009ec 3890      	CPI  R25,0x80
0009ed f171      	BREQ __ADDF129
0009ee e850      	LDI  R21,0x80
0009ef 2615      	EOR  R1,R21
                 
0009f0 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0009f1 935f      	PUSH R21
0009f2 df7a      	RCALL __UNPACK
0009f3 3890      	CPI  R25,0x80
0009f4 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0009f5 3870      	CPI  R23,0x80
0009f6 f121      	BREQ __ADDF128
                 __ADDF121:
0009f7 2f57      	MOV  R21,R23
0009f8 1b59      	SUB  R21,R25
0009f9 f12b      	BRVS __ADDF1211
0009fa f412      	BRPL __ADDF122
0009fb dfd7      	RCALL __SWAPACC
0009fc cffa      	RJMP __ADDF121
                 __ADDF122:
0009fd 3158      	CPI  R21,24
0009fe f018      	BRLO __ADDF123
0009ff 27aa      	CLR  R26
000a00 27bb      	CLR  R27
000a01 2788      	CLR  R24
                 __ADDF123:
000a02 3058      	CPI  R21,8
000a03 f028      	BRLO __ADDF124
000a04 2fab      	MOV  R26,R27
000a05 2fb8      	MOV  R27,R24
000a06 2788      	CLR  R24
000a07 5058      	SUBI R21,8
000a08 cff9      	RJMP __ADDF123
                 __ADDF124:
000a09 2355      	TST  R21
000a0a f029      	BREQ __ADDF126
                 __ADDF125:
000a0b 9586      	LSR  R24
000a0c 95b7      	ROR  R27
000a0d 95a7      	ROR  R26
000a0e 955a      	DEC  R21
000a0f f7d9      	BRNE __ADDF125
                 __ADDF126:
000a10 2d50      	MOV  R21,R0
000a11 2551      	EOR  R21,R1
000a12 f072      	BRMI __ADDF127
000a13 dfcb      	RCALL __UADD12
000a14 f438      	BRCC __ADDF129
000a15 9567      	ROR  R22
000a16 95f7      	ROR  R31
000a17 95e7      	ROR  R30
000a18 9573      	INC  R23
000a19 f413      	BRVC __ADDF129
000a1a c020      	RJMP __MAXRES
                 __ADDF128:
000a1b dfb7      	RCALL __SWAPACC
                 __ADDF129:
000a1c df3e      	RCALL __REPACK
000a1d 915f      	POP  R21
000a1e 9508      	RET
                 __ADDF1211:
000a1f f7d8      	BRCC __ADDF128
000a20 cffb      	RJMP __ADDF129
                 __ADDF127:
000a21 1bea      	SUB  R30,R26
000a22 0bfb      	SBC  R31,R27
000a23 0b68      	SBC  R22,R24
000a24 f051      	BREQ __ZERORES
000a25 f410      	BRCC __ADDF1210
000a26 9400      	COM  R0
000a27 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000a28 2366      	TST  R22
000a29 f392      	BRMI __ADDF129
000a2a 0fee      	LSL  R30
000a2b 1fff      	ROL  R31
000a2c 1f66      	ROL  R22
000a2d 957a      	DEC  R23
000a2e f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000a2f 27ee      	CLR  R30
000a30 27ff      	CLR  R31
000a31 2766      	CLR  R22
000a32 2777      	CLR  R23
000a33 915f      	POP  R21
000a34 9508      	RET
                 
                 __MINRES:
000a35 efef      	SER  R30
000a36 efff      	SER  R31
000a37 e76f      	LDI  R22,0x7F
000a38 ef7f      	SER  R23
000a39 915f      	POP  R21
000a3a 9508      	RET
                 
                 __MAXRES:
000a3b efef      	SER  R30
000a3c efff      	SER  R31
000a3d e76f      	LDI  R22,0x7F
000a3e e77f      	LDI  R23,0x7F
000a3f 915f      	POP  R21
000a40 9508      	RET
                 
                 __MULF12:
000a41 935f      	PUSH R21
000a42 df2a      	RCALL __UNPACK
000a43 3870      	CPI  R23,0x80
000a44 f351      	BREQ __ZERORES
000a45 3890      	CPI  R25,0x80
000a46 f341      	BREQ __ZERORES
000a47 2401      	EOR  R0,R1
000a48 9408      	SEC
000a49 1f79      	ADC  R23,R25
000a4a f423      	BRVC __MULF124
000a4b f31c      	BRLT __ZERORES
                 __MULF125:
000a4c 2000      	TST  R0
000a4d f33a      	BRMI __MINRES
000a4e cfec      	RJMP __MAXRES
                 __MULF124:
000a4f 920f      	PUSH R0
000a50 931f      	PUSH R17
000a51 932f      	PUSH R18
000a52 933f      	PUSH R19
000a53 934f      	PUSH R20
000a54 2711      	CLR  R17
000a55 2722      	CLR  R18
000a56 2799      	CLR  R25
000a57 9f68      	MUL  R22,R24
000a58 01a0      	MOVW R20,R0
000a59 9f8f      	MUL  R24,R31
000a5a 2d30      	MOV  R19,R0
000a5b 0d41      	ADD  R20,R1
000a5c 1f59      	ADC  R21,R25
000a5d 9f6b      	MUL  R22,R27
000a5e 0d30      	ADD  R19,R0
000a5f 1d41      	ADC  R20,R1
000a60 1f59      	ADC  R21,R25
000a61 9f8e      	MUL  R24,R30
000a62 d027      	RCALL __MULF126
000a63 9fbf      	MUL  R27,R31
000a64 d025      	RCALL __MULF126
000a65 9f6a      	MUL  R22,R26
000a66 d023      	RCALL __MULF126
000a67 9fbe      	MUL  R27,R30
000a68 d01d      	RCALL __MULF127
000a69 9faf      	MUL  R26,R31
000a6a d01b      	RCALL __MULF127
000a6b 9fae      	MUL  R26,R30
000a6c 0d11      	ADD  R17,R1
000a6d 1f29      	ADC  R18,R25
000a6e 1f39      	ADC  R19,R25
000a6f 1f49      	ADC  R20,R25
000a70 1f59      	ADC  R21,R25
000a71 2fe3      	MOV  R30,R19
000a72 2ff4      	MOV  R31,R20
000a73 2f65      	MOV  R22,R21
000a74 2f52      	MOV  R21,R18
000a75 914f      	POP  R20
000a76 913f      	POP  R19
000a77 912f      	POP  R18
000a78 911f      	POP  R17
000a79 900f      	POP  R0
000a7a 2366      	TST  R22
000a7b f02a      	BRMI __MULF122
000a7c 0f55      	LSL  R21
000a7d 1fee      	ROL  R30
000a7e 1fff      	ROL  R31
000a7f 1f66      	ROL  R22
000a80 c002      	RJMP __MULF123
                 __MULF122:
000a81 9573      	INC  R23
000a82 f24b      	BRVS __MULF125
                 __MULF123:
000a83 decd      	RCALL __ROUND_REPACK
000a84 915f      	POP  R21
000a85 9508      	RET
                 
                 __MULF127:
000a86 0d10      	ADD  R17,R0
000a87 1d21      	ADC  R18,R1
000a88 1f39      	ADC  R19,R25
000a89 c002      	RJMP __MULF128
                 __MULF126:
000a8a 0d20      	ADD  R18,R0
000a8b 1d31      	ADC  R19,R1
                 __MULF128:
000a8c 1f49      	ADC  R20,R25
000a8d 1f59      	ADC  R21,R25
000a8e 9508      	RET
                 
                 __DIVF21:
000a8f 935f      	PUSH R21
000a90 dedc      	RCALL __UNPACK
000a91 3870      	CPI  R23,0x80
000a92 f421      	BRNE __DIVF210
000a93 2011      	TST  R1
                 __DIVF211:
000a94 f40a      	BRPL __DIVF219
000a95 cf9f      	RJMP __MINRES
                 __DIVF219:
000a96 cfa4      	RJMP __MAXRES
                 __DIVF210:
000a97 3890      	CPI  R25,0x80
000a98 f409      	BRNE __DIVF218
                 __DIVF217:
000a99 cf95      	RJMP __ZERORES
                 __DIVF218:
000a9a 2401      	EOR  R0,R1
000a9b 9408      	SEC
000a9c 0b97      	SBC  R25,R23
000a9d f41b      	BRVC __DIVF216
000a9e f3d4      	BRLT __DIVF217
000a9f 2000      	TST  R0
000aa0 cff3      	RJMP __DIVF211
                 __DIVF216:
000aa1 2f79      	MOV  R23,R25
000aa2 931f      	PUSH R17
000aa3 932f      	PUSH R18
000aa4 933f      	PUSH R19
000aa5 934f      	PUSH R20
000aa6 2411      	CLR  R1
000aa7 2711      	CLR  R17
000aa8 2722      	CLR  R18
000aa9 2733      	CLR  R19
000aaa 2744      	CLR  R20
000aab 2755      	CLR  R21
000aac e290      	LDI  R25,32
                 __DIVF212:
000aad 17ae      	CP   R26,R30
000aae 07bf      	CPC  R27,R31
000aaf 0786      	CPC  R24,R22
000ab0 0741      	CPC  R20,R17
000ab1 f030      	BRLO __DIVF213
000ab2 1bae      	SUB  R26,R30
000ab3 0bbf      	SBC  R27,R31
000ab4 0b86      	SBC  R24,R22
000ab5 0b41      	SBC  R20,R17
000ab6 9408      	SEC
000ab7 c001      	RJMP __DIVF214
                 __DIVF213:
000ab8 9488      	CLC
                 __DIVF214:
000ab9 1f55      	ROL  R21
000aba 1f22      	ROL  R18
000abb 1f33      	ROL  R19
000abc 1c11      	ROL  R1
000abd 1faa      	ROL  R26
000abe 1fbb      	ROL  R27
000abf 1f88      	ROL  R24
000ac0 1f44      	ROL  R20
000ac1 959a      	DEC  R25
000ac2 f751      	BRNE __DIVF212
000ac3 01f9      	MOVW R30,R18
000ac4 2d61      	MOV  R22,R1
000ac5 914f      	POP  R20
000ac6 913f      	POP  R19
000ac7 912f      	POP  R18
000ac8 911f      	POP  R17
000ac9 2366      	TST  R22
000aca f032      	BRMI __DIVF215
000acb 0f55      	LSL  R21
000acc 1fee      	ROL  R30
000acd 1fff      	ROL  R31
000ace 1f66      	ROL  R22
000acf 957a      	DEC  R23
000ad0 f243      	BRVS __DIVF217
                 __DIVF215:
000ad1 de7f      	RCALL __ROUND_REPACK
000ad2 915f      	POP  R21
000ad3 9508      	RET
                 
                 __CMPF12:
000ad4 2399      	TST  R25
000ad5 f09a      	BRMI __CMPF120
000ad6 2377      	TST  R23
000ad7 f042      	BRMI __CMPF121
000ad8 1797      	CP   R25,R23
000ad9 f048      	BRLO __CMPF122
000ada f429      	BRNE __CMPF121
000adb 17ae      	CP   R26,R30
000adc 07bf      	CPC  R27,R31
000add 0786      	CPC  R24,R22
000ade f020      	BRLO __CMPF122
000adf f031      	BREQ __CMPF123
                 __CMPF121:
000ae0 9498      	CLZ
000ae1 9488      	CLC
000ae2 9508      	RET
                 __CMPF122:
000ae3 9498      	CLZ
000ae4 9408      	SEC
000ae5 9508      	RET
                 __CMPF123:
000ae6 9418      	SEZ
000ae7 9488      	CLC
000ae8 9508      	RET
                 __CMPF120:
000ae9 2377      	TST  R23
000aea f7c2      	BRPL __CMPF122
000aeb 1797      	CP   R25,R23
000aec f398      	BRLO __CMPF121
000aed f7a9      	BRNE __CMPF122
000aee 17ea      	CP   R30,R26
000aef 07fb      	CPC  R31,R27
000af0 0768      	CPC  R22,R24
000af1 f388      	BRLO __CMPF122
000af2 f399      	BREQ __CMPF123
000af3 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000af4 2400      	CLR  R0
000af5 0daf      	ADD  R26,R15
000af6 1db0      	ADC  R27,R0
000af7 9508      	RET
                 
                 __ANEGD1:
000af8 95f0      	COM  R31
000af9 9560      	COM  R22
000afa 9570      	COM  R23
000afb 95e1      	NEG  R30
000afc 4fff      	SBCI R31,-1
000afd 4f6f      	SBCI R22,-1
000afe 4f7f      	SBCI R23,-1
000aff 9508      	RET
                 
                 __ASRW8:
000b00 2fef      	MOV  R30,R31
000b01 27ff      	CLR  R31
000b02 fde7      	SBRC R30,7
000b03 efff      	SER  R31
000b04 9508      	RET
                 
                 __CBD1:
000b05 2ffe      	MOV  R31,R30
000b06 0fff      	ADD  R31,R31
000b07 0bff      	SBC  R31,R31
000b08 2f6f      	MOV  R22,R31
000b09 2f7f      	MOV  R23,R31
000b0a 9508      	RET
                 
                 __CWD1:
000b0b 2f6f      	MOV  R22,R31
000b0c 0f66      	ADD  R22,R22
000b0d 0b66      	SBC  R22,R22
000b0e 2f76      	MOV  R23,R22
000b0f 9508      	RET
                 
                 __MULW12U:
000b10 9ffa      	MUL  R31,R26
000b11 2df0      	MOV  R31,R0
000b12 9feb      	MUL  R30,R27
000b13 0df0      	ADD  R31,R0
000b14 9fea      	MUL  R30,R26
000b15 2de0      	MOV  R30,R0
000b16 0df1      	ADD  R31,R1
000b17 9508      	RET
                 
                 __DIVB21U:
000b18 2400      	CLR  R0
000b19 e098      	LDI  R25,8
                 __DIVB21U1:
000b1a 0faa      	LSL  R26
000b1b 1c00      	ROL  R0
000b1c 1a0e      	SUB  R0,R30
000b1d f410      	BRCC __DIVB21U2
000b1e 0e0e      	ADD  R0,R30
000b1f c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000b20 60a1      	SBR  R26,1
                 __DIVB21U3:
000b21 959a      	DEC  R25
000b22 f7b9      	BRNE __DIVB21U1
000b23 2fea      	MOV  R30,R26
000b24 2da0      	MOV  R26,R0
000b25 9508      	RET
                 
                 __DIVB21:
000b26 d039      	RCALL __CHKSIGNB
000b27 dff0      	RCALL __DIVB21U
000b28 f40e      	BRTC __DIVB211
000b29 95e1      	NEG  R30
                 __DIVB211:
000b2a 9508      	RET
                 
                 __DIVD21U:
000b2b 933f      	PUSH R19
000b2c 934f      	PUSH R20
000b2d 935f      	PUSH R21
000b2e 2400      	CLR  R0
000b2f 2411      	CLR  R1
000b30 2744      	CLR  R20
000b31 2755      	CLR  R21
000b32 e230      	LDI  R19,32
                 __DIVD21U1:
000b33 0faa      	LSL  R26
000b34 1fbb      	ROL  R27
000b35 1f88      	ROL  R24
000b36 1f99      	ROL  R25
000b37 1c00      	ROL  R0
000b38 1c11      	ROL  R1
000b39 1f44      	ROL  R20
000b3a 1f55      	ROL  R21
000b3b 1a0e      	SUB  R0,R30
000b3c 0a1f      	SBC  R1,R31
000b3d 0b46      	SBC  R20,R22
000b3e 0b57      	SBC  R21,R23
000b3f f428      	BRCC __DIVD21U2
000b40 0e0e      	ADD  R0,R30
000b41 1e1f      	ADC  R1,R31
000b42 1f46      	ADC  R20,R22
000b43 1f57      	ADC  R21,R23
000b44 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000b45 60a1      	SBR  R26,1
                 __DIVD21U3:
000b46 953a      	DEC  R19
000b47 f759      	BRNE __DIVD21U1
000b48 01fd      	MOVW R30,R26
000b49 01bc      	MOVW R22,R24
000b4a 01d0      	MOVW R26,R0
000b4b 01ca      	MOVW R24,R20
000b4c 915f      	POP  R21
000b4d 914f      	POP  R20
000b4e 913f      	POP  R19
000b4f 9508      	RET
                 
                 __MODB21:
000b50 94e8      	CLT
000b51 ffa7      	SBRS R26,7
000b52 c002      	RJMP __MODB211
000b53 95a1      	NEG  R26
000b54 9468      	SET
                 __MODB211:
000b55 fde7      	SBRC R30,7
000b56 95e1      	NEG  R30
000b57 dfc0      	RCALL __DIVB21U
000b58 2fea      	MOV  R30,R26
000b59 f40e      	BRTC __MODB212
000b5a 95e1      	NEG  R30
                 __MODB212:
000b5b 9508      	RET
                 
                 __MODD21U:
000b5c dfce      	RCALL __DIVD21U
000b5d 01fd      	MOVW R30,R26
000b5e 01bc      	MOVW R22,R24
000b5f 9508      	RET
                 
                 __CHKSIGNB:
000b60 94e8      	CLT
000b61 ffe7      	SBRS R30,7
000b62 c002      	RJMP __CHKSB1
000b63 95e1      	NEG  R30
000b64 9468      	SET
                 __CHKSB1:
000b65 ffa7      	SBRS R26,7
000b66 c004      	RJMP __CHKSB2
000b67 95a1      	NEG  R26
000b68 f800      	BLD  R0,0
000b69 9403      	INC  R0
000b6a fa00      	BST  R0,0
                 __CHKSB2:
000b6b 9508      	RET
                 
                 __GETW1P:
000b6c 91ed      	LD   R30,X+
000b6d 91fc      	LD   R31,X
000b6e 9711      	SBIW R26,1
000b6f 9508      	RET
                 
                 __GETD1P:
000b70 91ed      	LD   R30,X+
000b71 91fd      	LD   R31,X+
000b72 916d      	LD   R22,X+
000b73 917c      	LD   R23,X
000b74 9713      	SBIW R26,3
000b75 9508      	RET
                 
                 __GETD1S0:
000b76 81e8      	LD   R30,Y
000b77 81f9      	LDD  R31,Y+1
000b78 816a      	LDD  R22,Y+2
000b79 817b      	LDD  R23,Y+3
000b7a 9508      	RET
                 
                 __PUTD1S0:
000b7b 83e8      	ST   Y,R30
000b7c 83f9      	STD  Y+1,R31
000b7d 836a      	STD  Y+2,R22
000b7e 837b      	STD  Y+3,R23
000b7f 9508      	RET
                 
                 __PUTPARD1:
000b80 937a      	ST   -Y,R23
000b81 936a      	ST   -Y,R22
000b82 93fa      	ST   -Y,R31
000b83 93ea      	ST   -Y,R30
000b84 9508      	RET
                 
                 __SWAPD12:
000b85 2e18      	MOV  R1,R24
000b86 2f86      	MOV  R24,R22
000b87 2d61      	MOV  R22,R1
000b88 2e19      	MOV  R1,R25
000b89 2f97      	MOV  R25,R23
000b8a 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000b8b 2e1b      	MOV  R1,R27
000b8c 2fbf      	MOV  R27,R31
000b8d 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000b8e 2e1a      	MOV  R1,R26
000b8f 2fae      	MOV  R26,R30
000b90 2de1      	MOV  R30,R1
000b91 9508      	RET
                 
                 __CPD10:
000b92 9730      	SBIW R30,0
000b93 4060      	SBCI R22,0
000b94 4070      	SBCI R23,0
000b95 9508      	RET
                 
                 __SAVELOCR6:
000b96 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b97 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b98 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b99 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b9a 931a      	ST   -Y,R17
000b9b 930a      	ST   -Y,R16
000b9c 9508      	RET
                 
                 __LOADLOCR6:
000b9d 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b9e 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b9f 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ba0 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000ba1 8119      	LDD  R17,Y+1
000ba2 8108      	LD   R16,Y
000ba3 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000ba4 0fac      	ADD  R26,R28
000ba5 1fbd      	ADC  R27,R29
                 __INITLOC0:
000ba6 9005      	LPM  R0,Z+
000ba7 920d      	ST   X+,R0
000ba8 958a      	DEC  R24
000ba9 f7e1      	BRNE __INITLOC0
000baa 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  74 r1 :  39 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   4 r7 :   1 
r8 :   0 r9 :   3 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  61 r17:  86 r18:  56 r19:  62 r20:  66 r21: 100 r22: 111 r23:  99 
r24:  63 r25:  59 r26: 192 r27:  90 r28:  53 r29:   2 r30: 579 r31: 255 
x  :  69 y  : 470 z  :  39 
Registers used: 27 out of 35 (77.1%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  24 add   :  19 
adiw  :  44 and   :   5 andi  :   9 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   5 break :   0 breq  :  61 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   2 brmi  :  11 brne  :  74 brpl  :   9 brsh  :  10 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 204 
cbi   :   1 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  57 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  18 cpc   :  18 cpi   : 119 cpse  :   0 dec   :  12 des   :   0 
elpm  :   0 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  18 inc   :   7 jmp   :  46 ld    :  78 ldd   : 223 
ldi   : 248 lds   :   4 lpm   :  16 lsl   :  14 lsr   :   3 mov   : 105 
movw  :  67 mul   :  15 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 
or    :   0 ori   :   8 out   :  18 pop   :  31 push  :  31 rcall :  73 
ret   : 104 reti  :   3 rjmp  : 169 rol   :  32 ror   :  15 sbc   :  11 
sbci  :  29 sbi   :   1 sbic  :   0 sbis  :   0 sbiw  :  37 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 160 std   : 103 sts   :  11 sub   :   6 subi  :  65 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 79 out of 117 (67.5%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001756   5802    172   5974  131072   4.6%
[.dseg] 0x000100 0x00057c      0    124    124    4351   2.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 9 warnings
