
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Thu Feb 20 15:59:49 2020

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01da 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0759 	JMP  _hall_sensor_detection1
00000c 940c 0768 	JMP  _hall_sensor_detection2
00000e 940c 0775 	JMP  _hall_sensor_detection3
000010 940c 0789 	JMP  _hall_sensor_detection4
000012 940c 0546 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0559 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0552 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 0581 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 05a2 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x3:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 0000
000169 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016a 0000
00016b 0000
00016c 0000
00016d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0000
000174 0000
000175 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000176 0000
000177 0000
000178 0000
000179 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
00017a 253c
00017b 2c64
00017c 6425
00017d 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00017e 3e64
00017f 2500
000180 6434
000181 202c      	.DB  0x64,0x3E,0x0,0x25,0x34,0x64,0x2C,0x20
000182 3425
000183 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1184): warning: .cseg .db misalignment - padding zero byte
000184 0000      	.DB  0x25,0x34,0x64,0xA,0x0
                 _0x80003:
000185 0000
000186 0000
000187 0000
000188 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000189 0000
00018a 0000
00018b 0000
00018c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00018d 0000
00018e 0000
00018f 0000
000190 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000191 0000
000192 0000
000193 0000
000194 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000195 0000
000196 0000
000197 0000
000198 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000199 0000
00019a 0000
00019b 0000
00019c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00019d 0000
00019e 0000
00019f 0000
0001a0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a1 0000
0001a2 0000
0001a3 0000
0001a4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a5 0000
0001a6 0000
0001a7 0000
0001a8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a9 0000
0001aa 0000
0001ab 0000
0001ac 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ad 0000
0001ae 0000
0001af 0000
0001b0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b1 0000
0001b2 0000
0001b3 0000
0001b4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b5 0000
0001b6 0000
0001b7 0000
0001b8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b9 0000
0001ba 0000
0001bb 0000
0001bc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001bd 0000
0001be 0000
0001bf 0000
0001c0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c1 0000
0001c2 0000
0001c3 0000
0001c4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c5 0000
0001c6 0000
0001c7 0000
0001c8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c9 0000
0001ca 0000
0001cb 0000
0001cc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x2000000:
0001cd 4e2d
0001ce 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1205): warning: .cseg .db misalignment - padding zero byte
0001cf 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1207): warning: .cseg .db misalignment - padding zero byte
0001d0 0001      	.DB  0x1
                 _0x2080000:
0001d1 4e2d
0001d2 4e41
0001d3 4900
0001d4 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1210): warning: .cseg .db misalignment - padding zero byte
0001d5 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001d6 0001      	.DW  0x01
0001d7 0588      	.DW  __seed_G104
0001d8 03a0      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
0001d9 0000      	.DW  0
                 
                 __RESET:
0001da 94f8      	CLI
0001db 27ee      	CLR  R30
0001dc bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001dd e0f1      	LDI  R31,1
0001de bff5      	OUT  MCUCR,R31
0001df bfe5      	OUT  MCUCR,R30
0001e0 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001e2 e1f8      	LDI  R31,0x18
0001e3 bdf1      	OUT  WDTCR,R31
0001e4 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001e5 e08d      	LDI  R24,(14-2)+1
0001e6 e0a2      	LDI  R26,2
0001e7 27bb      	CLR  R27
                 __CLEAR_REG:
0001e8 93ed      	ST   X+,R30
0001e9 958a      	DEC  R24
0001ea f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001eb e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001ec e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001ed e0a0      	LDI  R26,LOW(__SRAM_START)
0001ee e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001ef 93ed      	ST   X+,R30
0001f0 9701      	SBIW R24,1
0001f1 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001f2 eaec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001f3 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001f4 9185      	LPM  R24,Z+
0001f5 9195      	LPM  R25,Z+
0001f6 9700      	SBIW R24,0
0001f7 f061      	BREQ __GLOBAL_INI_END
0001f8 91a5      	LPM  R26,Z+
0001f9 91b5      	LPM  R27,Z+
0001fa 9005      	LPM  R0,Z+
0001fb 9015      	LPM  R1,Z+
0001fc 01bf      	MOVW R22,R30
0001fd 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001fe 9005      	LPM  R0,Z+
0001ff 920d      	ST   X+,R0
000200 9701      	SBIW R24,1
000201 f7e1      	BRNE __GLOBAL_INI_LOOP
000202 01fb      	MOVW R30,R22
000203 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000204 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000205 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000206 bfed      	OUT  SPL,R30
000207 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000208 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000209 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00020a e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00020b 940c 020d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;#include "ext_int.h"
                 ;
                 ;#define Pi 3.141592
                 ;
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;long int MOTORR_HALL = 0;
                 ;long int MOTORL_HALL = 0;
                 ;
                 ;void main(void)
                 ; 0000 001B {
                 
                 	.CSEG
                 _main:
                 ; 0000 001C     float a_buff;
                 ; 0000 001D     float v_buff;
                 ; 0000 001E 
                 ; 0000 001F     int velocity = 0;
                 ; 0000 0020     int angularV = 0;
                 ; 0000 0021     int velocity_R = 0;
                 ; 0000 0022     int velocity_L = 0;
                 ; 0000 0023     int del_ms = 0;
                 ; 0000 0024 
                 ; 0000 0025     int currentRPM_R = 0;
                 ; 0000 0026     int currentRPM_L = 0;
                 ; 0000 0027     float currentV_R = 0;
                 ; 0000 0028     float currentV_L = 0;
                 ; 0000 0029     int goal_current_R = 0;
                 ; 0000 002A     int goal_current_L = 0;
                 ; 0000 002B     float goal_currentV_R = 0;
                 ; 0000 002C     float goal_currentV_L = 0;
                 ; 0000 002D 
                 ; 0000 002E 
                 ; 0000 002F     float d_velocity = 0;
                 ; 0000 0030     float d_angularV = 0;
                 ; 0000 0031     float control_time = 0;
                 ; 0000 0032     float g_velocity = 0;
                 ; 0000 0033     float g_angularV = 0;
                 ; 0000 0034 
                 ; 0000 0035     float d_x = 0;
                 ; 0000 0036     float d_y = 0;
                 ; 0000 0037     float d_angular = 0;
                 ; 0000 0038     int d_angular_circula = 0;
                 ; 0000 0039     float g_x = 0;
                 ; 0000 003A     float g_y = 0;
                 ; 0000 003B     float g_angular = 0;
                 ; 0000 003C     int g_angular_circula = 0;
                 ; 0000 003D 
                 ; 0000 003E     float TIMER1_TIME = 0;
                 ; 0000 003F     float TIMER0_TIME = 0;
                 ; 0000 0040     float TIMER0_TIME_print = 0;
                 ; 0000 0041 
                 ; 0000 0042     char rootine_test = 0;
                 ; 0000 0043     char STOP_FLAG = 0;
                 ; 0000 0044 
                 ; 0000 0045 
                 ; 0000 0046     float hall_x = 0;
                 ; 0000 0047     float hall_y = 0;
                 ; 0000 0048     float hall_angular = 0;
                 ; 0000 0049     int hall_angular_circula = 0;
                 ; 0000 004A 
                 ; 0000 004B     float motorR_distance = 0;
                 ; 0000 004C     float motorL_distance = 0;
                 ; 0000 004D     float a =0;
                 ; 0000 004E 
                 ; 0000 004F     unsigned char BUFF[500] = {0,};
                 ; 0000 0050 
                 ; 0000 0051     usart1_init(bps_115200);
00020d 97ef      	SBIW R28,63
00020e 97e1      	SBIW R28,49
00020f 50d2      	SUBI R29,2
                +
000210 e688     +LDI R24 , LOW ( 616 )
000211 e092     +LDI R25 , HIGH ( 616 )
                 	__GETWRN 24,25,616
000212 e0a0      	LDI  R26,LOW(0)
000213 e0b0      	LDI  R27,HIGH(0)
000214 e8ec      	LDI  R30,LOW(_0x3*2)
000215 e0f0      	LDI  R31,HIGH(_0x3*2)
000216 940e 13da 	CALL __INITLOCW
                 ;	a_buff -> Y+620
                 ;	v_buff -> Y+616
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+614
                 ;	del_ms -> Y+612
                 ;	currentRPM_R -> Y+610
                 ;	currentRPM_L -> Y+608
                 ;	currentV_R -> Y+604
                 ;	currentV_L -> Y+600
                 ;	goal_current_R -> Y+598
                 ;	goal_current_L -> Y+596
                 ;	goal_currentV_R -> Y+592
                 ;	goal_currentV_L -> Y+588
                 ;	d_velocity -> Y+584
                 ;	d_angularV -> Y+580
                 ;	control_time -> Y+576
                 ;	g_velocity -> Y+572
                 ;	g_angularV -> Y+568
                 ;	d_x -> Y+564
                 ;	d_y -> Y+560
                 ;	d_angular -> Y+556
                 ;	d_angular_circula -> Y+554
                 ;	g_x -> Y+550
                 ;	g_y -> Y+546
                 ;	g_angular -> Y+542
                 ;	g_angular_circula -> Y+540
                 ;	TIMER1_TIME -> Y+536
                 ;	TIMER0_TIME -> Y+532
                 ;	TIMER0_TIME_print -> Y+528
                 ;	rootine_test -> Y+527
                 ;	STOP_FLAG -> Y+526
                 ;	hall_x -> Y+522
                 ;	hall_y -> Y+518
                 ;	hall_angular -> Y+514
                 ;	hall_angular_circula -> Y+512
                 ;	motorR_distance -> Y+508
                 ;	motorL_distance -> Y+504
                 ;	a -> Y+500
                 ;	BUFF -> Y+0
                +
000218 e000     +LDI R16 , LOW ( 0 )
000219 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00021a e020     +LDI R18 , LOW ( 0 )
00021b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00021c e040     +LDI R20 , LOW ( 0 )
00021d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00021e e0e7      	LDI  R30,LOW(7)
00021f e0f0      	LDI  R31,HIGH(7)
000220 93fa      	ST   -Y,R31
000221 93ea      	ST   -Y,R30
000222 940e 05d9 	CALL _usart1_init
                 ; 0000 0052     usart0_init(bps_115200);
000224 e0e7      	LDI  R30,LOW(7)
000225 e0f0      	LDI  R31,HIGH(7)
000226 93fa      	ST   -Y,R31
000227 93ea      	ST   -Y,R30
000228 940e 05f1 	CALL _usart0_init
                 ; 0000 0053     timer2_init();
00022a d33e      	RCALL _timer2_init
                 ; 0000 0054     timer0_init();
00022b 940e 056f 	CALL _timer0_init
                 ; 0000 0055     timer1_init();
00022d 940e 0573 	CALL _timer1_init
                 ; 0000 0056     EXT_INT_init();
00022f 940e 0750 	CALL _EXT_INT_init
                 ; 0000 0057     SREG |= 0x80;
000231 9478      	BSET 7
                 ; 0000 0058     DDRB.1 = 1;
000232 9ab9      	SBI  0x17,1
                 ; 0000 0059     DDRB.2 = 1;
000233 9aba      	SBI  0x17,2
                 ; 0000 005A     DDRB.3 = 1;
000234 9abb      	SBI  0x17,3
                 ; 0000 005B     delay_ms(5000);
000235 e8e8      	LDI  R30,LOW(5000)
000236 e1f3      	LDI  R31,HIGH(5000)
000237 940e 0e3d 	CALL SUBOPT_0x0
                 ; 0000 005C 
                 ; 0000 005D     TIMER0_OVERFLOW = 0;
000239 940e 0e41 	CALL SUBOPT_0x1
                 ; 0000 005E     TCNT0 = 0;
                 ; 0000 005F 
                 ; 0000 0060     while(1)
                 _0xA:
                 ; 0000 0061     {
                 ; 0000 0062         if(CHECK_GETS)
00023b 91e0 057f 	LDS  R30,_CHECK_GETS
00023d 30e0      	CPI  R30,0
00023e f411      	BRNE PC+3
00023f 940c 02db 	JMP _0xD
                 ; 0000 0063         {
                 ; 0000 0064             UCSR1B &= ~(1<<RXEN1);
000241 91e0 009a 	LDS  R30,154
000243 7eef      	ANDI R30,0xEF
000244 93e0 009a 	STS  154,R30
                 ; 0000 0065             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
000246 e6ea      	LDI  R30,LOW(_VELOCITY_BUFF)
000247 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
000248 93fa      	ST   -Y,R31
000249 93ea      	ST   -Y,R30
                +
00024a efe4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00024b e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00024c 93fa      	ST   -Y,R31
00024d 93ea      	ST   -Y,R30
00024e b7ed      	IN   R30,SPL
00024f b7fe      	IN   R31,SPH
000250 9731      	SBIW R30,1
000251 940e 13a9 	CALL __PUTPARD1L
000253 931f      	PUSH R17
000254 930f      	PUSH R16
000255 b7ed      	IN   R30,SPL
000256 b7fe      	IN   R31,SPH
000257 9731      	SBIW R30,1
000258 940e 13a9 	CALL __PUTPARD1L
00025a 933f      	PUSH R19
00025b 932f      	PUSH R18
00025c 01fe      	MOVW R30,R28
00025d 59e0      	SUBI R30,LOW(-(624))
00025e 4ffd      	SBCI R31,HIGH(-(624))
00025f 2766      	CLR  R22
000260 2777      	CLR  R23
000261 940e 13ab 	CALL __PUTPARD1
000263 e08c      	LDI  R24,12
000264 940e 0c59 	CALL _sscanf
000266 9660      	ADIW R28,16
000267 912f      	POP  R18
000268 913f      	POP  R19
000269 910f      	POP  R16
00026a 911f      	POP  R17
                 ; 0000 0066             // sscanf(VELOCITY_BUFF,"<%f,%f,%d>", &goal_x, &goal_y, &goal_angular);
                 ; 0000 0067 
                 ; 0000 0068             if(!del_ms){
                +
00026b 01fe     +MOVW R30 , R28
00026c 59ec     +SUBI R30 , LOW ( - 612 )
00026d 4ffd     +SBCI R31 , HIGH ( - 612 )
00026e 9001     +LD R0 , Z +
00026f 81f0     +LD R31 , Z
000270 2de0     +MOV R30 , R0
                 	__GETW1SX 612
000271 9730      	SBIW R30,0
000272 f4b1      	BRNE _0xE
                 ; 0000 0069                 d_x = 0;
000273 e0e0      	LDI  R30,LOW(0)
                +
000274 01de     +MOVW R26 , R28
000275 5cac     +SUBI R26 , LOW ( - 564 )
000276 4fbd     +SBCI R27 , HIGH ( - 564 )
000277 93ed     +ST X + , R30
000278 93ed     +ST X + , R30
000279 93ed     +ST X + , R30
00027a 93ec     +ST X , R30
                 	__CLRD1SX 564
                 ; 0000 006A                 d_y = 0;
                +
00027b 01de     +MOVW R26 , R28
00027c 5da0     +SUBI R26 , LOW ( - 560 )
00027d 4fbd     +SBCI R27 , HIGH ( - 560 )
00027e 93ed     +ST X + , R30
00027f 93ed     +ST X + , R30
000280 93ed     +ST X + , R30
000281 93ec     +ST X , R30
                 	__CLRD1SX 560
                 ; 0000 006B                 d_angular = 0;
                +
000282 01de     +MOVW R26 , R28
000283 5da4     +SUBI R26 , LOW ( - 556 )
000284 4fbd     +SBCI R27 , HIGH ( - 556 )
000285 93ed     +ST X + , R30
000286 93ed     +ST X + , R30
000287 93ed     +ST X + , R30
000288 93ec     +ST X , R30
                 	__CLRD1SX 556
                 ; 0000 006C             }
                 ; 0000 006D 
                 ; 0000 006E             v_buff = (float)velocity/1000;
                 _0xE:
000289 01f8      	MOVW R30,R16
00028a 940e 0e48 	CALL SUBOPT_0x2
                +
00028c 01de     +MOVW R26 , R28
00028d 59a8     +SUBI R26 , LOW ( - 616 )
00028e 4fbd     +SBCI R27 , HIGH ( - 616 )
00028f 93ed     +ST X + , R30
000290 93fd     +ST X + , R31
000291 936d     +ST X + , R22
000292 937c     +ST X , R23
                 	__PUTD1SX 616
                 ; 0000 006F             a_buff = (float)angularV/1000;
000293 01f9      	MOVW R30,R18
000294 940e 0e48 	CALL SUBOPT_0x2
                +
000296 01de     +MOVW R26 , R28
000297 59a4     +SUBI R26 , LOW ( - 620 )
000298 4fbd     +SBCI R27 , HIGH ( - 620 )
000299 93ed     +ST X + , R30
00029a 93fd     +ST X + , R31
00029b 936d     +ST X + , R22
00029c 937c     +ST X , R23
                 	__PUTD1SX 620
                 ; 0000 0070 
                 ; 0000 0071             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
00029d 01fe      	MOVW R30,R28
00029e 59e8      	SUBI R30,LOW(-(616))
00029f 4ffd      	SBCI R31,HIGH(-(616))
0002a0 93fa      	ST   -Y,R31
0002a1 93ea      	ST   -Y,R30
0002a2 01fe      	MOVW R30,R28
0002a3 59e2      	SUBI R30,LOW(-(622))
0002a4 4ffd      	SBCI R31,HIGH(-(622))
0002a5 93fa      	ST   -Y,R31
0002a6 93ea      	ST   -Y,R30
0002a7 b7ed      	IN   R30,SPL
0002a8 b7fe      	IN   R31,SPH
0002a9 9731      	SBIW R30,1
0002aa 93fa      	ST   -Y,R31
0002ab 93ea      	ST   -Y,R30
0002ac 935f      	PUSH R21
0002ad 934f      	PUSH R20
0002ae 01fe      	MOVW R30,R28
0002af 59e4      	SUBI R30,LOW(-(620))
0002b0 4ffd      	SBCI R31,HIGH(-(620))
0002b1 93fa      	ST   -Y,R31
0002b2 93ea      	ST   -Y,R30
0002b3 940e 0684 	CALL _Make_MSPEED
0002b5 914f      	POP  R20
0002b6 915f      	POP  R21
                 ; 0000 0072 
                 ; 0000 0073             oper_Disapath(velocity_R, velocity_L);
0002b7 935a      	ST   -Y,R21
0002b8 934a      	ST   -Y,R20
                +
0002b9 01fe     +MOVW R30 , R28
0002ba 59e8     +SUBI R30 , LOW ( - 616 )
0002bb 4ffd     +SBCI R31 , HIGH ( - 616 )
0002bc 9001     +LD R0 , Z +
0002bd 81f0     +LD R31 , Z
0002be 2de0     +MOV R30 , R0
                 	__GETW1SX 616
0002bf 93fa      	ST   -Y,R31
0002c0 93ea      	ST   -Y,R30
0002c1 940e 06fc 	CALL _oper_Disapath
                 ; 0000 0074 
                 ; 0000 0075             TIMER1_TIME = 0;
0002c3 e0e0      	LDI  R30,LOW(0)
                +
0002c4 01de     +MOVW R26 , R28
0002c5 5ea8     +SUBI R26 , LOW ( - 536 )
0002c6 4fbd     +SBCI R27 , HIGH ( - 536 )
0002c7 93ed     +ST X + , R30
0002c8 93ed     +ST X + , R30
0002c9 93ed     +ST X + , R30
0002ca 93ec     +ST X , R30
                 	__CLRD1SX 536
                 ; 0000 0076             TIMER1_OVERFLOW = 0;
0002cb 940e 0e55 	CALL SUBOPT_0x3
                 ; 0000 0077             TCNT1L = 0;
0002cd bdec      	OUT  0x2C,R30
                 ; 0000 0078 
                 ; 0000 0079             // rootine_test = 1;
                 ; 0000 007A             STOP_FLAG = 1;
0002ce e0e1      	LDI  R30,LOW(1)
                +
0002cf 01de     +MOVW R26 , R28
0002d0 5fa2     +SUBI R26 , LOW ( - 526 )
0002d1 4fbd     +SBCI R27 , HIGH ( - 526 )
0002d2 93ec     +ST X , R30
                 	__PUTB1SX 526
                 ; 0000 007B             CHECK_GETS = 0;
0002d3 e0e0      	LDI  R30,LOW(0)
0002d4 93e0 057f 	STS  _CHECK_GETS,R30
                 ; 0000 007C             UCSR1B |=(1<<RXEN1);
0002d6 91e0 009a 	LDS  R30,154
0002d8 61e0      	ORI  R30,0x10
0002d9 93e0 009a 	STS  154,R30
                 ; 0000 007D         }
                 ; 0000 007E 
                 ; 0000 007F         // if(rootine_test == 0)
                 ; 0000 0080         // {
                 ; 0000 0081         //     v_buff = 0.15;
                 ; 0000 0082         //     a_buff = 0;
                 ; 0000 0083         //     if(d_x<0.95)
                 ; 0000 0084         //     {
                 ; 0000 0085         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 0086         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 0087         //         STOP_FLAG = 1;
                 ; 0000 0088         //     }
                 ; 0000 0089         //     else{
                 ; 0000 008A         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 008B         //         if(TIMER0_TIME_print > a+2) rootine_test = 1;
                 ; 0000 008C         //         oper_Disapath(0,0);
                 ; 0000 008D         //         STOP_FLAG = 0;
                 ; 0000 008E         //     }
                 ; 0000 008F         // }
                 ; 0000 0090         // else if(rootine_test == 1)
                 ; 0000 0091         // {
                 ; 0000 0092         //     v_buff = 0;
                 ; 0000 0093         //     a_buff = -0.7;
                 ; 0000 0094         //     if(d_angular_circula<85)
                 ; 0000 0095         //     {
                 ; 0000 0096         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 0097         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 0098         //         STOP_FLAG = 1;
                 ; 0000 0099         //     }
                 ; 0000 009A         //     else{
                 ; 0000 009B         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 009C         //         if(TIMER0_TIME_print > a+2) rootine_test = 2;
                 ; 0000 009D         //         oper_Disapath(0,0);
                 ; 0000 009E         //         STOP_FLAG = 0;
                 ; 0000 009F         //     }
                 ; 0000 00A0         // }
                 ; 0000 00A1         // else if(rootine_test == 2)
                 ; 0000 00A2         // {
                 ; 0000 00A3         //     v_buff = 0.15;
                 ; 0000 00A4         //     a_buff = 0;
                 ; 0000 00A5         //     if(d_y<0.95)
                 ; 0000 00A6         //     {
                 ; 0000 00A7         //         Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
                 ; 0000 00A8         //         oper_Disapath(velocity_R,velocity_L);
                 ; 0000 00A9         //         STOP_FLAG = 1;
                 ; 0000 00AA         //     }
                 ; 0000 00AB         //     else{
                 ; 0000 00AC         //         if(STOP_FLAG) a = TIMER0_TIME_print;
                 ; 0000 00AD         //         if(TIMER0_TIME_print > a+2) rootine_test = 3;
                 ; 0000 00AE         //         oper_Disapath(0,0);
                 ; 0000 00AF         //         STOP_FLAG = 0;
                 ; 0000 00B0         //     }
                 ; 0000 00B1         // }
                 ; 0000 00B2 
                 ; 0000 00B3         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0xD:
0002db 91a0 0500 	LDS  R26,_TIMER1_OVERFLOW
0002dd 91b0 0501 	LDS  R27,_TIMER1_OVERFLOW+1
0002df efef      	LDI  R30,LOW(255)
0002e0 940e 1327 	CALL __MULB1W2U
0002e2 01df      	MOVW R26,R30
0002e3 b5ec      	IN   R30,0x2C
0002e4 940e 0e5b 	CALL SUBOPT_0x4
                +
0002e6 edae     +LDI R26 , LOW ( 0x3D8E38DE )
0002e7 e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
0002e8 e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
0002e9 e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
0002ea 940e 1247 	CALL __MULF12
                +
0002ec 01de     +MOVW R26 , R28
0002ed 5ea8     +SUBI R26 , LOW ( - 536 )
0002ee 4fbd     +SBCI R27 , HIGH ( - 536 )
0002ef 93ed     +ST X + , R30
0002f0 93fd     +ST X + , R31
0002f1 936d     +ST X + , R22
0002f2 937c     +ST X , R23
                 	__PUTD1SX 536
                 ; 0000 00B4 
                 ; 0000 00B5         if(del_ms<TIMER1_TIME)
                +
0002f3 01de     +MOVW R26 , R28
0002f4 59ac     +SUBI R26 , LOW ( - 612 )
0002f5 4fbd     +SBCI R27 , HIGH ( - 612 )
0002f6 900d     +LD R0 , X +
0002f7 91bc     +LD R27 , X
0002f8 2da0     +MOV R26 , R0
                 	__GETW2SX 612
0002f9 940e 131a 	CALL __CWD2
0002fb 940e 13b2 	CALL __CDF2
0002fd 940e 12da 	CALL __CMPF12
0002ff f4e8      	BRSH _0xF
                 ; 0000 00B6         {
                 ; 0000 00B7             oper_Disapath(0,0);
000300 e0e0      	LDI  R30,LOW(0)
000301 e0f0      	LDI  R31,HIGH(0)
000302 93fa      	ST   -Y,R31
000303 93ea      	ST   -Y,R30
000304 93fa      	ST   -Y,R31
000305 93ea      	ST   -Y,R30
000306 940e 06fc 	CALL _oper_Disapath
                 ; 0000 00B8             TIMER1_OVERFLOW = 0;
000308 940e 0e55 	CALL SUBOPT_0x3
                 ; 0000 00B9             v_buff = 0;
                +
00030a 01de     +MOVW R26 , R28
00030b 59a8     +SUBI R26 , LOW ( - 616 )
00030c 4fbd     +SBCI R27 , HIGH ( - 616 )
00030d 93ed     +ST X + , R30
00030e 93ed     +ST X + , R30
00030f 93ed     +ST X + , R30
000310 93ec     +ST X , R30
                 	__CLRD1SX 616
                 ; 0000 00BA             a_buff = 0;
000311 e0e0      	LDI  R30,LOW(0)
                +
000312 01de     +MOVW R26 , R28
000313 59a4     +SUBI R26 , LOW ( - 620 )
000314 4fbd     +SBCI R27 , HIGH ( - 620 )
000315 93ed     +ST X + , R30
000316 93ed     +ST X + , R30
000317 93ed     +ST X + , R30
000318 93ec     +ST X , R30
                 	__CLRD1SX 620
                 ; 0000 00BB             STOP_FLAG = 0;
                +
000319 01de     +MOVW R26 , R28
00031a 5fa2     +SUBI R26 , LOW ( - 526 )
00031b 4fbd     +SBCI R27 , HIGH ( - 526 )
00031c 93ec     +ST X , R30
                 	__PUTB1SX 526
                 ; 0000 00BC         }
                 ; 0000 00BD         if(currentV_R==0 && currentV_L==0) TIMER0_TIME_print = 0;
                 _0xF:
00031d 940e 0e63 	CALL SUBOPT_0x5
00031f 940e 13c6 	CALL __CPD02
000321 f429      	BRNE _0x11
000322 940e 0e6c 	CALL SUBOPT_0x6
000324 940e 13c6 	CALL __CPD02
000326 f009      	BREQ _0x12
                 _0x11:
000327 c008      	RJMP _0x10
                 _0x12:
000328 e0e0      	LDI  R30,LOW(0)
                +
000329 01de     +MOVW R26 , R28
00032a 5fa0     +SUBI R26 , LOW ( - 528 )
00032b 4fbd     +SBCI R27 , HIGH ( - 528 )
00032c 93ed     +ST X + , R30
00032d 93ed     +ST X + , R30
00032e 93ed     +ST X + , R30
00032f 93ec     +ST X , R30
                 	__CLRD1SX 528
                 ; 0000 00BE 
                 ; 0000 00BF         delay_ms(5);
                 _0x10:
000330 940e 0e75 	CALL SUBOPT_0x7
                 ; 0000 00C0         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
000332 e0e1      	LDI  R30,LOW(1)
000333 940e 0e78 	CALL SUBOPT_0x8
                 ; 0000 00C1         delay_ms(5);
                 ; 0000 00C2         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
000335 940e 0e82 	CALL SUBOPT_0x9
000337 01fe      	MOVW R30,R28
000338 5ae7      	SUBI R30,LOW(-(601))
000339 4ffd      	SBCI R31,HIGH(-(601))
00033a 93fa      	ST   -Y,R31
00033b 93ea      	ST   -Y,R30
00033c 940e 071a 	CALL _get_RPM
                +
00033e 01de     +MOVW R26 , R28
00033f 59ae     +SUBI R26 , LOW ( - 610 )
000340 4fbd     +SBCI R27 , HIGH ( - 610 )
000341 93ed     +ST X + , R30
000342 93fc     +ST X , R31
                 	__PUTW1SX 610
                 ; 0000 00C3         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
000343 e0e2      	LDI  R30,LOW(2)
000344 940e 0e78 	CALL SUBOPT_0x8
                 ; 0000 00C4         delay_ms(5);
                 ; 0000 00C5         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
000346 940e 0e82 	CALL SUBOPT_0x9
000348 01fe      	MOVW R30,R28
000349 5ae9      	SUBI R30,LOW(-(599))
00034a 4ffd      	SBCI R31,HIGH(-(599))
00034b 93fa      	ST   -Y,R31
00034c 93ea      	ST   -Y,R30
00034d 940e 071a 	CALL _get_RPM
00034f 940e 12fe 	CALL __ANEGW1
                +
000351 01de     +MOVW R26 , R28
000352 5aa0     +SUBI R26 , LOW ( - 608 )
000353 4fbd     +SBCI R27 , HIGH ( - 608 )
000354 93ed     +ST X + , R30
000355 93fc     +ST X , R31
                 	__PUTW1SX 608
                 ; 0000 00C6 
                 ; 0000 00C7         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
                +
000356 01fe     +MOVW R30 , R28
000357 59ee     +SUBI R30 , LOW ( - 610 )
000358 4ffd     +SBCI R31 , HIGH ( - 610 )
000359 9001     +LD R0 , Z +
00035a 81f0     +LD R31 , Z
00035b 2de0     +MOV R30 , R0
                 	__GETW1SX 610
00035c 940e 0e8a 	CALL SUBOPT_0xA
                +
00035e 01de     +MOVW R26 , R28
00035f 5aa4     +SUBI R26 , LOW ( - 604 )
000360 4fbd     +SBCI R27 , HIGH ( - 604 )
000361 93ed     +ST X + , R30
000362 93fd     +ST X + , R31
000363 936d     +ST X + , R22
000364 937c     +ST X , R23
                 	__PUTD1SX 604
                 ; 0000 00C8         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
000365 01fe     +MOVW R30 , R28
000366 5ae0     +SUBI R30 , LOW ( - 608 )
000367 4ffd     +SBCI R31 , HIGH ( - 608 )
000368 9001     +LD R0 , Z +
000369 81f0     +LD R31 , Z
00036a 2de0     +MOV R30 , R0
                 	__GETW1SX 608
00036b 940e 0e8a 	CALL SUBOPT_0xA
                +
00036d 01de     +MOVW R26 , R28
00036e 5aa8     +SUBI R26 , LOW ( - 600 )
00036f 4fbd     +SBCI R27 , HIGH ( - 600 )
000370 93ed     +ST X + , R30
000371 93fd     +ST X + , R31
000372 936d     +ST X + , R22
000373 937c     +ST X , R23
                 	__PUTD1SX 600
                 ; 0000 00C9         goal_currentV_R = (float)(goal_current_R/(152.788*Gearratio));
                +
000374 01fe     +MOVW R30 , R28
000375 5aea     +SUBI R30 , LOW ( - 598 )
000376 4ffd     +SBCI R31 , HIGH ( - 598 )
000377 9001     +LD R0 , Z +
000378 81f0     +LD R31 , Z
000379 2de0     +MOV R30 , R0
                 	__GETW1SX 598
00037a 940e 0e8a 	CALL SUBOPT_0xA
                +
00037c 01de     +MOVW R26 , R28
00037d 5ba0     +SUBI R26 , LOW ( - 592 )
00037e 4fbd     +SBCI R27 , HIGH ( - 592 )
00037f 93ed     +ST X + , R30
000380 93fd     +ST X + , R31
000381 936d     +ST X + , R22
000382 937c     +ST X , R23
                 	__PUTD1SX 592
                 ; 0000 00CA         goal_currentV_L = (float)(-goal_current_L/(152.788*Gearratio));
                +
000383 01fe     +MOVW R30 , R28
000384 5aec     +SUBI R30 , LOW ( - 596 )
000385 4ffd     +SBCI R31 , HIGH ( - 596 )
000386 9001     +LD R0 , Z +
000387 81f0     +LD R31 , Z
000388 2de0     +MOV R30 , R0
                 	__GETW1SX 596
000389 940e 12fe 	CALL __ANEGW1
00038b 940e 0e8a 	CALL SUBOPT_0xA
                +
00038d 01de     +MOVW R26 , R28
00038e 5ba4     +SUBI R26 , LOW ( - 588 )
00038f 4fbd     +SBCI R27 , HIGH ( - 588 )
000390 93ed     +ST X + , R30
000391 93fd     +ST X + , R31
000392 936d     +ST X + , R22
000393 937c     +ST X , R23
                 	__PUTD1SX 588
                 ; 0000 00CB 
                 ; 0000 00CC         d_velocity = (currentV_R + currentV_L)/2;
                +
000394 01fe     +MOVW R30 , R28
000395 5ae8     +SUBI R30 , LOW ( - 600 )
000396 4ffd     +SBCI R31 , HIGH ( - 600 )
000397 9001     +LD R0 , Z +
000398 9011     +LD R1 , Z +
000399 9161     +LD R22 , Z +
00039a 8170     +LD R23 , Z
00039b 01f0     +MOVW R30 , R0
                 	__GETD1SX 600
00039c 940e 0e63 	CALL SUBOPT_0x5
00039e 940e 0e97 	CALL SUBOPT_0xB
                +
0003a0 01de     +MOVW R26 , R28
0003a1 5ba8     +SUBI R26 , LOW ( - 584 )
0003a2 4fbd     +SBCI R27 , HIGH ( - 584 )
0003a3 93ed     +ST X + , R30
0003a4 93fd     +ST X + , R31
0003a5 936d     +ST X + , R22
0003a6 937c     +ST X , R23
                 	__PUTD1SX 584
                 ; 0000 00CD         d_angularV = (currentV_R-currentV_L)/Length;
0003a7 940e 0e6c 	CALL SUBOPT_0x6
                +
0003a9 01fe     +MOVW R30 , R28
0003aa 5ae4     +SUBI R30 , LOW ( - 604 )
0003ab 4ffd     +SBCI R31 , HIGH ( - 604 )
0003ac 9001     +LD R0 , Z +
0003ad 9011     +LD R1 , Z +
0003ae 9161     +LD R22 , Z +
0003af 8170     +LD R23 , Z
0003b0 01f0     +MOVW R30 , R0
                 	__GETD1SX 604
0003b1 940e 0ea2 	CALL SUBOPT_0xC
                +
0003b3 01de     +MOVW R26 , R28
0003b4 5bac     +SUBI R26 , LOW ( - 580 )
0003b5 4fbd     +SBCI R27 , HIGH ( - 580 )
0003b6 93ed     +ST X + , R30
0003b7 93fd     +ST X + , R31
0003b8 936d     +ST X + , R22
0003b9 937c     +ST X , R23
                 	__PUTD1SX 580
                 ; 0000 00CE         g_velocity = (goal_currentV_R+goal_currentV_L)/2;
                +
0003ba 01fe     +MOVW R30 , R28
0003bb 5be4     +SUBI R30 , LOW ( - 588 )
0003bc 4ffd     +SBCI R31 , HIGH ( - 588 )
0003bd 9001     +LD R0 , Z +
0003be 9011     +LD R1 , Z +
0003bf 9161     +LD R22 , Z +
0003c0 8170     +LD R23 , Z
0003c1 01f0     +MOVW R30 , R0
                 	__GETD1SX 588
                +
0003c2 01de     +MOVW R26 , R28
0003c3 5ba0     +SUBI R26 , LOW ( - 592 )
0003c4 4fbd     +SBCI R27 , HIGH ( - 592 )
0003c5 900d     +LD R0 , X +
0003c6 901d     +LD R1 , X +
0003c7 918d     +LD R24 , X +
0003c8 919c     +LD R25 , X
0003c9 01d0     +MOVW R26 , R0
                 	__GETD2SX 592
0003ca 940e 0e97 	CALL SUBOPT_0xB
                +
0003cc 01de     +MOVW R26 , R28
0003cd 5ca4     +SUBI R26 , LOW ( - 572 )
0003ce 4fbd     +SBCI R27 , HIGH ( - 572 )
0003cf 93ed     +ST X + , R30
0003d0 93fd     +ST X + , R31
0003d1 936d     +ST X + , R22
0003d2 937c     +ST X , R23
                 	__PUTD1SX 572
                 ; 0000 00CF         g_angularV = (goal_currentV_R-goal_currentV_L)/Length;
                +
0003d3 01de     +MOVW R26 , R28
0003d4 5ba4     +SUBI R26 , LOW ( - 588 )
0003d5 4fbd     +SBCI R27 , HIGH ( - 588 )
0003d6 900d     +LD R0 , X +
0003d7 901d     +LD R1 , X +
0003d8 918d     +LD R24 , X +
0003d9 919c     +LD R25 , X
0003da 01d0     +MOVW R26 , R0
                 	__GETD2SX 588
                +
0003db 01fe     +MOVW R30 , R28
0003dc 5be0     +SUBI R30 , LOW ( - 592 )
0003dd 4ffd     +SBCI R31 , HIGH ( - 592 )
0003de 9001     +LD R0 , Z +
0003df 9011     +LD R1 , Z +
0003e0 9161     +LD R22 , Z +
0003e1 8170     +LD R23 , Z
0003e2 01f0     +MOVW R30 , R0
                 	__GETD1SX 592
0003e3 940e 0ea2 	CALL SUBOPT_0xC
                +
0003e5 01de     +MOVW R26 , R28
0003e6 5ca8     +SUBI R26 , LOW ( - 568 )
0003e7 4fbd     +SBCI R27 , HIGH ( - 568 )
0003e8 93ed     +ST X + , R30
0003e9 93fd     +ST X + , R31
0003ea 936d     +ST X + , R22
0003eb 937c     +ST X , R23
                 	__PUTD1SX 568
                 ; 0000 00D0 
                 ; 0000 00D1         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
0003ec 91a0 0568 	LDS  R26,_TIMER0_OVERFLOW
0003ee 91b0 0569 	LDS  R27,_TIMER0_OVERFLOW+1
0003f0 efef      	LDI  R30,LOW(255)
0003f1 940e 1327 	CALL __MULB1W2U
0003f3 01df      	MOVW R26,R30
0003f4 b7e2      	IN   R30,0x32
0003f5 940e 0e5b 	CALL SUBOPT_0x4
                +
0003f7 eaae     +LDI R26 , LOW ( 0x3891A2AE )
0003f8 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
0003f9 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
0003fa e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
0003fb 940e 1247 	CALL __MULF12
                +
0003fd 01de     +MOVW R26 , R28
0003fe 5ca0     +SUBI R26 , LOW ( - 576 )
0003ff 4fbd     +SBCI R27 , HIGH ( - 576 )
000400 93ed     +ST X + , R30
000401 93fd     +ST X + , R31
000402 936d     +ST X + , R22
000403 937c     +ST X , R23
                 	__PUTD1SX 576
                 ; 0000 00D2         TIMER0_OVERFLOW = 0;
000404 940e 0e41 	CALL SUBOPT_0x1
                 ; 0000 00D3         TCNT0 = 0;
                 ; 0000 00D4 
                 ; 0000 00D5         d_angular += control_time*d_angularV;
                +
000406 01fe     +MOVW R30 , R28
000407 5bec     +SUBI R30 , LOW ( - 580 )
000408 4ffd     +SBCI R31 , HIGH ( - 580 )
000409 9001     +LD R0 , Z +
00040a 9011     +LD R1 , Z +
00040b 9161     +LD R22 , Z +
00040c 8170     +LD R23 , Z
00040d 01f0     +MOVW R30 , R0
                 	__GETD1SX 580
                +
00040e 01de     +MOVW R26 , R28
00040f 5ca0     +SUBI R26 , LOW ( - 576 )
000410 4fbd     +SBCI R27 , HIGH ( - 576 )
000411 900d     +LD R0 , X +
000412 901d     +LD R1 , X +
000413 918d     +LD R24 , X +
000414 919c     +LD R25 , X
000415 01d0     +MOVW R26 , R0
                 	__GETD2SX 576
000416 940e 1247 	CALL __MULF12
000418 940e 0ead 	CALL SUBOPT_0xD
00041a 940e 11f7 	CALL __ADDF12
                +
00041c 01de     +MOVW R26 , R28
00041d 5da4     +SUBI R26 , LOW ( - 556 )
00041e 4fbd     +SBCI R27 , HIGH ( - 556 )
00041f 93ed     +ST X + , R30
000420 93fd     +ST X + , R31
000421 936d     +ST X + , R22
000422 937c     +ST X , R23
                 	__PUTD1SX 556
                 ; 0000 00D6         d_x += d_velocity*control_time*cos(d_angular);
000423 940e 0eb6 	CALL SUBOPT_0xE
000425 937f      	PUSH R23
000426 936f      	PUSH R22
000427 93ff      	PUSH R31
000428 93ef      	PUSH R30
000429 940e 0ec9 	CALL SUBOPT_0xF
00042b 940e 0d54 	CALL _cos
00042d 91af      	POP  R26
00042e 91bf      	POP  R27
00042f 918f      	POP  R24
000430 919f      	POP  R25
000431 940e 1247 	CALL __MULF12
                +
000433 01de     +MOVW R26 , R28
000434 5cac     +SUBI R26 , LOW ( - 564 )
000435 4fbd     +SBCI R27 , HIGH ( - 564 )
000436 900d     +LD R0 , X +
000437 901d     +LD R1 , X +
000438 918d     +LD R24 , X +
000439 919c     +LD R25 , X
00043a 01d0     +MOVW R26 , R0
                 	__GETD2SX 564
00043b 940e 11f7 	CALL __ADDF12
                +
00043d 01de     +MOVW R26 , R28
00043e 5cac     +SUBI R26 , LOW ( - 564 )
00043f 4fbd     +SBCI R27 , HIGH ( - 564 )
000440 93ed     +ST X + , R30
000441 93fd     +ST X + , R31
000442 936d     +ST X + , R22
000443 937c     +ST X , R23
                 	__PUTD1SX 564
                 ; 0000 00D7         d_y += d_velocity*control_time*sin(d_angular);
000444 940e 0eb6 	CALL SUBOPT_0xE
000446 937f      	PUSH R23
000447 936f      	PUSH R22
000448 93ff      	PUSH R31
000449 93ef      	PUSH R30
00044a 940e 0ec9 	CALL SUBOPT_0xF
00044c 940e 0ccd 	CALL _sin
00044e 91af      	POP  R26
00044f 91bf      	POP  R27
000450 918f      	POP  R24
000451 919f      	POP  R25
000452 940e 1247 	CALL __MULF12
                +
000454 01de     +MOVW R26 , R28
000455 5da0     +SUBI R26 , LOW ( - 560 )
000456 4fbd     +SBCI R27 , HIGH ( - 560 )
000457 900d     +LD R0 , X +
000458 901d     +LD R1 , X +
000459 918d     +LD R24 , X +
00045a 919c     +LD R25 , X
00045b 01d0     +MOVW R26 , R0
                 	__GETD2SX 560
00045c 940e 11f7 	CALL __ADDF12
                +
00045e 01de     +MOVW R26 , R28
00045f 5da0     +SUBI R26 , LOW ( - 560 )
000460 4fbd     +SBCI R27 , HIGH ( - 560 )
000461 93ed     +ST X + , R30
000462 93fd     +ST X + , R31
000463 936d     +ST X + , R22
000464 937c     +ST X , R23
                 	__PUTD1SX 560
                 ; 0000 00D8         d_angular_circula = (int)(d_angular*Circular);
000465 940e 0ead 	CALL SUBOPT_0xD
000467 940e 0ed4 	CALL SUBOPT_0x10
                +
000469 01de     +MOVW R26 , R28
00046a 5da6     +SUBI R26 , LOW ( - 554 )
00046b 4fbd     +SBCI R27 , HIGH ( - 554 )
00046c 93ed     +ST X + , R30
00046d 93fc     +ST X , R31
                 	__PUTW1SX 554
                 ; 0000 00D9 
                 ; 0000 00DA         // g_angular += control_time*g_angularV;
                 ; 0000 00DB         // g_x += g_velocity*control_time*cos(g_angular);
                 ; 0000 00DC         // g_y += g_velocity*control_time*sin(g_angular);
                 ; 0000 00DD         // g_angular_circula = (int)(g_angular*Circular);
                 ; 0000 00DE 
                 ; 0000 00DF         motorR_distance = (float)(MOTORR_HALL*0.125*Pi/180);
00046e 940e 0edd 	CALL SUBOPT_0x11
000470 940e 0ee6 	CALL SUBOPT_0x12
                +
000472 01de     +MOVW R26 , R28
000473 50a4     +SUBI R26 , LOW ( - 508 )
000474 4fbe     +SBCI R27 , HIGH ( - 508 )
000475 93ed     +ST X + , R30
000476 93fd     +ST X + , R31
000477 936d     +ST X + , R22
000478 937c     +ST X , R23
                 	__PUTD1SX 508
                 ; 0000 00E0         motorL_distance = (float)(MOTORL_HALL*0.125*Pi/180);
000479 940e 0efd 	CALL SUBOPT_0x13
00047b 940e 0ee6 	CALL SUBOPT_0x12
                +
00047d 01de     +MOVW R26 , R28
00047e 50a8     +SUBI R26 , LOW ( - 504 )
00047f 4fbe     +SBCI R27 , HIGH ( - 504 )
000480 93ed     +ST X + , R30
000481 93fd     +ST X + , R31
000482 936d     +ST X + , R22
000483 937c     +ST X , R23
                 	__PUTD1SX 504
                 ; 0000 00E1         // MOTORR_HALL = 0;
                 ; 0000 00E2         // MOTORL_HALL = 0;
                 ; 0000 00E3 
                 ; 0000 00E4         hall_angular += (float)((motorR_distance-motorL_distance)/Length);
                +
000484 01de     +MOVW R26 , R28
000485 50a8     +SUBI R26 , LOW ( - 504 )
000486 4fbe     +SBCI R27 , HIGH ( - 504 )
000487 900d     +LD R0 , X +
000488 901d     +LD R1 , X +
000489 918d     +LD R24 , X +
00048a 919c     +LD R25 , X
00048b 01d0     +MOVW R26 , R0
                 	__GETD2SX 504
                +
00048c 01fe     +MOVW R30 , R28
00048d 50e4     +SUBI R30 , LOW ( - 508 )
00048e 4ffe     +SBCI R31 , HIGH ( - 508 )
00048f 9001     +LD R0 , Z +
000490 9011     +LD R1 , Z +
000491 9161     +LD R22 , Z +
000492 8170     +LD R23 , Z
000493 01f0     +MOVW R30 , R0
                 	__GETD1SX 508
000494 940e 0ea2 	CALL SUBOPT_0xC
000496 940e 0f06 	CALL SUBOPT_0x14
000498 940e 11f7 	CALL __ADDF12
                +
00049a 01de     +MOVW R26 , R28
00049b 5fae     +SUBI R26 , LOW ( - 514 )
00049c 4fbd     +SBCI R27 , HIGH ( - 514 )
00049d 93ed     +ST X + , R30
00049e 93fd     +ST X + , R31
00049f 936d     +ST X + , R22
0004a0 937c     +ST X , R23
                 	__PUTD1SX 514
                 ; 0000 00E5         hall_x += (float)((motorR_distance+motorL_distance)/2)*cos(hall_angular);
0004a1 940e 0f0f 	CALL SUBOPT_0x15
0004a3 937f      	PUSH R23
0004a4 936f      	PUSH R22
0004a5 93ff      	PUSH R31
0004a6 93ef      	PUSH R30
0004a7 940e 0f20 	CALL SUBOPT_0x16
0004a9 940e 0d54 	CALL _cos
0004ab 91af      	POP  R26
0004ac 91bf      	POP  R27
0004ad 918f      	POP  R24
0004ae 919f      	POP  R25
0004af 940e 1247 	CALL __MULF12
                +
0004b1 01de     +MOVW R26 , R28
0004b2 5fa6     +SUBI R26 , LOW ( - 522 )
0004b3 4fbd     +SBCI R27 , HIGH ( - 522 )
0004b4 900d     +LD R0 , X +
0004b5 901d     +LD R1 , X +
0004b6 918d     +LD R24 , X +
0004b7 919c     +LD R25 , X
0004b8 01d0     +MOVW R26 , R0
                 	__GETD2SX 522
0004b9 940e 11f7 	CALL __ADDF12
                +
0004bb 01de     +MOVW R26 , R28
0004bc 5fa6     +SUBI R26 , LOW ( - 522 )
0004bd 4fbd     +SBCI R27 , HIGH ( - 522 )
0004be 93ed     +ST X + , R30
0004bf 93fd     +ST X + , R31
0004c0 936d     +ST X + , R22
0004c1 937c     +ST X , R23
                 	__PUTD1SX 522
                 ; 0000 00E6         hall_y += (float)((motorR_distance+motorL_distance)/2)*sin(hall_angular);
0004c2 940e 0f0f 	CALL SUBOPT_0x15
0004c4 937f      	PUSH R23
0004c5 936f      	PUSH R22
0004c6 93ff      	PUSH R31
0004c7 93ef      	PUSH R30
0004c8 940e 0f20 	CALL SUBOPT_0x16
0004ca 940e 0ccd 	CALL _sin
0004cc 91af      	POP  R26
0004cd 91bf      	POP  R27
0004ce 918f      	POP  R24
0004cf 919f      	POP  R25
0004d0 940e 1247 	CALL __MULF12
                +
0004d2 01de     +MOVW R26 , R28
0004d3 5faa     +SUBI R26 , LOW ( - 518 )
0004d4 4fbd     +SBCI R27 , HIGH ( - 518 )
0004d5 900d     +LD R0 , X +
0004d6 901d     +LD R1 , X +
0004d7 918d     +LD R24 , X +
0004d8 919c     +LD R25 , X
0004d9 01d0     +MOVW R26 , R0
                 	__GETD2SX 518
0004da 940e 11f7 	CALL __ADDF12
                +
0004dc 01de     +MOVW R26 , R28
0004dd 5faa     +SUBI R26 , LOW ( - 518 )
0004de 4fbd     +SBCI R27 , HIGH ( - 518 )
0004df 93ed     +ST X + , R30
0004e0 93fd     +ST X + , R31
0004e1 936d     +ST X + , R22
0004e2 937c     +ST X , R23
                 	__PUTD1SX 518
                 ; 0000 00E7         hall_angular_circula = (int)(hall_angular*Circular);
0004e3 940e 0f06 	CALL SUBOPT_0x14
0004e5 940e 0ed4 	CALL SUBOPT_0x10
                +
0004e7 01de     +MOVW R26 , R28
0004e8 50a0     +SUBI R26 , LOW ( - 512 )
0004e9 4fbe     +SBCI R27 , HIGH ( - 512 )
0004ea 93ed     +ST X + , R30
0004eb 93fc     +ST X , R31
                 	__PUTW1SX 512
                 ; 0000 00E8 
                 ; 0000 00E9 
                 ; 0000 00EA         TIMER0_TIME += control_time;
                +
0004ec 01fe     +MOVW R30 , R28
0004ed 5ce0     +SUBI R30 , LOW ( - 576 )
0004ee 4ffd     +SBCI R31 , HIGH ( - 576 )
0004ef 9001     +LD R0 , Z +
0004f0 9011     +LD R1 , Z +
0004f1 9161     +LD R22 , Z +
0004f2 8170     +LD R23 , Z
0004f3 01f0     +MOVW R30 , R0
                 	__GETD1SX 576
0004f4 940e 0f2b 	CALL SUBOPT_0x17
0004f6 940e 11f7 	CALL __ADDF12
                +
0004f8 01de     +MOVW R26 , R28
0004f9 5eac     +SUBI R26 , LOW ( - 532 )
0004fa 4fbd     +SBCI R27 , HIGH ( - 532 )
0004fb 93ed     +ST X + , R30
0004fc 93fd     +ST X + , R31
0004fd 936d     +ST X + , R22
0004fe 937c     +ST X , R23
                 	__PUTD1SX 532
                 ; 0000 00EB         if(TIMER0_TIME>0.01){
0004ff 940e 0f2b 	CALL SUBOPT_0x17
                +
000501 e0ea     +LDI R30 , LOW ( 0x3C23D70A )
000502 edf7     +LDI R31 , HIGH ( 0x3C23D70A )
000503 e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
000504 e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
000505 940e 12da 	CALL __CMPF12
000507 f009      	BREQ PC+2
000508 f410      	BRCC PC+3
000509 940c 0544 	JMP  _0x13
                 ; 0000 00EC             TIMER0_TIME_print += TIMER0_TIME;
                +
00050b 01fe     +MOVW R30 , R28
00050c 5eec     +SUBI R30 , LOW ( - 532 )
00050d 4ffd     +SBCI R31 , HIGH ( - 532 )
00050e 9001     +LD R0 , Z +
00050f 9011     +LD R1 , Z +
000510 9161     +LD R22 , Z +
000511 8170     +LD R23 , Z
000512 01f0     +MOVW R30 , R0
                 	__GETD1SX 532
                +
000513 01de     +MOVW R26 , R28
000514 5fa0     +SUBI R26 , LOW ( - 528 )
000515 4fbd     +SBCI R27 , HIGH ( - 528 )
000516 900d     +LD R0 , X +
000517 901d     +LD R1 , X +
000518 918d     +LD R24 , X +
000519 919c     +LD R25 , X
00051a 01d0     +MOVW R26 , R0
                 	__GETD2SX 528
00051b 940e 11f7 	CALL __ADDF12
                +
00051d 01de     +MOVW R26 , R28
00051e 5fa0     +SUBI R26 , LOW ( - 528 )
00051f 4fbd     +SBCI R27 , HIGH ( - 528 )
000520 93ed     +ST X + , R30
000521 93fd     +ST X + , R31
000522 936d     +ST X + , R22
000523 937c     +ST X , R23
                 	__PUTD1SX 528
                 ; 0000 00ED             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 00EE             // sprintf(BUFF, "%f, %f\n", currentV_L*control_time, motorL_distance);
                 ; 0000 00EF             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 00F0             // sprintf(BUFF, "%.3f, %.3f, %4d, %.3f, %.3f\n", d_x, d_y, d_angular_circula, TIMER0_TIME_print, a);
                 ; 0000 00F1             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f, %4d, %4d\n", d_x, hall_x, d_y, hall_y, d_angular_circula, hall_angular_circula);
                 ; 0000 00F2             // sprintf(BUFF, "%.3f, %.3f,\n", d_x, (motorR_distance+motorL_distance)/2);
                 ; 0000 00F3             sprintf(BUFF, "%4d, %4d\n", MOTORR_HALL, MOTORL_HALL);
000524 01fe      	MOVW R30,R28
000525 93fa      	ST   -Y,R31
000526 93ea      	ST   -Y,R30
                +
000527 efef     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
000528 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
000529 93fa      	ST   -Y,R31
00052a 93ea      	ST   -Y,R30
00052b 940e 0edd 	CALL SUBOPT_0x11
00052d 940e 13ab 	CALL __PUTPARD1
00052f 940e 0efd 	CALL SUBOPT_0x13
000531 940e 13ab 	CALL __PUTPARD1
000533 e088      	LDI  R24,8
000534 940e 0aca 	CALL _sprintf
000536 962c      	ADIW R28,12
                 ; 0000 00F4             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", d_velocity, g_velocity, v_buff, TIMER0_TIME_print);
                 ; 0000 00F5             // sprintf(BUFF, "%d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f\n", currentRPM_R, -currentRPM_L, goal_current_R, goal_current_L,
                 ; 0000 00F6             //                                                   currentV_R, currentV_L, goal_currentV_R, goal_currentV_L,
                 ; 0000 00F7             //                                                   d_velocity, g_velocity, d_x, g_x);
                 ; 0000 00F8             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 00F9             puts_USART1(BUFF);
000537 01fe      	MOVW R30,R28
000538 93fa      	ST   -Y,R31
000539 93ea      	ST   -Y,R30
00053a 940e 060f 	CALL _puts_USART1
                 ; 0000 00FA              TIMER0_TIME = 0;
00053c e0e0      	LDI  R30,LOW(0)
                +
00053d 01de     +MOVW R26 , R28
00053e 5eac     +SUBI R26 , LOW ( - 532 )
00053f 4fbd     +SBCI R27 , HIGH ( - 532 )
000540 93ed     +ST X + , R30
000541 93ed     +ST X + , R30
000542 93ed     +ST X + , R30
000543 93ec     +ST X , R30
                 	__CLRD1SX 532
                 ; 0000 00FB         }
                 ; 0000 00FC     }
                 _0x13:
000544 ccf6      	RJMP _0xA
                 ; 0000 00FD }
                 _0x14:
000545 cfff      	RJMP _0x14
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0001 000A {
                 
                 	.CSEG
                 _timer2_comp:
000546 93ea      	ST   -Y,R30
000547 b7ef      	IN   R30,SREG
000548 93ea      	ST   -Y,R30
                 ; 0001 000B     TIMER2_OVERFLOW++;
000549 91e0 0502 	LDS  R30,_TIMER2_OVERFLOW
00054b 5fef      	SUBI R30,-LOW(1)
00054c 93e0 0502 	STS  _TIMER2_OVERFLOW,R30
                 ; 0001 000C }
00054e 91e9      	LD   R30,Y+
00054f bfef      	OUT  SREG,R30
000550 91e9      	LD   R30,Y+
000551 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0001 000F {
                 _timer0_ovf:
000552 940e 0f34 	CALL SUBOPT_0x18
                 ; 0001 0010     TIMER0_OVERFLOW++;
000554 e6a8      	LDI  R26,LOW(_TIMER0_OVERFLOW)
000555 e0b5      	LDI  R27,HIGH(_TIMER0_OVERFLOW)
000556 940e 0f3b 	CALL SUBOPT_0x19
                 ; 0001 0011 }
000558 c009      	RJMP _0x20003
                 ;
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0001 0015 {
                 _timer0_comp:
000559 940e 0f34 	CALL SUBOPT_0x18
                 ; 0001 0016     TIMER1_OVERFLOW++;
00055b e0a0      	LDI  R26,LOW(_TIMER1_OVERFLOW)
00055c e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
00055d 940e 0f3b 	CALL SUBOPT_0x19
                 ; 0001 0017     TCNT1H = 0x00;
00055f e0e0      	LDI  R30,LOW(0)
000560 bded      	OUT  0x2D,R30
                 ; 0001 0018     TCNT1L = 0x00;
000561 bdec      	OUT  0x2C,R30
                 ; 0001 0019 }
                 _0x20003:
000562 91e9      	LD   R30,Y+
000563 bfef      	OUT  SREG,R30
000564 91f9      	LD   R31,Y+
000565 91e9      	LD   R30,Y+
000566 91b9      	LD   R27,Y+
000567 91a9      	LD   R26,Y+
000568 9518      	RETI
                 ;
                 ;void timer2_init(void)
                 ; 0001 001C {
                 _timer2_init:
                 ; 0001 001D     //TIMER2
                 ; 0001 001E     TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);// CTC모드, 1024분주
000569 e0ed      	LDI  R30,LOW(13)
00056a bde5      	OUT  0x25,R30
                 ; 0001 001F 
                 ; 0001 0020     OCR2 = 40;
00056b e2e8      	LDI  R30,LOW(40)
00056c bde3      	OUT  0x23,R30
                 ; 0001 0021     TIMSK = (1<<OCIE2)|(1<<OCIE0);
00056d e8e2      	LDI  R30,LOW(130)
00056e c010      	RJMP _0x20A0010
                 ; 0001 0022     //TIMSK = (1<<OCIE2);
                 ; 0001 0023 }
                 ;void timer0_init(void)
                 ; 0001 0025 {
                 _timer0_init:
                 ; 0001 0026     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
00056f e0e7      	LDI  R30,LOW(7)
000570 bfe3      	OUT  0x33,R30
                 ; 0001 0027     TIMSK = (1<<OCIE2)|(1<<TOIE0);
000571 e8e1      	LDI  R30,LOW(129)
000572 c00c      	RJMP _0x20A0010
                 ; 0001 0028 }
                 ;
                 ;void timer1_init(void)
                 ; 0001 002B {
                 _timer1_init:
                 ; 0001 002C     // TCCR1A = (1<<COM1B0);
                 ; 0001 002D     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
000573 e1ed      	LDI  R30,LOW(29)
000574 bdee      	OUT  0x2E,R30
                 ; 0001 002E 
                 ; 0001 002F     OCR1B = 255;
000575 efef      	LDI  R30,LOW(255)
000576 e0f0      	LDI  R31,HIGH(255)
000577 bdf9      	OUT  0x28+1,R31
000578 bde8      	OUT  0x28,R30
                 ; 0001 0030     ICR1 = 1200;
000579 ebe0      	LDI  R30,LOW(1200)
00057a e0f4      	LDI  R31,HIGH(1200)
00057b bdf7      	OUT  0x26+1,R31
00057c bde6      	OUT  0x26,R30
                 ; 0001 0031     TIMSK |= (1<<OCIE1B);
00057d b7e7      	IN   R30,0x37
00057e 60e8      	ORI  R30,8
                 _0x20A0010:
00057f bfe7      	OUT  0x37,R30
                 ; 0001 0032 }
000580 9508      	RET
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#include "TIMER.h"
                 ;#include "RTU_USART.h"
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0002 000A {
                 
                 	.CSEG
                 _usart0_rxc:
000581 93aa      	ST   -Y,R26
000582 93ba      	ST   -Y,R27
000583 93ea      	ST   -Y,R30
000584 b7ef      	IN   R30,SREG
000585 93ea      	ST   -Y,R30
                 ; 0002 000B     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000586 b5e4      	IN   R30,0x24
000587 31e9      	CPI  R30,LOW(0x19)
000588 f420      	BRSH _0x40004
000589 91a0 0502 	LDS  R26,_TIMER2_OVERFLOW
00058b 30a0      	CPI  R26,LOW(0x0)
00058c f021      	BREQ _0x40006
                 _0x40004:
00058d 91a0 0567 	LDS  R26,_PACKET_BUFF_IDX
00058f 30a0      	CPI  R26,LOW(0x0)
000590 f419      	BRNE _0x40003
                 _0x40006:
                 ; 0002 000C     {
                 ; 0002 000D         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000591 940e 0f41 	CALL SUBOPT_0x1A
                 ; 0002 000E         PACKET_BUFF_IDX++;
                 ; 0002 000F         TCNT2 = 0;
                 ; 0002 0010     }
                 ; 0002 0011     else {
000593 c008      	RJMP _0x40008
                 _0x40003:
                 ; 0002 0012         PACKET_BUFF_IDX = 0;
000594 e0e0      	LDI  R30,LOW(0)
000595 93e0 0567 	STS  _PACKET_BUFF_IDX,R30
                 ; 0002 0013         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000597 940e 0f41 	CALL SUBOPT_0x1A
                 ; 0002 0014         PACKET_BUFF_IDX++;
                 ; 0002 0015         TCNT2 = 0;
                 ; 0002 0016         TIMER2_OVERFLOW = 0;
000599 e0e0      	LDI  R30,LOW(0)
00059a 93e0 0502 	STS  _TIMER2_OVERFLOW,R30
                 ; 0002 0017     }
                 _0x40008:
                 ; 0002 0018 }
00059c 91e9      	LD   R30,Y+
00059d bfef      	OUT  SREG,R30
00059e 91e9      	LD   R30,Y+
00059f 91b9      	LD   R27,Y+
0005a0 91a9      	LD   R26,Y+
0005a1 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0002 001B {
                 _usart1_rxc:
0005a2 93aa      	ST   -Y,R26
0005a3 93ea      	ST   -Y,R30
0005a4 93fa      	ST   -Y,R31
0005a5 b7ef      	IN   R30,SREG
0005a6 93ea      	ST   -Y,R30
                 ; 0002 001C     unsigned char i = 0;
                 ; 0002 001D     i = UDR1;
0005a7 931a      	ST   -Y,R17
                 ;	i -> R17
0005a8 e010      	LDI  R17,0
0005a9 9110 009c 	LDS  R17,156
                 ; 0002 001E     if((i == '<') && (CHECK_GETS == 0)){
0005ab 331c      	CPI  R17,60
0005ac f421      	BRNE _0x4000A
0005ad 91a0 057f 	LDS  R26,_CHECK_GETS
0005af 30a0      	CPI  R26,LOW(0x0)
0005b0 f009      	BREQ _0x4000B
                 _0x4000A:
0005b1 c009      	RJMP _0x40009
                 _0x4000B:
                 ; 0002 001F         PORTB.3 = ~PORTB.3;
0005b2 9bc3      	SBIS 0x18,3
0005b3 c002      	RJMP _0x4000C
0005b4 98c3      	CBI  0x18,3
0005b5 c001      	RJMP _0x4000D
                 _0x4000C:
0005b6 9ac3      	SBI  0x18,3
                 _0x4000D:
                 ; 0002 0020         VELOCITY_BUFF_IDX = 0;
0005b7 e0e0      	LDI  R30,LOW(0)
0005b8 93e0 057e 	STS  _VELOCITY_BUFF_IDX,R30
                 ; 0002 0021         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
0005ba c013      	RJMP _0x40041
                 ; 0002 0022         VELOCITY_BUFF_IDX++;
                 ; 0002 0023     }
                 ; 0002 0024     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x40009:
0005bb 331e      	CPI  R17,62
0005bc f421      	BRNE _0x40010
0005bd 91a0 057f 	LDS  R26,_CHECK_GETS
0005bf 30a0      	CPI  R26,LOW(0x0)
0005c0 f009      	BREQ _0x40011
                 _0x40010:
0005c1 c008      	RJMP _0x4000F
                 _0x40011:
                 ; 0002 0025         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
0005c2 91e0 057e 	LDS  R30,_VELOCITY_BUFF_IDX
0005c4 940e 0f50 	CALL SUBOPT_0x1B
                 ; 0002 0026         VELOCITY_BUFF_IDX++;
                 ; 0002 0027         CHECK_GETS = 1;
0005c6 e0e1      	LDI  R30,LOW(1)
0005c7 93e0 057f 	STS  _CHECK_GETS,R30
                 ; 0002 0028     }
                 ; 0002 0029     else if(CHECK_GETS == 0){
0005c9 c008      	RJMP _0x40012
                 _0x4000F:
0005ca 91e0 057f 	LDS  R30,_CHECK_GETS
0005cc 30e0      	CPI  R30,0
0005cd f421      	BRNE _0x40013
                 ; 0002 002A         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x40041:
0005ce 91e0 057e 	LDS  R30,_VELOCITY_BUFF_IDX
0005d0 940e 0f50 	CALL SUBOPT_0x1B
                 ; 0002 002B         VELOCITY_BUFF_IDX++;
                 ; 0002 002C     }
                 ; 0002 002D }
                 _0x40013:
                 _0x40012:
0005d2 9119      	LD   R17,Y+
0005d3 91e9      	LD   R30,Y+
0005d4 bfef      	OUT  SREG,R30
0005d5 91f9      	LD   R31,Y+
0005d6 91e9      	LD   R30,Y+
0005d7 91a9      	LD   R26,Y+
0005d8 9518      	RETI
                 ;
                 ;void usart1_init(int bps)
                 ; 0002 0030 {
                 _usart1_init:
                 ; 0002 0031     UCSR1A = 0x00;
                 ;	bps -> Y+0
0005d9 e0e0      	LDI  R30,LOW(0)
0005da 93e0 009b 	STS  155,R30
                 ; 0002 0032     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0005dc e9e8      	LDI  R30,LOW(152)
0005dd 93e0 009a 	STS  154,R30
                 ; 0002 0033     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0005df e0e6      	LDI  R30,LOW(6)
0005e0 93e0 009d 	STS  157,R30
                 ; 0002 0034     UCSR1C &= ~(1<<UMSEL1);
0005e2 91e0 009d 	LDS  R30,157
0005e4 7bef      	ANDI R30,0xBF
0005e5 93e0 009d 	STS  157,R30
                 ; 0002 0035 
                 ; 0002 0036     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0005e7 81e8      	LD   R30,Y
0005e8 81f9      	LDD  R31,Y+1
0005e9 940e 130a 	CALL __ASRW8
0005eb 93e0 0098 	STS  152,R30
                 ; 0002 0037     UBRR1L = (unsigned char)(bps & 0x00ff);
0005ed 81e8      	LD   R30,Y
0005ee 93e0 0099 	STS  153,R30
                 ; 0002 0038 }
0005f0 c014      	RJMP _0x20A000F
                 ;
                 ;void usart0_init(int bps)
                 ; 0002 003B {
                 _usart0_init:
                 ; 0002 003C     UCSR0A = 0x00;
                 ;	bps -> Y+0
0005f1 e0e0      	LDI  R30,LOW(0)
0005f2 b9eb      	OUT  0xB,R30
                 ; 0002 003D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0005f3 e9e8      	LDI  R30,LOW(152)
0005f4 b9ea      	OUT  0xA,R30
                 ; 0002 003E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0005f5 e0e6      	LDI  R30,LOW(6)
0005f6 93e0 0095 	STS  149,R30
                 ; 0002 003F     UCSR0C &= ~(1<<UMSEL0);
0005f8 91e0 0095 	LDS  R30,149
0005fa 7bef      	ANDI R30,0xBF
0005fb 93e0 0095 	STS  149,R30
                 ; 0002 0040 
                 ; 0002 0041     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0005fd 81e8      	LD   R30,Y
0005fe 81f9      	LDD  R31,Y+1
0005ff 940e 130a 	CALL __ASRW8
000601 93e0 0090 	STS  144,R30
                 ; 0002 0042     UBRR0L = (unsigned char)(bps & 0x00ff);
000603 81e8      	LD   R30,Y
000604 b9e9      	OUT  0x9,R30
                 ; 0002 0043 }
                 _0x20A000F:
000605 9622      	ADIW R28,2
000606 9508      	RET
                 ;
                 ;void putch_USART1(char data)
                 ; 0002 0046 {
                 _putch_USART1:
                 ; 0002 0047     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40014:
000607 91e0 009b 	LDS  R30,155
000609 72e0      	ANDI R30,LOW(0x20)
00060a f3e1      	BREQ _0x40014
                 ; 0002 0048     UDR1 = data;
00060b 81e8      	LD   R30,Y
00060c 93e0 009c 	STS  156,R30
                 ; 0002 0049 }
00060e c023      	RJMP _0x20A000E
                 ;
                 ;void puts_USART1(char *str)
                 ; 0002 004C {
                 _puts_USART1:
                 ; 0002 004D     unsigned char i = 0;
                 ; 0002 004E     unsigned char x = 0;
                 ; 0002 004F     for(i = 0; str[i] ;i++){
00060f 931a      	ST   -Y,R17
000610 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
000611 e010      	LDI  R17,0
000612 e000      	LDI  R16,0
000613 e010      	LDI  R17,LOW(0)
                 _0x40018:
000614 940e 0f5a 	CALL SUBOPT_0x1C
000616 30e0      	CPI  R30,0
000617 f031      	BREQ _0x40019
                 ; 0002 0050         putch_USART1(str[i]);
000618 940e 0f5a 	CALL SUBOPT_0x1C
00061a 93ea      	ST   -Y,R30
00061b dfeb      	RCALL _putch_USART1
                 ; 0002 0051     }
00061c 5f1f      	SUBI R17,-1
00061d cff6      	RJMP _0x40018
                 _0x40019:
                 ; 0002 0052     for(x = 0; x<i; x++){
00061e e000      	LDI  R16,LOW(0)
                 _0x4001B:
00061f 1701      	CP   R16,R17
000620 f450      	BRSH _0x4001C
                 ; 0002 0053         *(str++) = 0;
000621 81aa      	LDD  R26,Y+2
000622 81bb      	LDD  R27,Y+2+1
000623 9611      	ADIW R26,1
000624 83aa      	STD  Y+2,R26
000625 83bb      	STD  Y+2+1,R27
000626 9711      	SBIW R26,1
000627 e0e0      	LDI  R30,LOW(0)
000628 93ec      	ST   X,R30
                 ; 0002 0054     }
000629 5f0f      	SUBI R16,-1
00062a cff4      	RJMP _0x4001B
                 _0x4001C:
                 ; 0002 0055 }
00062b 8119      	LDD  R17,Y+1
00062c 8108      	LDD  R16,Y+0
00062d c0ea      	RJMP _0x20A000C
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0002 0058 {
                 ; 0002 0059     unsigned char i = 0;
                 ; 0002 005A     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0002 005B     if(TIMER2_OVERFLOW>0)
                 ; 0002 005C     {
                 ; 0002 005D         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0002 005E for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0002 005F }
                 ; 0002 0060     UCSR0B |= (1<<RXEN0);
                 ; 0002 0061 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0002 0064 {
                 _putch_USART0:
                 ; 0002 0065     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x40024:
00062e 9b5d      	SBIS 0xB,5
00062f cffe      	RJMP _0x40024
                 ; 0002 0066     UDR0 = data;
000630 81e8      	LD   R30,Y
000631 b9ec      	OUT  0xC,R30
                 ; 0002 0067 }
                 _0x20A000E:
000632 9621      	ADIW R28,1
000633 9508      	RET
                 ;
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0002 006A {
                 _CRC16:
                 ; 0002 006B     int i;
                 ; 0002 006C     unsigned short crc, flag;
                 ; 0002 006D     crc = 0xffff;
000634 940e 13cc 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
000636 ef2f     +LDI R18 , LOW ( - 1 )
000637 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0002 006E 
                 ; 0002 006F     while(usDataLen--){
                 _0x40027:
000638 81ee      	LDD  R30,Y+6
000639 81ff      	LDD  R31,Y+6+1
00063a 9731      	SBIW R30,1
00063b 83ee      	STD  Y+6,R30
00063c 83ff      	STD  Y+6+1,R31
00063d 9631      	ADIW R30,1
00063e f0f9      	BREQ _0x40029
                 ; 0002 0070         crc ^= *puchMsg++;
00063f 85a8      	LDD  R26,Y+8
000640 85b9      	LDD  R27,Y+8+1
000641 91ed      	LD   R30,X+
000642 87a8      	STD  Y+8,R26
000643 87b9      	STD  Y+8+1,R27
000644 e0f0      	LDI  R31,0
                +
000645 272e     +EOR R18 , R30
000646 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0071 
                 ; 0002 0072         for (i=0; i<8; i++){
                +
000647 e000     +LDI R16 , LOW ( 0 )
000648 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4002B:
                +
000649 3008     +CPI R16 , LOW ( 8 )
00064a e0e0     +LDI R30 , HIGH ( 8 )
00064b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00064c f484      	BRGE _0x4002C
                 ; 0002 0073             flag = crc & 0x0001;
00064d 01f9      	MOVW R30,R18
00064e 70e1      	ANDI R30,LOW(0x1)
00064f 70f0      	ANDI R31,HIGH(0x1)
000650 01af      	MOVW R20,R30
                 ; 0002 0074             crc >>= 1;
000651 9536      	LSR  R19
000652 9527      	ROR  R18
                 ; 0002 0075             if(flag) crc ^= POLYNORMIAL;
000653 2e04      	MOV  R0,R20
000654 2a05      	OR   R0,R21
000655 f021      	BREQ _0x4002D
000656 e0e1      	LDI  R30,LOW(40961)
000657 eaf0      	LDI  R31,HIGH(40961)
                +
000658 272e     +EOR R18 , R30
000659 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0002 0076         }
                 _0x4002D:
                +
00065a 5f0f     +SUBI R16 , LOW ( - 1 )
00065b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00065c cfec      	RJMP _0x4002B
                 _0x4002C:
                 ; 0002 0077     }
00065d cfda      	RJMP _0x40027
                 _0x40029:
                 ; 0002 0078     return crc;
00065e 01f9      	MOVW R30,R18
00065f 940e 13d3 	CALL __LOADLOCR6
000661 962a      	ADIW R28,10
000662 9508      	RET
                 ; 0002 0079 }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0002 007C {
                 _RTU_WriteOperate0:
                 ; 0002 007D     char protocol[8];
                 ; 0002 007E     unsigned short crc16;
                 ; 0002 007F     int i=0;
                 ; 0002 0080     //PACKET_BUFF_IDX = 0;
                 ; 0002 0081 
                 ; 0002 0082     protocol[0]=device_address;
000663 940e 0f61 	CALL SUBOPT_0x1D
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 0083     protocol[1]=0x06;
000665 e0e6      	LDI  R30,LOW(6)
000666 940e 0f69 	CALL SUBOPT_0x1E
                 ; 0002 0084     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 0085     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 0086     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 0087     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 0088     protocol[6]=0;
                 ; 0002 0089     protocol[7]=0;
                 ; 0002 008A 
                 ; 0002 008B     crc16 = CRC16(protocol, 6);
                 ; 0002 008C 
                 ; 0002 008D     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 008E     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 008F 
                 ; 0002 0090 
                 ; 0002 0091     for(i=0;i<8;i++)
                 _0x4002F:
                +
000668 3028     +CPI R18 , LOW ( 8 )
000669 e0e0     +LDI R30 , HIGH ( 8 )
00066a 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00066b f42c      	BRGE _0x40030
                 ; 0002 0092     {
                 ; 0002 0093         putch_USART0(*(protocol+i));
00066c 940e 0f8c 	CALL SUBOPT_0x1F
                 ; 0002 0094     }
                +
00066e 5f2f     +SUBI R18 , LOW ( - 1 )
00066f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000670 cff7      	RJMP _0x4002F
                 _0x40030:
                 ; 0002 0095 }
000671 c00e      	RJMP _0x20A000D
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0002 0098 {
                 _RTU_ReedOperate0:
                 ; 0002 0099     char protocol[8];
                 ; 0002 009A     unsigned short crc16;
                 ; 0002 009B     int i=0;
                 ; 0002 009C     //PACKET_BUFF_IDX = 0;
                 ; 0002 009D 
                 ; 0002 009E     protocol[0]=device_address;
000672 940e 0f61 	CALL SUBOPT_0x1D
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0002 009F     protocol[1]=0x04;
000674 e0e4      	LDI  R30,LOW(4)
000675 940e 0f69 	CALL SUBOPT_0x1E
                 ; 0002 00A0     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0002 00A1     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0002 00A2     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0002 00A3     protocol[5]=((data)                 & 0x00ff);
                 ; 0002 00A4     protocol[6]=0;
                 ; 0002 00A5     protocol[7]=0;
                 ; 0002 00A6 
                 ; 0002 00A7     crc16 = CRC16(protocol, 6);
                 ; 0002 00A8 
                 ; 0002 00A9     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0002 00AA     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0002 00AB 
                 ; 0002 00AC 
                 ; 0002 00AD     for(i=0;i<8;i++)
                 _0x40032:
                +
000677 3028     +CPI R18 , LOW ( 8 )
000678 e0e0     +LDI R30 , HIGH ( 8 )
000679 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00067a f42c      	BRGE _0x40033
                 ; 0002 00AE     {
                 ; 0002 00AF         putch_USART0(*(protocol+i));
00067b 940e 0f8c 	CALL SUBOPT_0x1F
                 ; 0002 00B0     }
                +
00067d 5f2f     +SUBI R18 , LOW ( - 1 )
00067e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00067f cff7      	RJMP _0x40032
                 _0x40033:
                 ; 0002 00B1 }
                 _0x20A000D:
000680 940e 13d5 	CALL __LOADLOCR4
000682 9661      	ADIW R28,17
000683 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0002 00B4 {
                 _Make_MSPEED:
                 ; 0002 00B5     float VelocityR = 0;
                 ; 0002 00B6     float VelocityL = 0;
                 ; 0002 00B7 
                 ; 0002 00B8     if(*_velocity>=0){
000684 9728      	SBIW R28,8
000685 940e 0f94 	CALL SUBOPT_0x20
000687 e0e0      	LDI  R30,LOW(0)
000688 83ea      	STD  Y+2,R30
000689 83eb      	STD  Y+3,R30
00068a 83ec      	STD  Y+4,R30
00068b 83ed      	STD  Y+5,R30
00068c 83ee      	STD  Y+6,R30
00068d 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
00068e 940e 0f98 	CALL SUBOPT_0x21
000690 2377      	TST  R23
000691 f042      	BRMI _0x40034
                 ; 0002 00B9         *_angularV = -(*_angularV);
000692 940e 0f9d 	CALL SUBOPT_0x22
000694 940e 1151 	CALL __ANEGF1
000696 85ac      	LDD  R26,Y+12
000697 85bd      	LDD  R27,Y+12+1
000698 940e 1390 	CALL __PUTDP1
                 ; 0002 00BA     }
                 ; 0002 00BB 
                 ; 0002 00BC     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x40034:
00069a 940e 0f98 	CALL SUBOPT_0x21
00069c 937f      	PUSH R23
00069d 936f      	PUSH R22
00069e 93ff      	PUSH R31
00069f 93ef      	PUSH R30
0006a0 940e 0f9d 	CALL SUBOPT_0x22
0006a2 940e 0fa2 	CALL SUBOPT_0x23
0006a4 91af      	POP  R26
0006a5 91bf      	POP  R27
0006a6 918f      	POP  R24
0006a7 919f      	POP  R25
0006a8 940e 11f7 	CALL __ADDF12
0006aa 940e 0fb1 	CALL SUBOPT_0x24
                 ; 0002 00BD     VelocityL = *_velocity-(*_angularV*Length)/2;
0006ac 940e 0f98 	CALL SUBOPT_0x21
0006ae 937f      	PUSH R23
0006af 936f      	PUSH R22
0006b0 93ff      	PUSH R31
0006b1 93ef      	PUSH R30
0006b2 940e 0f9d 	CALL SUBOPT_0x22
0006b4 940e 0fa2 	CALL SUBOPT_0x23
0006b6 91af      	POP  R26
0006b7 91bf      	POP  R27
0006b8 918f      	POP  R24
0006b9 919f      	POP  R25
0006ba 940e 0fb6 	CALL SUBOPT_0x25
0006bc 940e 13a4 	CALL __PUTD1S0
                 ; 0002 00BE 
                 ; 0002 00BF     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0006be 940e 0fbb 	CALL SUBOPT_0x26
0006c0 940e 0fc0 	CALL SUBOPT_0x27
0006c2 85aa      	LDD  R26,Y+10
0006c3 85bb      	LDD  R27,Y+10+1
0006c4 93ed      	ST   X+,R30
0006c5 93fc      	ST   X,R31
                 ; 0002 00C0     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0006c6 940e 0fcf 	CALL SUBOPT_0x28
0006c8 940e 0fc0 	CALL SUBOPT_0x27
0006ca 85a8      	LDD  R26,Y+8
0006cb 85b9      	LDD  R27,Y+8+1
0006cc 93ed      	ST   X+,R30
0006cd 93fc      	ST   X,R31
                 ; 0002 00C1 
                 ; 0002 00C2     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0006ce 85aa      	LDD  R26,Y+10
0006cf 85bb      	LDD  R27,Y+10+1
0006d0 940e 1381 	CALL __GETW1P
0006d2 32ec      	CPI  R30,LOW(0x12C)
0006d3 e0a1      	LDI  R26,HIGH(0x12C)
0006d4 07fa      	CPC  R31,R26
0006d5 f434      	BRGE _0x40036
0006d6 01df      	MOVW R26,R30
0006d7 ede4      	LDI  R30,LOW(65236)
0006d8 effe      	LDI  R31,HIGH(65236)
0006d9 17ea      	CP   R30,R26
0006da 07fb      	CPC  R31,R27
0006db f00c      	BRLT _0x40037
                 _0x40036:
0006dc c014      	RJMP _0x40038
                 _0x40037:
0006dd 85a8      	LDD  R26,Y+8
0006de 85b9      	LDD  R27,Y+8+1
0006df 940e 1381 	CALL __GETW1P
0006e1 32ec      	CPI  R30,LOW(0x12C)
0006e2 e0a1      	LDI  R26,HIGH(0x12C)
0006e3 07fa      	CPC  R31,R26
0006e4 f454      	BRGE _0x40039
0006e5 85a8      	LDD  R26,Y+8
0006e6 85b9      	LDD  R27,Y+8+1
0006e7 940e 1381 	CALL __GETW1P
0006e9 01df      	MOVW R26,R30
0006ea ede4      	LDI  R30,LOW(65236)
0006eb effe      	LDI  R31,HIGH(65236)
0006ec 17ea      	CP   R30,R26
0006ed 07fb      	CPC  R31,R27
0006ee f00c      	BRLT _0x4003A
                 _0x40039:
0006ef c001      	RJMP _0x40038
                 _0x4003A:
0006f0 c001      	RJMP _0x4003B
                 _0x40038:
0006f1 c008      	RJMP _0x40035
                 _0x4003B:
                 ; 0002 00C3         *R_RPM = 0;
0006f2 85aa      	LDD  R26,Y+10
0006f3 85bb      	LDD  R27,Y+10+1
0006f4 940e 0fd2 	CALL SUBOPT_0x29
                 ; 0002 00C4         *L_RPM = 0;
0006f6 85a8      	LDD  R26,Y+8
0006f7 85b9      	LDD  R27,Y+8+1
0006f8 940e 0fd2 	CALL SUBOPT_0x29
                 ; 0002 00C5     }
                 ; 0002 00C6 }
                 _0x40035:
0006fa 940c 08ac 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0002 00C9 {
                 _oper_Disapath:
                 ; 0002 00CA     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0006fc e0e1      	LDI  R30,LOW(1)
0006fd 93ea      	ST   -Y,R30
0006fe e7e9      	LDI  R30,LOW(121)
0006ff e0f0      	LDI  R31,HIGH(121)
000700 93fa      	ST   -Y,R31
000701 93ea      	ST   -Y,R30
000702 81ed      	LDD  R30,Y+5
000703 81fe      	LDD  R31,Y+5+1
000704 940e 0fd7 	CALL SUBOPT_0x2A
                 ; 0002 00CB     delay_ms(5);
                 ; 0002 00CC 
                 ; 0002 00CD     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
000706 e0e2      	LDI  R30,LOW(2)
000707 93ea      	ST   -Y,R30
000708 e7e9      	LDI  R30,LOW(121)
000709 e0f0      	LDI  R31,HIGH(121)
00070a 93fa      	ST   -Y,R31
00070b 93ea      	ST   -Y,R30
00070c 81eb      	LDD  R30,Y+3
00070d 81fc      	LDD  R31,Y+3+1
00070e 940e 12fe 	CALL __ANEGW1
000710 940e 0fd7 	CALL SUBOPT_0x2A
                 ; 0002 00CE     delay_ms(5);
                 ; 0002 00CF 
                 ; 0002 00D0     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
000712 e0e1      	LDI  R30,LOW(1)
000713 940e 0fdc 	CALL SUBOPT_0x2B
                 ; 0002 00D1     delay_ms(5);
                 ; 0002 00D2 
                 ; 0002 00D3     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
000715 e0e2      	LDI  R30,LOW(2)
000716 940e 0fdc 	CALL SUBOPT_0x2B
                 ; 0002 00D4     delay_ms(5);
                 ; 0002 00D5 }
                 _0x20A000C:
000718 9624      	ADIW R28,4
000719 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0002 00D8 {
                 _get_RPM:
                 ; 0002 00D9     unsigned char i = 0;
                 ; 0002 00DA     unsigned int RPM = 0;
                 ; 0002 00DB 
                 ; 0002 00DC     if(PACKET_BUFF[1]!=0x07){
00071a 940e 13ce 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
00071c e010      	LDI  R17,0
                +
00071d e020     +LDI R18 , LOW ( 0 )
00071e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00071f 91a0 0504+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
000721 30a7      	CPI  R26,LOW(0x7)
000722 f149      	BREQ _0x4003C
                 ; 0002 00DD         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
000723 91b0 0508+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
000725 e0a0      	LDI  R26,LOW(0)
                +
000726 91e0 0509+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
000728 940e 0fe4 	CALL SUBOPT_0x2C
00072a 019f      	MOVW R18,R30
                 ; 0002 00DE         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
00072b 91b0 0506+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
00072d e0a0      	LDI  R26,LOW(0)
                +
00072e 91e0 0507+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
000730 940e 0fe4 	CALL SUBOPT_0x2C
000732 81ac      	LDD  R26,Y+4
000733 81bd      	LDD  R27,Y+4+1
000734 93ed      	ST   X+,R30
000735 93fc      	ST   X,R31
                 ; 0002 00DF         for(i = 0; i<IDX; i++) *(str+i) = 0;
000736 e010      	LDI  R17,LOW(0)
                 _0x4003E:
000737 81ee      	LDD  R30,Y+6
000738 171e      	CP   R17,R30
000739 f450      	BRSH _0x4003F
00073a 2fe1      	MOV  R30,R17
00073b e0f0      	LDI  R31,0
00073c 81af      	LDD  R26,Y+7
00073d 85b8      	LDD  R27,Y+7+1
00073e 0fae      	ADD  R26,R30
00073f 1fbf      	ADC  R27,R31
000740 e0e0      	LDI  R30,LOW(0)
000741 93ec      	ST   X,R30
000742 5f1f      	SUBI R17,-1
000743 cff3      	RJMP _0x4003E
                 _0x4003F:
                 ; 0002 00E0 if(RPM == -1)RPM = 0;
000744 efef      	LDI  R30,LOW(65535)
000745 efff      	LDI  R31,HIGH(65535)
000746 17e2      	CP   R30,R18
000747 07f3      	CPC  R31,R19
000748 f411      	BRNE _0x40040
                +
000749 e020     +LDI R18 , LOW ( 0 )
00074a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0002 00E1         return RPM;
                 _0x40040:
00074b 01f9      	MOVW R30,R18
                 ; 0002 00E2     }
                 ; 0002 00E3 }
                 _0x4003C:
                 _0x20A000B:
00074c 940e 13d5 	CALL __LOADLOCR4
00074e 9629      	ADIW R28,9
00074f 9508      	RET
                 ;#include "ext_int.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;////2채배
                 ;void EXT_INT_init(void)
                 ; 0003 0004 {
                 
                 	.CSEG
                 _EXT_INT_init:
                 ; 0003 0005     EICRB = (1<<ISC50)|(1<<ISC60)|(1<<ISC70)|(1<<ISC40);
000750 e5e5      	LDI  R30,LOW(85)
000751 bfea      	OUT  0x3A,R30
                 ; 0003 0006     EIMSK = (1<<INT4)|(1<<INT5)|(1<<INT6)|(1<<INT7);
000752 efe0      	LDI  R30,LOW(240)
000753 bfe9      	OUT  0x39,R30
                 ; 0003 0007 
                 ; 0003 0008     DDRE.4 = 0;
000754 9814      	CBI  0x2,4
                 ; 0003 0009     DDRE.5 = 0;
000755 9815      	CBI  0x2,5
                 ; 0003 000A     DDRE.6 = 0;
000756 9816      	CBI  0x2,6
                 ; 0003 000B     DDRE.7 = 0;
000757 9817      	CBI  0x2,7
                 ; 0003 000C }
000758 9508      	RET
                 ;
                 ;interrupt [EXT_INT4] void hall_sensor_detection1(void)
                 ; 0003 000F {
                 _hall_sensor_detection1:
000759 940e 0fe8 	CALL SUBOPT_0x2D
                 ; 0003 0010     if(RHALL_A != RHALL_B) MOTORR_HALL++;
00075b f039      	BREQ _0x6000B
00075c 940e 0ff8 	CALL SUBOPT_0x2E
00075e 940e 0ffd 	CALL SUBOPT_0x2F
000760 940e 1002 	CALL SUBOPT_0x30
                 ; 0003 0011     else MOTORR_HALL--;
000762 c004      	RJMP _0x6000C
                 _0x6000B:
000763 940e 0ff8 	CALL SUBOPT_0x2E
000765 940e 1008 	CALL SUBOPT_0x31
                 ; 0003 0012 }
                 _0x6000C:
000767 c034      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT5] void hall_sensor_detection2(void)
                 ; 0003 0015 {
                 _hall_sensor_detection2:
000768 940e 0fe8 	CALL SUBOPT_0x2D
                 ; 0003 0016     if(RHALL_A != RHALL_B) MOTORR_HALL--;
00076a f029      	BREQ _0x6000D
00076b 940e 0ff8 	CALL SUBOPT_0x2E
00076d 940e 1008 	CALL SUBOPT_0x31
                 ; 0003 0017     else MOTORR_HALL++;
00076f c004      	RJMP _0x6000E
                 _0x6000D:
000770 940e 0ff8 	CALL SUBOPT_0x2E
000772 940e 100e 	CALL SUBOPT_0x32
                 ; 0003 0018 }
                 _0x6000E:
000774 c027      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT6] void hall_sensor_detection3(void)
                 ; 0003 001B {
                 _hall_sensor_detection3:
000775 940e 1010 	CALL SUBOPT_0x33
                 ; 0003 001C     if(LHALL_B != LHALL_A) MOTORL_HALL--;
000777 e0a0      	LDI  R26,0
000778 990e      	SBIC 0x1,6
000779 e0a1      	LDI  R26,1
00077a e0e0      	LDI  R30,0
00077b 990f      	SBIC 0x1,7
00077c e0e1      	LDI  R30,1
00077d 17ea      	CP   R30,R26
00077e f029      	BREQ _0x6000F
00077f 940e 1019 	CALL SUBOPT_0x34
000781 940e 1008 	CALL SUBOPT_0x31
                 ; 0003 001D     else MOTORL_HALL++;
000783 c004      	RJMP _0x60010
                 _0x6000F:
000784 940e 1019 	CALL SUBOPT_0x34
000786 940e 100e 	CALL SUBOPT_0x32
                 ; 0003 001E }
                 _0x60010:
000788 c013      	RJMP _0x60013
                 ;
                 ;interrupt [EXT_INT7] void hall_sensor_detection4(void)
                 ; 0003 0021 {
                 _hall_sensor_detection4:
000789 940e 1010 	CALL SUBOPT_0x33
                 ; 0003 0022     if(LHALL_A != LHALL_B) MOTORL_HALL++;
00078b e0a0      	LDI  R26,0
00078c 990f      	SBIC 0x1,7
00078d e0a1      	LDI  R26,1
00078e e0e0      	LDI  R30,0
00078f 990e      	SBIC 0x1,6
000790 e0e1      	LDI  R30,1
000791 17ea      	CP   R30,R26
000792 f029      	BREQ _0x60011
000793 940e 1019 	CALL SUBOPT_0x34
000795 940e 100e 	CALL SUBOPT_0x32
                 ; 0003 0023     else MOTORL_HALL--;
000797 c004      	RJMP _0x60012
                 _0x60011:
000798 940e 1019 	CALL SUBOPT_0x34
00079a 940e 1008 	CALL SUBOPT_0x31
                 ; 0003 0024 }
                 _0x60012:
                 _0x60013:
00079c 91e9      	LD   R30,Y+
00079d bfef      	OUT  SREG,R30
00079e 91f9      	LD   R31,Y+
00079f 91e9      	LD   R30,Y+
0007a0 91b9      	LD   R27,Y+
0007a1 91a9      	LD   R26,Y+
0007a2 9179      	LD   R23,Y+
0007a3 9169      	LD   R22,Y+
0007a4 9518      	RETI
                 ;#include <PID_controller.h>
                 ;
                 ;int PID_Controller(int Goal, float now, float* integral, float* Err_previous)
                 ; 0004 0004 {
                 
                 	.CSEG
                 ; 0004 0005     long int pErr = 0;
                 ; 0004 0006     float dErr = 0;
                 ; 0004 0007     long int MV = 0;
                 ; 0004 0008     float Err = 0;
                 ; 0004 0009     unsigned char BUFF[128]={0,};
                 ; 0004 000A 
                 ; 0004 000B     Err = Goal - now; //ERROR
                 ;	Goal -> Y+152
                 ;	now -> Y+148
                 ;	*integral -> Y+146
                 ;	*Err_previous -> Y+144
                 ;	pErr -> Y+140
                 ;	dErr -> Y+136
                 ;	MV -> Y+132
                 ;	Err -> Y+128
                 ;	BUFF -> Y+0
                 ; 0004 000C 
                 ; 0004 000D     // pErr = (Kp*Err); // P
                 ; 0004 000E     // *integral = *integral +(Ki * Err * Time); // I
                 ; 0004 000F     // dErr = (Kd * (Err - *Err_previous)) / Time; // D
                 ; 0004 0010     // MV = (long int)(pErr+ *integral + dErr);// PID Control Volume
                 ; 0004 0011 
                 ; 0004 0012     //sprintf(BUFF, "pErr=%d, integral=%d, dErr=%d, MV=%d  Err=%d\r\n", (int)pErr, *integral, dErr, MV, (int)Err);
                 ; 0004 0013     //string_tx1(BUFF);
                 ; 0004 0014 
                 ; 0004 0015     *Err_previous = Err;
                 ; 0004 0016 
                 ; 0004 0017     return MV;
                 ; 0004 0018 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0007a5 931a      	ST   -Y,R17
0007a6 930a      	ST   -Y,R16
0007a7 81aa      	LDD  R26,Y+2
0007a8 81bb      	LDD  R27,Y+2+1
0007a9 9612      	ADIW R26,2
0007aa 940e 1381 	CALL __GETW1P
0007ac 9730      	SBIW R30,0
0007ad f129      	BREQ _0x2000010
0007ae 81aa      	LDD  R26,Y+2
0007af 81bb      	LDD  R27,Y+2+1
0007b0 9614      	ADIW R26,4
0007b1 940e 1381 	CALL __GETW1P
0007b3 018f      	MOVW R16,R30
0007b4 9730      	SBIW R30,0
0007b5 f061      	BREQ _0x2000012
                +
0007b6 3002     +CPI R16 , LOW ( 2 )
0007b7 e0e0     +LDI R30 , HIGH ( 2 )
0007b8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0007b9 f0c0      	BRLO _0x2000013
0007ba 01f8      	MOVW R30,R16
0007bb 9731      	SBIW R30,1
0007bc 018f      	MOVW R16,R30
                +
0007bd 81aa     +LDD R26 , Y + 2
0007be 81bb     +LDD R27 , Y + 2 + 1
0007bf 9614     +ADIW R26 , 4
0007c0 93ed     +ST X + , R30
0007c1 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0007c2 81aa      	LDD  R26,Y+2
0007c3 81bb      	LDD  R27,Y+2+1
0007c4 9612      	ADIW R26,2
0007c5 940e 0f3b 	CALL SUBOPT_0x19
0007c7 9731      	SBIW R30,1
0007c8 81ac      	LDD  R26,Y+4
0007c9 83a0      	STD  Z+0,R26
0007ca 81aa      	LDD  R26,Y+2
0007cb 81bb      	LDD  R27,Y+2+1
0007cc 940e 1381 	CALL __GETW1P
0007ce 23ff      	TST  R31
0007cf f012      	BRMI _0x2000014
0007d0 940e 0f3b 	CALL SUBOPT_0x19
                 _0x2000014:
                 _0x2000013:
0007d2 c006      	RJMP _0x2000015
                 _0x2000010:
0007d3 81aa      	LDD  R26,Y+2
0007d4 81bb      	LDD  R27,Y+2+1
0007d5 efef      	LDI  R30,LOW(65535)
0007d6 efff      	LDI  R31,HIGH(65535)
0007d7 93ed      	ST   X+,R30
0007d8 93fc      	ST   X,R31
                 _0x2000015:
0007d9 8119      	LDD  R17,Y+1
0007da 8108      	LDD  R16,Y+0
0007db c348      	RJMP _0x20A0007
                 __ftoe_G100:
0007dc 9724      	SBIW R28,4
0007dd 940e 0f94 	CALL SUBOPT_0x20
0007df e8e0      	LDI  R30,LOW(128)
0007e0 83ea      	STD  Y+2,R30
0007e1 e3ef      	LDI  R30,LOW(63)
0007e2 83eb      	STD  Y+3,R30
0007e3 940e 13ce 	CALL __SAVELOCR4
0007e5 85ee      	LDD  R30,Y+14
0007e6 85ff      	LDD  R31,Y+14+1
0007e7 3fef      	CPI  R30,LOW(0xFFFF)
0007e8 efaf      	LDI  R26,HIGH(0xFFFF)
0007e9 07fa      	CPC  R31,R26
0007ea f449      	BRNE _0x2000019
0007eb 85e8      	LDD  R30,Y+8
0007ec 85f9      	LDD  R31,Y+8+1
0007ed 93fa      	ST   -Y,R31
0007ee 93ea      	ST   -Y,R30
                +
0007ef e9ea     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
0007f0 e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
0007f1 940e 101e 	CALL SUBOPT_0x35
0007f3 c0b6      	RJMP _0x20A0009
                 _0x2000019:
0007f4 3fef      	CPI  R30,LOW(0x7FFF)
0007f5 e7af      	LDI  R26,HIGH(0x7FFF)
0007f6 07fa      	CPC  R31,R26
0007f7 f449      	BRNE _0x2000018
0007f8 85e8      	LDD  R30,Y+8
0007f9 85f9      	LDD  R31,Y+8+1
0007fa 93fa      	ST   -Y,R31
0007fb 93ea      	ST   -Y,R30
                +
0007fc e9eb     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
0007fd e0f3     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
0007fe 940e 101e 	CALL SUBOPT_0x35
000800 c0a9      	RJMP _0x20A0009
                 _0x2000018:
000801 85ab      	LDD  R26,Y+11
000802 30a7      	CPI  R26,LOW(0x7)
000803 f010      	BRLO _0x200001B
000804 e0e6      	LDI  R30,LOW(6)
000805 87eb      	STD  Y+11,R30
                 _0x200001B:
000806 851b      	LDD  R17,Y+11
                 _0x200001C:
000807 2fe1      	MOV  R30,R17
000808 5011      	SUBI R17,1
000809 30e0      	CPI  R30,0
00080a f019      	BREQ _0x200001E
00080b 940e 1022 	CALL SUBOPT_0x36
00080d cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00080e 85ec     +LDD R30 , Y + 12
00080f 85fd     +LDD R31 , Y + 12 + 1
000810 856e     +LDD R22 , Y + 12 + 2
000811 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000812 940e 13c2 	CALL __CPD10
000814 f421      	BRNE _0x200001F
000815 e030      	LDI  R19,LOW(0)
000816 940e 1022 	CALL SUBOPT_0x36
000818 c02e      	RJMP _0x2000020
                 _0x200001F:
000819 853b      	LDD  R19,Y+11
00081a 940e 102d 	CALL SUBOPT_0x37
00081c f009      	BREQ PC+2
00081d f410      	BRCC PC+3
00081e 940c 082b 	JMP  _0x2000021
000820 940e 1022 	CALL SUBOPT_0x36
                 _0x2000022:
000822 940e 102d 	CALL SUBOPT_0x37
000824 f028      	BRLO _0x2000024
000825 940e 1035 	CALL SUBOPT_0x38
000827 940e 103a 	CALL SUBOPT_0x39
000829 cff8      	RJMP _0x2000022
                 _0x2000024:
00082a c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
00082b 940e 102d 	CALL SUBOPT_0x37
00082d f440      	BRSH _0x2000028
00082e 940e 1035 	CALL SUBOPT_0x38
000830 940e 1046 	CALL SUBOPT_0x3A
000832 940e 104d 	CALL SUBOPT_0x3B
000834 5031      	SUBI R19,LOW(1)
000835 cff5      	RJMP _0x2000026
                 _0x2000028:
000836 940e 1022 	CALL SUBOPT_0x36
                 _0x2000025:
                +
000838 85ec     +LDD R30 , Y + 12
000839 85fd     +LDD R31 , Y + 12 + 1
00083a 856e     +LDD R22 , Y + 12 + 2
00083b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00083c 940e 1052 	CALL SUBOPT_0x3C
00083e 940e 104d 	CALL SUBOPT_0x3B
000840 940e 102d 	CALL SUBOPT_0x37
000842 f020      	BRLO _0x2000029
000843 940e 1035 	CALL SUBOPT_0x38
000845 940e 103a 	CALL SUBOPT_0x39
                 _0x2000029:
                 _0x2000020:
000847 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000848 85eb      	LDD  R30,Y+11
000849 17e1      	CP   R30,R17
00084a f198      	BRLO _0x200002C
                +
00084b 81ac     +LDD R26 , Y + 4
00084c 81bd     +LDD R27 , Y + 4 + 1
00084d 818e     +LDD R24 , Y + 4 + 2
00084e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00084f 940e 1059 	CALL SUBOPT_0x3D
000851 940e 1052 	CALL SUBOPT_0x3C
000853 940e 1060 	CALL SUBOPT_0x3E
000855 940e 0fb1 	CALL SUBOPT_0x24
000857 940e 0fbb 	CALL SUBOPT_0x26
000859 940e 1035 	CALL SUBOPT_0x38
00085b 940e 1295 	CALL __DIVF21
00085d 940e 1184 	CALL __CFD1U
00085f 2f0e      	MOV  R16,R30
000860 940e 1064 	CALL SUBOPT_0x3F
000862 940e 106b 	CALL SUBOPT_0x40
000864 27ff      	CLR  R31
000865 2766      	CLR  R22
000866 2777      	CLR  R23
000867 940e 11bd 	CALL __CDF1
                +
000869 81ac     +LDD R26 , Y + 4
00086a 81bd     +LDD R27 , Y + 4 + 1
00086b 818e     +LDD R24 , Y + 4 + 2
00086c 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00086d 940e 1247 	CALL __MULF12
00086f 940e 1035 	CALL SUBOPT_0x38
000871 940e 0fb6 	CALL SUBOPT_0x25
000873 940e 104d 	CALL SUBOPT_0x3B
000875 2fe1      	MOV  R30,R17
000876 5f1f      	SUBI R17,-1
000877 30e0      	CPI  R30,0
000878 f679      	BRNE _0x200002A
000879 940e 1064 	CALL SUBOPT_0x3F
00087b e2ee      	LDI  R30,LOW(46)
00087c 93ec      	ST   X,R30
00087d cfca      	RJMP _0x200002A
                 _0x200002C:
00087e 940e 1070 	CALL SUBOPT_0x41
000880 9731      	SBIW R30,1
000881 85aa      	LDD  R26,Y+10
000882 83a0      	STD  Z+0,R26
000883 3030      	CPI  R19,0
000884 f42c      	BRGE _0x200002E
000885 9531      	NEG  R19
000886 85a8      	LDD  R26,Y+8
000887 85b9      	LDD  R27,Y+8+1
000888 e2ed      	LDI  R30,LOW(45)
000889 c003      	RJMP _0x200010E
                 _0x200002E:
00088a 85a8      	LDD  R26,Y+8
00088b 85b9      	LDD  R27,Y+8+1
00088c e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
00088d 93ec      	ST   X,R30
00088e 940e 1070 	CALL SUBOPT_0x41
000890 940e 1070 	CALL SUBOPT_0x41
000892 9731      	SBIW R30,1
000893 01bf      	MOVW R22,R30
000894 2fa3      	MOV  R26,R19
000895 e0ea      	LDI  R30,LOW(10)
000896 940e 133b 	CALL __DIVB21
000898 5de0      	SUBI R30,-LOW(48)
000899 01db      	MOVW R26,R22
00089a 93ec      	ST   X,R30
00089b 940e 1070 	CALL SUBOPT_0x41
00089d 9731      	SBIW R30,1
00089e 01bf      	MOVW R22,R30
00089f 2fa3      	MOV  R26,R19
0008a0 e0ea      	LDI  R30,LOW(10)
0008a1 940e 1365 	CALL __MODB21
0008a3 5de0      	SUBI R30,-LOW(48)
0008a4 01db      	MOVW R26,R22
0008a5 93ec      	ST   X,R30
0008a6 85a8      	LDD  R26,Y+8
0008a7 85b9      	LDD  R27,Y+8+1
0008a8 e0e0      	LDI  R30,LOW(0)
0008a9 93ec      	ST   X,R30
                 _0x20A0009:
0008aa 940e 13d5 	CALL __LOADLOCR4
                 _0x20A000A:
0008ac 9660      	ADIW R28,16
0008ad 9508      	RET
                 __print_G100:
0008ae 97ef      	SBIW R28,63
0008af 9761      	SBIW R28,17
0008b0 940e 13cc 	CALL __SAVELOCR6
0008b2 e010      	LDI  R17,0
                +
0008b3 01fe     +MOVW R30 , R28
0008b4 5ae8     +SUBI R30 , LOW ( - 88 )
0008b5 4fff     +SBCI R31 , HIGH ( - 88 )
0008b6 9001     +LD R0 , Z +
0008b7 81f0     +LD R31 , Z
0008b8 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0008b9 87e8      	STD  Y+8,R30
0008ba 87f9      	STD  Y+8+1,R31
                +
0008bb 01fe     +MOVW R30 , R28
0008bc 5aea     +SUBI R30 , LOW ( - 86 )
0008bd 4fff     +SBCI R31 , HIGH ( - 86 )
0008be 9001     +LD R0 , Z +
0008bf 81f0     +LD R31 , Z
0008c0 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0008c1 83ee      	STD  Y+6,R30
0008c2 83ff      	STD  Y+6+1,R31
0008c3 81ae      	LDD  R26,Y+6
0008c4 81bf      	LDD  R27,Y+6+1
0008c5 940e 0fd2 	CALL SUBOPT_0x29
                 _0x2000030:
0008c7 01de      	MOVW R26,R28
0008c8 5aa4      	SUBI R26,LOW(-(92))
0008c9 4fbf      	SBCI R27,HIGH(-(92))
0008ca 940e 0f3b 	CALL SUBOPT_0x19
0008cc 9731      	SBIW R30,1
0008cd 91e4      	LPM  R30,Z
0008ce 2f2e      	MOV  R18,R30
0008cf 30e0      	CPI  R30,0
0008d0 f411      	BRNE PC+3
0008d1 940c 0ac1 	JMP _0x2000032
0008d3 2fe1      	MOV  R30,R17
0008d4 30e0      	CPI  R30,0
0008d5 f439      	BRNE _0x2000036
0008d6 3225      	CPI  R18,37
0008d7 f411      	BRNE _0x2000037
0008d8 e011      	LDI  R17,LOW(1)
0008d9 c002      	RJMP _0x2000038
                 _0x2000037:
0008da 940e 1076 	CALL SUBOPT_0x42
                 _0x2000038:
0008dc c1e3      	RJMP _0x2000035
                 _0x2000036:
0008dd 30e1      	CPI  R30,LOW(0x1)
0008de f4c1      	BRNE _0x2000039
0008df 3225      	CPI  R18,37
0008e0 f419      	BRNE _0x200003A
0008e1 940e 1076 	CALL SUBOPT_0x42
0008e3 c1db      	RJMP _0x200010F
                 _0x200003A:
0008e4 e012      	LDI  R17,LOW(2)
0008e5 e0e0      	LDI  R30,LOW(0)
0008e6 8bed      	STD  Y+21,R30
0008e7 e000      	LDI  R16,LOW(0)
0008e8 322d      	CPI  R18,45
0008e9 f411      	BRNE _0x200003B
0008ea e001      	LDI  R16,LOW(1)
0008eb c1d4      	RJMP _0x2000035
                 _0x200003B:
0008ec 322b      	CPI  R18,43
0008ed f419      	BRNE _0x200003C
0008ee e2eb      	LDI  R30,LOW(43)
0008ef 8bed      	STD  Y+21,R30
0008f0 c1cf      	RJMP _0x2000035
                 _0x200003C:
0008f1 3220      	CPI  R18,32
0008f2 f419      	BRNE _0x200003D
0008f3 e2e0      	LDI  R30,LOW(32)
0008f4 8bed      	STD  Y+21,R30
0008f5 c1ca      	RJMP _0x2000035
                 _0x200003D:
0008f6 c002      	RJMP _0x200003E
                 _0x2000039:
0008f7 30e2      	CPI  R30,LOW(0x2)
0008f8 f439      	BRNE _0x200003F
                 _0x200003E:
0008f9 e050      	LDI  R21,LOW(0)
0008fa e013      	LDI  R17,LOW(3)
0008fb 3320      	CPI  R18,48
0008fc f411      	BRNE _0x2000040
0008fd 6800      	ORI  R16,LOW(128)
0008fe c1c1      	RJMP _0x2000035
                 _0x2000040:
0008ff c002      	RJMP _0x2000041
                 _0x200003F:
000900 30e3      	CPI  R30,LOW(0x3)
000901 f491      	BRNE _0x2000042
                 _0x2000041:
000902 3320      	CPI  R18,48
000903 f010      	BRLO _0x2000044
000904 332a      	CPI  R18,58
000905 f008      	BRLO _0x2000045
                 _0x2000044:
000906 c007      	RJMP _0x2000043
                 _0x2000045:
000907 e0aa      	LDI  R26,LOW(10)
000908 9f5a      	MUL  R21,R26
000909 2d50      	MOV  R21,R0
00090a 2fe2      	MOV  R30,R18
00090b 53e0      	SUBI R30,LOW(48)
00090c 0f5e      	ADD  R21,R30
00090d c1b2      	RJMP _0x2000035
                 _0x2000043:
00090e e040      	LDI  R20,LOW(0)
00090f 322e      	CPI  R18,46
000910 f411      	BRNE _0x2000046
000911 e014      	LDI  R17,LOW(4)
000912 c1ad      	RJMP _0x2000035
                 _0x2000046:
000913 c00f      	RJMP _0x2000047
                 _0x2000042:
000914 30e4      	CPI  R30,LOW(0x4)
000915 f499      	BRNE _0x2000049
000916 3320      	CPI  R18,48
000917 f010      	BRLO _0x200004B
000918 332a      	CPI  R18,58
000919 f008      	BRLO _0x200004C
                 _0x200004B:
00091a c008      	RJMP _0x200004A
                 _0x200004C:
00091b 6200      	ORI  R16,LOW(32)
00091c e0aa      	LDI  R26,LOW(10)
00091d 9f4a      	MUL  R20,R26
00091e 2d40      	MOV  R20,R0
00091f 2fe2      	MOV  R30,R18
000920 53e0      	SUBI R30,LOW(48)
000921 0f4e      	ADD  R20,R30
000922 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000923 362c      	CPI  R18,108
000924 f419      	BRNE _0x200004D
000925 6002      	ORI  R16,LOW(2)
000926 e015      	LDI  R17,LOW(5)
000927 c198      	RJMP _0x2000035
                 _0x200004D:
000928 c004      	RJMP _0x200004E
                 _0x2000049:
000929 30e5      	CPI  R30,LOW(0x5)
00092a f011      	BREQ PC+3
00092b 940c 0ac0 	JMP _0x2000035
                 _0x200004E:
00092d 2fe2      	MOV  R30,R18
00092e 36e3      	CPI  R30,LOW(0x63)
00092f f459      	BRNE _0x2000053
000930 940e 107f 	CALL SUBOPT_0x43
000932 940e 1086 	CALL SUBOPT_0x44
000934 940e 107f 	CALL SUBOPT_0x43
000936 81a4      	LDD  R26,Z+4
000937 93aa      	ST   -Y,R26
000938 940e 108d 	CALL SUBOPT_0x45
00093a c184      	RJMP _0x2000054
                 _0x2000053:
00093b 34e5      	CPI  R30,LOW(0x45)
00093c f011      	BREQ _0x2000057
00093d 36e5      	CPI  R30,LOW(0x65)
00093e f409      	BRNE _0x2000058
                 _0x2000057:
00093f c004      	RJMP _0x2000059
                 _0x2000058:
000940 36e6      	CPI  R30,LOW(0x66)
000941 f011      	BREQ PC+3
000942 940c 098e 	JMP _0x200005A
                 _0x2000059:
000944 01fe      	MOVW R30,R28
000945 9676      	ADIW R30,22
000946 87ee      	STD  Y+14,R30
000947 87ff      	STD  Y+14+1,R31
000948 940e 1095 	CALL SUBOPT_0x46
00094a 940e 1385 	CALL __GETD1P
00094c 940e 109c 	CALL SUBOPT_0x47
00094e 940e 10a1 	CALL SUBOPT_0x48
000950 85ad      	LDD  R26,Y+13
000951 23aa      	TST  R26
000952 f022      	BRMI _0x200005B
000953 89ad      	LDD  R26,Y+21
000954 32ab      	CPI  R26,LOW(0x2B)
000955 f049      	BREQ _0x200005D
000956 c017      	RJMP _0x200005E
                 _0x200005B:
000957 940e 10a3 	CALL SUBOPT_0x49
000959 940e 1151 	CALL __ANEGF1
00095b 940e 109c 	CALL SUBOPT_0x47
00095d e2ed      	LDI  R30,LOW(45)
00095e 8bed      	STD  Y+21,R30
                 _0x200005D:
00095f ff07      	SBRS R16,7
000960 c005      	RJMP _0x200005F
000961 89ed      	LDD  R30,Y+21
000962 93ea      	ST   -Y,R30
000963 940e 108d 	CALL SUBOPT_0x45
000965 c008      	RJMP _0x2000060
                 _0x200005F:
000966 85ee      	LDD  R30,Y+14
000967 85ff      	LDD  R31,Y+14+1
000968 9631      	ADIW R30,1
000969 87ee      	STD  Y+14,R30
00096a 87ff      	STD  Y+14+1,R31
00096b 9731      	SBIW R30,1
00096c 89ad      	LDD  R26,Y+21
00096d 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
00096e ff05      	SBRS R16,5
00096f e046      	LDI  R20,LOW(6)
000970 3626      	CPI  R18,102
000971 f461      	BRNE _0x2000062
000972 940e 10a3 	CALL SUBOPT_0x49
000974 940e 13ab 	CALL __PUTPARD1
000976 934a      	ST   -Y,R20
000977 89eb      	LDD  R30,Y+19
000978 89fc      	LDD  R31,Y+19+1
000979 93fa      	ST   -Y,R31
00097a 93ea      	ST   -Y,R30
00097b 940e 0da1 	CALL _ftoa
00097d c00b      	RJMP _0x2000063
                 _0x2000062:
00097e 940e 10a3 	CALL SUBOPT_0x49
000980 940e 13ab 	CALL __PUTPARD1
000982 934a      	ST   -Y,R20
000983 932a      	ST   -Y,R18
000984 89ec      	LDD  R30,Y+20
000985 89fd      	LDD  R31,Y+20+1
000986 93fa      	ST   -Y,R31
000987 93ea      	ST   -Y,R30
000988 de53      	RCALL __ftoe_G100
                 _0x2000063:
000989 01fe      	MOVW R30,R28
00098a 9676      	ADIW R30,22
00098b 940e 10a8 	CALL SUBOPT_0x4A
00098d c01e      	RJMP _0x2000064
                 _0x200005A:
00098e 37e3      	CPI  R30,LOW(0x73)
00098f f439      	BRNE _0x2000066
000990 940e 10a1 	CALL SUBOPT_0x48
000992 940e 10b0 	CALL SUBOPT_0x4B
000994 940e 10a8 	CALL SUBOPT_0x4A
000996 c00e      	RJMP _0x2000067
                 _0x2000066:
000997 37e0      	CPI  R30,LOW(0x70)
000998 f4c1      	BRNE _0x2000069
000999 940e 10a1 	CALL SUBOPT_0x48
00099b 940e 10b0 	CALL SUBOPT_0x4B
00099d 87ee      	STD  Y+14,R30
00099e 87ff      	STD  Y+14+1,R31
00099f 93fa      	ST   -Y,R31
0009a0 93ea      	ST   -Y,R30
0009a1 940e 0d96 	CALL _strlenf
0009a3 2f1e      	MOV  R17,R30
0009a4 6008      	ORI  R16,LOW(8)
                 _0x2000067:
0009a5 770f      	ANDI R16,LOW(127)
0009a6 3040      	CPI  R20,0
0009a7 f011      	BREQ _0x200006B
0009a8 1741      	CP   R20,R17
0009a9 f008      	BRLO _0x200006C
                 _0x200006B:
0009aa c001      	RJMP _0x200006A
                 _0x200006C:
0009ab 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
0009ac e040      	LDI  R20,LOW(0)
0009ad e0e0      	LDI  R30,LOW(0)
0009ae 8bec      	STD  Y+20,R30
0009af e030      	LDI  R19,LOW(0)
0009b0 c06e      	RJMP _0x200006D
                 _0x2000069:
0009b1 36e4      	CPI  R30,LOW(0x64)
0009b2 f011      	BREQ _0x2000070
0009b3 36e9      	CPI  R30,LOW(0x69)
0009b4 f411      	BRNE _0x2000071
                 _0x2000070:
0009b5 6004      	ORI  R16,LOW(4)
0009b6 c002      	RJMP _0x2000072
                 _0x2000071:
0009b7 37e5      	CPI  R30,LOW(0x75)
0009b8 f4a1      	BRNE _0x2000073
                 _0x2000072:
0009b9 e0ea      	LDI  R30,LOW(10)
0009ba 8bec      	STD  Y+20,R30
0009bb ff01      	SBRS R16,1
0009bc c008      	RJMP _0x2000074
                +
0009bd e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0009be ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0009bf e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0009c0 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0009c1 940e 10b5 	CALL SUBOPT_0x4C
0009c3 e01a      	LDI  R17,LOW(10)
0009c4 c023      	RJMP _0x2000075
                 _0x2000074:
                +
0009c5 e1e0     +LDI R30 , LOW ( 0x2710 )
0009c6 e2f7     +LDI R31 , HIGH ( 0x2710 )
0009c7 e060     +LDI R22 , BYTE3 ( 0x2710 )
0009c8 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0009c9 940e 10b5 	CALL SUBOPT_0x4C
0009cb e015      	LDI  R17,LOW(5)
0009cc c01b      	RJMP _0x2000075
                 _0x2000073:
0009cd 35e8      	CPI  R30,LOW(0x58)
0009ce f411      	BRNE _0x2000077
0009cf 6008      	ORI  R16,LOW(8)
0009d0 c004      	RJMP _0x2000078
                 _0x2000077:
0009d1 37e8      	CPI  R30,LOW(0x78)
0009d2 f011      	BREQ PC+3
0009d3 940c 0abf 	JMP _0x20000B6
                 _0x2000078:
0009d5 e1e0      	LDI  R30,LOW(16)
0009d6 8bec      	STD  Y+20,R30
0009d7 ff01      	SBRS R16,1
0009d8 c008      	RJMP _0x200007A
                +
0009d9 e0e0     +LDI R30 , LOW ( 0x10000000 )
0009da e0f0     +LDI R31 , HIGH ( 0x10000000 )
0009db e060     +LDI R22 , BYTE3 ( 0x10000000 )
0009dc e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0009dd 940e 10b5 	CALL SUBOPT_0x4C
0009df e018      	LDI  R17,LOW(8)
0009e0 c007      	RJMP _0x2000075
                 _0x200007A:
                +
0009e1 e0e0     +LDI R30 , LOW ( 0x1000 )
0009e2 e1f0     +LDI R31 , HIGH ( 0x1000 )
0009e3 e060     +LDI R22 , BYTE3 ( 0x1000 )
0009e4 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0009e5 940e 10b5 	CALL SUBOPT_0x4C
0009e7 e014      	LDI  R17,LOW(4)
                 _0x2000075:
0009e8 3040      	CPI  R20,0
0009e9 f011      	BREQ _0x200007B
0009ea 770f      	ANDI R16,LOW(127)
0009eb c001      	RJMP _0x200007C
                 _0x200007B:
0009ec e041      	LDI  R20,LOW(1)
                 _0x200007C:
0009ed ff01      	SBRS R16,1
0009ee c008      	RJMP _0x200007D
0009ef 940e 10a1 	CALL SUBOPT_0x48
0009f1 940e 1095 	CALL SUBOPT_0x46
0009f3 9614      	ADIW R26,4
0009f4 940e 1385 	CALL __GETD1P
0009f6 c00f      	RJMP _0x2000110
                 _0x200007D:
0009f7 ff02      	SBRS R16,2
0009f8 c007      	RJMP _0x200007F
0009f9 940e 10a1 	CALL SUBOPT_0x48
0009fb 940e 10b0 	CALL SUBOPT_0x4B
0009fd 940e 1315 	CALL __CWD1
0009ff c006      	RJMP _0x2000110
                 _0x200007F:
000a00 940e 10a1 	CALL SUBOPT_0x48
000a02 940e 10b0 	CALL SUBOPT_0x4B
000a04 2766      	CLR  R22
000a05 2777      	CLR  R23
                 _0x2000110:
                +
000a06 87ea     +STD Y + 10 , R30
000a07 87fb     +STD Y + 10 + 1 , R31
000a08 876c     +STD Y + 10 + 2 , R22
000a09 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000a0a ff02      	SBRS R16,2
000a0b c012      	RJMP _0x2000081
000a0c 85ad      	LDD  R26,Y+13
000a0d 23aa      	TST  R26
000a0e f442      	BRPL _0x2000082
000a0f 940e 10a3 	CALL SUBOPT_0x49
000a11 940e 1302 	CALL __ANEGD1
000a13 940e 109c 	CALL SUBOPT_0x47
000a15 e2ed      	LDI  R30,LOW(45)
000a16 8bed      	STD  Y+21,R30
                 _0x2000082:
000a17 89ed      	LDD  R30,Y+21
000a18 30e0      	CPI  R30,0
000a19 f019      	BREQ _0x2000083
000a1a 5f1f      	SUBI R17,-LOW(1)
000a1b 5f4f      	SUBI R20,-LOW(1)
000a1c c001      	RJMP _0x2000084
                 _0x2000083:
000a1d 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
000a1e 2f34      	MOV  R19,R20
                 _0x200006D:
000a1f fd00      	SBRC R16,0
000a20 c014      	RJMP _0x2000085
                 _0x2000086:
000a21 1715      	CP   R17,R21
000a22 f410      	BRSH _0x2000089
000a23 1735      	CP   R19,R21
000a24 f008      	BRLO _0x200008A
                 _0x2000089:
000a25 c00f      	RJMP _0x2000088
                 _0x200008A:
000a26 ff07      	SBRS R16,7
000a27 c008      	RJMP _0x200008B
000a28 ff02      	SBRS R16,2
000a29 c004      	RJMP _0x200008C
000a2a 7f0b      	ANDI R16,LOW(251)
000a2b 892d      	LDD  R18,Y+21
000a2c 5011      	SUBI R17,LOW(1)
000a2d c001      	RJMP _0x200008D
                 _0x200008C:
000a2e e320      	LDI  R18,LOW(48)
                 _0x200008D:
000a2f c001      	RJMP _0x200008E
                 _0x200008B:
000a30 e220      	LDI  R18,LOW(32)
                 _0x200008E:
000a31 940e 1076 	CALL SUBOPT_0x42
000a33 5051      	SUBI R21,LOW(1)
000a34 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
000a35 1714      	CP   R17,R20
000a36 f490      	BRSH _0x2000091
000a37 6100      	ORI  R16,LOW(16)
000a38 ff02      	SBRS R16,2
000a39 c006      	RJMP _0x2000092
000a3a 940e 10ba 	CALL SUBOPT_0x4D
000a3c f009      	BREQ _0x2000093
000a3d 5051      	SUBI R21,LOW(1)
                 _0x2000093:
000a3e 5011      	SUBI R17,LOW(1)
000a3f 5041      	SUBI R20,LOW(1)
                 _0x2000092:
000a40 e3e0      	LDI  R30,LOW(48)
000a41 93ea      	ST   -Y,R30
000a42 940e 108d 	CALL SUBOPT_0x45
000a44 3050      	CPI  R21,0
000a45 f009      	BREQ _0x2000094
000a46 5051      	SUBI R21,LOW(1)
                 _0x2000094:
000a47 5041      	SUBI R20,LOW(1)
000a48 cfec      	RJMP _0x200008F
                 _0x2000091:
000a49 2f31      	MOV  R19,R17
000a4a 89ec      	LDD  R30,Y+20
000a4b 30e0      	CPI  R30,0
000a4c f4b9      	BRNE _0x2000095
                 _0x2000096:
000a4d 3030      	CPI  R19,0
000a4e f0a1      	BREQ _0x2000098
000a4f ff03      	SBRS R16,3
000a50 c006      	RJMP _0x2000099
000a51 85ee      	LDD  R30,Y+14
000a52 85ff      	LDD  R31,Y+14+1
000a53 9125      	LPM  R18,Z+
000a54 87ee      	STD  Y+14,R30
000a55 87ff      	STD  Y+14+1,R31
000a56 c005      	RJMP _0x200009A
                 _0x2000099:
000a57 85ae      	LDD  R26,Y+14
000a58 85bf      	LDD  R27,Y+14+1
000a59 912d      	LD   R18,X+
000a5a 87ae      	STD  Y+14,R26
000a5b 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000a5c 940e 1076 	CALL SUBOPT_0x42
000a5e 3050      	CPI  R21,0
000a5f f009      	BREQ _0x200009B
000a60 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000a61 5031      	SUBI R19,LOW(1)
000a62 cfea      	RJMP _0x2000096
                 _0x2000098:
000a63 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
000a64 940e 10ce 	CALL SUBOPT_0x4E
000a66 940e 1340 	CALL __DIVD21U
000a68 2f2e      	MOV  R18,R30
000a69 302a      	CPI  R18,10
000a6a f030      	BRLO _0x20000A0
000a6b ff03      	SBRS R16,3
000a6c c002      	RJMP _0x20000A1
000a6d 5c29      	SUBI R18,-LOW(55)
000a6e c001      	RJMP _0x20000A2
                 _0x20000A1:
000a6f 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000a70 c001      	RJMP _0x20000A3
                 _0x20000A0:
000a71 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000a72 fd04      	SBRC R16,4
000a73 c021      	RJMP _0x20000A5
000a74 3321      	CPI  R18,49
000a75 f460      	BRSH _0x20000A7
                +
000a76 89a8     +LDD R26 , Y + 16
000a77 89b9     +LDD R27 , Y + 16 + 1
000a78 898a     +LDD R24 , Y + 16 + 2
000a79 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000a7a 30a1     +CPI R26 , LOW ( 0x1 )
000a7b e0e0     +LDI R30 , HIGH ( 0x1 )
000a7c 07be     +CPC R27 , R30
000a7d e0e0     +LDI R30 , BYTE3 ( 0x1 )
000a7e 078e     +CPC R24 , R30
000a7f e0e0     +LDI R30 , BYTE4 ( 0x1 )
000a80 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000a81 f409      	BRNE _0x20000A6
                 _0x20000A7:
000a82 c00b      	RJMP _0x20000A9
                 _0x20000A6:
000a83 1743      	CP   R20,R19
000a84 f440      	BRSH _0x2000111
000a85 1753      	CP   R21,R19
000a86 f010      	BRLO _0x20000AC
000a87 ff00      	SBRS R16,0
000a88 c001      	RJMP _0x20000AD
                 _0x20000AC:
000a89 c010      	RJMP _0x20000AB
                 _0x20000AD:
000a8a e220      	LDI  R18,LOW(32)
000a8b ff07      	SBRS R16,7
000a8c c008      	RJMP _0x20000AE
                 _0x2000111:
000a8d e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000a8e 6100      	ORI  R16,LOW(16)
000a8f ff02      	SBRS R16,2
000a90 c004      	RJMP _0x20000AF
000a91 940e 10ba 	CALL SUBOPT_0x4D
000a93 f009      	BREQ _0x20000B0
000a94 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000a95 940e 1076 	CALL SUBOPT_0x42
000a97 3050      	CPI  R21,0
000a98 f009      	BREQ _0x20000B1
000a99 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000a9a 5031      	SUBI R19,LOW(1)
000a9b 940e 10ce 	CALL SUBOPT_0x4E
000a9d 940e 1371 	CALL __MODD21U
000a9f 940e 109c 	CALL SUBOPT_0x47
000aa1 89ec      	LDD  R30,Y+20
                +
000aa2 89a8     +LDD R26 , Y + 16
000aa3 89b9     +LDD R27 , Y + 16 + 1
000aa4 898a     +LDD R24 , Y + 16 + 2
000aa5 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000aa6 27ff      	CLR  R31
000aa7 2766      	CLR  R22
000aa8 2777      	CLR  R23
000aa9 940e 1340 	CALL __DIVD21U
000aab 940e 10b5 	CALL SUBOPT_0x4C
                +
000aad 89e8     +LDD R30 , Y + 16
000aae 89f9     +LDD R31 , Y + 16 + 1
000aaf 896a     +LDD R22 , Y + 16 + 2
000ab0 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000ab1 940e 13c2 	CALL __CPD10
000ab3 f009      	BREQ _0x200009F
000ab4 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000ab5 ff00      	SBRS R16,0
000ab6 c008      	RJMP _0x20000B2
                 _0x20000B3:
000ab7 3050      	CPI  R21,0
000ab8 f031      	BREQ _0x20000B5
000ab9 5051      	SUBI R21,LOW(1)
000aba e2e0      	LDI  R30,LOW(32)
000abb 93ea      	ST   -Y,R30
000abc 940e 108d 	CALL SUBOPT_0x45
000abe cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
000abf e010      	LDI  R17,LOW(0)
                 _0x2000035:
000ac0 ce06      	RJMP _0x2000030
                 _0x2000032:
000ac1 81ae      	LDD  R26,Y+6
000ac2 81bf      	LDD  R27,Y+6+1
000ac3 940e 1381 	CALL __GETW1P
000ac5 940e 13d3 	CALL __LOADLOCR6
000ac7 96ef      	ADIW R28,63
000ac8 966f      	ADIW R28,31
000ac9 9508      	RET
                 _sprintf:
000aca 92ff      	PUSH R15
000acb 2ef8      	MOV  R15,R24
000acc 9726      	SBIW R28,6
000acd 940e 13ce 	CALL __SAVELOCR4
000acf 940e 10d7 	CALL SUBOPT_0x4F
000ad1 9730      	SBIW R30,0
000ad2 f419      	BRNE _0x20000B7
000ad3 efef      	LDI  R30,LOW(65535)
000ad4 efff      	LDI  R31,HIGH(65535)
000ad5 c023      	RJMP _0x20A0008
                 _0x20000B7:
000ad6 01de      	MOVW R26,R28
000ad7 9616      	ADIW R26,6
000ad8 940e 12fa 	CALL __ADDW2R15
000ada 018d      	MOVW R16,R26
000adb 940e 10d7 	CALL SUBOPT_0x4F
000add 83ee      	STD  Y+6,R30
000ade 83ff      	STD  Y+6+1,R31
000adf e0e0      	LDI  R30,LOW(0)
000ae0 87e8      	STD  Y+8,R30
000ae1 87e9      	STD  Y+8+1,R30
000ae2 01de      	MOVW R26,R28
000ae3 961a      	ADIW R26,10
000ae4 940e 10de 	CALL SUBOPT_0x50
000ae6 93fa      	ST   -Y,R31
000ae7 93ea      	ST   -Y,R30
000ae8 931a      	ST   -Y,R17
000ae9 930a      	ST   -Y,R16
000aea eae5      	LDI  R30,LOW(_put_buff_G100)
000aeb e0f7      	LDI  R31,HIGH(_put_buff_G100)
000aec 93fa      	ST   -Y,R31
000aed 93ea      	ST   -Y,R30
000aee 01fe      	MOVW R30,R28
000aef 963a      	ADIW R30,10
000af0 93fa      	ST   -Y,R31
000af1 93ea      	ST   -Y,R30
000af2 ddbb      	RCALL __print_G100
000af3 019f      	MOVW R18,R30
000af4 81ae      	LDD  R26,Y+6
000af5 81bf      	LDD  R27,Y+6+1
000af6 e0e0      	LDI  R30,LOW(0)
000af7 93ec      	ST   X,R30
000af8 01f9      	MOVW R30,R18
                 _0x20A0008:
000af9 940e 13d5 	CALL __LOADLOCR4
000afb 962a      	ADIW R28,10
000afc 90ff      	POP  R15
000afd 9508      	RET
                 _get_buff_G100:
000afe 931a      	ST   -Y,R17
000aff 81a9      	LDD  R26,Y+1
000b00 81ba      	LDD  R27,Y+1+1
000b01 e0e0      	LDI  R30,LOW(0)
000b02 93ec      	ST   X,R30
000b03 81ab      	LDD  R26,Y+3
000b04 81bc      	LDD  R27,Y+3+1
000b05 91ec      	LD   R30,X
000b06 2f1e      	MOV  R17,R30
000b07 30e0      	CPI  R30,0
000b08 f019      	BREQ _0x20000BF
000b09 e0e0      	LDI  R30,LOW(0)
000b0a 93ec      	ST   X,R30
000b0b c016      	RJMP _0x20000C0
                 _0x20000BF:
000b0c 81a9      	LDD  R26,Y+1
000b0d 81ba      	LDD  R27,Y+1+1
000b0e 9611      	ADIW R26,1
000b0f 940e 1381 	CALL __GETW1P
000b11 9730      	SBIW R30,0
000b12 f071      	BREQ _0x20000C1
000b13 81e9      	LDD  R30,Y+1
000b14 81fa      	LDD  R31,Y+1+1
000b15 81a1      	LDD  R26,Z+1
000b16 81b2      	LDD  R27,Z+2
000b17 91ec      	LD   R30,X
000b18 2f1e      	MOV  R17,R30
000b19 30e0      	CPI  R30,0
000b1a f029      	BREQ _0x20000C2
000b1b 81a9      	LDD  R26,Y+1
000b1c 81ba      	LDD  R27,Y+1+1
000b1d 9611      	ADIW R26,1
000b1e 940e 0f3b 	CALL SUBOPT_0x19
                 _0x20000C2:
000b20 c001      	RJMP _0x20000C3
                 _0x20000C1:
000b21 e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000b22 2fe1      	MOV  R30,R17
000b23 8118      	LDD  R17,Y+0
                 _0x20A0007:
000b24 9625      	ADIW R28,5
000b25 9508      	RET
                 __scanf_G100:
000b26 9725      	SBIW R28,5
000b27 940e 13cc 	CALL __SAVELOCR6
000b29 e0e0      	LDI  R30,LOW(0)
000b2a e0f0      	LDI  R31,HIGH(0)
000b2b 87e8      	STD  Y+8,R30
000b2c 87f9      	STD  Y+8+1,R31
000b2d 2f4e      	MOV  R20,R30
                 _0x20000C4:
000b2e 89e9      	LDD  R30,Y+17
000b2f 89fa      	LDD  R31,Y+17+1
000b30 9631      	ADIW R30,1
000b31 8be9      	STD  Y+17,R30
000b32 8bfa      	STD  Y+17+1,R31
000b33 9731      	SBIW R30,1
000b34 91e4      	LPM  R30,Z
000b35 2f3e      	MOV  R19,R30
000b36 30e0      	CPI  R30,0
000b37 f411      	BRNE PC+3
000b38 940c 0c53 	JMP _0x20000C6
000b3a 940e 10e3 	CALL SUBOPT_0x51
000b3c f0c1      	BREQ _0x20000C7
                 _0x20000C8:
000b3d b7ed      	IN   R30,SPL
000b3e b7fe      	IN   R31,SPH
000b3f 93fa      	ST   -Y,R31
000b40 93ea      	ST   -Y,R30
000b41 934f      	PUSH R20
000b42 940e 10e8 	CALL SUBOPT_0x52
000b44 914f      	POP  R20
000b45 2f3e      	MOV  R19,R30
000b46 30e0      	CPI  R30,0
000b47 f019      	BREQ _0x20000CB
000b48 940e 10e3 	CALL SUBOPT_0x51
000b4a f409      	BRNE _0x20000CC
                 _0x20000CB:
000b4b c007      	RJMP _0x20000CA
                 _0x20000CC:
000b4c 940e 10f0 	CALL SUBOPT_0x53
000b4e f41c      	BRGE _0x20000CD
000b4f efef      	LDI  R30,LOW(65535)
000b50 efff      	LDI  R31,HIGH(65535)
000b51 c103      	RJMP _0x20A0005
                 _0x20000CD:
000b52 cfea      	RJMP _0x20000C8
                 _0x20000CA:
000b53 2f43      	MOV  R20,R19
000b54 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
000b55 3235      	CPI  R19,37
000b56 f011      	BREQ PC+3
000b57 940c 0c3a 	JMP _0x20000CF
000b59 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
000b5a 89e9      	LDD  R30,Y+17
000b5b 89fa      	LDD  R31,Y+17+1
000b5c 9135      	LPM  R19,Z+
000b5d 8be9      	STD  Y+17,R30
000b5e 8bfa      	STD  Y+17+1,R31
000b5f 3330      	CPI  R19,48
000b60 f010      	BRLO _0x20000D4
000b61 333a      	CPI  R19,58
000b62 f008      	BRLO _0x20000D3
                 _0x20000D4:
000b63 c007      	RJMP _0x20000D2
                 _0x20000D3:
000b64 e0aa      	LDI  R26,LOW(10)
000b65 9f5a      	MUL  R21,R26
000b66 2d50      	MOV  R21,R0
000b67 2fe3      	MOV  R30,R19
000b68 53e0      	SUBI R30,LOW(48)
000b69 0f5e      	ADD  R21,R30
000b6a cfef      	RJMP _0x20000D0
                 _0x20000D2:
000b6b 3030      	CPI  R19,0
000b6c f409      	BRNE _0x20000D6
000b6d c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
000b6e b7ed      	IN   R30,SPL
000b6f b7fe      	IN   R31,SPH
000b70 93fa      	ST   -Y,R31
000b71 93ea      	ST   -Y,R30
000b72 934f      	PUSH R20
000b73 940e 10e8 	CALL SUBOPT_0x52
000b75 914f      	POP  R20
000b76 2f2e      	MOV  R18,R30
000b77 93ea      	ST   -Y,R30
000b78 940e 0d69 	CALL _isspace
000b7a 30e0      	CPI  R30,0
000b7b f039      	BREQ _0x20000D9
000b7c 940e 10f0 	CALL SUBOPT_0x53
000b7e f41c      	BRGE _0x20000DA
000b7f efef      	LDI  R30,LOW(65535)
000b80 efff      	LDI  R31,HIGH(65535)
000b81 c0d3      	RJMP _0x20A0005
                 _0x20000DA:
000b82 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
000b83 3020      	CPI  R18,0
000b84 f409      	BRNE _0x20000DB
000b85 c0c4      	RJMP _0x20000DC
                 _0x20000DB:
000b86 2f42      	MOV  R20,R18
000b87 3050      	CPI  R21,0
000b88 f409      	BRNE _0x20000DD
000b89 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
000b8a 2fe3      	MOV  R30,R19
000b8b 36e3      	CPI  R30,LOW(0x63)
000b8c f499      	BRNE _0x20000E1
000b8d 940e 10f5 	CALL SUBOPT_0x54
000b8f b7ed      	IN   R30,SPL
000b90 b7fe      	IN   R31,SPH
000b91 93fa      	ST   -Y,R31
000b92 93ea      	ST   -Y,R30
000b93 934f      	PUSH R20
000b94 940e 10e8 	CALL SUBOPT_0x52
000b96 914f      	POP  R20
000b97 01d8      	MOVW R26,R16
000b98 93ec      	ST   X,R30
000b99 940e 10f0 	CALL SUBOPT_0x53
000b9b f41c      	BRGE _0x20000E2
000b9c efef      	LDI  R30,LOW(65535)
000b9d efff      	LDI  R31,HIGH(65535)
000b9e c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000b9f c097      	RJMP _0x20000E0
                 _0x20000E1:
000ba0 37e3      	CPI  R30,LOW(0x73)
000ba1 f541      	BRNE _0x20000EB
000ba2 940e 10f5 	CALL SUBOPT_0x54
                 _0x20000E4:
000ba4 2fe5      	MOV  R30,R21
000ba5 5051      	SUBI R21,1
000ba6 30e0      	CPI  R30,0
000ba7 f0f1      	BREQ _0x20000E6
000ba8 b7ed      	IN   R30,SPL
000ba9 b7fe      	IN   R31,SPH
000baa 93fa      	ST   -Y,R31
000bab 93ea      	ST   -Y,R30
000bac 934f      	PUSH R20
000bad 940e 10e8 	CALL SUBOPT_0x52
000baf 914f      	POP  R20
000bb0 2f3e      	MOV  R19,R30
000bb1 30e0      	CPI  R30,0
000bb2 f019      	BREQ _0x20000E8
000bb3 940e 10e3 	CALL SUBOPT_0x51
000bb5 f039      	BREQ _0x20000E7
                 _0x20000E8:
000bb6 940e 10f0 	CALL SUBOPT_0x53
000bb8 f41c      	BRGE _0x20000EA
000bb9 efef      	LDI  R30,LOW(65535)
000bba efff      	LDI  R31,HIGH(65535)
000bbb c099      	RJMP _0x20A0005
                 _0x20000EA:
000bbc c009      	RJMP _0x20000E6
                 _0x20000E7:
000bbd 931f      	PUSH R17
000bbe 930f      	PUSH R16
                +
000bbf 5f0f     +SUBI R16 , LOW ( - 1 )
000bc0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000bc1 2fe3      	MOV  R30,R19
000bc2 91af      	POP  R26
000bc3 91bf      	POP  R27
000bc4 93ec      	ST   X,R30
000bc5 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000bc6 01d8      	MOVW R26,R16
000bc7 e0e0      	LDI  R30,LOW(0)
000bc8 93ec      	ST   X,R30
000bc9 c06d      	RJMP _0x20000E0
                 _0x20000EB:
000bca e0e1      	LDI  R30,LOW(1)
000bcb 87ea      	STD  Y+10,R30
000bcc 2fe3      	MOV  R30,R19
000bcd 36e4      	CPI  R30,LOW(0x64)
000bce f011      	BREQ _0x20000F0
000bcf 36e9      	CPI  R30,LOW(0x69)
000bd0 f419      	BRNE _0x20000F1
                 _0x20000F0:
000bd1 e0e0      	LDI  R30,LOW(0)
000bd2 87ea      	STD  Y+10,R30
000bd3 c002      	RJMP _0x20000F2
                 _0x20000F1:
000bd4 37e5      	CPI  R30,LOW(0x75)
000bd5 f411      	BRNE _0x20000F3
                 _0x20000F2:
000bd6 e02a      	LDI  R18,LOW(10)
000bd7 c008      	RJMP _0x20000EE
                 _0x20000F3:
000bd8 37e8      	CPI  R30,LOW(0x78)
000bd9 f411      	BRNE _0x20000F4
000bda e120      	LDI  R18,LOW(16)
000bdb c004      	RJMP _0x20000EE
                 _0x20000F4:
000bdc 32e5      	CPI  R30,LOW(0x25)
000bdd f409      	BRNE _0x20000F7
000bde c05b      	RJMP _0x20000F6
                 _0x20000F7:
000bdf c073      	RJMP _0x20A0006
                 _0x20000EE:
000be0 e0e0      	LDI  R30,LOW(0)
000be1 83ee      	STD  Y+6,R30
000be2 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000be3 2fe5      	MOV  R30,R21
000be4 5051      	SUBI R21,1
000be5 30e0      	CPI  R30,0
000be6 f411      	BRNE PC+3
000be7 940c 0c2a 	JMP _0x20000FA
000be9 b7ed      	IN   R30,SPL
000bea b7fe      	IN   R31,SPH
000beb 93fa      	ST   -Y,R31
000bec 93ea      	ST   -Y,R30
000bed 934f      	PUSH R20
000bee 940e 10e8 	CALL SUBOPT_0x52
000bf0 914f      	POP  R20
000bf1 2f3e      	MOV  R19,R30
000bf2 32e1      	CPI  R30,LOW(0x21)
000bf3 f438      	BRSH _0x20000FB
000bf4 940e 10f0 	CALL SUBOPT_0x53
000bf6 f41c      	BRGE _0x20000FC
000bf7 efef      	LDI  R30,LOW(65535)
000bf8 efff      	LDI  R31,HIGH(65535)
000bf9 c05b      	RJMP _0x20A0005
                 _0x20000FC:
000bfa c017      	RJMP _0x20000FD
                 _0x20000FB:
000bfb 85ea      	LDD  R30,Y+10
000bfc 30e0      	CPI  R30,0
000bfd f439      	BRNE _0x20000FE
000bfe 323d      	CPI  R19,45
000bff f419      	BRNE _0x20000FF
000c00 efef      	LDI  R30,LOW(255)
000c01 87ea      	STD  Y+10,R30
000c02 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000c03 e0e1      	LDI  R30,LOW(1)
000c04 87ea      	STD  Y+10,R30
                 _0x20000FE:
000c05 3120      	CPI  R18,16
000c06 f431      	BRNE _0x2000101
000c07 933a      	ST   -Y,R19
000c08 940e 0d73 	CALL _isxdigit
000c0a 30e0      	CPI  R30,0
000c0b f031      	BREQ _0x20000FD
000c0c c007      	RJMP _0x2000103
                 _0x2000101:
000c0d 933a      	ST   -Y,R19
000c0e 940e 0d61 	CALL _isdigit
000c10 30e0      	CPI  R30,0
000c11 f411      	BRNE _0x2000104
                 _0x20000FD:
000c12 2f43      	MOV  R20,R19
000c13 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000c14 3631      	CPI  R19,97
000c15 f010      	BRLO _0x2000105
000c16 5537      	SUBI R19,LOW(87)
000c17 c005      	RJMP _0x2000106
                 _0x2000105:
000c18 3431      	CPI  R19,65
000c19 f010      	BRLO _0x2000107
000c1a 5337      	SUBI R19,LOW(55)
000c1b c001      	RJMP _0x2000108
                 _0x2000107:
000c1c 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000c1d 2fe2      	MOV  R30,R18
000c1e 81ae      	LDD  R26,Y+6
000c1f 81bf      	LDD  R27,Y+6+1
000c20 e0f0      	LDI  R31,0
000c21 940e 131f 	CALL __MULW12U
000c23 01df      	MOVW R26,R30
000c24 2fe3      	MOV  R30,R19
000c25 940e 0fe4 	CALL SUBOPT_0x2C
000c27 83ee      	STD  Y+6,R30
000c28 83ff      	STD  Y+6+1,R31
000c29 cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000c2a 940e 10f5 	CALL SUBOPT_0x54
000c2c 85ea      	LDD  R30,Y+10
000c2d 81ae      	LDD  R26,Y+6
000c2e 81bf      	LDD  R27,Y+6+1
000c2f e0f0      	LDI  R31,0
000c30 fde7      	SBRC R30,7
000c31 efff      	SER  R31
000c32 940e 131f 	CALL __MULW12U
000c34 01d8      	MOVW R26,R16
000c35 93ed      	ST   X+,R30
000c36 93fc      	ST   X,R31
                 _0x20000E0:
000c37 940e 1070 	CALL SUBOPT_0x41
000c39 c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000c3a b7ed      	IN   R30,SPL
000c3b b7fe      	IN   R31,SPH
000c3c 93fa      	ST   -Y,R31
000c3d 93ea      	ST   -Y,R30
000c3e 934f      	PUSH R20
000c3f 940e 10e8 	CALL SUBOPT_0x52
000c41 914f      	POP  R20
000c42 17e3      	CP   R30,R19
000c43 f071      	BREQ _0x200010A
000c44 940e 10f0 	CALL SUBOPT_0x53
000c46 f41c      	BRGE _0x200010B
000c47 efef      	LDI  R30,LOW(65535)
000c48 efff      	LDI  R31,HIGH(65535)
000c49 c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000c4a 85e8      	LDD  R30,Y+8
000c4b 85f9      	LDD  R31,Y+8+1
000c4c 9730      	SBIW R30,0
000c4d f419      	BRNE _0x200010C
000c4e efef      	LDI  R30,LOW(65535)
000c4f efff      	LDI  R31,HIGH(65535)
000c50 c004      	RJMP _0x20A0005
                 _0x200010C:
000c51 c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000c52 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000c53 85e8      	LDD  R30,Y+8
000c54 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000c55 940e 13d3 	CALL __LOADLOCR6
000c57 9663      	ADIW R28,19
000c58 9508      	RET
                 _sscanf:
000c59 92ff      	PUSH R15
000c5a 2ef8      	MOV  R15,R24
000c5b 9723      	SBIW R28,3
000c5c 931a      	ST   -Y,R17
000c5d 930a      	ST   -Y,R16
000c5e 01de      	MOVW R26,R28
000c5f 9617      	ADIW R26,7
000c60 940e 10de 	CALL SUBOPT_0x50
000c62 9730      	SBIW R30,0
000c63 f419      	BRNE _0x200010D
000c64 efef      	LDI  R30,LOW(65535)
000c65 efff      	LDI  R31,HIGH(65535)
000c66 c01c      	RJMP _0x20A0004
                 _0x200010D:
000c67 01de      	MOVW R26,R28
000c68 9611      	ADIW R26,1
000c69 940e 12fa 	CALL __ADDW2R15
000c6b 018d      	MOVW R16,R26
000c6c 01de      	MOVW R26,R28
000c6d 9617      	ADIW R26,7
000c6e 940e 10de 	CALL SUBOPT_0x50
000c70 83eb      	STD  Y+3,R30
000c71 83fc      	STD  Y+3+1,R31
000c72 01de      	MOVW R26,R28
000c73 9615      	ADIW R26,5
000c74 940e 10de 	CALL SUBOPT_0x50
000c76 93fa      	ST   -Y,R31
000c77 93ea      	ST   -Y,R30
000c78 931a      	ST   -Y,R17
000c79 930a      	ST   -Y,R16
000c7a efee      	LDI  R30,LOW(_get_buff_G100)
000c7b e0fa      	LDI  R31,HIGH(_get_buff_G100)
000c7c 93fa      	ST   -Y,R31
000c7d 93ea      	ST   -Y,R30
000c7e 01fe      	MOVW R30,R28
000c7f 9638      	ADIW R30,8
000c80 93fa      	ST   -Y,R31
000c81 93ea      	ST   -Y,R30
000c82 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000c83 8119      	LDD  R17,Y+1
000c84 8108      	LDD  R16,Y+0
000c85 9625      	ADIW R28,5
000c86 90ff      	POP  R15
000c87 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000c88 817b         ldd  r23,y+3
000c89 816a         ldd  r22,y+2
000c8a 81f9         ldd  r31,y+1
000c8b 81e8         ld   r30,y
000c8c fb77         bst  r23,7
000c8d 0f77         lsl  r23
000c8e fd67         sbrc r22,7
000c8f 6071         sbr  r23,1
000c90 2f97         mov  r25,r23
000c91 579e         subi r25,0x7e
000c92 f081         breq __ftrunc0
000c93 f078         brcs __ftrunc0
000c94 3198         cpi  r25,24
000c95 f490         brsh __ftrunc1
000c96 27aa         clr  r26
000c97 27bb         clr  r27
000c98 2788         clr  r24
                 __ftrunc2:
000c99 9408         sec
000c9a 9587         ror  r24
000c9b 95b7         ror  r27
000c9c 95a7         ror  r26
000c9d 959a         dec  r25
000c9e f7d1         brne __ftrunc2
000c9f 23ea         and  r30,r26
000ca0 23fb         and  r31,r27
000ca1 2368         and  r22,r24
000ca2 c005         rjmp __ftrunc1
                 __ftrunc0:
000ca3 94e8         clt
000ca4 2777         clr  r23
000ca5 27ee         clr  r30
000ca6 27ff         clr  r31
000ca7 2766         clr  r22
                 __ftrunc1:
000ca8 776f         cbr  r22,0x80
000ca9 9576         lsr  r23
000caa f408         brcc __ftrunc3
000cab 6860         sbr  r22,0x80
                 __ftrunc3:
000cac f977         bld  r23,7
000cad 91a9         ld   r26,y+
000cae 91b9         ld   r27,y+
000caf 9189         ld   r24,y+
000cb0 9199         ld   r25,y+
000cb1 17ea         cp   r30,r26
000cb2 07fb         cpc  r31,r27
000cb3 0768         cpc  r22,r24
000cb4 0779         cpc  r23,r25
000cb5 fb97         bst  r25,7
000cb6 9508         ret
                 _floor:
000cb7 940e 0fcf 	CALL SUBOPT_0x28
000cb9 940e 13ab 	CALL __PUTPARD1
000cbb 940e 0c88 	CALL _ftrunc
000cbd 940e 13a4 	CALL __PUTD1S0
000cbf f419          brne __floor1
                 __floor0:
000cc0 940e 0fcf 	CALL SUBOPT_0x28
000cc2 c09c      	RJMP _0x20A0003
                 __floor1:
000cc3 f7e6          brtc __floor0
000cc4 940e 0fcf 	CALL SUBOPT_0x28
                +
000cc6 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000cc7 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000cc8 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000cc9 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000cca 940e 11f0 	CALL __SUBF12
000ccc c092      	RJMP _0x20A0003
                 _sin:
000ccd 9724      	SBIW R28,4
000cce 931a      	ST   -Y,R17
000ccf e010      	LDI  R17,0
000cd0 940e 1100 	CALL SUBOPT_0x55
                +
000cd2 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000cd3 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000cd4 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000cd5 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000cd6 940e 1247 	CALL __MULF12
000cd8 940e 1105 	CALL SUBOPT_0x56
000cda 940e 110a 	CALL SUBOPT_0x57
000cdc 940e 1060 	CALL SUBOPT_0x3E
000cde 940e 1100 	CALL SUBOPT_0x55
000ce0 940e 0fb6 	CALL SUBOPT_0x25
000ce2 940e 1105 	CALL SUBOPT_0x56
000ce4 940e 110f 	CALL SUBOPT_0x58
000ce6 940e 12da 	CALL __CMPF12
000ce8 f009      	BREQ PC+2
000ce9 f410      	BRCC PC+3
000cea 940c 0cf7 	JMP  _0x2020017
000cec 940e 110a 	CALL SUBOPT_0x57
                +
000cee e0a0     +LDI R26 , LOW ( 0x3F000000 )
000cef e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000cf0 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000cf1 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000cf2 940e 11f0 	CALL __SUBF12
000cf4 940e 1105 	CALL SUBOPT_0x56
000cf6 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000cf7 940e 1100 	CALL SUBOPT_0x55
                +
000cf9 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000cfa e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000cfb e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000cfc e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000cfd 940e 12da 	CALL __CMPF12
000cff f009      	BREQ PC+2
000d00 f410      	BRCC PC+3
000d01 940c 0d09 	JMP  _0x2020018
000d03 940e 110f 	CALL SUBOPT_0x58
000d05 940e 11f0 	CALL __SUBF12
000d07 940e 1105 	CALL SUBOPT_0x56
                 _0x2020018:
000d09 3010      	CPI  R17,0
000d0a f031      	BREQ _0x2020019
000d0b 940e 110a 	CALL SUBOPT_0x57
000d0d 940e 1151 	CALL __ANEGF1
000d0f 940e 1105 	CALL SUBOPT_0x56
                 _0x2020019:
000d11 940e 110a 	CALL SUBOPT_0x57
000d13 940e 1100 	CALL SUBOPT_0x55
000d15 940e 1247 	CALL __MULF12
                +
000d17 83e9     +STD Y + 1 , R30
000d18 83fa     +STD Y + 1 + 1 , R31
000d19 836b     +STD Y + 1 + 2 , R22
000d1a 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000d1b eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000d1c ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000d1d e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000d1e e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000d1f 940e 1247 	CALL __MULF12
000d21 01df      	MOVW R26,R30
000d22 01cb      	MOVW R24,R22
                +
000d23 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000d24 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000d25 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000d26 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000d27 940e 0fb6 	CALL SUBOPT_0x25
000d29 940e 1115 	CALL SUBOPT_0x59
                +
000d2b e4ac     +LDI R26 , LOW ( 0x4104534C )
000d2c e5b3     +LDI R27 , HIGH ( 0x4104534C )
000d2d e084     +LDI R24 , BYTE3 ( 0x4104534C )
000d2e e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000d2f 940e 11f7 	CALL __ADDF12
000d31 940e 1100 	CALL SUBOPT_0x55
000d33 940e 1247 	CALL __MULF12
000d35 937f      	PUSH R23
000d36 936f      	PUSH R22
000d37 93ff      	PUSH R31
000d38 93ef      	PUSH R30
                +
000d39 81e9     +LDD R30 , Y + 1
000d3a 81fa     +LDD R31 , Y + 1 + 1
000d3b 816b     +LDD R22 , Y + 1 + 2
000d3c 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000d3d e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000d3e eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000d3f ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000d40 e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000d41 940e 11f7 	CALL __ADDF12
000d43 940e 1115 	CALL SUBOPT_0x59
                +
000d45 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000d46 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000d47 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000d48 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000d49 940e 11f7 	CALL __ADDF12
000d4b 91af      	POP  R26
000d4c 91bf      	POP  R27
000d4d 918f      	POP  R24
000d4e 919f      	POP  R25
000d4f 940e 1295 	CALL __DIVF21
000d51 8118      	LDD  R17,Y+0
000d52 9629      	ADIW R28,9
000d53 9508      	RET
                 _cos:
000d54 940e 139f 	CALL __GETD2S0
                +
000d56 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000d57 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000d58 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000d59 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000d5a 940e 11f0 	CALL __SUBF12
000d5c 940e 13ab 	CALL __PUTPARD1
000d5e df6e      	RCALL _sin
                 _0x20A0003:
000d5f 9624      	ADIW R28,4
000d60 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000d61 e0e1          ldi  r30,1
000d62 91f9          ld   r31,y+
000d63 33f0          cpi  r31,'0'
000d64 f010          brlo isdigit0
000d65 33fa          cpi  r31,'9'+1
000d66 f008          brlo isdigit1
                 isdigit0:
000d67 27ee          clr  r30
                 isdigit1:
000d68 9508          ret
                 _isspace:
000d69 e0e1          ldi  r30,1
000d6a 91f9          ld   r31,y+
000d6b 32f0          cpi  r31,' '
000d6c f029          breq isspace1
000d6d 30f9          cpi  r31,9
000d6e f010          brlo isspace0
000d6f 30fe          cpi  r31,13+1
000d70 f008          brlo isspace1
                 isspace0:
000d71 27ee          clr  r30
                 isspace1:
000d72 9508          ret
                 _isxdigit:
000d73 e0e1          ldi  r30,1
000d74 91f9          ld   r31,y+
000d75 53f0          subi r31,0x30
000d76 f040          brcs isxdigit0
000d77 30fa          cpi  r31,10
000d78 f038          brcs isxdigit1
000d79 75ff          andi r31,0x5f
000d7a 50f7          subi r31,7
000d7b 30fa          cpi  r31,10
000d7c f010          brcs isxdigit0
000d7d 31f0          cpi  r31,16
000d7e f008          brcs isxdigit1
                 isxdigit0:
000d7f 27ee          clr  r30
                 isxdigit1:
000d80 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000d81 91e9          ld   r30,y+
000d82 91f9          ld   r31,y+
000d83 91a9          ld   r26,y+
000d84 91b9          ld   r27,y+
000d85 01cd          movw r24,r26
                 strcpyf0:
000d86 9005      	lpm  r0,z+
000d87 920d          st   x+,r0
000d88 2000          tst  r0
000d89 f7e1          brne strcpyf0
000d8a 01fc          movw r30,r24
000d8b 9508          ret
                 _strlen:
000d8c 91a9          ld   r26,y+
000d8d 91b9          ld   r27,y+
000d8e 27ee          clr  r30
000d8f 27ff          clr  r31
                 strlen0:
000d90 916d          ld   r22,x+
000d91 2366          tst  r22
000d92 f011          breq strlen1
000d93 9631          adiw r30,1
000d94 cffb          rjmp strlen0
                 strlen1:
000d95 9508          ret
                 _strlenf:
000d96 27aa          clr  r26
000d97 27bb          clr  r27
000d98 91e9          ld   r30,y+
000d99 91f9          ld   r31,y+
                 strlenf0:
000d9a 9005      	lpm  r0,z+
000d9b 2000          tst  r0
000d9c f011          breq strlenf1
000d9d 9611          adiw r26,1
000d9e cffb          rjmp strlenf0
                 strlenf1:
000d9f 01fd          movw r30,r26
000da0 9508          ret
                 
                 	.CSEG
                 _ftoa:
000da1 9724      	SBIW R28,4
000da2 d1f1      	RCALL SUBOPT_0x20
000da3 e0e0      	LDI  R30,LOW(0)
000da4 83ea      	STD  Y+2,R30
000da5 e3ef      	LDI  R30,LOW(63)
000da6 83eb      	STD  Y+3,R30
000da7 931a      	ST   -Y,R17
000da8 930a      	ST   -Y,R16
000da9 85eb      	LDD  R30,Y+11
000daa 85fc      	LDD  R31,Y+11+1
000dab 3fef      	CPI  R30,LOW(0xFFFF)
000dac efaf      	LDI  R26,HIGH(0xFFFF)
000dad 07fa      	CPC  R31,R26
000dae f429      	BRNE _0x208000D
000daf d36c      	RCALL SUBOPT_0x5A
                +
000db0 eae2     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000db1 e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000db2 d26b      	RCALL SUBOPT_0x35
000db3 c085      	RJMP _0x20A0002
                 _0x208000D:
000db4 3fef      	CPI  R30,LOW(0x7FFF)
000db5 e7af      	LDI  R26,HIGH(0x7FFF)
000db6 07fa      	CPC  R31,R26
000db7 f429      	BRNE _0x208000C
000db8 d363      	RCALL SUBOPT_0x5A
                +
000db9 eae3     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000dba e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000dbb d262      	RCALL SUBOPT_0x35
000dbc c07c      	RJMP _0x20A0002
                 _0x208000C:
000dbd 85ac      	LDD  R26,Y+12
000dbe 23aa      	TST  R26
000dbf f452      	BRPL _0x208000F
                +
000dc0 85e9     +LDD R30 , Y + 9
000dc1 85fa     +LDD R31 , Y + 9 + 1
000dc2 856b     +LDD R22 , Y + 9 + 2
000dc3 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000dc4 940e 1151 	CALL __ANEGF1
000dc6 d35a      	RCALL SUBOPT_0x5B
000dc7 d35e      	RCALL SUBOPT_0x5C
000dc8 e2ed      	LDI  R30,LOW(45)
000dc9 93ec      	ST   X,R30
                 _0x208000F:
000dca 85a8      	LDD  R26,Y+8
000dcb 30a7      	CPI  R26,LOW(0x7)
000dcc f010      	BRLO _0x2080010
000dcd e0e6      	LDI  R30,LOW(6)
000dce 87e8      	STD  Y+8,R30
                 _0x2080010:
000dcf 8518      	LDD  R17,Y+8
                 _0x2080011:
000dd0 2fe1      	MOV  R30,R17
000dd1 5011      	SUBI R17,1
000dd2 30e0      	CPI  R30,0
000dd3 f021      	BREQ _0x2080013
000dd4 d358      	RCALL SUBOPT_0x5D
000dd5 d283      	RCALL SUBOPT_0x3D
000dd6 d35b      	RCALL SUBOPT_0x5E
000dd7 cff8      	RJMP _0x2080011
                 _0x2080013:
000dd8 d35e      	RCALL SUBOPT_0x5F
000dd9 940e 11f7 	CALL __ADDF12
000ddb d345      	RCALL SUBOPT_0x5B
000ddc e010      	LDI  R17,LOW(0)
                +
000ddd e0e0     +LDI R30 , LOW ( 0x3F800000 )
000dde e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000ddf e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000de0 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000de1 d350      	RCALL SUBOPT_0x5E
                 _0x2080014:
000de2 d354      	RCALL SUBOPT_0x5F
000de3 940e 12da 	CALL __CMPF12
000de5 f060      	BRLO _0x2080016
000de6 d346      	RCALL SUBOPT_0x5D
000de7 d25e      	RCALL SUBOPT_0x3A
000de8 d349      	RCALL SUBOPT_0x5E
000de9 5f1f      	SUBI R17,-LOW(1)
000dea 3217      	CPI  R17,39
000deb f028      	BRLO _0x2080017
000dec d32f      	RCALL SUBOPT_0x5A
                +
000ded eae7     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000dee e0f3     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000def d22e      	RCALL SUBOPT_0x35
000df0 c048      	RJMP _0x20A0002
                 _0x2080017:
000df1 cff0      	RJMP _0x2080014
                 _0x2080016:
000df2 3010      	CPI  R17,0
000df3 f421      	BRNE _0x2080018
000df4 d331      	RCALL SUBOPT_0x5C
000df5 e3e0      	LDI  R30,LOW(48)
000df6 93ec      	ST   X,R30
000df7 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000df8 2fe1      	MOV  R30,R17
000df9 5011      	SUBI R17,1
000dfa 30e0      	CPI  R30,0
000dfb f0c9      	BREQ _0x208001C
000dfc d330      	RCALL SUBOPT_0x5D
000dfd d25b      	RCALL SUBOPT_0x3D
000dfe d253      	RCALL SUBOPT_0x3C
000dff d260      	RCALL SUBOPT_0x3E
000e00 d331      	RCALL SUBOPT_0x5E
000e01 d335      	RCALL SUBOPT_0x5F
000e02 940e 1295 	CALL __DIVF21
000e04 940e 1184 	CALL __CFD1U
000e06 2f0e      	MOV  R16,R30
000e07 d31e      	RCALL SUBOPT_0x5C
000e08 d262      	RCALL SUBOPT_0x40
000e09 e0f0      	LDI  R31,0
000e0a d322      	RCALL SUBOPT_0x5D
000e0b 940e 1315 	CALL __CWD1
000e0d 940e 11bd 	CALL __CDF1
000e0f 940e 1247 	CALL __MULF12
000e11 d32e      	RCALL SUBOPT_0x60
000e12 d1a3      	RCALL SUBOPT_0x25
000e13 d30d      	RCALL SUBOPT_0x5B
000e14 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000e15 85e8      	LDD  R30,Y+8
000e16 30e0      	CPI  R30,0
000e17 f0e9      	BREQ _0x20A0001
000e18 d30d      	RCALL SUBOPT_0x5C
000e19 e2ee      	LDI  R30,LOW(46)
000e1a 93ec      	ST   X,R30
                 _0x208001E:
000e1b 85e8      	LDD  R30,Y+8
000e1c 50e1      	SUBI R30,LOW(1)
000e1d 87e8      	STD  Y+8,R30
000e1e 5fef      	SUBI R30,-LOW(1)
000e1f f0a9      	BREQ _0x2080020
000e20 d31f      	RCALL SUBOPT_0x60
000e21 d224      	RCALL SUBOPT_0x3A
000e22 d2fe      	RCALL SUBOPT_0x5B
                +
000e23 85e9     +LDD R30 , Y + 9
000e24 85fa     +LDD R31 , Y + 9 + 1
000e25 856b     +LDD R22 , Y + 9 + 2
000e26 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000e27 940e 1184 	CALL __CFD1U
000e29 2f0e      	MOV  R16,R30
000e2a d2fb      	RCALL SUBOPT_0x5C
000e2b d23f      	RCALL SUBOPT_0x40
000e2c e0f0      	LDI  R31,0
000e2d d312      	RCALL SUBOPT_0x60
000e2e 940e 1315 	CALL __CWD1
000e30 940e 11bd 	CALL __CDF1
000e32 d183      	RCALL SUBOPT_0x25
000e33 d2ed      	RCALL SUBOPT_0x5B
000e34 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000e35 81ae      	LDD  R26,Y+6
000e36 81bf      	LDD  R27,Y+6+1
000e37 e0e0      	LDI  R30,LOW(0)
000e38 93ec      	ST   X,R30
                 _0x20A0002:
000e39 8119      	LDD  R17,Y+1
000e3a 8108      	LDD  R16,Y+0
000e3b 962d      	ADIW R28,13
000e3c 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TIMER1_OVERFLOW:
000500           	.BYTE 0x2
                 _TIMER2_OVERFLOW:
000502           	.BYTE 0x1
                 _PACKET_BUFF:
000503           	.BYTE 0x64
                 _PACKET_BUFF_IDX:
000567           	.BYTE 0x1
                 _TIMER0_OVERFLOW:
000568           	.BYTE 0x2
                 _VELOCITY_BUFF:
00056a           	.BYTE 0x14
                 _VELOCITY_BUFF_IDX:
00057e           	.BYTE 0x1
                 _CHECK_GETS:
00057f           	.BYTE 0x1
                 _MOTORR_HALL:
000580           	.BYTE 0x4
                 _MOTORL_HALL:
000584           	.BYTE 0x4
                 __seed_G104:
000588           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x0:
000e3d 93fa      	ST   -Y,R31
000e3e 93ea      	ST   -Y,R30
000e3f 940c 1145 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000e41 e0e0      	LDI  R30,LOW(0)
000e42 93e0 0568 	STS  _TIMER0_OVERFLOW,R30
000e44 93e0 0569 	STS  _TIMER0_OVERFLOW+1,R30
000e46 bfe2      	OUT  0x32,R30
000e47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
000e48 940e 1315 	CALL __CWD1
000e4a 940e 11bd 	CALL __CDF1
000e4c 01df      	MOVW R26,R30
000e4d 01cb      	MOVW R24,R22
                +
000e4e e0e0     +LDI R30 , LOW ( 0x447A0000 )
000e4f e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000e50 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000e51 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000e52 940e 1295 	CALL __DIVF21
000e54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000e55 e0e0      	LDI  R30,LOW(0)
000e56 93e0 0500 	STS  _TIMER1_OVERFLOW,R30
000e58 93e0 0501 	STS  _TIMER1_OVERFLOW+1,R30
000e5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000e5b e0f0      	LDI  R31,0
000e5c 0fea      	ADD  R30,R26
000e5d 1ffb      	ADC  R31,R27
000e5e 2766      	CLR  R22
000e5f 2777      	CLR  R23
000e60 940e 11bd 	CALL __CDF1
000e62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
                +
000e63 01de     +MOVW R26 , R28
000e64 5aa4     +SUBI R26 , LOW ( - 604 )
000e65 4fbd     +SBCI R27 , HIGH ( - 604 )
000e66 900d     +LD R0 , X +
000e67 901d     +LD R1 , X +
000e68 918d     +LD R24 , X +
000e69 919c     +LD R25 , X
000e6a 01d0     +MOVW R26 , R0
                 	__GETD2SX 604
000e6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
                +
000e6c 01de     +MOVW R26 , R28
000e6d 5aa8     +SUBI R26 , LOW ( - 600 )
000e6e 4fbd     +SBCI R27 , HIGH ( - 600 )
000e6f 900d     +LD R0 , X +
000e70 901d     +LD R1 , X +
000e71 918d     +LD R24 , X +
000e72 919c     +LD R25 , X
000e73 01d0     +MOVW R26 , R0
                 	__GETD2SX 600
000e74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
000e75 e0e5      	LDI  R30,LOW(5)
000e76 e0f0      	LDI  R31,HIGH(5)
000e77 cfc5      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x8:
000e78 93ea      	ST   -Y,R30
000e79 e0e2      	LDI  R30,LOW(2)
000e7a e0f0      	LDI  R31,HIGH(2)
000e7b 93fa      	ST   -Y,R31
000e7c 93ea      	ST   -Y,R30
000e7d 93fa      	ST   -Y,R31
000e7e 93ea      	ST   -Y,R30
000e7f 940e 0672 	CALL _RTU_ReedOperate0
000e81 cff3      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
000e82 e0e3      	LDI  R30,LOW(_PACKET_BUFF)
000e83 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
000e84 93fa      	ST   -Y,R31
000e85 93ea      	ST   -Y,R30
000e86 91e0 0567 	LDS  R30,_PACKET_BUFF_IDX
000e88 93ea      	ST   -Y,R30
000e89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xA:
000e8a 940e 1315 	CALL __CWD1
000e8c 940e 11bd 	CALL __CDF1
000e8e 01df      	MOVW R26,R30
000e8f 01cb      	MOVW R24,R22
                +
000e90 e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000e91 effc     +LDI R31 , HIGH ( 0x453EFC29 )
000e92 e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000e93 e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000e94 940e 1295 	CALL __DIVF21
000e96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xB:
000e97 940e 11f7 	CALL __ADDF12
000e99 01df      	MOVW R26,R30
000e9a 01cb      	MOVW R24,R22
                +
000e9b e0e0     +LDI R30 , LOW ( 0x40000000 )
000e9c e0f0     +LDI R31 , HIGH ( 0x40000000 )
000e9d e060     +LDI R22 , BYTE3 ( 0x40000000 )
000e9e e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000e9f 940e 1295 	CALL __DIVF21
000ea1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC:
000ea2 940e 11f0 	CALL __SUBF12
000ea4 01df      	MOVW R26,R30
000ea5 01cb      	MOVW R24,R22
                +
000ea6 e1e7     +LDI R30 , LOW ( 0x3E8ED917 )
000ea7 edf9     +LDI R31 , HIGH ( 0x3E8ED917 )
000ea8 e86e     +LDI R22 , BYTE3 ( 0x3E8ED917 )
000ea9 e37e     +LDI R23 , BYTE4 ( 0x3E8ED917 )
                 	__GETD1N 0x3E8ED917
000eaa 940e 1295 	CALL __DIVF21
000eac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
                +
000ead 01de     +MOVW R26 , R28
000eae 5da4     +SUBI R26 , LOW ( - 556 )
000eaf 4fbd     +SBCI R27 , HIGH ( - 556 )
000eb0 900d     +LD R0 , X +
000eb1 901d     +LD R1 , X +
000eb2 918d     +LD R24 , X +
000eb3 919c     +LD R25 , X
000eb4 01d0     +MOVW R26 , R0
                 	__GETD2SX 556
000eb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xE:
                +
000eb6 01fe     +MOVW R30 , R28
000eb7 5ce0     +SUBI R30 , LOW ( - 576 )
000eb8 4ffd     +SBCI R31 , HIGH ( - 576 )
000eb9 9001     +LD R0 , Z +
000eba 9011     +LD R1 , Z +
000ebb 9161     +LD R22 , Z +
000ebc 8170     +LD R23 , Z
000ebd 01f0     +MOVW R30 , R0
                 	__GETD1SX 576
                +
000ebe 01de     +MOVW R26 , R28
000ebf 5ba8     +SUBI R26 , LOW ( - 584 )
000ec0 4fbd     +SBCI R27 , HIGH ( - 584 )
000ec1 900d     +LD R0 , X +
000ec2 901d     +LD R1 , X +
000ec3 918d     +LD R24 , X +
000ec4 919c     +LD R25 , X
000ec5 01d0     +MOVW R26 , R0
                 	__GETD2SX 584
000ec6 940e 1247 	CALL __MULF12
000ec8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
                +
000ec9 01fe     +MOVW R30 , R28
000eca 5de4     +SUBI R30 , LOW ( - 556 )
000ecb 4ffd     +SBCI R31 , HIGH ( - 556 )
000ecc 9001     +LD R0 , Z +
000ecd 9011     +LD R1 , Z +
000ece 9161     +LD R22 , Z +
000ecf 8170     +LD R23 , Z
000ed0 01f0     +MOVW R30 , R0
                 	__GETD1SX 556
000ed1 940e 13ab 	CALL __PUTPARD1
000ed3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
000ed4 efe6     +LDI R30 , LOW ( 0x426528F6 )
000ed5 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
000ed6 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
000ed7 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
000ed8 940e 1247 	CALL __MULF12
000eda 940e 1186 	CALL __CFD1
000edc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
000edd 91e0 0580 	LDS  R30,_MOTORR_HALL
000edf 91f0 0581 	LDS  R31,_MOTORR_HALL+1
000ee1 9160 0582 	LDS  R22,_MOTORR_HALL+2
000ee3 9170 0583 	LDS  R23,_MOTORR_HALL+3
000ee5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x12:
000ee6 940e 11bd 	CALL __CDF1
                +
000ee8 e0a0     +LDI R26 , LOW ( 0x3E000000 )
000ee9 e0b0     +LDI R27 , HIGH ( 0x3E000000 )
000eea e080     +LDI R24 , BYTE3 ( 0x3E000000 )
000eeb e39e     +LDI R25 , BYTE4 ( 0x3E000000 )
                 	__GETD2N 0x3E000000
000eec 940e 1247 	CALL __MULF12
                +
000eee eda8     +LDI R26 , LOW ( 0x40490FD8 )
000eef e0bf     +LDI R27 , HIGH ( 0x40490FD8 )
000ef0 e489     +LDI R24 , BYTE3 ( 0x40490FD8 )
000ef1 e490     +LDI R25 , BYTE4 ( 0x40490FD8 )
                 	__GETD2N 0x40490FD8
000ef2 940e 1247 	CALL __MULF12
000ef4 01df      	MOVW R26,R30
000ef5 01cb      	MOVW R24,R22
                +
000ef6 e0e0     +LDI R30 , LOW ( 0x43340000 )
000ef7 e0f0     +LDI R31 , HIGH ( 0x43340000 )
000ef8 e364     +LDI R22 , BYTE3 ( 0x43340000 )
000ef9 e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
000efa 940e 1295 	CALL __DIVF21
000efc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
000efd 91e0 0584 	LDS  R30,_MOTORL_HALL
000eff 91f0 0585 	LDS  R31,_MOTORL_HALL+1
000f01 9160 0586 	LDS  R22,_MOTORL_HALL+2
000f03 9170 0587 	LDS  R23,_MOTORL_HALL+3
000f05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
                +
000f06 01de     +MOVW R26 , R28
000f07 5fae     +SUBI R26 , LOW ( - 514 )
000f08 4fbd     +SBCI R27 , HIGH ( - 514 )
000f09 900d     +LD R0 , X +
000f0a 901d     +LD R1 , X +
000f0b 918d     +LD R24 , X +
000f0c 919c     +LD R25 , X
000f0d 01d0     +MOVW R26 , R0
                 	__GETD2SX 514
000f0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x15:
                +
000f0f 01fe     +MOVW R30 , R28
000f10 50e8     +SUBI R30 , LOW ( - 504 )
000f11 4ffe     +SBCI R31 , HIGH ( - 504 )
000f12 9001     +LD R0 , Z +
000f13 9011     +LD R1 , Z +
000f14 9161     +LD R22 , Z +
000f15 8170     +LD R23 , Z
000f16 01f0     +MOVW R30 , R0
                 	__GETD1SX 504
                +
000f17 01de     +MOVW R26 , R28
000f18 50a4     +SUBI R26 , LOW ( - 508 )
000f19 4fbe     +SBCI R27 , HIGH ( - 508 )
000f1a 900d     +LD R0 , X +
000f1b 901d     +LD R1 , X +
000f1c 918d     +LD R24 , X +
000f1d 919c     +LD R25 , X
000f1e 01d0     +MOVW R26 , R0
                 	__GETD2SX 508
000f1f cf77      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
                +
000f20 01fe     +MOVW R30 , R28
000f21 5fee     +SUBI R30 , LOW ( - 514 )
000f22 4ffd     +SBCI R31 , HIGH ( - 514 )
000f23 9001     +LD R0 , Z +
000f24 9011     +LD R1 , Z +
000f25 9161     +LD R22 , Z +
000f26 8170     +LD R23 , Z
000f27 01f0     +MOVW R30 , R0
                 	__GETD1SX 514
000f28 940e 13ab 	CALL __PUTPARD1
000f2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x17:
                +
000f2b 01de     +MOVW R26 , R28
000f2c 5eac     +SUBI R26 , LOW ( - 532 )
000f2d 4fbd     +SBCI R27 , HIGH ( - 532 )
000f2e 900d     +LD R0 , X +
000f2f 901d     +LD R1 , X +
000f30 918d     +LD R24 , X +
000f31 919c     +LD R25 , X
000f32 01d0     +MOVW R26 , R0
                 	__GETD2SX 532
000f33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000f34 93aa      	ST   -Y,R26
000f35 93ba      	ST   -Y,R27
000f36 93ea      	ST   -Y,R30
000f37 93fa      	ST   -Y,R31
000f38 b7ef      	IN   R30,SREG
000f39 93ea      	ST   -Y,R30
000f3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x19:
000f3b 91ed      	LD   R30,X+
000f3c 91fd      	LD   R31,X+
000f3d 9631      	ADIW R30,1
000f3e 93fe      	ST   -X,R31
000f3f 93ee      	ST   -X,R30
000f40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1A:
000f41 91a0 0567 	LDS  R26,_PACKET_BUFF_IDX
000f43 e0b0      	LDI  R27,0
000f44 5fad      	SUBI R26,LOW(-_PACKET_BUFF)
000f45 4fba      	SBCI R27,HIGH(-_PACKET_BUFF)
000f46 b1ec      	IN   R30,0xC
000f47 93ec      	ST   X,R30
000f48 91e0 0567 	LDS  R30,_PACKET_BUFF_IDX
000f4a 5fef      	SUBI R30,-LOW(1)
000f4b 93e0 0567 	STS  _PACKET_BUFF_IDX,R30
000f4d e0e0      	LDI  R30,LOW(0)
000f4e bde4      	OUT  0x24,R30
000f4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
000f50 e0f0      	LDI  R31,0
000f51 59e6      	SUBI R30,LOW(-_VELOCITY_BUFF)
000f52 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000f53 8310      	ST   Z,R17
000f54 91e0 057e 	LDS  R30,_VELOCITY_BUFF_IDX
000f56 5fef      	SUBI R30,-LOW(1)
000f57 93e0 057e 	STS  _VELOCITY_BUFF_IDX,R30
000f59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000f5a 81aa      	LDD  R26,Y+2
000f5b 81bb      	LDD  R27,Y+2+1
000f5c 27ee      	CLR  R30
000f5d 0fa1      	ADD  R26,R17
000f5e 1fbe      	ADC  R27,R30
000f5f 91ec      	LD   R30,X
000f60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D:
000f61 9728      	SBIW R28,8
000f62 940e 13ce 	CALL __SAVELOCR4
                +
000f64 e020     +LDI R18 , LOW ( 0 )
000f65 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000f66 89e8      	LDD  R30,Y+16
000f67 83ec      	STD  Y+4,R30
000f68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x1E:
000f69 83ed      	STD  Y+5,R30
000f6a 85ee      	LDD  R30,Y+14
000f6b 85ff      	LDD  R31,Y+14+1
000f6c 940e 130a 	CALL __ASRW8
000f6e 83ee      	STD  Y+6,R30
000f6f 85ee      	LDD  R30,Y+14
000f70 83ef      	STD  Y+7,R30
000f71 85ec      	LDD  R30,Y+12
000f72 85fd      	LDD  R31,Y+12+1
000f73 940e 130a 	CALL __ASRW8
000f75 87e8      	STD  Y+8,R30
000f76 85ec      	LDD  R30,Y+12
000f77 87e9      	STD  Y+9,R30
000f78 e0e0      	LDI  R30,LOW(0)
000f79 87ea      	STD  Y+10,R30
000f7a 87eb      	STD  Y+11,R30
000f7b 01fe      	MOVW R30,R28
000f7c 9634      	ADIW R30,4
000f7d 93fa      	ST   -Y,R31
000f7e 93ea      	ST   -Y,R30
000f7f e0e6      	LDI  R30,LOW(6)
000f80 e0f0      	LDI  R31,HIGH(6)
000f81 93fa      	ST   -Y,R31
000f82 93ea      	ST   -Y,R30
000f83 940e 0634 	CALL _CRC16
000f85 018f      	MOVW R16,R30
000f86 01f8      	MOVW R30,R16
000f87 87ea      	STD  Y+10,R30
                +
000f88 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000f89 e020     +LDI R18 , LOW ( 0 )
000f8a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000f8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000f8c 01de      	MOVW R26,R28
000f8d 9614      	ADIW R26,4
000f8e 0fa2      	ADD  R26,R18
000f8f 1fb3      	ADC  R27,R19
000f90 91ec      	LD   R30,X
000f91 93ea      	ST   -Y,R30
000f92 940c 062e 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000f94 e0e0      	LDI  R30,LOW(0)
000f95 83e8      	ST   Y,R30
000f96 83e9      	STD  Y+1,R30
000f97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000f98 85ae      	LDD  R26,Y+14
000f99 85bf      	LDD  R27,Y+14+1
000f9a 940e 1385 	CALL __GETD1P
000f9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000f9d 85ac      	LDD  R26,Y+12
000f9e 85bd      	LDD  R27,Y+12+1
000f9f 940e 1385 	CALL __GETD1P
000fa1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x23:
                +
000fa2 e1a7     +LDI R26 , LOW ( 0x3E8ED917 )
000fa3 edb9     +LDI R27 , HIGH ( 0x3E8ED917 )
000fa4 e88e     +LDI R24 , BYTE3 ( 0x3E8ED917 )
000fa5 e39e     +LDI R25 , BYTE4 ( 0x3E8ED917 )
                 	__GETD2N 0x3E8ED917
000fa6 940e 1247 	CALL __MULF12
000fa8 01df      	MOVW R26,R30
000fa9 01cb      	MOVW R24,R22
                +
000faa e0e0     +LDI R30 , LOW ( 0x40000000 )
000fab e0f0     +LDI R31 , HIGH ( 0x40000000 )
000fac e060     +LDI R22 , BYTE3 ( 0x40000000 )
000fad e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000fae 940e 1295 	CALL __DIVF21
000fb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24:
                +
000fb1 83ec     +STD Y + 4 , R30
000fb2 83fd     +STD Y + 4 + 1 , R31
000fb3 836e     +STD Y + 4 + 2 , R22
000fb4 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000fb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x25:
000fb6 940e 13b5 	CALL __SWAPD12
000fb8 940e 11f0 	CALL __SUBF12
000fba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26:
                +
000fbb 81ec     +LDD R30 , Y + 4
000fbc 81fd     +LDD R31 , Y + 4 + 1
000fbd 816e     +LDD R22 , Y + 4 + 2
000fbe 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000fbf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
000fc0 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000fc1 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000fc2 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000fc3 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000fc4 940e 1247 	CALL __MULF12
                +
000fc6 e0a0     +LDI R26 , LOW ( 0x41A00000 )
000fc7 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000fc8 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000fc9 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000fca 940e 1247 	CALL __MULF12
000fcc 940e 1186 	CALL __CFD1
000fce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
000fcf 940e 139a 	CALL __GETD1S0
000fd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
000fd2 e0e0      	LDI  R30,LOW(0)
000fd3 e0f0      	LDI  R31,HIGH(0)
000fd4 93ed      	ST   X+,R30
000fd5 93fc      	ST   X,R31
000fd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2A:
000fd7 93fa      	ST   -Y,R31
000fd8 93ea      	ST   -Y,R30
000fd9 940e 0663 	CALL _RTU_WriteOperate0
000fdb ce99      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2B:
000fdc 93ea      	ST   -Y,R30
000fdd e7e8      	LDI  R30,LOW(120)
000fde e0f0      	LDI  R31,HIGH(120)
000fdf 93fa      	ST   -Y,R31
000fe0 93ea      	ST   -Y,R30
000fe1 e0e1      	LDI  R30,LOW(1)
000fe2 e0f0      	LDI  R31,HIGH(1)
000fe3 cff3      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C:
000fe4 e0f0      	LDI  R31,0
000fe5 0fea      	ADD  R30,R26
000fe6 1ffb      	ADC  R31,R27
000fe7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2D:
000fe8 936a      	ST   -Y,R22
000fe9 937a      	ST   -Y,R23
000fea 93aa      	ST   -Y,R26
000feb 93ba      	ST   -Y,R27
000fec 93ea      	ST   -Y,R30
000fed 93fa      	ST   -Y,R31
000fee b7ef      	IN   R30,SREG
000fef 93ea      	ST   -Y,R30
000ff0 e0a0      	LDI  R26,0
000ff1 990c      	SBIC 0x1,4
000ff2 e0a1      	LDI  R26,1
000ff3 e0e0      	LDI  R30,0
000ff4 990d      	SBIC 0x1,5
000ff5 e0e1      	LDI  R30,1
000ff6 17ea      	CP   R30,R26
000ff7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E:
000ff8 e8a0      	LDI  R26,LOW(_MOTORR_HALL)
000ff9 e0b5      	LDI  R27,HIGH(_MOTORR_HALL)
000ffa 940e 138b 	CALL __GETD1P_INC
000ffc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2F:
                +
000ffd 5fef     +SUBI R30 , LOW ( - 1 )
000ffe 4fff     +SBCI R31 , HIGH ( - 1 )
000fff 4f6f     +SBCI R22 , BYTE3 ( - 1 )
001000 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
001001 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x30:
001002 940e 1395 	CALL __PUTDP1_DEC
001004 9731      	SBIW R30,1
001005 4060      	SBCI R22,0
001006 4070      	SBCI R23,0
001007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x31:
001008 9731      	SBIW R30,1
001009 4060      	SBCI R22,0
00100a 4070      	SBCI R23,0
00100b 940e 1395 	CALL __PUTDP1_DEC
00100d cfef      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
00100e dfee      	RCALL SUBOPT_0x2F
00100f cff2      	RJMP SUBOPT_0x30
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
001010 936a      	ST   -Y,R22
001011 937a      	ST   -Y,R23
001012 93aa      	ST   -Y,R26
001013 93ba      	ST   -Y,R27
001014 93ea      	ST   -Y,R30
001015 93fa      	ST   -Y,R31
001016 b7ef      	IN   R30,SREG
001017 93ea      	ST   -Y,R30
001018 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34:
001019 e8a4      	LDI  R26,LOW(_MOTORL_HALL)
00101a e0b5      	LDI  R27,HIGH(_MOTORL_HALL)
00101b 940e 138b 	CALL __GETD1P_INC
00101d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35:
00101e 93fa      	ST   -Y,R31
00101f 93ea      	ST   -Y,R30
001020 940c 0d81 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x36:
                +
001022 81ac     +LDD R26 , Y + 4
001023 81bd     +LDD R27 , Y + 4 + 1
001024 818e     +LDD R24 , Y + 4 + 2
001025 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
001026 e0e0     +LDI R30 , LOW ( 0x41200000 )
001027 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001028 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001029 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00102a 940e 1247 	CALL __MULF12
00102c cf84      	RJMP SUBOPT_0x24
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x37:
00102d df8d      	RCALL SUBOPT_0x26
                +
00102e 85ac     +LDD R26 , Y + 12
00102f 85bd     +LDD R27 , Y + 12 + 1
001030 858e     +LDD R24 , Y + 12 + 2
001031 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001032 940e 12da 	CALL __CMPF12
001034 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
001035 85ac     +LDD R26 , Y + 12
001036 85bd     +LDD R27 , Y + 12 + 1
001037 858e     +LDD R24 , Y + 12 + 2
001038 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
001039 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x39:
                +
00103a eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00103b ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00103c ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00103d e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00103e 940e 1247 	CALL __MULF12
                +
001040 87ec     +STD Y + 12 , R30
001041 87fd     +STD Y + 12 + 1 , R31
001042 876e     +STD Y + 12 + 2 , R22
001043 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001044 5f3f      	SUBI R19,-LOW(1)
001045 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3A:
                +
001046 e0e0     +LDI R30 , LOW ( 0x41200000 )
001047 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001048 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001049 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00104a 940e 1247 	CALL __MULF12
00104c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
                +
00104d 87ec     +STD Y + 12 , R30
00104e 87fd     +STD Y + 12 + 1 , R31
00104f 876e     +STD Y + 12 + 2 , R22
001050 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
001051 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C:
                +
001052 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001053 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001054 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
001055 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
001056 940e 11f7 	CALL __ADDF12
001058 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D:
                +
001059 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00105a ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00105b ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00105c e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00105d 940e 1247 	CALL __MULF12
00105f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
001060 940e 13ab 	CALL __PUTPARD1
001062 940c 0cb7 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
001064 85a8      	LDD  R26,Y+8
001065 85b9      	LDD  R27,Y+8+1
001066 9611      	ADIW R26,1
001067 87a8      	STD  Y+8,R26
001068 87b9      	STD  Y+8+1,R27
001069 9711      	SBIW R26,1
00106a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40:
00106b 2fe0      	MOV  R30,R16
00106c 5de0      	SUBI R30,-LOW(48)
00106d 93ec      	ST   X,R30
00106e 2fe0      	MOV  R30,R16
00106f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x41:
001070 85e8      	LDD  R30,Y+8
001071 85f9      	LDD  R31,Y+8+1
001072 9631      	ADIW R30,1
001073 87e8      	STD  Y+8,R30
001074 87f9      	STD  Y+8+1,R31
001075 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x42:
001076 932a      	ST   -Y,R18
001077 81ef      	LDD  R30,Y+7
001078 85f8      	LDD  R31,Y+7+1
001079 93fa      	ST   -Y,R31
00107a 93ea      	ST   -Y,R30
00107b 85eb      	LDD  R30,Y+11
00107c 85fc      	LDD  R31,Y+11+1
00107d 9509      	ICALL
00107e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x43:
                +
00107f 01fe     +MOVW R30 , R28
001080 5ae6     +SUBI R30 , LOW ( - 90 )
001081 4fff     +SBCI R31 , HIGH ( - 90 )
001082 9001     +LD R0 , Z +
001083 81f0     +LD R31 , Z
001084 2de0     +MOV R30 , R0
                 	__GETW1SX 90
001085 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x44:
001086 9734      	SBIW R30,4
                +
001087 01de     +MOVW R26 , R28
001088 5aa6     +SUBI R26 , LOW ( - 90 )
001089 4fbf     +SBCI R27 , HIGH ( - 90 )
00108a 93ed     +ST X + , R30
00108b 93fc     +ST X , R31
                 	__PUTW1SX 90
00108c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x45:
00108d 81ef      	LDD  R30,Y+7
00108e 85f8      	LDD  R31,Y+7+1
00108f 93fa      	ST   -Y,R31
001090 93ea      	ST   -Y,R30
001091 85eb      	LDD  R30,Y+11
001092 85fc      	LDD  R31,Y+11+1
001093 9509      	ICALL
001094 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x46:
                +
001095 01de     +MOVW R26 , R28
001096 5aa6     +SUBI R26 , LOW ( - 90 )
001097 4fbf     +SBCI R27 , HIGH ( - 90 )
001098 900d     +LD R0 , X +
001099 91bc     +LD R27 , X
00109a 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00109b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x47:
                +
00109c 87ea     +STD Y + 10 , R30
00109d 87fb     +STD Y + 10 + 1 , R31
00109e 876c     +STD Y + 10 + 2 , R22
00109f 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0010a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
0010a1 dfdd      	RCALL SUBOPT_0x43
0010a2 cfe3      	RJMP SUBOPT_0x44
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
0010a3 85ea     +LDD R30 , Y + 10
0010a4 85fb     +LDD R31 , Y + 10 + 1
0010a5 856c     +LDD R22 , Y + 10 + 2
0010a6 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0010a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4A:
0010a8 87ee      	STD  Y+14,R30
0010a9 87ff      	STD  Y+14+1,R31
0010aa 93fa      	ST   -Y,R31
0010ab 93ea      	ST   -Y,R30
0010ac 940e 0d8c 	CALL _strlen
0010ae 2f1e      	MOV  R17,R30
0010af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4B:
0010b0 dfe4      	RCALL SUBOPT_0x46
0010b1 9614      	ADIW R26,4
0010b2 940e 1381 	CALL __GETW1P
0010b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4C:
                +
0010b5 8be8     +STD Y + 16 , R30
0010b6 8bf9     +STD Y + 16 + 1 , R31
0010b7 8b6a     +STD Y + 16 + 2 , R22
0010b8 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0010b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4D:
0010ba 7f0b      	ANDI R16,LOW(251)
0010bb 89ed      	LDD  R30,Y+21
0010bc 93ea      	ST   -Y,R30
                +
0010bd 01fe     +MOVW R30 , R28
0010be 5ae9     +SUBI R30 , LOW ( - 87 )
0010bf 4fff     +SBCI R31 , HIGH ( - 87 )
0010c0 9001     +LD R0 , Z +
0010c1 81f0     +LD R31 , Z
0010c2 2de0     +MOV R30 , R0
                 	__GETW1SX 87
0010c3 93fa      	ST   -Y,R31
0010c4 93ea      	ST   -Y,R30
                +
0010c5 01fe     +MOVW R30 , R28
0010c6 5ae5     +SUBI R30 , LOW ( - 91 )
0010c7 4fff     +SBCI R31 , HIGH ( - 91 )
0010c8 9001     +LD R0 , Z +
0010c9 81f0     +LD R31 , Z
0010ca 2de0     +MOV R30 , R0
                 	__GETW1SX 91
0010cb 9509      	ICALL
0010cc 3050      	CPI  R21,0
0010cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4E:
                +
0010ce 89e8     +LDD R30 , Y + 16
0010cf 89f9     +LDD R31 , Y + 16 + 1
0010d0 896a     +LDD R22 , Y + 16 + 2
0010d1 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0010d2 85aa     +LDD R26 , Y + 10
0010d3 85bb     +LDD R27 , Y + 10 + 1
0010d4 858c     +LDD R24 , Y + 10 + 2
0010d5 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0010d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4F:
0010d7 01de      	MOVW R26,R28
0010d8 961c      	ADIW R26,12
0010d9 940e 12fa 	CALL __ADDW2R15
0010db 940e 1381 	CALL __GETW1P
0010dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x50:
0010de 940e 12fa 	CALL __ADDW2R15
0010e0 940e 1381 	CALL __GETW1P
0010e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x51:
0010e3 933a      	ST   -Y,R19
0010e4 940e 0d69 	CALL _isspace
0010e6 30e0      	CPI  R30,0
0010e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x52:
0010e8 85ed      	LDD  R30,Y+13
0010e9 85fe      	LDD  R31,Y+13+1
0010ea 93fa      	ST   -Y,R31
0010eb 93ea      	ST   -Y,R30
0010ec 89e9      	LDD  R30,Y+17
0010ed 89fa      	LDD  R31,Y+17+1
0010ee 9509      	ICALL
0010ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x53:
0010f0 85ab      	LDD  R26,Y+11
0010f1 85bc      	LDD  R27,Y+11+1
0010f2 91ac      	LD   R26,X
0010f3 30a0      	CPI  R26,0
0010f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x54:
0010f5 85ef      	LDD  R30,Y+15
0010f6 89f8      	LDD  R31,Y+15+1
0010f7 9734      	SBIW R30,4
0010f8 87ef      	STD  Y+15,R30
0010f9 8bf8      	STD  Y+15+1,R31
0010fa 85af      	LDD  R26,Y+15
0010fb 89b8      	LDD  R27,Y+15+1
0010fc 9614      	ADIW R26,4
0010fd 910d      	LD   R16,X+
0010fe 911c      	LD   R17,X
0010ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x55:
                +
001100 81ad     +LDD R26 , Y + 5
001101 81be     +LDD R27 , Y + 5 + 1
001102 818f     +LDD R24 , Y + 5 + 2
001103 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
001104 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x56:
                +
001105 83ed     +STD Y + 5 , R30
001106 83fe     +STD Y + 5 + 1 , R31
001107 836f     +STD Y + 5 + 2 , R22
001108 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
001109 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x57:
                +
00110a 81ed     +LDD R30 , Y + 5
00110b 81fe     +LDD R31 , Y + 5 + 1
00110c 816f     +LDD R22 , Y + 5 + 2
00110d 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00110e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x58:
00110f dff0      	RCALL SUBOPT_0x55
                +
001110 e0e0     +LDI R30 , LOW ( 0x3F000000 )
001111 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
001112 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
001113 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
001114 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x59:
                +
001115 81a9     +LDD R26 , Y + 1
001116 81ba     +LDD R27 , Y + 1 + 1
001117 818b     +LDD R24 , Y + 1 + 2
001118 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
001119 940e 1247 	CALL __MULF12
00111b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5A:
00111c 81ee      	LDD  R30,Y+6
00111d 81ff      	LDD  R31,Y+6+1
00111e 93fa      	ST   -Y,R31
00111f 93ea      	ST   -Y,R30
001120 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5B:
                +
001121 87e9     +STD Y + 9 , R30
001122 87fa     +STD Y + 9 + 1 , R31
001123 876b     +STD Y + 9 + 2 , R22
001124 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
001125 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5C:
001126 81ae      	LDD  R26,Y+6
001127 81bf      	LDD  R27,Y+6+1
001128 9611      	ADIW R26,1
001129 83ae      	STD  Y+6,R26
00112a 83bf      	STD  Y+6+1,R27
00112b 9711      	SBIW R26,1
00112c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5D:
                +
00112d 81aa     +LDD R26 , Y + 2
00112e 81bb     +LDD R27 , Y + 2 + 1
00112f 818c     +LDD R24 , Y + 2 + 2
001130 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001131 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5E:
                +
001132 83ea     +STD Y + 2 , R30
001133 83fb     +STD Y + 2 + 1 , R31
001134 836c     +STD Y + 2 + 2 , R22
001135 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
001136 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5F:
                +
001137 81ea     +LDD R30 , Y + 2
001138 81fb     +LDD R31 , Y + 2 + 1
001139 816c     +LDD R22 , Y + 2 + 2
00113a 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
00113b 85a9     +LDD R26 , Y + 9
00113c 85ba     +LDD R27 , Y + 9 + 1
00113d 858b     +LDD R24 , Y + 9 + 2
00113e 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00113f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x60:
                +
001140 85a9     +LDD R26 , Y + 9
001141 85ba     +LDD R27 , Y + 9 + 1
001142 858b     +LDD R24 , Y + 9 + 2
001143 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001144 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001145 91e9      	ld   r30,y+
001146 91f9      	ld   r31,y+
001147 9630      	adiw r30,0
001148 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001149 e686     +LDI R24 , LOW ( 0xE66 )
00114a e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
00114b 9701     +SBIW R24 , 1
00114c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
00114d 95a8      	wdr
00114e 9731      	sbiw r30,1
00114f f7c9      	brne __delay_ms0
                 __delay_ms1:
001150 9508      	ret
                 
                 __ANEGF1:
001151 9730      	SBIW R30,0
001152 4060      	SBCI R22,0
001153 4070      	SBCI R23,0
001154 f009      	BREQ __ANEGF10
001155 5870      	SUBI R23,0x80
                 __ANEGF10:
001156 9508      	RET
                 
                 __ROUND_REPACK:
001157 2355      	TST  R21
001158 f442      	BRPL __REPACK
001159 3850      	CPI  R21,0x80
00115a f411      	BRNE __ROUND_REPACK0
00115b ffe0      	SBRS R30,0
00115c c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00115d 9631      	ADIW R30,1
00115e 1f69      	ADC  R22,R25
00115f 1f79      	ADC  R23,R25
001160 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001161 e850      	LDI  R21,0x80
001162 2757      	EOR  R21,R23
001163 f411      	BRNE __REPACK0
001164 935f      	PUSH R21
001165 c0cf      	RJMP __ZERORES
                 __REPACK0:
001166 3f5f      	CPI  R21,0xFF
001167 f031      	BREQ __REPACK1
001168 0f66      	LSL  R22
001169 0c00      	LSL  R0
00116a 9557      	ROR  R21
00116b 9567      	ROR  R22
00116c 2f75      	MOV  R23,R21
00116d 9508      	RET
                 __REPACK1:
00116e 935f      	PUSH R21
00116f 2000      	TST  R0
001170 f00a      	BRMI __REPACK2
001171 c0cf      	RJMP __MAXRES
                 __REPACK2:
001172 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
001173 e850      	LDI  R21,0x80
001174 2e19      	MOV  R1,R25
001175 2215      	AND  R1,R21
001176 0f88      	LSL  R24
001177 1f99      	ROL  R25
001178 2795      	EOR  R25,R21
001179 0f55      	LSL  R21
00117a 9587      	ROR  R24
                 
                 __UNPACK1:
00117b e850      	LDI  R21,0x80
00117c 2e07      	MOV  R0,R23
00117d 2205      	AND  R0,R21
00117e 0f66      	LSL  R22
00117f 1f77      	ROL  R23
001180 2775      	EOR  R23,R21
001181 0f55      	LSL  R21
001182 9567      	ROR  R22
001183 9508      	RET
                 
                 __CFD1U:
001184 9468      	SET
001185 c001      	RJMP __CFD1U0
                 __CFD1:
001186 94e8      	CLT
                 __CFD1U0:
001187 935f      	PUSH R21
001188 dff2      	RCALL __UNPACK1
001189 3870      	CPI  R23,0x80
00118a f018      	BRLO __CFD10
00118b 3f7f      	CPI  R23,0xFF
00118c f408      	BRCC __CFD10
00118d c0a7      	RJMP __ZERORES
                 __CFD10:
00118e e156      	LDI  R21,22
00118f 1b57      	SUB  R21,R23
001190 f4aa      	BRPL __CFD11
001191 9551      	NEG  R21
001192 3058      	CPI  R21,8
001193 f40e      	BRTC __CFD19
001194 3059      	CPI  R21,9
                 __CFD19:
001195 f030      	BRLO __CFD17
001196 efef      	SER  R30
001197 efff      	SER  R31
001198 ef6f      	SER  R22
001199 e77f      	LDI  R23,0x7F
00119a f977      	BLD  R23,7
00119b c01a      	RJMP __CFD15
                 __CFD17:
00119c 2777      	CLR  R23
00119d 2355      	TST  R21
00119e f0b9      	BREQ __CFD15
                 __CFD18:
00119f 0fee      	LSL  R30
0011a0 1fff      	ROL  R31
0011a1 1f66      	ROL  R22
0011a2 1f77      	ROL  R23
0011a3 955a      	DEC  R21
0011a4 f7d1      	BRNE __CFD18
0011a5 c010      	RJMP __CFD15
                 __CFD11:
0011a6 2777      	CLR  R23
                 __CFD12:
0011a7 3058      	CPI  R21,8
0011a8 f028      	BRLO __CFD13
0011a9 2fef      	MOV  R30,R31
0011aa 2ff6      	MOV  R31,R22
0011ab 2f67      	MOV  R22,R23
0011ac 5058      	SUBI R21,8
0011ad cff9      	RJMP __CFD12
                 __CFD13:
0011ae 2355      	TST  R21
0011af f031      	BREQ __CFD15
                 __CFD14:
0011b0 9576      	LSR  R23
0011b1 9567      	ROR  R22
0011b2 95f7      	ROR  R31
0011b3 95e7      	ROR  R30
0011b4 955a      	DEC  R21
0011b5 f7d1      	BRNE __CFD14
                 __CFD15:
0011b6 2000      	TST  R0
0011b7 f40a      	BRPL __CFD16
0011b8 d149      	RCALL __ANEGD1
                 __CFD16:
0011b9 915f      	POP  R21
0011ba 9508      	RET
                 
                 __CDF1U:
0011bb 9468      	SET
0011bc c001      	RJMP __CDF1U0
                 __CDF1:
0011bd 94e8      	CLT
                 __CDF1U0:
0011be 9730      	SBIW R30,0
0011bf 4060      	SBCI R22,0
0011c0 4070      	SBCI R23,0
0011c1 f0b1      	BREQ __CDF10
0011c2 2400      	CLR  R0
0011c3 f026      	BRTS __CDF11
0011c4 2377      	TST  R23
0011c5 f412      	BRPL __CDF11
0011c6 9400      	COM  R0
0011c7 d13a      	RCALL __ANEGD1
                 __CDF11:
0011c8 2e17      	MOV  R1,R23
0011c9 e17e      	LDI  R23,30
0011ca 2011      	TST  R1
                 __CDF12:
0011cb f032      	BRMI __CDF13
0011cc 957a      	DEC  R23
0011cd 0fee      	LSL  R30
0011ce 1fff      	ROL  R31
0011cf 1f66      	ROL  R22
0011d0 1c11      	ROL  R1
0011d1 cff9      	RJMP __CDF12
                 __CDF13:
0011d2 2fef      	MOV  R30,R31
0011d3 2ff6      	MOV  R31,R22
0011d4 2d61      	MOV  R22,R1
0011d5 935f      	PUSH R21
0011d6 df8a      	RCALL __REPACK
0011d7 915f      	POP  R21
                 __CDF10:
0011d8 9508      	RET
                 
                 __SWAPACC:
0011d9 934f      	PUSH R20
0011da 01af      	MOVW R20,R30
0011db 01fd      	MOVW R30,R26
0011dc 01da      	MOVW R26,R20
0011dd 01ab      	MOVW R20,R22
0011de 01bc      	MOVW R22,R24
0011df 01ca      	MOVW R24,R20
0011e0 2d40      	MOV  R20,R0
0011e1 2c01      	MOV  R0,R1
0011e2 2e14      	MOV  R1,R20
0011e3 914f      	POP  R20
0011e4 9508      	RET
                 
                 __UADD12:
0011e5 0fea      	ADD  R30,R26
0011e6 1ffb      	ADC  R31,R27
0011e7 1f68      	ADC  R22,R24
0011e8 9508      	RET
                 
                 __NEGMAN1:
0011e9 95e0      	COM  R30
0011ea 95f0      	COM  R31
0011eb 9560      	COM  R22
0011ec 5fef      	SUBI R30,-1
0011ed 4fff      	SBCI R31,-1
0011ee 4f6f      	SBCI R22,-1
0011ef 9508      	RET
                 
                 __SUBF12:
0011f0 935f      	PUSH R21
0011f1 df81      	RCALL __UNPACK
0011f2 3890      	CPI  R25,0x80
0011f3 f171      	BREQ __ADDF129
0011f4 e850      	LDI  R21,0x80
0011f5 2615      	EOR  R1,R21
                 
0011f6 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0011f7 935f      	PUSH R21
0011f8 df7a      	RCALL __UNPACK
0011f9 3890      	CPI  R25,0x80
0011fa f139      	BREQ __ADDF129
                 
                 __ADDF120:
0011fb 3870      	CPI  R23,0x80
0011fc f121      	BREQ __ADDF128
                 __ADDF121:
0011fd 2f57      	MOV  R21,R23
0011fe 1b59      	SUB  R21,R25
0011ff f12b      	BRVS __ADDF1211
001200 f412      	BRPL __ADDF122
001201 dfd7      	RCALL __SWAPACC
001202 cffa      	RJMP __ADDF121
                 __ADDF122:
001203 3158      	CPI  R21,24
001204 f018      	BRLO __ADDF123
001205 27aa      	CLR  R26
001206 27bb      	CLR  R27
001207 2788      	CLR  R24
                 __ADDF123:
001208 3058      	CPI  R21,8
001209 f028      	BRLO __ADDF124
00120a 2fab      	MOV  R26,R27
00120b 2fb8      	MOV  R27,R24
00120c 2788      	CLR  R24
00120d 5058      	SUBI R21,8
00120e cff9      	RJMP __ADDF123
                 __ADDF124:
00120f 2355      	TST  R21
001210 f029      	BREQ __ADDF126
                 __ADDF125:
001211 9586      	LSR  R24
001212 95b7      	ROR  R27
001213 95a7      	ROR  R26
001214 955a      	DEC  R21
001215 f7d9      	BRNE __ADDF125
                 __ADDF126:
001216 2d50      	MOV  R21,R0
001217 2551      	EOR  R21,R1
001218 f072      	BRMI __ADDF127
001219 dfcb      	RCALL __UADD12
00121a f438      	BRCC __ADDF129
00121b 9567      	ROR  R22
00121c 95f7      	ROR  R31
00121d 95e7      	ROR  R30
00121e 9573      	INC  R23
00121f f413      	BRVC __ADDF129
001220 c020      	RJMP __MAXRES
                 __ADDF128:
001221 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001222 df3e      	RCALL __REPACK
001223 915f      	POP  R21
001224 9508      	RET
                 __ADDF1211:
001225 f7d8      	BRCC __ADDF128
001226 cffb      	RJMP __ADDF129
                 __ADDF127:
001227 1bea      	SUB  R30,R26
001228 0bfb      	SBC  R31,R27
001229 0b68      	SBC  R22,R24
00122a f051      	BREQ __ZERORES
00122b f410      	BRCC __ADDF1210
00122c 9400      	COM  R0
00122d dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00122e 2366      	TST  R22
00122f f392      	BRMI __ADDF129
001230 0fee      	LSL  R30
001231 1fff      	ROL  R31
001232 1f66      	ROL  R22
001233 957a      	DEC  R23
001234 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001235 27ee      	CLR  R30
001236 27ff      	CLR  R31
001237 2766      	CLR  R22
001238 2777      	CLR  R23
001239 915f      	POP  R21
00123a 9508      	RET
                 
                 __MINRES:
00123b efef      	SER  R30
00123c efff      	SER  R31
00123d e76f      	LDI  R22,0x7F
00123e ef7f      	SER  R23
00123f 915f      	POP  R21
001240 9508      	RET
                 
                 __MAXRES:
001241 efef      	SER  R30
001242 efff      	SER  R31
001243 e76f      	LDI  R22,0x7F
001244 e77f      	LDI  R23,0x7F
001245 915f      	POP  R21
001246 9508      	RET
                 
                 __MULF12:
001247 935f      	PUSH R21
001248 df2a      	RCALL __UNPACK
001249 3870      	CPI  R23,0x80
00124a f351      	BREQ __ZERORES
00124b 3890      	CPI  R25,0x80
00124c f341      	BREQ __ZERORES
00124d 2401      	EOR  R0,R1
00124e 9408      	SEC
00124f 1f79      	ADC  R23,R25
001250 f423      	BRVC __MULF124
001251 f31c      	BRLT __ZERORES
                 __MULF125:
001252 2000      	TST  R0
001253 f33a      	BRMI __MINRES
001254 cfec      	RJMP __MAXRES
                 __MULF124:
001255 920f      	PUSH R0
001256 931f      	PUSH R17
001257 932f      	PUSH R18
001258 933f      	PUSH R19
001259 934f      	PUSH R20
00125a 2711      	CLR  R17
00125b 2722      	CLR  R18
00125c 2799      	CLR  R25
00125d 9f68      	MUL  R22,R24
00125e 01a0      	MOVW R20,R0
00125f 9f8f      	MUL  R24,R31
001260 2d30      	MOV  R19,R0
001261 0d41      	ADD  R20,R1
001262 1f59      	ADC  R21,R25
001263 9f6b      	MUL  R22,R27
001264 0d30      	ADD  R19,R0
001265 1d41      	ADC  R20,R1
001266 1f59      	ADC  R21,R25
001267 9f8e      	MUL  R24,R30
001268 d027      	RCALL __MULF126
001269 9fbf      	MUL  R27,R31
00126a d025      	RCALL __MULF126
00126b 9f6a      	MUL  R22,R26
00126c d023      	RCALL __MULF126
00126d 9fbe      	MUL  R27,R30
00126e d01d      	RCALL __MULF127
00126f 9faf      	MUL  R26,R31
001270 d01b      	RCALL __MULF127
001271 9fae      	MUL  R26,R30
001272 0d11      	ADD  R17,R1
001273 1f29      	ADC  R18,R25
001274 1f39      	ADC  R19,R25
001275 1f49      	ADC  R20,R25
001276 1f59      	ADC  R21,R25
001277 2fe3      	MOV  R30,R19
001278 2ff4      	MOV  R31,R20
001279 2f65      	MOV  R22,R21
00127a 2f52      	MOV  R21,R18
00127b 914f      	POP  R20
00127c 913f      	POP  R19
00127d 912f      	POP  R18
00127e 911f      	POP  R17
00127f 900f      	POP  R0
001280 2366      	TST  R22
001281 f02a      	BRMI __MULF122
001282 0f55      	LSL  R21
001283 1fee      	ROL  R30
001284 1fff      	ROL  R31
001285 1f66      	ROL  R22
001286 c002      	RJMP __MULF123
                 __MULF122:
001287 9573      	INC  R23
001288 f24b      	BRVS __MULF125
                 __MULF123:
001289 decd      	RCALL __ROUND_REPACK
00128a 915f      	POP  R21
00128b 9508      	RET
                 
                 __MULF127:
00128c 0d10      	ADD  R17,R0
00128d 1d21      	ADC  R18,R1
00128e 1f39      	ADC  R19,R25
00128f c002      	RJMP __MULF128
                 __MULF126:
001290 0d20      	ADD  R18,R0
001291 1d31      	ADC  R19,R1
                 __MULF128:
001292 1f49      	ADC  R20,R25
001293 1f59      	ADC  R21,R25
001294 9508      	RET
                 
                 __DIVF21:
001295 935f      	PUSH R21
001296 dedc      	RCALL __UNPACK
001297 3870      	CPI  R23,0x80
001298 f421      	BRNE __DIVF210
001299 2011      	TST  R1
                 __DIVF211:
00129a f40a      	BRPL __DIVF219
00129b cf9f      	RJMP __MINRES
                 __DIVF219:
00129c cfa4      	RJMP __MAXRES
                 __DIVF210:
00129d 3890      	CPI  R25,0x80
00129e f409      	BRNE __DIVF218
                 __DIVF217:
00129f cf95      	RJMP __ZERORES
                 __DIVF218:
0012a0 2401      	EOR  R0,R1
0012a1 9408      	SEC
0012a2 0b97      	SBC  R25,R23
0012a3 f41b      	BRVC __DIVF216
0012a4 f3d4      	BRLT __DIVF217
0012a5 2000      	TST  R0
0012a6 cff3      	RJMP __DIVF211
                 __DIVF216:
0012a7 2f79      	MOV  R23,R25
0012a8 931f      	PUSH R17
0012a9 932f      	PUSH R18
0012aa 933f      	PUSH R19
0012ab 934f      	PUSH R20
0012ac 2411      	CLR  R1
0012ad 2711      	CLR  R17
0012ae 2722      	CLR  R18
0012af 2733      	CLR  R19
0012b0 2744      	CLR  R20
0012b1 2755      	CLR  R21
0012b2 e290      	LDI  R25,32
                 __DIVF212:
0012b3 17ae      	CP   R26,R30
0012b4 07bf      	CPC  R27,R31
0012b5 0786      	CPC  R24,R22
0012b6 0741      	CPC  R20,R17
0012b7 f030      	BRLO __DIVF213
0012b8 1bae      	SUB  R26,R30
0012b9 0bbf      	SBC  R27,R31
0012ba 0b86      	SBC  R24,R22
0012bb 0b41      	SBC  R20,R17
0012bc 9408      	SEC
0012bd c001      	RJMP __DIVF214
                 __DIVF213:
0012be 9488      	CLC
                 __DIVF214:
0012bf 1f55      	ROL  R21
0012c0 1f22      	ROL  R18
0012c1 1f33      	ROL  R19
0012c2 1c11      	ROL  R1
0012c3 1faa      	ROL  R26
0012c4 1fbb      	ROL  R27
0012c5 1f88      	ROL  R24
0012c6 1f44      	ROL  R20
0012c7 959a      	DEC  R25
0012c8 f751      	BRNE __DIVF212
0012c9 01f9      	MOVW R30,R18
0012ca 2d61      	MOV  R22,R1
0012cb 914f      	POP  R20
0012cc 913f      	POP  R19
0012cd 912f      	POP  R18
0012ce 911f      	POP  R17
0012cf 2366      	TST  R22
0012d0 f032      	BRMI __DIVF215
0012d1 0f55      	LSL  R21
0012d2 1fee      	ROL  R30
0012d3 1fff      	ROL  R31
0012d4 1f66      	ROL  R22
0012d5 957a      	DEC  R23
0012d6 f243      	BRVS __DIVF217
                 __DIVF215:
0012d7 de7f      	RCALL __ROUND_REPACK
0012d8 915f      	POP  R21
0012d9 9508      	RET
                 
                 __CMPF12:
0012da 2399      	TST  R25
0012db f09a      	BRMI __CMPF120
0012dc 2377      	TST  R23
0012dd f042      	BRMI __CMPF121
0012de 1797      	CP   R25,R23
0012df f048      	BRLO __CMPF122
0012e0 f429      	BRNE __CMPF121
0012e1 17ae      	CP   R26,R30
0012e2 07bf      	CPC  R27,R31
0012e3 0786      	CPC  R24,R22
0012e4 f020      	BRLO __CMPF122
0012e5 f031      	BREQ __CMPF123
                 __CMPF121:
0012e6 9498      	CLZ
0012e7 9488      	CLC
0012e8 9508      	RET
                 __CMPF122:
0012e9 9498      	CLZ
0012ea 9408      	SEC
0012eb 9508      	RET
                 __CMPF123:
0012ec 9418      	SEZ
0012ed 9488      	CLC
0012ee 9508      	RET
                 __CMPF120:
0012ef 2377      	TST  R23
0012f0 f7c2      	BRPL __CMPF122
0012f1 1797      	CP   R25,R23
0012f2 f398      	BRLO __CMPF121
0012f3 f7a9      	BRNE __CMPF122
0012f4 17ea      	CP   R30,R26
0012f5 07fb      	CPC  R31,R27
0012f6 0768      	CPC  R22,R24
0012f7 f388      	BRLO __CMPF122
0012f8 f399      	BREQ __CMPF123
0012f9 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0012fa 2400      	CLR  R0
0012fb 0daf      	ADD  R26,R15
0012fc 1db0      	ADC  R27,R0
0012fd 9508      	RET
                 
                 __ANEGW1:
0012fe 95f1      	NEG  R31
0012ff 95e1      	NEG  R30
001300 40f0      	SBCI R31,0
001301 9508      	RET
                 
                 __ANEGD1:
001302 95f0      	COM  R31
001303 9560      	COM  R22
001304 9570      	COM  R23
001305 95e1      	NEG  R30
001306 4fff      	SBCI R31,-1
001307 4f6f      	SBCI R22,-1
001308 4f7f      	SBCI R23,-1
001309 9508      	RET
                 
                 __ASRW8:
00130a 2fef      	MOV  R30,R31
00130b 27ff      	CLR  R31
00130c fde7      	SBRC R30,7
00130d efff      	SER  R31
00130e 9508      	RET
                 
                 __CBD1:
00130f 2ffe      	MOV  R31,R30
001310 0fff      	ADD  R31,R31
001311 0bff      	SBC  R31,R31
001312 2f6f      	MOV  R22,R31
001313 2f7f      	MOV  R23,R31
001314 9508      	RET
                 
                 __CWD1:
001315 2f6f      	MOV  R22,R31
001316 0f66      	ADD  R22,R22
001317 0b66      	SBC  R22,R22
001318 2f76      	MOV  R23,R22
001319 9508      	RET
                 
                 __CWD2:
00131a 2f8b      	MOV  R24,R27
00131b 0f88      	ADD  R24,R24
00131c 0b88      	SBC  R24,R24
00131d 2f98      	MOV  R25,R24
00131e 9508      	RET
                 
                 __MULW12U:
00131f 9ffa      	MUL  R31,R26
001320 2df0      	MOV  R31,R0
001321 9feb      	MUL  R30,R27
001322 0df0      	ADD  R31,R0
001323 9fea      	MUL  R30,R26
001324 2de0      	MOV  R30,R0
001325 0df1      	ADD  R31,R1
001326 9508      	RET
                 
                 __MULB1W2U:
001327 2f6e      	MOV  R22,R30
001328 9f6a      	MUL  R22,R26
001329 01f0      	MOVW R30,R0
00132a 9f6b      	MUL  R22,R27
00132b 0df0      	ADD  R31,R0
00132c 9508      	RET
                 
                 __DIVB21U:
00132d 2400      	CLR  R0
00132e e098      	LDI  R25,8
                 __DIVB21U1:
00132f 0faa      	LSL  R26
001330 1c00      	ROL  R0
001331 1a0e      	SUB  R0,R30
001332 f410      	BRCC __DIVB21U2
001333 0e0e      	ADD  R0,R30
001334 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
001335 60a1      	SBR  R26,1
                 __DIVB21U3:
001336 959a      	DEC  R25
001337 f7b9      	BRNE __DIVB21U1
001338 2fea      	MOV  R30,R26
001339 2da0      	MOV  R26,R0
00133a 9508      	RET
                 
                 __DIVB21:
00133b d039      	RCALL __CHKSIGNB
00133c dff0      	RCALL __DIVB21U
00133d f40e      	BRTC __DIVB211
00133e 95e1      	NEG  R30
                 __DIVB211:
00133f 9508      	RET
                 
                 __DIVD21U:
001340 933f      	PUSH R19
001341 934f      	PUSH R20
001342 935f      	PUSH R21
001343 2400      	CLR  R0
001344 2411      	CLR  R1
001345 2744      	CLR  R20
001346 2755      	CLR  R21
001347 e230      	LDI  R19,32
                 __DIVD21U1:
001348 0faa      	LSL  R26
001349 1fbb      	ROL  R27
00134a 1f88      	ROL  R24
00134b 1f99      	ROL  R25
00134c 1c00      	ROL  R0
00134d 1c11      	ROL  R1
00134e 1f44      	ROL  R20
00134f 1f55      	ROL  R21
001350 1a0e      	SUB  R0,R30
001351 0a1f      	SBC  R1,R31
001352 0b46      	SBC  R20,R22
001353 0b57      	SBC  R21,R23
001354 f428      	BRCC __DIVD21U2
001355 0e0e      	ADD  R0,R30
001356 1e1f      	ADC  R1,R31
001357 1f46      	ADC  R20,R22
001358 1f57      	ADC  R21,R23
001359 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00135a 60a1      	SBR  R26,1
                 __DIVD21U3:
00135b 953a      	DEC  R19
00135c f759      	BRNE __DIVD21U1
00135d 01fd      	MOVW R30,R26
00135e 01bc      	MOVW R22,R24
00135f 01d0      	MOVW R26,R0
001360 01ca      	MOVW R24,R20
001361 915f      	POP  R21
001362 914f      	POP  R20
001363 913f      	POP  R19
001364 9508      	RET
                 
                 __MODB21:
001365 94e8      	CLT
001366 ffa7      	SBRS R26,7
001367 c002      	RJMP __MODB211
001368 95a1      	NEG  R26
001369 9468      	SET
                 __MODB211:
00136a fde7      	SBRC R30,7
00136b 95e1      	NEG  R30
00136c dfc0      	RCALL __DIVB21U
00136d 2fea      	MOV  R30,R26
00136e f40e      	BRTC __MODB212
00136f 95e1      	NEG  R30
                 __MODB212:
001370 9508      	RET
                 
                 __MODD21U:
001371 dfce      	RCALL __DIVD21U
001372 01fd      	MOVW R30,R26
001373 01bc      	MOVW R22,R24
001374 9508      	RET
                 
                 __CHKSIGNB:
001375 94e8      	CLT
001376 ffe7      	SBRS R30,7
001377 c002      	RJMP __CHKSB1
001378 95e1      	NEG  R30
001379 9468      	SET
                 __CHKSB1:
00137a ffa7      	SBRS R26,7
00137b c004      	RJMP __CHKSB2
00137c 95a1      	NEG  R26
00137d f800      	BLD  R0,0
00137e 9403      	INC  R0
00137f fa00      	BST  R0,0
                 __CHKSB2:
001380 9508      	RET
                 
                 __GETW1P:
001381 91ed      	LD   R30,X+
001382 91fc      	LD   R31,X
001383 9711      	SBIW R26,1
001384 9508      	RET
                 
                 __GETD1P:
001385 91ed      	LD   R30,X+
001386 91fd      	LD   R31,X+
001387 916d      	LD   R22,X+
001388 917c      	LD   R23,X
001389 9713      	SBIW R26,3
00138a 9508      	RET
                 
                 __GETD1P_INC:
00138b 91ed      	LD   R30,X+
00138c 91fd      	LD   R31,X+
00138d 916d      	LD   R22,X+
00138e 917d      	LD   R23,X+
00138f 9508      	RET
                 
                 __PUTDP1:
001390 93ed      	ST   X+,R30
001391 93fd      	ST   X+,R31
001392 936d      	ST   X+,R22
001393 937c      	ST   X,R23
001394 9508      	RET
                 
                 __PUTDP1_DEC:
001395 937e      	ST   -X,R23
001396 936e      	ST   -X,R22
001397 93fe      	ST   -X,R31
001398 93ee      	ST   -X,R30
001399 9508      	RET
                 
                 __GETD1S0:
00139a 81e8      	LD   R30,Y
00139b 81f9      	LDD  R31,Y+1
00139c 816a      	LDD  R22,Y+2
00139d 817b      	LDD  R23,Y+3
00139e 9508      	RET
                 
                 __GETD2S0:
00139f 81a8      	LD   R26,Y
0013a0 81b9      	LDD  R27,Y+1
0013a1 818a      	LDD  R24,Y+2
0013a2 819b      	LDD  R25,Y+3
0013a3 9508      	RET
                 
                 __PUTD1S0:
0013a4 83e8      	ST   Y,R30
0013a5 83f9      	STD  Y+1,R31
0013a6 836a      	STD  Y+2,R22
0013a7 837b      	STD  Y+3,R23
0013a8 9508      	RET
                 
                 __PUTPARD1L:
0013a9 e060      	LDI  R22,0
0013aa e070      	LDI  R23,0
                 __PUTPARD1:
0013ab 937a      	ST   -Y,R23
0013ac 936a      	ST   -Y,R22
0013ad 93fa      	ST   -Y,R31
0013ae 93ea      	ST   -Y,R30
0013af 9508      	RET
                 
                 __CDF2U:
0013b0 9468      	SET
0013b1 c001      	RJMP __CDF2U0
                 __CDF2:
0013b2 94e8      	CLT
                 __CDF2U0:
0013b3 d001      	RCALL __SWAPD12
0013b4 de09      	RCALL __CDF1U0
                 
                 __SWAPD12:
0013b5 2e18      	MOV  R1,R24
0013b6 2f86      	MOV  R24,R22
0013b7 2d61      	MOV  R22,R1
0013b8 2e19      	MOV  R1,R25
0013b9 2f97      	MOV  R25,R23
0013ba 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0013bb 2e1b      	MOV  R1,R27
0013bc 2fbf      	MOV  R27,R31
0013bd 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0013be 2e1a      	MOV  R1,R26
0013bf 2fae      	MOV  R26,R30
0013c0 2de1      	MOV  R30,R1
0013c1 9508      	RET
                 
                 __CPD10:
0013c2 9730      	SBIW R30,0
0013c3 4060      	SBCI R22,0
0013c4 4070      	SBCI R23,0
0013c5 9508      	RET
                 
                 __CPD02:
0013c6 2400      	CLR  R0
0013c7 160a      	CP   R0,R26
0013c8 060b      	CPC  R0,R27
0013c9 0608      	CPC  R0,R24
0013ca 0609      	CPC  R0,R25
0013cb 9508      	RET
                 
                 __SAVELOCR6:
0013cc 935a      	ST   -Y,R21
                 __SAVELOCR5:
0013cd 934a      	ST   -Y,R20
                 __SAVELOCR4:
0013ce 933a      	ST   -Y,R19
                 __SAVELOCR3:
0013cf 932a      	ST   -Y,R18
                 __SAVELOCR2:
0013d0 931a      	ST   -Y,R17
0013d1 930a      	ST   -Y,R16
0013d2 9508      	RET
                 
                 __LOADLOCR6:
0013d3 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0013d4 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0013d5 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0013d6 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0013d7 8119      	LDD  R17,Y+1
0013d8 8108      	LD   R16,Y
0013d9 9508      	RET
                 
                 __INITLOCW:
0013da 0fac      	ADD  R26,R28
0013db 1fbd      	ADC  R27,R29
                 __INITLOC0:
0013dc 9005      	LPM  R0,Z+
0013dd 920d      	ST   X+,R0
0013de 9701      	SBIW R24,1
0013df f7e1      	BRNE __INITLOC0
0013e0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 145 r1 :  63 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  77 r19:  78 r20:  72 r21: 105 r22: 186 r23: 165 
r24: 113 r25:  98 r26: 403 r27: 199 r28: 132 r29:   3 r30: 938 r31: 398 
x  : 270 y  : 634 z  :  91 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  27 add   :  24 
adiw  :  52 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  75 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  79 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 432 
cbi   :   5 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  57 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  23 cpc   :  29 cpi   : 133 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  29 inc   :   3 jmp   :  53 ld    : 210 ldd   : 284 
ldi   : 452 lds   :  36 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 113 
movw  : 191 mul   :  17 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  33 pop   :  65 push  :  65 rcall :  78 
ret   : 157 reti  :   5 rjmp  : 206 rol   :  32 ror   :  16 sbc   :  12 
sbci  : 110 sbi   :   4 sbic  :   6 sbis  :   2 sbiw  :  49 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 359 std   : 128 sts   :  25 sub   :   6 subi  : 144 
swap  :   0 tst   :  25 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0027c2   9370    808  10178  131072   7.8%
[.dseg] 0x000100 0x00058c      0    140    140    4351   3.2%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
