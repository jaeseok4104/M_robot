
AVRASM ver. 2.1.30  C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm Tue Feb 18 15:11:33 2020

C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1063): warning: Register r6 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1064): warning: Register r9 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1065): warning: Register r8 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1066): warning: Register r11 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1067): warning: Register r10 already defined by the .DEF directive
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1068): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _TIMER2_OVERFLOW=R5
                 	.DEF _PACKET_BUFF_IDX=R4
                 	.DEF _TIMER0_OVERFLOW=R6
                 	.DEF _VELOCITY_BUFF_IDX=R9
                 	.DEF _SRF02_CONVERTING_FLAG=R8
                 	.DEF _SRF02_WAIT_FLAG=R11
                 	.DEF _CHECK_GETS=R10
                 	.DEF _CHECK_CONTROL=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0187 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0385 	JMP  _timer2_comp
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0397 	JMP  _timer0_comp
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 038b 	JMP  _timer0_ovf
000022 940c 0000 	JMP  0x00
000024 940c 0342 	JMP  _usart0_rxc
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 035d 	JMP  _usart1_rxc
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x7B:
000046 0000
000047 0000
000048 0000
000049 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004a 0000
00004b 0000
00004c 0000
00004d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00004e 0000
00004f 0000
000050 0000
000051 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000052 0000
000053 0000
000054 0000
000055 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 0000
00005b 0000
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0000
000060 0000
000061 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0000
000065 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000066 0000
000067 0000
000068 0000
000069 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006a 0000
00006b 0000
00006c 0000
00006d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 0000
000070 0000
000071 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000072 0000
000073 0000
000074 0000
000075 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 0000
00007b 0000
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007e 0000
00007f 0000
000080 0000
000081 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000082 0000
000083 0000
000084 0000
000085 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000086 0000
000087 0000
000088 0000
000089 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008a 0000
00008b 0000
00008c 0000
00008d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008e 0000
00008f 0000
000090 0000
000091 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000092 0000
000093 0000
000094 0000
000095 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000096 0000
000097 0000
000098 0000
000099 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009a 0000
00009b 0000
00009c 0000
00009d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009e 0000
00009f 0000
0000a0 0000
0000a1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a2 0000
0000a3 0000
0000a4 0000
0000a5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0000
0000a9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000aa 0000
0000ab 0000
0000ac 0000
0000ad 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ae 0000
0000af 0000
0000b0 0000
0000b1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b2 0000
0000b3 0000
0000b4 0000
0000b5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b6 0000
0000b7 0000
0000b8 0000
0000b9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ba 0000
0000bb 0000
0000bc 0000
0000bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000be 0000
0000bf 0000
0000c0 0000
0000c1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c2 0000
0000c3 0000
0000c4 0000
0000c5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c6 0000
0000c7 0000
0000c8 0000
0000c9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000
0000d3 0000
0000d4 0000
0000d5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d6 0000
0000d7 0000
0000d8 0000
0000d9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000da 0000
0000db 0000
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000de 0000
0000df 0000
0000e0 0000
0000e1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e2 0000
0000e3 0000
0000e4 0000
0000e5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e6 0000
0000e7 0000
0000e8 0000
0000e9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ea 0000
0000eb 0000
0000ec 0000
0000ed 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ee 0000
0000ef 0000
0000f0 0000
0000f1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f2 0000
0000f3 0000
0000f4 0000
0000f5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000f6 0000
0000f7 0000
0000f8 0000
0000f9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fa 0000
0000fb 0000
0000fc 0000
0000fd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000fe 0000
0000ff 0000
000100 0000
000101 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000102 0000
000103 0000
000104 0000
000105 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000106 0000
000107 0000
000108 0000
000109 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 0000
00010c 0000
00010d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010e 0000
00010f 0000
000110 0000
000111 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000112 0000
000113 0000
000114 0000
000115 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000116 0000
000117 0000
000118 0000
000119 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011a 0000
00011b 0000
00011c 0000
00011d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011e 0000
00011f 0000
000120 0000
000121 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000122 0000
000123 0000
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000126 0000
000127 0000
000128 0000
000129 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000132 0000
000133 0000
000134 0000
000135 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000136 0000
000137 0000
000138 0000
000139 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013a 0000
00013b 0000
00013c 0000
00013d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00013e 0000
00013f 0000
000140 0000
000141 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000
000147 0000
000148 0000
000149 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014a 0000
00014b 0000
00014c 0000
00014d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000152 0000
000153 0000
000154 0000
000155 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000156 0000
000157 0000
000158 0000
000159 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00015e 0000
00015f 0000
000160 0000
000161 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000162 0000
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1185): warning: .cseg .db misalignment - padding zero byte
000163 0000      	.DB  0x0,0x0,0x0
                 _0x92:
000164 0000
000165 0000
000166 0000
000167 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000168 0000      	.DB  0x0,0x0
                 _0x0:
000169 253c
00016a 2c64
00016b 6425
00016c 252c      	.DB  0x3C,0x25,0x64,0x2C,0x25,0x64,0x2C,0x25
00016d 3e64
00016e 2500
00016f 2c64
000170 2520      	.DB  0x64,0x3E,0x0,0x25,0x64,0x2C,0x20,0x25
000171 2c64
000172 2520
000173 2c64
000174 2520      	.DB  0x64,0x2C,0x20,0x25,0x64,0x2C,0x20,0x25
000175 0a64
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1193): warning: .cseg .db misalignment - padding zero byte
000176 0000      	.DB  0x64,0xA,0x0
                 _0x2000000:
000177 4e2d
000178 4e41
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1195): warning: .cseg .db misalignment - padding zero byte
000179 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1197): warning: .cseg .db misalignment - padding zero byte
00017a 0001      	.DB  0x1
                 _0x2080000:
00017b 4e2d
00017c 4e41
00017d 4900
00017e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ekzm5\Work\AVR\M_robot\List\M_robot.asm(1200): warning: .cseg .db misalignment - padding zero byte
00017f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000180 000a      	.DW  0x0A
000181 0004      	.DW  0x04
000182 02c8      	.DW  _0x92*2
                 
000183 0001      	.DW  0x01
000184 057a      	.DW  __seed_G104
000185 02f4      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000186 0000      	.DW  0
                 
                 __RESET:
000187 94f8      	CLI
000188 27ee      	CLR  R30
000189 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00018a e0f1      	LDI  R31,1
00018b bff5      	OUT  MCUCR,R31
00018c bfe5      	OUT  MCUCR,R30
00018d 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00018f e1f8      	LDI  R31,0x18
000190 bdf1      	OUT  WDTCR,R31
000191 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000192 e08d      	LDI  R24,(14-2)+1
000193 e0a2      	LDI  R26,2
000194 27bb      	CLR  R27
                 __CLEAR_REG:
000195 93ed      	ST   X+,R30
000196 958a      	DEC  R24
000197 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000198 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000199 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00019a e0a0      	LDI  R26,LOW(__SRAM_START)
00019b e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019c 93ed      	ST   X+,R30
00019d 9701      	SBIW R24,1
00019e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019f e0e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001a0 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a1 9185      	LPM  R24,Z+
0001a2 9195      	LPM  R25,Z+
0001a3 9700      	SBIW R24,0
0001a4 f061      	BREQ __GLOBAL_INI_END
0001a5 91a5      	LPM  R26,Z+
0001a6 91b5      	LPM  R27,Z+
0001a7 9005      	LPM  R0,Z+
0001a8 9015      	LPM  R1,Z+
0001a9 01bf      	MOVW R22,R30
0001aa 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001ab 9005      	LPM  R0,Z+
0001ac 920d      	ST   X+,R0
0001ad 9701      	SBIW R24,1
0001ae f7e1      	BRNE __GLOBAL_INI_LOOP
0001af 01fb      	MOVW R30,R22
0001b0 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b1 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b2 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b3 bfed      	OUT  SPL,R30
0001b4 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b6 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b7 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b8 940c 03ab 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;#define bps_115200 0x0007
                 ;
                 ;#define POLYNORMIAL 0xA001
                 ;
                 ;#define CHARACTER3_5 60 // 0.03msec
                 ;#define TRUE 0
                 ;#define FALSE 1
                 ;
                 ;#define R 0x01
                 ;#define L 0x02
                 ;#define START 1
                 ;#define STOP 2
                 ;
                 ;#define Length 0.281
                 ;#define Gearratio 20
                 ;
                 ;#define Circular 57.29                      // 180 / PI
                 ;
                 ;
                 ;/////////////////////////TWI//////////////////////////
                 ;#define Inches 0x50
                 ;#define Centimeters 0x51
                 ;#define microSec 0x52
                 ;#define USID 0xE4
                 ;
                 ;#define CommandReg 0
                 ;#define Unused 1
                 ;#define RangeHighByte 2
                 ;#define RangeLowByte 3
                 ;
                 ;#define TWI_START 0x08
                 ;#define MT_REPEATED_START 0x10
                 ;#define MT_SLAW_ACK 0x18
                 ;#define MT_DATA_ACK 0x28
                 ;#define MT_SLAR_ACK 0x40
                 ;#define MT_DATA_NACK 0x58
                 ;
                 ;#define ts 0.070         /// 샘플링 시간
                 ;#define tau 0.1         /// 시정수
                 ;
                 ;//////////////////////integer////////////////
                 ;unsigned char TIMER2_OVERFLOW = 0;
                 ;unsigned char PACKET_BUFF[100] = {0,};
                 ;unsigned char PACKET_BUFF_IDX = 0;
                 ;
                 ;unsigned int TIMER0_OVERFLOW = 0;
                 ;unsigned char VELOCITY_BUFF[20] = {0,};
                 ;unsigned char VELOCITY_BUFF_IDX = 0;
                 ;
                 ;///////////////FLAG//////////////////////
                 ;unsigned char SRF02_CONVERTING_FLAG = 0;
                 ;unsigned char SRF02_WAIT_FLAG = 0;
                 ;unsigned char CHECK_GETS = 0;
                 ;
                 ;unsigned char CHECK_CONTROL = 0;
                 ;unsigned int TIMER1_OVERFLOW = 0;
                 ;
                 ;void usart1_init(int bps)
                 ; 0000 0040 {
                 
                 	.CSEG
                 _usart1_init:
                 ; 0000 0041     UCSR1A = 0x00;
                 ;	bps -> Y+0
0001ba e0e0      	LDI  R30,LOW(0)
0001bb 93e0 009b 	STS  155,R30
                 ; 0000 0042     UCSR1B = (1<<RXEN1)|(1<<TXEN1)|(1<<RXCIE1); // RXCIE1 bit is recevie interrupt allow
0001bd e9e8      	LDI  R30,LOW(152)
0001be 93e0 009a 	STS  154,R30
                 ; 0000 0043     UCSR1C = (1<<UCSZ11)|(1<<UCSZ10);
0001c0 e0e6      	LDI  R30,LOW(6)
0001c1 93e0 009d 	STS  157,R30
                 ; 0000 0044     UCSR1C &= ~(1<<UMSEL1);
0001c3 91e0 009d 	LDS  R30,157
0001c5 7bef      	ANDI R30,0xBF
0001c6 93e0 009d 	STS  157,R30
                 ; 0000 0045 
                 ; 0000 0046     UBRR1H = (unsigned char)((bps>>8)  & 0x00ff);
0001c8 81e8      	LD   R30,Y
0001c9 81f9      	LDD  R31,Y+1
0001ca 940e 10b4 	CALL __ASRW8
0001cc 93e0 0098 	STS  152,R30
                 ; 0000 0047     UBRR1L = (unsigned char)(bps & 0x00ff);
0001ce 81e8      	LD   R30,Y
0001cf 93e0 0099 	STS  153,R30
                 ; 0000 0048 }
0001d1 c014      	RJMP _0x20A0010
                 ;
                 ;void usart0_init(int bps)
                 ; 0000 004B {
                 _usart0_init:
                 ; 0000 004C     UCSR0A = 0x00;
                 ;	bps -> Y+0
0001d2 e0e0      	LDI  R30,LOW(0)
0001d3 b9eb      	OUT  0xB,R30
                 ; 0000 004D     UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0); // RXCIE1 bit is recevie interrupt allow
0001d4 e9e8      	LDI  R30,LOW(152)
0001d5 b9ea      	OUT  0xA,R30
                 ; 0000 004E     UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
0001d6 e0e6      	LDI  R30,LOW(6)
0001d7 93e0 0095 	STS  149,R30
                 ; 0000 004F     UCSR0C &= ~(1<<UMSEL0);
0001d9 91e0 0095 	LDS  R30,149
0001db 7bef      	ANDI R30,0xBF
0001dc 93e0 0095 	STS  149,R30
                 ; 0000 0050 
                 ; 0000 0051     UBRR0H = (unsigned char)((bps>>8)  & 0x00ff);
0001de 81e8      	LD   R30,Y
0001df 81f9      	LDD  R31,Y+1
0001e0 940e 10b4 	CALL __ASRW8
0001e2 93e0 0090 	STS  144,R30
                 ; 0000 0052     UBRR0L = (unsigned char)(bps & 0x00ff);
0001e4 81e8      	LD   R30,Y
0001e5 b9e9      	OUT  0x9,R30
                 ; 0000 0053 }
                 _0x20A0010:
0001e6 9622      	ADIW R28,2
0001e7 9508      	RET
                 ;
                 ;void timer2_init(void)
                 ; 0000 0056 {
                 _timer2_init:
                 ; 0000 0057     //TIMER2
                 ; 0000 0058     TCCR2 = (1<<WGM21)|(1<<CS21)|(1<<CS20);// CTC모드, 1분주
0001e8 e0eb      	LDI  R30,LOW(11)
0001e9 bde5      	OUT  0x25,R30
                 ; 0000 0059 
                 ; 0000 005A     OCR2 = 40;
0001ea e2e8      	LDI  R30,LOW(40)
0001eb bde3      	OUT  0x23,R30
                 ; 0000 005B     TIMSK = (1<<OCIE2)|(1<<OCIE0);
0001ec e8e2      	LDI  R30,LOW(130)
0001ed c010      	RJMP _0x20A000F
                 ; 0000 005C     //TIMSK = (1<<OCIE2);
                 ; 0000 005D }
                 ;void timer0_init(void)
                 ; 0000 005F {
                 _timer0_init:
                 ; 0000 0060     TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00); // CTC모드, 1024분주
0001ee e0e7      	LDI  R30,LOW(7)
0001ef bfe3      	OUT  0x33,R30
                 ; 0000 0061     TIMSK = (1<<OCIE2)|(1<<TOIE0);
0001f0 e8e1      	LDI  R30,LOW(129)
0001f1 c00c      	RJMP _0x20A000F
                 ; 0000 0062 }
                 ;
                 ;void timer1_init(void)
                 ; 0000 0065 {
                 _timer1_init:
                 ; 0000 0066     // TCCR1A = (1<<COM1B0);
                 ; 0000 0067     TCCR1B = (1<<WGM13)|(1<<WGM12)|(1<<CS12)|(1<<CS10);; // WGM bit setting
0001f2 e1ed      	LDI  R30,LOW(29)
0001f3 bdee      	OUT  0x2E,R30
                 ; 0000 0068 
                 ; 0000 0069     OCR1B = 255;
0001f4 efef      	LDI  R30,LOW(255)
0001f5 e0f0      	LDI  R31,HIGH(255)
0001f6 bdf9      	OUT  0x28+1,R31
0001f7 bde8      	OUT  0x28,R30
                 ; 0000 006A     ICR1 = 1200;
0001f8 ebe0      	LDI  R30,LOW(1200)
0001f9 e0f4      	LDI  R31,HIGH(1200)
0001fa bdf7      	OUT  0x26+1,R31
0001fb bde6      	OUT  0x26,R30
                 ; 0000 006B     TIMSK |= (1<<OCIE1B);
0001fc b7e7      	IN   R30,0x37
0001fd 60e8      	ORI  R30,8
                 _0x20A000F:
0001fe bfe7      	OUT  0x37,R30
                 ; 0000 006C }
0001ff 9508      	RET
                 ;
                 ;void TWI_Init(){
                 ; 0000 006E void TWI_Init(){
                 ; 0000 006F     TWBR = 10;
                 ; 0000 0070     TWSR = 0;
                 ; 0000 0071     TWCR = 0;
                 ; 0000 0072 }
                 ;
                 ;
                 ;////////////////////USART RTX/////////////////////////////////
                 ;void putch_USART1(char data)
                 ; 0000 0077 {
                 _putch_USART1:
                 ; 0000 0078     while(!(UCSR1A & (1<<UDRE1))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x3:
000200 91e0 009b 	LDS  R30,155
000202 72e0      	ANDI R30,LOW(0x20)
000203 f3e1      	BREQ _0x3
                 ; 0000 0079     UDR1 = data;
000204 81e8      	LD   R30,Y
000205 93e0 009c 	STS  156,R30
                 ; 0000 007A }
000207 c023      	RJMP _0x20A000E
                 ;
                 ;void puts_USART1(char *str)
                 ; 0000 007D {
                 _puts_USART1:
                 ; 0000 007E     unsigned char i = 0;
                 ; 0000 007F     unsigned char x = 0;
                 ; 0000 0080     for(i = 0; str[i] ;i++){
000208 931a      	ST   -Y,R17
000209 930a      	ST   -Y,R16
                 ;	*str -> Y+2
                 ;	i -> R17
                 ;	x -> R16
00020a e010      	LDI  R17,0
00020b e000      	LDI  R16,0
00020c e010      	LDI  R17,LOW(0)
                 _0x7:
00020d 940e 0cab 	CALL SUBOPT_0x0
00020f 30e0      	CPI  R30,0
000210 f031      	BREQ _0x8
                 ; 0000 0081         putch_USART1(str[i]);
000211 940e 0cab 	CALL SUBOPT_0x0
000213 93ea      	ST   -Y,R30
000214 dfeb      	RCALL _putch_USART1
                 ; 0000 0082     }
000215 5f1f      	SUBI R17,-1
000216 cff6      	RJMP _0x7
                 _0x8:
                 ; 0000 0083     for(x = 0; x<i; x++){
000217 e000      	LDI  R16,LOW(0)
                 _0xA:
000218 1701      	CP   R16,R17
000219 f450      	BRSH _0xB
                 ; 0000 0084         *(str++) = 0;
00021a 81aa      	LDD  R26,Y+2
00021b 81bb      	LDD  R27,Y+2+1
00021c 9611      	ADIW R26,1
00021d 83aa      	STD  Y+2,R26
00021e 83bb      	STD  Y+2+1,R27
00021f 9711      	SBIW R26,1
000220 e0e0      	LDI  R30,LOW(0)
000221 93ec      	ST   X,R30
                 ; 0000 0085     }
000222 5f0f      	SUBI R16,-1
000223 cff4      	RJMP _0xA
                 _0xB:
                 ; 0000 0086 }
000224 8119      	LDD  R17,Y+1
000225 8108      	LDD  R16,Y+0
000226 c0ea      	RJMP _0x20A000C
                 ;
                 ;void puts_Modbus1(char *str,char IDX)
                 ; 0000 0089 {
                 ; 0000 008A     unsigned char i = 0;
                 ; 0000 008B     UCSR0B &= ~(1<<RXEN0);
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 008C     if(TIMER2_OVERFLOW>0)
                 ; 0000 008D     {
                 ; 0000 008E         for(i = 0;i<IDX;i++) putch_USART1(*(str+i));
                 ; 0000 008F for(i = 0; i<IDX; i++) *(str+i) = 0;
                 ; 0000 0090 }
                 ; 0000 0091     UCSR0B |= (1<<RXEN0);
                 ; 0000 0092 }
                 ;
                 ;void putch_USART0(char data)
                 ; 0000 0095 {
                 _putch_USART0:
                 ; 0000 0096     while(!(UCSR0A & (1<<UDRE0))); // UDRE flag is USART Data Register Empty
                 ;	data -> Y+0
                 _0x13:
000227 9b5d      	SBIS 0xB,5
000228 cffe      	RJMP _0x13
                 ; 0000 0097     UDR0 = data;
000229 81e8      	LD   R30,Y
00022a b9ec      	OUT  0xC,R30
                 ; 0000 0098 }
                 _0x20A000E:
00022b 9621      	ADIW R28,1
00022c 9508      	RET
                 ;
                 ;void puts_USART0(char *str,char IDX)
                 ; 0000 009B {
                 ; 0000 009C     //PACKET_BUFF[PACKET_BUFF_IDX] = 0;
                 ; 0000 009D     unsigned char i = 0;
                 ; 0000 009E     for(i = 0;i<IDX-1;i++)
                 ;	*str -> Y+2
                 ;	IDX -> Y+1
                 ;	i -> R17
                 ; 0000 009F     {
                 ; 0000 00A0         putch_USART1(*(str+i));
                 ; 0000 00A1     }
                 ; 0000 00A2 
                 ; 0000 00A3     for(i = 0; i<IDX; i++)
                 ; 0000 00A4     {
                 ; 0000 00A5         *(str+i) = 0;
                 ; 0000 00A6     }
                 ; 0000 00A7 }
                 ;
                 ;///////////////////////Modbus///////////////////////////////////////
                 ;unsigned short CRC16(unsigned char *puchMsg, int usDataLen)
                 ; 0000 00AB {
                 _CRC16:
                 ; 0000 00AC     int i;
                 ; 0000 00AD     unsigned short crc, flag;
                 ; 0000 00AE     crc = 0xffff;
00022d 940e 1166 	CALL __SAVELOCR6
                 ;	*puchMsg -> Y+8
                 ;	usDataLen -> Y+6
                 ;	i -> R16,R17
                 ;	crc -> R18,R19
                 ;	flag -> R20,R21
                +
00022f ef2f     +LDI R18 , LOW ( - 1 )
000230 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00AF 
                 ; 0000 00B0     while(usDataLen--){
                 _0x1C:
000231 81ee      	LDD  R30,Y+6
000232 81ff      	LDD  R31,Y+6+1
000233 9731      	SBIW R30,1
000234 83ee      	STD  Y+6,R30
000235 83ff      	STD  Y+6+1,R31
000236 9631      	ADIW R30,1
000237 f0f9      	BREQ _0x1E
                 ; 0000 00B1         crc ^= *puchMsg++;
000238 85a8      	LDD  R26,Y+8
000239 85b9      	LDD  R27,Y+8+1
00023a 91ed      	LD   R30,X+
00023b 87a8      	STD  Y+8,R26
00023c 87b9      	STD  Y+8+1,R27
00023d e0f0      	LDI  R31,0
                +
00023e 272e     +EOR R18 , R30
00023f 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B2 
                 ; 0000 00B3         for (i=0; i<8; i++){
                +
000240 e000     +LDI R16 , LOW ( 0 )
000241 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x20:
                +
000242 3008     +CPI R16 , LOW ( 8 )
000243 e0e0     +LDI R30 , HIGH ( 8 )
000244 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000245 f484      	BRGE _0x21
                 ; 0000 00B4             flag = crc & 0x0001;
000246 01f9      	MOVW R30,R18
000247 70e1      	ANDI R30,LOW(0x1)
000248 70f0      	ANDI R31,HIGH(0x1)
000249 01af      	MOVW R20,R30
                 ; 0000 00B5             crc >>= 1;
00024a 9536      	LSR  R19
00024b 9527      	ROR  R18
                 ; 0000 00B6             if(flag) crc ^= POLYNORMIAL;
00024c 2e04      	MOV  R0,R20
00024d 2a05      	OR   R0,R21
00024e f021      	BREQ _0x22
00024f e0e1      	LDI  R30,LOW(40961)
000250 eaf0      	LDI  R31,HIGH(40961)
                +
000251 272e     +EOR R18 , R30
000252 273f     +EOR R19 , R31
                 	__EORWRR 18,19,30,31
                 ; 0000 00B7         }
                 _0x22:
                +
000253 5f0f     +SUBI R16 , LOW ( - 1 )
000254 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000255 cfec      	RJMP _0x20
                 _0x21:
                 ; 0000 00B8     }
000256 cfda      	RJMP _0x1C
                 _0x1E:
                 ; 0000 00B9     return crc;
000257 01f9      	MOVW R30,R18
000258 940e 116d 	CALL __LOADLOCR6
00025a 962a      	ADIW R28,10
00025b 9508      	RET
                 ; 0000 00BA }
                 ;
                 ;int RTU_WriteOperate0(char device_address,int starting_address,int data)
                 ; 0000 00BD {
                 _RTU_WriteOperate0:
                 ; 0000 00BE     char protocol[8];
                 ; 0000 00BF     unsigned short crc16;
                 ; 0000 00C0     int i=0;
                 ; 0000 00C1     //PACKET_BUFF_IDX = 0;
                 ; 0000 00C2 
                 ; 0000 00C3     protocol[0]=device_address;
00025c 940e 0cb2 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00C4     protocol[1]=0x06;
00025e e0e6      	LDI  R30,LOW(6)
00025f 940e 0cba 	CALL SUBOPT_0x2
                 ; 0000 00C5     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00C6     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00C7     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00C8     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00C9     protocol[6]=0;
                 ; 0000 00CA     protocol[7]=0;
                 ; 0000 00CB 
                 ; 0000 00CC     crc16 = CRC16(protocol, 6);
                 ; 0000 00CD 
                 ; 0000 00CE     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00CF     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00D0 
                 ; 0000 00D1 
                 ; 0000 00D2     for(i=0;i<8;i++)
                 _0x24:
                +
000261 3028     +CPI R18 , LOW ( 8 )
000262 e0e0     +LDI R30 , HIGH ( 8 )
000263 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000264 f42c      	BRGE _0x25
                 ; 0000 00D3     {
                 ; 0000 00D4         putch_USART0(*(protocol+i));
000265 940e 0cdd 	CALL SUBOPT_0x3
                 ; 0000 00D5     }
                +
000267 5f2f     +SUBI R18 , LOW ( - 1 )
000268 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000269 cff7      	RJMP _0x24
                 _0x25:
                 ; 0000 00D6 }
00026a c00e      	RJMP _0x20A000D
                 ;
                 ;int RTU_ReedOperate0(char device_address,int starting_address,int data)
                 ; 0000 00D9 {
                 _RTU_ReedOperate0:
                 ; 0000 00DA     char protocol[8];
                 ; 0000 00DB     unsigned short crc16;
                 ; 0000 00DC     int i=0;
                 ; 0000 00DD     //PACKET_BUFF_IDX = 0;
                 ; 0000 00DE 
                 ; 0000 00DF     protocol[0]=device_address;
00026b 940e 0cb2 	CALL SUBOPT_0x1
                 ;	device_address -> Y+16
                 ;	starting_address -> Y+14
                 ;	data -> Y+12
                 ;	protocol -> Y+4
                 ;	crc16 -> R16,R17
                 ;	i -> R18,R19
                 ; 0000 00E0     protocol[1]=0x04;
00026d e0e4      	LDI  R30,LOW(4)
00026e 940e 0cba 	CALL SUBOPT_0x2
                 ; 0000 00E1     protocol[2]=((starting_address>>8)  & 0x00ff);
                 ; 0000 00E2     protocol[3]=((starting_address)     & 0x00ff);
                 ; 0000 00E3     protocol[4]=((data>>8)              & 0x00ff);
                 ; 0000 00E4     protocol[5]=((data)                 & 0x00ff);
                 ; 0000 00E5     protocol[6]=0;
                 ; 0000 00E6     protocol[7]=0;
                 ; 0000 00E7 
                 ; 0000 00E8     crc16 = CRC16(protocol, 6);
                 ; 0000 00E9 
                 ; 0000 00EA     protocol[6] = (unsigned char)((crc16>>0) & 0x00ff);
                 ; 0000 00EB     protocol[7] = (unsigned char)((crc16>>8) & 0x00ff);
                 ; 0000 00EC 
                 ; 0000 00ED 
                 ; 0000 00EE     for(i=0;i<8;i++)
                 _0x27:
                +
000270 3028     +CPI R18 , LOW ( 8 )
000271 e0e0     +LDI R30 , HIGH ( 8 )
000272 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000273 f42c      	BRGE _0x28
                 ; 0000 00EF     {
                 ; 0000 00F0         putch_USART0(*(protocol+i));
000274 940e 0cdd 	CALL SUBOPT_0x3
                 ; 0000 00F1     }
                +
000276 5f2f     +SUBI R18 , LOW ( - 1 )
000277 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000278 cff7      	RJMP _0x27
                 _0x28:
                 ; 0000 00F2 }
                 _0x20A000D:
000279 940e 116f 	CALL __LOADLOCR4
00027b 9661      	ADIW R28,17
00027c 9508      	RET
                 ;
                 ;void Make_MSPEED(float* _velocity, float* _angularV, int* R_RPM, int* L_RPM)
                 ; 0000 00F5 {
                 _Make_MSPEED:
                 ; 0000 00F6     float VelocityR = 0;
                 ; 0000 00F7     float VelocityL = 0;
                 ; 0000 00F8 
                 ; 0000 00F9     if(*_velocity>=0){
00027d 9728      	SBIW R28,8
00027e 940e 0ce5 	CALL SUBOPT_0x4
000280 e0e0      	LDI  R30,LOW(0)
000281 83ea      	STD  Y+2,R30
000282 83eb      	STD  Y+3,R30
000283 83ec      	STD  Y+4,R30
000284 83ed      	STD  Y+5,R30
000285 83ee      	STD  Y+6,R30
000286 83ef      	STD  Y+7,R30
                 ;	*_velocity -> Y+14
                 ;	*_angularV -> Y+12
                 ;	*R_RPM -> Y+10
                 ;	*L_RPM -> Y+8
                 ;	VelocityR -> Y+4
                 ;	VelocityL -> Y+0
000287 940e 0ce9 	CALL SUBOPT_0x5
000289 2377      	TST  R23
00028a f042      	BRMI _0x29
                 ; 0000 00FA         *_angularV = -(*_angularV);
00028b 940e 0cee 	CALL SUBOPT_0x6
00028d 940e 0efb 	CALL __ANEGF1
00028f 85ac      	LDD  R26,Y+12
000290 85bd      	LDD  R27,Y+12+1
000291 940e 1135 	CALL __PUTDP1
                 ; 0000 00FB     }
                 ; 0000 00FC 
                 ; 0000 00FD     VelocityR = *_velocity+(*_angularV*Length)/2;
                 _0x29:
000293 940e 0ce9 	CALL SUBOPT_0x5
000295 937f      	PUSH R23
000296 936f      	PUSH R22
000297 93ff      	PUSH R31
000298 93ef      	PUSH R30
000299 940e 0cee 	CALL SUBOPT_0x6
00029b 940e 0cf3 	CALL SUBOPT_0x7
00029d 91af      	POP  R26
00029e 91bf      	POP  R27
00029f 918f      	POP  R24
0002a0 919f      	POP  R25
0002a1 940e 0fa1 	CALL __ADDF12
0002a3 940e 0d02 	CALL SUBOPT_0x8
                 ; 0000 00FE     VelocityL = *_velocity-(*_angularV*Length)/2;
0002a5 940e 0ce9 	CALL SUBOPT_0x5
0002a7 937f      	PUSH R23
0002a8 936f      	PUSH R22
0002a9 93ff      	PUSH R31
0002aa 93ef      	PUSH R30
0002ab 940e 0cee 	CALL SUBOPT_0x6
0002ad 940e 0cf3 	CALL SUBOPT_0x7
0002af 91af      	POP  R26
0002b0 91bf      	POP  R27
0002b1 918f      	POP  R24
0002b2 919f      	POP  R25
0002b3 940e 0d07 	CALL SUBOPT_0x9
0002b5 940e 1144 	CALL __PUTD1S0
                 ; 0000 00FF 
                 ; 0000 0100     *R_RPM = (int)(152.788*VelocityR*Gearratio);
0002b7 940e 0d0c 	CALL SUBOPT_0xA
0002b9 940e 0d11 	CALL SUBOPT_0xB
0002bb 85aa      	LDD  R26,Y+10
0002bc 85bb      	LDD  R27,Y+10+1
0002bd 93ed      	ST   X+,R30
0002be 93fc      	ST   X,R31
                 ; 0000 0101     *L_RPM = (int)(152.788*VelocityL*Gearratio);
0002bf 940e 0d20 	CALL SUBOPT_0xC
0002c1 940e 0d11 	CALL SUBOPT_0xB
0002c3 85a8      	LDD  R26,Y+8
0002c4 85b9      	LDD  R27,Y+8+1
0002c5 93ed      	ST   X+,R30
0002c6 93fc      	ST   X,R31
                 ; 0000 0102 
                 ; 0000 0103     if( ((*R_RPM<300)&&(*R_RPM>-300))&&((*L_RPM<300)&&(*L_RPM>-300))){
0002c7 85aa      	LDD  R26,Y+10
0002c8 85bb      	LDD  R27,Y+10+1
0002c9 940e 112b 	CALL __GETW1P
0002cb 32ec      	CPI  R30,LOW(0x12C)
0002cc e0a1      	LDI  R26,HIGH(0x12C)
0002cd 07fa      	CPC  R31,R26
0002ce f434      	BRGE _0x2B
0002cf 01df      	MOVW R26,R30
0002d0 ede4      	LDI  R30,LOW(65236)
0002d1 effe      	LDI  R31,HIGH(65236)
0002d2 17ea      	CP   R30,R26
0002d3 07fb      	CPC  R31,R27
0002d4 f00c      	BRLT _0x2C
                 _0x2B:
0002d5 c014      	RJMP _0x2D
                 _0x2C:
0002d6 85a8      	LDD  R26,Y+8
0002d7 85b9      	LDD  R27,Y+8+1
0002d8 940e 112b 	CALL __GETW1P
0002da 32ec      	CPI  R30,LOW(0x12C)
0002db e0a1      	LDI  R26,HIGH(0x12C)
0002dc 07fa      	CPC  R31,R26
0002dd f454      	BRGE _0x2E
0002de 85a8      	LDD  R26,Y+8
0002df 85b9      	LDD  R27,Y+8+1
0002e0 940e 112b 	CALL __GETW1P
0002e2 01df      	MOVW R26,R30
0002e3 ede4      	LDI  R30,LOW(65236)
0002e4 effe      	LDI  R31,HIGH(65236)
0002e5 17ea      	CP   R30,R26
0002e6 07fb      	CPC  R31,R27
0002e7 f00c      	BRLT _0x2F
                 _0x2E:
0002e8 c001      	RJMP _0x2D
                 _0x2F:
0002e9 c001      	RJMP _0x30
                 _0x2D:
0002ea c008      	RJMP _0x2A
                 _0x30:
                 ; 0000 0104         *R_RPM = 0;
0002eb 85aa      	LDD  R26,Y+10
0002ec 85bb      	LDD  R27,Y+10+1
0002ed 940e 0d23 	CALL SUBOPT_0xD
                 ; 0000 0105         *L_RPM = 0;
0002ef 85a8      	LDD  R26,Y+8
0002f0 85b9      	LDD  R27,Y+8+1
0002f1 940e 0d23 	CALL SUBOPT_0xD
                 ; 0000 0106     }
                 ; 0000 0107 }
                 _0x2A:
0002f3 940c 071a 	JMP  _0x20A000A
                 ;
                 ;void oper_Disapath(int velocity_R, int velocity_L)
                 ; 0000 010A {
                 _oper_Disapath:
                 ; 0000 010B     RTU_WriteOperate0(R,(unsigned int)121,(int)(velocity_R));
                 ;	velocity_R -> Y+2
                 ;	velocity_L -> Y+0
0002f5 e0e1      	LDI  R30,LOW(1)
0002f6 93ea      	ST   -Y,R30
0002f7 e7e9      	LDI  R30,LOW(121)
0002f8 e0f0      	LDI  R31,HIGH(121)
0002f9 93fa      	ST   -Y,R31
0002fa 93ea      	ST   -Y,R30
0002fb 81ed      	LDD  R30,Y+5
0002fc 81fe      	LDD  R31,Y+5+1
0002fd 940e 0d28 	CALL SUBOPT_0xE
                 ; 0000 010C     delay_ms(5);
                 ; 0000 010D 
                 ; 0000 010E     RTU_WriteOperate0(L,(unsigned int)121,(int)-(velocity_L));
0002ff e0e2      	LDI  R30,LOW(2)
000300 93ea      	ST   -Y,R30
000301 e7e9      	LDI  R30,LOW(121)
000302 e0f0      	LDI  R31,HIGH(121)
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
000305 81eb      	LDD  R30,Y+3
000306 81fc      	LDD  R31,Y+3+1
000307 940e 10a8 	CALL __ANEGW1
000309 940e 0d28 	CALL SUBOPT_0xE
                 ; 0000 010F     delay_ms(5);
                 ; 0000 0110 
                 ; 0000 0111     RTU_WriteOperate0(R,(unsigned int)120,(int)(START));
00030b e0e1      	LDI  R30,LOW(1)
00030c 940e 0d32 	CALL SUBOPT_0xF
                 ; 0000 0112     delay_ms(5);
                 ; 0000 0113 
                 ; 0000 0114     RTU_WriteOperate0(L,(unsigned int)120,(int)(START));
00030e e0e2      	LDI  R30,LOW(2)
00030f 940e 0d32 	CALL SUBOPT_0xF
                 ; 0000 0115     delay_ms(5);
                 ; 0000 0116 }
                 _0x20A000C:
000311 9624      	ADIW R28,4
000312 9508      	RET
                 ;
                 ;int get_RPM(char *str,char IDX, int* goal)
                 ; 0000 0119 {
                 _get_RPM:
                 ; 0000 011A     unsigned char i = 0;
                 ; 0000 011B     unsigned int RPM = 0;
                 ; 0000 011C 
                 ; 0000 011D     if(PACKET_BUFF[1] != 0x07){
000313 940e 1168 	CALL __SAVELOCR4
                 ;	*str -> Y+7
                 ;	IDX -> Y+6
                 ;	*goal -> Y+4
                 ;	i -> R17
                 ;	RPM -> R18,R19
000315 e010      	LDI  R17,0
                +
000316 e020     +LDI R18 , LOW ( 0 )
000317 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000318 91a0 0501+LDS R26 , _PACKET_BUFF + ( 1 )
                 	__GETB2MN _PACKET_BUFF,1
00031a 30a7      	CPI  R26,LOW(0x7)
00031b f111      	BREQ _0x31
                 ; 0000 011E         RPM = (int)(PACKET_BUFF[5] << 8)+ (int)(PACKET_BUFF[6]);
                +
00031c 91b0 0505+LDS R27 , _PACKET_BUFF + ( 5 )
                 	__GETBRMN 27,_PACKET_BUFF,5
00031e e0a0      	LDI  R26,LOW(0)
                +
00031f 91e0 0506+LDS R30 , _PACKET_BUFF + ( 6 )
                 	__GETB1MN _PACKET_BUFF,6
000321 940e 0d3a 	CALL SUBOPT_0x10
000323 019f      	MOVW R18,R30
                 ; 0000 011F         *goal = (int)(PACKET_BUFF[3] << 8) + (int)(PACKET_BUFF[4]);
                +
000324 91b0 0503+LDS R27 , _PACKET_BUFF + ( 3 )
                 	__GETBRMN 27,_PACKET_BUFF,3
000326 e0a0      	LDI  R26,LOW(0)
                +
000327 91e0 0504+LDS R30 , _PACKET_BUFF + ( 4 )
                 	__GETB1MN _PACKET_BUFF,4
000329 940e 0d3a 	CALL SUBOPT_0x10
00032b 81ac      	LDD  R26,Y+4
00032c 81bd      	LDD  R27,Y+4+1
00032d 93ed      	ST   X+,R30
00032e 93fc      	ST   X,R31
                 ; 0000 0120         for(i = 0; i<IDX; i++) *(str+i) = 0;
00032f e010      	LDI  R17,LOW(0)
                 _0x33:
000330 81ee      	LDD  R30,Y+6
000331 171e      	CP   R17,R30
000332 f450      	BRSH _0x34
000333 2fe1      	MOV  R30,R17
000334 e0f0      	LDI  R31,0
000335 81af      	LDD  R26,Y+7
000336 85b8      	LDD  R27,Y+7+1
000337 0fae      	ADD  R26,R30
000338 1fbf      	ADC  R27,R31
000339 e0e0      	LDI  R30,LOW(0)
00033a 93ec      	ST   X,R30
00033b 5f1f      	SUBI R17,-1
00033c cff3      	RJMP _0x33
                 _0x34:
                 ; 0000 0122 return RPM;
00033d 01f9      	MOVW R30,R18
                 ; 0000 0123     }
                 ; 0000 0124 }
                 _0x31:
                 _0x20A000B:
00033e 940e 116f 	CALL __LOADLOCR4
000340 9629      	ADIW R28,9
000341 9508      	RET
                 ;
                 ;///////////////// TWI /////////////////////////////
                 ;unsigned char TWI_Read(unsigned char addr, unsigned char regAddr)
                 ; 0000 0128 {
                 ; 0000 0129     unsigned char Data;
                 ; 0000 012A     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA));//Start조건 전송
                 ;	addr -> Y+2
                 ;	regAddr -> Y+1
                 ;	Data -> R17
                 ; 0000 012B     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=TWI_START));
                 ; 0000 012C 
                 ; 0000 012D     TWDR = addr&(~0x01);                //쓰기 위한 주소 전송
                 ; 0000 012E     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 012F     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAW_ACK));
                 ; 0000 0130 
                 ; 0000 0131     TWDR = regAddr;                     //Reg주소 전송
                 ; 0000 0132     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0133     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_ACK));
                 ; 0000 0134 
                 ; 0000 0135     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA)); //Repeated start 전송
                 ; 0000 0136     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_REPEATED_START));
                 ; 0000 0137 
                 ; 0000 0138     TWDR = addr|0x01;                       //읽기 위한 주소 전송
                 ; 0000 0139     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 013A     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAR_ACK));
                 ; 0000 013B 
                 ; 0000 013C 
                 ; 0000 013D     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 013E     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_NACK));
                 ; 0000 013F     Data = TWDR;                        //Data읽기
                 ; 0000 0140 
                 ; 0000 0141     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTO));
                 ; 0000 0142 
                 ; 0000 0143     return Data;
                 ; 0000 0144 }
                 ;
                 ;void TWI_Write(unsigned char addr, unsigned char Data[],int NumberOfData)
                 ; 0000 0147 {
                 ; 0000 0148     int i=0;
                 ; 0000 0149 
                 ; 0000 014A     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTA));
                 ;	addr -> Y+6
                 ;	Data -> Y+4
                 ;	NumberOfData -> Y+2
                 ;	i -> R16,R17
                 ; 0000 014B     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=TWI_START));
                 ; 0000 014C 
                 ; 0000 014D     TWDR = addr&(~0x01);
                 ; 0000 014E     TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 014F     while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_SLAW_ACK));
                 ; 0000 0150 
                 ; 0000 0151     for(i=0;i<NumberOfData;i++){
                 ; 0000 0152         TWDR = Data[i];
                 ; 0000 0153         TWCR = ((1<<TWINT)|(1<<TWEN));
                 ; 0000 0154         while(((TWCR & (1 << TWINT)) == 0x00) || ((TWSR & 0xf8)!=MT_DATA_ACK));
                 ; 0000 0155     }
                 ; 0000 0156 
                 ; 0000 0157     TWCR = ((1<<TWINT)|(1<<TWEN)|(1<<TWSTO));
                 ; 0000 0158 }
                 ;
                 ;
                 ;void Start_SRF02_Conv(unsigned char Adress, unsigned char mode){
                 ; 0000 015B void Start_SRF02_Conv(unsigned char Adress, unsigned char mode){
                 ; 0000 015C     unsigned char ConvMode[2] = {0x00,};
                 ; 0000 015D     ConvMode[1] = mode;
                 ;	Adress -> Y+3
                 ;	mode -> Y+2
                 ;	ConvMode -> Y+0
                 ; 0000 015E     TWI_Write(Adress,ConvMode,2);
                 ; 0000 015F }
                 ;
                 ;void Change_SRF02_Adress(unsigned char nowAdress, unsigned char changeAdress)
                 ; 0000 0162 {
                 ; 0000 0163     unsigned char sequense1[2] = {0x00,0xA0};
                 ; 0000 0164     unsigned char sequense2[2] = {0x00,0xAA};
                 ; 0000 0165     unsigned char sequense3[2] = {0x00,0xA5};
                 ; 0000 0166     unsigned char sequense4[2] = {0x00,};
                 ; 0000 0167     sequense4[1] = changeAdress;
                 ;	nowAdress -> Y+9
                 ;	changeAdress -> Y+8
                 ;	sequense1 -> Y+6
                 ;	sequense2 -> Y+4
                 ;	sequense3 -> Y+2
                 ;	sequense4 -> Y+0
                 ; 0000 0168     TWI_Write(nowAdress,sequense1,2);
                 ; 0000 0169     delay_ms(1);
                 ; 0000 016A     TWI_Write(nowAdress,sequense2,2);
                 ; 0000 016B     delay_ms(1);
                 ; 0000 016C     TWI_Write(nowAdress,sequense3,2);
                 ; 0000 016D     delay_ms(1);
                 ; 0000 016E     TWI_Write(nowAdress,sequense4,2);
                 ; 0000 016F     delay_ms(1);
                 ; 0000 0170 }
                 ;
                 ;unsigned int Get_SRF02_Range(unsigned char Adress)
                 ; 0000 0173 {
                 ; 0000 0174     unsigned int range;
                 ; 0000 0175     unsigned char High = 0,Low = 0;
                 ; 0000 0176 
                 ; 0000 0177     High = TWI_Read(Adress, RangeHighByte);
                 ;	Adress -> Y+4
                 ;	range -> R16,R17
                 ;	High -> R19
                 ;	Low -> R18
                 ; 0000 0178     if(High == 0xFF){
                 ; 0000 0179 
                 ; 0000 017A         return 0;
                 ; 0000 017B     }
                 ; 0000 017C     Low = TWI_Read(Adress, RangeLowByte);
                 ; 0000 017D     range = (High<<8)+Low;
                 ; 0000 017E 
                 ; 0000 017F     return range;
                 ; 0000 0180 }
                 ;
                 ;void Start_SRF02_Conv_arr(unsigned char ID)
                 ; 0000 0183 {
                 ; 0000 0184     if(SRF02_WAIT_FLAG == 0){
                 ;	ID -> Y+0
                 ; 0000 0185         Start_SRF02_Conv(ID,Centimeters);
                 ; 0000 0186         TCNT1H = 0;
                 ; 0000 0187         TCNT1L = 0;
                 ; 0000 0188         SRF02_WAIT_FLAG = 1;
                 ; 0000 0189     }
                 ; 0000 018A }
                 ;
                 ;void Get_SRF02_Range_filter(unsigned char ID, unsigned int* range, unsigned int* pre_range, unsigned int *no_filter)
                 ; 0000 018D {
                 ; 0000 018E     if(SRF02_CONVERTING_FLAG == 1 && SRF02_WAIT_FLAG == 1){
                 ;	ID -> Y+6
                 ;	*range -> Y+4
                 ;	*pre_range -> Y+2
                 ;	*no_filter -> Y+0
                 ; 0000 018F         *no_filter = Get_SRF02_Range(ID);
                 ; 0000 0190 
                 ; 0000 0191         *range = ( tau * (*pre_range) + ts * (*no_filter) ) / (tau + ts) ; // low pass -filter
                 ; 0000 0192 
                 ; 0000 0193         // sprintf(char_buff, "%d,%d\n", *no_filter, *range);
                 ; 0000 0194         // puts_USART1(char_buff);
                 ; 0000 0195 
                 ; 0000 0196         *pre_range = *range;
                 ; 0000 0197         SRF02_CONVERTING_FLAG = 0;
                 ; 0000 0198         SRF02_WAIT_FLAG = 0;
                 ; 0000 0199 
                 ; 0000 019A     }
                 ; 0000 019B }
                 ;
                 ;/////////////////////ISR//////////////////////////////////
                 ;
                 ;interrupt [USART0_RXC] void usart0_rxc(void)
                 ; 0000 01A0 {
                 _usart0_rxc:
000342 93aa      	ST   -Y,R26
000343 93ba      	ST   -Y,R27
000344 93ea      	ST   -Y,R30
000345 b7ef      	IN   R30,SREG
000346 93ea      	ST   -Y,R30
                 ; 0000 01A1     if(((TCNT2 < CHARACTER3_5) && (TIMER2_OVERFLOW == 0)) || PACKET_BUFF_IDX == 0)
000347 b5e4      	IN   R30,0x24
000348 33ec      	CPI  R30,LOW(0x3C)
000349 f418      	BRSH _0x6B
00034a e0e0      	LDI  R30,LOW(0)
00034b 15e5      	CP   R30,R5
00034c f019      	BREQ _0x6D
                 _0x6B:
00034d e0e0      	LDI  R30,LOW(0)
00034e 15e4      	CP   R30,R4
00034f f419      	BRNE _0x6A
                 _0x6D:
                 ; 0000 01A2     {
                 ; 0000 01A3         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000350 940e 0d3e 	CALL SUBOPT_0x11
                 ; 0000 01A4         PACKET_BUFF_IDX++;
                 ; 0000 01A5         TCNT2 = 0;
                 ; 0000 01A6     }
                 ; 0000 01A7     else {
000352 c004      	RJMP _0x6F
                 _0x6A:
                 ; 0000 01A8         PACKET_BUFF_IDX = 0;
000353 2444      	CLR  R4
                 ; 0000 01A9         PACKET_BUFF[PACKET_BUFF_IDX] = UDR0;
000354 940e 0d3e 	CALL SUBOPT_0x11
                 ; 0000 01AA         PACKET_BUFF_IDX++;
                 ; 0000 01AB         TCNT2 = 0;
                 ; 0000 01AC         TIMER2_OVERFLOW = 0;
000356 2455      	CLR  R5
                 ; 0000 01AD     }
                 _0x6F:
                 ; 0000 01AE }
000357 91e9      	LD   R30,Y+
000358 bfef      	OUT  SREG,R30
000359 91e9      	LD   R30,Y+
00035a 91b9      	LD   R27,Y+
00035b 91a9      	LD   R26,Y+
00035c 9518      	RETI
                 ;
                 ;interrupt [USART1_RXC] void usart1_rxc(void)
                 ; 0000 01B1 {
                 _usart1_rxc:
00035d 93ea      	ST   -Y,R30
00035e 93fa      	ST   -Y,R31
00035f b7ef      	IN   R30,SREG
000360 93ea      	ST   -Y,R30
                 ; 0000 01B2     unsigned char i = 0;
                 ; 0000 01B3     i = UDR1;
000361 931a      	ST   -Y,R17
                 ;	i -> R17
000362 e010      	LDI  R17,0
000363 9110 009c 	LDS  R17,156
                 ; 0000 01B4     if((i == '<') && (CHECK_GETS == 0)){
000365 331c      	CPI  R17,60
000366 f419      	BRNE _0x71
000367 e0e0      	LDI  R30,LOW(0)
000368 15ea      	CP   R30,R10
000369 f009      	BREQ _0x72
                 _0x71:
00036a c007      	RJMP _0x70
                 _0x72:
                 ; 0000 01B5         PORTB.3 = ~PORTB.3;
00036b 9bc3      	SBIS 0x18,3
00036c c002      	RJMP _0x73
00036d 98c3      	CBI  0x18,3
00036e c001      	RJMP _0x74
                 _0x73:
00036f 9ac3      	SBI  0x18,3
                 _0x74:
                 ; 0000 01B6         VELOCITY_BUFF_IDX = 0;
000370 2499      	CLR  R9
                 ; 0000 01B7         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000371 c00e      	RJMP _0x90
                 ; 0000 01B8         VELOCITY_BUFF_IDX++;
                 ; 0000 01B9     }
                 ; 0000 01BA     else if(i == '>' && (CHECK_GETS == 0)){
                 _0x70:
000372 331e      	CPI  R17,62
000373 f419      	BRNE _0x77
000374 e0e0      	LDI  R30,LOW(0)
000375 15ea      	CP   R30,R10
000376 f009      	BREQ _0x78
                 _0x77:
000377 c006      	RJMP _0x76
                 _0x78:
                 ; 0000 01BB         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
000378 2de9      	MOV  R30,R9
000379 940e 0d48 	CALL SUBOPT_0x12
                 ; 0000 01BC         VELOCITY_BUFF_IDX++;
                 ; 0000 01BD         CHECK_GETS = 1;
00037b e0e1      	LDI  R30,LOW(1)
00037c 2eae      	MOV  R10,R30
                 ; 0000 01BE     }
                 ; 0000 01BF     else if(CHECK_GETS == 0){
00037d c005      	RJMP _0x79
                 _0x76:
00037e 20aa      	TST  R10
00037f f419      	BRNE _0x7A
                 ; 0000 01C0         VELOCITY_BUFF[VELOCITY_BUFF_IDX] = i;
                 _0x90:
000380 2de9      	MOV  R30,R9
000381 940e 0d48 	CALL SUBOPT_0x12
                 ; 0000 01C1         VELOCITY_BUFF_IDX++;
                 ; 0000 01C2     }
                 ; 0000 01C3 }
                 _0x7A:
                 _0x79:
000383 9119      	LD   R17,Y+
000384 c00d      	RJMP _0x91
                 ;
                 ;interrupt [TIM2_COMP] void timer2_comp(void)
                 ; 0000 01C6 {
                 _timer2_comp:
000385 93ea      	ST   -Y,R30
000386 b7ef      	IN   R30,SREG
                 ; 0000 01C7     TIMER2_OVERFLOW++;
000387 9453      	INC  R5
                 ; 0000 01C8 }
000388 bfef      	OUT  SREG,R30
000389 91e9      	LD   R30,Y+
00038a 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf(void)
                 ; 0000 01CB {
                 _timer0_ovf:
00038b 93ea      	ST   -Y,R30
00038c 93fa      	ST   -Y,R31
00038d b7ef      	IN   R30,SREG
00038e 93ea      	ST   -Y,R30
                 ; 0000 01CC     TIMER0_OVERFLOW++;
00038f 01f3      	MOVW R30,R6
000390 9631      	ADIW R30,1
000391 013f      	MOVW R6,R30
                 ; 0000 01CD }
                 _0x91:
000392 91e9      	LD   R30,Y+
000393 bfef      	OUT  SREG,R30
000394 91f9      	LD   R31,Y+
000395 91e9      	LD   R30,Y+
000396 9518      	RETI
                 ;
                 ;interrupt [TIM1_COMPB] void timer0_comp(void)
                 ; 0000 01D0 {
                 _timer0_comp:
000397 93aa      	ST   -Y,R26
000398 93ba      	ST   -Y,R27
000399 93ea      	ST   -Y,R30
00039a 93fa      	ST   -Y,R31
00039b b7ef      	IN   R30,SREG
00039c 93ea      	ST   -Y,R30
                 ; 0000 01D1     TIMER1_OVERFLOW++;
00039d e7a8      	LDI  R26,LOW(_TIMER1_OVERFLOW)
00039e e0b5      	LDI  R27,HIGH(_TIMER1_OVERFLOW)
00039f 940e 0d4e 	CALL SUBOPT_0x13
                 ; 0000 01D2     TCNT1H = 0x00;
0003a1 e0e0      	LDI  R30,LOW(0)
0003a2 bded      	OUT  0x2D,R30
                 ; 0000 01D3     TCNT1L = 0x00;
0003a3 bdec      	OUT  0x2C,R30
                 ; 0000 01D4 }
0003a4 91e9      	LD   R30,Y+
0003a5 bfef      	OUT  SREG,R30
0003a6 91f9      	LD   R31,Y+
0003a7 91e9      	LD   R30,Y+
0003a8 91b9      	LD   R27,Y+
0003a9 91a9      	LD   R26,Y+
0003aa 9518      	RETI
                 ;
                 ;void main(void)
                 ; 0000 01D7 {
                 _main:
                 ; 0000 01D8     float a_buff;
                 ; 0000 01D9     float v_buff;
                 ; 0000 01DA 
                 ; 0000 01DB     int velocity = 0;
                 ; 0000 01DC     int angularV = 0;
                 ; 0000 01DD     int velocity_R = 0;
                 ; 0000 01DE     int velocity_L = 0;
                 ; 0000 01DF     int past_velocity_R = 0;
                 ; 0000 01E0     int past_velocity_L = 0;
                 ; 0000 01E1     int del_ms = 0;
                 ; 0000 01E2 
                 ; 0000 01E3     int currentRPM_R = 0;
                 ; 0000 01E4     int currentRPM_L = 0;
                 ; 0000 01E5     float currentV_R = 0;
                 ; 0000 01E6     float currentV_L = 0;
                 ; 0000 01E7     int goal_current_R = 0;
                 ; 0000 01E8     int goal_current_L = 0;
                 ; 0000 01E9 
                 ; 0000 01EA     float d_velocity = 0;
                 ; 0000 01EB     float d_angularV = 0;
                 ; 0000 01EC     float control_time = 0;
                 ; 0000 01ED 
                 ; 0000 01EE     float d_x = 0;
                 ; 0000 01EF     float d_y = 0;
                 ; 0000 01F0     float d_angular = 0;
                 ; 0000 01F1     int d_angular_circula = 0;
                 ; 0000 01F2 
                 ; 0000 01F3     float goal_x = 0;
                 ; 0000 01F4     float goal_y = 0;
                 ; 0000 01F5     float goal_angular = 0;
                 ; 0000 01F6 
                 ; 0000 01F7     float TIMER1_TIME = 0;
                 ; 0000 01F8     float TIMER0_TIME = 0;
                 ; 0000 01F9 
                 ; 0000 01FA     char STOP_FLAG = 0;
                 ; 0000 01FB 
                 ; 0000 01FC     unsigned char BUFF[500] = {0,};
                 ; 0000 01FD 
                 ; 0000 01FE     usart1_init(bps_115200);
0003ab 97ef      	SBIW R28,63
0003ac 9724      	SBIW R28,4
0003ad 50d2      	SUBI R29,2
                +
0003ae e38b     +LDI R24 , LOW ( 571 )
0003af e092     +LDI R25 , HIGH ( 571 )
                 	__GETWRN 24,25,571
0003b0 e0a0      	LDI  R26,LOW(0)
0003b1 e0b0      	LDI  R27,HIGH(0)
0003b2 e8ec      	LDI  R30,LOW(_0x7B*2)
0003b3 e0f0      	LDI  R31,HIGH(_0x7B*2)
0003b4 940e 1174 	CALL __INITLOCW
                 ;	a_buff -> Y+575
                 ;	v_buff -> Y+571
                 ;	velocity -> R16,R17
                 ;	angularV -> R18,R19
                 ;	velocity_R -> R20,R21
                 ;	velocity_L -> Y+569
                 ;	past_velocity_R -> Y+567
                 ;	past_velocity_L -> Y+565
                 ;	del_ms -> Y+563
                 ;	currentRPM_R -> Y+561
                 ;	currentRPM_L -> Y+559
                 ;	currentV_R -> Y+555
                 ;	currentV_L -> Y+551
                 ;	goal_current_R -> Y+549
                 ;	goal_current_L -> Y+547
                 ;	d_velocity -> Y+543
                 ;	d_angularV -> Y+539
                 ;	control_time -> Y+535
                 ;	d_x -> Y+531
                 ;	d_y -> Y+527
                 ;	d_angular -> Y+523
                 ;	d_angular_circula -> Y+521
                 ;	goal_x -> Y+517
                 ;	goal_y -> Y+513
                 ;	goal_angular -> Y+509
                 ;	TIMER1_TIME -> Y+505
                 ;	TIMER0_TIME -> Y+501
                 ;	STOP_FLAG -> Y+500
                 ;	BUFF -> Y+0
                +
0003b6 e000     +LDI R16 , LOW ( 0 )
0003b7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003b8 e020     +LDI R18 , LOW ( 0 )
0003b9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0003ba e040     +LDI R20 , LOW ( 0 )
0003bb e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0003bc e0e7      	LDI  R30,LOW(7)
0003bd e0f0      	LDI  R31,HIGH(7)
0003be 93fa      	ST   -Y,R31
0003bf 93ea      	ST   -Y,R30
0003c0 ddf9      	RCALL _usart1_init
                 ; 0000 01FF     usart0_init(bps_115200);
0003c1 e0e7      	LDI  R30,LOW(7)
0003c2 e0f0      	LDI  R31,HIGH(7)
0003c3 93fa      	ST   -Y,R31
0003c4 93ea      	ST   -Y,R30
0003c5 de0c      	RCALL _usart0_init
                 ; 0000 0200     timer2_init();
0003c6 de21      	RCALL _timer2_init
                 ; 0000 0201     timer0_init();
0003c7 de26      	RCALL _timer0_init
                 ; 0000 0202     timer1_init();
0003c8 de29      	RCALL _timer1_init
                 ; 0000 0203     SREG |= 0x80;
0003c9 9478      	BSET 7
                 ; 0000 0204     DDRB.1 = 1;
0003ca 9ab9      	SBI  0x17,1
                 ; 0000 0205     DDRB.2 = 1;
0003cb 9aba      	SBI  0x17,2
                 ; 0000 0206     DDRB.3 = 1;
0003cc 9abb      	SBI  0x17,3
                 ; 0000 0207     delay_ms(5000);
0003cd e8e8      	LDI  R30,LOW(5000)
0003ce e1f3      	LDI  R31,HIGH(5000)
0003cf 940e 0d54 	CALL SUBOPT_0x14
                 ; 0000 0208     PORTB.1 = 0;
0003d1 98c1      	CBI  0x18,1
                 ; 0000 0209     PORTB.2 = 1;
0003d2 9ac2      	SBI  0x18,2
                 ; 0000 020A 
                 ; 0000 020B     TIMER0_OVERFLOW = 0;
0003d3 2466      	CLR  R6
0003d4 2477      	CLR  R7
                 ; 0000 020C     TCNT0 = 0;
0003d5 e0e0      	LDI  R30,LOW(0)
0003d6 bfe2      	OUT  0x32,R30
                 ; 0000 020D 
                 ; 0000 020E     while(1)
                 _0x86:
                 ; 0000 020F     {
                 ; 0000 0210         if(CHECK_GETS)
0003d7 20aa      	TST  R10
0003d8 f411      	BRNE PC+3
0003d9 940c 046d 	JMP _0x89
                 ; 0000 0211         {
                 ; 0000 0212             UCSR1B &= ~(1<<RXEN1);
0003db 91e0 009a 	LDS  R30,154
0003dd 7eef      	ANDI R30,0xEF
0003de 93e0 009a 	STS  154,R30
                 ; 0000 0213             sscanf(VELOCITY_BUFF,"<%d,%d,%d>", &velocity, &angularV, &del_ms);
0003e0 e6e4      	LDI  R30,LOW(_VELOCITY_BUFF)
0003e1 e0f5      	LDI  R31,HIGH(_VELOCITY_BUFF)
0003e2 93fa      	ST   -Y,R31
0003e3 93ea      	ST   -Y,R30
                +
0003e4 ede2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0003e5 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0003e6 93fa      	ST   -Y,R31
0003e7 93ea      	ST   -Y,R30
0003e8 b7ed      	IN   R30,SPL
0003e9 b7fe      	IN   R31,SPH
0003ea 9731      	SBIW R30,1
0003eb 940e 1149 	CALL __PUTPARD1L
0003ed 931f      	PUSH R17
0003ee 930f      	PUSH R16
0003ef b7ed      	IN   R30,SPL
0003f0 b7fe      	IN   R31,SPH
0003f1 9731      	SBIW R30,1
0003f2 940e 1149 	CALL __PUTPARD1L
0003f4 933f      	PUSH R19
0003f5 932f      	PUSH R18
0003f6 01fe      	MOVW R30,R28
0003f7 5ce1      	SUBI R30,LOW(-(575))
0003f8 4ffd      	SBCI R31,HIGH(-(575))
0003f9 2766      	CLR  R22
0003fa 2777      	CLR  R23
0003fb 940e 114b 	CALL __PUTPARD1
0003fd e08c      	LDI  R24,12
0003fe 940e 0ac7 	CALL _sscanf
000400 9660      	ADIW R28,16
000401 912f      	POP  R18
000402 913f      	POP  R19
000403 910f      	POP  R16
000404 911f      	POP  R17
                 ; 0000 0214             // sscanf(VELOCITY_BUFF,"<%d,%d,%f,%f,%f>", &velocity, &angularV, &goal_x, &goal_y, goal_angular);
                 ; 0000 0215 
                 ; 0000 0216             if(!del_ms){
000405 940e 0d58 	CALL SUBOPT_0x15
000407 9730      	SBIW R30,0
000408 f4b1      	BRNE _0x8A
                 ; 0000 0217                 d_x = 0;
000409 e0e0      	LDI  R30,LOW(0)
                +
00040a 01de     +MOVW R26 , R28
00040b 5ead     +SUBI R26 , LOW ( - 531 )
00040c 4fbd     +SBCI R27 , HIGH ( - 531 )
00040d 93ed     +ST X + , R30
00040e 93ed     +ST X + , R30
00040f 93ed     +ST X + , R30
000410 93ec     +ST X , R30
                 	__CLRD1SX 531
                 ; 0000 0218                 d_y = 0;
                +
000411 01de     +MOVW R26 , R28
000412 5fa1     +SUBI R26 , LOW ( - 527 )
000413 4fbd     +SBCI R27 , HIGH ( - 527 )
000414 93ed     +ST X + , R30
000415 93ed     +ST X + , R30
000416 93ed     +ST X + , R30
000417 93ec     +ST X , R30
                 	__CLRD1SX 527
                 ; 0000 0219                 d_angular = 0;
                +
000418 01de     +MOVW R26 , R28
000419 5fa5     +SUBI R26 , LOW ( - 523 )
00041a 4fbd     +SBCI R27 , HIGH ( - 523 )
00041b 93ed     +ST X + , R30
00041c 93ed     +ST X + , R30
00041d 93ed     +ST X + , R30
00041e 93ec     +ST X , R30
                 	__CLRD1SX 523
                 ; 0000 021A             }
                 ; 0000 021B 
                 ; 0000 021C             v_buff = (float)velocity/1000;
                 _0x8A:
00041f 01f8      	MOVW R30,R16
000420 940e 0d5f 	CALL SUBOPT_0x16
                +
000422 01de     +MOVW R26 , R28
000423 5ca5     +SUBI R26 , LOW ( - 571 )
000424 4fbd     +SBCI R27 , HIGH ( - 571 )
000425 93ed     +ST X + , R30
000426 93fd     +ST X + , R31
000427 936d     +ST X + , R22
000428 937c     +ST X , R23
                 	__PUTD1SX 571
                 ; 0000 021D             a_buff = (float)angularV/1000;
000429 01f9      	MOVW R30,R18
00042a 940e 0d5f 	CALL SUBOPT_0x16
                +
00042c 01de     +MOVW R26 , R28
00042d 5ca1     +SUBI R26 , LOW ( - 575 )
00042e 4fbd     +SBCI R27 , HIGH ( - 575 )
00042f 93ed     +ST X + , R30
000430 93fd     +ST X + , R31
000431 936d     +ST X + , R22
000432 937c     +ST X , R23
                 	__PUTD1SX 575
                 ; 0000 021E 
                 ; 0000 021F             Make_MSPEED(&v_buff, &a_buff, &velocity_R, &velocity_L);
000433 01fe      	MOVW R30,R28
000434 5ce5      	SUBI R30,LOW(-(571))
000435 4ffd      	SBCI R31,HIGH(-(571))
000436 93fa      	ST   -Y,R31
000437 93ea      	ST   -Y,R30
000438 01fe      	MOVW R30,R28
000439 5bef      	SUBI R30,LOW(-(577))
00043a 4ffd      	SBCI R31,HIGH(-(577))
00043b 93fa      	ST   -Y,R31
00043c 93ea      	ST   -Y,R30
00043d b7ed      	IN   R30,SPL
00043e b7fe      	IN   R31,SPH
00043f 9731      	SBIW R30,1
000440 93fa      	ST   -Y,R31
000441 93ea      	ST   -Y,R30
000442 935f      	PUSH R21
000443 934f      	PUSH R20
000444 01fe      	MOVW R30,R28
000445 5ce1      	SUBI R30,LOW(-(575))
000446 4ffd      	SBCI R31,HIGH(-(575))
000447 93fa      	ST   -Y,R31
000448 93ea      	ST   -Y,R30
000449 de33      	RCALL _Make_MSPEED
00044a 914f      	POP  R20
00044b 915f      	POP  R21
                 ; 0000 0220 
                 ; 0000 0221             oper_Disapath(velocity_R, velocity_L);
00044c 935a      	ST   -Y,R21
00044d 934a      	ST   -Y,R20
                +
00044e 01fe     +MOVW R30 , R28
00044f 5ce5     +SUBI R30 , LOW ( - 571 )
000450 4ffd     +SBCI R31 , HIGH ( - 571 )
000451 9001     +LD R0 , Z +
000452 81f0     +LD R31 , Z
000453 2de0     +MOV R30 , R0
                 	__GETW1SX 571
000454 93fa      	ST   -Y,R31
000455 93ea      	ST   -Y,R30
000456 de9e      	RCALL _oper_Disapath
                 ; 0000 0222 
                 ; 0000 0223             TIMER1_TIME = 0;
000457 e0e0      	LDI  R30,LOW(0)
                +
000458 01de     +MOVW R26 , R28
000459 50a7     +SUBI R26 , LOW ( - 505 )
00045a 4fbe     +SBCI R27 , HIGH ( - 505 )
00045b 93ed     +ST X + , R30
00045c 93ed     +ST X + , R30
00045d 93ed     +ST X + , R30
00045e 93ec     +ST X , R30
                 	__CLRD1SX 505
                 ; 0000 0224             TIMER1_OVERFLOW = 0;
00045f 940e 0d6c 	CALL SUBOPT_0x17
                 ; 0000 0225             TCNT1L = 0;
000461 bdec      	OUT  0x2C,R30
                 ; 0000 0226 
                 ; 0000 0227             STOP_FLAG = 1;
000462 e0e1      	LDI  R30,LOW(1)
                +
000463 01de     +MOVW R26 , R28
000464 50ac     +SUBI R26 , LOW ( - 500 )
000465 4fbe     +SBCI R27 , HIGH ( - 500 )
000466 93ec     +ST X , R30
                 	__PUTB1SX 500
                 ; 0000 0228             CHECK_GETS = 0;
000467 24aa      	CLR  R10
                 ; 0000 0229             UCSR1B |=(1<<RXEN1);
000468 91e0 009a 	LDS  R30,154
00046a 61e0      	ORI  R30,0x10
00046b 93e0 009a 	STS  154,R30
                 ; 0000 022A         }
                 ; 0000 022B 
                 ; 0000 022C         TIMER1_TIME = (float)(TIMER1_OVERFLOW*255 +(int)TCNT1L)*0.0694444;
                 _0x89:
00046d 91a0 0578 	LDS  R26,_TIMER1_OVERFLOW
00046f 91b0 0579 	LDS  R27,_TIMER1_OVERFLOW+1
000471 efef      	LDI  R30,LOW(255)
000472 940e 10d1 	CALL __MULB1W2U
000474 01df      	MOVW R26,R30
000475 b5ec      	IN   R30,0x2C
000476 940e 0d3a 	CALL SUBOPT_0x10
000478 2766      	CLR  R22
000479 2777      	CLR  R23
00047a 940e 0f67 	CALL __CDF1
                +
00047c edae     +LDI R26 , LOW ( 0x3D8E38DE )
00047d e3b8     +LDI R27 , HIGH ( 0x3D8E38DE )
00047e e88e     +LDI R24 , BYTE3 ( 0x3D8E38DE )
00047f e39d     +LDI R25 , BYTE4 ( 0x3D8E38DE )
                 	__GETD2N 0x3D8E38DE
000480 940e 0ff1 	CALL __MULF12
                +
000482 01de     +MOVW R26 , R28
000483 50a7     +SUBI R26 , LOW ( - 505 )
000484 4fbe     +SBCI R27 , HIGH ( - 505 )
000485 93ed     +ST X + , R30
000486 93fd     +ST X + , R31
000487 936d     +ST X + , R22
000488 937c     +ST X , R23
                 	__PUTD1SX 505
                 ; 0000 022D 
                 ; 0000 022E         if((del_ms<TIMER1_TIME) && (STOP_FLAG == 1))
                +
000489 01de     +MOVW R26 , R28
00048a 5cad     +SUBI R26 , LOW ( - 563 )
00048b 4fbd     +SBCI R27 , HIGH ( - 563 )
00048c 900d     +LD R0 , X +
00048d 91bc     +LD R27 , X
00048e 2da0     +MOV R26 , R0
                 	__GETW2SX 563
00048f 940e 10c4 	CALL __CWD2
000491 940e 1152 	CALL __CDF2
000493 940e 1084 	CALL __CMPF12
000495 f430      	BRSH _0x8C
                +
000496 01de     +MOVW R26 , R28
000497 50ac     +SUBI R26 , LOW ( - 500 )
000498 4fbe     +SBCI R27 , HIGH ( - 500 )
000499 91ac     +LD R26 , X
                 	__GETB2SX 500
00049a 30a1      	CPI  R26,LOW(0x1)
00049b f009      	BREQ _0x8D
                 _0x8C:
00049c c01c      	RJMP _0x8B
                 _0x8D:
                 ; 0000 022F         {
                 ; 0000 0230             oper_Disapath(0,0);
00049d e0e0      	LDI  R30,LOW(0)
00049e e0f0      	LDI  R31,HIGH(0)
00049f 93fa      	ST   -Y,R31
0004a0 93ea      	ST   -Y,R30
0004a1 93fa      	ST   -Y,R31
0004a2 93ea      	ST   -Y,R30
0004a3 de51      	RCALL _oper_Disapath
                 ; 0000 0231             TIMER1_OVERFLOW = 0;
0004a4 940e 0d6c 	CALL SUBOPT_0x17
                 ; 0000 0232             v_buff = 0;
                +
0004a6 01de     +MOVW R26 , R28
0004a7 5ca5     +SUBI R26 , LOW ( - 571 )
0004a8 4fbd     +SBCI R27 , HIGH ( - 571 )
0004a9 93ed     +ST X + , R30
0004aa 93ed     +ST X + , R30
0004ab 93ed     +ST X + , R30
0004ac 93ec     +ST X , R30
                 	__CLRD1SX 571
                 ; 0000 0233             a_buff = 0;
0004ad e0e0      	LDI  R30,LOW(0)
                +
0004ae 01de     +MOVW R26 , R28
0004af 5ca1     +SUBI R26 , LOW ( - 575 )
0004b0 4fbd     +SBCI R27 , HIGH ( - 575 )
0004b1 93ed     +ST X + , R30
0004b2 93ed     +ST X + , R30
0004b3 93ed     +ST X + , R30
0004b4 93ec     +ST X , R30
                 	__CLRD1SX 575
                 ; 0000 0234             STOP_FLAG = 0;
                +
0004b5 01de     +MOVW R26 , R28
0004b6 50ac     +SUBI R26 , LOW ( - 500 )
0004b7 4fbe     +SBCI R27 , HIGH ( - 500 )
0004b8 93ec     +ST X , R30
                 	__PUTB1SX 500
                 ; 0000 0235         }
                 ; 0000 0236 
                 ; 0000 0237         delay_ms(5);
                 _0x8B:
0004b9 940e 0d72 	CALL SUBOPT_0x18
                 ; 0000 0238         RTU_ReedOperate0(R, (unsigned int)2 ,(unsigned int)2);
0004bb e0e1      	LDI  R30,LOW(1)
0004bc 940e 0d75 	CALL SUBOPT_0x19
                 ; 0000 0239         delay_ms(5);
                 ; 0000 023A         currentRPM_R = get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_R);
0004be e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004bf e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004c0 93fa      	ST   -Y,R31
0004c1 93ea      	ST   -Y,R30
0004c2 924a      	ST   -Y,R4
0004c3 01fe      	MOVW R30,R28
0004c4 5de8      	SUBI R30,LOW(-(552))
0004c5 4ffd      	SBCI R31,HIGH(-(552))
0004c6 93fa      	ST   -Y,R31
0004c7 93ea      	ST   -Y,R30
0004c8 de4a      	RCALL _get_RPM
                +
0004c9 01de     +MOVW R26 , R28
0004ca 5caf     +SUBI R26 , LOW ( - 561 )
0004cb 4fbd     +SBCI R27 , HIGH ( - 561 )
0004cc 93ed     +ST X + , R30
0004cd 93fc     +ST X , R31
                 	__PUTW1SX 561
                 ; 0000 023B         RTU_ReedOperate0(L, (unsigned int)2 ,(unsigned int)2);
0004ce e0e2      	LDI  R30,LOW(2)
0004cf 940e 0d75 	CALL SUBOPT_0x19
                 ; 0000 023C         delay_ms(5);
                 ; 0000 023D         currentRPM_L = -get_RPM(PACKET_BUFF, PACKET_BUFF_IDX, &goal_current_L);
0004d1 e0e0      	LDI  R30,LOW(_PACKET_BUFF)
0004d2 e0f5      	LDI  R31,HIGH(_PACKET_BUFF)
0004d3 93fa      	ST   -Y,R31
0004d4 93ea      	ST   -Y,R30
0004d5 924a      	ST   -Y,R4
0004d6 01fe      	MOVW R30,R28
0004d7 5dea      	SUBI R30,LOW(-(550))
0004d8 4ffd      	SBCI R31,HIGH(-(550))
0004d9 93fa      	ST   -Y,R31
0004da 93ea      	ST   -Y,R30
0004db de37      	RCALL _get_RPM
0004dc 940e 10a8 	CALL __ANEGW1
                +
0004de 01de     +MOVW R26 , R28
0004df 5da1     +SUBI R26 , LOW ( - 559 )
0004e0 4fbd     +SBCI R27 , HIGH ( - 559 )
0004e1 93ed     +ST X + , R30
0004e2 93fc     +ST X , R31
                 	__PUTW1SX 559
                 ; 0000 023E 
                 ; 0000 023F         currentV_R = (float)(currentRPM_R/(152.788*Gearratio));
0004e3 940e 0d7f 	CALL SUBOPT_0x1A
0004e5 940e 0d86 	CALL SUBOPT_0x1B
                +
0004e7 01de     +MOVW R26 , R28
0004e8 5da5     +SUBI R26 , LOW ( - 555 )
0004e9 4fbd     +SBCI R27 , HIGH ( - 555 )
0004ea 93ed     +ST X + , R30
0004eb 93fd     +ST X + , R31
0004ec 936d     +ST X + , R22
0004ed 937c     +ST X , R23
                 	__PUTD1SX 555
                 ; 0000 0240         currentV_L = (float)(currentRPM_L/(152.788*Gearratio));
                +
0004ee 01fe     +MOVW R30 , R28
0004ef 5de1     +SUBI R30 , LOW ( - 559 )
0004f0 4ffd     +SBCI R31 , HIGH ( - 559 )
0004f1 9001     +LD R0 , Z +
0004f2 81f0     +LD R31 , Z
0004f3 2de0     +MOV R30 , R0
                 	__GETW1SX 559
0004f4 940e 0d86 	CALL SUBOPT_0x1B
                +
0004f6 01de     +MOVW R26 , R28
0004f7 5da9     +SUBI R26 , LOW ( - 551 )
0004f8 4fbd     +SBCI R27 , HIGH ( - 551 )
0004f9 93ed     +ST X + , R30
0004fa 93fd     +ST X + , R31
0004fb 936d     +ST X + , R22
0004fc 937c     +ST X , R23
                 	__PUTD1SX 551
                 ; 0000 0241 
                 ; 0000 0242         d_velocity = (currentV_R + currentV_L)/2;
                +
0004fd 01de     +MOVW R26 , R28
0004fe 5da5     +SUBI R26 , LOW ( - 555 )
0004ff 4fbd     +SBCI R27 , HIGH ( - 555 )
000500 900d     +LD R0 , X +
000501 901d     +LD R1 , X +
000502 918d     +LD R24 , X +
000503 919c     +LD R25 , X
000504 01d0     +MOVW R26 , R0
                 	__GETD2SX 555
000505 940e 0fa1 	CALL __ADDF12
000507 01df      	MOVW R26,R30
000508 01cb      	MOVW R24,R22
                +
000509 e0e0     +LDI R30 , LOW ( 0x40000000 )
00050a e0f0     +LDI R31 , HIGH ( 0x40000000 )
00050b e060     +LDI R22 , BYTE3 ( 0x40000000 )
00050c e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00050d 940e 103f 	CALL __DIVF21
                +
00050f 01de     +MOVW R26 , R28
000510 5ea1     +SUBI R26 , LOW ( - 543 )
000511 4fbd     +SBCI R27 , HIGH ( - 543 )
000512 93ed     +ST X + , R30
000513 93fd     +ST X + , R31
000514 936d     +ST X + , R22
000515 937c     +ST X , R23
                 	__PUTD1SX 543
                 ; 0000 0243         d_angularV = (currentV_R-currentV_L)/Length;
                +
000516 01de     +MOVW R26 , R28
000517 5da9     +SUBI R26 , LOW ( - 551 )
000518 4fbd     +SBCI R27 , HIGH ( - 551 )
000519 900d     +LD R0 , X +
00051a 901d     +LD R1 , X +
00051b 918d     +LD R24 , X +
00051c 919c     +LD R25 , X
00051d 01d0     +MOVW R26 , R0
                 	__GETD2SX 551
                +
00051e 01fe     +MOVW R30 , R28
00051f 5de5     +SUBI R30 , LOW ( - 555 )
000520 4ffd     +SBCI R31 , HIGH ( - 555 )
000521 9001     +LD R0 , Z +
000522 9011     +LD R1 , Z +
000523 9161     +LD R22 , Z +
000524 8170     +LD R23 , Z
000525 01f0     +MOVW R30 , R0
                 	__GETD1SX 555
000526 940e 0f9a 	CALL __SUBF12
000528 01df      	MOVW R26,R30
000529 01cb      	MOVW R24,R22
                +
00052a e3eb     +LDI R30 , LOW ( 0x3E8FDF3B )
00052b edff     +LDI R31 , HIGH ( 0x3E8FDF3B )
00052c e86f     +LDI R22 , BYTE3 ( 0x3E8FDF3B )
00052d e37e     +LDI R23 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD1N 0x3E8FDF3B
00052e 940e 103f 	CALL __DIVF21
                +
000530 01de     +MOVW R26 , R28
000531 5ea5     +SUBI R26 , LOW ( - 539 )
000532 4fbd     +SBCI R27 , HIGH ( - 539 )
000533 93ed     +ST X + , R30
000534 93fd     +ST X + , R31
000535 936d     +ST X + , R22
000536 937c     +ST X , R23
                 	__PUTD1SX 539
                 ; 0000 0244 
                 ; 0000 0245         control_time = ((TIMER0_OVERFLOW)*255 + TCNT0)*0.0000694444;
000537 01f3      	MOVW R30,R6
000538 efaf      	LDI  R26,LOW(255)
000539 e0b0      	LDI  R27,HIGH(255)
00053a 940e 10c9 	CALL __MULW12U
00053c 01df      	MOVW R26,R30
00053d b7e2      	IN   R30,0x32
00053e 940e 0d3a 	CALL SUBOPT_0x10
000540 2766      	CLR  R22
000541 2777      	CLR  R23
000542 940e 0f67 	CALL __CDF1
                +
000544 eaae     +LDI R26 , LOW ( 0x3891A2AE )
000545 eab2     +LDI R27 , HIGH ( 0x3891A2AE )
000546 e981     +LDI R24 , BYTE3 ( 0x3891A2AE )
000547 e398     +LDI R25 , BYTE4 ( 0x3891A2AE )
                 	__GETD2N 0x3891A2AE
000548 940e 0ff1 	CALL __MULF12
                +
00054a 01de     +MOVW R26 , R28
00054b 5ea9     +SUBI R26 , LOW ( - 535 )
00054c 4fbd     +SBCI R27 , HIGH ( - 535 )
00054d 93ed     +ST X + , R30
00054e 93fd     +ST X + , R31
00054f 936d     +ST X + , R22
000550 937c     +ST X , R23
                 	__PUTD1SX 535
                 ; 0000 0246         TIMER0_OVERFLOW = 0;
000551 2466      	CLR  R6
000552 2477      	CLR  R7
                 ; 0000 0247         TCNT0 = 0;
000553 e0e0      	LDI  R30,LOW(0)
000554 bfe2      	OUT  0x32,R30
                 ; 0000 0248 
                 ; 0000 0249         d_angular += control_time*d_angularV;
                +
000555 01fe     +MOVW R30 , R28
000556 5ee5     +SUBI R30 , LOW ( - 539 )
000557 4ffd     +SBCI R31 , HIGH ( - 539 )
000558 9001     +LD R0 , Z +
000559 9011     +LD R1 , Z +
00055a 9161     +LD R22 , Z +
00055b 8170     +LD R23 , Z
00055c 01f0     +MOVW R30 , R0
                 	__GETD1SX 539
                +
00055d 01de     +MOVW R26 , R28
00055e 5ea9     +SUBI R26 , LOW ( - 535 )
00055f 4fbd     +SBCI R27 , HIGH ( - 535 )
000560 900d     +LD R0 , X +
000561 901d     +LD R1 , X +
000562 918d     +LD R24 , X +
000563 919c     +LD R25 , X
000564 01d0     +MOVW R26 , R0
                 	__GETD2SX 535
000565 940e 0ff1 	CALL __MULF12
000567 940e 0d93 	CALL SUBOPT_0x1C
000569 940e 0fa1 	CALL __ADDF12
                +
00056b 01de     +MOVW R26 , R28
00056c 5fa5     +SUBI R26 , LOW ( - 523 )
00056d 4fbd     +SBCI R27 , HIGH ( - 523 )
00056e 93ed     +ST X + , R30
00056f 93fd     +ST X + , R31
000570 936d     +ST X + , R22
000571 937c     +ST X , R23
                 	__PUTD1SX 523
                 ; 0000 024A         d_x += d_velocity*control_time*cos(d_angular);
000572 940e 0d9c 	CALL SUBOPT_0x1D
000574 937f      	PUSH R23
000575 936f      	PUSH R22
000576 93ff      	PUSH R31
000577 93ef      	PUSH R30
000578 940e 0daf 	CALL SUBOPT_0x1E
00057a 940e 0bc2 	CALL _cos
00057c 91af      	POP  R26
00057d 91bf      	POP  R27
00057e 918f      	POP  R24
00057f 919f      	POP  R25
000580 940e 0ff1 	CALL __MULF12
                +
000582 01de     +MOVW R26 , R28
000583 5ead     +SUBI R26 , LOW ( - 531 )
000584 4fbd     +SBCI R27 , HIGH ( - 531 )
000585 900d     +LD R0 , X +
000586 901d     +LD R1 , X +
000587 918d     +LD R24 , X +
000588 919c     +LD R25 , X
000589 01d0     +MOVW R26 , R0
                 	__GETD2SX 531
00058a 940e 0fa1 	CALL __ADDF12
                +
00058c 01de     +MOVW R26 , R28
00058d 5ead     +SUBI R26 , LOW ( - 531 )
00058e 4fbd     +SBCI R27 , HIGH ( - 531 )
00058f 93ed     +ST X + , R30
000590 93fd     +ST X + , R31
000591 936d     +ST X + , R22
000592 937c     +ST X , R23
                 	__PUTD1SX 531
                 ; 0000 024B         d_y += d_velocity*control_time*sin(d_angular);
000593 940e 0d9c 	CALL SUBOPT_0x1D
000595 937f      	PUSH R23
000596 936f      	PUSH R22
000597 93ff      	PUSH R31
000598 93ef      	PUSH R30
000599 940e 0daf 	CALL SUBOPT_0x1E
00059b 940e 0b3b 	CALL _sin
00059d 91af      	POP  R26
00059e 91bf      	POP  R27
00059f 918f      	POP  R24
0005a0 919f      	POP  R25
0005a1 940e 0ff1 	CALL __MULF12
                +
0005a3 01de     +MOVW R26 , R28
0005a4 5fa1     +SUBI R26 , LOW ( - 527 )
0005a5 4fbd     +SBCI R27 , HIGH ( - 527 )
0005a6 900d     +LD R0 , X +
0005a7 901d     +LD R1 , X +
0005a8 918d     +LD R24 , X +
0005a9 919c     +LD R25 , X
0005aa 01d0     +MOVW R26 , R0
                 	__GETD2SX 527
0005ab 940e 0fa1 	CALL __ADDF12
                +
0005ad 01de     +MOVW R26 , R28
0005ae 5fa1     +SUBI R26 , LOW ( - 527 )
0005af 4fbd     +SBCI R27 , HIGH ( - 527 )
0005b0 93ed     +ST X + , R30
0005b1 93fd     +ST X + , R31
0005b2 936d     +ST X + , R22
0005b3 937c     +ST X , R23
                 	__PUTD1SX 527
                 ; 0000 024C         d_angular_circula = (int)(d_angular*Circular);
0005b4 940e 0d93 	CALL SUBOPT_0x1C
                +
0005b6 efe6     +LDI R30 , LOW ( 0x426528F6 )
0005b7 e2f8     +LDI R31 , HIGH ( 0x426528F6 )
0005b8 e665     +LDI R22 , BYTE3 ( 0x426528F6 )
0005b9 e472     +LDI R23 , BYTE4 ( 0x426528F6 )
                 	__GETD1N 0x426528F6
0005ba 940e 0ff1 	CALL __MULF12
0005bc 940e 0f30 	CALL __CFD1
                +
0005be 01de     +MOVW R26 , R28
0005bf 5fa7     +SUBI R26 , LOW ( - 521 )
0005c0 4fbd     +SBCI R27 , HIGH ( - 521 )
0005c1 93ed     +ST X + , R30
0005c2 93fc     +ST X , R31
                 	__PUTW1SX 521
                 ; 0000 024D 
                 ; 0000 024E         TIMER0_TIME += control_time;
                +
0005c3 01fe     +MOVW R30 , R28
0005c4 5ee9     +SUBI R30 , LOW ( - 535 )
0005c5 4ffd     +SBCI R31 , HIGH ( - 535 )
0005c6 9001     +LD R0 , Z +
0005c7 9011     +LD R1 , Z +
0005c8 9161     +LD R22 , Z +
0005c9 8170     +LD R23 , Z
0005ca 01f0     +MOVW R30 , R0
                 	__GETD1SX 535
0005cb 940e 0dba 	CALL SUBOPT_0x1F
0005cd 940e 0fa1 	CALL __ADDF12
                +
0005cf 01de     +MOVW R26 , R28
0005d0 50ab     +SUBI R26 , LOW ( - 501 )
0005d1 4fbe     +SBCI R27 , HIGH ( - 501 )
0005d2 93ed     +ST X + , R30
0005d3 93fd     +ST X + , R31
0005d4 936d     +ST X + , R22
0005d5 937c     +ST X , R23
                 	__PUTD1SX 501
                 ; 0000 024F         if(TIMER0_TIME>0.05){
0005d6 940e 0dba 	CALL SUBOPT_0x1F
                +
0005d8 eced     +LDI R30 , LOW ( 0x3D4CCCCD )
0005d9 ecfc     +LDI R31 , HIGH ( 0x3D4CCCCD )
0005da e46c     +LDI R22 , BYTE3 ( 0x3D4CCCCD )
0005db e37d     +LDI R23 , BYTE4 ( 0x3D4CCCCD )
                 	__GETD1N 0x3D4CCCCD
0005dc 940e 1084 	CALL __CMPF12
0005de f009      	BREQ PC+2
0005df f410      	BRCC PC+3
0005e0 940c 0611 	JMP  _0x8E
                 ; 0000 0250             // sprintf(BUFF, "%f, %f, %f, %f\n", d_velocity, v_buff, d_angularV, a_buff);
                 ; 0000 0251             // sprintf(BUFF, "%f, %f\n", d_x, d_y,currentRPM_R, current);
                 ; 0000 0252             // sprintf(BUFF, "%d, %d, %d\n", velocity, current_R, current_L);
                 ; 0000 0253             // sprintf(BUFF, "%.3f, %.3f, %4d\n", d_x, d_y, d_angular_circula);
                 ; 0000 0254             sprintf(BUFF, "%d, %d, %d, %d\n", currentRPM_R, currentRPM_L, goal_current_R, goal_current_L);
0005e2 01fe      	MOVW R30,R28
0005e3 93fa      	ST   -Y,R31
0005e4 93ea      	ST   -Y,R30
                +
0005e5 eded     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0005e6 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0005e7 93fa      	ST   -Y,R31
0005e8 93ea      	ST   -Y,R30
                +
0005e9 01fe     +MOVW R30 , R28
0005ea 5ceb     +SUBI R30 , LOW ( - 565 )
0005eb 4ffd     +SBCI R31 , HIGH ( - 565 )
0005ec 9001     +LD R0 , Z +
0005ed 81f0     +LD R31 , Z
0005ee 2de0     +MOV R30 , R0
                 	__GETW1SX 565
0005ef 940e 0dc3 	CALL SUBOPT_0x20
                +
0005f1 01fe     +MOVW R30 , R28
0005f2 5ce9     +SUBI R30 , LOW ( - 567 )
0005f3 4ffd     +SBCI R31 , HIGH ( - 567 )
0005f4 9001     +LD R0 , Z +
0005f5 81f0     +LD R31 , Z
0005f6 2de0     +MOV R30 , R0
                 	__GETW1SX 567
0005f7 940e 0dc3 	CALL SUBOPT_0x20
0005f9 940e 0d7f 	CALL SUBOPT_0x1A
0005fb 940e 0dc3 	CALL SUBOPT_0x20
0005fd 940e 0d58 	CALL SUBOPT_0x15
0005ff 940e 0dc3 	CALL SUBOPT_0x20
000601 e180      	LDI  R24,16
000602 940e 0938 	CALL _sprintf
000604 9664      	ADIW R28,20
                 ; 0000 0255             // sprintf(BUFF, "%.3f, %.3f, %.3f, %.3f\n", currentV_R, -currentV_L, v_buff, -v_buff);
                 ; 0000 0256             puts_USART1(BUFF);
000605 01fe      	MOVW R30,R28
000606 93fa      	ST   -Y,R31
000607 93ea      	ST   -Y,R30
000608 dbff      	RCALL _puts_USART1
                 ; 0000 0257              TIMER0_TIME = 0;
000609 e0e0      	LDI  R30,LOW(0)
                +
00060a 01de     +MOVW R26 , R28
00060b 50ab     +SUBI R26 , LOW ( - 501 )
00060c 4fbe     +SBCI R27 , HIGH ( - 501 )
00060d 93ed     +ST X + , R30
00060e 93ed     +ST X + , R30
00060f 93ed     +ST X + , R30
000610 93ec     +ST X , R30
                 	__CLRD1SX 501
                 ; 0000 0258         }
                 ; 0000 0259     }
                 _0x8E:
000611 cdc5      	RJMP _0x86
                 ; 0000 025A }
                 _0x8F:
000612 cfff      	RJMP _0x8F
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000613 931a      	ST   -Y,R17
000614 930a      	ST   -Y,R16
000615 81aa      	LDD  R26,Y+2
000616 81bb      	LDD  R27,Y+2+1
000617 9612      	ADIW R26,2
000618 940e 112b 	CALL __GETW1P
00061a 9730      	SBIW R30,0
00061b f129      	BREQ _0x2000010
00061c 81aa      	LDD  R26,Y+2
00061d 81bb      	LDD  R27,Y+2+1
00061e 9614      	ADIW R26,4
00061f 940e 112b 	CALL __GETW1P
000621 018f      	MOVW R16,R30
000622 9730      	SBIW R30,0
000623 f061      	BREQ _0x2000012
                +
000624 3002     +CPI R16 , LOW ( 2 )
000625 e0e0     +LDI R30 , HIGH ( 2 )
000626 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000627 f0c0      	BRLO _0x2000013
000628 01f8      	MOVW R30,R16
000629 9731      	SBIW R30,1
00062a 018f      	MOVW R16,R30
                +
00062b 81aa     +LDD R26 , Y + 2
00062c 81bb     +LDD R27 , Y + 2 + 1
00062d 9614     +ADIW R26 , 4
00062e 93ed     +ST X + , R30
00062f 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000630 81aa      	LDD  R26,Y+2
000631 81bb      	LDD  R27,Y+2+1
000632 9612      	ADIW R26,2
000633 940e 0d4e 	CALL SUBOPT_0x13
000635 9731      	SBIW R30,1
000636 81ac      	LDD  R26,Y+4
000637 83a0      	STD  Z+0,R26
000638 81aa      	LDD  R26,Y+2
000639 81bb      	LDD  R27,Y+2+1
00063a 940e 112b 	CALL __GETW1P
00063c 23ff      	TST  R31
00063d f012      	BRMI _0x2000014
00063e 940e 0d4e 	CALL SUBOPT_0x13
                 _0x2000014:
                 _0x2000013:
000640 c006      	RJMP _0x2000015
                 _0x2000010:
000641 81aa      	LDD  R26,Y+2
000642 81bb      	LDD  R27,Y+2+1
000643 efef      	LDI  R30,LOW(65535)
000644 efff      	LDI  R31,HIGH(65535)
000645 93ed      	ST   X+,R30
000646 93fc      	ST   X,R31
                 _0x2000015:
000647 8119      	LDD  R17,Y+1
000648 8108      	LDD  R16,Y+0
000649 c348      	RJMP _0x20A0007
                 __ftoe_G100:
00064a 9724      	SBIW R28,4
00064b 940e 0ce5 	CALL SUBOPT_0x4
00064d e8e0      	LDI  R30,LOW(128)
00064e 83ea      	STD  Y+2,R30
00064f e3ef      	LDI  R30,LOW(63)
000650 83eb      	STD  Y+3,R30
000651 940e 1168 	CALL __SAVELOCR4
000653 85ee      	LDD  R30,Y+14
000654 85ff      	LDD  R31,Y+14+1
000655 3fef      	CPI  R30,LOW(0xFFFF)
000656 efaf      	LDI  R26,HIGH(0xFFFF)
000657 07fa      	CPC  R31,R26
000658 f449      	BRNE _0x2000019
000659 85e8      	LDD  R30,Y+8
00065a 85f9      	LDD  R31,Y+8+1
00065b 93fa      	ST   -Y,R31
00065c 93ea      	ST   -Y,R30
                +
00065d eeee     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00065e e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00065f 940e 0dc8 	CALL SUBOPT_0x21
000661 c0b6      	RJMP _0x20A0009
                 _0x2000019:
000662 3fef      	CPI  R30,LOW(0x7FFF)
000663 e7af      	LDI  R26,HIGH(0x7FFF)
000664 07fa      	CPC  R31,R26
000665 f449      	BRNE _0x2000018
000666 85e8      	LDD  R30,Y+8
000667 85f9      	LDD  R31,Y+8+1
000668 93fa      	ST   -Y,R31
000669 93ea      	ST   -Y,R30
                +
00066a eeef     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00066b e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00066c 940e 0dc8 	CALL SUBOPT_0x21
00066e c0a9      	RJMP _0x20A0009
                 _0x2000018:
00066f 85ab      	LDD  R26,Y+11
000670 30a7      	CPI  R26,LOW(0x7)
000671 f010      	BRLO _0x200001B
000672 e0e6      	LDI  R30,LOW(6)
000673 87eb      	STD  Y+11,R30
                 _0x200001B:
000674 851b      	LDD  R17,Y+11
                 _0x200001C:
000675 2fe1      	MOV  R30,R17
000676 5011      	SUBI R17,1
000677 30e0      	CPI  R30,0
000678 f019      	BREQ _0x200001E
000679 940e 0dcc 	CALL SUBOPT_0x22
00067b cff9      	RJMP _0x200001C
                 _0x200001E:
                +
00067c 85ec     +LDD R30 , Y + 12
00067d 85fd     +LDD R31 , Y + 12 + 1
00067e 856e     +LDD R22 , Y + 12 + 2
00067f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000680 940e 1162 	CALL __CPD10
000682 f421      	BRNE _0x200001F
000683 e030      	LDI  R19,LOW(0)
000684 940e 0dcc 	CALL SUBOPT_0x22
000686 c02e      	RJMP _0x2000020
                 _0x200001F:
000687 853b      	LDD  R19,Y+11
000688 940e 0dd7 	CALL SUBOPT_0x23
00068a f009      	BREQ PC+2
00068b f410      	BRCC PC+3
00068c 940c 0699 	JMP  _0x2000021
00068e 940e 0dcc 	CALL SUBOPT_0x22
                 _0x2000022:
000690 940e 0dd7 	CALL SUBOPT_0x23
000692 f028      	BRLO _0x2000024
000693 940e 0ddf 	CALL SUBOPT_0x24
000695 940e 0de4 	CALL SUBOPT_0x25
000697 cff8      	RJMP _0x2000022
                 _0x2000024:
000698 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000699 940e 0dd7 	CALL SUBOPT_0x23
00069b f440      	BRSH _0x2000028
00069c 940e 0ddf 	CALL SUBOPT_0x24
00069e 940e 0df0 	CALL SUBOPT_0x26
0006a0 940e 0df7 	CALL SUBOPT_0x27
0006a2 5031      	SUBI R19,LOW(1)
0006a3 cff5      	RJMP _0x2000026
                 _0x2000028:
0006a4 940e 0dcc 	CALL SUBOPT_0x22
                 _0x2000025:
                +
0006a6 85ec     +LDD R30 , Y + 12
0006a7 85fd     +LDD R31 , Y + 12 + 1
0006a8 856e     +LDD R22 , Y + 12 + 2
0006a9 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0006aa 940e 0dfc 	CALL SUBOPT_0x28
0006ac 940e 0df7 	CALL SUBOPT_0x27
0006ae 940e 0dd7 	CALL SUBOPT_0x23
0006b0 f020      	BRLO _0x2000029
0006b1 940e 0ddf 	CALL SUBOPT_0x24
0006b3 940e 0de4 	CALL SUBOPT_0x25
                 _0x2000029:
                 _0x2000020:
0006b5 e010      	LDI  R17,LOW(0)
                 _0x200002A:
0006b6 85eb      	LDD  R30,Y+11
0006b7 17e1      	CP   R30,R17
0006b8 f198      	BRLO _0x200002C
                +
0006b9 81ac     +LDD R26 , Y + 4
0006ba 81bd     +LDD R27 , Y + 4 + 1
0006bb 818e     +LDD R24 , Y + 4 + 2
0006bc 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006bd 940e 0e03 	CALL SUBOPT_0x29
0006bf 940e 0dfc 	CALL SUBOPT_0x28
0006c1 940e 0e0a 	CALL SUBOPT_0x2A
0006c3 940e 0d02 	CALL SUBOPT_0x8
0006c5 940e 0d0c 	CALL SUBOPT_0xA
0006c7 940e 0ddf 	CALL SUBOPT_0x24
0006c9 940e 103f 	CALL __DIVF21
0006cb 940e 0f2e 	CALL __CFD1U
0006cd 2f0e      	MOV  R16,R30
0006ce 940e 0e0e 	CALL SUBOPT_0x2B
0006d0 940e 0e15 	CALL SUBOPT_0x2C
0006d2 27ff      	CLR  R31
0006d3 2766      	CLR  R22
0006d4 2777      	CLR  R23
0006d5 940e 0f67 	CALL __CDF1
                +
0006d7 81ac     +LDD R26 , Y + 4
0006d8 81bd     +LDD R27 , Y + 4 + 1
0006d9 818e     +LDD R24 , Y + 4 + 2
0006da 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0006db 940e 0ff1 	CALL __MULF12
0006dd 940e 0ddf 	CALL SUBOPT_0x24
0006df 940e 0d07 	CALL SUBOPT_0x9
0006e1 940e 0df7 	CALL SUBOPT_0x27
0006e3 2fe1      	MOV  R30,R17
0006e4 5f1f      	SUBI R17,-1
0006e5 30e0      	CPI  R30,0
0006e6 f679      	BRNE _0x200002A
0006e7 940e 0e0e 	CALL SUBOPT_0x2B
0006e9 e2ee      	LDI  R30,LOW(46)
0006ea 93ec      	ST   X,R30
0006eb cfca      	RJMP _0x200002A
                 _0x200002C:
0006ec 940e 0e1a 	CALL SUBOPT_0x2D
0006ee 9731      	SBIW R30,1
0006ef 85aa      	LDD  R26,Y+10
0006f0 83a0      	STD  Z+0,R26
0006f1 3030      	CPI  R19,0
0006f2 f42c      	BRGE _0x200002E
0006f3 9531      	NEG  R19
0006f4 85a8      	LDD  R26,Y+8
0006f5 85b9      	LDD  R27,Y+8+1
0006f6 e2ed      	LDI  R30,LOW(45)
0006f7 c003      	RJMP _0x200010E
                 _0x200002E:
0006f8 85a8      	LDD  R26,Y+8
0006f9 85b9      	LDD  R27,Y+8+1
0006fa e2eb      	LDI  R30,LOW(43)
                 _0x200010E:
0006fb 93ec      	ST   X,R30
0006fc 940e 0e1a 	CALL SUBOPT_0x2D
0006fe 940e 0e1a 	CALL SUBOPT_0x2D
000700 9731      	SBIW R30,1
000701 01bf      	MOVW R22,R30
000702 2fa3      	MOV  R26,R19
000703 e0ea      	LDI  R30,LOW(10)
000704 940e 10e5 	CALL __DIVB21
000706 5de0      	SUBI R30,-LOW(48)
000707 01db      	MOVW R26,R22
000708 93ec      	ST   X,R30
000709 940e 0e1a 	CALL SUBOPT_0x2D
00070b 9731      	SBIW R30,1
00070c 01bf      	MOVW R22,R30
00070d 2fa3      	MOV  R26,R19
00070e e0ea      	LDI  R30,LOW(10)
00070f 940e 110f 	CALL __MODB21
000711 5de0      	SUBI R30,-LOW(48)
000712 01db      	MOVW R26,R22
000713 93ec      	ST   X,R30
000714 85a8      	LDD  R26,Y+8
000715 85b9      	LDD  R27,Y+8+1
000716 e0e0      	LDI  R30,LOW(0)
000717 93ec      	ST   X,R30
                 _0x20A0009:
000718 940e 116f 	CALL __LOADLOCR4
                 _0x20A000A:
00071a 9660      	ADIW R28,16
00071b 9508      	RET
                 __print_G100:
00071c 97ef      	SBIW R28,63
00071d 9761      	SBIW R28,17
00071e 940e 1166 	CALL __SAVELOCR6
000720 e010      	LDI  R17,0
                +
000721 01fe     +MOVW R30 , R28
000722 5ae8     +SUBI R30 , LOW ( - 88 )
000723 4fff     +SBCI R31 , HIGH ( - 88 )
000724 9001     +LD R0 , Z +
000725 81f0     +LD R31 , Z
000726 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000727 87e8      	STD  Y+8,R30
000728 87f9      	STD  Y+8+1,R31
                +
000729 01fe     +MOVW R30 , R28
00072a 5aea     +SUBI R30 , LOW ( - 86 )
00072b 4fff     +SBCI R31 , HIGH ( - 86 )
00072c 9001     +LD R0 , Z +
00072d 81f0     +LD R31 , Z
00072e 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00072f 83ee      	STD  Y+6,R30
000730 83ff      	STD  Y+6+1,R31
000731 81ae      	LDD  R26,Y+6
000732 81bf      	LDD  R27,Y+6+1
000733 940e 0d23 	CALL SUBOPT_0xD
                 _0x2000030:
000735 01de      	MOVW R26,R28
000736 5aa4      	SUBI R26,LOW(-(92))
000737 4fbf      	SBCI R27,HIGH(-(92))
000738 940e 0d4e 	CALL SUBOPT_0x13
00073a 9731      	SBIW R30,1
00073b 91e4      	LPM  R30,Z
00073c 2f2e      	MOV  R18,R30
00073d 30e0      	CPI  R30,0
00073e f411      	BRNE PC+3
00073f 940c 092f 	JMP _0x2000032
000741 2fe1      	MOV  R30,R17
000742 30e0      	CPI  R30,0
000743 f439      	BRNE _0x2000036
000744 3225      	CPI  R18,37
000745 f411      	BRNE _0x2000037
000746 e011      	LDI  R17,LOW(1)
000747 c002      	RJMP _0x2000038
                 _0x2000037:
000748 940e 0e20 	CALL SUBOPT_0x2E
                 _0x2000038:
00074a c1e3      	RJMP _0x2000035
                 _0x2000036:
00074b 30e1      	CPI  R30,LOW(0x1)
00074c f4c1      	BRNE _0x2000039
00074d 3225      	CPI  R18,37
00074e f419      	BRNE _0x200003A
00074f 940e 0e20 	CALL SUBOPT_0x2E
000751 c1db      	RJMP _0x200010F
                 _0x200003A:
000752 e012      	LDI  R17,LOW(2)
000753 e0e0      	LDI  R30,LOW(0)
000754 8bed      	STD  Y+21,R30
000755 e000      	LDI  R16,LOW(0)
000756 322d      	CPI  R18,45
000757 f411      	BRNE _0x200003B
000758 e001      	LDI  R16,LOW(1)
000759 c1d4      	RJMP _0x2000035
                 _0x200003B:
00075a 322b      	CPI  R18,43
00075b f419      	BRNE _0x200003C
00075c e2eb      	LDI  R30,LOW(43)
00075d 8bed      	STD  Y+21,R30
00075e c1cf      	RJMP _0x2000035
                 _0x200003C:
00075f 3220      	CPI  R18,32
000760 f419      	BRNE _0x200003D
000761 e2e0      	LDI  R30,LOW(32)
000762 8bed      	STD  Y+21,R30
000763 c1ca      	RJMP _0x2000035
                 _0x200003D:
000764 c002      	RJMP _0x200003E
                 _0x2000039:
000765 30e2      	CPI  R30,LOW(0x2)
000766 f439      	BRNE _0x200003F
                 _0x200003E:
000767 e050      	LDI  R21,LOW(0)
000768 e013      	LDI  R17,LOW(3)
000769 3320      	CPI  R18,48
00076a f411      	BRNE _0x2000040
00076b 6800      	ORI  R16,LOW(128)
00076c c1c1      	RJMP _0x2000035
                 _0x2000040:
00076d c002      	RJMP _0x2000041
                 _0x200003F:
00076e 30e3      	CPI  R30,LOW(0x3)
00076f f491      	BRNE _0x2000042
                 _0x2000041:
000770 3320      	CPI  R18,48
000771 f010      	BRLO _0x2000044
000772 332a      	CPI  R18,58
000773 f008      	BRLO _0x2000045
                 _0x2000044:
000774 c007      	RJMP _0x2000043
                 _0x2000045:
000775 e0aa      	LDI  R26,LOW(10)
000776 9f5a      	MUL  R21,R26
000777 2d50      	MOV  R21,R0
000778 2fe2      	MOV  R30,R18
000779 53e0      	SUBI R30,LOW(48)
00077a 0f5e      	ADD  R21,R30
00077b c1b2      	RJMP _0x2000035
                 _0x2000043:
00077c e040      	LDI  R20,LOW(0)
00077d 322e      	CPI  R18,46
00077e f411      	BRNE _0x2000046
00077f e014      	LDI  R17,LOW(4)
000780 c1ad      	RJMP _0x2000035
                 _0x2000046:
000781 c00f      	RJMP _0x2000047
                 _0x2000042:
000782 30e4      	CPI  R30,LOW(0x4)
000783 f499      	BRNE _0x2000049
000784 3320      	CPI  R18,48
000785 f010      	BRLO _0x200004B
000786 332a      	CPI  R18,58
000787 f008      	BRLO _0x200004C
                 _0x200004B:
000788 c008      	RJMP _0x200004A
                 _0x200004C:
000789 6200      	ORI  R16,LOW(32)
00078a e0aa      	LDI  R26,LOW(10)
00078b 9f4a      	MUL  R20,R26
00078c 2d40      	MOV  R20,R0
00078d 2fe2      	MOV  R30,R18
00078e 53e0      	SUBI R30,LOW(48)
00078f 0f4e      	ADD  R20,R30
000790 c19d      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000791 362c      	CPI  R18,108
000792 f419      	BRNE _0x200004D
000793 6002      	ORI  R16,LOW(2)
000794 e015      	LDI  R17,LOW(5)
000795 c198      	RJMP _0x2000035
                 _0x200004D:
000796 c004      	RJMP _0x200004E
                 _0x2000049:
000797 30e5      	CPI  R30,LOW(0x5)
000798 f011      	BREQ PC+3
000799 940c 092e 	JMP _0x2000035
                 _0x200004E:
00079b 2fe2      	MOV  R30,R18
00079c 36e3      	CPI  R30,LOW(0x63)
00079d f459      	BRNE _0x2000053
00079e 940e 0e29 	CALL SUBOPT_0x2F
0007a0 940e 0e30 	CALL SUBOPT_0x30
0007a2 940e 0e29 	CALL SUBOPT_0x2F
0007a4 81a4      	LDD  R26,Z+4
0007a5 93aa      	ST   -Y,R26
0007a6 940e 0e37 	CALL SUBOPT_0x31
0007a8 c184      	RJMP _0x2000054
                 _0x2000053:
0007a9 34e5      	CPI  R30,LOW(0x45)
0007aa f011      	BREQ _0x2000057
0007ab 36e5      	CPI  R30,LOW(0x65)
0007ac f409      	BRNE _0x2000058
                 _0x2000057:
0007ad c004      	RJMP _0x2000059
                 _0x2000058:
0007ae 36e6      	CPI  R30,LOW(0x66)
0007af f011      	BREQ PC+3
0007b0 940c 07fc 	JMP _0x200005A
                 _0x2000059:
0007b2 01fe      	MOVW R30,R28
0007b3 9676      	ADIW R30,22
0007b4 87ee      	STD  Y+14,R30
0007b5 87ff      	STD  Y+14+1,R31
0007b6 940e 0e3f 	CALL SUBOPT_0x32
0007b8 940e 112f 	CALL __GETD1P
0007ba 940e 0e46 	CALL SUBOPT_0x33
0007bc 940e 0e4b 	CALL SUBOPT_0x34
0007be 85ad      	LDD  R26,Y+13
0007bf 23aa      	TST  R26
0007c0 f022      	BRMI _0x200005B
0007c1 89ad      	LDD  R26,Y+21
0007c2 32ab      	CPI  R26,LOW(0x2B)
0007c3 f049      	BREQ _0x200005D
0007c4 c017      	RJMP _0x200005E
                 _0x200005B:
0007c5 940e 0e4d 	CALL SUBOPT_0x35
0007c7 940e 0efb 	CALL __ANEGF1
0007c9 940e 0e46 	CALL SUBOPT_0x33
0007cb e2ed      	LDI  R30,LOW(45)
0007cc 8bed      	STD  Y+21,R30
                 _0x200005D:
0007cd ff07      	SBRS R16,7
0007ce c005      	RJMP _0x200005F
0007cf 89ed      	LDD  R30,Y+21
0007d0 93ea      	ST   -Y,R30
0007d1 940e 0e37 	CALL SUBOPT_0x31
0007d3 c008      	RJMP _0x2000060
                 _0x200005F:
0007d4 85ee      	LDD  R30,Y+14
0007d5 85ff      	LDD  R31,Y+14+1
0007d6 9631      	ADIW R30,1
0007d7 87ee      	STD  Y+14,R30
0007d8 87ff      	STD  Y+14+1,R31
0007d9 9731      	SBIW R30,1
0007da 89ad      	LDD  R26,Y+21
0007db 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
0007dc ff05      	SBRS R16,5
0007dd e046      	LDI  R20,LOW(6)
0007de 3626      	CPI  R18,102
0007df f461      	BRNE _0x2000062
0007e0 940e 0e4d 	CALL SUBOPT_0x35
0007e2 940e 114b 	CALL __PUTPARD1
0007e4 934a      	ST   -Y,R20
0007e5 89eb      	LDD  R30,Y+19
0007e6 89fc      	LDD  R31,Y+19+1
0007e7 93fa      	ST   -Y,R31
0007e8 93ea      	ST   -Y,R30
0007e9 940e 0c0f 	CALL _ftoa
0007eb c00b      	RJMP _0x2000063
                 _0x2000062:
0007ec 940e 0e4d 	CALL SUBOPT_0x35
0007ee 940e 114b 	CALL __PUTPARD1
0007f0 934a      	ST   -Y,R20
0007f1 932a      	ST   -Y,R18
0007f2 89ec      	LDD  R30,Y+20
0007f3 89fd      	LDD  R31,Y+20+1
0007f4 93fa      	ST   -Y,R31
0007f5 93ea      	ST   -Y,R30
0007f6 de53      	RCALL __ftoe_G100
                 _0x2000063:
0007f7 01fe      	MOVW R30,R28
0007f8 9676      	ADIW R30,22
0007f9 940e 0e52 	CALL SUBOPT_0x36
0007fb c01e      	RJMP _0x2000064
                 _0x200005A:
0007fc 37e3      	CPI  R30,LOW(0x73)
0007fd f439      	BRNE _0x2000066
0007fe 940e 0e4b 	CALL SUBOPT_0x34
000800 940e 0e5a 	CALL SUBOPT_0x37
000802 940e 0e52 	CALL SUBOPT_0x36
000804 c00e      	RJMP _0x2000067
                 _0x2000066:
000805 37e0      	CPI  R30,LOW(0x70)
000806 f4c1      	BRNE _0x2000069
000807 940e 0e4b 	CALL SUBOPT_0x34
000809 940e 0e5a 	CALL SUBOPT_0x37
00080b 87ee      	STD  Y+14,R30
00080c 87ff      	STD  Y+14+1,R31
00080d 93fa      	ST   -Y,R31
00080e 93ea      	ST   -Y,R30
00080f 940e 0c04 	CALL _strlenf
000811 2f1e      	MOV  R17,R30
000812 6008      	ORI  R16,LOW(8)
                 _0x2000067:
000813 770f      	ANDI R16,LOW(127)
000814 3040      	CPI  R20,0
000815 f011      	BREQ _0x200006B
000816 1741      	CP   R20,R17
000817 f008      	BRLO _0x200006C
                 _0x200006B:
000818 c001      	RJMP _0x200006A
                 _0x200006C:
000819 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
00081a e040      	LDI  R20,LOW(0)
00081b e0e0      	LDI  R30,LOW(0)
00081c 8bec      	STD  Y+20,R30
00081d e030      	LDI  R19,LOW(0)
00081e c06e      	RJMP _0x200006D
                 _0x2000069:
00081f 36e4      	CPI  R30,LOW(0x64)
000820 f011      	BREQ _0x2000070
000821 36e9      	CPI  R30,LOW(0x69)
000822 f411      	BRNE _0x2000071
                 _0x2000070:
000823 6004      	ORI  R16,LOW(4)
000824 c002      	RJMP _0x2000072
                 _0x2000071:
000825 37e5      	CPI  R30,LOW(0x75)
000826 f4a1      	BRNE _0x2000073
                 _0x2000072:
000827 e0ea      	LDI  R30,LOW(10)
000828 8bec      	STD  Y+20,R30
000829 ff01      	SBRS R16,1
00082a c008      	RJMP _0x2000074
                +
00082b e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00082c ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00082d e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00082e e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00082f 940e 0e5f 	CALL SUBOPT_0x38
000831 e01a      	LDI  R17,LOW(10)
000832 c023      	RJMP _0x2000075
                 _0x2000074:
                +
000833 e1e0     +LDI R30 , LOW ( 0x2710 )
000834 e2f7     +LDI R31 , HIGH ( 0x2710 )
000835 e060     +LDI R22 , BYTE3 ( 0x2710 )
000836 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000837 940e 0e5f 	CALL SUBOPT_0x38
000839 e015      	LDI  R17,LOW(5)
00083a c01b      	RJMP _0x2000075
                 _0x2000073:
00083b 35e8      	CPI  R30,LOW(0x58)
00083c f411      	BRNE _0x2000077
00083d 6008      	ORI  R16,LOW(8)
00083e c004      	RJMP _0x2000078
                 _0x2000077:
00083f 37e8      	CPI  R30,LOW(0x78)
000840 f011      	BREQ PC+3
000841 940c 092d 	JMP _0x20000B6
                 _0x2000078:
000843 e1e0      	LDI  R30,LOW(16)
000844 8bec      	STD  Y+20,R30
000845 ff01      	SBRS R16,1
000846 c008      	RJMP _0x200007A
                +
000847 e0e0     +LDI R30 , LOW ( 0x10000000 )
000848 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000849 e060     +LDI R22 , BYTE3 ( 0x10000000 )
00084a e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00084b 940e 0e5f 	CALL SUBOPT_0x38
00084d e018      	LDI  R17,LOW(8)
00084e c007      	RJMP _0x2000075
                 _0x200007A:
                +
00084f e0e0     +LDI R30 , LOW ( 0x1000 )
000850 e1f0     +LDI R31 , HIGH ( 0x1000 )
000851 e060     +LDI R22 , BYTE3 ( 0x1000 )
000852 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000853 940e 0e5f 	CALL SUBOPT_0x38
000855 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000856 3040      	CPI  R20,0
000857 f011      	BREQ _0x200007B
000858 770f      	ANDI R16,LOW(127)
000859 c001      	RJMP _0x200007C
                 _0x200007B:
00085a e041      	LDI  R20,LOW(1)
                 _0x200007C:
00085b ff01      	SBRS R16,1
00085c c008      	RJMP _0x200007D
00085d 940e 0e4b 	CALL SUBOPT_0x34
00085f 940e 0e3f 	CALL SUBOPT_0x32
000861 9614      	ADIW R26,4
000862 940e 112f 	CALL __GETD1P
000864 c00f      	RJMP _0x2000110
                 _0x200007D:
000865 ff02      	SBRS R16,2
000866 c007      	RJMP _0x200007F
000867 940e 0e4b 	CALL SUBOPT_0x34
000869 940e 0e5a 	CALL SUBOPT_0x37
00086b 940e 10bf 	CALL __CWD1
00086d c006      	RJMP _0x2000110
                 _0x200007F:
00086e 940e 0e4b 	CALL SUBOPT_0x34
000870 940e 0e5a 	CALL SUBOPT_0x37
000872 2766      	CLR  R22
000873 2777      	CLR  R23
                 _0x2000110:
                +
000874 87ea     +STD Y + 10 , R30
000875 87fb     +STD Y + 10 + 1 , R31
000876 876c     +STD Y + 10 + 2 , R22
000877 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000878 ff02      	SBRS R16,2
000879 c012      	RJMP _0x2000081
00087a 85ad      	LDD  R26,Y+13
00087b 23aa      	TST  R26
00087c f442      	BRPL _0x2000082
00087d 940e 0e4d 	CALL SUBOPT_0x35
00087f 940e 10ac 	CALL __ANEGD1
000881 940e 0e46 	CALL SUBOPT_0x33
000883 e2ed      	LDI  R30,LOW(45)
000884 8bed      	STD  Y+21,R30
                 _0x2000082:
000885 89ed      	LDD  R30,Y+21
000886 30e0      	CPI  R30,0
000887 f019      	BREQ _0x2000083
000888 5f1f      	SUBI R17,-LOW(1)
000889 5f4f      	SUBI R20,-LOW(1)
00088a c001      	RJMP _0x2000084
                 _0x2000083:
00088b 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
00088c 2f34      	MOV  R19,R20
                 _0x200006D:
00088d fd00      	SBRC R16,0
00088e c014      	RJMP _0x2000085
                 _0x2000086:
00088f 1715      	CP   R17,R21
000890 f410      	BRSH _0x2000089
000891 1735      	CP   R19,R21
000892 f008      	BRLO _0x200008A
                 _0x2000089:
000893 c00f      	RJMP _0x2000088
                 _0x200008A:
000894 ff07      	SBRS R16,7
000895 c008      	RJMP _0x200008B
000896 ff02      	SBRS R16,2
000897 c004      	RJMP _0x200008C
000898 7f0b      	ANDI R16,LOW(251)
000899 892d      	LDD  R18,Y+21
00089a 5011      	SUBI R17,LOW(1)
00089b c001      	RJMP _0x200008D
                 _0x200008C:
00089c e320      	LDI  R18,LOW(48)
                 _0x200008D:
00089d c001      	RJMP _0x200008E
                 _0x200008B:
00089e e220      	LDI  R18,LOW(32)
                 _0x200008E:
00089f 940e 0e20 	CALL SUBOPT_0x2E
0008a1 5051      	SUBI R21,LOW(1)
0008a2 cfec      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0008a3 1714      	CP   R17,R20
0008a4 f490      	BRSH _0x2000091
0008a5 6100      	ORI  R16,LOW(16)
0008a6 ff02      	SBRS R16,2
0008a7 c006      	RJMP _0x2000092
0008a8 940e 0e64 	CALL SUBOPT_0x39
0008aa f009      	BREQ _0x2000093
0008ab 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0008ac 5011      	SUBI R17,LOW(1)
0008ad 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0008ae e3e0      	LDI  R30,LOW(48)
0008af 93ea      	ST   -Y,R30
0008b0 940e 0e37 	CALL SUBOPT_0x31
0008b2 3050      	CPI  R21,0
0008b3 f009      	BREQ _0x2000094
0008b4 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0008b5 5041      	SUBI R20,LOW(1)
0008b6 cfec      	RJMP _0x200008F
                 _0x2000091:
0008b7 2f31      	MOV  R19,R17
0008b8 89ec      	LDD  R30,Y+20
0008b9 30e0      	CPI  R30,0
0008ba f4b9      	BRNE _0x2000095
                 _0x2000096:
0008bb 3030      	CPI  R19,0
0008bc f0a1      	BREQ _0x2000098
0008bd ff03      	SBRS R16,3
0008be c006      	RJMP _0x2000099
0008bf 85ee      	LDD  R30,Y+14
0008c0 85ff      	LDD  R31,Y+14+1
0008c1 9125      	LPM  R18,Z+
0008c2 87ee      	STD  Y+14,R30
0008c3 87ff      	STD  Y+14+1,R31
0008c4 c005      	RJMP _0x200009A
                 _0x2000099:
0008c5 85ae      	LDD  R26,Y+14
0008c6 85bf      	LDD  R27,Y+14+1
0008c7 912d      	LD   R18,X+
0008c8 87ae      	STD  Y+14,R26
0008c9 87bf      	STD  Y+14+1,R27
                 _0x200009A:
0008ca 940e 0e20 	CALL SUBOPT_0x2E
0008cc 3050      	CPI  R21,0
0008cd f009      	BREQ _0x200009B
0008ce 5051      	SUBI R21,LOW(1)
                 _0x200009B:
0008cf 5031      	SUBI R19,LOW(1)
0008d0 cfea      	RJMP _0x2000096
                 _0x2000098:
0008d1 c051      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
0008d2 940e 0e78 	CALL SUBOPT_0x3A
0008d4 940e 10ea 	CALL __DIVD21U
0008d6 2f2e      	MOV  R18,R30
0008d7 302a      	CPI  R18,10
0008d8 f030      	BRLO _0x20000A0
0008d9 ff03      	SBRS R16,3
0008da c002      	RJMP _0x20000A1
0008db 5c29      	SUBI R18,-LOW(55)
0008dc c001      	RJMP _0x20000A2
                 _0x20000A1:
0008dd 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
0008de c001      	RJMP _0x20000A3
                 _0x20000A0:
0008df 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
0008e0 fd04      	SBRC R16,4
0008e1 c021      	RJMP _0x20000A5
0008e2 3321      	CPI  R18,49
0008e3 f460      	BRSH _0x20000A7
                +
0008e4 89a8     +LDD R26 , Y + 16
0008e5 89b9     +LDD R27 , Y + 16 + 1
0008e6 898a     +LDD R24 , Y + 16 + 2
0008e7 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0008e8 30a1     +CPI R26 , LOW ( 0x1 )
0008e9 e0e0     +LDI R30 , HIGH ( 0x1 )
0008ea 07be     +CPC R27 , R30
0008eb e0e0     +LDI R30 , BYTE3 ( 0x1 )
0008ec 078e     +CPC R24 , R30
0008ed e0e0     +LDI R30 , BYTE4 ( 0x1 )
0008ee 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0008ef f409      	BRNE _0x20000A6
                 _0x20000A7:
0008f0 c00b      	RJMP _0x20000A9
                 _0x20000A6:
0008f1 1743      	CP   R20,R19
0008f2 f440      	BRSH _0x2000111
0008f3 1753      	CP   R21,R19
0008f4 f010      	BRLO _0x20000AC
0008f5 ff00      	SBRS R16,0
0008f6 c001      	RJMP _0x20000AD
                 _0x20000AC:
0008f7 c010      	RJMP _0x20000AB
                 _0x20000AD:
0008f8 e220      	LDI  R18,LOW(32)
0008f9 ff07      	SBRS R16,7
0008fa c008      	RJMP _0x20000AE
                 _0x2000111:
0008fb e320      	LDI  R18,LOW(48)
                 _0x20000A9:
0008fc 6100      	ORI  R16,LOW(16)
0008fd ff02      	SBRS R16,2
0008fe c004      	RJMP _0x20000AF
0008ff 940e 0e64 	CALL SUBOPT_0x39
000901 f009      	BREQ _0x20000B0
000902 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000903 940e 0e20 	CALL SUBOPT_0x2E
000905 3050      	CPI  R21,0
000906 f009      	BREQ _0x20000B1
000907 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000908 5031      	SUBI R19,LOW(1)
000909 940e 0e78 	CALL SUBOPT_0x3A
00090b 940e 111b 	CALL __MODD21U
00090d 940e 0e46 	CALL SUBOPT_0x33
00090f 89ec      	LDD  R30,Y+20
                +
000910 89a8     +LDD R26 , Y + 16
000911 89b9     +LDD R27 , Y + 16 + 1
000912 898a     +LDD R24 , Y + 16 + 2
000913 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000914 27ff      	CLR  R31
000915 2766      	CLR  R22
000916 2777      	CLR  R23
000917 940e 10ea 	CALL __DIVD21U
000919 940e 0e5f 	CALL SUBOPT_0x38
                +
00091b 89e8     +LDD R30 , Y + 16
00091c 89f9     +LDD R31 , Y + 16 + 1
00091d 896a     +LDD R22 , Y + 16 + 2
00091e 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00091f 940e 1162 	CALL __CPD10
000921 f009      	BREQ _0x200009F
000922 cfaf      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000923 ff00      	SBRS R16,0
000924 c008      	RJMP _0x20000B2
                 _0x20000B3:
000925 3050      	CPI  R21,0
000926 f031      	BREQ _0x20000B5
000927 5051      	SUBI R21,LOW(1)
000928 e2e0      	LDI  R30,LOW(32)
000929 93ea      	ST   -Y,R30
00092a 940e 0e37 	CALL SUBOPT_0x31
00092c cff8      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010F:
00092d e010      	LDI  R17,LOW(0)
                 _0x2000035:
00092e ce06      	RJMP _0x2000030
                 _0x2000032:
00092f 81ae      	LDD  R26,Y+6
000930 81bf      	LDD  R27,Y+6+1
000931 940e 112b 	CALL __GETW1P
000933 940e 116d 	CALL __LOADLOCR6
000935 96ef      	ADIW R28,63
000936 966f      	ADIW R28,31
000937 9508      	RET
                 _sprintf:
000938 92ff      	PUSH R15
000939 2ef8      	MOV  R15,R24
00093a 9726      	SBIW R28,6
00093b 940e 1168 	CALL __SAVELOCR4
00093d 940e 0e81 	CALL SUBOPT_0x3B
00093f 9730      	SBIW R30,0
000940 f419      	BRNE _0x20000B7
000941 efef      	LDI  R30,LOW(65535)
000942 efff      	LDI  R31,HIGH(65535)
000943 c023      	RJMP _0x20A0008
                 _0x20000B7:
000944 01de      	MOVW R26,R28
000945 9616      	ADIW R26,6
000946 940e 10a4 	CALL __ADDW2R15
000948 018d      	MOVW R16,R26
000949 940e 0e81 	CALL SUBOPT_0x3B
00094b 83ee      	STD  Y+6,R30
00094c 83ff      	STD  Y+6+1,R31
00094d e0e0      	LDI  R30,LOW(0)
00094e 87e8      	STD  Y+8,R30
00094f 87e9      	STD  Y+8+1,R30
000950 01de      	MOVW R26,R28
000951 961a      	ADIW R26,10
000952 940e 0e88 	CALL SUBOPT_0x3C
000954 93fa      	ST   -Y,R31
000955 93ea      	ST   -Y,R30
000956 931a      	ST   -Y,R17
000957 930a      	ST   -Y,R16
000958 e1e3      	LDI  R30,LOW(_put_buff_G100)
000959 e0f6      	LDI  R31,HIGH(_put_buff_G100)
00095a 93fa      	ST   -Y,R31
00095b 93ea      	ST   -Y,R30
00095c 01fe      	MOVW R30,R28
00095d 963a      	ADIW R30,10
00095e 93fa      	ST   -Y,R31
00095f 93ea      	ST   -Y,R30
000960 ddbb      	RCALL __print_G100
000961 019f      	MOVW R18,R30
000962 81ae      	LDD  R26,Y+6
000963 81bf      	LDD  R27,Y+6+1
000964 e0e0      	LDI  R30,LOW(0)
000965 93ec      	ST   X,R30
000966 01f9      	MOVW R30,R18
                 _0x20A0008:
000967 940e 116f 	CALL __LOADLOCR4
000969 962a      	ADIW R28,10
00096a 90ff      	POP  R15
00096b 9508      	RET
                 _get_buff_G100:
00096c 931a      	ST   -Y,R17
00096d 81a9      	LDD  R26,Y+1
00096e 81ba      	LDD  R27,Y+1+1
00096f e0e0      	LDI  R30,LOW(0)
000970 93ec      	ST   X,R30
000971 81ab      	LDD  R26,Y+3
000972 81bc      	LDD  R27,Y+3+1
000973 91ec      	LD   R30,X
000974 2f1e      	MOV  R17,R30
000975 30e0      	CPI  R30,0
000976 f019      	BREQ _0x20000BF
000977 e0e0      	LDI  R30,LOW(0)
000978 93ec      	ST   X,R30
000979 c016      	RJMP _0x20000C0
                 _0x20000BF:
00097a 81a9      	LDD  R26,Y+1
00097b 81ba      	LDD  R27,Y+1+1
00097c 9611      	ADIW R26,1
00097d 940e 112b 	CALL __GETW1P
00097f 9730      	SBIW R30,0
000980 f071      	BREQ _0x20000C1
000981 81e9      	LDD  R30,Y+1
000982 81fa      	LDD  R31,Y+1+1
000983 81a1      	LDD  R26,Z+1
000984 81b2      	LDD  R27,Z+2
000985 91ec      	LD   R30,X
000986 2f1e      	MOV  R17,R30
000987 30e0      	CPI  R30,0
000988 f029      	BREQ _0x20000C2
000989 81a9      	LDD  R26,Y+1
00098a 81ba      	LDD  R27,Y+1+1
00098b 9611      	ADIW R26,1
00098c 940e 0d4e 	CALL SUBOPT_0x13
                 _0x20000C2:
00098e c001      	RJMP _0x20000C3
                 _0x20000C1:
00098f e010      	LDI  R17,LOW(0)
                 _0x20000C3:
                 _0x20000C0:
000990 2fe1      	MOV  R30,R17
000991 8118      	LDD  R17,Y+0
                 _0x20A0007:
000992 9625      	ADIW R28,5
000993 9508      	RET
                 __scanf_G100:
000994 9725      	SBIW R28,5
000995 940e 1166 	CALL __SAVELOCR6
000997 e0e0      	LDI  R30,LOW(0)
000998 e0f0      	LDI  R31,HIGH(0)
000999 87e8      	STD  Y+8,R30
00099a 87f9      	STD  Y+8+1,R31
00099b 2f4e      	MOV  R20,R30
                 _0x20000C4:
00099c 89e9      	LDD  R30,Y+17
00099d 89fa      	LDD  R31,Y+17+1
00099e 9631      	ADIW R30,1
00099f 8be9      	STD  Y+17,R30
0009a0 8bfa      	STD  Y+17+1,R31
0009a1 9731      	SBIW R30,1
0009a2 91e4      	LPM  R30,Z
0009a3 2f3e      	MOV  R19,R30
0009a4 30e0      	CPI  R30,0
0009a5 f411      	BRNE PC+3
0009a6 940c 0ac1 	JMP _0x20000C6
0009a8 940e 0e8d 	CALL SUBOPT_0x3D
0009aa f0c1      	BREQ _0x20000C7
                 _0x20000C8:
0009ab b7ed      	IN   R30,SPL
0009ac b7fe      	IN   R31,SPH
0009ad 93fa      	ST   -Y,R31
0009ae 93ea      	ST   -Y,R30
0009af 934f      	PUSH R20
0009b0 940e 0e92 	CALL SUBOPT_0x3E
0009b2 914f      	POP  R20
0009b3 2f3e      	MOV  R19,R30
0009b4 30e0      	CPI  R30,0
0009b5 f019      	BREQ _0x20000CB
0009b6 940e 0e8d 	CALL SUBOPT_0x3D
0009b8 f409      	BRNE _0x20000CC
                 _0x20000CB:
0009b9 c007      	RJMP _0x20000CA
                 _0x20000CC:
0009ba 940e 0e9a 	CALL SUBOPT_0x3F
0009bc f41c      	BRGE _0x20000CD
0009bd efef      	LDI  R30,LOW(65535)
0009be efff      	LDI  R31,HIGH(65535)
0009bf c103      	RJMP _0x20A0005
                 _0x20000CD:
0009c0 cfea      	RJMP _0x20000C8
                 _0x20000CA:
0009c1 2f43      	MOV  R20,R19
0009c2 c0fd      	RJMP _0x20000CE
                 _0x20000C7:
0009c3 3235      	CPI  R19,37
0009c4 f011      	BREQ PC+3
0009c5 940c 0aa8 	JMP _0x20000CF
0009c7 e050      	LDI  R21,LOW(0)
                 _0x20000D0:
0009c8 89e9      	LDD  R30,Y+17
0009c9 89fa      	LDD  R31,Y+17+1
0009ca 9135      	LPM  R19,Z+
0009cb 8be9      	STD  Y+17,R30
0009cc 8bfa      	STD  Y+17+1,R31
0009cd 3330      	CPI  R19,48
0009ce f010      	BRLO _0x20000D4
0009cf 333a      	CPI  R19,58
0009d0 f008      	BRLO _0x20000D3
                 _0x20000D4:
0009d1 c007      	RJMP _0x20000D2
                 _0x20000D3:
0009d2 e0aa      	LDI  R26,LOW(10)
0009d3 9f5a      	MUL  R21,R26
0009d4 2d50      	MOV  R21,R0
0009d5 2fe3      	MOV  R30,R19
0009d6 53e0      	SUBI R30,LOW(48)
0009d7 0f5e      	ADD  R21,R30
0009d8 cfef      	RJMP _0x20000D0
                 _0x20000D2:
0009d9 3030      	CPI  R19,0
0009da f409      	BRNE _0x20000D6
0009db c0e5      	RJMP _0x20000C6
                 _0x20000D6:
                 _0x20000D7:
0009dc b7ed      	IN   R30,SPL
0009dd b7fe      	IN   R31,SPH
0009de 93fa      	ST   -Y,R31
0009df 93ea      	ST   -Y,R30
0009e0 934f      	PUSH R20
0009e1 940e 0e92 	CALL SUBOPT_0x3E
0009e3 914f      	POP  R20
0009e4 2f2e      	MOV  R18,R30
0009e5 93ea      	ST   -Y,R30
0009e6 940e 0bd7 	CALL _isspace
0009e8 30e0      	CPI  R30,0
0009e9 f039      	BREQ _0x20000D9
0009ea 940e 0e9a 	CALL SUBOPT_0x3F
0009ec f41c      	BRGE _0x20000DA
0009ed efef      	LDI  R30,LOW(65535)
0009ee efff      	LDI  R31,HIGH(65535)
0009ef c0d3      	RJMP _0x20A0005
                 _0x20000DA:
0009f0 cfeb      	RJMP _0x20000D7
                 _0x20000D9:
0009f1 3020      	CPI  R18,0
0009f2 f409      	BRNE _0x20000DB
0009f3 c0c4      	RJMP _0x20000DC
                 _0x20000DB:
0009f4 2f42      	MOV  R20,R18
0009f5 3050      	CPI  R21,0
0009f6 f409      	BRNE _0x20000DD
0009f7 ef5f      	LDI  R21,LOW(255)
                 _0x20000DD:
0009f8 2fe3      	MOV  R30,R19
0009f9 36e3      	CPI  R30,LOW(0x63)
0009fa f499      	BRNE _0x20000E1
0009fb 940e 0e9f 	CALL SUBOPT_0x40
0009fd b7ed      	IN   R30,SPL
0009fe b7fe      	IN   R31,SPH
0009ff 93fa      	ST   -Y,R31
000a00 93ea      	ST   -Y,R30
000a01 934f      	PUSH R20
000a02 940e 0e92 	CALL SUBOPT_0x3E
000a04 914f      	POP  R20
000a05 01d8      	MOVW R26,R16
000a06 93ec      	ST   X,R30
000a07 940e 0e9a 	CALL SUBOPT_0x3F
000a09 f41c      	BRGE _0x20000E2
000a0a efef      	LDI  R30,LOW(65535)
000a0b efff      	LDI  R31,HIGH(65535)
000a0c c0b6      	RJMP _0x20A0005
                 _0x20000E2:
000a0d c097      	RJMP _0x20000E0
                 _0x20000E1:
000a0e 37e3      	CPI  R30,LOW(0x73)
000a0f f541      	BRNE _0x20000EB
000a10 940e 0e9f 	CALL SUBOPT_0x40
                 _0x20000E4:
000a12 2fe5      	MOV  R30,R21
000a13 5051      	SUBI R21,1
000a14 30e0      	CPI  R30,0
000a15 f0f1      	BREQ _0x20000E6
000a16 b7ed      	IN   R30,SPL
000a17 b7fe      	IN   R31,SPH
000a18 93fa      	ST   -Y,R31
000a19 93ea      	ST   -Y,R30
000a1a 934f      	PUSH R20
000a1b 940e 0e92 	CALL SUBOPT_0x3E
000a1d 914f      	POP  R20
000a1e 2f3e      	MOV  R19,R30
000a1f 30e0      	CPI  R30,0
000a20 f019      	BREQ _0x20000E8
000a21 940e 0e8d 	CALL SUBOPT_0x3D
000a23 f039      	BREQ _0x20000E7
                 _0x20000E8:
000a24 940e 0e9a 	CALL SUBOPT_0x3F
000a26 f41c      	BRGE _0x20000EA
000a27 efef      	LDI  R30,LOW(65535)
000a28 efff      	LDI  R31,HIGH(65535)
000a29 c099      	RJMP _0x20A0005
                 _0x20000EA:
000a2a c009      	RJMP _0x20000E6
                 _0x20000E7:
000a2b 931f      	PUSH R17
000a2c 930f      	PUSH R16
                +
000a2d 5f0f     +SUBI R16 , LOW ( - 1 )
000a2e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a2f 2fe3      	MOV  R30,R19
000a30 91af      	POP  R26
000a31 91bf      	POP  R27
000a32 93ec      	ST   X,R30
000a33 cfde      	RJMP _0x20000E4
                 _0x20000E6:
000a34 01d8      	MOVW R26,R16
000a35 e0e0      	LDI  R30,LOW(0)
000a36 93ec      	ST   X,R30
000a37 c06d      	RJMP _0x20000E0
                 _0x20000EB:
000a38 e0e1      	LDI  R30,LOW(1)
000a39 87ea      	STD  Y+10,R30
000a3a 2fe3      	MOV  R30,R19
000a3b 36e4      	CPI  R30,LOW(0x64)
000a3c f011      	BREQ _0x20000F0
000a3d 36e9      	CPI  R30,LOW(0x69)
000a3e f419      	BRNE _0x20000F1
                 _0x20000F0:
000a3f e0e0      	LDI  R30,LOW(0)
000a40 87ea      	STD  Y+10,R30
000a41 c002      	RJMP _0x20000F2
                 _0x20000F1:
000a42 37e5      	CPI  R30,LOW(0x75)
000a43 f411      	BRNE _0x20000F3
                 _0x20000F2:
000a44 e02a      	LDI  R18,LOW(10)
000a45 c008      	RJMP _0x20000EE
                 _0x20000F3:
000a46 37e8      	CPI  R30,LOW(0x78)
000a47 f411      	BRNE _0x20000F4
000a48 e120      	LDI  R18,LOW(16)
000a49 c004      	RJMP _0x20000EE
                 _0x20000F4:
000a4a 32e5      	CPI  R30,LOW(0x25)
000a4b f409      	BRNE _0x20000F7
000a4c c05b      	RJMP _0x20000F6
                 _0x20000F7:
000a4d c073      	RJMP _0x20A0006
                 _0x20000EE:
000a4e e0e0      	LDI  R30,LOW(0)
000a4f 83ee      	STD  Y+6,R30
000a50 83ef      	STD  Y+6+1,R30
                 _0x20000F8:
000a51 2fe5      	MOV  R30,R21
000a52 5051      	SUBI R21,1
000a53 30e0      	CPI  R30,0
000a54 f411      	BRNE PC+3
000a55 940c 0a98 	JMP _0x20000FA
000a57 b7ed      	IN   R30,SPL
000a58 b7fe      	IN   R31,SPH
000a59 93fa      	ST   -Y,R31
000a5a 93ea      	ST   -Y,R30
000a5b 934f      	PUSH R20
000a5c 940e 0e92 	CALL SUBOPT_0x3E
000a5e 914f      	POP  R20
000a5f 2f3e      	MOV  R19,R30
000a60 32e1      	CPI  R30,LOW(0x21)
000a61 f438      	BRSH _0x20000FB
000a62 940e 0e9a 	CALL SUBOPT_0x3F
000a64 f41c      	BRGE _0x20000FC
000a65 efef      	LDI  R30,LOW(65535)
000a66 efff      	LDI  R31,HIGH(65535)
000a67 c05b      	RJMP _0x20A0005
                 _0x20000FC:
000a68 c017      	RJMP _0x20000FD
                 _0x20000FB:
000a69 85ea      	LDD  R30,Y+10
000a6a 30e0      	CPI  R30,0
000a6b f439      	BRNE _0x20000FE
000a6c 323d      	CPI  R19,45
000a6d f419      	BRNE _0x20000FF
000a6e efef      	LDI  R30,LOW(255)
000a6f 87ea      	STD  Y+10,R30
000a70 cfe0      	RJMP _0x20000F8
                 _0x20000FF:
000a71 e0e1      	LDI  R30,LOW(1)
000a72 87ea      	STD  Y+10,R30
                 _0x20000FE:
000a73 3120      	CPI  R18,16
000a74 f431      	BRNE _0x2000101
000a75 933a      	ST   -Y,R19
000a76 940e 0be1 	CALL _isxdigit
000a78 30e0      	CPI  R30,0
000a79 f031      	BREQ _0x20000FD
000a7a c007      	RJMP _0x2000103
                 _0x2000101:
000a7b 933a      	ST   -Y,R19
000a7c 940e 0bcf 	CALL _isdigit
000a7e 30e0      	CPI  R30,0
000a7f f411      	BRNE _0x2000104
                 _0x20000FD:
000a80 2f43      	MOV  R20,R19
000a81 c016      	RJMP _0x20000FA
                 _0x2000104:
                 _0x2000103:
000a82 3631      	CPI  R19,97
000a83 f010      	BRLO _0x2000105
000a84 5537      	SUBI R19,LOW(87)
000a85 c005      	RJMP _0x2000106
                 _0x2000105:
000a86 3431      	CPI  R19,65
000a87 f010      	BRLO _0x2000107
000a88 5337      	SUBI R19,LOW(55)
000a89 c001      	RJMP _0x2000108
                 _0x2000107:
000a8a 5330      	SUBI R19,LOW(48)
                 _0x2000108:
                 _0x2000106:
000a8b 2fe2      	MOV  R30,R18
000a8c 81ae      	LDD  R26,Y+6
000a8d 81bf      	LDD  R27,Y+6+1
000a8e e0f0      	LDI  R31,0
000a8f 940e 10c9 	CALL __MULW12U
000a91 01df      	MOVW R26,R30
000a92 2fe3      	MOV  R30,R19
000a93 940e 0d3a 	CALL SUBOPT_0x10
000a95 83ee      	STD  Y+6,R30
000a96 83ff      	STD  Y+6+1,R31
000a97 cfb9      	RJMP _0x20000F8
                 _0x20000FA:
000a98 940e 0e9f 	CALL SUBOPT_0x40
000a9a 85ea      	LDD  R30,Y+10
000a9b 81ae      	LDD  R26,Y+6
000a9c 81bf      	LDD  R27,Y+6+1
000a9d e0f0      	LDI  R31,0
000a9e fde7      	SBRC R30,7
000a9f efff      	SER  R31
000aa0 940e 10c9 	CALL __MULW12U
000aa2 01d8      	MOVW R26,R16
000aa3 93ed      	ST   X+,R30
000aa4 93fc      	ST   X,R31
                 _0x20000E0:
000aa5 940e 0e1a 	CALL SUBOPT_0x2D
000aa7 c018      	RJMP _0x2000109
                 _0x20000CF:
                 _0x20000F6:
000aa8 b7ed      	IN   R30,SPL
000aa9 b7fe      	IN   R31,SPH
000aaa 93fa      	ST   -Y,R31
000aab 93ea      	ST   -Y,R30
000aac 934f      	PUSH R20
000aad 940e 0e92 	CALL SUBOPT_0x3E
000aaf 914f      	POP  R20
000ab0 17e3      	CP   R30,R19
000ab1 f071      	BREQ _0x200010A
000ab2 940e 0e9a 	CALL SUBOPT_0x3F
000ab4 f41c      	BRGE _0x200010B
000ab5 efef      	LDI  R30,LOW(65535)
000ab6 efff      	LDI  R31,HIGH(65535)
000ab7 c00b      	RJMP _0x20A0005
                 _0x200010B:
                 _0x20000DC:
000ab8 85e8      	LDD  R30,Y+8
000ab9 85f9      	LDD  R31,Y+8+1
000aba 9730      	SBIW R30,0
000abb f419      	BRNE _0x200010C
000abc efef      	LDI  R30,LOW(65535)
000abd efff      	LDI  R31,HIGH(65535)
000abe c004      	RJMP _0x20A0005
                 _0x200010C:
000abf c001      	RJMP _0x20000C6
                 _0x200010A:
                 _0x2000109:
                 _0x20000CE:
000ac0 cedb      	RJMP _0x20000C4
                 _0x20000C6:
                 _0x20A0006:
000ac1 85e8      	LDD  R30,Y+8
000ac2 85f9      	LDD  R31,Y+8+1
                 _0x20A0005:
000ac3 940e 116d 	CALL __LOADLOCR6
000ac5 9663      	ADIW R28,19
000ac6 9508      	RET
                 _sscanf:
000ac7 92ff      	PUSH R15
000ac8 2ef8      	MOV  R15,R24
000ac9 9723      	SBIW R28,3
000aca 931a      	ST   -Y,R17
000acb 930a      	ST   -Y,R16
000acc 01de      	MOVW R26,R28
000acd 9617      	ADIW R26,7
000ace 940e 0e88 	CALL SUBOPT_0x3C
000ad0 9730      	SBIW R30,0
000ad1 f419      	BRNE _0x200010D
000ad2 efef      	LDI  R30,LOW(65535)
000ad3 efff      	LDI  R31,HIGH(65535)
000ad4 c01c      	RJMP _0x20A0004
                 _0x200010D:
000ad5 01de      	MOVW R26,R28
000ad6 9611      	ADIW R26,1
000ad7 940e 10a4 	CALL __ADDW2R15
000ad9 018d      	MOVW R16,R26
000ada 01de      	MOVW R26,R28
000adb 9617      	ADIW R26,7
000adc 940e 0e88 	CALL SUBOPT_0x3C
000ade 83eb      	STD  Y+3,R30
000adf 83fc      	STD  Y+3+1,R31
000ae0 01de      	MOVW R26,R28
000ae1 9615      	ADIW R26,5
000ae2 940e 0e88 	CALL SUBOPT_0x3C
000ae4 93fa      	ST   -Y,R31
000ae5 93ea      	ST   -Y,R30
000ae6 931a      	ST   -Y,R17
000ae7 930a      	ST   -Y,R16
000ae8 e6ec      	LDI  R30,LOW(_get_buff_G100)
000ae9 e0f9      	LDI  R31,HIGH(_get_buff_G100)
000aea 93fa      	ST   -Y,R31
000aeb 93ea      	ST   -Y,R30
000aec 01fe      	MOVW R30,R28
000aed 9638      	ADIW R30,8
000aee 93fa      	ST   -Y,R31
000aef 93ea      	ST   -Y,R30
000af0 dea3      	RCALL __scanf_G100
                 _0x20A0004:
000af1 8119      	LDD  R17,Y+1
000af2 8108      	LDD  R16,Y+0
000af3 9625      	ADIW R28,5
000af4 90ff      	POP  R15
000af5 9508      	RET
                 
                 	.CSEG
                 _ftrunc:
000af6 817b         ldd  r23,y+3
000af7 816a         ldd  r22,y+2
000af8 81f9         ldd  r31,y+1
000af9 81e8         ld   r30,y
000afa fb77         bst  r23,7
000afb 0f77         lsl  r23
000afc fd67         sbrc r22,7
000afd 6071         sbr  r23,1
000afe 2f97         mov  r25,r23
000aff 579e         subi r25,0x7e
000b00 f081         breq __ftrunc0
000b01 f078         brcs __ftrunc0
000b02 3198         cpi  r25,24
000b03 f490         brsh __ftrunc1
000b04 27aa         clr  r26
000b05 27bb         clr  r27
000b06 2788         clr  r24
                 __ftrunc2:
000b07 9408         sec
000b08 9587         ror  r24
000b09 95b7         ror  r27
000b0a 95a7         ror  r26
000b0b 959a         dec  r25
000b0c f7d1         brne __ftrunc2
000b0d 23ea         and  r30,r26
000b0e 23fb         and  r31,r27
000b0f 2368         and  r22,r24
000b10 c005         rjmp __ftrunc1
                 __ftrunc0:
000b11 94e8         clt
000b12 2777         clr  r23
000b13 27ee         clr  r30
000b14 27ff         clr  r31
000b15 2766         clr  r22
                 __ftrunc1:
000b16 776f         cbr  r22,0x80
000b17 9576         lsr  r23
000b18 f408         brcc __ftrunc3
000b19 6860         sbr  r22,0x80
                 __ftrunc3:
000b1a f977         bld  r23,7
000b1b 91a9         ld   r26,y+
000b1c 91b9         ld   r27,y+
000b1d 9189         ld   r24,y+
000b1e 9199         ld   r25,y+
000b1f 17ea         cp   r30,r26
000b20 07fb         cpc  r31,r27
000b21 0768         cpc  r22,r24
000b22 0779         cpc  r23,r25
000b23 fb97         bst  r25,7
000b24 9508         ret
                 _floor:
000b25 940e 0d20 	CALL SUBOPT_0xC
000b27 940e 114b 	CALL __PUTPARD1
000b29 940e 0af6 	CALL _ftrunc
000b2b 940e 1144 	CALL __PUTD1S0
000b2d f419          brne __floor1
                 __floor0:
000b2e 940e 0d20 	CALL SUBOPT_0xC
000b30 c09c      	RJMP _0x20A0003
                 __floor1:
000b31 f7e6          brtc __floor0
000b32 940e 0d20 	CALL SUBOPT_0xC
                +
000b34 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000b35 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000b36 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000b37 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000b38 940e 0f9a 	CALL __SUBF12
000b3a c092      	RJMP _0x20A0003
                 _sin:
000b3b 9724      	SBIW R28,4
000b3c 931a      	ST   -Y,R17
000b3d e010      	LDI  R17,0
000b3e 940e 0eaa 	CALL SUBOPT_0x41
                +
000b40 e8e3     +LDI R30 , LOW ( 0x3E22F983 )
000b41 eff9     +LDI R31 , HIGH ( 0x3E22F983 )
000b42 e262     +LDI R22 , BYTE3 ( 0x3E22F983 )
000b43 e37e     +LDI R23 , BYTE4 ( 0x3E22F983 )
                 	__GETD1N 0x3E22F983
000b44 940e 0ff1 	CALL __MULF12
000b46 940e 0eaf 	CALL SUBOPT_0x42
000b48 940e 0eb4 	CALL SUBOPT_0x43
000b4a 940e 0e0a 	CALL SUBOPT_0x2A
000b4c 940e 0eaa 	CALL SUBOPT_0x41
000b4e 940e 0d07 	CALL SUBOPT_0x9
000b50 940e 0eaf 	CALL SUBOPT_0x42
000b52 940e 0eb9 	CALL SUBOPT_0x44
000b54 940e 1084 	CALL __CMPF12
000b56 f009      	BREQ PC+2
000b57 f410      	BRCC PC+3
000b58 940c 0b65 	JMP  _0x2020017
000b5a 940e 0eb4 	CALL SUBOPT_0x43
                +
000b5c e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b5d e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b5e e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b5f e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b60 940e 0f9a 	CALL __SUBF12
000b62 940e 0eaf 	CALL SUBOPT_0x42
000b64 e011      	LDI  R17,LOW(1)
                 _0x2020017:
000b65 940e 0eaa 	CALL SUBOPT_0x41
                +
000b67 e0e0     +LDI R30 , LOW ( 0x3E800000 )
000b68 e0f0     +LDI R31 , HIGH ( 0x3E800000 )
000b69 e860     +LDI R22 , BYTE3 ( 0x3E800000 )
000b6a e37e     +LDI R23 , BYTE4 ( 0x3E800000 )
                 	__GETD1N 0x3E800000
000b6b 940e 1084 	CALL __CMPF12
000b6d f009      	BREQ PC+2
000b6e f410      	BRCC PC+3
000b6f 940c 0b77 	JMP  _0x2020018
000b71 940e 0eb9 	CALL SUBOPT_0x44
000b73 940e 0f9a 	CALL __SUBF12
000b75 940e 0eaf 	CALL SUBOPT_0x42
                 _0x2020018:
000b77 3010      	CPI  R17,0
000b78 f031      	BREQ _0x2020019
000b79 940e 0eb4 	CALL SUBOPT_0x43
000b7b 940e 0efb 	CALL __ANEGF1
000b7d 940e 0eaf 	CALL SUBOPT_0x42
                 _0x2020019:
000b7f 940e 0eb4 	CALL SUBOPT_0x43
000b81 940e 0eaa 	CALL SUBOPT_0x41
000b83 940e 0ff1 	CALL __MULF12
                +
000b85 83e9     +STD Y + 1 , R30
000b86 83fa     +STD Y + 1 + 1 , R31
000b87 836b     +STD Y + 1 + 2 , R22
000b88 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                +
000b89 eba1     +LDI R26 , LOW ( 0x4226C4B1 )
000b8a ecb4     +LDI R27 , HIGH ( 0x4226C4B1 )
000b8b e286     +LDI R24 , BYTE3 ( 0x4226C4B1 )
000b8c e492     +LDI R25 , BYTE4 ( 0x4226C4B1 )
                 	__GETD2N 0x4226C4B1
000b8d 940e 0ff1 	CALL __MULF12
000b8f 01df      	MOVW R26,R30
000b90 01cb      	MOVW R24,R22
                +
000b91 e1ed     +LDI R30 , LOW ( 0x422DE51D )
000b92 eef5     +LDI R31 , HIGH ( 0x422DE51D )
000b93 e26d     +LDI R22 , BYTE3 ( 0x422DE51D )
000b94 e472     +LDI R23 , BYTE4 ( 0x422DE51D )
                 	__GETD1N 0x422DE51D
000b95 940e 0d07 	CALL SUBOPT_0x9
000b97 940e 0ebf 	CALL SUBOPT_0x45
                +
000b99 e4ac     +LDI R26 , LOW ( 0x4104534C )
000b9a e5b3     +LDI R27 , HIGH ( 0x4104534C )
000b9b e084     +LDI R24 , BYTE3 ( 0x4104534C )
000b9c e491     +LDI R25 , BYTE4 ( 0x4104534C )
                 	__GETD2N 0x4104534C
000b9d 940e 0fa1 	CALL __ADDF12
000b9f 940e 0eaa 	CALL SUBOPT_0x41
000ba1 940e 0ff1 	CALL __MULF12
000ba3 937f      	PUSH R23
000ba4 936f      	PUSH R22
000ba5 93ff      	PUSH R31
000ba6 93ef      	PUSH R30
                +
000ba7 81e9     +LDD R30 , Y + 1
000ba8 81fa     +LDD R31 , Y + 1 + 1
000ba9 816b     +LDD R22 , Y + 1 + 2
000baa 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
000bab e1a1     +LDI R26 , LOW ( 0x3FDEED11 )
000bac eebd     +LDI R27 , HIGH ( 0x3FDEED11 )
000bad ed8e     +LDI R24 , BYTE3 ( 0x3FDEED11 )
000bae e39f     +LDI R25 , BYTE4 ( 0x3FDEED11 )
                 	__GETD2N 0x3FDEED11
000baf 940e 0fa1 	CALL __ADDF12
000bb1 940e 0ebf 	CALL SUBOPT_0x45
                +
000bb3 e5ae     +LDI R26 , LOW ( 0x3FA87B5E )
000bb4 e7bb     +LDI R27 , HIGH ( 0x3FA87B5E )
000bb5 ea88     +LDI R24 , BYTE3 ( 0x3FA87B5E )
000bb6 e39f     +LDI R25 , BYTE4 ( 0x3FA87B5E )
                 	__GETD2N 0x3FA87B5E
000bb7 940e 0fa1 	CALL __ADDF12
000bb9 91af      	POP  R26
000bba 91bf      	POP  R27
000bbb 918f      	POP  R24
000bbc 919f      	POP  R25
000bbd 940e 103f 	CALL __DIVF21
000bbf 8118      	LDD  R17,Y+0
000bc0 9629      	ADIW R28,9
000bc1 9508      	RET
                 _cos:
000bc2 940e 113f 	CALL __GETD2S0
                +
000bc4 edeb     +LDI R30 , LOW ( 0x3FC90FDB )
000bc5 e0ff     +LDI R31 , HIGH ( 0x3FC90FDB )
000bc6 ec69     +LDI R22 , BYTE3 ( 0x3FC90FDB )
000bc7 e37f     +LDI R23 , BYTE4 ( 0x3FC90FDB )
                 	__GETD1N 0x3FC90FDB
000bc8 940e 0f9a 	CALL __SUBF12
000bca 940e 114b 	CALL __PUTPARD1
000bcc df6e      	RCALL _sin
                 _0x20A0003:
000bcd 9624      	ADIW R28,4
000bce 9508      	RET
                 
                 	.CSEG
                 _isdigit:
000bcf e0e1          ldi  r30,1
000bd0 91f9          ld   r31,y+
000bd1 33f0          cpi  r31,'0'
000bd2 f010          brlo isdigit0
000bd3 33fa          cpi  r31,'9'+1
000bd4 f008          brlo isdigit1
                 isdigit0:
000bd5 27ee          clr  r30
                 isdigit1:
000bd6 9508          ret
                 _isspace:
000bd7 e0e1          ldi  r30,1
000bd8 91f9          ld   r31,y+
000bd9 32f0          cpi  r31,' '
000bda f029          breq isspace1
000bdb 30f9          cpi  r31,9
000bdc f010          brlo isspace0
000bdd 30fe          cpi  r31,13+1
000bde f008          brlo isspace1
                 isspace0:
000bdf 27ee          clr  r30
                 isspace1:
000be0 9508          ret
                 _isxdigit:
000be1 e0e1          ldi  r30,1
000be2 91f9          ld   r31,y+
000be3 53f0          subi r31,0x30
000be4 f040          brcs isxdigit0
000be5 30fa          cpi  r31,10
000be6 f038          brcs isxdigit1
000be7 75ff          andi r31,0x5f
000be8 50f7          subi r31,7
000be9 30fa          cpi  r31,10
000bea f010          brcs isxdigit0
000beb 31f0          cpi  r31,16
000bec f008          brcs isxdigit1
                 isxdigit0:
000bed 27ee          clr  r30
                 isxdigit1:
000bee 9508          ret
                 
                 	.CSEG
                 _strcpyf:
000bef 91e9          ld   r30,y+
000bf0 91f9          ld   r31,y+
000bf1 91a9          ld   r26,y+
000bf2 91b9          ld   r27,y+
000bf3 01cd          movw r24,r26
                 strcpyf0:
000bf4 9005      	lpm  r0,z+
000bf5 920d          st   x+,r0
000bf6 2000          tst  r0
000bf7 f7e1          brne strcpyf0
000bf8 01fc          movw r30,r24
000bf9 9508          ret
                 _strlen:
000bfa 91a9          ld   r26,y+
000bfb 91b9          ld   r27,y+
000bfc 27ee          clr  r30
000bfd 27ff          clr  r31
                 strlen0:
000bfe 916d          ld   r22,x+
000bff 2366          tst  r22
000c00 f011          breq strlen1
000c01 9631          adiw r30,1
000c02 cffb          rjmp strlen0
                 strlen1:
000c03 9508          ret
                 _strlenf:
000c04 27aa          clr  r26
000c05 27bb          clr  r27
000c06 91e9          ld   r30,y+
000c07 91f9          ld   r31,y+
                 strlenf0:
000c08 9005      	lpm  r0,z+
000c09 2000          tst  r0
000c0a f011          breq strlenf1
000c0b 9611          adiw r26,1
000c0c cffb          rjmp strlenf0
                 strlenf1:
000c0d 01fd          movw r30,r26
000c0e 9508          ret
                 
                 	.CSEG
                 _ftoa:
000c0f 9724      	SBIW R28,4
000c10 d0d4      	RCALL SUBOPT_0x4
000c11 e0e0      	LDI  R30,LOW(0)
000c12 83ea      	STD  Y+2,R30
000c13 e3ef      	LDI  R30,LOW(63)
000c14 83eb      	STD  Y+3,R30
000c15 931a      	ST   -Y,R17
000c16 930a      	ST   -Y,R16
000c17 85eb      	LDD  R30,Y+11
000c18 85fc      	LDD  R31,Y+11+1
000c19 3fef      	CPI  R30,LOW(0xFFFF)
000c1a efaf      	LDI  R26,HIGH(0xFFFF)
000c1b 07fa      	CPC  R31,R26
000c1c f429      	BRNE _0x208000D
000c1d d2a8      	RCALL SUBOPT_0x46
                +
000c1e efe6     +LDI R30 , LOW ( 2 * _0x2080000 + ( 0 ) )
000c1f e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW1FN _0x2080000,0
000c20 d1a7      	RCALL SUBOPT_0x21
000c21 c085      	RJMP _0x20A0002
                 _0x208000D:
000c22 3fef      	CPI  R30,LOW(0x7FFF)
000c23 e7af      	LDI  R26,HIGH(0x7FFF)
000c24 07fa      	CPC  R31,R26
000c25 f429      	BRNE _0x208000C
000c26 d29f      	RCALL SUBOPT_0x46
                +
000c27 efe7     +LDI R30 , LOW ( 2 * _0x2080000 + ( 1 ) )
000c28 e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW1FN _0x2080000,1
000c29 d19e      	RCALL SUBOPT_0x21
000c2a c07c      	RJMP _0x20A0002
                 _0x208000C:
000c2b 85ac      	LDD  R26,Y+12
000c2c 23aa      	TST  R26
000c2d f452      	BRPL _0x208000F
                +
000c2e 85e9     +LDD R30 , Y + 9
000c2f 85fa     +LDD R31 , Y + 9 + 1
000c30 856b     +LDD R22 , Y + 9 + 2
000c31 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c32 940e 0efb 	CALL __ANEGF1
000c34 d296      	RCALL SUBOPT_0x47
000c35 d29a      	RCALL SUBOPT_0x48
000c36 e2ed      	LDI  R30,LOW(45)
000c37 93ec      	ST   X,R30
                 _0x208000F:
000c38 85a8      	LDD  R26,Y+8
000c39 30a7      	CPI  R26,LOW(0x7)
000c3a f010      	BRLO _0x2080010
000c3b e0e6      	LDI  R30,LOW(6)
000c3c 87e8      	STD  Y+8,R30
                 _0x2080010:
000c3d 8518      	LDD  R17,Y+8
                 _0x2080011:
000c3e 2fe1      	MOV  R30,R17
000c3f 5011      	SUBI R17,1
000c40 30e0      	CPI  R30,0
000c41 f021      	BREQ _0x2080013
000c42 d294      	RCALL SUBOPT_0x49
000c43 d1bf      	RCALL SUBOPT_0x29
000c44 d297      	RCALL SUBOPT_0x4A
000c45 cff8      	RJMP _0x2080011
                 _0x2080013:
000c46 d29a      	RCALL SUBOPT_0x4B
000c47 940e 0fa1 	CALL __ADDF12
000c49 d281      	RCALL SUBOPT_0x47
000c4a e010      	LDI  R17,LOW(0)
                +
000c4b e0e0     +LDI R30 , LOW ( 0x3F800000 )
000c4c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000c4d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000c4e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000c4f d28c      	RCALL SUBOPT_0x4A
                 _0x2080014:
000c50 d290      	RCALL SUBOPT_0x4B
000c51 940e 1084 	CALL __CMPF12
000c53 f060      	BRLO _0x2080016
000c54 d282      	RCALL SUBOPT_0x49
000c55 d19a      	RCALL SUBOPT_0x26
000c56 d285      	RCALL SUBOPT_0x4A
000c57 5f1f      	SUBI R17,-LOW(1)
000c58 3217      	CPI  R17,39
000c59 f028      	BRLO _0x2080017
000c5a d26b      	RCALL SUBOPT_0x46
                +
000c5b efeb     +LDI R30 , LOW ( 2 * _0x2080000 + ( 5 ) )
000c5c e0f2     +LDI R31 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW1FN _0x2080000,5
000c5d d16a      	RCALL SUBOPT_0x21
000c5e c048      	RJMP _0x20A0002
                 _0x2080017:
000c5f cff0      	RJMP _0x2080014
                 _0x2080016:
000c60 3010      	CPI  R17,0
000c61 f421      	BRNE _0x2080018
000c62 d26d      	RCALL SUBOPT_0x48
000c63 e3e0      	LDI  R30,LOW(48)
000c64 93ec      	ST   X,R30
000c65 c01d      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000c66 2fe1      	MOV  R30,R17
000c67 5011      	SUBI R17,1
000c68 30e0      	CPI  R30,0
000c69 f0c9      	BREQ _0x208001C
000c6a d26c      	RCALL SUBOPT_0x49
000c6b d197      	RCALL SUBOPT_0x29
000c6c d18f      	RCALL SUBOPT_0x28
000c6d d19c      	RCALL SUBOPT_0x2A
000c6e d26d      	RCALL SUBOPT_0x4A
000c6f d271      	RCALL SUBOPT_0x4B
000c70 940e 103f 	CALL __DIVF21
000c72 940e 0f2e 	CALL __CFD1U
000c74 2f0e      	MOV  R16,R30
000c75 d25a      	RCALL SUBOPT_0x48
000c76 d19e      	RCALL SUBOPT_0x2C
000c77 e0f0      	LDI  R31,0
000c78 d25e      	RCALL SUBOPT_0x49
000c79 940e 10bf 	CALL __CWD1
000c7b 940e 0f67 	CALL __CDF1
000c7d 940e 0ff1 	CALL __MULF12
000c7f d26a      	RCALL SUBOPT_0x4C
000c80 d086      	RCALL SUBOPT_0x9
000c81 d249      	RCALL SUBOPT_0x47
000c82 cfe3      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000c83 85e8      	LDD  R30,Y+8
000c84 30e0      	CPI  R30,0
000c85 f0e9      	BREQ _0x20A0001
000c86 d249      	RCALL SUBOPT_0x48
000c87 e2ee      	LDI  R30,LOW(46)
000c88 93ec      	ST   X,R30
                 _0x208001E:
000c89 85e8      	LDD  R30,Y+8
000c8a 50e1      	SUBI R30,LOW(1)
000c8b 87e8      	STD  Y+8,R30
000c8c 5fef      	SUBI R30,-LOW(1)
000c8d f0a9      	BREQ _0x2080020
000c8e d25b      	RCALL SUBOPT_0x4C
000c8f d160      	RCALL SUBOPT_0x26
000c90 d23a      	RCALL SUBOPT_0x47
                +
000c91 85e9     +LDD R30 , Y + 9
000c92 85fa     +LDD R31 , Y + 9 + 1
000c93 856b     +LDD R22 , Y + 9 + 2
000c94 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000c95 940e 0f2e 	CALL __CFD1U
000c97 2f0e      	MOV  R16,R30
000c98 d237      	RCALL SUBOPT_0x48
000c99 d17b      	RCALL SUBOPT_0x2C
000c9a e0f0      	LDI  R31,0
000c9b d24e      	RCALL SUBOPT_0x4C
000c9c 940e 10bf 	CALL __CWD1
000c9e 940e 0f67 	CALL __CDF1
000ca0 d066      	RCALL SUBOPT_0x9
000ca1 d229      	RCALL SUBOPT_0x47
000ca2 cfe6      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
000ca3 81ae      	LDD  R26,Y+6
000ca4 81bf      	LDD  R27,Y+6+1
000ca5 e0e0      	LDI  R30,LOW(0)
000ca6 93ec      	ST   X,R30
                 _0x20A0002:
000ca7 8119      	LDD  R17,Y+1
000ca8 8108      	LDD  R16,Y+0
000ca9 962d      	ADIW R28,13
000caa 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _PACKET_BUFF:
000500           	.BYTE 0x64
                 _VELOCITY_BUFF:
000564           	.BYTE 0x14
                 _TIMER1_OVERFLOW:
000578           	.BYTE 0x2
                 __seed_G104:
00057a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000cab 81aa      	LDD  R26,Y+2
000cac 81bb      	LDD  R27,Y+2+1
000cad 27ee      	CLR  R30
000cae 0fa1      	ADD  R26,R17
000caf 1fbe      	ADC  R27,R30
000cb0 91ec      	LD   R30,X
000cb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000cb2 9728      	SBIW R28,8
000cb3 940e 1168 	CALL __SAVELOCR4
                +
000cb5 e020     +LDI R18 , LOW ( 0 )
000cb6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000cb7 89e8      	LDD  R30,Y+16
000cb8 83ec      	STD  Y+4,R30
000cb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2:
000cba 83ed      	STD  Y+5,R30
000cbb 85ee      	LDD  R30,Y+14
000cbc 85ff      	LDD  R31,Y+14+1
000cbd 940e 10b4 	CALL __ASRW8
000cbf 83ee      	STD  Y+6,R30
000cc0 85ee      	LDD  R30,Y+14
000cc1 83ef      	STD  Y+7,R30
000cc2 85ec      	LDD  R30,Y+12
000cc3 85fd      	LDD  R31,Y+12+1
000cc4 940e 10b4 	CALL __ASRW8
000cc6 87e8      	STD  Y+8,R30
000cc7 85ec      	LDD  R30,Y+12
000cc8 87e9      	STD  Y+9,R30
000cc9 e0e0      	LDI  R30,LOW(0)
000cca 87ea      	STD  Y+10,R30
000ccb 87eb      	STD  Y+11,R30
000ccc 01fe      	MOVW R30,R28
000ccd 9634      	ADIW R30,4
000cce 93fa      	ST   -Y,R31
000ccf 93ea      	ST   -Y,R30
000cd0 e0e6      	LDI  R30,LOW(6)
000cd1 e0f0      	LDI  R31,HIGH(6)
000cd2 93fa      	ST   -Y,R31
000cd3 93ea      	ST   -Y,R30
000cd4 940e 022d 	CALL _CRC16
000cd6 018f      	MOVW R16,R30
000cd7 01f8      	MOVW R30,R16
000cd8 87ea      	STD  Y+10,R30
                +
000cd9 871b     +STD Y + 11 , R17
                 	__PUTBSR 17,11
                +
000cda e020     +LDI R18 , LOW ( 0 )
000cdb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000cdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000cdd 01de      	MOVW R26,R28
000cde 9614      	ADIW R26,4
000cdf 0fa2      	ADD  R26,R18
000ce0 1fb3      	ADC  R27,R19
000ce1 91ec      	LD   R30,X
000ce2 93ea      	ST   -Y,R30
000ce3 940c 0227 	JMP  _putch_USART0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000ce5 e0e0      	LDI  R30,LOW(0)
000ce6 83e8      	ST   Y,R30
000ce7 83e9      	STD  Y+1,R30
000ce8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000ce9 85ae      	LDD  R26,Y+14
000cea 85bf      	LDD  R27,Y+14+1
000ceb 940e 112f 	CALL __GETD1P
000ced 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000cee 85ac      	LDD  R26,Y+12
000cef 85bd      	LDD  R27,Y+12+1
000cf0 940e 112f 	CALL __GETD1P
000cf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7:
                +
000cf3 e3ab     +LDI R26 , LOW ( 0x3E8FDF3B )
000cf4 edbf     +LDI R27 , HIGH ( 0x3E8FDF3B )
000cf5 e88f     +LDI R24 , BYTE3 ( 0x3E8FDF3B )
000cf6 e39e     +LDI R25 , BYTE4 ( 0x3E8FDF3B )
                 	__GETD2N 0x3E8FDF3B
000cf7 940e 0ff1 	CALL __MULF12
000cf9 01df      	MOVW R26,R30
000cfa 01cb      	MOVW R24,R22
                +
000cfb e0e0     +LDI R30 , LOW ( 0x40000000 )
000cfc e0f0     +LDI R31 , HIGH ( 0x40000000 )
000cfd e060     +LDI R22 , BYTE3 ( 0x40000000 )
000cfe e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
000cff 940e 103f 	CALL __DIVF21
000d01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
                +
000d02 83ec     +STD Y + 4 , R30
000d03 83fd     +STD Y + 4 + 1 , R31
000d04 836e     +STD Y + 4 + 2 , R22
000d05 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000d06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000d07 940e 1155 	CALL __SWAPD12
000d09 940e 0f9a 	CALL __SUBF12
000d0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA:
                +
000d0c 81ec     +LDD R30 , Y + 4
000d0d 81fd     +LDD R31 , Y + 4 + 1
000d0e 816e     +LDD R22 , Y + 4 + 2
000d0f 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000d10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
                +
000d11 ebaa     +LDI R26 , LOW ( 0x4318C9BA )
000d12 ecb9     +LDI R27 , HIGH ( 0x4318C9BA )
000d13 e188     +LDI R24 , BYTE3 ( 0x4318C9BA )
000d14 e493     +LDI R25 , BYTE4 ( 0x4318C9BA )
                 	__GETD2N 0x4318C9BA
000d15 940e 0ff1 	CALL __MULF12
                +
000d17 e0a0     +LDI R26 , LOW ( 0x41A00000 )
000d18 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000d19 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000d1a e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000d1b 940e 0ff1 	CALL __MULF12
000d1d 940e 0f30 	CALL __CFD1
000d1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000d20 940e 113a 	CALL __GETD1S0
000d22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000d23 e0e0      	LDI  R30,LOW(0)
000d24 e0f0      	LDI  R31,HIGH(0)
000d25 93ed      	ST   X+,R30
000d26 93fc      	ST   X,R31
000d27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xE:
000d28 93fa      	ST   -Y,R31
000d29 93ea      	ST   -Y,R30
000d2a 940e 025c 	CALL _RTU_WriteOperate0
000d2c e0e5      	LDI  R30,LOW(5)
000d2d e0f0      	LDI  R31,HIGH(5)
000d2e 93fa      	ST   -Y,R31
000d2f 93ea      	ST   -Y,R30
000d30 940c 0eef 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
000d32 93ea      	ST   -Y,R30
000d33 e7e8      	LDI  R30,LOW(120)
000d34 e0f0      	LDI  R31,HIGH(120)
000d35 93fa      	ST   -Y,R31
000d36 93ea      	ST   -Y,R30
000d37 e0e1      	LDI  R30,LOW(1)
000d38 e0f0      	LDI  R31,HIGH(1)
000d39 cfee      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
000d3a e0f0      	LDI  R31,0
000d3b 0fea      	ADD  R30,R26
000d3c 1ffb      	ADC  R31,R27
000d3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
000d3e 2da4      	MOV  R26,R4
000d3f e0b0      	LDI  R27,0
000d40 50a0      	SUBI R26,LOW(-_PACKET_BUFF)
000d41 4fbb      	SBCI R27,HIGH(-_PACKET_BUFF)
000d42 b1ec      	IN   R30,0xC
000d43 93ec      	ST   X,R30
000d44 9443      	INC  R4
000d45 e0e0      	LDI  R30,LOW(0)
000d46 bde4      	OUT  0x24,R30
000d47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
000d48 e0f0      	LDI  R31,0
000d49 59ec      	SUBI R30,LOW(-_VELOCITY_BUFF)
000d4a 4ffa      	SBCI R31,HIGH(-_VELOCITY_BUFF)
000d4b 8310      	ST   Z,R17
000d4c 9493      	INC  R9
000d4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
000d4e 91ed      	LD   R30,X+
000d4f 91fd      	LD   R31,X+
000d50 9631      	ADIW R30,1
000d51 93fe      	ST   -X,R31
000d52 93ee      	ST   -X,R30
000d53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000d54 93fa      	ST   -Y,R31
000d55 93ea      	ST   -Y,R30
000d56 940c 0eef 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
                +
000d58 01fe     +MOVW R30 , R28
000d59 5ced     +SUBI R30 , LOW ( - 563 )
000d5a 4ffd     +SBCI R31 , HIGH ( - 563 )
000d5b 9001     +LD R0 , Z +
000d5c 81f0     +LD R31 , Z
000d5d 2de0     +MOV R30 , R0
                 	__GETW1SX 563
000d5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
000d5f 940e 10bf 	CALL __CWD1
000d61 940e 0f67 	CALL __CDF1
000d63 01df      	MOVW R26,R30
000d64 01cb      	MOVW R24,R22
                +
000d65 e0e0     +LDI R30 , LOW ( 0x447A0000 )
000d66 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
000d67 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
000d68 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
000d69 940e 103f 	CALL __DIVF21
000d6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000d6c e0e0      	LDI  R30,LOW(0)
000d6d 93e0 0578 	STS  _TIMER1_OVERFLOW,R30
000d6f 93e0 0579 	STS  _TIMER1_OVERFLOW+1,R30
000d71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000d72 e0e5      	LDI  R30,LOW(5)
000d73 e0f0      	LDI  R31,HIGH(5)
000d74 cfdf      	RJMP SUBOPT_0x14
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x19:
000d75 93ea      	ST   -Y,R30
000d76 e0e2      	LDI  R30,LOW(2)
000d77 e0f0      	LDI  R31,HIGH(2)
000d78 93fa      	ST   -Y,R31
000d79 93ea      	ST   -Y,R30
000d7a 93fa      	ST   -Y,R31
000d7b 93ea      	ST   -Y,R30
000d7c 940e 026b 	CALL _RTU_ReedOperate0
000d7e cff3      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
                +
000d7f 01fe     +MOVW R30 , R28
000d80 5cef     +SUBI R30 , LOW ( - 561 )
000d81 4ffd     +SBCI R31 , HIGH ( - 561 )
000d82 9001     +LD R0 , Z +
000d83 81f0     +LD R31 , Z
000d84 2de0     +MOV R30 , R0
                 	__GETW1SX 561
000d85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1B:
000d86 940e 10bf 	CALL __CWD1
000d88 940e 0f67 	CALL __CDF1
000d8a 01df      	MOVW R26,R30
000d8b 01cb      	MOVW R24,R22
                +
000d8c e2e9     +LDI R30 , LOW ( 0x453EFC29 )
000d8d effc     +LDI R31 , HIGH ( 0x453EFC29 )
000d8e e36e     +LDI R22 , BYTE3 ( 0x453EFC29 )
000d8f e475     +LDI R23 , BYTE4 ( 0x453EFC29 )
                 	__GETD1N 0x453EFC29
000d90 940e 103f 	CALL __DIVF21
000d92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
                +
000d93 01de     +MOVW R26 , R28
000d94 5fa5     +SUBI R26 , LOW ( - 523 )
000d95 4fbd     +SBCI R27 , HIGH ( - 523 )
000d96 900d     +LD R0 , X +
000d97 901d     +LD R1 , X +
000d98 918d     +LD R24 , X +
000d99 919c     +LD R25 , X
000d9a 01d0     +MOVW R26 , R0
                 	__GETD2SX 523
000d9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1D:
                +
000d9c 01fe     +MOVW R30 , R28
000d9d 5ee9     +SUBI R30 , LOW ( - 535 )
000d9e 4ffd     +SBCI R31 , HIGH ( - 535 )
000d9f 9001     +LD R0 , Z +
000da0 9011     +LD R1 , Z +
000da1 9161     +LD R22 , Z +
000da2 8170     +LD R23 , Z
000da3 01f0     +MOVW R30 , R0
                 	__GETD1SX 535
                +
000da4 01de     +MOVW R26 , R28
000da5 5ea1     +SUBI R26 , LOW ( - 543 )
000da6 4fbd     +SBCI R27 , HIGH ( - 543 )
000da7 900d     +LD R0 , X +
000da8 901d     +LD R1 , X +
000da9 918d     +LD R24 , X +
000daa 919c     +LD R25 , X
000dab 01d0     +MOVW R26 , R0
                 	__GETD2SX 543
000dac 940e 0ff1 	CALL __MULF12
000dae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
000daf 01fe     +MOVW R30 , R28
000db0 5fe5     +SUBI R30 , LOW ( - 523 )
000db1 4ffd     +SBCI R31 , HIGH ( - 523 )
000db2 9001     +LD R0 , Z +
000db3 9011     +LD R1 , Z +
000db4 9161     +LD R22 , Z +
000db5 8170     +LD R23 , Z
000db6 01f0     +MOVW R30 , R0
                 	__GETD1SX 523
000db7 940e 114b 	CALL __PUTPARD1
000db9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
000dba 01de     +MOVW R26 , R28
000dbb 50ab     +SUBI R26 , LOW ( - 501 )
000dbc 4fbe     +SBCI R27 , HIGH ( - 501 )
000dbd 900d     +LD R0 , X +
000dbe 901d     +LD R1 , X +
000dbf 918d     +LD R24 , X +
000dc0 919c     +LD R25 , X
000dc1 01d0     +MOVW R26 , R0
                 	__GETD2SX 501
000dc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
000dc3 940e 10bf 	CALL __CWD1
000dc5 940e 114b 	CALL __PUTPARD1
000dc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
000dc8 93fa      	ST   -Y,R31
000dc9 93ea      	ST   -Y,R30
000dca 940c 0bef 	JMP  _strcpyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x22:
                +
000dcc 81ac     +LDD R26 , Y + 4
000dcd 81bd     +LDD R27 , Y + 4 + 1
000dce 818e     +LDD R24 , Y + 4 + 2
000dcf 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000dd0 e0e0     +LDI R30 , LOW ( 0x41200000 )
000dd1 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000dd2 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000dd3 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000dd4 940e 0ff1 	CALL __MULF12
000dd6 cf2b      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x23:
000dd7 df34      	RCALL SUBOPT_0xA
                +
000dd8 85ac     +LDD R26 , Y + 12
000dd9 85bd     +LDD R27 , Y + 12 + 1
000dda 858e     +LDD R24 , Y + 12 + 2
000ddb 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000ddc 940e 1084 	CALL __CMPF12
000dde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
                +
000ddf 85ac     +LDD R26 , Y + 12
000de0 85bd     +LDD R27 , Y + 12 + 1
000de1 858e     +LDD R24 , Y + 12 + 2
000de2 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000de3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
                +
000de4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000de5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000de6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000de7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000de8 940e 0ff1 	CALL __MULF12
                +
000dea 87ec     +STD Y + 12 , R30
000deb 87fd     +STD Y + 12 + 1 , R31
000dec 876e     +STD Y + 12 + 2 , R22
000ded 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000dee 5f3f      	SUBI R19,-LOW(1)
000def 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
000df0 e0e0     +LDI R30 , LOW ( 0x41200000 )
000df1 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000df2 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000df3 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000df4 940e 0ff1 	CALL __MULF12
000df6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
                +
000df7 87ec     +STD Y + 12 , R30
000df8 87fd     +STD Y + 12 + 1 , R31
000df9 876e     +STD Y + 12 + 2 , R22
000dfa 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000dfb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
                +
000dfc e0a0     +LDI R26 , LOW ( 0x3F000000 )
000dfd e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000dfe e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000dff e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000e00 940e 0fa1 	CALL __ADDF12
000e02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x29:
                +
000e03 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000e04 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000e05 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000e06 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000e07 940e 0ff1 	CALL __MULF12
000e09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000e0a 940e 114b 	CALL __PUTPARD1
000e0c 940c 0b25 	JMP  _floor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000e0e 85a8      	LDD  R26,Y+8
000e0f 85b9      	LDD  R27,Y+8+1
000e10 9611      	ADIW R26,1
000e11 87a8      	STD  Y+8,R26
000e12 87b9      	STD  Y+8+1,R27
000e13 9711      	SBIW R26,1
000e14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000e15 2fe0      	MOV  R30,R16
000e16 5de0      	SUBI R30,-LOW(48)
000e17 93ec      	ST   X,R30
000e18 2fe0      	MOV  R30,R16
000e19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D:
000e1a 85e8      	LDD  R30,Y+8
000e1b 85f9      	LDD  R31,Y+8+1
000e1c 9631      	ADIW R30,1
000e1d 87e8      	STD  Y+8,R30
000e1e 87f9      	STD  Y+8+1,R31
000e1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2E:
000e20 932a      	ST   -Y,R18
000e21 81ef      	LDD  R30,Y+7
000e22 85f8      	LDD  R31,Y+7+1
000e23 93fa      	ST   -Y,R31
000e24 93ea      	ST   -Y,R30
000e25 85eb      	LDD  R30,Y+11
000e26 85fc      	LDD  R31,Y+11+1
000e27 9509      	ICALL
000e28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F:
                +
000e29 01fe     +MOVW R30 , R28
000e2a 5ae6     +SUBI R30 , LOW ( - 90 )
000e2b 4fff     +SBCI R31 , HIGH ( - 90 )
000e2c 9001     +LD R0 , Z +
000e2d 81f0     +LD R31 , Z
000e2e 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000e2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x30:
000e30 9734      	SBIW R30,4
                +
000e31 01de     +MOVW R26 , R28
000e32 5aa6     +SUBI R26 , LOW ( - 90 )
000e33 4fbf     +SBCI R27 , HIGH ( - 90 )
000e34 93ed     +ST X + , R30
000e35 93fc     +ST X , R31
                 	__PUTW1SX 90
000e36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x31:
000e37 81ef      	LDD  R30,Y+7
000e38 85f8      	LDD  R31,Y+7+1
000e39 93fa      	ST   -Y,R31
000e3a 93ea      	ST   -Y,R30
000e3b 85eb      	LDD  R30,Y+11
000e3c 85fc      	LDD  R31,Y+11+1
000e3d 9509      	ICALL
000e3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x32:
                +
000e3f 01de     +MOVW R26 , R28
000e40 5aa6     +SUBI R26 , LOW ( - 90 )
000e41 4fbf     +SBCI R27 , HIGH ( - 90 )
000e42 900d     +LD R0 , X +
000e43 91bc     +LD R27 , X
000e44 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000e45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
                +
000e46 87ea     +STD Y + 10 , R30
000e47 87fb     +STD Y + 10 + 1 , R31
000e48 876c     +STD Y + 10 + 2 , R22
000e49 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000e4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x34:
000e4b dfdd      	RCALL SUBOPT_0x2F
000e4c cfe3      	RJMP SUBOPT_0x30
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35:
                +
000e4d 85ea     +LDD R30 , Y + 10
000e4e 85fb     +LDD R31 , Y + 10 + 1
000e4f 856c     +LDD R22 , Y + 10 + 2
000e50 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000e51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x36:
000e52 87ee      	STD  Y+14,R30
000e53 87ff      	STD  Y+14+1,R31
000e54 93fa      	ST   -Y,R31
000e55 93ea      	ST   -Y,R30
000e56 940e 0bfa 	CALL _strlen
000e58 2f1e      	MOV  R17,R30
000e59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x37:
000e5a dfe4      	RCALL SUBOPT_0x32
000e5b 9614      	ADIW R26,4
000e5c 940e 112b 	CALL __GETW1P
000e5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
                +
000e5f 8be8     +STD Y + 16 , R30
000e60 8bf9     +STD Y + 16 + 1 , R31
000e61 8b6a     +STD Y + 16 + 2 , R22
000e62 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000e63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x39:
000e64 7f0b      	ANDI R16,LOW(251)
000e65 89ed      	LDD  R30,Y+21
000e66 93ea      	ST   -Y,R30
                +
000e67 01fe     +MOVW R30 , R28
000e68 5ae9     +SUBI R30 , LOW ( - 87 )
000e69 4fff     +SBCI R31 , HIGH ( - 87 )
000e6a 9001     +LD R0 , Z +
000e6b 81f0     +LD R31 , Z
000e6c 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000e6d 93fa      	ST   -Y,R31
000e6e 93ea      	ST   -Y,R30
                +
000e6f 01fe     +MOVW R30 , R28
000e70 5ae5     +SUBI R30 , LOW ( - 91 )
000e71 4fff     +SBCI R31 , HIGH ( - 91 )
000e72 9001     +LD R0 , Z +
000e73 81f0     +LD R31 , Z
000e74 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000e75 9509      	ICALL
000e76 3050      	CPI  R21,0
000e77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A:
                +
000e78 89e8     +LDD R30 , Y + 16
000e79 89f9     +LDD R31 , Y + 16 + 1
000e7a 896a     +LDD R22 , Y + 16 + 2
000e7b 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000e7c 85aa     +LDD R26 , Y + 10
000e7d 85bb     +LDD R27 , Y + 10 + 1
000e7e 858c     +LDD R24 , Y + 10 + 2
000e7f 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000e80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000e81 01de      	MOVW R26,R28
000e82 961c      	ADIW R26,12
000e83 940e 10a4 	CALL __ADDW2R15
000e85 940e 112b 	CALL __GETW1P
000e87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C:
000e88 940e 10a4 	CALL __ADDW2R15
000e8a 940e 112b 	CALL __GETW1P
000e8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
000e8d 933a      	ST   -Y,R19
000e8e 940e 0bd7 	CALL _isspace
000e90 30e0      	CPI  R30,0
000e91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x3E:
000e92 85ed      	LDD  R30,Y+13
000e93 85fe      	LDD  R31,Y+13+1
000e94 93fa      	ST   -Y,R31
000e95 93ea      	ST   -Y,R30
000e96 89e9      	LDD  R30,Y+17
000e97 89fa      	LDD  R31,Y+17+1
000e98 9509      	ICALL
000e99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3F:
000e9a 85ab      	LDD  R26,Y+11
000e9b 85bc      	LDD  R27,Y+11+1
000e9c 91ac      	LD   R26,X
000e9d 30a0      	CPI  R26,0
000e9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x40:
000e9f 85ef      	LDD  R30,Y+15
000ea0 89f8      	LDD  R31,Y+15+1
000ea1 9734      	SBIW R30,4
000ea2 87ef      	STD  Y+15,R30
000ea3 8bf8      	STD  Y+15+1,R31
000ea4 85af      	LDD  R26,Y+15
000ea5 89b8      	LDD  R27,Y+15+1
000ea6 9614      	ADIW R26,4
000ea7 910d      	LD   R16,X+
000ea8 911c      	LD   R17,X
000ea9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x41:
                +
000eaa 81ad     +LDD R26 , Y + 5
000eab 81be     +LDD R27 , Y + 5 + 1
000eac 818f     +LDD R24 , Y + 5 + 2
000ead 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
000eae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x42:
                +
000eaf 83ed     +STD Y + 5 , R30
000eb0 83fe     +STD Y + 5 + 1 , R31
000eb1 836f     +STD Y + 5 + 2 , R22
000eb2 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
000eb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x43:
                +
000eb4 81ed     +LDD R30 , Y + 5
000eb5 81fe     +LDD R31 , Y + 5 + 1
000eb6 816f     +LDD R22 , Y + 5 + 2
000eb7 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000eb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000eb9 dff0      	RCALL SUBOPT_0x41
                +
000eba e0e0     +LDI R30 , LOW ( 0x3F000000 )
000ebb e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000ebc e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000ebd e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
000ebe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
                +
000ebf 81a9     +LDD R26 , Y + 1
000ec0 81ba     +LDD R27 , Y + 1 + 1
000ec1 818b     +LDD R24 , Y + 1 + 2
000ec2 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000ec3 940e 0ff1 	CALL __MULF12
000ec5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000ec6 81ee      	LDD  R30,Y+6
000ec7 81ff      	LDD  R31,Y+6+1
000ec8 93fa      	ST   -Y,R31
000ec9 93ea      	ST   -Y,R30
000eca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x47:
                +
000ecb 87e9     +STD Y + 9 , R30
000ecc 87fa     +STD Y + 9 + 1 , R31
000ecd 876b     +STD Y + 9 + 2 , R22
000ece 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000ecf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x48:
000ed0 81ae      	LDD  R26,Y+6
000ed1 81bf      	LDD  R27,Y+6+1
000ed2 9611      	ADIW R26,1
000ed3 83ae      	STD  Y+6,R26
000ed4 83bf      	STD  Y+6+1,R27
000ed5 9711      	SBIW R26,1
000ed6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
                +
000ed7 81aa     +LDD R26 , Y + 2
000ed8 81bb     +LDD R27 , Y + 2 + 1
000ed9 818c     +LDD R24 , Y + 2 + 2
000eda 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000edb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
000edc 83ea     +STD Y + 2 , R30
000edd 83fb     +STD Y + 2 + 1 , R31
000ede 836c     +STD Y + 2 + 2 , R22
000edf 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000ee0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4B:
                +
000ee1 81ea     +LDD R30 , Y + 2
000ee2 81fb     +LDD R31 , Y + 2 + 1
000ee3 816c     +LDD R22 , Y + 2 + 2
000ee4 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000ee5 85a9     +LDD R26 , Y + 9
000ee6 85ba     +LDD R27 , Y + 9 + 1
000ee7 858b     +LDD R24 , Y + 9 + 2
000ee8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000ee9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4C:
                +
000eea 85a9     +LDD R26 , Y + 9
000eeb 85ba     +LDD R27 , Y + 9 + 1
000eec 858b     +LDD R24 , Y + 9 + 2
000eed 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000eee 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000eef 91e9      	ld   r30,y+
000ef0 91f9      	ld   r31,y+
000ef1 9630      	adiw r30,0
000ef2 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ef3 e686     +LDI R24 , LOW ( 0xE66 )
000ef4 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000ef5 9701     +SBIW R24 , 1
000ef6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000ef7 95a8      	wdr
000ef8 9731      	sbiw r30,1
000ef9 f7c9      	brne __delay_ms0
                 __delay_ms1:
000efa 9508      	ret
                 
                 __ANEGF1:
000efb 9730      	SBIW R30,0
000efc 4060      	SBCI R22,0
000efd 4070      	SBCI R23,0
000efe f009      	BREQ __ANEGF10
000eff 5870      	SUBI R23,0x80
                 __ANEGF10:
000f00 9508      	RET
                 
                 __ROUND_REPACK:
000f01 2355      	TST  R21
000f02 f442      	BRPL __REPACK
000f03 3850      	CPI  R21,0x80
000f04 f411      	BRNE __ROUND_REPACK0
000f05 ffe0      	SBRS R30,0
000f06 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000f07 9631      	ADIW R30,1
000f08 1f69      	ADC  R22,R25
000f09 1f79      	ADC  R23,R25
000f0a f06b      	BRVS __REPACK1
                 
                 __REPACK:
000f0b e850      	LDI  R21,0x80
000f0c 2757      	EOR  R21,R23
000f0d f411      	BRNE __REPACK0
000f0e 935f      	PUSH R21
000f0f c0cf      	RJMP __ZERORES
                 __REPACK0:
000f10 3f5f      	CPI  R21,0xFF
000f11 f031      	BREQ __REPACK1
000f12 0f66      	LSL  R22
000f13 0c00      	LSL  R0
000f14 9557      	ROR  R21
000f15 9567      	ROR  R22
000f16 2f75      	MOV  R23,R21
000f17 9508      	RET
                 __REPACK1:
000f18 935f      	PUSH R21
000f19 2000      	TST  R0
000f1a f00a      	BRMI __REPACK2
000f1b c0cf      	RJMP __MAXRES
                 __REPACK2:
000f1c c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000f1d e850      	LDI  R21,0x80
000f1e 2e19      	MOV  R1,R25
000f1f 2215      	AND  R1,R21
000f20 0f88      	LSL  R24
000f21 1f99      	ROL  R25
000f22 2795      	EOR  R25,R21
000f23 0f55      	LSL  R21
000f24 9587      	ROR  R24
                 
                 __UNPACK1:
000f25 e850      	LDI  R21,0x80
000f26 2e07      	MOV  R0,R23
000f27 2205      	AND  R0,R21
000f28 0f66      	LSL  R22
000f29 1f77      	ROL  R23
000f2a 2775      	EOR  R23,R21
000f2b 0f55      	LSL  R21
000f2c 9567      	ROR  R22
000f2d 9508      	RET
                 
                 __CFD1U:
000f2e 9468      	SET
000f2f c001      	RJMP __CFD1U0
                 __CFD1:
000f30 94e8      	CLT
                 __CFD1U0:
000f31 935f      	PUSH R21
000f32 dff2      	RCALL __UNPACK1
000f33 3870      	CPI  R23,0x80
000f34 f018      	BRLO __CFD10
000f35 3f7f      	CPI  R23,0xFF
000f36 f408      	BRCC __CFD10
000f37 c0a7      	RJMP __ZERORES
                 __CFD10:
000f38 e156      	LDI  R21,22
000f39 1b57      	SUB  R21,R23
000f3a f4aa      	BRPL __CFD11
000f3b 9551      	NEG  R21
000f3c 3058      	CPI  R21,8
000f3d f40e      	BRTC __CFD19
000f3e 3059      	CPI  R21,9
                 __CFD19:
000f3f f030      	BRLO __CFD17
000f40 efef      	SER  R30
000f41 efff      	SER  R31
000f42 ef6f      	SER  R22
000f43 e77f      	LDI  R23,0x7F
000f44 f977      	BLD  R23,7
000f45 c01a      	RJMP __CFD15
                 __CFD17:
000f46 2777      	CLR  R23
000f47 2355      	TST  R21
000f48 f0b9      	BREQ __CFD15
                 __CFD18:
000f49 0fee      	LSL  R30
000f4a 1fff      	ROL  R31
000f4b 1f66      	ROL  R22
000f4c 1f77      	ROL  R23
000f4d 955a      	DEC  R21
000f4e f7d1      	BRNE __CFD18
000f4f c010      	RJMP __CFD15
                 __CFD11:
000f50 2777      	CLR  R23
                 __CFD12:
000f51 3058      	CPI  R21,8
000f52 f028      	BRLO __CFD13
000f53 2fef      	MOV  R30,R31
000f54 2ff6      	MOV  R31,R22
000f55 2f67      	MOV  R22,R23
000f56 5058      	SUBI R21,8
000f57 cff9      	RJMP __CFD12
                 __CFD13:
000f58 2355      	TST  R21
000f59 f031      	BREQ __CFD15
                 __CFD14:
000f5a 9576      	LSR  R23
000f5b 9567      	ROR  R22
000f5c 95f7      	ROR  R31
000f5d 95e7      	ROR  R30
000f5e 955a      	DEC  R21
000f5f f7d1      	BRNE __CFD14
                 __CFD15:
000f60 2000      	TST  R0
000f61 f40a      	BRPL __CFD16
000f62 d149      	RCALL __ANEGD1
                 __CFD16:
000f63 915f      	POP  R21
000f64 9508      	RET
                 
                 __CDF1U:
000f65 9468      	SET
000f66 c001      	RJMP __CDF1U0
                 __CDF1:
000f67 94e8      	CLT
                 __CDF1U0:
000f68 9730      	SBIW R30,0
000f69 4060      	SBCI R22,0
000f6a 4070      	SBCI R23,0
000f6b f0b1      	BREQ __CDF10
000f6c 2400      	CLR  R0
000f6d f026      	BRTS __CDF11
000f6e 2377      	TST  R23
000f6f f412      	BRPL __CDF11
000f70 9400      	COM  R0
000f71 d13a      	RCALL __ANEGD1
                 __CDF11:
000f72 2e17      	MOV  R1,R23
000f73 e17e      	LDI  R23,30
000f74 2011      	TST  R1
                 __CDF12:
000f75 f032      	BRMI __CDF13
000f76 957a      	DEC  R23
000f77 0fee      	LSL  R30
000f78 1fff      	ROL  R31
000f79 1f66      	ROL  R22
000f7a 1c11      	ROL  R1
000f7b cff9      	RJMP __CDF12
                 __CDF13:
000f7c 2fef      	MOV  R30,R31
000f7d 2ff6      	MOV  R31,R22
000f7e 2d61      	MOV  R22,R1
000f7f 935f      	PUSH R21
000f80 df8a      	RCALL __REPACK
000f81 915f      	POP  R21
                 __CDF10:
000f82 9508      	RET
                 
                 __SWAPACC:
000f83 934f      	PUSH R20
000f84 01af      	MOVW R20,R30
000f85 01fd      	MOVW R30,R26
000f86 01da      	MOVW R26,R20
000f87 01ab      	MOVW R20,R22
000f88 01bc      	MOVW R22,R24
000f89 01ca      	MOVW R24,R20
000f8a 2d40      	MOV  R20,R0
000f8b 2c01      	MOV  R0,R1
000f8c 2e14      	MOV  R1,R20
000f8d 914f      	POP  R20
000f8e 9508      	RET
                 
                 __UADD12:
000f8f 0fea      	ADD  R30,R26
000f90 1ffb      	ADC  R31,R27
000f91 1f68      	ADC  R22,R24
000f92 9508      	RET
                 
                 __NEGMAN1:
000f93 95e0      	COM  R30
000f94 95f0      	COM  R31
000f95 9560      	COM  R22
000f96 5fef      	SUBI R30,-1
000f97 4fff      	SBCI R31,-1
000f98 4f6f      	SBCI R22,-1
000f99 9508      	RET
                 
                 __SUBF12:
000f9a 935f      	PUSH R21
000f9b df81      	RCALL __UNPACK
000f9c 3890      	CPI  R25,0x80
000f9d f171      	BREQ __ADDF129
000f9e e850      	LDI  R21,0x80
000f9f 2615      	EOR  R1,R21
                 
000fa0 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000fa1 935f      	PUSH R21
000fa2 df7a      	RCALL __UNPACK
000fa3 3890      	CPI  R25,0x80
000fa4 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000fa5 3870      	CPI  R23,0x80
000fa6 f121      	BREQ __ADDF128
                 __ADDF121:
000fa7 2f57      	MOV  R21,R23
000fa8 1b59      	SUB  R21,R25
000fa9 f12b      	BRVS __ADDF1211
000faa f412      	BRPL __ADDF122
000fab dfd7      	RCALL __SWAPACC
000fac cffa      	RJMP __ADDF121
                 __ADDF122:
000fad 3158      	CPI  R21,24
000fae f018      	BRLO __ADDF123
000faf 27aa      	CLR  R26
000fb0 27bb      	CLR  R27
000fb1 2788      	CLR  R24
                 __ADDF123:
000fb2 3058      	CPI  R21,8
000fb3 f028      	BRLO __ADDF124
000fb4 2fab      	MOV  R26,R27
000fb5 2fb8      	MOV  R27,R24
000fb6 2788      	CLR  R24
000fb7 5058      	SUBI R21,8
000fb8 cff9      	RJMP __ADDF123
                 __ADDF124:
000fb9 2355      	TST  R21
000fba f029      	BREQ __ADDF126
                 __ADDF125:
000fbb 9586      	LSR  R24
000fbc 95b7      	ROR  R27
000fbd 95a7      	ROR  R26
000fbe 955a      	DEC  R21
000fbf f7d9      	BRNE __ADDF125
                 __ADDF126:
000fc0 2d50      	MOV  R21,R0
000fc1 2551      	EOR  R21,R1
000fc2 f072      	BRMI __ADDF127
000fc3 dfcb      	RCALL __UADD12
000fc4 f438      	BRCC __ADDF129
000fc5 9567      	ROR  R22
000fc6 95f7      	ROR  R31
000fc7 95e7      	ROR  R30
000fc8 9573      	INC  R23
000fc9 f413      	BRVC __ADDF129
000fca c020      	RJMP __MAXRES
                 __ADDF128:
000fcb dfb7      	RCALL __SWAPACC
                 __ADDF129:
000fcc df3e      	RCALL __REPACK
000fcd 915f      	POP  R21
000fce 9508      	RET
                 __ADDF1211:
000fcf f7d8      	BRCC __ADDF128
000fd0 cffb      	RJMP __ADDF129
                 __ADDF127:
000fd1 1bea      	SUB  R30,R26
000fd2 0bfb      	SBC  R31,R27
000fd3 0b68      	SBC  R22,R24
000fd4 f051      	BREQ __ZERORES
000fd5 f410      	BRCC __ADDF1210
000fd6 9400      	COM  R0
000fd7 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000fd8 2366      	TST  R22
000fd9 f392      	BRMI __ADDF129
000fda 0fee      	LSL  R30
000fdb 1fff      	ROL  R31
000fdc 1f66      	ROL  R22
000fdd 957a      	DEC  R23
000fde f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000fdf 27ee      	CLR  R30
000fe0 27ff      	CLR  R31
000fe1 2766      	CLR  R22
000fe2 2777      	CLR  R23
000fe3 915f      	POP  R21
000fe4 9508      	RET
                 
                 __MINRES:
000fe5 efef      	SER  R30
000fe6 efff      	SER  R31
000fe7 e76f      	LDI  R22,0x7F
000fe8 ef7f      	SER  R23
000fe9 915f      	POP  R21
000fea 9508      	RET
                 
                 __MAXRES:
000feb efef      	SER  R30
000fec efff      	SER  R31
000fed e76f      	LDI  R22,0x7F
000fee e77f      	LDI  R23,0x7F
000fef 915f      	POP  R21
000ff0 9508      	RET
                 
                 __MULF12:
000ff1 935f      	PUSH R21
000ff2 df2a      	RCALL __UNPACK
000ff3 3870      	CPI  R23,0x80
000ff4 f351      	BREQ __ZERORES
000ff5 3890      	CPI  R25,0x80
000ff6 f341      	BREQ __ZERORES
000ff7 2401      	EOR  R0,R1
000ff8 9408      	SEC
000ff9 1f79      	ADC  R23,R25
000ffa f423      	BRVC __MULF124
000ffb f31c      	BRLT __ZERORES
                 __MULF125:
000ffc 2000      	TST  R0
000ffd f33a      	BRMI __MINRES
000ffe cfec      	RJMP __MAXRES
                 __MULF124:
000fff 920f      	PUSH R0
001000 931f      	PUSH R17
001001 932f      	PUSH R18
001002 933f      	PUSH R19
001003 934f      	PUSH R20
001004 2711      	CLR  R17
001005 2722      	CLR  R18
001006 2799      	CLR  R25
001007 9f68      	MUL  R22,R24
001008 01a0      	MOVW R20,R0
001009 9f8f      	MUL  R24,R31
00100a 2d30      	MOV  R19,R0
00100b 0d41      	ADD  R20,R1
00100c 1f59      	ADC  R21,R25
00100d 9f6b      	MUL  R22,R27
00100e 0d30      	ADD  R19,R0
00100f 1d41      	ADC  R20,R1
001010 1f59      	ADC  R21,R25
001011 9f8e      	MUL  R24,R30
001012 d027      	RCALL __MULF126
001013 9fbf      	MUL  R27,R31
001014 d025      	RCALL __MULF126
001015 9f6a      	MUL  R22,R26
001016 d023      	RCALL __MULF126
001017 9fbe      	MUL  R27,R30
001018 d01d      	RCALL __MULF127
001019 9faf      	MUL  R26,R31
00101a d01b      	RCALL __MULF127
00101b 9fae      	MUL  R26,R30
00101c 0d11      	ADD  R17,R1
00101d 1f29      	ADC  R18,R25
00101e 1f39      	ADC  R19,R25
00101f 1f49      	ADC  R20,R25
001020 1f59      	ADC  R21,R25
001021 2fe3      	MOV  R30,R19
001022 2ff4      	MOV  R31,R20
001023 2f65      	MOV  R22,R21
001024 2f52      	MOV  R21,R18
001025 914f      	POP  R20
001026 913f      	POP  R19
001027 912f      	POP  R18
001028 911f      	POP  R17
001029 900f      	POP  R0
00102a 2366      	TST  R22
00102b f02a      	BRMI __MULF122
00102c 0f55      	LSL  R21
00102d 1fee      	ROL  R30
00102e 1fff      	ROL  R31
00102f 1f66      	ROL  R22
001030 c002      	RJMP __MULF123
                 __MULF122:
001031 9573      	INC  R23
001032 f24b      	BRVS __MULF125
                 __MULF123:
001033 decd      	RCALL __ROUND_REPACK
001034 915f      	POP  R21
001035 9508      	RET
                 
                 __MULF127:
001036 0d10      	ADD  R17,R0
001037 1d21      	ADC  R18,R1
001038 1f39      	ADC  R19,R25
001039 c002      	RJMP __MULF128
                 __MULF126:
00103a 0d20      	ADD  R18,R0
00103b 1d31      	ADC  R19,R1
                 __MULF128:
00103c 1f49      	ADC  R20,R25
00103d 1f59      	ADC  R21,R25
00103e 9508      	RET
                 
                 __DIVF21:
00103f 935f      	PUSH R21
001040 dedc      	RCALL __UNPACK
001041 3870      	CPI  R23,0x80
001042 f421      	BRNE __DIVF210
001043 2011      	TST  R1
                 __DIVF211:
001044 f40a      	BRPL __DIVF219
001045 cf9f      	RJMP __MINRES
                 __DIVF219:
001046 cfa4      	RJMP __MAXRES
                 __DIVF210:
001047 3890      	CPI  R25,0x80
001048 f409      	BRNE __DIVF218
                 __DIVF217:
001049 cf95      	RJMP __ZERORES
                 __DIVF218:
00104a 2401      	EOR  R0,R1
00104b 9408      	SEC
00104c 0b97      	SBC  R25,R23
00104d f41b      	BRVC __DIVF216
00104e f3d4      	BRLT __DIVF217
00104f 2000      	TST  R0
001050 cff3      	RJMP __DIVF211
                 __DIVF216:
001051 2f79      	MOV  R23,R25
001052 931f      	PUSH R17
001053 932f      	PUSH R18
001054 933f      	PUSH R19
001055 934f      	PUSH R20
001056 2411      	CLR  R1
001057 2711      	CLR  R17
001058 2722      	CLR  R18
001059 2733      	CLR  R19
00105a 2744      	CLR  R20
00105b 2755      	CLR  R21
00105c e290      	LDI  R25,32
                 __DIVF212:
00105d 17ae      	CP   R26,R30
00105e 07bf      	CPC  R27,R31
00105f 0786      	CPC  R24,R22
001060 0741      	CPC  R20,R17
001061 f030      	BRLO __DIVF213
001062 1bae      	SUB  R26,R30
001063 0bbf      	SBC  R27,R31
001064 0b86      	SBC  R24,R22
001065 0b41      	SBC  R20,R17
001066 9408      	SEC
001067 c001      	RJMP __DIVF214
                 __DIVF213:
001068 9488      	CLC
                 __DIVF214:
001069 1f55      	ROL  R21
00106a 1f22      	ROL  R18
00106b 1f33      	ROL  R19
00106c 1c11      	ROL  R1
00106d 1faa      	ROL  R26
00106e 1fbb      	ROL  R27
00106f 1f88      	ROL  R24
001070 1f44      	ROL  R20
001071 959a      	DEC  R25
001072 f751      	BRNE __DIVF212
001073 01f9      	MOVW R30,R18
001074 2d61      	MOV  R22,R1
001075 914f      	POP  R20
001076 913f      	POP  R19
001077 912f      	POP  R18
001078 911f      	POP  R17
001079 2366      	TST  R22
00107a f032      	BRMI __DIVF215
00107b 0f55      	LSL  R21
00107c 1fee      	ROL  R30
00107d 1fff      	ROL  R31
00107e 1f66      	ROL  R22
00107f 957a      	DEC  R23
001080 f243      	BRVS __DIVF217
                 __DIVF215:
001081 de7f      	RCALL __ROUND_REPACK
001082 915f      	POP  R21
001083 9508      	RET
                 
                 __CMPF12:
001084 2399      	TST  R25
001085 f09a      	BRMI __CMPF120
001086 2377      	TST  R23
001087 f042      	BRMI __CMPF121
001088 1797      	CP   R25,R23
001089 f048      	BRLO __CMPF122
00108a f429      	BRNE __CMPF121
00108b 17ae      	CP   R26,R30
00108c 07bf      	CPC  R27,R31
00108d 0786      	CPC  R24,R22
00108e f020      	BRLO __CMPF122
00108f f031      	BREQ __CMPF123
                 __CMPF121:
001090 9498      	CLZ
001091 9488      	CLC
001092 9508      	RET
                 __CMPF122:
001093 9498      	CLZ
001094 9408      	SEC
001095 9508      	RET
                 __CMPF123:
001096 9418      	SEZ
001097 9488      	CLC
001098 9508      	RET
                 __CMPF120:
001099 2377      	TST  R23
00109a f7c2      	BRPL __CMPF122
00109b 1797      	CP   R25,R23
00109c f398      	BRLO __CMPF121
00109d f7a9      	BRNE __CMPF122
00109e 17ea      	CP   R30,R26
00109f 07fb      	CPC  R31,R27
0010a0 0768      	CPC  R22,R24
0010a1 f388      	BRLO __CMPF122
0010a2 f399      	BREQ __CMPF123
0010a3 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0010a4 2400      	CLR  R0
0010a5 0daf      	ADD  R26,R15
0010a6 1db0      	ADC  R27,R0
0010a7 9508      	RET
                 
                 __ANEGW1:
0010a8 95f1      	NEG  R31
0010a9 95e1      	NEG  R30
0010aa 40f0      	SBCI R31,0
0010ab 9508      	RET
                 
                 __ANEGD1:
0010ac 95f0      	COM  R31
0010ad 9560      	COM  R22
0010ae 9570      	COM  R23
0010af 95e1      	NEG  R30
0010b0 4fff      	SBCI R31,-1
0010b1 4f6f      	SBCI R22,-1
0010b2 4f7f      	SBCI R23,-1
0010b3 9508      	RET
                 
                 __ASRW8:
0010b4 2fef      	MOV  R30,R31
0010b5 27ff      	CLR  R31
0010b6 fde7      	SBRC R30,7
0010b7 efff      	SER  R31
0010b8 9508      	RET
                 
                 __CBD1:
0010b9 2ffe      	MOV  R31,R30
0010ba 0fff      	ADD  R31,R31
0010bb 0bff      	SBC  R31,R31
0010bc 2f6f      	MOV  R22,R31
0010bd 2f7f      	MOV  R23,R31
0010be 9508      	RET
                 
                 __CWD1:
0010bf 2f6f      	MOV  R22,R31
0010c0 0f66      	ADD  R22,R22
0010c1 0b66      	SBC  R22,R22
0010c2 2f76      	MOV  R23,R22
0010c3 9508      	RET
                 
                 __CWD2:
0010c4 2f8b      	MOV  R24,R27
0010c5 0f88      	ADD  R24,R24
0010c6 0b88      	SBC  R24,R24
0010c7 2f98      	MOV  R25,R24
0010c8 9508      	RET
                 
                 __MULW12U:
0010c9 9ffa      	MUL  R31,R26
0010ca 2df0      	MOV  R31,R0
0010cb 9feb      	MUL  R30,R27
0010cc 0df0      	ADD  R31,R0
0010cd 9fea      	MUL  R30,R26
0010ce 2de0      	MOV  R30,R0
0010cf 0df1      	ADD  R31,R1
0010d0 9508      	RET
                 
                 __MULB1W2U:
0010d1 2f6e      	MOV  R22,R30
0010d2 9f6a      	MUL  R22,R26
0010d3 01f0      	MOVW R30,R0
0010d4 9f6b      	MUL  R22,R27
0010d5 0df0      	ADD  R31,R0
0010d6 9508      	RET
                 
                 __DIVB21U:
0010d7 2400      	CLR  R0
0010d8 e098      	LDI  R25,8
                 __DIVB21U1:
0010d9 0faa      	LSL  R26
0010da 1c00      	ROL  R0
0010db 1a0e      	SUB  R0,R30
0010dc f410      	BRCC __DIVB21U2
0010dd 0e0e      	ADD  R0,R30
0010de c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0010df 60a1      	SBR  R26,1
                 __DIVB21U3:
0010e0 959a      	DEC  R25
0010e1 f7b9      	BRNE __DIVB21U1
0010e2 2fea      	MOV  R30,R26
0010e3 2da0      	MOV  R26,R0
0010e4 9508      	RET
                 
                 __DIVB21:
0010e5 d039      	RCALL __CHKSIGNB
0010e6 dff0      	RCALL __DIVB21U
0010e7 f40e      	BRTC __DIVB211
0010e8 95e1      	NEG  R30
                 __DIVB211:
0010e9 9508      	RET
                 
                 __DIVD21U:
0010ea 933f      	PUSH R19
0010eb 934f      	PUSH R20
0010ec 935f      	PUSH R21
0010ed 2400      	CLR  R0
0010ee 2411      	CLR  R1
0010ef 2744      	CLR  R20
0010f0 2755      	CLR  R21
0010f1 e230      	LDI  R19,32
                 __DIVD21U1:
0010f2 0faa      	LSL  R26
0010f3 1fbb      	ROL  R27
0010f4 1f88      	ROL  R24
0010f5 1f99      	ROL  R25
0010f6 1c00      	ROL  R0
0010f7 1c11      	ROL  R1
0010f8 1f44      	ROL  R20
0010f9 1f55      	ROL  R21
0010fa 1a0e      	SUB  R0,R30
0010fb 0a1f      	SBC  R1,R31
0010fc 0b46      	SBC  R20,R22
0010fd 0b57      	SBC  R21,R23
0010fe f428      	BRCC __DIVD21U2
0010ff 0e0e      	ADD  R0,R30
001100 1e1f      	ADC  R1,R31
001101 1f46      	ADC  R20,R22
001102 1f57      	ADC  R21,R23
001103 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
001104 60a1      	SBR  R26,1
                 __DIVD21U3:
001105 953a      	DEC  R19
001106 f759      	BRNE __DIVD21U1
001107 01fd      	MOVW R30,R26
001108 01bc      	MOVW R22,R24
001109 01d0      	MOVW R26,R0
00110a 01ca      	MOVW R24,R20
00110b 915f      	POP  R21
00110c 914f      	POP  R20
00110d 913f      	POP  R19
00110e 9508      	RET
                 
                 __MODB21:
00110f 94e8      	CLT
001110 ffa7      	SBRS R26,7
001111 c002      	RJMP __MODB211
001112 95a1      	NEG  R26
001113 9468      	SET
                 __MODB211:
001114 fde7      	SBRC R30,7
001115 95e1      	NEG  R30
001116 dfc0      	RCALL __DIVB21U
001117 2fea      	MOV  R30,R26
001118 f40e      	BRTC __MODB212
001119 95e1      	NEG  R30
                 __MODB212:
00111a 9508      	RET
                 
                 __MODD21U:
00111b dfce      	RCALL __DIVD21U
00111c 01fd      	MOVW R30,R26
00111d 01bc      	MOVW R22,R24
00111e 9508      	RET
                 
                 __CHKSIGNB:
00111f 94e8      	CLT
001120 ffe7      	SBRS R30,7
001121 c002      	RJMP __CHKSB1
001122 95e1      	NEG  R30
001123 9468      	SET
                 __CHKSB1:
001124 ffa7      	SBRS R26,7
001125 c004      	RJMP __CHKSB2
001126 95a1      	NEG  R26
001127 f800      	BLD  R0,0
001128 9403      	INC  R0
001129 fa00      	BST  R0,0
                 __CHKSB2:
00112a 9508      	RET
                 
                 __GETW1P:
00112b 91ed      	LD   R30,X+
00112c 91fc      	LD   R31,X
00112d 9711      	SBIW R26,1
00112e 9508      	RET
                 
                 __GETD1P:
00112f 91ed      	LD   R30,X+
001130 91fd      	LD   R31,X+
001131 916d      	LD   R22,X+
001132 917c      	LD   R23,X
001133 9713      	SBIW R26,3
001134 9508      	RET
                 
                 __PUTDP1:
001135 93ed      	ST   X+,R30
001136 93fd      	ST   X+,R31
001137 936d      	ST   X+,R22
001138 937c      	ST   X,R23
001139 9508      	RET
                 
                 __GETD1S0:
00113a 81e8      	LD   R30,Y
00113b 81f9      	LDD  R31,Y+1
00113c 816a      	LDD  R22,Y+2
00113d 817b      	LDD  R23,Y+3
00113e 9508      	RET
                 
                 __GETD2S0:
00113f 81a8      	LD   R26,Y
001140 81b9      	LDD  R27,Y+1
001141 818a      	LDD  R24,Y+2
001142 819b      	LDD  R25,Y+3
001143 9508      	RET
                 
                 __PUTD1S0:
001144 83e8      	ST   Y,R30
001145 83f9      	STD  Y+1,R31
001146 836a      	STD  Y+2,R22
001147 837b      	STD  Y+3,R23
001148 9508      	RET
                 
                 __PUTPARD1L:
001149 e060      	LDI  R22,0
00114a e070      	LDI  R23,0
                 __PUTPARD1:
00114b 937a      	ST   -Y,R23
00114c 936a      	ST   -Y,R22
00114d 93fa      	ST   -Y,R31
00114e 93ea      	ST   -Y,R30
00114f 9508      	RET
                 
                 __CDF2U:
001150 9468      	SET
001151 c001      	RJMP __CDF2U0
                 __CDF2:
001152 94e8      	CLT
                 __CDF2U0:
001153 d001      	RCALL __SWAPD12
001154 de13      	RCALL __CDF1U0
                 
                 __SWAPD12:
001155 2e18      	MOV  R1,R24
001156 2f86      	MOV  R24,R22
001157 2d61      	MOV  R22,R1
001158 2e19      	MOV  R1,R25
001159 2f97      	MOV  R25,R23
00115a 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00115b 2e1b      	MOV  R1,R27
00115c 2fbf      	MOV  R27,R31
00115d 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00115e 2e1a      	MOV  R1,R26
00115f 2fae      	MOV  R26,R30
001160 2de1      	MOV  R30,R1
001161 9508      	RET
                 
                 __CPD10:
001162 9730      	SBIW R30,0
001163 4060      	SBCI R22,0
001164 4070      	SBCI R23,0
001165 9508      	RET
                 
                 __SAVELOCR6:
001166 935a      	ST   -Y,R21
                 __SAVELOCR5:
001167 934a      	ST   -Y,R20
                 __SAVELOCR4:
001168 933a      	ST   -Y,R19
                 __SAVELOCR3:
001169 932a      	ST   -Y,R18
                 __SAVELOCR2:
00116a 931a      	ST   -Y,R17
00116b 930a      	ST   -Y,R16
00116c 9508      	RET
                 
                 __LOADLOCR6:
00116d 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00116e 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00116f 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001170 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001171 8119      	LDD  R17,Y+1
001172 8108      	LD   R16,Y
001173 9508      	RET
                 
                 __INITLOCW:
001174 0fac      	ADD  R26,R28
001175 1fbd      	ADC  R27,R29
                 __INITLOC0:
001176 9005      	LPM  R0,Z+
001177 920d      	ST   X+,R0
001178 9701      	SBIW R24,1
001179 f7e1      	BRNE __INITLOC0
00117a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 : 110 r1 :  48 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   5 r7 :   2 
r8 :   0 r9 :   4 r10:   6 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  75 r17:  99 r18:  75 r19:  76 r20:  72 r21: 105 r22: 156 r23: 136 
r24:  99 r25:  85 r26: 327 r27: 168 r28: 106 r29:   3 r30: 858 r31: 370 
x  : 185 y  : 617 z  :  63 
Registers used: 28 out of 35 (80.0%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  26 add   :  23 
adiw  :  53 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  11 brcs  :   5 break :   0 breq  :  71 
brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   4 brmi  :  12 brne  :  77 brpl  :   9 brsh  :  11 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   1 bst   :   3 call  : 357 
cbi   :   2 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  66 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  22 cpc   :  25 cpi   : 128 cpse  :   0 dec   :  11 des   :   0 
elpm  :   0 eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 
ijmp  :   0 in    :  28 inc   :   6 jmp   :  54 ld    : 138 ldd   : 284 
ldi   : 420 lds   :  13 lpm   :  16 lsl   :  14 lsr   :   4 mov   : 117 
movw  : 151 mul   :  17 muls  :   0 mulsu :   0 neg   :  11 nop   :   0 
or    :   1 ori   :  10 out   :  31 pop   :  57 push  :  57 rcall :  87 
ret   : 136 reti  :   4 rjmp  : 195 rol   :  32 ror   :  16 sbc   :  12 
sbci  :  77 sbi   :   5 sbic  :   0 sbis  :   2 sbiw  :  47 sbr   :   4 
sbrc  :   6 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :  10 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 301 std   : 128 sts   :  15 sub   :   6 subi  : 114 
swap  :   0 tst   :  27 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0022f6   8308    642   8950  131072   6.8%
[.dseg] 0x000100 0x00057e      0    126    126    4351   2.9%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 13 warnings
